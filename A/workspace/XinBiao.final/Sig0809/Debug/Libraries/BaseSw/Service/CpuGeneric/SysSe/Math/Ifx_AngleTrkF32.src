	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 99277908"
	.compiler_invocation	"ctc --dep-file=Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\.Ifx_AngleTrkF32.o.d --fp-model=c,f,l,n,r,S,T,z -D__CPU__=tc26x -D__CPU_TC26X__ --core=tc1.6.x --iso=99 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\CODE -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Build -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\DataHandling -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\InternalMux -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Asc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Lin -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Spi -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Icu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmBc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmHl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Timer -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TimerWithTrigger -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TPwm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Cam -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Irq -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Dma -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Rdc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Dts -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Eray -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Phy_Pef7071 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Crc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Fft -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\IncrEnc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Pwm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Timer -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim\\In -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Pwm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Trig -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\I2c -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Driver -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Msc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Can -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Io -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Psi5 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Psi5s -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiMaster -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiSlave -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Src -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Adc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Platform -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Platform\\Tricore -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Platform\\Tricore\\Compilers -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Sfr -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Sfr\\TC26B -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Service -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Service\\CpuGeneric -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\seekfree_libraries -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\seekfree_libraries\\common -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\seekfree_peripheral -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\USER -g2 -wW557 --make-target=Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.o -t0 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O0 --default-a1-size=0 --default-a0-size=0 --source --align=0 --switch=auto --error-limit=42 -o Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.src ..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c"
	.compiler_name		"ctc"
	;source	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c'

	
$TC16X
	
	.sdecl	'.text.Ifx_AngleTrkF32.round_f',code,cluster('round_f')
	.sect	'.text.Ifx_AngleTrkF32.round_f'
	.align	2
	
	.global	round_f

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	     1  /**
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	     2   * \file Ifx_AngleTrkF32.c
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	     3   * \brief Angle-tracking observer for sin/cos analog position sensor
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	     4   *
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	     5   *
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	     6   * \version disabled
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	     8   *
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	     9   *
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    10   *                                 IMPORTANT NOTICE
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    11   *
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    12   *
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    16   * terms of use are agreed, use of this file is subject to following:
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    17  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    18  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    20  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    22   * organization obtaining a copy of the software and accompanying 
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    26   * Software is furnished to do so, all subject to the following:
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    27  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    28   * The copyright notices in the Software and this entire statement, including
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    32   * solely in the form of machine-executable object code generated by a source
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    33   * language processor.
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    34  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    41   * DEALINGS IN THE SOFTWARE.
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    42  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    43   *
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    44   */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    45  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    46  //________________________________________________________________________________________
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    47  // INCLUDES
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    48  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    49  #include "Ifx_AngleTrkF32.h"
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    50  #include <math.h>
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    51  #include "string.h"
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    52  #include "Ifx_LutAtan2F32.h"
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    53  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    54  //________________________________________________________________________________________
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    55  // LOCAL DEFINITIONS
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    56  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    57  #define IFX_ANGLETRKF32_ATAN2F Ifx_LutAtan2F32_float32
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    58  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    59  //________________________________________________________________________________________
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    60  // LOCAL FUNCTION PROTOTYPES
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    61  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    62  void Ifx_AngleTrkF32_setUserSampling(Ifx_AngleTrkF32 *aObsv, float32 Ts);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    63  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    64  //________________________________________________________________________________________
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    65  // GLOBAL VARIABLES
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    66  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    67  //________________________________________________________________________________________
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    68  // LOCAL VARIABLES
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    69  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    70  //________________________________________________________________________________________
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    71  // LOCAL FUNCTION IMPLEMENTATIONS
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    72  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    73  IFX_INLINE float32 Ifx_AngleTrkF32_bound(float32 angle, float32 periodPerRotation)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    74  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    75  	IFX_UNUSED_PARAMETER(periodPerRotation);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    76      float32 fullPeriod = 2 * IFX_PI;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    77  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    78      if (angle >= (fullPeriod / 2))
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    79      {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    80          angle = angle - fullPeriod;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    81      }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    82      else if (angle < (-fullPeriod / 2))
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    83      {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    84          angle = angle + fullPeriod;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    85      }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    86      else
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    87      {}
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    88  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    89      return angle;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    90  }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    91  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    92  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    93  IFX_INLINE float32 Ifx_AngleTrkF32_boundInput(float32 input)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    94  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    95      return Ifx_AngleTrkF32_bound(input, 1);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    96  }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    97  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    98  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    99  float32 round_f(float32 val)
; Function round_f
.L47:
round_f:	.type	func

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   100  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   101      /*lint -e632 -e633 -e524*/
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   102      sint32 val_i = (sint32)val;
	ftoiz	d0,d4
.L349:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   103  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   104      /*lint +e632 +e633 +e524*/
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   105      if ((val - (float32)val_i) > 0.5)
	itof	d15,d0
.L770:
	sub.f	d15,d4,d15
.L771:
	movh	d1,#16128
.L772:
	cmp.f	d15,d15,d1
	jnz.t	d15:2,.L2
.L773:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   106      {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   107          val = (float32)(val_i + 1);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   108      }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   109      else
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   110      {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   111          val = (float32)val_i;
	itof	d2,d0
.L348:
	j	.L3
.L2:
	add	d0,#1
.L350:
	itof	d2,d0
.L3:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   112      }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   113  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   114      return val;
	j	.L4

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   115  }
.L4:
	ret
.L339:
	
__round_f_function_end:
	.size	round_f,__round_f_function_end-round_f
.L219:
	; End of function
	
	.sdecl	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_setControlGains',code,cluster('Ifx_AngleTrkF32_setControlGains')
	.sect	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_setControlGains'
	.align	2
	
	.global	Ifx_AngleTrkF32_setControlGains

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   116  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   117  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   118  //________________________________________________________________________________________
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   119  // PUBLIC FUNCTION IMPLEMENTATIONS
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   120  #define ATO_T   (15e-3f)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   121  #define ATO_K   (39.05f)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   122  #define ATO_PSI (1.5f * IFX_PI)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   123  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   124  void Ifx_AngleTrkF32_setControlGains(Ifx_AngleTrkF32_CfgData *cfgData, float32 K, float32 T, float32 psi)
; Function Ifx_AngleTrkF32_setControlGains
.L49:
Ifx_AngleTrkF32_setControlGains:	.type	func

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   125  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   126      cfgData->kp = ((2 * K) + (psi * psi) + 1) / (T * T);
	movh	d15,#16384
.L778:
	mul.f	d0,d6,d6
.L779:
	madd.f	d15,d0,d4,d15
.L780:
	movh	d0,#16256
.L781:
	add.f	d15,d15,d0
.L782:
	mul.f	d0,d5,d5
.L783:
	div.f	d15,d15,d0
.L784:
	st.w	[a4],d15
.L785:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   127      cfgData->ki = K * ((psi * psi) + 1) / (T * T * T);
	movh	d15,#16256
.L786:
	madd.f	d15,d15,d6,d6
.L787:
	mul.f	d15,d4,d15
.L788:
	mul.f	d0,d5,d5
.L789:
	mul.f	d0,d0,d5
.L790:
	div.f	d15,d15,d0
.L791:
	st.w	[a4]4,d15
.L792:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   128      cfgData->kd = (K + 2) / T;
	movh	d15,#16384
.L793:
	add.f	d15,d4,d15
.L794:
	div.f	d15,d15,d5
.L795:
	st.w	[a4]8,d15
.L796:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   129  }
	ret
.L342:
	
__Ifx_AngleTrkF32_setControlGains_function_end:
	.size	Ifx_AngleTrkF32_setControlGains,__Ifx_AngleTrkF32_setControlGains_function_end-Ifx_AngleTrkF32_setControlGains
.L224:
	; End of function
	
	.sdecl	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_initConfig',code,cluster('Ifx_AngleTrkF32_initConfig')
	.sect	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_initConfig'
	.align	2
	
	.global	Ifx_AngleTrkF32_initConfig

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   130  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   131  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   132  /** \brief Fill config with default values */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   133  void Ifx_AngleTrkF32_initConfig(Ifx_AngleTrkF32_Config *config, sint16 *sinIn, sint16 *cosIn)
; Function Ifx_AngleTrkF32_initConfig
.L51:
Ifx_AngleTrkF32_initConfig:	.type	func
	sub.a	a10,#24
.L351:
	mov.aa	a15,a4
.L354:
	mov.aa	a12,a5
.L355:
	mov.aa	a13,a6
.L356:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   134  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   135      Ifx_AngleTrkF32_CfgData cfgData;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   136      Ifx_AngleTrkF32_setControlGains(&cfgData, ATO_K, ATO_T, ATO_PSI);
	lea	a4,[a10]0
.L352:
	mov	d4,#13107
	addih	d4,d4,#16924
.L474:
	mov.u	d5,#49807
	addih	d5,d5,#15477
.L475:
	mov.u	d6,#52196
	addih	d6,d6,#16534
	call	Ifx_AngleTrkF32_setControlGains
.L353:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   137      config->kp                = cfgData.kp;
	ld.w	d15,[a10]
.L476:
	st.w	[a15],d15
.L477:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   138      config->ki                = cfgData.ki;
	ld.w	d15,[a10]4
.L478:
	st.w	[a15]4,d15
.L479:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   139      config->kd                = cfgData.kd;
	ld.w	d15,[a10]8
.L480:
	st.w	[a15]8,d15
.L481:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   140      config->sinIn             = sinIn;
	st.a	[a15]40,a12
.L482:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   141      config->cosIn             = cosIn;
	st.a	[a15]44,a13
.L483:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   142      config->errorThreshold    = 5.0f / 180 * IFX_PI;
	mov.u	d15,#47299
	addih	d15,d15,#15794
.L484:
	st.w	[a15]16,d15
.L485:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   143      config->sqrAmplMax        = (sint32)((1.01f * 1.01f) * 2048);
	mov	d15,#2089
.L486:
	st.w	[a15]20,d15
.L487:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   144      config->sqrAmplMin        = (sint32)((0.99f * 0.99f) * 2048);
	mov	d15,#2007
.L488:
	st.w	[a15]24,d15
.L489:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   145      config->speedLpfFc        = 100;
	movh	d15,#17096
.L490:
	st.w	[a15]12,d15
.L491:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   146      config->periodPerRotation = 1;
	mov	d15,#1
.L492:
	st.h	[a15]28,d15
.L493:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   147      config->reversed          = FALSE;
	mov	d15,#0
.L494:
	st.b	[a15]30,d15
.L495:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   148      config->offset            = 0;
	mov	d15,#0
.L496:
	st.w	[a15]36,d15
.L497:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   149      config->resolution        = (1UL << 12);/** \brief 12-bit default resolution */
	mov	d15,#4096
.L498:
	st.w	[a15]32,d15
.L499:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   150  }
	ret
.L236:
	
__Ifx_AngleTrkF32_initConfig_function_end:
	.size	Ifx_AngleTrkF32_initConfig,__Ifx_AngleTrkF32_initConfig_function_end-Ifx_AngleTrkF32_initConfig
.L109:
	; End of function
	
	.sdecl	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_setUserSampling',code,cluster('Ifx_AngleTrkF32_setUserSampling')
	.sect	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_setUserSampling'
	.align	2
	
	.global	Ifx_AngleTrkF32_setUserSampling

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   151  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   152  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   153  void Ifx_AngleTrkF32_setUserSampling(Ifx_AngleTrkF32 *aObsv, float32 Ts)
; Function Ifx_AngleTrkF32_setUserSampling
.L53:
Ifx_AngleTrkF32_setUserSampling:	.type	func

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   154  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   155      aObsv->base.Ts = Ts;
	st.w	[a4]26,d4
.L762:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   156      aObsv->halfTs  = aObsv->base.Ts / 2.0F;
	movh	d15,#16384
.L763:
	div.f	d15,d4,d15
.L764:
	st.w	[a4]68,d15
.L765:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   157  }
	ret
.L336:
	
__Ifx_AngleTrkF32_setUserSampling_function_end:
	.size	Ifx_AngleTrkF32_setUserSampling,__Ifx_AngleTrkF32_setUserSampling_function_end-Ifx_AngleTrkF32_setUserSampling
.L214:
	; End of function
	
	.sdecl	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_init',code,cluster('Ifx_AngleTrkF32_init')
	.sect	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_init'
	.align	2
	
	.global	Ifx_AngleTrkF32_init

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   158  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   159  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   160  /** \brief Initialize the Angle Tracking object
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   161   * \param aObsv Pointer to the Ifx_AngleTrkF32 object
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   162   * \param config Pointer to the configuration data
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   163   * \param Ts sampling period in seconds
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   164   */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   165  void Ifx_AngleTrkF32_init(Ifx_AngleTrkF32 *aObsv, const Ifx_AngleTrkF32_Config *config, float32 Ts)
; Function Ifx_AngleTrkF32_init
.L55:
Ifx_AngleTrkF32_init:	.type	func
	sub.a	a10,#16
.L357:
	mov.aa	a12,a4
.L360:
	mov.aa	a15,a5
.L361:
	mov	d8,d4
.L362:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   166  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   167      aObsv->base.offset            = config->offset;
	ld.w	d15,[a15]36
.L404:
	st.w	[a12]14,d15
.L405:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   168      aObsv->base.resolution        = config->resolution;
	ld.w	d15,[a15]32
.L406:
	st.w	[a12]22,d15
.L407:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   169      aObsv->base.reversed          = config->reversed;
	ld.bu	d0,[a15]30
.L408:
	st.b	[a12]18,d0
.L409:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   170      aObsv->base.Ts                = Ts;
	st.w	[a12]26,d8
.L410:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   171      aObsv->base.rawPosition       = 0;
	mov	d0,#0
.L411:
	st.w	[a12],d0
.L412:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   172      aObsv->base.direction         = IfxStdIf_Pos_Dir_unknown;
	mov	d15,#2
.L413:
	st.b	[a12]8,d15
.L414:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   173      aObsv->base.turn              = 0;
	mov	d15,#0
.L415:
	st.w	[a12]4,d15
.L416:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   174      aObsv->base.status.status     = 0;
	mov	d0,#0
.L417:
	st.w	[a12]10,d0
.L418:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   175      aObsv->base.periodPerRotation = config->periodPerRotation;
	ld.hu	d15,[a15]28
.L419:
	st.h	[a12]20,d15
.L420:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   176      aObsv->base.positionConst     = 1.0 / (float32)aObsv->base.resolution * 2.0 * IFX_PI;
	movh	d15,#16256
.L421:
	ld.w	d0,[a12]22
.L422:
	itof	d0,d0
.L423:
	div.f	d15,d15,d0
.L424:
	movh	d0,#16384
.L425:
	mul.f	d15,d15,d0
.L426:
	mov	d0,#4059
	addih	d0,d0,#16457
.L427:
	mul.f	d15,d15,d0
.L428:
	st.w	[a12]30,d15
.L429:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   177  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   178      aObsv->cfgData.kd             = config->kd;
	ld.w	d15,[a15]8
.L430:
	st.w	[a12]44,d15
.L431:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   179      aObsv->cfgData.ki             = config->ki;
	ld.w	d15,[a15]4
.L432:
	st.w	[a12]40,d15
.L433:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   180      aObsv->cfgData.kp             = config->kp;
	ld.w	d15,[a15]
.L434:
	st.w	[a12]36,d15
.L435:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   181      aObsv->cfgData.errorThreshold = config->errorThreshold;
	ld.w	d15,[a15]16
.L436:
	st.w	[a12]48,d15
.L437:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   182      aObsv->cfgData.sqrAmplMax     = config->sqrAmplMax;
	ld.w	d15,[a15]20
.L438:
	st.w	[a12]52,d15
.L439:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   183      aObsv->cfgData.sqrAmplMin     = config->sqrAmplMin;
	ld.w	d15,[a15]24
.L440:
	st.w	[a12]56,d15
.L441:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   184      aObsv->sinIn                  = config->sinIn;
	ld.a	a2,[a15]40
.L442:
	st.a	[a12]60,a2
.L443:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   185      aObsv->cosIn                  = config->cosIn;
	ld.a	a2,[a15]44
.L444:
	st.a	[a12]64,a2
.L445:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   186  #pragma warning 549
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   187  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   188      if (!__neqf(config->kp, 0) && !__neqf(config->ki, 0) && !__neqf(config->kp, 0))
	ld.w	d15,[a15]
	mov	d0,#0
	cmp.f	d15,d15,d0
	jnz.t	d15:2,.L5
	ld.w	d15,[a15]
	mov	d0,#0
	cmp.f	d15,d15,d0
	jnz.t	d15:0,.L6
.L446:
	ld.w	d15,[a15]4
	mov	d0,#0
	cmp.f	d15,d15,d0
	jnz.t	d15:2,.L7
	ld.w	d15,[a15]4
	mov	d0,#0
	cmp.f	d15,d15,d0
	jnz.t	d15:0,.L8
.L447:
	mov	d15,#0
	mov	d0,#0
	cmp.f	d15,d15,d0
	jnz.t	d15:2,.L9
	mov	d15,#0
	mov	d0,#0
	cmp.f	d15,d15,d0
	jnz.t	d15:0,.L10
.L448:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   189      {   /* all gains are zero, use default */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   190          /* FIXME might not be requied as set by Ifx_AngleTrkF32_initConfig() */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   191          Ifx_AngleTrkF32_setControlGains(&aObsv->cfgData, ATO_K, ATO_T, ATO_PSI);
	lea	a4,[a12]36
.L359:
	mov	d4,#13107
.L358:
	addih	d4,d4,#16924
.L449:
	mov.u	d5,#49807
	addih	d5,d5,#15477
.L450:
	mov.u	d6,#52196
	addih	d6,d6,#16534
	call	Ifx_AngleTrkF32_setControlGains
.L10:
.L8:
.L6:
.L5:
.L7:
.L9:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   192      }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   193  #pragma warning default
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   194      Ifx_AngleTrkF32_setUserSampling(aObsv, Ts);
	mov.aa	a4,a12
.L363:
	mov	d4,d8
.L365:
	call	Ifx_AngleTrkF32_setUserSampling
.L364:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   195      aObsv->angleErr  = 0.0F;
	mov	d15,#0
.L451:
	st.w	[a12]96,d15
.L452:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   196      aObsv->angleEst  = 0.0F;
	mov	d15,#0
.L453:
	st.w	[a12]80,d15
.L454:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   197      aObsv->accelEst  = 0.0F;
	mov	d15,#0
.L455:
	st.w	[a12]92,d15
.L456:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   198      aObsv->speedEstA = 0.0F;
	mov	d15,#0
.L457:
	st.w	[a12]84,d15
.L458:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   199      aObsv->speedEstB = 0.0F;
	mov	d15,#0
.L459:
	st.w	[a12]88,d15
.L460:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   200      aObsv->angleRef  = 0.0F;
	mov	d15,#0
.L461:
	st.w	[a12]76,d15
.L232:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   201      {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   202  #if IFX_CFG_ANGLETRKF32_SPEED_FILTER
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   203          Ifx_LowPassPt1F32_Config lpfConfig;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   204          lpfConfig.gain            = 1.0F;
	movh	d15,#16256
.L462:
	st.w	[a10]4,d15
.L463:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   205          lpfConfig.cutOffFrequency = (2 * IFX_PI * config->speedLpfFc);
	ld.w	d15,[a15]12
.L464:
	mov	d0,#4059
	addih	d0,d0,#16585
.L465:
	mul.f	d15,d15,d0
.L466:
	st.w	[a10],d15
.L467:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   206          lpfConfig.samplingTime    = Ts;
	st.w	[a10]8,d8
.L468:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   207          Ifx_LowPassPt1F32_init(&aObsv->speedLpf, &lpfConfig);
	lea	a4,[a12]100
.L469:
	lea	a5,[a10]0
	call	Ifx_LowPassPt1F32_init
.L233:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   208  #endif
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   209      }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   210  }
	ret
.L225:
	
__Ifx_AngleTrkF32_init_function_end:
	.size	Ifx_AngleTrkF32_init,__Ifx_AngleTrkF32_init_function_end-Ifx_AngleTrkF32_init
.L104:
	; End of function
	
	.sdecl	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_step',code,cluster('Ifx_AngleTrkF32_step')
	.sect	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_step'
	.align	2
	
	.global	Ifx_AngleTrkF32_step

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   211  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   212  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   213  /** \brief Step function of Ifx_AngleTrkF32 should be called at every sampling period provided
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   214   * during initialisation (call to Ifx_AngleTrkF32_init()).
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   215   *
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   216   * \note This function is automatically called by Ifx_AngleTrkF32_update()
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   217   * \param aObsv Pointer to the Ifx_AngleTrkF32 object
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   218   * \param sinIn sine input signal. The offset shall be zero.
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   219   * \param cosIn cosine input signal. The offset shall be zero.
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   220   * \param phase phase of input signal.
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   221   * \note This function returns the angular position in radians
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   222   * \note The amplitude of both sinIn and cosIn signal shall be the same.
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   223   */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   224  float32 Ifx_AngleTrkF32_step(Ifx_AngleTrkF32 *aObsv, sint16 sinIn, sint16 cosIn, float32 phase)
; Function Ifx_AngleTrkF32_step
.L57:
Ifx_AngleTrkF32_step:	.type	func
	mov.aa	a15,a4
.L369:
	mov	d8,d6
.L370:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   225  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   226      float32 angleRef, angleEst, dAccel, dSpeed, dAngle;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   227  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   228      if (aObsv->base.reversed != FALSE)
	ld.bu	d15,[a15]18
.L504:
	jeq	d15,#0,.L11
.L505:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   229      {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   230          angleRef = IFX_ANGLETRKF32_ATAN2F((float32)cosIn, (float32)sinIn);
	itof	d15,d5
.L506:
	itof	d5,d4
.L367:
	mov	d4,d15
.L368:
	call	Ifx_LutAtan2F32_float32
.L366:
	j	.L12
.L11:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   231      }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   232      else
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   233      {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   234          angleRef = IFX_ANGLETRKF32_ATAN2F((float32)sinIn, (float32)cosIn);
	itof	d4,d4
.L372:
	itof	d5,d5
.L371:
	call	Ifx_LutAtan2F32_float32
.L12:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   235      }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   236  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   237      aObsv->angleAtan = angleRef;
	st.w	[a15]72,d2
.L507:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   238      angleRef         = angleRef + phase;
	add.f	d15,d2,d8
.L373:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   239  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   240      aObsv->angleRef  = angleRef;
	st.w	[a15]76,d15
.L508:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   241  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   242      // Acceleration, zero-order-hold integrator:
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   243      dAccel          = aObsv->cfgData.ki * aObsv->angleErr;
	ld.w	d15,[a15]40
.L374:
	ld.w	d0,[a15]96
.L509:
	mul.f	d15,d15,d0
.L375:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   244      aObsv->accelEst = aObsv->accelEst + (dAccel * aObsv->base.Ts);
	ld.w	d0,[a15]26
.L510:
	ld.w	d1,[a15]92
.L511:
	madd.f	d15,d1,d15,d0
.L376:
	st.w	[a15]92,d15
.L512:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   245  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   246      // Speed, zero-order-hold integrator:
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   247      dSpeed           = ((aObsv->cfgData.kp * aObsv->angleErr) + aObsv->accelEst);
	ld.w	d15,[a15]36
.L513:
	ld.w	d0,[a15]96
.L514:
	ld.w	d1,[a15]92
.L515:
	madd.f	d15,d1,d15,d0
.L377:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   248      aObsv->speedEstA = aObsv->speedEstA + (dSpeed * aObsv->base.Ts);
	ld.w	d0,[a15]26
.L516:
	ld.w	d1,[a15]84
.L517:
	madd.f	d15,d1,d15,d0
.L378:
	st.w	[a15]84,d15
.L518:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   249  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   250      // Angle, first-order-hold integrator:
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   251      dAngle           = ((aObsv->cfgData.kd * aObsv->angleErr) + aObsv->speedEstA);
	ld.w	d15,[a15]44
.L519:
	ld.w	d0,[a15]96
.L520:
	ld.w	d1,[a15]84
.L521:
	madd.f	d15,d1,d15,d0
.L379:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   252      angleEst         = aObsv->angleEst + ((dAngle + aObsv->speedEstB) * aObsv->halfTs);
	ld.w	d0,[a15]88
.L522:
	add.f	d0,d15,d0
.L523:
	ld.w	d1,[a15]68
.L524:
	ld.w	d2,[a15]80
.L525:
	madd.f	d2,d2,d0,d1
.L380:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   253      aObsv->speedEstB = dAngle;
	st.w	[a15]88,d15
.L256:
	movh	d15,#16256
.L261:
	extr.u	d15,d15,#23,#8
	ne	d15,d15,#0

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    75  	IFX_UNUSED_PARAMETER(periodPerRotation);      (inlined)
	jeq	d15,#0,.L13
.L13:
	mov	d0,#4059
.L382:
	addih	d0,d0,#16585
.L526:
	movh	d15,#16384
.L527:
	div.f	d15,d0,d15
.L528:
	cmp.f	d15,d2,d15
	and	d15,#6
	ne	d15,d15,#0
.L529:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    78      if (angle >= (fullPeriod / 2))      (inlined)
	jeq	d15,#0,.L14
.L530:
	sub.f	d2,d2,d0
.L531:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    80          angle = angle - fullPeriod;      (inlined)
	j	.L15

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    78      if (angle >= (fullPeriod / 2))      (inlined)
.L14:
	insn.t	d15,d0:31,d0:31
.L532:
	movh	d1,#16384
.L533:
	div.f	d15,d15,d1
.L534:
	cmp.f	d15,d2,d15
	extr.u	d15,d15,#0,#1
.L535:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    82      else if (angle < (-fullPeriod / 2))      (inlined)
	jeq	d15,#0,.L16
.L536:
	add.f	d2,d2,d0
.L537:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    84          angle = angle + fullPeriod;      (inlined)
	j	.L17

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    82      else if (angle < (-fullPeriod / 2))      (inlined)
.L16:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    86      else      (inlined)
.L17:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    82      else if (angle < (-fullPeriod / 2))      (inlined)
.L15:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    89      return angle;      (inlined)
	j	.L18

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    90  }      (inlined)
.L18:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    95      return Ifx_AngleTrkF32_bound(input, 1);      (inlined)
	j	.L19

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    96  }      (inlined)
.L19:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   254  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   255      aObsv->angleEst  = Ifx_AngleTrkF32_boundInput(angleEst);
	st.w	[a15]80,d2
.L538:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   256  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   257      // Error, is calculated here to compensate one period delay
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   258      aObsv->angleErr       = Ifx_AngleTrkF32_boundInput(aObsv->angleRef - aObsv->angleEst);
	ld.w	d15,[a15]76
.L539:
	sub.f	d0,d15,d2
.L269:
	movh	d15,#16256
.L270:
	extr.u	d15,d15,#23,#8
	ne	d15,d15,#0

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    75  	IFX_UNUSED_PARAMETER(periodPerRotation);      (inlined)
	jeq	d15,#0,.L20
.L20:
	mov	d1,#4059
.L383:
	addih	d1,d1,#16585
.L540:
	movh	d15,#16384
.L541:
	div.f	d15,d1,d15
.L542:
	cmp.f	d15,d0,d15
	and	d15,#6
	ne	d15,d15,#0
.L543:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    78      if (angle >= (fullPeriod / 2))      (inlined)
	jeq	d15,#0,.L21
.L544:
	sub.f	d0,d0,d1
.L545:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    80          angle = angle - fullPeriod;      (inlined)
	j	.L22

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    78      if (angle >= (fullPeriod / 2))      (inlined)
.L21:
	insn.t	d15,d1:31,d1:31
.L546:
	movh	d2,#16384
.L381:
	div.f	d15,d15,d2
.L547:
	cmp.f	d15,d0,d15
	extr.u	d15,d15,#0,#1
.L548:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    82      else if (angle < (-fullPeriod / 2))      (inlined)
	jeq	d15,#0,.L23
.L549:
	add.f	d0,d0,d1
.L550:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    84          angle = angle + fullPeriod;      (inlined)
	j	.L24

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    82      else if (angle < (-fullPeriod / 2))      (inlined)
.L23:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    86      else      (inlined)
.L24:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    82      else if (angle < (-fullPeriod / 2))      (inlined)
.L22:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    89      return angle;      (inlined)
	j	.L25

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    90  }      (inlined)
.L25:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    95      return Ifx_AngleTrkF32_bound(input, 1);      (inlined)
	j	.L26

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	    96  }      (inlined)
.L26:
	st.w	[a15]96,d0
.L551:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   259  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   260      aObsv->base.direction = aObsv->speedEstB > 0 ? IfxStdIf_Pos_Dir_forward : IfxStdIf_Pos_Dir_backward;
	ld.w	d15,[a15]88
.L552:
	mov	d0,#0
.L553:
	cmp.f	d15,d15,d0
	jnz.t	d15:2,.L27
.L554:
	mov	d15,#1
.L555:
	j	.L28
.L27:
	mov	d15,#0
.L28:
	st.b	[a15]8,d15
.L556:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   261  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   262  #if IFX_CFG_ANGLETRKF32_SPEED_FILTER
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   263      // Filter speed:
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   264      Ifx_LowPassPt1F32_do(&aObsv->speedLpf, aObsv->speedEstB);
	lea	a4,[a15]100
.L557:
	ld.w	d4,[a15]88
	call	Ifx_LowPassPt1F32_do
.L384:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   265  #endif
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   266  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   267      return aObsv->angleEst;
	ld.w	d2,[a15]80
.L558:
	j	.L29

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   268  }
.L29:
	ret
.L244:
	
__Ifx_AngleTrkF32_step_function_end:
	.size	Ifx_AngleTrkF32_step,__Ifx_AngleTrkF32_step_function_end-Ifx_AngleTrkF32_step
.L114:
	; End of function
	
	.sdecl	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_setOffset',code,cluster('Ifx_AngleTrkF32_setOffset')
	.sect	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_setOffset'
	.align	2
	
	.global	Ifx_AngleTrkF32_setOffset

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   269  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   270  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   271  /** \brief Set the position offset (in ticks)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   272   * \param aObsv Pointer to the Ifx_AngleTrkF32 object
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   273   * \param offset Position offset in ticks 
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   274   */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   275  void Ifx_AngleTrkF32_setOffset(Ifx_AngleTrkF32 *aObsv, IfxStdIf_Pos_RawAngle offset)
; Function Ifx_AngleTrkF32_setOffset
.L59:
Ifx_AngleTrkF32_setOffset:	.type	func

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   276  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   277      Ifx_AngleTrkF32_PosIf *base = &aObsv->base;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   278      base->offset = offset;
	st.w	[a4]14,d4
.L683:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   279  }
	ret
.L319:
	
__Ifx_AngleTrkF32_setOffset_function_end:
	.size	Ifx_AngleTrkF32_setOffset,__Ifx_AngleTrkF32_setOffset_function_end-Ifx_AngleTrkF32_setOffset
.L194:
	; End of function
	
	.sdecl	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_updateStatus',code,cluster('Ifx_AngleTrkF32_updateStatus')
	.sect	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_updateStatus'
	.align	2
	
	.global	Ifx_AngleTrkF32_updateStatus

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   280  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   281  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   282  /** \brief Update the status flags.
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   283   * \param aObsv Pointer to the Ifx_AngleTrkF32 object
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   284   * \param sinIn Sinus value
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   285   * \param cosIn Cosinus value
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   286   * \note This function is automatically called by Ifx_AngleTrkF32_update()
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   287   */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   288  void Ifx_AngleTrkF32_updateStatus(Ifx_AngleTrkF32 *aObsv, sint16 sinIn, sint16 cosIn)
; Function Ifx_AngleTrkF32_updateStatus
.L61:
Ifx_AngleTrkF32_updateStatus:	.type	func

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   289  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   290      Ifx_AngleTrkF32_PosIf *base    = &aObsv->base;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   291      sint32                  sqrAmpl = ((sint32)sinIn * (sint32)sinIn) + ((sint32)cosIn * (sint32)cosIn);
	mul	d4,d4
.L385:
	madd	d0,d4,d5,d5
.L386:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   292      base->status.B.signalLoss        = (sqrAmpl < aObsv->cfgData.sqrAmplMin);
	ld.bu	d1,[a4]10
.L563:
	ld.w	d15,[a4]56
.L564:
	lt	d15,d0,d15
.L565:
	insert	d15,d1,d15,#1,#1
	st.b	[a4]10,d15
.L566:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   293      base->status.B.signalDegradation = (sqrAmpl > aObsv->cfgData.sqrAmplMax);
	ld.bu	d1,[a4]10
.L567:
	ld.w	d15,[a4]52
.L568:
	lt	d15,d15,d0
.L569:
	insert	d15,d1,d15,#2,#1
	st.b	[a4]10,d15
.L570:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   294      base->status.B.trackingLoss      = __absf(aObsv->angleErr) > aObsv->cfgData.errorThreshold;
	ld.w	d15,[a4]96
	mov	d0,#0
.L387:
	cmp.f	d15,d15,d0
	jnz.t	d15:0,.L30
	ld.w	d0,[a4]96
	j	.L31
.L30:
	ld.w	d15,[a4]96
	insn.t	d0,d15:31,d15:31
.L31:
	ld.bu	d1,[a4]10
.L571:
	ld.w	d15,[a4]48
.L572:
	cmp.f	d15,d0,d15
	extr.u	d15,d15,#2,#1
.L573:
	insert	d15,d1,d15,#3,#1
	st.b	[a4]10,d15
.L574:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   295  }
	ret
.L272:
	
__Ifx_AngleTrkF32_updateStatus_function_end:
	.size	Ifx_AngleTrkF32_updateStatus,__Ifx_AngleTrkF32_updateStatus_function_end-Ifx_AngleTrkF32_updateStatus
.L119:
	; End of function
	
	.sdecl	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_update',code,cluster('Ifx_AngleTrkF32_update')
	.sect	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_update'
	.align	2
	
	.global	Ifx_AngleTrkF32_update

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   296  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   297  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   298  /** \brief Update the object directly from its analog input
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   299   * \param aObsv Pointer to the Ifx_AngleTrkF32 object
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   300   */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   301  void Ifx_AngleTrkF32_update(Ifx_AngleTrkF32 *aObsv)
; Function Ifx_AngleTrkF32_update
.L63:
Ifx_AngleTrkF32_update:	.type	func
	mov.aa	a15,a4
.L389:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   302  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   303      Ifx_AngleTrkF32_PosIf *base        = &aObsv->base;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   304      float32                 angleEst    = Ifx_AngleTrkF32_step(aObsv, *aObsv->sinIn, *aObsv->cosIn, 0);
	ld.a	a2,[a15]60
.L693:
	ld.h	d4,[a2]
.L694:
	ld.a	a2,[a15]64
.L695:
	ld.h	d5,[a2]
.L696:
	mov	d6,#0
	mov.aa	a4,a15
	call	Ifx_AngleTrkF32_step
.L388:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   305  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   306      IfxStdIf_Pos_RawAngle   newPosition = (IfxStdIf_Pos_RawAngle)(angleEst * (aObsv->base.resolution / 2) / IFX_PI);
	ld.w	d0,[a15]22
.L697:
	ge	d15,d0,#0
	caddn	d0,d15,#1
	sha	d0,#-1
	itof	d15,d0
.L698:
	mul.f	d15,d2,d15
.L699:
	mov	d0,#4059
	addih	d0,d0,#16457
.L700:
	div.f	d15,d15,d0
.L701:
	ftoiz	d15,d15
.L391:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   307      newPosition       = newPosition & (aObsv->base.resolution - 1);
	ld.w	d0,[a15]22
.L702:
	add	d0,#-1
.L703:
	and	d15,d0
.L704:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   308      base->rawPosition = newPosition;
	st.w	[a15],d15
.L705:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   309  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   310      Ifx_AngleTrkF32_updateStatus(aObsv, *aObsv->sinIn, *aObsv->cosIn);
	ld.a	a2,[a15]60
.L706:
	ld.h	d4,[a2]
.L707:
	ld.a	a2,[a15]64
.L708:
	ld.h	d5,[a2]
	mov.aa	a4,a15
.L392:
	call	Ifx_AngleTrkF32_updateStatus
.L390:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   311  }
	ret
.L326:
	
__Ifx_AngleTrkF32_update_function_end:
	.size	Ifx_AngleTrkF32_update,__Ifx_AngleTrkF32_update_function_end-Ifx_AngleTrkF32_update
.L204:
	; End of function
	
	.sdecl	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_getRawPosition',code,cluster('Ifx_AngleTrkF32_getRawPosition')
	.sect	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_getRawPosition'
	.align	2
	
	.global	Ifx_AngleTrkF32_getRawPosition

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   312  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   313  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   314  /** \brief Returns the actual position
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   315   * \param aObsv Pointer to the Ifx_AngleTrkF32 object
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   316   * \note This function returns the angular position in ticks [0 .. Ifx_AngleTrkF32.base.resolution-1] (represents 0..360 degree)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   317   */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   318  IfxStdIf_Pos_RawAngle Ifx_AngleTrkF32_getRawPosition(Ifx_AngleTrkF32 *aObsv)
; Function Ifx_AngleTrkF32_getRawPosition
.L65:
Ifx_AngleTrkF32_getRawPosition:	.type	func

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   319  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   320      Ifx_AngleTrkF32_PosIf *base = &aObsv->base;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   321      return base->rawPosition;
	ld.w	d2,[a4]
.L623:
	j	.L32

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   322  }
.L32:
	ret
.L295:
	
__Ifx_AngleTrkF32_getRawPosition_function_end:
	.size	Ifx_AngleTrkF32_getRawPosition,__Ifx_AngleTrkF32_getRawPosition_function_end-Ifx_AngleTrkF32_getRawPosition
.L154:
	; End of function
	
	.sdecl	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_getSpeed',code,cluster('Ifx_AngleTrkF32_getSpeed')
	.sect	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_getSpeed'
	.align	2
	
	.global	Ifx_AngleTrkF32_getSpeed

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   323  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   324  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   325  /** \brief Returns the Speed
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   326   * \param aObsv Pointer to the Ifx_AngleTrkF32 object
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   327   */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   328  float32 Ifx_AngleTrkF32_getSpeed(Ifx_AngleTrkF32 *aObsv)
; Function Ifx_AngleTrkF32_getSpeed
.L67:
Ifx_AngleTrkF32_getSpeed:	.type	func

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   329  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   330  #if !IFX_CFG_ANGLETRKF32_FILTERED_SPEED
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   331      return aObsv->speedEstB;   /* note: using speedEstB has better dynamic */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   332  #else
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   333      return aObsv->speedLpf.out; /* note: using filtered speed has less ripples */
	ld.w	d2,[a4]108
.L648:
	j	.L33

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   334  #endif
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   335  }
.L33:
	ret
.L307:
	
__Ifx_AngleTrkF32_getSpeed_function_end:
	.size	Ifx_AngleTrkF32_getSpeed,__Ifx_AngleTrkF32_getSpeed_function_end-Ifx_AngleTrkF32_getSpeed
.L179:
	; End of function
	
	.sdecl	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_getAbsolutePosition',code,cluster('Ifx_AngleTrkF32_getAbsolutePosition')
	.sect	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_getAbsolutePosition'
	.align	2
	
	.global	Ifx_AngleTrkF32_getAbsolutePosition

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   336  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   337  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   338  /*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   339  float32 Ifx_AngleTrkF32_getAbsolutePosition(Ifx_AngleTrkF32 *driver)
; Function Ifx_AngleTrkF32_getAbsolutePosition
.L69:
Ifx_AngleTrkF32_getAbsolutePosition:	.type	func

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   340  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   341      return ((float32)driver->base.turn + (float32)driver->base.rawPosition / (float32)driver->base.resolution) * 2.0 * IFX_PI;
	ld.w	d15,[a4]4
.L579:
	itof	d15,d15
.L580:
	ld.w	d0,[a4]
.L581:
	itof	d0,d0
.L582:
	ld.w	d1,[a4]22
.L583:
	itof	d1,d1
.L584:
	div.f	d0,d0,d1
.L585:
	add.f	d15,d15,d0
.L586:
	movh	d0,#16384
.L587:
	mul.f	d15,d15,d0
.L588:
	mov	d0,#4059
	addih	d0,d0,#16457
.L589:
	mul.f	d2,d15,d0
.L590:
	j	.L34

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   342  }
.L34:
	ret
.L280:
	
__Ifx_AngleTrkF32_getAbsolutePosition_function_end:
	.size	Ifx_AngleTrkF32_getAbsolutePosition,__Ifx_AngleTrkF32_getAbsolutePosition_function_end-Ifx_AngleTrkF32_getAbsolutePosition
.L124:
	; End of function
	
	.sdecl	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_getDirection',code,cluster('Ifx_AngleTrkF32_getDirection')
	.sect	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_getDirection'
	.align	2
	
	.global	Ifx_AngleTrkF32_getDirection

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   343  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   344  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   345  IfxStdIf_Pos_Dir Ifx_AngleTrkF32_getDirection(Ifx_AngleTrkF32 *driver)
; Function Ifx_AngleTrkF32_getDirection
.L71:
Ifx_AngleTrkF32_getDirection:	.type	func

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   346  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   347      return driver->base.direction;
	ld.bu	d2,[a4]8
.L595:
	j	.L35

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   348  }
.L35:
	ret
.L283:
	
__Ifx_AngleTrkF32_getDirection_function_end:
	.size	Ifx_AngleTrkF32_getDirection,__Ifx_AngleTrkF32_getDirection_function_end-Ifx_AngleTrkF32_getDirection
.L129:
	; End of function
	
	.sdecl	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_getFault',code,cluster('Ifx_AngleTrkF32_getFault')
	.sect	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_getFault'
	.align	2
	
	.global	Ifx_AngleTrkF32_getFault

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   349  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   350  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   351  IfxStdIf_Pos_Status Ifx_AngleTrkF32_getFault(Ifx_AngleTrkF32 *driver)
; Function Ifx_AngleTrkF32_getFault
.L73:
Ifx_AngleTrkF32_getFault:	.type	func

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   352  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   353      return driver->base.status;
	ld.w	d2,[a4]10
.L600:
	j	.L36

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   354  }
.L36:
	ret
.L286:
	
__Ifx_AngleTrkF32_getFault_function_end:
	.size	Ifx_AngleTrkF32_getFault,__Ifx_AngleTrkF32_getFault_function_end-Ifx_AngleTrkF32_getFault
.L134:
	; End of function
	
	.sdecl	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_getOffset',code,cluster('Ifx_AngleTrkF32_getOffset')
	.sect	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_getOffset'
	.align	2
	
	.global	Ifx_AngleTrkF32_getOffset

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   355  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   356  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   357  sint32 Ifx_AngleTrkF32_getOffset(Ifx_AngleTrkF32 *driver)
; Function Ifx_AngleTrkF32_getOffset
.L75:
Ifx_AngleTrkF32_getOffset:	.type	func

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   358  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   359      return driver->base.offset;
	ld.w	d2,[a4]14
.L605:
	j	.L37

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   360  }
.L37:
	ret
.L288:
	
__Ifx_AngleTrkF32_getOffset_function_end:
	.size	Ifx_AngleTrkF32_getOffset,__Ifx_AngleTrkF32_getOffset_function_end-Ifx_AngleTrkF32_getOffset
.L139:
	; End of function
	
	.sdecl	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_getPeriodPerRotation',code,cluster('Ifx_AngleTrkF32_getPeriodPerRotation')
	.sect	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_getPeriodPerRotation'
	.align	2
	
	.global	Ifx_AngleTrkF32_getPeriodPerRotation

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   361  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   362  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   363  uint16 Ifx_AngleTrkF32_getPeriodPerRotation(Ifx_AngleTrkF32 *driver)
; Function Ifx_AngleTrkF32_getPeriodPerRotation
.L77:
Ifx_AngleTrkF32_getPeriodPerRotation:	.type	func

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   364  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   365      return driver->base.periodPerRotation;
	ld.hu	d2,[a4]20
.L610:
	j	.L38

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   366  }
.L38:
	ret
.L291:
	
__Ifx_AngleTrkF32_getPeriodPerRotation_function_end:
	.size	Ifx_AngleTrkF32_getPeriodPerRotation,__Ifx_AngleTrkF32_getPeriodPerRotation_function_end-Ifx_AngleTrkF32_getPeriodPerRotation
.L144:
	; End of function
	
	.sdecl	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_getPosition',code,cluster('Ifx_AngleTrkF32_getPosition')
	.sect	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_getPosition'
	.align	2
	
	.global	Ifx_AngleTrkF32_getPosition

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   367  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   368  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   369  float32 Ifx_AngleTrkF32_getPosition(Ifx_AngleTrkF32 *driver)
; Function Ifx_AngleTrkF32_getPosition
.L79:
Ifx_AngleTrkF32_getPosition:	.type	func

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   370  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   371      return (float32)driver->base.rawPosition * driver->base.positionConst;
	ld.w	d15,[a4]
.L615:
	itof	d15,d15
.L616:
	ld.w	d0,[a4]30
.L617:
	mul.f	d2,d15,d0
.L618:
	j	.L39

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   372  }
.L39:
	ret
.L293:
	
__Ifx_AngleTrkF32_getPosition_function_end:
	.size	Ifx_AngleTrkF32_getPosition,__Ifx_AngleTrkF32_getPosition_function_end-Ifx_AngleTrkF32_getPosition
.L149:
	; End of function
	
	.sdecl	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_getRefreshPeriod',code,cluster('Ifx_AngleTrkF32_getRefreshPeriod')
	.sect	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_getRefreshPeriod'
	.align	2
	
	.global	Ifx_AngleTrkF32_getRefreshPeriod

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   373  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   374  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   375  float32 Ifx_AngleTrkF32_getRefreshPeriod(Ifx_AngleTrkF32 *driver)
; Function Ifx_AngleTrkF32_getRefreshPeriod
.L81:
Ifx_AngleTrkF32_getRefreshPeriod:	.type	func

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   376  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   377      return driver->base.Ts;
	ld.w	d2,[a4]26
.L628:
	j	.L40

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   378  }
.L40:
	ret
.L298:
	
__Ifx_AngleTrkF32_getRefreshPeriod_function_end:
	.size	Ifx_AngleTrkF32_getRefreshPeriod,__Ifx_AngleTrkF32_getRefreshPeriod_function_end-Ifx_AngleTrkF32_getRefreshPeriod
.L159:
	; End of function
	
	.sdecl	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_getResolution',code,cluster('Ifx_AngleTrkF32_getResolution')
	.sect	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_getResolution'
	.align	2
	
	.global	Ifx_AngleTrkF32_getResolution

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   379  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   380  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   381  sint32 Ifx_AngleTrkF32_getResolution(Ifx_AngleTrkF32 *driver)
; Function Ifx_AngleTrkF32_getResolution
.L83:
Ifx_AngleTrkF32_getResolution:	.type	func

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   382  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   383      return driver->base.resolution;
	ld.w	d2,[a4]22
.L633:
	j	.L41

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   384  }
.L41:
	ret
.L300:
	
__Ifx_AngleTrkF32_getResolution_function_end:
	.size	Ifx_AngleTrkF32_getResolution,__Ifx_AngleTrkF32_getResolution_function_end-Ifx_AngleTrkF32_getResolution
.L164:
	; End of function
	
	.sdecl	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_getSensorType',code,cluster('Ifx_AngleTrkF32_getSensorType')
	.sect	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_getSensorType'
	.align	2
	
	.global	Ifx_AngleTrkF32_getSensorType

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   385  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   386  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   387  IfxStdIf_Pos_SensorType Ifx_AngleTrkF32_getSensorType(Ifx_AngleTrkF32 *driver)
; Function Ifx_AngleTrkF32_getSensorType
.L85:
Ifx_AngleTrkF32_getSensorType:	.type	func

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   388  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   389  	IFX_UNUSED_PARAMETER(driver);
	jz.a	a4,.L42
.L42:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   390      return IfxStdIf_Pos_SensorType_angletrk;
	mov	d2,#3
.L643:
	j	.L43

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   391  }
.L43:
	ret
.L305:
	
__Ifx_AngleTrkF32_getSensorType_function_end:
	.size	Ifx_AngleTrkF32_getSensorType,__Ifx_AngleTrkF32_getSensorType_function_end-Ifx_AngleTrkF32_getSensorType
.L174:
	; End of function
	
	.sdecl	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_getTurn',code,cluster('Ifx_AngleTrkF32_getTurn')
	.sect	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_getTurn'
	.align	2
	
	.global	Ifx_AngleTrkF32_getTurn

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   392  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   393  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   394  sint32 Ifx_AngleTrkF32_getTurn(Ifx_AngleTrkF32 *driver)
; Function Ifx_AngleTrkF32_getTurn
.L87:
Ifx_AngleTrkF32_getTurn:	.type	func

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   395  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   396      return driver->base.turn;
	ld.w	d2,[a4]4
.L638:
	j	.L44

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   397  }
.L44:
	ret
.L302:
	
__Ifx_AngleTrkF32_getTurn_function_end:
	.size	Ifx_AngleTrkF32_getTurn,__Ifx_AngleTrkF32_getTurn_function_end-Ifx_AngleTrkF32_getTurn
.L169:
	; End of function
	
	.sdecl	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_resetFaults',code,cluster('Ifx_AngleTrkF32_resetFaults')
	.sect	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_resetFaults'
	.align	2
	
	.global	Ifx_AngleTrkF32_resetFaults

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   398  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   399  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   400  void Ifx_AngleTrkF32_resetFaults(Ifx_AngleTrkF32 *driver)
; Function Ifx_AngleTrkF32_resetFaults
.L89:
Ifx_AngleTrkF32_resetFaults:	.type	func

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   401  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   402      driver->base.status.status = 0;
	mov	d15,#0
.L677:
	st.w	[a4]10,d15
.L678:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   403  }
	ret
.L317:
	
__Ifx_AngleTrkF32_resetFaults_function_end:
	.size	Ifx_AngleTrkF32_resetFaults,__Ifx_AngleTrkF32_resetFaults_function_end-Ifx_AngleTrkF32_resetFaults
.L189:
	; End of function
	
	.sdecl	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_setRefreshPeriod',code,cluster('Ifx_AngleTrkF32_setRefreshPeriod')
	.sect	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_setRefreshPeriod'
	.align	2
	
	.global	Ifx_AngleTrkF32_setRefreshPeriod

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   404  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   405  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   406  void Ifx_AngleTrkF32_setRefreshPeriod(Ifx_AngleTrkF32 *driver, float32 updatePeriod)
; Function Ifx_AngleTrkF32_setRefreshPeriod
.L91:
Ifx_AngleTrkF32_setRefreshPeriod:	.type	func

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   407  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   408      driver->base.Ts = updatePeriod;
	st.w	[a4]26,d4
.L688:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   409  }
	ret
.L323:
	
__Ifx_AngleTrkF32_setRefreshPeriod_function_end:
	.size	Ifx_AngleTrkF32_setRefreshPeriod,__Ifx_AngleTrkF32_setRefreshPeriod_function_end-Ifx_AngleTrkF32_setRefreshPeriod
.L199:
	; End of function
	
	.sdecl	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_reset',code,cluster('Ifx_AngleTrkF32_reset')
	.sect	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_reset'
	.align	2
	
	.global	Ifx_AngleTrkF32_reset

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   410  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   411  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   412  void Ifx_AngleTrkF32_reset(Ifx_AngleTrkF32 *driver)
; Function Ifx_AngleTrkF32_reset
.L93:
Ifx_AngleTrkF32_reset:	.type	func

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   413  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   414      driver->base.rawPosition = 0;
	mov	d15,#0
.L653:
	st.w	[a4],d15
.L654:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   415      driver->base.direction   = IfxStdIf_Pos_Dir_unknown;
	mov	d15,#2
.L655:
	st.b	[a4]8,d15
.L656:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   416      driver->base.turn        = 0;
	mov	d15,#0
.L657:
	st.w	[a4]4,d15
.L658:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   417      driver->angleErr         = 0.0F;
	mov	d15,#0
.L659:
	st.w	[a4]96,d15
.L660:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   418      driver->angleEst         = 0.0F;
	mov	d15,#0
.L661:
	st.w	[a4]80,d15
.L662:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   419      driver->accelEst         = 0.0F;
	mov	d15,#0
.L663:
	st.w	[a4]92,d15
.L664:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   420      driver->speedEstA        = 0.0F;
	mov	d15,#0
.L665:
	st.w	[a4]84,d15
.L666:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   421      driver->speedEstB        = 0.0F;
	mov	d15,#0
.L667:
	st.w	[a4]88,d15
.L668:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   422      driver->angleRef         = 0.0F;
	mov	d15,#0
.L669:
	st.w	[a4]76,d15
.L312:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	     2   * \file Ifx_LowPassPt1F32.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	     3   * \brief Low pass filter PT1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	     4   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	     5   * \version disabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	     7   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	     9   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    10   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    13   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    15   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    16  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    19  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    20   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    21   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    22   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    23   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    24   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    25   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    26  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    27   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    28   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    29   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    30   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    31   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    32   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    33  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    40   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    41  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    42   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    43   * \defgroup library_srvsw_sysse_math_f32_lowpasspt1 Low-pass Filter: Type PT1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    44   * This module implements a PT1 low pass filter.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    45   * http://de.wikipedia.org/wiki/PT1-Glied
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    46   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    47   * Formula: \n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    48   * \f$ y_k = y_{k-1} + a * x_k - b * y_{k-1} \f$ \n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    49   * with \f$(T^* = \frac{T_s}{T+T_s})\f$, \f$(a = K*T^*)\f$, \f$(b = T^*)\f$
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    50   * with \f$(T_s: Sample time)\f$, \f$(K: Gain)\f$, \f$(T = \frac{1}{\omega_0})\f$
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    51   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    52   * \ingroup library_srvsw_sysse_math_f32
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    53   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    54   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    55  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    56  #if !defined(IFX_LOWPASSPT1F32)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    57  #define IFX_LOWPASSPT1F32
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    58  //------------------------------------------------------------------------------
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    59  #include "Cpu/Std/Ifx_Types.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    60  //------------------------------------------------------------------------------
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    61  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    62  /** \brief PT1 object definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    63   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    64  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    65  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    66      float32 a;              /**< \brief a parameter */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    67      float32 b;              /**< \brief b parameter */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    68      float32 out;            /**< \brief last output */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    69  } Ifx_LowPassPt1F32;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    70  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    71  /** \brief PT1 configuration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    72  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    73  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    74      float32 cutOffFrequency; /**< \brief Cut off frequency */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    75      float32 gain;            /**< \brief Gain */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    76      float32 samplingTime;    /**< \brief Sampling time */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    77  } Ifx_LowPassPt1F32_Config;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    78  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    79  //------------------------------------------------------------------------------
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    80  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    81  /** \addtogroup  library_srvsw_sysse_math_f32_lowpasspt1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    82   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    83  IFX_EXTERN void    Ifx_LowPassPt1F32_init(Ifx_LowPassPt1F32 *filter, const Ifx_LowPassPt1F32_Config *config);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    84  IFX_INLINE void    Ifx_LowPassPt1F32_reset(Ifx_LowPassPt1F32 *filter);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    85  IFX_EXTERN float32 Ifx_LowPassPt1F32_do(Ifx_LowPassPt1F32 *filter, float32 input);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    86  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    87  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    88  //------------------------------------------------------------------------------
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    89  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    90  /** \brief Reset the internal filter variable
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    91   * \param filter Specifies PT1 filter.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    92   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    93  IFX_INLINE void Ifx_LowPassPt1F32_reset(Ifx_LowPassPt1F32 *filter)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    94  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_LowPassPt1F32.h	    95      filter->out = 0.0;
	mov	d15,#0
.L670:
	st.w	[a4]108,d15
.L313:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   423  0.0F;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   424      driver->angleRef         = 0.0F;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   425  #if IFX_CFG_ANGLETRKF32_SPEED_FILTER
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   426      Ifx_LowPassPt1F32_reset(&driver->speedLpf);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   427  #endif
	mov	d15,#0
.L671:
	st.w	[a4]10,d15
.L672:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   428  
	ret
.L309:
	
__Ifx_AngleTrkF32_reset_function_end:
	.size	Ifx_AngleTrkF32_reset,__Ifx_AngleTrkF32_reset_function_end-Ifx_AngleTrkF32_reset
.L184:
	; End of function
	
	.sdecl	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_stdIfPosInit',code,cluster('Ifx_AngleTrkF32_stdIfPosInit')
	.sect	'.text.Ifx_AngleTrkF32.Ifx_AngleTrkF32_stdIfPosInit'
	.align	2
	
	.global	Ifx_AngleTrkF32_stdIfPosInit

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   429      driver->base.status.status = 0;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   430  }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   431  
; Function Ifx_AngleTrkF32_stdIfPosInit
.L95:
Ifx_AngleTrkF32_stdIfPosInit:	.type	func
	mov.aa	a15,a4
.L394:
	mov.aa	a12,a5
.L395:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   432  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   433  boolean Ifx_AngleTrkF32_stdIfPosInit(IfxStdIf_Pos *stdif, Ifx_AngleTrkF32 *driver)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   434  {
	mov	d4,#0
.L713:
	mov	d5,#92
	mov.aa	a4,a15
	call	memset
.L393:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   435      /* Ensure the stdif is reset to zeros */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   436      memset(stdif, 0, sizeof(IfxStdIf_Pos));
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   437  
	st.a	[a15],a12
.L714:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   438      /* Set the driver */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   439      stdif->driver = driver;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   440  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   441      /* *INDENT-OFF* Note: this file was indented manually by the author. */
	mov.a	a2,#0
.L715:
	st.a	[a15]4,a2
.L716:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   442      /* Set the API link */
	movh.a	a2,#@his(Ifx_AngleTrkF32_getAbsolutePosition)
	lea	a2,[a2]@los(Ifx_AngleTrkF32_getAbsolutePosition)
.L717:
	st.a	[a15]8,a2
.L718:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   443  	stdif->onZeroIrq          =(IfxStdIf_Pos_OnZeroIrq               )NULL_PTR;
	movh.a	a2,#@his(Ifx_AngleTrkF32_getDirection)
	lea	a2,[a2]@los(Ifx_AngleTrkF32_getDirection)
.L719:
	st.a	[a15]20,a2
.L720:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   444  	stdif->getAbsolutePosition=(IfxStdIf_Pos_GetAbsolutePosition     )&Ifx_AngleTrkF32_getAbsolutePosition;
	movh.a	a2,#@his(Ifx_AngleTrkF32_getFault)
	lea	a2,[a2]@los(Ifx_AngleTrkF32_getFault)
.L721:
	st.a	[a15]24,a2
.L722:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   445  	stdif->getDirection		  =(IfxStdIf_Pos_GetDirection            )&Ifx_AngleTrkF32_getDirection;
	movh.a	a2,#@his(Ifx_AngleTrkF32_getOffset)
	lea	a2,[a2]@los(Ifx_AngleTrkF32_getOffset)
.L723:
	st.a	[a15]12,a2
.L724:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   446  	stdif->getFault           =(IfxStdIf_Pos_GetFault                )&Ifx_AngleTrkF32_getFault;
	movh.a	a2,#@his(Ifx_AngleTrkF32_getPeriodPerRotation)
	lea	a2,[a2]@los(Ifx_AngleTrkF32_getPeriodPerRotation)
.L725:
	st.a	[a15]32,a2
.L726:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   447  	stdif->getOffset		  =(IfxStdIf_Pos_GetOffset			     )&Ifx_AngleTrkF32_getOffset;
	movh.a	a2,#@his(Ifx_AngleTrkF32_getPosition)
	lea	a2,[a2]@los(Ifx_AngleTrkF32_getPosition)
.L727:
	st.a	[a15]16,a2
.L728:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   448  	stdif->getPeriodPerRotation  =(IfxStdIf_Pos_GetPeriodPerRotation )&Ifx_AngleTrkF32_getPeriodPerRotation;
	movh.a	a2,#@his(Ifx_AngleTrkF32_getRawPosition)
	lea	a2,[a2]@los(Ifx_AngleTrkF32_getRawPosition)
.L729:
	st.a	[a15]28,a2
.L730:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   449  	stdif->getPosition		  =(IfxStdIf_Pos_GetPosition			 )&Ifx_AngleTrkF32_getPosition;
	movh.a	a2,#@his(Ifx_AngleTrkF32_getRefreshPeriod)
	lea	a2,[a2]@los(Ifx_AngleTrkF32_getRefreshPeriod)
.L731:
	st.a	[a15]36,a2
.L732:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   450  	stdif->getRawPosition	  =(IfxStdIf_Pos_GetRawPosition          )&Ifx_AngleTrkF32_getRawPosition;
	movh.a	a2,#@his(Ifx_AngleTrkF32_getResolution)
	lea	a2,[a2]@los(Ifx_AngleTrkF32_getResolution)
.L733:
	st.a	[a15]40,a2
.L734:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   451  	stdif->getRefreshPeriod   =(IfxStdIf_Pos_GetRefreshPeriod        )&Ifx_AngleTrkF32_getRefreshPeriod;
	movh.a	a2,#@his(Ifx_AngleTrkF32_getSensorType)
	lea	a2,[a2]@los(Ifx_AngleTrkF32_getSensorType)
.L735:
	st.a	[a15]44,a2
.L736:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   452  	stdif->getResolution      =(IfxStdIf_Pos_GetResolution           )&Ifx_AngleTrkF32_getResolution;
	movh.a	a2,#@his(Ifx_AngleTrkF32_reset)
	lea	a2,[a2]@los(Ifx_AngleTrkF32_reset)
.L737:
	st.a	[a15]56,a2
.L738:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   453      stdif->getSensorType      =(IfxStdIf_Pos_GetSensorType           )&Ifx_AngleTrkF32_getSensorType;
	movh.a	a2,#@his(Ifx_AngleTrkF32_resetFaults)
	lea	a2,[a2]@los(Ifx_AngleTrkF32_resetFaults)
.L739:
	st.a	[a15]60,a2
.L740:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   454  	stdif->reset			  =(IfxStdIf_Pos_Reset				     )&Ifx_AngleTrkF32_reset;
	movh.a	a2,#@his(Ifx_AngleTrkF32_getSpeed)
	lea	a2,[a2]@los(Ifx_AngleTrkF32_getSpeed)
.L741:
	st.a	[a15]64,a2
.L742:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   455  	stdif->resetFaults		  =(IfxStdIf_Pos_ResetFaults			 )&Ifx_AngleTrkF32_resetFaults;
	movh.a	a2,#@his(Ifx_AngleTrkF32_update)
	lea	a2,[a2]@los(Ifx_AngleTrkF32_update)
.L743:
	st.a	[a15]68,a2
.L744:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   456  	stdif->getSpeed           =(IfxStdIf_Pos_GetSpeed                )&Ifx_AngleTrkF32_getSpeed;
	mov.a	a2,#0
.L745:
	st.a	[a15]76,a2
.L746:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   457  	stdif->update			  =(IfxStdIf_Pos_Update				     )&Ifx_AngleTrkF32_update;
	mov.a	a2,#0
.L747:
	st.a	[a15]80,a2
.L748:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   458  	stdif->setPosition		  =(IfxStdIf_Pos_SetPosition			 )NULL_PTR;
	mov.a	a2,#0
.L749:
	st.a	[a15]84,a2
.L750:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   459  	stdif->setRawPosition	  =(IfxStdIf_Pos_SetRawPosition			 )NULL_PTR;
	movh.a	a2,#@his(Ifx_AngleTrkF32_setOffset)
	lea	a2,[a2]@los(Ifx_AngleTrkF32_setOffset)
.L751:
	st.a	[a15]72,a2
.L752:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   460  	stdif->setSpeed		      =(IfxStdIf_Pos_SetSpeed			     )NULL_PTR;
	movh.a	a2,#@his(Ifx_AngleTrkF32_setRefreshPeriod)
	lea	a2,[a2]@los(Ifx_AngleTrkF32_setRefreshPeriod)
.L753:
	st.a	[a15]88,a2
.L754:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   461  	stdif->setOffset		  =(IfxStdIf_Pos_SetOffset			     )&Ifx_AngleTrkF32_setOffset;
	movh.a	a2,#@his(Ifx_AngleTrkF32_getTurn)
	lea	a2,[a2]@los(Ifx_AngleTrkF32_getTurn)
.L755:
	st.a	[a15]48,a2
.L756:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   462  	stdif->setRefreshPeriod   =(IfxStdIf_Pos_SetRefreshPeriod        )&Ifx_AngleTrkF32_setRefreshPeriod;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   463  	stdif->getTurn            =(IfxStdIf_Pos_GetTurn                 )&Ifx_AngleTrkF32_getTurn;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   464      /* *INDENT-ON* */
	mov	d2,#1
.L757:
	j	.L45

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   465  
.L45:
	ret
.L332:
	
__Ifx_AngleTrkF32_stdIfPosInit_function_end:
	.size	Ifx_AngleTrkF32_stdIfPosInit,__Ifx_AngleTrkF32_stdIfPosInit_function_end-Ifx_AngleTrkF32_stdIfPosInit
.L209:
	; End of function
	
	.calls	'__INDIRECT__','Ifx_AngleTrkF32_getAbsolutePosition'
	.calls	'__INDIRECT__','Ifx_AngleTrkF32_getDirection'
	.calls	'__INDIRECT__','Ifx_AngleTrkF32_getFault'
	.calls	'__INDIRECT__','Ifx_AngleTrkF32_getOffset'
	.calls	'__INDIRECT__','Ifx_AngleTrkF32_getPeriodPerRotation'
	.calls	'__INDIRECT__','Ifx_AngleTrkF32_getPosition'
	.calls	'__INDIRECT__','Ifx_AngleTrkF32_getRawPosition'
	.calls	'__INDIRECT__','Ifx_AngleTrkF32_getRefreshPeriod'
	.calls	'__INDIRECT__','Ifx_AngleTrkF32_getResolution'
	.calls	'__INDIRECT__','Ifx_AngleTrkF32_getTurn'
	.calls	'__INDIRECT__','Ifx_AngleTrkF32_getSensorType'
	.calls	'__INDIRECT__','Ifx_AngleTrkF32_getSpeed'
	.calls	'__INDIRECT__','Ifx_AngleTrkF32_reset'
	.calls	'__INDIRECT__','Ifx_AngleTrkF32_resetFaults'
	.calls	'__INDIRECT__','Ifx_AngleTrkF32_setOffset'
	.calls	'__INDIRECT__','Ifx_AngleTrkF32_setRefreshPeriod'
	.calls	'__INDIRECT__','Ifx_AngleTrkF32_update'
	.calls	'Ifx_AngleTrkF32_initConfig','Ifx_AngleTrkF32_setControlGains'
	.calls	'Ifx_AngleTrkF32_init','Ifx_AngleTrkF32_setControlGains'
	.calls	'Ifx_AngleTrkF32_init','Ifx_AngleTrkF32_setUserSampling'
	.calls	'Ifx_AngleTrkF32_init','Ifx_LowPassPt1F32_init'
	.calls	'Ifx_AngleTrkF32_step','Ifx_LutAtan2F32_float32'
	.calls	'Ifx_AngleTrkF32_step','Ifx_LowPassPt1F32_do'
	.calls	'Ifx_AngleTrkF32_update','Ifx_AngleTrkF32_step'
	.calls	'Ifx_AngleTrkF32_update','Ifx_AngleTrkF32_updateStatus'
	.calls	'Ifx_AngleTrkF32_stdIfPosInit','memset'
	.calls	'round_f','',0
	.calls	'Ifx_AngleTrkF32_setControlGains','',0
	.calls	'Ifx_AngleTrkF32_initConfig','',24
	.calls	'Ifx_AngleTrkF32_setUserSampling','',0
	.calls	'Ifx_AngleTrkF32_init','',16
	.calls	'Ifx_AngleTrkF32_step','',0
	.calls	'Ifx_AngleTrkF32_setOffset','',0
	.calls	'Ifx_AngleTrkF32_updateStatus','',0
	.calls	'Ifx_AngleTrkF32_update','',0
	.calls	'Ifx_AngleTrkF32_getRawPosition','',0
	.calls	'Ifx_AngleTrkF32_getSpeed','',0
	.calls	'Ifx_AngleTrkF32_getAbsolutePosition','',0
	.calls	'Ifx_AngleTrkF32_getDirection','',0
	.calls	'Ifx_AngleTrkF32_getFault','',0
	.calls	'Ifx_AngleTrkF32_getOffset','',0
	.calls	'Ifx_AngleTrkF32_getPeriodPerRotation','',0
	.calls	'Ifx_AngleTrkF32_getPosition','',0
	.calls	'Ifx_AngleTrkF32_getRefreshPeriod','',0
	.calls	'Ifx_AngleTrkF32_getResolution','',0
	.calls	'Ifx_AngleTrkF32_getSensorType','',0
	.calls	'Ifx_AngleTrkF32_getTurn','',0
	.calls	'Ifx_AngleTrkF32_resetFaults','',0
	.calls	'Ifx_AngleTrkF32_setRefreshPeriod','',0
	.calls	'Ifx_AngleTrkF32_reset','',0
	.extern	Ifx_LowPassPt1F32_init
	.extern	Ifx_LowPassPt1F32_do
	.extern	memset
	.extern	Ifx_LutAtan2F32_float32
	.extern	__INDIRECT__
	.calls	'Ifx_AngleTrkF32_stdIfPosInit','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L97:
	.word	6299
	.half	3
	.word	.L98
	.byte	4
.L96:
	.byte	1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L99
	.byte	2
	.byte	'unsigned long int',0,4,7
.L331:
	.byte	2
	.byte	'unsigned char',0,1,8,3,1,106,5,1,4
	.byte	'notSynchronised',0,1
	.word	198
	.byte	1,7,2,35,0,4
	.byte	'signalLoss',0,1
	.word	198
	.byte	1,6,2,35,0,4
	.byte	'signalDegradation',0,1
	.word	198
	.byte	1,5,2,35,0,4
	.byte	'trackingLoss',0,1
	.word	198
	.byte	1,4,2,35,0,4
	.byte	'commError',0,1
	.word	198
	.byte	1,3,2,35,0,0
.L285:
	.byte	5,1,103,9,4,6
	.byte	'status',0
	.word	177
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	215
	.byte	1,2,35,0,0,7
	.byte	'void',0,8
	.word	377
	.byte	9
	.byte	'IfxStdIf_InterfaceDriver',0,2,118,15
	.word	383
	.byte	10,1,1,11
	.word	383
	.byte	0,8
	.word	421
	.byte	9
	.byte	'IfxStdIf_Pos_OnZeroIrq',0,1,135,1,16
	.word	430
.L230:
	.byte	2
	.byte	'float',0,4,4,12
	.word	467
	.byte	1,1,11
	.word	383
	.byte	0,8
	.word	476
	.byte	9
	.byte	'IfxStdIf_Pos_GetAbsolutePosition',0,1,129,1,19
	.word	489
.L278:
	.byte	2
	.byte	'long int',0,4,5,12
	.word	536
	.byte	1,1,11
	.word	383
	.byte	0,8
	.word	548
	.byte	9
	.byte	'IfxStdIf_Pos_GetOffset',0,1,142,1,18
	.word	561
	.byte	9
	.byte	'IfxStdIf_Pos_GetPosition',0,1,152,1,19
	.word	489
.L282:
	.byte	13,1,95,9,1,14
	.byte	'IfxStdIf_Pos_Dir_forward',0,0,14
	.byte	'IfxStdIf_Pos_Dir_backward',0,1,14
	.byte	'IfxStdIf_Pos_Dir_unknown',0,2,0,12
	.word	632
	.byte	1,1,11
	.word	383
	.byte	0,8
	.word	720
	.byte	9
	.byte	'IfxStdIf_Pos_GetDirection',0,1,161,1,28
	.word	733
	.byte	12
	.word	344
	.byte	1,1,11
	.word	383
	.byte	0,8
	.word	773
	.byte	9
	.byte	'IfxStdIf_Pos_GetFault',0,1,168,1,31
	.word	786
	.byte	9
	.byte	'IfxStdIf_Pos_GetRawPosition',0,1,184,1,18
	.word	561
.L290:
	.byte	2
	.byte	'unsigned short int',0,2,7,12
	.word	859
	.byte	1,1,11
	.word	383
	.byte	0,8
	.word	881
	.byte	9
	.byte	'IfxStdIf_Pos_GetPeriodPerRotation',0,1,175,1,18
	.word	894
	.byte	9
	.byte	'IfxStdIf_Pos_GetRefreshPeriod',0,1,190,1,19
	.word	489
	.byte	9
	.byte	'IfxStdIf_Pos_GetResolution',0,1,196,1,18
	.word	561
.L304:
	.byte	13,1,84,9,1,14
	.byte	'IfxStdIf_Pos_SensorType_encoder',0,0,14
	.byte	'IfxStdIf_Pos_SensorType_hall',0,1,14
	.byte	'IfxStdIf_Pos_SensorType_resolver',0,2,14
	.byte	'IfxStdIf_Pos_SensorType_angletrk',0,3,14
	.byte	'IfxStdIf_Pos_SensorType_igmr',0,4,14
	.byte	'IfxStdIf_Pos_SensorType_virtual',0,5,0,12
	.word	1017
	.byte	1,1,11
	.word	383
	.byte	0,8
	.word	1223
	.byte	9
	.byte	'IfxStdIf_Pos_GetSensorType',0,1,202,1,35
	.word	1236
	.byte	9
	.byte	'IfxStdIf_Pos_GetTurn',0,1,214,1,18
	.word	561
	.byte	9
	.byte	'IfxStdIf_Pos_OnEventA',0,1,221,1,16
	.word	430
	.byte	9
	.byte	'IfxStdIf_Pos_Reset',0,1,239,1,16
	.word	430
	.byte	9
	.byte	'IfxStdIf_Pos_ResetFaults',0,1,248,1,16
	.word	430
	.byte	9
	.byte	'IfxStdIf_Pos_GetSpeed',0,1,208,1,19
	.word	489
	.byte	9
	.byte	'IfxStdIf_Pos_Update',0,1,230,1,16
	.word	430
	.byte	10,1,1,11
	.word	383
	.byte	11
	.word	536
	.byte	0,8
	.word	1460
	.byte	9
	.byte	'IfxStdIf_Pos_SetOffset',0,1,255,1,16
	.word	1474
	.byte	10,1,1,11
	.word	383
	.byte	11
	.word	467
	.byte	0,8
	.word	1511
	.byte	9
	.byte	'IfxStdIf_Pos_SetPosition',0,1,134,2,16
	.word	1525
	.byte	9
	.byte	'IfxStdIf_Pos_SetRawPosition',0,1,140,2,16
	.word	1474
	.byte	9
	.byte	'IfxStdIf_Pos_SetSpeed',0,1,147,2,16
	.word	1525
	.byte	9
	.byte	'IfxStdIf_Pos_SetRefreshPeriod',0,1,154,2,16
	.word	1525
	.byte	15
	.byte	'IfxStdIf_Pos_',0,1,158,2,8,92,6
	.byte	'driver',0
	.word	388
	.byte	4,2,35,0,6
	.byte	'onZeroIrq',0
	.word	435
	.byte	4,2,35,4,6
	.byte	'getAbsolutePosition',0
	.word	494
	.byte	4,2,35,8,6
	.byte	'getOffset',0
	.word	566
	.byte	4,2,35,12,6
	.byte	'getPosition',0
	.word	598
	.byte	4,2,35,16,6
	.byte	'getDirection',0
	.word	738
	.byte	4,2,35,20,6
	.byte	'getFault',0
	.word	791
	.byte	4,2,35,24,6
	.byte	'getRawPosition',0
	.word	822
	.byte	4,2,35,28,6
	.byte	'getPeriodPerRotation',0
	.word	899
	.byte	4,2,35,32,6
	.byte	'getRefreshPeriod',0
	.word	942
	.byte	4,2,35,36,6
	.byte	'getResolution',0
	.word	981
	.byte	4,2,35,40,6
	.byte	'getSensorType',0
	.word	1241
	.byte	4,2,35,44,6
	.byte	'getTurn',0
	.word	1277
	.byte	4,2,35,48,6
	.byte	'onEventA',0
	.word	1307
	.byte	4,2,35,52,6
	.byte	'reset',0
	.word	1338
	.byte	4,2,35,56,6
	.byte	'resetFaults',0
	.word	1366
	.byte	4,2,35,60,6
	.byte	'getSpeed',0
	.word	1400
	.byte	4,2,35,64,6
	.byte	'update',0
	.word	1431
	.byte	4,2,35,68,6
	.byte	'setOffset',0
	.word	1479
	.byte	4,2,35,72,6
	.byte	'setPosition',0
	.word	1530
	.byte	4,2,35,76,6
	.byte	'setRawPosition',0
	.word	1564
	.byte	4,2,35,80,6
	.byte	'setSpeed',0
	.word	1601
	.byte	4,2,35,84,6
	.byte	'setRefreshPeriod',0
	.word	1632
	.byte	4,2,35,88,0
.L333:
	.byte	8
	.word	1671
	.byte	16
	.byte	'IfxStdIf_Pos_getFault',0,3,1,225,2,32
	.word	344
	.byte	1,1,17
	.byte	'stdIf',0,1,225,2,68
	.word	2175
	.byte	18,0,8
	.word	377
	.byte	8
	.word	421
	.byte	8
	.word	476
	.byte	8
	.word	548
	.byte	8
	.word	476
	.byte	8
	.word	720
	.byte	8
	.word	773
	.byte	8
	.word	548
	.byte	8
	.word	881
	.byte	8
	.word	476
	.byte	8
	.word	548
	.byte	8
	.word	1223
	.byte	8
	.word	548
	.byte	8
	.word	421
	.byte	8
	.word	421
	.byte	8
	.word	421
	.byte	8
	.word	476
	.byte	8
	.word	421
	.byte	8
	.word	1460
	.byte	8
	.word	1511
	.byte	8
	.word	1460
	.byte	8
	.word	1511
	.byte	8
	.word	1511
	.byte	3,3,64,9,12,6
	.byte	'a',0
	.word	467
	.byte	4,2,35,0,6
	.byte	'b',0
	.word	467
	.byte	4,2,35,4,6
	.byte	'out',0
	.word	467
	.byte	4,2,35,8,0,8
	.word	2346
.L311:
	.byte	19
	.byte	'Ifx_LowPassPt1F32_reset',0,3,3,93,17,1,1
.L314:
	.byte	17
	.byte	'filter',0,3,93,60
	.word	2387
.L316:
	.byte	18,0,20,1,1,8
	.word	2440
	.byte	19
	.byte	'Ifx__jump_and_link',0,3,4,61,17,1,1,17
	.byte	'fun',0,4,61,43
	.word	2443
	.byte	18,0,2
	.byte	'__fract',0,4,128,1,16
	.byte	'Ifx__float_to_fract',0,3,4,152,2,18
	.word	2488
	.byte	1,1,17
	.byte	'a',0,4,152,2,44
	.word	467
	.byte	18,0,2
	.byte	'unsigned long long int',0,8,7,16
	.byte	'__ld64',0,3,5,135,1,19
	.word	2545
	.byte	1,1,17
	.byte	'addr',0,5,135,1,32
	.word	383
	.byte	18,0,19
	.byte	'__st64',0,3,5,143,1,17,1,1,17
	.byte	'addr',0,5,143,1,30
	.word	383
	.byte	17
	.byte	'value',0,5,143,1,43
	.word	2545
	.byte	18,0
.L260:
	.byte	16
	.byte	'Ifx_AngleTrkF32_bound',0,3,6,73,20
	.word	467
	.byte	1,1
.L262:
	.byte	17
	.byte	'angle',0,6,73,50
	.word	467
.L264:
	.byte	17
	.byte	'periodPerRotation',0,6,73,65
	.word	467
.L266:
	.byte	21
.L267:
	.byte	18,0,0
.L255:
	.byte	16
	.byte	'Ifx_AngleTrkF32_boundInput',0,3,6,93,20
	.word	467
	.byte	1,1
.L257:
	.byte	17
	.byte	'input',0,6,93,55
	.word	467
.L259:
	.byte	21,18,0,0,2
	.byte	'int',0,4,5,22
	.word	2785
	.byte	23
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,11
	.word	2792
	.byte	0,2
	.byte	'unsigned int',0,4,7,24
	.word	2834
	.byte	8
	.word	2834
	.byte	25
	.byte	'__cmpswapw',0
	.word	2850
	.byte	1,1,1,1,26
	.byte	'p',0
	.word	2855
	.byte	26
	.byte	'value',0
	.word	2834
	.byte	26
	.byte	'compare',0
	.word	2834
	.byte	0,27
	.word	2180
	.byte	28
	.word	2214
	.byte	18,0
.L234:
	.byte	3,3,72,9,12,6
	.byte	'cutOffFrequency',0
	.word	467
	.byte	4,2,35,0,6
	.byte	'gain',0
	.word	467
	.byte	4,2,35,4,6
	.byte	'samplingTime',0
	.word	467
	.byte	4,2,35,8,0,22
	.word	2924
	.byte	8
	.word	2991
	.byte	29
	.byte	'Ifx_LowPassPt1F32_init',0,3,83,20,1,1,1,1,17
	.byte	'filter',0,3,83,62
	.word	2387
	.byte	17
	.byte	'config',0,3,83,102
	.word	2996
	.byte	0,27
	.word	2392
	.byte	28
	.word	2423
	.byte	18,0,30
	.byte	'Ifx_LowPassPt1F32_do',0,3,85,20
	.word	467
	.byte	1,1,1,1,17
	.byte	'filter',0,3,85,60
	.word	2387
	.byte	17
	.byte	'input',0,3,85,76
	.word	467
	.byte	0,3,7,103,9,36,6
	.byte	'rawPosition',0
	.word	536
	.byte	4,2,35,0,6
	.byte	'turn',0
	.word	536
	.byte	4,2,35,4,6
	.byte	'direction',0
	.word	632
	.byte	1,2,35,8,6
	.byte	'status',0
	.word	344
	.byte	4,2,35,10,6
	.byte	'offset',0
	.word	536
	.byte	4,2,35,14,6
	.byte	'reversed',0
	.word	198
	.byte	1,2,35,18,6
	.byte	'periodPerRotation',0
	.word	859
	.byte	2,2,35,20,6
	.byte	'resolution',0
	.word	536
	.byte	4,2,35,22,6
	.byte	'Ts',0
	.word	467
	.byte	4,2,35,26,6
	.byte	'positionConst',0
	.word	467
	.byte	4,2,35,30,0
.L242:
	.byte	3,7,93,9,24,6
	.byte	'kp',0
	.word	467
	.byte	4,2,35,0,6
	.byte	'ki',0
	.word	467
	.byte	4,2,35,4,6
	.byte	'kd',0
	.word	467
	.byte	4,2,35,8,6
	.byte	'errorThreshold',0
	.word	467
	.byte	4,2,35,12,6
	.byte	'sqrAmplMax',0
	.word	536
	.byte	4,2,35,16,6
	.byte	'sqrAmplMin',0
	.word	536
	.byte	4,2,35,20,0
.L246:
	.byte	2
	.byte	'short int',0,2,5
.L239:
	.byte	8
	.word	3436
	.byte	3,7,119,9,112,6
	.byte	'base',0
	.word	3138
	.byte	36,2,35,0,6
	.byte	'cfgData',0
	.word	3330
	.byte	24,2,35,36,6
	.byte	'sinIn',0
	.word	3449
	.byte	4,2,35,60,6
	.byte	'cosIn',0
	.word	3449
	.byte	4,2,35,64,6
	.byte	'halfTs',0
	.word	467
	.byte	4,2,35,68,6
	.byte	'angleAtan',0
	.word	467
	.byte	4,2,35,72,6
	.byte	'angleRef',0
	.word	467
	.byte	4,2,35,76,6
	.byte	'angleEst',0
	.word	467
	.byte	4,2,35,80,6
	.byte	'speedEstA',0
	.word	467
	.byte	4,2,35,84,6
	.byte	'speedEstB',0
	.word	467
	.byte	4,2,35,88,6
	.byte	'accelEst',0
	.word	467
	.byte	4,2,35,92,6
	.byte	'angleErr',0
	.word	467
	.byte	4,2,35,96,6
	.byte	'speedLpf',0
	.word	2346
	.byte	12,2,35,100,0
.L226:
	.byte	8
	.word	3454
	.byte	3,7,76,9,48,6
	.byte	'kp',0
	.word	467
	.byte	4,2,35,0,6
	.byte	'ki',0
	.word	467
	.byte	4,2,35,4,6
	.byte	'kd',0
	.word	467
	.byte	4,2,35,8,6
	.byte	'speedLpfFc',0
	.word	467
	.byte	4,2,35,12,6
	.byte	'errorThreshold',0
	.word	467
	.byte	4,2,35,16,6
	.byte	'sqrAmplMax',0
	.word	536
	.byte	4,2,35,20,6
	.byte	'sqrAmplMin',0
	.word	536
	.byte	4,2,35,24,6
	.byte	'periodPerRotation',0
	.word	859
	.byte	2,2,35,28,6
	.byte	'reversed',0
	.word	198
	.byte	1,2,35,30,6
	.byte	'resolution',0
	.word	536
	.byte	4,2,35,32,6
	.byte	'offset',0
	.word	536
	.byte	4,2,35,36,6
	.byte	'sinIn',0
	.word	3449
	.byte	4,2,35,40,6
	.byte	'cosIn',0
	.word	3449
	.byte	4,2,35,44,0,22
	.word	3689
.L228:
	.byte	8
	.word	3926
.L237:
	.byte	8
	.word	3689
.L276:
	.byte	8
	.word	3138
	.byte	30
	.byte	'memset',0,8,56,17
	.word	383
	.byte	1,1,1,1,31,8,56,33
	.word	383
	.byte	31,8,56,36
	.word	2785
	.byte	31,8,56,41
	.word	2834
	.byte	0,27
	.word	2448
	.byte	28
	.word	2474
	.byte	18,0,27
	.word	2500
	.byte	28
	.word	2532
	.byte	18,0,27
	.word	2571
	.byte	28
	.word	2590
	.byte	18,0,27
	.word	2606
	.byte	28
	.word	2621
	.byte	28
	.word	2635
	.byte	18,0,30
	.byte	'Ifx_LutAtan2F32_float32',0,9,74,29
	.word	467
	.byte	1,1,1,1,17
	.byte	'y',0,9,74,61
	.word	467
	.byte	17
	.byte	'x',0,9,74,72
	.word	467
	.byte	0,27
	.word	2652
	.byte	28
	.word	2685
	.byte	28
	.word	2699
	.byte	21,18,0,0,27
	.word	2729
	.byte	28
	.word	2767
	.byte	21,32
	.word	2652
	.byte	28
	.word	2685
	.byte	28
	.word	2699
	.byte	33
	.word	2725
	.byte	34
	.word	2726
	.byte	0,0,18,0,0
.L343:
	.byte	8
	.word	3330
	.byte	35
	.byte	'__INDIRECT__',0,6,1,1,1,1,1,9
	.byte	'__wchar_t',0,6,1,1
	.word	3436
	.byte	9
	.byte	'__size_t',0,6,1,1
	.word	2834
	.byte	9
	.byte	'__ptrdiff_t',0,6,1,1
	.word	2785
	.byte	36,1,8
	.word	4240
	.byte	9
	.byte	'__codeptr',0,6,1,1
	.word	4242
	.byte	9
	.byte	'size_t',0,10,24,25
	.word	2834
	.byte	9
	.byte	'boolean',0,11,101,29
	.word	198
	.byte	9
	.byte	'uint8',0,11,105,29
	.word	198
	.byte	9
	.byte	'uint16',0,11,109,29
	.word	859
	.byte	9
	.byte	'uint32',0,11,113,29
	.word	177
	.byte	9
	.byte	'uint64',0,11,118,29
	.word	2545
	.byte	9
	.byte	'sint16',0,11,126,29
	.word	3436
	.byte	9
	.byte	'sint32',0,11,131,1,29
	.word	536
	.byte	2
	.byte	'long long int',0,8,5,9
	.byte	'sint64',0,11,138,1,29
	.word	4386
	.byte	9
	.byte	'float32',0,11,167,1,29
	.word	467
	.byte	9
	.byte	'pvoid',0,12,57,28
	.word	383
	.byte	9
	.byte	'Ifx_TickTime',0,12,79,28
	.word	4386
	.byte	9
	.byte	'Ifx_SizeT',0,12,92,16
	.word	3436
	.byte	8
	.word	3436
	.byte	12
	.word	198
	.byte	1,1,11
	.word	383
	.byte	11
	.word	383
	.byte	11
	.word	4489
	.byte	11
	.word	4386
	.byte	0,8
	.word	4494
	.byte	9
	.byte	'IfxStdIf_DPipe_Write',0,13,92,19
	.word	4522
	.byte	9
	.byte	'IfxStdIf_DPipe_Read',0,13,107,19
	.word	4522
	.byte	9
	.byte	'IfxStdIf_DPipe_GetReadCount',0,13,115,18
	.word	561
	.byte	24
	.word	198
	.byte	8
	.word	4620
	.byte	12
	.word	4625
	.byte	1,1,11
	.word	383
	.byte	0,8
	.word	4630
	.byte	9
	.byte	'IfxStdIf_DPipe_GetReadEvent',0,13,123,36
	.word	4643
	.byte	9
	.byte	'IfxStdIf_DPipe_GetWriteCount',0,13,147,1,18
	.word	561
	.byte	8
	.word	4630
	.byte	9
	.byte	'IfxStdIf_DPipe_GetWriteEvent',0,13,155,1,37
	.word	4722
	.byte	12
	.word	198
	.byte	1,1,11
	.word	383
	.byte	11
	.word	3436
	.byte	11
	.word	4386
	.byte	0,8
	.word	4765
	.byte	9
	.byte	'IfxStdIf_DPipe_CanReadCount',0,13,166,1,19
	.word	4788
	.byte	9
	.byte	'IfxStdIf_DPipe_CanWriteCount',0,13,177,1,19
	.word	4788
	.byte	12
	.word	198
	.byte	1,1,11
	.word	383
	.byte	11
	.word	4386
	.byte	0,8
	.word	4868
	.byte	9
	.byte	'IfxStdIf_DPipe_FlushTx',0,13,186,1,19
	.word	4886
	.byte	9
	.byte	'IfxStdIf_DPipe_ClearTx',0,13,200,1,16
	.word	430
	.byte	9
	.byte	'IfxStdIf_DPipe_ClearRx',0,13,193,1,16
	.word	430
	.byte	9
	.byte	'IfxStdIf_DPipe_OnReceive',0,13,208,1,16
	.word	430
	.byte	9
	.byte	'IfxStdIf_DPipe_OnTransmit',0,13,215,1,16
	.word	430
	.byte	9
	.byte	'IfxStdIf_DPipe_OnError',0,13,222,1,16
	.word	430
	.byte	12
	.word	177
	.byte	1,1,11
	.word	383
	.byte	0,8
	.word	5088
	.byte	9
	.byte	'IfxStdIf_DPipe_GetSendCount',0,13,131,1,18
	.word	5101
	.byte	12
	.word	4386
	.byte	1,1,11
	.word	383
	.byte	0,8
	.word	5143
	.byte	9
	.byte	'IfxStdIf_DPipe_GetTxTimeStamp',0,13,139,1,24
	.word	5156
	.byte	9
	.byte	'IfxStdIf_DPipe_ResetSendCount',0,13,229,1,16
	.word	430
	.byte	15
	.byte	'IfxStdIf_DPipe_',0,13,233,1,8,76,6
	.byte	'driver',0
	.word	388
	.byte	4,2,35,0,6
	.byte	'txDisabled',0
	.word	198
	.byte	1,2,35,4,6
	.byte	'write',0
	.word	4527
	.byte	4,2,35,8,6
	.byte	'read',0
	.word	4556
	.byte	4,2,35,12,6
	.byte	'getReadCount',0
	.word	4584
	.byte	4,2,35,16,6
	.byte	'getReadEvent',0
	.word	4648
	.byte	4,2,35,20,6
	.byte	'getWriteCount',0
	.word	4684
	.byte	4,2,35,24,6
	.byte	'getWriteEvent',0
	.word	4727
	.byte	4,2,35,28,6
	.byte	'canReadCount',0
	.word	4793
	.byte	4,2,35,32,6
	.byte	'canWriteCount',0
	.word	4830
	.byte	4,2,35,36,6
	.byte	'flushTx',0
	.word	4891
	.byte	4,2,35,40,6
	.byte	'clearTx',0
	.word	4923
	.byte	4,2,35,44,6
	.byte	'clearRx',0
	.word	4955
	.byte	4,2,35,48,6
	.byte	'onReceive',0
	.word	4987
	.byte	4,2,35,52,6
	.byte	'onTransmit',0
	.word	5021
	.byte	4,2,35,56,6
	.byte	'onError',0
	.word	5056
	.byte	4,2,35,60,6
	.byte	'getSendCount',0
	.word	5106
	.byte	4,2,35,64,6
	.byte	'getTxTimeStamp',0
	.word	5161
	.byte	4,2,35,68,6
	.byte	'resetSendCount',0
	.word	5200
	.byte	4,2,35,72,0,9
	.byte	'IfxStdIf_DPipe',0,13,71,32
	.word	5239
	.byte	8
	.word	4494
	.byte	8
	.word	4494
	.byte	8
	.word	548
	.byte	8
	.word	4630
	.byte	8
	.word	548
	.byte	8
	.word	4630
	.byte	8
	.word	4765
	.byte	8
	.word	4765
	.byte	8
	.word	4868
	.byte	8
	.word	421
	.byte	8
	.word	421
	.byte	8
	.word	421
	.byte	8
	.word	421
	.byte	8
	.word	421
	.byte	8
	.word	5088
	.byte	8
	.word	5143
	.byte	8
	.word	421
	.byte	24
	.word	198
	.byte	8
	.word	5747
	.byte	9
	.byte	'IfxStdIf_DPipe_WriteEvent',0,13,73,32
	.word	5752
	.byte	9
	.byte	'IfxStdIf_DPipe_ReadEvent',0,13,74,32
	.word	5752
	.byte	13,1,76,9,1,14
	.byte	'IfxStdIf_Pos_ResolutionFactor_oneFold',0,1,14
	.byte	'IfxStdIf_Pos_ResolutionFactor_twoFold',0,2,14
	.byte	'IfxStdIf_Pos_ResolutionFactor_fourFold',0,4,0,9
	.byte	'IfxStdIf_Pos_ResolutionFactor',0,1,81,3
	.word	5824
	.byte	9
	.byte	'IfxStdIf_Pos_SensorType',0,1,92,3
	.word	1017
	.byte	9
	.byte	'IfxStdIf_Pos_Dir',0,1,100,3
	.word	632
	.byte	9
	.byte	'IfxStdIf_Pos_Status',0,1,114,3
	.word	344
	.byte	9
	.byte	'IfxStdIf_Pos_RawAngle',0,1,116,16
	.word	536
	.byte	9
	.byte	'IfxStdIf_Pos',0,1,119,30
	.word	1671
	.byte	9
	.byte	'Ifx_LowPassPt1F32',0,3,69,3
	.word	2346
	.byte	9
	.byte	'Ifx_LowPassPt1F32_Config',0,3,77,3
	.word	2924
	.byte	9
	.byte	'Ifx_AngleTrkF32_Config',0,7,91,3
	.word	3689
	.byte	9
	.byte	'Ifx_AngleTrkF32_CfgData',0,7,101,3
	.word	3330
	.byte	9
	.byte	'Ifx_AngleTrkF32_PosIf',0,7,116,3
	.word	3138
	.byte	9
	.byte	'Ifx_AngleTrkF32',0,7,134,1,3
	.word	3454
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L98:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,19,1,58,15,59,15,57,15,11,15
	.byte	0,0,4,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,5,23,1,58,15,59,15,57,15,11,15,0,0,6,13,0,3,8,73,19,11
	.byte	15,56,9,0,0,7,59,0,3,8,0,0,8,15,0,73,19,0,0,9,22,0,3,8,58,15,59,15,57,15,73,19,0,0,10,21,1,54,15,39,12
	.byte	0,0,11,5,0,73,19,0,0,12,21,1,73,19,54,15,39,12,0,0,13,4,1,58,15,59,15,57,15,11,15,0,0,14,40,0,3,8,28,13
	.byte	0,0,15,19,1,3,8,58,15,59,15,57,15,11,15,0,0,16,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0
	.byte	17,5,0,3,8,58,15,59,15,57,15,73,19,0,0,18,11,0,0,0,19,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0,0
	.byte	20,21,0,54,15,39,12,0,0,21,11,1,0,0,22,38,0,73,19,0,0,23,46,1,3,8,54,15,39,12,63,12,60,12,0,0,24,53,0
	.byte	73,19,0,0,25,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,26,5,0,3,8,73,19,0,0,27,46,1,49,19,0,0,28,5,0
	.byte	49,19,0,0,29,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,30,46,1,3,8,58,15,59,15,57,15,73,19
	.byte	54,15,39,12,63,12,60,12,0,0,31,5,0,58,15,59,15,57,15,73,19,0,0,32,29,1,49,19,0,0,33,11,1,49,19,0,0,34
	.byte	11,0,49,19,0,0,35,46,0,3,8,58,15,59,15,57,15,54,15,63,12,60,12,0,0,36,21,0,54,15,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L99:
	.word	.L397-.L396
.L396:
	.half	3
	.word	.L399-.L398
.L398:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0
	.byte	'D:\\Program Files\\TASKING\\TriCore v6.3r1\\ctc\\include\\',0,0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Service\\CpuGeneric\\StdIf\\IfxStdIf_Pos.h',0
	.byte	0,0,0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Service\\CpuGeneric\\StdIf\\IfxStdIf.h',0
	.byte	0,0,0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_LowPassPt1F32.h',0
	.byte	0,0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu_Intrinsics.h',0,1,0,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0,0,0,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.h',0,0,0,0
	.byte	'string.h',0,2,0,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_LutAtan2F32.h',0,0,0,0
	.byte	'stddef.h',0,2,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Ifx_Types.h',0,1,0,0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Service\\CpuGeneric\\StdIf\\IfxStdIf_DPipe.h',0
	.byte	0,0,0,0
.L399:
.L397:
	.sdecl	'.debug_info',debug,cluster('Ifx_AngleTrkF32_init')
	.sect	'.debug_info'
.L100:
	.word	323
	.half	3
	.word	.L101
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L103,.L102
	.byte	2
	.word	.L96
	.byte	3
	.byte	'Ifx_AngleTrkF32_init',0,1,165,1,6,1,1,1
	.word	.L55,.L225,.L54
	.byte	4
	.byte	'aObsv',0,1,165,1,44
	.word	.L226,.L227
	.byte	4
	.byte	'config',0,1,165,1,81
	.word	.L228,.L229
	.byte	4
	.byte	'Ts',0,1,165,1,97
	.word	.L230,.L231
	.byte	5
	.word	.L55,.L225
	.byte	5
	.word	.L232,.L233
	.byte	6
	.byte	'lpfConfig',0,1,203,1,34
	.word	.L234,.L235
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_AngleTrkF32_init')
	.sect	'.debug_abbrev'
.L101:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_AngleTrkF32_init')
	.sect	'.debug_line'
.L102:
	.word	.L401-.L400
.L400:
	.half	3
	.word	.L403-.L402
.L402:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0,0,0,0,0
.L403:
	.byte	5,6,7,0,5,2
	.word	.L55
	.byte	3,164,1,1,5,43,9
	.half	.L362-.L55
	.byte	3,2,1,5,35,9
	.half	.L404-.L362
	.byte	1,5,43,9
	.half	.L405-.L404
	.byte	3,1,1,5,35,9
	.half	.L406-.L405
	.byte	1,5,43,9
	.half	.L407-.L406
	.byte	3,1,1,5,35,9
	.half	.L408-.L407
	.byte	1,9
	.half	.L409-.L408
	.byte	3,1,1,5,37,9
	.half	.L410-.L409
	.byte	3,1,1,5,35,9
	.half	.L411-.L410
	.byte	1,5,37,9
	.half	.L412-.L411
	.byte	3,1,1,5,35,9
	.half	.L413-.L412
	.byte	1,5,37,9
	.half	.L414-.L413
	.byte	3,1,1,5,35,9
	.half	.L415-.L414
	.byte	1,5,37,9
	.half	.L416-.L415
	.byte	3,1,1,5,35,9
	.half	.L417-.L416
	.byte	1,5,43,9
	.half	.L418-.L417
	.byte	3,1,1,5,35,9
	.half	.L419-.L418
	.byte	1,5,37,9
	.half	.L420-.L419
	.byte	3,1,1,5,63,9
	.half	.L421-.L420
	.byte	1,5,43,9
	.half	.L422-.L421
	.byte	1,5,41,9
	.half	.L423-.L422
	.byte	1,5,77,9
	.half	.L424-.L423
	.byte	1,5,75,9
	.half	.L425-.L424
	.byte	1,5,83,9
	.half	.L426-.L425
	.byte	1,5,81,9
	.half	.L427-.L426
	.byte	1,5,35,9
	.half	.L428-.L427
	.byte	1,5,43,9
	.half	.L429-.L428
	.byte	3,2,1,5,35,9
	.half	.L430-.L429
	.byte	1,5,43,9
	.half	.L431-.L430
	.byte	3,1,1,5,35,9
	.half	.L432-.L431
	.byte	1,5,43,9
	.half	.L433-.L432
	.byte	3,1,1,5,35,9
	.half	.L434-.L433
	.byte	1,5,43,9
	.half	.L435-.L434
	.byte	3,1,1,5,35,9
	.half	.L436-.L435
	.byte	1,5,43,9
	.half	.L437-.L436
	.byte	3,1,1,5,35,9
	.half	.L438-.L437
	.byte	1,5,43,9
	.half	.L439-.L438
	.byte	3,1,1,5,35,9
	.half	.L440-.L439
	.byte	1,5,43,9
	.half	.L441-.L440
	.byte	3,1,1,5,35,9
	.half	.L442-.L441
	.byte	1,5,43,9
	.half	.L443-.L442
	.byte	3,1,1,5,35,9
	.half	.L444-.L443
	.byte	1,5,10,9
	.half	.L445-.L444
	.byte	3,3,1,5,36,9
	.half	.L446-.L445
	.byte	1,5,62,9
	.half	.L447-.L446
	.byte	1,5,47,9
	.half	.L448-.L447
	.byte	3,3,1,5,58,9
	.half	.L359-.L448
	.byte	1,5,65,9
	.half	.L449-.L359
	.byte	1,5,72,9
	.half	.L450-.L449
	.byte	1,5,44,9
	.half	.L9-.L450
	.byte	3,3,1,5,24,9
	.half	.L364-.L9
	.byte	3,1,1,5,22,9
	.half	.L451-.L364
	.byte	1,5,24,9
	.half	.L452-.L451
	.byte	3,1,1,5,22,9
	.half	.L453-.L452
	.byte	1,5,24,9
	.half	.L454-.L453
	.byte	3,1,1,5,22,9
	.half	.L455-.L454
	.byte	1,5,24,9
	.half	.L456-.L455
	.byte	3,1,1,5,22,9
	.half	.L457-.L456
	.byte	1,5,24,9
	.half	.L458-.L457
	.byte	3,1,1,5,22,9
	.half	.L459-.L458
	.byte	1,5,24,9
	.half	.L460-.L459
	.byte	3,1,1,5,22,9
	.half	.L461-.L460
	.byte	1,5,37,9
	.half	.L232-.L461
	.byte	3,4,1,5,35,9
	.half	.L462-.L232
	.byte	1,5,57,9
	.half	.L463-.L462
	.byte	3,1,1,5,40,9
	.half	.L464-.L463
	.byte	1,5,57,9
	.half	.L465-.L464
	.byte	1,5,35,9
	.half	.L466-.L465
	.byte	1,9
	.half	.L467-.L466
	.byte	3,1,1,5,38,9
	.half	.L468-.L467
	.byte	3,1,1,5,51,9
	.half	.L469-.L468
	.byte	1,5,1,9
	.half	.L233-.L469
	.byte	3,3,1,7,9
	.half	.L104-.L233
	.byte	0,1,1
.L401:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_AngleTrkF32_init')
	.sect	'.debug_ranges'
.L103:
	.word	-1,.L55,0,.L104-.L55,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_AngleTrkF32_initConfig')
	.sect	'.debug_info'
.L105:
	.word	320
	.half	3
	.word	.L106
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L108,.L107
	.byte	2
	.word	.L96
	.byte	3
	.byte	'Ifx_AngleTrkF32_initConfig',0,1,133,1,6,1,1,1
	.word	.L51,.L236,.L50
	.byte	4
	.byte	'config',0,1,133,1,57
	.word	.L237,.L238
	.byte	4
	.byte	'sinIn',0,1,133,1,73
	.word	.L239,.L240
	.byte	4
	.byte	'cosIn',0,1,133,1,88
	.word	.L239,.L241
	.byte	5
	.word	.L51,.L236
	.byte	6
	.byte	'cfgData',0,1,135,1,29
	.word	.L242,.L243
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_AngleTrkF32_initConfig')
	.sect	'.debug_abbrev'
.L106:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_AngleTrkF32_initConfig')
	.sect	'.debug_line'
.L107:
	.word	.L471-.L470
.L470:
	.half	3
	.word	.L473-.L472
.L472:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0,0,0,0,0
.L473:
	.byte	5,6,7,0,5,2
	.word	.L51
	.byte	3,132,1,1,5,38,9
	.half	.L356-.L51
	.byte	3,3,1,5,47,9
	.half	.L352-.L356
	.byte	1,5,54,9
	.half	.L474-.L352
	.byte	1,5,61,9
	.half	.L475-.L474
	.byte	1,5,40,9
	.half	.L353-.L475
	.byte	3,1,1,5,31,9
	.half	.L476-.L353
	.byte	1,5,40,9
	.half	.L477-.L476
	.byte	3,1,1,5,31,9
	.half	.L478-.L477
	.byte	1,5,40,9
	.half	.L479-.L478
	.byte	3,1,1,5,31,9
	.half	.L480-.L479
	.byte	1,9
	.half	.L481-.L480
	.byte	3,1,1,9
	.half	.L482-.L481
	.byte	3,1,1,5,44,9
	.half	.L483-.L482
	.byte	3,1,1,5,31,9
	.half	.L484-.L483
	.byte	1,5,33,9
	.half	.L485-.L484
	.byte	3,1,1,5,31,9
	.half	.L486-.L485
	.byte	1,5,33,9
	.half	.L487-.L486
	.byte	3,1,1,5,31,9
	.half	.L488-.L487
	.byte	1,5,33,9
	.half	.L489-.L488
	.byte	3,1,1,5,31,9
	.half	.L490-.L489
	.byte	1,5,33,9
	.half	.L491-.L490
	.byte	3,1,1,5,31,9
	.half	.L492-.L491
	.byte	1,5,33,9
	.half	.L493-.L492
	.byte	3,1,1,5,31,9
	.half	.L494-.L493
	.byte	1,5,33,9
	.half	.L495-.L494
	.byte	3,1,1,5,31,9
	.half	.L496-.L495
	.byte	1,5,38,9
	.half	.L497-.L496
	.byte	3,1,1,5,31,9
	.half	.L498-.L497
	.byte	1,5,1,9
	.half	.L499-.L498
	.byte	3,1,1,7,9
	.half	.L109-.L499
	.byte	0,1,1
.L471:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_AngleTrkF32_initConfig')
	.sect	'.debug_ranges'
.L108:
	.word	-1,.L51,0,.L109-.L51,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_AngleTrkF32_step')
	.sect	'.debug_info'
.L110:
	.word	659
	.half	3
	.word	.L111
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L113,.L112
	.byte	2
	.word	.L96
	.byte	3
	.byte	'Ifx_AngleTrkF32_step',0,1,224,1,9
	.word	.L230
	.byte	1,1,1
	.word	.L57,.L244,.L56
	.byte	4
	.byte	'aObsv',0,1,224,1,47
	.word	.L226,.L245
	.byte	4
	.byte	'sinIn',0,1,224,1,61
	.word	.L246,.L247
	.byte	4
	.byte	'cosIn',0,1,224,1,75
	.word	.L246,.L248
	.byte	4
	.byte	'phase',0,1,224,1,90
	.word	.L230,.L249
	.byte	5
	.word	.L57,.L244
	.byte	6
	.byte	'angleRef',0,1,226,1,13
	.word	.L230,.L250
	.byte	6
	.byte	'angleEst',0,1,226,1,23
	.word	.L230,.L251
	.byte	6
	.byte	'dAccel',0,1,226,1,33
	.word	.L230,.L252
	.byte	6
	.byte	'dSpeed',0,1,226,1,41
	.word	.L230,.L253
	.byte	6
	.byte	'dAngle',0,1,226,1,49
	.word	.L230,.L254
	.byte	7
	.word	.L255,.L256,.L19
	.byte	8
	.word	.L257,.L258
	.byte	9
	.word	.L259,.L256,.L19
	.byte	7
	.word	.L260,.L261,.L18
	.byte	8
	.word	.L262,.L263
	.byte	8
	.word	.L264,.L265
	.byte	9
	.word	.L266,.L261,.L18
	.byte	9
	.word	.L267,.L13,.L18
	.byte	6
	.byte	'fullPeriod',0,1,76,13
	.word	.L230,.L268
	.byte	0,0,0,0,0,7
	.word	.L255,.L269,.L26
	.byte	8
	.word	.L257,.L258
	.byte	9
	.word	.L259,.L269,.L26
	.byte	7
	.word	.L260,.L270,.L25
	.byte	8
	.word	.L262,.L263
	.byte	8
	.word	.L264,.L265
	.byte	9
	.word	.L266,.L270,.L25
	.byte	9
	.word	.L267,.L20,.L25
	.byte	6
	.byte	'fullPeriod',0,1,76,13
	.word	.L230,.L271
	.byte	0,0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_AngleTrkF32_step')
	.sect	'.debug_abbrev'
.L111:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17
	.byte	1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_AngleTrkF32_step')
	.sect	'.debug_line'
.L112:
	.word	.L501-.L500
.L500:
	.half	3
	.word	.L503-.L502
.L502:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0,0,0,0,0
.L503:
	.byte	5,9,7,0,5,2
	.word	.L57
	.byte	3,223,1,1,5,20,9
	.half	.L370-.L57
	.byte	3,4,1,5,5,9
	.half	.L504-.L370
	.byte	1,5,43,7,9
	.half	.L505-.L504
	.byte	3,2,1,5,59,9
	.half	.L506-.L505
	.byte	1,5,74,9
	.half	.L366-.L506
	.byte	1,5,43,9
	.half	.L11-.L366
	.byte	3,4,1,5,59,9
	.half	.L372-.L11
	.byte	1,5,22,9
	.half	.L12-.L372
	.byte	3,3,1,5,33,9
	.half	.L507-.L12
	.byte	3,1,1,5,22,9
	.half	.L373-.L507
	.byte	3,2,1,5,37,9
	.half	.L508-.L373
	.byte	3,3,1,5,48,9
	.half	.L374-.L508
	.byte	1,5,41,9
	.half	.L509-.L374
	.byte	1,5,62,9
	.half	.L375-.L509
	.byte	3,1,1,5,28,9
	.half	.L510-.L375
	.byte	1,5,39,9
	.half	.L511-.L510
	.byte	1,5,21,9
	.half	.L376-.L511
	.byte	1,5,40,9
	.half	.L512-.L376
	.byte	3,3,1,5,51,9
	.half	.L513-.L512
	.byte	1,5,70,9
	.half	.L514-.L513
	.byte	1,5,63,9
	.half	.L515-.L514
	.byte	1,5,64,9
	.half	.L377-.L515
	.byte	3,1,1,5,29,9
	.half	.L516-.L377
	.byte	1,5,41,9
	.half	.L517-.L516
	.byte	1,5,22,9
	.half	.L378-.L517
	.byte	1,5,40,9
	.half	.L518-.L378
	.byte	3,3,1,5,51,9
	.half	.L519-.L518
	.byte	1,5,70,9
	.half	.L520-.L519
	.byte	1,5,63,9
	.half	.L521-.L520
	.byte	1,5,58,9
	.half	.L379-.L521
	.byte	3,1,1,5,51,9
	.half	.L522-.L379
	.byte	1,5,78,9
	.half	.L523-.L522
	.byte	1,5,29,9
	.half	.L524-.L523
	.byte	1,5,40,9
	.half	.L525-.L524
	.byte	1,5,22,9
	.half	.L380-.L525
	.byte	3,1,1,5,41,9
	.half	.L256-.L380
	.byte	3,226,126,1,5,2,9
	.half	.L261-.L256
	.byte	3,108,1,5,28,9
	.half	.L13-.L261
	.byte	3,1,1,5,32,9
	.half	.L526-.L13
	.byte	3,2,1,5,30,9
	.half	.L527-.L526
	.byte	1,5,15,9
	.half	.L528-.L527
	.byte	1,5,5,9
	.half	.L529-.L528
	.byte	1,5,23,7,9
	.half	.L530-.L529
	.byte	3,2,1,5,35,9
	.half	.L531-.L530
	.byte	1,5,23,9
	.half	.L14-.L531
	.byte	3,2,1,5,37,9
	.half	.L532-.L14
	.byte	1,5,35,9
	.half	.L533-.L532
	.byte	1,5,20,9
	.half	.L534-.L533
	.byte	1,5,10,9
	.half	.L535-.L534
	.byte	1,5,23,7,9
	.half	.L536-.L535
	.byte	3,2,1,5,35,9
	.half	.L537-.L536
	.byte	1,5,5,9
	.half	.L15-.L537
	.byte	3,5,1,9
	.half	.L18-.L15
	.byte	3,6,1,5,22,9
	.half	.L19-.L18
	.byte	3,160,1,1,5,61,9
	.half	.L538-.L19
	.byte	3,3,1,5,72,9
	.half	.L539-.L538
	.byte	1,5,41,9
	.half	.L269-.L539
	.byte	3,221,126,1,5,2,9
	.half	.L270-.L269
	.byte	3,108,1,5,28,9
	.half	.L20-.L270
	.byte	3,1,1,5,32,9
	.half	.L540-.L20
	.byte	3,2,1,5,30,9
	.half	.L541-.L540
	.byte	1,5,15,9
	.half	.L542-.L541
	.byte	1,5,5,9
	.half	.L543-.L542
	.byte	1,5,23,7,9
	.half	.L544-.L543
	.byte	3,2,1,5,35,9
	.half	.L545-.L544
	.byte	1,5,23,9
	.half	.L21-.L545
	.byte	3,2,1,5,37,9
	.half	.L546-.L21
	.byte	1,5,35,9
	.half	.L381-.L546
	.byte	1,5,20,9
	.half	.L547-.L381
	.byte	1,5,10,9
	.half	.L548-.L547
	.byte	1,5,23,7,9
	.half	.L549-.L548
	.byte	3,2,1,5,35,9
	.half	.L550-.L549
	.byte	1,5,5,9
	.half	.L22-.L550
	.byte	3,5,1,9
	.half	.L25-.L22
	.byte	3,6,1,5,27,9
	.half	.L26-.L25
	.byte	3,163,1,1,5,34,9
	.half	.L551-.L26
	.byte	3,2,1,5,48,9
	.half	.L552-.L551
	.byte	1,5,29,9
	.half	.L553-.L552
	.byte	1,5,50,9
	.half	.L554-.L553
	.byte	1,5,77,9
	.half	.L555-.L554
	.byte	1,5,50,9
	.half	.L27-.L555
	.byte	1,5,27,9
	.half	.L28-.L27
	.byte	1,5,32,9
	.half	.L556-.L28
	.byte	3,4,1,5,49,9
	.half	.L557-.L556
	.byte	1,5,17,9
	.half	.L384-.L557
	.byte	3,3,1,5,5,9
	.half	.L558-.L384
	.byte	1,5,1,9
	.half	.L29-.L558
	.byte	3,1,1,7,9
	.half	.L114-.L29
	.byte	0,1,1
.L501:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_AngleTrkF32_step')
	.sect	'.debug_ranges'
.L113:
	.word	-1,.L57,0,.L114-.L57,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_AngleTrkF32_updateStatus')
	.sect	'.debug_info'
.L115:
	.word	339
	.half	3
	.word	.L116
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L118,.L117
	.byte	2
	.word	.L96
	.byte	3
	.byte	'Ifx_AngleTrkF32_updateStatus',0,1,160,2,6,1,1,1
	.word	.L61,.L272,.L60
	.byte	4
	.byte	'aObsv',0,1,160,2,52
	.word	.L226,.L273
	.byte	4
	.byte	'sinIn',0,1,160,2,66
	.word	.L246,.L274
	.byte	4
	.byte	'cosIn',0,1,160,2,80
	.word	.L246,.L275
	.byte	5
	.word	.L61,.L272
	.byte	6
	.byte	'base',0,1,162,2,28
	.word	.L276,.L277
	.byte	6
	.byte	'sqrAmpl',0,1,163,2,29
	.word	.L278,.L279
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_AngleTrkF32_updateStatus')
	.sect	'.debug_abbrev'
.L116:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_AngleTrkF32_updateStatus')
	.sect	'.debug_line'
.L117:
	.word	.L560-.L559
.L559:
	.half	3
	.word	.L562-.L561
.L561:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0,0,0,0,0
.L562:
	.byte	5,54,7,0,5,2
	.word	.L61
	.byte	3,162,2,1,5,71,9
	.half	.L385-.L61
	.byte	1,5,19,9
	.half	.L386-.L385
	.byte	3,1,1,5,65,9
	.half	.L563-.L386
	.byte	1,5,49,9
	.half	.L564-.L563
	.byte	1,5,38,9
	.half	.L565-.L564
	.byte	1,5,19,9
	.half	.L566-.L565
	.byte	3,1,1,5,65,9
	.half	.L567-.L566
	.byte	1,5,49,9
	.half	.L568-.L567
	.byte	1,5,38,9
	.half	.L569-.L568
	.byte	1,5,40,9
	.half	.L570-.L569
	.byte	3,1,1,5,19,9
	.half	.L31-.L570
	.byte	1,5,80,9
	.half	.L571-.L31
	.byte	1,5,64,9
	.half	.L572-.L571
	.byte	1,5,38,9
	.half	.L573-.L572
	.byte	1,5,1,9
	.half	.L574-.L573
	.byte	3,1,1,7,9
	.half	.L119-.L574
	.byte	0,1,1
.L560:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_AngleTrkF32_updateStatus')
	.sect	'.debug_ranges'
.L118:
	.word	-1,.L61,0,.L119-.L61,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_AngleTrkF32_getAbsolutePosition')
	.sect	'.debug_info'
.L120:
	.word	273
	.half	3
	.word	.L121
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L123,.L122
	.byte	2
	.word	.L96
	.byte	3
	.byte	'Ifx_AngleTrkF32_getAbsolutePosition',0,1,211,2,9
	.word	.L230
	.byte	1,1,1
	.word	.L69,.L280,.L68
	.byte	4
	.byte	'driver',0,1,211,2,62
	.word	.L226,.L281
	.byte	5
	.word	.L69,.L280
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_AngleTrkF32_getAbsolutePosition')
	.sect	'.debug_abbrev'
.L121:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_AngleTrkF32_getAbsolutePosition')
	.sect	'.debug_line'
.L122:
	.word	.L576-.L575
.L575:
	.half	3
	.word	.L578-.L577
.L577:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0,0,0,0,0
.L578:
	.byte	5,34,7,0,5,2
	.word	.L69
	.byte	3,212,2,1,5,13,9
	.half	.L579-.L69
	.byte	1,5,63,9
	.half	.L580-.L579
	.byte	1,5,42,9
	.half	.L581-.L580
	.byte	1,5,99,9
	.half	.L582-.L581
	.byte	1,5,78,9
	.half	.L583-.L582
	.byte	1,5,76,9
	.half	.L584-.L583
	.byte	1,5,40,9
	.half	.L585-.L584
	.byte	1,5,114,9
	.half	.L586-.L585
	.byte	1,5,112,9
	.half	.L587-.L586
	.byte	1,5,120,9
	.half	.L588-.L587
	.byte	1,5,118,9
	.half	.L589-.L588
	.byte	1,5,5,9
	.half	.L590-.L589
	.byte	1,5,1,9
	.half	.L34-.L590
	.byte	3,1,1,7,9
	.half	.L124-.L34
	.byte	0,1,1
.L576:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_AngleTrkF32_getAbsolutePosition')
	.sect	'.debug_ranges'
.L123:
	.word	-1,.L69,0,.L124-.L69,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_AngleTrkF32_getDirection')
	.sect	'.debug_info'
.L125:
	.word	266
	.half	3
	.word	.L126
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L128,.L127
	.byte	2
	.word	.L96
	.byte	3
	.byte	'Ifx_AngleTrkF32_getDirection',0,1,217,2,18
	.word	.L282
	.byte	1,1,1
	.word	.L71,.L283,.L70
	.byte	4
	.byte	'driver',0,1,217,2,64
	.word	.L226,.L284
	.byte	5
	.word	.L71,.L283
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_AngleTrkF32_getDirection')
	.sect	'.debug_abbrev'
.L126:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_AngleTrkF32_getDirection')
	.sect	'.debug_line'
.L127:
	.word	.L592-.L591
.L591:
	.half	3
	.word	.L594-.L593
.L593:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0,0,0,0,0
.L594:
	.byte	5,24,7,0,5,2
	.word	.L71
	.byte	3,218,2,1,5,5,9
	.half	.L595-.L71
	.byte	1,5,1,9
	.half	.L35-.L595
	.byte	3,1,1,7,9
	.half	.L129-.L35
	.byte	0,1,1
.L592:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_AngleTrkF32_getDirection')
	.sect	'.debug_ranges'
.L128:
	.word	-1,.L71,0,.L129-.L71,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_AngleTrkF32_getFault')
	.sect	'.debug_info'
.L130:
	.word	262
	.half	3
	.word	.L131
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L133,.L132
	.byte	2
	.word	.L96
	.byte	3
	.byte	'Ifx_AngleTrkF32_getFault',0,1,223,2,21
	.word	.L285
	.byte	1,1,1
	.word	.L73,.L286,.L72
	.byte	4
	.byte	'driver',0,1,223,2,63
	.word	.L226,.L287
	.byte	5
	.word	.L73,.L286
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_AngleTrkF32_getFault')
	.sect	'.debug_abbrev'
.L131:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_AngleTrkF32_getFault')
	.sect	'.debug_line'
.L132:
	.word	.L597-.L596
.L596:
	.half	3
	.word	.L599-.L598
.L598:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0,0,0,0,0
.L599:
	.byte	5,24,7,0,5,2
	.word	.L73
	.byte	3,224,2,1,5,5,9
	.half	.L600-.L73
	.byte	1,5,1,9
	.half	.L36-.L600
	.byte	3,1,1,7,9
	.half	.L134-.L36
	.byte	0,1,1
.L597:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_AngleTrkF32_getFault')
	.sect	'.debug_ranges'
.L133:
	.word	-1,.L73,0,.L134-.L73,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_AngleTrkF32_getOffset')
	.sect	'.debug_info'
.L135:
	.word	263
	.half	3
	.word	.L136
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L138,.L137
	.byte	2
	.word	.L96
	.byte	3
	.byte	'Ifx_AngleTrkF32_getOffset',0,1,229,2,8
	.word	.L278
	.byte	1,1,1
	.word	.L75,.L288,.L74
	.byte	4
	.byte	'driver',0,1,229,2,51
	.word	.L226,.L289
	.byte	5
	.word	.L75,.L288
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_AngleTrkF32_getOffset')
	.sect	'.debug_abbrev'
.L136:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_AngleTrkF32_getOffset')
	.sect	'.debug_line'
.L137:
	.word	.L602-.L601
.L601:
	.half	3
	.word	.L604-.L603
.L603:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0,0,0,0,0
.L604:
	.byte	5,24,7,0,5,2
	.word	.L75
	.byte	3,230,2,1,5,5,9
	.half	.L605-.L75
	.byte	1,5,1,9
	.half	.L37-.L605
	.byte	3,1,1,7,9
	.half	.L139-.L37
	.byte	0,1,1
.L602:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_AngleTrkF32_getOffset')
	.sect	'.debug_ranges'
.L138:
	.word	-1,.L75,0,.L139-.L75,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_AngleTrkF32_getPeriodPerRotation')
	.sect	'.debug_info'
.L140:
	.word	274
	.half	3
	.word	.L141
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L143,.L142
	.byte	2
	.word	.L96
	.byte	3
	.byte	'Ifx_AngleTrkF32_getPeriodPerRotation',0,1,235,2,8
	.word	.L290
	.byte	1,1,1
	.word	.L77,.L291,.L76
	.byte	4
	.byte	'driver',0,1,235,2,62
	.word	.L226,.L292
	.byte	5
	.word	.L77,.L291
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_AngleTrkF32_getPeriodPerRotation')
	.sect	'.debug_abbrev'
.L141:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_AngleTrkF32_getPeriodPerRotation')
	.sect	'.debug_line'
.L142:
	.word	.L607-.L606
.L606:
	.half	3
	.word	.L609-.L608
.L608:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0,0,0,0,0
.L609:
	.byte	5,24,7,0,5,2
	.word	.L77
	.byte	3,236,2,1,5,5,9
	.half	.L610-.L77
	.byte	1,5,1,9
	.half	.L38-.L610
	.byte	3,1,1,7,9
	.half	.L144-.L38
	.byte	0,1,1
.L607:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_AngleTrkF32_getPeriodPerRotation')
	.sect	'.debug_ranges'
.L143:
	.word	-1,.L77,0,.L144-.L77,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_AngleTrkF32_getPosition')
	.sect	'.debug_info'
.L145:
	.word	265
	.half	3
	.word	.L146
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L148,.L147
	.byte	2
	.word	.L96
	.byte	3
	.byte	'Ifx_AngleTrkF32_getPosition',0,1,241,2,9
	.word	.L230
	.byte	1,1,1
	.word	.L79,.L293,.L78
	.byte	4
	.byte	'driver',0,1,241,2,54
	.word	.L226,.L294
	.byte	5
	.word	.L79,.L293
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_AngleTrkF32_getPosition')
	.sect	'.debug_abbrev'
.L146:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_AngleTrkF32_getPosition')
	.sect	'.debug_line'
.L147:
	.word	.L612-.L611
.L611:
	.half	3
	.word	.L614-.L613
.L613:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0,0,0,0,0
.L614:
	.byte	5,33,7,0,5,2
	.word	.L79
	.byte	3,242,2,1,5,12,9
	.half	.L615-.L79
	.byte	1,5,60,9
	.half	.L616-.L615
	.byte	1,5,46,9
	.half	.L617-.L616
	.byte	1,5,5,9
	.half	.L618-.L617
	.byte	1,5,1,9
	.half	.L39-.L618
	.byte	3,1,1,7,9
	.half	.L149-.L39
	.byte	0,1,1
.L612:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_AngleTrkF32_getPosition')
	.sect	'.debug_ranges'
.L148:
	.word	-1,.L79,0,.L149-.L79,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_AngleTrkF32_getRawPosition')
	.sect	'.debug_info'
.L150:
	.word	286
	.half	3
	.word	.L151
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L153,.L152
	.byte	2
	.word	.L96
	.byte	3
	.byte	'Ifx_AngleTrkF32_getRawPosition',0,1,190,2,23
	.word	.L278
	.byte	1,1,1
	.word	.L65,.L295,.L64
	.byte	4
	.byte	'aObsv',0,1,190,2,71
	.word	.L226,.L296
	.byte	5
	.word	.L65,.L295
	.byte	6
	.byte	'base',0,1,192,2,28
	.word	.L276,.L297
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_AngleTrkF32_getRawPosition')
	.sect	'.debug_abbrev'
.L151:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_AngleTrkF32_getRawPosition')
	.sect	'.debug_line'
.L152:
	.word	.L620-.L619
.L619:
	.half	3
	.word	.L622-.L621
.L621:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0,0,0,0,0
.L622:
	.byte	5,16,7,0,5,2
	.word	.L65
	.byte	3,192,2,1,5,5,9
	.half	.L623-.L65
	.byte	1,5,1,9
	.half	.L32-.L623
	.byte	3,1,1,7,9
	.half	.L154-.L32
	.byte	0,1,1
.L620:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_AngleTrkF32_getRawPosition')
	.sect	'.debug_ranges'
.L153:
	.word	-1,.L65,0,.L154-.L65,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_AngleTrkF32_getRefreshPeriod')
	.sect	'.debug_info'
.L155:
	.word	270
	.half	3
	.word	.L156
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L158,.L157
	.byte	2
	.word	.L96
	.byte	3
	.byte	'Ifx_AngleTrkF32_getRefreshPeriod',0,1,247,2,9
	.word	.L230
	.byte	1,1,1
	.word	.L81,.L298,.L80
	.byte	4
	.byte	'driver',0,1,247,2,59
	.word	.L226,.L299
	.byte	5
	.word	.L81,.L298
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_AngleTrkF32_getRefreshPeriod')
	.sect	'.debug_abbrev'
.L156:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_AngleTrkF32_getRefreshPeriod')
	.sect	'.debug_line'
.L157:
	.word	.L625-.L624
.L624:
	.half	3
	.word	.L627-.L626
.L626:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0,0,0,0,0
.L627:
	.byte	5,24,7,0,5,2
	.word	.L81
	.byte	3,248,2,1,5,5,9
	.half	.L628-.L81
	.byte	1,5,1,9
	.half	.L40-.L628
	.byte	3,1,1,7,9
	.half	.L159-.L40
	.byte	0,1,1
.L625:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_AngleTrkF32_getRefreshPeriod')
	.sect	'.debug_ranges'
.L158:
	.word	-1,.L81,0,.L159-.L81,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_AngleTrkF32_getResolution')
	.sect	'.debug_info'
.L160:
	.word	267
	.half	3
	.word	.L161
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L163,.L162
	.byte	2
	.word	.L96
	.byte	3
	.byte	'Ifx_AngleTrkF32_getResolution',0,1,253,2,8
	.word	.L278
	.byte	1,1,1
	.word	.L83,.L300,.L82
	.byte	4
	.byte	'driver',0,1,253,2,55
	.word	.L226,.L301
	.byte	5
	.word	.L83,.L300
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_AngleTrkF32_getResolution')
	.sect	'.debug_abbrev'
.L161:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_AngleTrkF32_getResolution')
	.sect	'.debug_line'
.L162:
	.word	.L630-.L629
.L629:
	.half	3
	.word	.L632-.L631
.L631:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0,0,0,0,0
.L632:
	.byte	5,24,7,0,5,2
	.word	.L83
	.byte	3,254,2,1,5,5,9
	.half	.L633-.L83
	.byte	1,5,1,9
	.half	.L41-.L633
	.byte	3,1,1,7,9
	.half	.L164-.L41
	.byte	0,1,1
.L630:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_AngleTrkF32_getResolution')
	.sect	'.debug_ranges'
.L163:
	.word	-1,.L83,0,.L164-.L83,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_AngleTrkF32_getTurn')
	.sect	'.debug_info'
.L165:
	.word	261
	.half	3
	.word	.L166
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L168,.L167
	.byte	2
	.word	.L96
	.byte	3
	.byte	'Ifx_AngleTrkF32_getTurn',0,1,138,3,8
	.word	.L278
	.byte	1,1,1
	.word	.L87,.L302,.L86
	.byte	4
	.byte	'driver',0,1,138,3,49
	.word	.L226,.L303
	.byte	5
	.word	.L87,.L302
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_AngleTrkF32_getTurn')
	.sect	'.debug_abbrev'
.L166:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_AngleTrkF32_getTurn')
	.sect	'.debug_line'
.L167:
	.word	.L635-.L634
.L634:
	.half	3
	.word	.L637-.L636
.L636:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0,0,0,0,0
.L637:
	.byte	5,24,7,0,5,2
	.word	.L87
	.byte	3,139,3,1,5,5,9
	.half	.L638-.L87
	.byte	1,5,1,9
	.half	.L44-.L638
	.byte	3,1,1,7,9
	.half	.L169-.L44
	.byte	0,1,1
.L635:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_AngleTrkF32_getTurn')
	.sect	'.debug_ranges'
.L168:
	.word	-1,.L87,0,.L169-.L87,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_AngleTrkF32_getSensorType')
	.sect	'.debug_info'
.L170:
	.word	267
	.half	3
	.word	.L171
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L173,.L172
	.byte	2
	.word	.L96
	.byte	3
	.byte	'Ifx_AngleTrkF32_getSensorType',0,1,131,3,25
	.word	.L304
	.byte	1,1,1
	.word	.L85,.L305,.L84
	.byte	4
	.byte	'driver',0,1,131,3,72
	.word	.L226,.L306
	.byte	5
	.word	.L85,.L305
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_AngleTrkF32_getSensorType')
	.sect	'.debug_abbrev'
.L171:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_AngleTrkF32_getSensorType')
	.sect	'.debug_line'
.L172:
	.word	.L640-.L639
.L639:
	.half	3
	.word	.L642-.L641
.L641:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0,0,0,0,0
.L642:
	.byte	5,2,7,0,5,2
	.word	.L85
	.byte	3,132,3,1,5,12,7,9
	.half	.L42-.L85
	.byte	3,1,1,5,5,9
	.half	.L643-.L42
	.byte	1,5,1,9
	.half	.L43-.L643
	.byte	3,1,1,7,9
	.half	.L174-.L43
	.byte	0,1,1
.L640:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_AngleTrkF32_getSensorType')
	.sect	'.debug_ranges'
.L173:
	.word	-1,.L85,0,.L174-.L85,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_AngleTrkF32_getSpeed')
	.sect	'.debug_info'
.L175:
	.word	261
	.half	3
	.word	.L176
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L178,.L177
	.byte	2
	.word	.L96
	.byte	3
	.byte	'Ifx_AngleTrkF32_getSpeed',0,1,200,2,9
	.word	.L230
	.byte	1,1,1
	.word	.L67,.L307,.L66
	.byte	4
	.byte	'aObsv',0,1,200,2,51
	.word	.L226,.L308
	.byte	5
	.word	.L67,.L307
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_AngleTrkF32_getSpeed')
	.sect	'.debug_abbrev'
.L176:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_AngleTrkF32_getSpeed')
	.sect	'.debug_line'
.L177:
	.word	.L645-.L644
.L644:
	.half	3
	.word	.L647-.L646
.L646:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0,0,0,0,0
.L647:
	.byte	5,27,7,0,5,2
	.word	.L67
	.byte	3,204,2,1,5,5,9
	.half	.L648-.L67
	.byte	1,5,1,9
	.half	.L33-.L648
	.byte	3,2,1,7,9
	.half	.L179-.L33
	.byte	0,1,1
.L645:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_AngleTrkF32_getSpeed')
	.sect	'.debug_ranges'
.L178:
	.word	-1,.L67,0,.L179-.L67,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_AngleTrkF32_reset')
	.sect	'.debug_info'
.L180:
	.word	292
	.half	3
	.word	.L181
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L183,.L182
	.byte	2
	.word	.L96
	.byte	3
	.byte	'Ifx_AngleTrkF32_reset',0,1,156,3,6,1,1,1
	.word	.L93,.L309,.L92
	.byte	4
	.byte	'driver',0,1,156,3,45
	.word	.L226,.L310
	.byte	5
	.word	.L93,.L309
	.byte	6
	.word	.L311,.L312,.L313
	.byte	7
	.word	.L314,.L315
	.byte	8
	.word	.L316,.L312,.L313
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_AngleTrkF32_reset')
	.sect	'.debug_abbrev'
.L181:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_AngleTrkF32_reset')
	.sect	'.debug_line'
.L182:
	.word	.L650-.L649
.L649:
	.half	3
	.word	.L652-.L651
.L651:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0,0,0,0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_LowPassPt1F32.h',0
	.byte	0,0,0,0
.L652:
	.byte	5,32,7,0,5,2
	.word	.L93
	.byte	3,157,3,1,5,30,9
	.half	.L653-.L93
	.byte	1,5,32,9
	.half	.L654-.L653
	.byte	3,1,1,5,30,9
	.half	.L655-.L654
	.byte	1,5,32,9
	.half	.L656-.L655
	.byte	3,1,1,5,30,9
	.half	.L657-.L656
	.byte	1,5,32,9
	.half	.L658-.L657
	.byte	3,1,1,5,30,9
	.half	.L659-.L658
	.byte	1,5,32,9
	.half	.L660-.L659
	.byte	3,1,1,5,30,9
	.half	.L661-.L660
	.byte	1,5,32,9
	.half	.L662-.L661
	.byte	3,1,1,5,30,9
	.half	.L663-.L662
	.byte	1,5,32,9
	.half	.L664-.L663
	.byte	3,1,1,5,30,9
	.half	.L665-.L664
	.byte	1,5,32,9
	.half	.L666-.L665
	.byte	3,1,1,5,30,9
	.half	.L667-.L666
	.byte	1,5,32,9
	.half	.L668-.L667
	.byte	3,1,1,5,30,9
	.half	.L669-.L668
	.byte	1,4,2,5,19,9
	.half	.L312-.L669
	.byte	3,185,125,1,5,17,9
	.half	.L670-.L312
	.byte	1,4,1,5,34,9
	.half	.L313-.L670
	.byte	3,204,2,1,5,32,9
	.half	.L671-.L313
	.byte	1,5,1,9
	.half	.L672-.L671
	.byte	3,1,1,7,9
	.half	.L184-.L672
	.byte	0,1,1
.L650:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_AngleTrkF32_reset')
	.sect	'.debug_ranges'
.L183:
	.word	-1,.L93,0,.L184-.L93,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_AngleTrkF32_resetFaults')
	.sect	'.debug_info'
.L185:
	.word	261
	.half	3
	.word	.L186
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L188,.L187
	.byte	2
	.word	.L96
	.byte	3
	.byte	'Ifx_AngleTrkF32_resetFaults',0,1,144,3,6,1,1,1
	.word	.L89,.L317,.L88
	.byte	4
	.byte	'driver',0,1,144,3,51
	.word	.L226,.L318
	.byte	5
	.word	.L89,.L317
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_AngleTrkF32_resetFaults')
	.sect	'.debug_abbrev'
.L186:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_AngleTrkF32_resetFaults')
	.sect	'.debug_line'
.L187:
	.word	.L674-.L673
.L673:
	.half	3
	.word	.L676-.L675
.L675:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0,0,0,0,0
.L676:
	.byte	5,34,7,0,5,2
	.word	.L89
	.byte	3,145,3,1,5,32,9
	.half	.L677-.L89
	.byte	1,5,1,9
	.half	.L678-.L677
	.byte	3,1,1,7,9
	.half	.L189-.L678
	.byte	0,1,1
.L674:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_AngleTrkF32_resetFaults')
	.sect	'.debug_ranges'
.L188:
	.word	-1,.L89,0,.L189-.L89,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_AngleTrkF32_setOffset')
	.sect	'.debug_info'
.L190:
	.word	297
	.half	3
	.word	.L191
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L193,.L192
	.byte	2
	.word	.L96
	.byte	3
	.byte	'Ifx_AngleTrkF32_setOffset',0,1,147,2,6,1,1,1
	.word	.L59,.L319,.L58
	.byte	4
	.byte	'aObsv',0,1,147,2,49
	.word	.L226,.L320
	.byte	4
	.byte	'offset',0,1,147,2,78
	.word	.L278,.L321
	.byte	5
	.word	.L59,.L319
	.byte	6
	.byte	'base',0,1,149,2,28
	.word	.L276,.L322
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_AngleTrkF32_setOffset')
	.sect	'.debug_abbrev'
.L191:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_AngleTrkF32_setOffset')
	.sect	'.debug_line'
.L192:
	.word	.L680-.L679
.L679:
	.half	3
	.word	.L682-.L681
.L681:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0,0,0,0,0
.L682:
	.byte	5,18,7,0,5,2
	.word	.L59
	.byte	3,149,2,1,5,1,9
	.half	.L683-.L59
	.byte	3,1,1,7,9
	.half	.L194-.L683
	.byte	0,1,1
.L680:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_AngleTrkF32_setOffset')
	.sect	'.debug_ranges'
.L193:
	.word	-1,.L59,0,.L194-.L59,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_AngleTrkF32_setRefreshPeriod')
	.sect	'.debug_info'
.L195:
	.word	292
	.half	3
	.word	.L196
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L198,.L197
	.byte	2
	.word	.L96
	.byte	3
	.byte	'Ifx_AngleTrkF32_setRefreshPeriod',0,1,150,3,6,1,1,1
	.word	.L91,.L323,.L90
	.byte	4
	.byte	'driver',0,1,150,3,56
	.word	.L226,.L324
	.byte	4
	.byte	'updatePeriod',0,1,150,3,72
	.word	.L230,.L325
	.byte	5
	.word	.L91,.L323
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_AngleTrkF32_setRefreshPeriod')
	.sect	'.debug_abbrev'
.L196:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_AngleTrkF32_setRefreshPeriod')
	.sect	'.debug_line'
.L197:
	.word	.L685-.L684
.L684:
	.half	3
	.word	.L687-.L686
.L686:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0,0,0,0,0
.L687:
	.byte	5,21,7,0,5,2
	.word	.L91
	.byte	3,151,3,1,5,1,9
	.half	.L688-.L91
	.byte	3,1,1,7,9
	.half	.L199-.L688
	.byte	0,1,1
.L685:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_AngleTrkF32_setRefreshPeriod')
	.sect	'.debug_ranges'
.L198:
	.word	-1,.L91,0,.L199-.L91,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_AngleTrkF32_update')
	.sect	'.debug_info'
.L200:
	.word	321
	.half	3
	.word	.L201
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L203,.L202
	.byte	2
	.word	.L96
	.byte	3
	.byte	'Ifx_AngleTrkF32_update',0,1,173,2,6,1,1,1
	.word	.L63,.L326,.L62
	.byte	4
	.byte	'aObsv',0,1,173,2,46
	.word	.L226,.L327
	.byte	5
	.word	.L63,.L326
	.byte	6
	.byte	'base',0,1,175,2,28
	.word	.L276,.L328
	.byte	6
	.byte	'angleEst',0,1,176,2,29
	.word	.L230,.L329
	.byte	6
	.byte	'newPosition',0,1,178,2,29
	.word	.L278,.L330
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_AngleTrkF32_update')
	.sect	'.debug_abbrev'
.L201:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_AngleTrkF32_update')
	.sect	'.debug_line'
.L202:
	.word	.L690-.L689
.L689:
	.half	3
	.word	.L692-.L691
.L691:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0,0,0,0,0
.L692:
	.byte	5,6,7,0,5,2
	.word	.L63
	.byte	3,172,2,1,5,77,9
	.half	.L389-.L63
	.byte	3,3,1,5,71,9
	.half	.L693-.L389
	.byte	1,5,92,9
	.half	.L694-.L693
	.byte	1,5,86,9
	.half	.L695-.L694
	.byte	1,5,101,9
	.half	.L696-.L695
	.byte	1,5,90,9
	.half	.L388-.L696
	.byte	3,2,1,5,102,9
	.half	.L697-.L388
	.byte	1,5,76,9
	.half	.L698-.L697
	.byte	1,5,109,9
	.half	.L699-.L698
	.byte	1,5,107,9
	.half	.L700-.L699
	.byte	1,5,43,9
	.half	.L701-.L700
	.byte	1,5,51,9
	.half	.L391-.L701
	.byte	3,1,1,5,63,9
	.half	.L702-.L391
	.byte	1,5,37,9
	.half	.L703-.L702
	.byte	1,5,23,9
	.half	.L704-.L703
	.byte	3,1,1,5,47,9
	.half	.L705-.L704
	.byte	3,2,1,5,41,9
	.half	.L706-.L705
	.byte	1,5,62,9
	.half	.L707-.L706
	.byte	1,5,56,9
	.half	.L708-.L707
	.byte	1,5,1,9
	.half	.L390-.L708
	.byte	3,1,1,7,9
	.half	.L204-.L390
	.byte	0,1,1
.L690:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_AngleTrkF32_update')
	.sect	'.debug_ranges'
.L203:
	.word	-1,.L63,0,.L204-.L63,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_AngleTrkF32_stdIfPosInit')
	.sect	'.debug_info'
.L205:
	.word	285
	.half	3
	.word	.L206
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L208,.L207
	.byte	2
	.word	.L96
	.byte	3
	.byte	'Ifx_AngleTrkF32_stdIfPosInit',0,1,175,3,9
	.word	.L331
	.byte	1,1,1
	.word	.L95,.L332,.L94
	.byte	4
	.byte	'stdif',0,1,175,3,52
	.word	.L333,.L334
	.byte	4
	.byte	'driver',0,1,175,3,76
	.word	.L226,.L335
	.byte	5
	.word	.L95,.L332
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_AngleTrkF32_stdIfPosInit')
	.sect	'.debug_abbrev'
.L206:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_AngleTrkF32_stdIfPosInit')
	.sect	'.debug_line'
.L207:
	.word	.L710-.L709
.L709:
	.half	3
	.word	.L712-.L711
.L711:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0,0,0,0,0
.L712:
	.byte	5,9,7,0,5,2
	.word	.L95
	.byte	3,174,3,1,5,19,9
	.half	.L395-.L95
	.byte	3,3,1,5,22,9
	.half	.L713-.L395
	.byte	1,5,19,9
	.half	.L393-.L713
	.byte	3,3,1,5,29,9
	.half	.L714-.L393
	.byte	3,4,1,5,28,9
	.half	.L715-.L714
	.byte	1,5,29,9
	.half	.L716-.L715
	.byte	3,1,1,5,28,9
	.half	.L717-.L716
	.byte	1,5,26,9
	.half	.L718-.L717
	.byte	3,1,1,5,25,9
	.half	.L719-.L718
	.byte	1,5,29,9
	.half	.L720-.L719
	.byte	3,1,1,5,28,9
	.half	.L721-.L720
	.byte	1,5,23,9
	.half	.L722-.L721
	.byte	3,1,1,5,22,9
	.half	.L723-.L722
	.byte	1,5,32,9
	.half	.L724-.L723
	.byte	3,1,1,5,31,9
	.half	.L725-.L724
	.byte	1,5,25,9
	.half	.L726-.L725
	.byte	3,1,1,5,24,9
	.half	.L727-.L726
	.byte	1,5,27,9
	.half	.L728-.L727
	.byte	3,1,1,5,26,9
	.half	.L729-.L728
	.byte	1,5,29,9
	.half	.L730-.L729
	.byte	3,1,1,5,28,9
	.half	.L731-.L730
	.byte	1,5,29,9
	.half	.L732-.L731
	.byte	3,1,1,5,28,9
	.half	.L733-.L732
	.byte	1,5,32,9
	.half	.L734-.L733
	.byte	3,1,1,5,31,9
	.half	.L735-.L734
	.byte	1,5,20,9
	.half	.L736-.L735
	.byte	3,1,1,5,19,9
	.half	.L737-.L736
	.byte	1,5,25,9
	.half	.L738-.L737
	.byte	3,1,1,5,24,9
	.half	.L739-.L738
	.byte	1,5,29,9
	.half	.L740-.L739
	.byte	3,1,1,5,28,9
	.half	.L741-.L740
	.byte	1,5,21,9
	.half	.L742-.L741
	.byte	3,1,1,5,20,9
	.half	.L743-.L742
	.byte	1,5,25,9
	.half	.L744-.L743
	.byte	3,1,1,5,24,9
	.half	.L745-.L744
	.byte	1,5,27,9
	.half	.L746-.L745
	.byte	3,1,1,5,26,9
	.half	.L747-.L746
	.byte	1,9
	.half	.L748-.L747
	.byte	3,1,1,5,25,9
	.half	.L749-.L748
	.byte	1,5,23,9
	.half	.L750-.L749
	.byte	3,1,1,5,22,9
	.half	.L751-.L750
	.byte	1,5,29,9
	.half	.L752-.L751
	.byte	3,1,1,5,28,9
	.half	.L753-.L752
	.byte	1,5,29,9
	.half	.L754-.L753
	.byte	3,1,1,5,28,9
	.half	.L755-.L754
	.byte	1,5,12,9
	.half	.L756-.L755
	.byte	3,3,1,5,5,9
	.half	.L757-.L756
	.byte	1,5,1,9
	.half	.L45-.L757
	.byte	3,1,1,7,9
	.half	.L209-.L45
	.byte	0,1,1
.L710:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_AngleTrkF32_stdIfPosInit')
	.sect	'.debug_ranges'
.L208:
	.word	-1,.L95,0,.L209-.L95,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_AngleTrkF32_setUserSampling')
	.sect	'.debug_info'
.L210:
	.word	280
	.half	3
	.word	.L211
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L213,.L212
	.byte	2
	.word	.L96
	.byte	3
	.byte	'Ifx_AngleTrkF32_setUserSampling',0,1,153,1,6,1,1,1
	.word	.L53,.L336,.L52
	.byte	4
	.byte	'aObsv',0,1,153,1,55
	.word	.L226,.L337
	.byte	4
	.byte	'Ts',0,1,153,1,70
	.word	.L230,.L338
	.byte	5
	.word	.L53,.L336
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_AngleTrkF32_setUserSampling')
	.sect	'.debug_abbrev'
.L211:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_AngleTrkF32_setUserSampling')
	.sect	'.debug_line'
.L212:
	.word	.L759-.L758
.L758:
	.half	3
	.word	.L761-.L760
.L760:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0,0,0,0,0
.L761:
	.byte	5,20,7,0,5,2
	.word	.L53
	.byte	3,154,1,1,5,39,9
	.half	.L762-.L53
	.byte	3,1,1,5,37,9
	.half	.L763-.L762
	.byte	1,5,20,9
	.half	.L764-.L763
	.byte	1,5,1,9
	.half	.L765-.L764
	.byte	3,1,1,7,9
	.half	.L214-.L765
	.byte	0,1,1
.L759:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_AngleTrkF32_setUserSampling')
	.sect	'.debug_ranges'
.L213:
	.word	-1,.L53,0,.L214-.L53,0,0
	.sdecl	'.debug_info',debug,cluster('round_f')
	.sect	'.debug_info'
.L215:
	.word	259
	.half	3
	.word	.L216
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L218,.L217
	.byte	2
	.word	.L96
	.byte	3
	.byte	'round_f',0,1,99,9
	.word	.L230
	.byte	1,1,1
	.word	.L47,.L339,.L46
	.byte	4
	.byte	'val',0,1,99,25
	.word	.L230,.L340
	.byte	5
	.word	.L47,.L339
	.byte	6
	.byte	'val_i',0,1,102,12
	.word	.L278,.L341
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('round_f')
	.sect	'.debug_abbrev'
.L216:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('round_f')
	.sect	'.debug_line'
.L217:
	.word	.L767-.L766
.L766:
	.half	3
	.word	.L769-.L768
.L768:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0,0,0,0,0
.L769:
	.byte	5,20,7,0,5,2
	.word	.L47
	.byte	3,229,0,1,5,16,9
	.half	.L349-.L47
	.byte	3,3,1,5,14,9
	.half	.L770-.L349
	.byte	1,5,34,9
	.half	.L771-.L770
	.byte	1,5,5,9
	.half	.L772-.L771
	.byte	1,5,15,9
	.half	.L773-.L772
	.byte	3,6,1,5,35,9
	.half	.L348-.L773
	.byte	3,124,1,5,31,9
	.half	.L2-.L348
	.byte	1,5,15,9
	.half	.L350-.L2
	.byte	1,5,5,9
	.half	.L3-.L350
	.byte	3,7,1,5,1,9
	.half	.L4-.L3
	.byte	3,1,1,7,9
	.half	.L219-.L4
	.byte	0,1,1
.L767:
	.sdecl	'.debug_ranges',debug,cluster('round_f')
	.sect	'.debug_ranges'
.L218:
	.word	-1,.L47,0,.L219-.L47,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_AngleTrkF32_setControlGains')
	.sect	'.debug_info'
.L220:
	.word	308
	.half	3
	.word	.L221
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L223,.L222
	.byte	2
	.word	.L96
	.byte	3
	.byte	'Ifx_AngleTrkF32_setControlGains',0,1,124,6,1,1,1
	.word	.L49,.L342,.L48
	.byte	4
	.byte	'cfgData',0,1,124,63
	.word	.L343,.L344
	.byte	4
	.byte	'K',0,1,124,80
	.word	.L230,.L345
	.byte	4
	.byte	'T',0,1,124,91
	.word	.L230,.L346
	.byte	4
	.byte	'psi',0,1,124,102
	.word	.L230,.L347
	.byte	5
	.word	.L49,.L342
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_AngleTrkF32_setControlGains')
	.sect	'.debug_abbrev'
.L221:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_AngleTrkF32_setControlGains')
	.sect	'.debug_line'
.L222:
	.word	.L775-.L774
.L774:
	.half	3
	.word	.L777-.L776
.L776:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_AngleTrkF32.c',0,0,0,0,0
.L777:
	.byte	5,21,7,0,5,2
	.word	.L49
	.byte	3,253,0,1,5,35,9
	.half	.L778-.L49
	.byte	1,5,28,9
	.half	.L779-.L778
	.byte	1,5,44,9
	.half	.L780-.L779
	.byte	1,5,42,9
	.half	.L781-.L780
	.byte	1,5,52,9
	.half	.L782-.L781
	.byte	1,5,47,9
	.half	.L783-.L782
	.byte	1,5,17,9
	.half	.L784-.L783
	.byte	1,5,38,9
	.half	.L785-.L784
	.byte	3,1,1,5,36,9
	.half	.L786-.L785
	.byte	1,5,21,9
	.half	.L787-.L786
	.byte	1,5,46,9
	.half	.L788-.L787
	.byte	1,5,50,9
	.half	.L789-.L788
	.byte	1,5,41,9
	.half	.L790-.L789
	.byte	1,5,17,9
	.half	.L791-.L790
	.byte	1,5,24,9
	.half	.L792-.L791
	.byte	3,1,1,5,22,9
	.half	.L793-.L792
	.byte	1,5,27,9
	.half	.L794-.L793
	.byte	1,5,17,9
	.half	.L795-.L794
	.byte	1,5,1,9
	.half	.L796-.L795
	.byte	3,1,1,7,9
	.half	.L224-.L796
	.byte	0,1,1
.L775:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_AngleTrkF32_setControlGains')
	.sect	'.debug_ranges'
.L223:
	.word	-1,.L49,0,.L224-.L49,0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_AngleTrkF32_getAbsolutePosition')
	.sect	'.debug_loc'
.L68:
	.word	-1,.L69,0,.L280-.L69
	.half	2
	.byte	138,0
	.word	0,0
.L281:
	.word	-1,.L69,0,.L280-.L69
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_AngleTrkF32_getDirection')
	.sect	'.debug_loc'
.L70:
	.word	-1,.L71,0,.L283-.L71
	.half	2
	.byte	138,0
	.word	0,0
.L284:
	.word	-1,.L71,0,.L283-.L71
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_AngleTrkF32_getFault')
	.sect	'.debug_loc'
.L72:
	.word	-1,.L73,0,.L286-.L73
	.half	2
	.byte	138,0
	.word	0,0
.L287:
	.word	-1,.L73,0,.L286-.L73
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_AngleTrkF32_getOffset')
	.sect	'.debug_loc'
.L74:
	.word	-1,.L75,0,.L288-.L75
	.half	2
	.byte	138,0
	.word	0,0
.L289:
	.word	-1,.L75,0,.L288-.L75
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_AngleTrkF32_getPeriodPerRotation')
	.sect	'.debug_loc'
.L76:
	.word	-1,.L77,0,.L291-.L77
	.half	2
	.byte	138,0
	.word	0,0
.L292:
	.word	-1,.L77,0,.L291-.L77
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_AngleTrkF32_getPosition')
	.sect	'.debug_loc'
.L78:
	.word	-1,.L79,0,.L293-.L79
	.half	2
	.byte	138,0
	.word	0,0
.L294:
	.word	-1,.L79,0,.L293-.L79
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_AngleTrkF32_getRawPosition')
	.sect	'.debug_loc'
.L64:
	.word	-1,.L65,0,.L295-.L65
	.half	2
	.byte	138,0
	.word	0,0
.L296:
	.word	-1,.L65,0,.L295-.L65
	.half	1
	.byte	100
	.word	0,0
.L297:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_AngleTrkF32_getRefreshPeriod')
	.sect	'.debug_loc'
.L80:
	.word	-1,.L81,0,.L298-.L81
	.half	2
	.byte	138,0
	.word	0,0
.L299:
	.word	-1,.L81,0,.L298-.L81
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_AngleTrkF32_getResolution')
	.sect	'.debug_loc'
.L82:
	.word	-1,.L83,0,.L300-.L83
	.half	2
	.byte	138,0
	.word	0,0
.L301:
	.word	-1,.L83,0,.L300-.L83
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_AngleTrkF32_getSensorType')
	.sect	'.debug_loc'
.L84:
	.word	-1,.L85,0,.L305-.L85
	.half	2
	.byte	138,0
	.word	0,0
.L306:
	.word	-1,.L85,0,.L305-.L85
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_AngleTrkF32_getSpeed')
	.sect	'.debug_loc'
.L66:
	.word	-1,.L67,0,.L307-.L67
	.half	2
	.byte	138,0
	.word	0,0
.L308:
	.word	-1,.L67,0,.L307-.L67
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_AngleTrkF32_getTurn')
	.sect	'.debug_loc'
.L86:
	.word	-1,.L87,0,.L302-.L87
	.half	2
	.byte	138,0
	.word	0,0
.L303:
	.word	-1,.L87,0,.L302-.L87
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_AngleTrkF32_init')
	.sect	'.debug_loc'
.L54:
	.word	-1,.L55,0,.L357-.L55
	.half	2
	.byte	138,0
	.word	.L357-.L55,.L225-.L55
	.half	2
	.byte	138,16
	.word	.L225-.L55,.L225-.L55
	.half	2
	.byte	138,0
	.word	0,0
.L231:
	.word	-1,.L55,0,.L358-.L55
	.half	1
	.byte	84
	.word	.L362-.L55,.L225-.L55
	.half	1
	.byte	88
	.word	.L365-.L55,.L364-.L55
	.half	1
	.byte	84
	.word	0,0
.L227:
	.word	-1,.L55,0,.L359-.L55
	.half	1
	.byte	100
	.word	.L360-.L55,.L225-.L55
	.half	1
	.byte	108
	.word	.L363-.L55,.L364-.L55
	.half	1
	.byte	100
	.word	0,0
.L229:
	.word	-1,.L55,0,.L9-.L55
	.half	1
	.byte	101
	.word	.L361-.L55,.L225-.L55
	.half	1
	.byte	111
	.word	0,0
.L235:
	.word	-1,.L55,0,.L225-.L55
	.half	2
	.byte	145,112
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_AngleTrkF32_initConfig')
	.sect	'.debug_loc'
.L50:
	.word	-1,.L51,0,.L351-.L51
	.half	2
	.byte	138,0
	.word	.L351-.L51,.L236-.L51
	.half	2
	.byte	138,24
	.word	.L236-.L51,.L236-.L51
	.half	2
	.byte	138,0
	.word	0,0
.L243:
	.word	-1,.L51,0,.L236-.L51
	.half	2
	.byte	145,104
	.word	0,0
.L238:
	.word	-1,.L51,0,.L352-.L51
	.half	1
	.byte	100
	.word	.L354-.L51,.L236-.L51
	.half	1
	.byte	111
	.word	0,0
.L241:
	.word	-1,.L51,0,.L353-.L51
	.half	1
	.byte	102
	.word	.L356-.L51,.L236-.L51
	.half	1
	.byte	109
	.word	0,0
.L240:
	.word	-1,.L51,0,.L353-.L51
	.half	1
	.byte	101
	.word	.L355-.L51,.L236-.L51
	.half	1
	.byte	108
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_AngleTrkF32_reset')
	.sect	'.debug_loc'
.L92:
	.word	-1,.L93,0,.L309-.L93
	.half	2
	.byte	138,0
	.word	0,0
.L310:
	.word	-1,.L93,0,.L309-.L93
	.half	1
	.byte	100
	.word	0,0
.L315:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_AngleTrkF32_resetFaults')
	.sect	'.debug_loc'
.L88:
	.word	-1,.L89,0,.L317-.L89
	.half	2
	.byte	138,0
	.word	0,0
.L318:
	.word	-1,.L89,0,.L317-.L89
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_AngleTrkF32_setControlGains')
	.sect	'.debug_loc'
.L48:
	.word	-1,.L49,0,.L342-.L49
	.half	2
	.byte	138,0
	.word	0,0
.L345:
	.word	-1,.L49,0,.L342-.L49
	.half	1
	.byte	84
	.word	0,0
.L346:
	.word	-1,.L49,0,.L342-.L49
	.half	1
	.byte	85
	.word	0,0
.L344:
	.word	-1,.L49,0,.L342-.L49
	.half	1
	.byte	100
	.word	0,0
.L347:
	.word	-1,.L49,0,.L342-.L49
	.half	1
	.byte	86
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_AngleTrkF32_setOffset')
	.sect	'.debug_loc'
.L58:
	.word	-1,.L59,0,.L319-.L59
	.half	2
	.byte	138,0
	.word	0,0
.L320:
	.word	-1,.L59,0,.L319-.L59
	.half	1
	.byte	100
	.word	0,0
.L322:
	.word	0,0
.L321:
	.word	-1,.L59,0,.L319-.L59
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_AngleTrkF32_setRefreshPeriod')
	.sect	'.debug_loc'
.L90:
	.word	-1,.L91,0,.L323-.L91
	.half	2
	.byte	138,0
	.word	0,0
.L324:
	.word	-1,.L91,0,.L323-.L91
	.half	1
	.byte	100
	.word	0,0
.L325:
	.word	-1,.L91,0,.L323-.L91
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_AngleTrkF32_setUserSampling')
	.sect	'.debug_loc'
.L52:
	.word	-1,.L53,0,.L336-.L53
	.half	2
	.byte	138,0
	.word	0,0
.L338:
	.word	-1,.L53,0,.L336-.L53
	.half	1
	.byte	84
	.word	0,0
.L337:
	.word	-1,.L53,0,.L336-.L53
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_AngleTrkF32_stdIfPosInit')
	.sect	'.debug_loc'
.L94:
	.word	-1,.L95,0,.L332-.L95
	.half	2
	.byte	138,0
	.word	0,0
.L335:
	.word	-1,.L95,0,.L393-.L95
	.half	1
	.byte	101
	.word	.L395-.L95,.L332-.L95
	.half	1
	.byte	108
	.word	0,0
.L334:
	.word	-1,.L95,0,.L393-.L95
	.half	1
	.byte	100
	.word	.L394-.L95,.L332-.L95
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_AngleTrkF32_step')
	.sect	'.debug_loc'
.L56:
	.word	-1,.L57,0,.L244-.L57
	.half	2
	.byte	138,0
	.word	0,0
.L245:
	.word	-1,.L57,0,.L366-.L57
	.half	1
	.byte	100
	.word	.L369-.L57,.L244-.L57
	.half	1
	.byte	111
	.word	.L11-.L57,.L12-.L57
	.half	1
	.byte	100
	.word	0,0
.L263:
	.word	0,0
.L251:
	.word	-1,.L57,.L380-.L57,.L381-.L57
	.half	1
	.byte	82
	.word	0,0
.L250:
	.word	-1,.L57,.L366-.L57,.L11-.L57
	.half	1
	.byte	82
	.word	.L12-.L57,.L373-.L57
	.half	1
	.byte	82
	.word	.L373-.L57,.L374-.L57
	.half	1
	.byte	95
	.word	0,0
.L248:
	.word	-1,.L57,0,.L367-.L57
	.half	1
	.byte	85
	.word	.L11-.L57,.L371-.L57
	.half	1
	.byte	85
	.word	0,0
.L252:
	.word	-1,.L57,.L375-.L57,.L376-.L57
	.half	1
	.byte	95
	.word	0,0
.L254:
	.word	-1,.L57,.L379-.L57,.L261-.L57
	.half	1
	.byte	95
	.word	0,0
.L253:
	.word	-1,.L57,.L377-.L57,.L378-.L57
	.half	1
	.byte	95
	.word	0,0
.L268:
	.word	-1,.L57,.L382-.L57,.L269-.L57
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L271:
	.word	-1,.L57,.L383-.L57,.L384-.L57
	.half	1
	.byte	81
	.word	0,0
.L258:
	.word	0,0
.L265:
	.word	0,0
.L249:
	.word	-1,.L57,0,.L366-.L57
	.half	1
	.byte	86
	.word	.L370-.L57,.L244-.L57
	.half	1
	.byte	88
	.word	.L11-.L57,.L12-.L57
	.half	1
	.byte	86
	.word	0,0
.L247:
	.word	-1,.L57,0,.L368-.L57
	.half	1
	.byte	84
	.word	.L11-.L57,.L372-.L57
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_AngleTrkF32_update')
	.sect	'.debug_loc'
.L62:
	.word	-1,.L63,0,.L326-.L63
	.half	2
	.byte	138,0
	.word	0,0
.L327:
	.word	-1,.L63,0,.L388-.L63
	.half	1
	.byte	100
	.word	.L389-.L63,.L326-.L63
	.half	1
	.byte	111
	.word	.L392-.L63,.L390-.L63
	.half	1
	.byte	100
	.word	0,0
.L329:
	.word	-1,.L63,.L388-.L63,.L390-.L63
	.half	1
	.byte	82
	.word	0,0
.L328:
	.word	0,0
.L330:
	.word	-1,.L63,.L391-.L63,.L326-.L63
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_AngleTrkF32_updateStatus')
	.sect	'.debug_loc'
.L60:
	.word	-1,.L61,0,.L272-.L61
	.half	2
	.byte	138,0
	.word	0,0
.L273:
	.word	-1,.L61,0,.L272-.L61
	.half	1
	.byte	100
	.word	0,0
.L277:
	.word	0,0
.L275:
	.word	-1,.L61,0,.L272-.L61
	.half	1
	.byte	85
	.word	0,0
.L274:
	.word	-1,.L61,0,.L385-.L61
	.half	1
	.byte	84
	.word	0,0
.L279:
	.word	-1,.L61,.L386-.L61,.L387-.L61
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('round_f')
	.sect	'.debug_loc'
.L46:
	.word	-1,.L47,0,.L339-.L47
	.half	2
	.byte	138,0
	.word	0,0
.L340:
	.word	-1,.L47,0,.L348-.L47
	.half	1
	.byte	84
	.word	.L348-.L47,.L2-.L47
	.half	1
	.byte	82
	.word	.L2-.L47,.L3-.L47
	.half	1
	.byte	84
	.word	.L3-.L47,.L339-.L47
	.half	1
	.byte	82
	.word	0,0
.L341:
	.word	-1,.L47,.L349-.L47,.L350-.L47
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L797:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('round_f')
	.sect	'.debug_frame'
	.word	24
	.word	.L797,.L47,.L339-.L47
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Ifx_AngleTrkF32_setControlGains')
	.sect	'.debug_frame'
	.word	24
	.word	.L797,.L49,.L342-.L49
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_AngleTrkF32_initConfig')
	.sect	'.debug_frame'
	.word	36
	.word	.L797,.L51,.L236-.L51
	.byte	4
	.word	(.L351-.L51)/2
	.byte	19,24,22,26,3,19,138,24,4
	.word	(.L236-.L351)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_AngleTrkF32_setUserSampling')
	.sect	'.debug_frame'
	.word	24
	.word	.L797,.L53,.L336-.L53
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_AngleTrkF32_init')
	.sect	'.debug_frame'
	.word	36
	.word	.L797,.L55,.L225-.L55
	.byte	4
	.word	(.L357-.L55)/2
	.byte	19,16,22,26,3,19,138,16,4
	.word	(.L225-.L357)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_AngleTrkF32_step')
	.sect	'.debug_frame'
	.word	12
	.word	.L797,.L57,.L244-.L57
	.sdecl	'.debug_frame',debug,cluster('Ifx_AngleTrkF32_setOffset')
	.sect	'.debug_frame'
	.word	24
	.word	.L797,.L59,.L319-.L59
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_AngleTrkF32_updateStatus')
	.sect	'.debug_frame'
	.word	24
	.word	.L797,.L61,.L272-.L61
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_AngleTrkF32_update')
	.sect	'.debug_frame'
	.word	12
	.word	.L797,.L63,.L326-.L63
	.sdecl	'.debug_frame',debug,cluster('Ifx_AngleTrkF32_getRawPosition')
	.sect	'.debug_frame'
	.word	24
	.word	.L797,.L65,.L295-.L65
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_AngleTrkF32_getSpeed')
	.sect	'.debug_frame'
	.word	24
	.word	.L797,.L67,.L307-.L67
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_AngleTrkF32_getAbsolutePosition')
	.sect	'.debug_frame'
	.word	24
	.word	.L797,.L69,.L280-.L69
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_AngleTrkF32_getDirection')
	.sect	'.debug_frame'
	.word	24
	.word	.L797,.L71,.L283-.L71
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_AngleTrkF32_getFault')
	.sect	'.debug_frame'
	.word	24
	.word	.L797,.L73,.L286-.L73
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_AngleTrkF32_getOffset')
	.sect	'.debug_frame'
	.word	24
	.word	.L797,.L75,.L288-.L75
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_AngleTrkF32_getPeriodPerRotation')
	.sect	'.debug_frame'
	.word	24
	.word	.L797,.L77,.L291-.L77
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_AngleTrkF32_getPosition')
	.sect	'.debug_frame'
	.word	24
	.word	.L797,.L79,.L293-.L79
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_AngleTrkF32_getRefreshPeriod')
	.sect	'.debug_frame'
	.word	24
	.word	.L797,.L81,.L298-.L81
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_AngleTrkF32_getResolution')
	.sect	'.debug_frame'
	.word	24
	.word	.L797,.L83,.L300-.L83
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_AngleTrkF32_getSensorType')
	.sect	'.debug_frame'
	.word	24
	.word	.L797,.L85,.L305-.L85
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_AngleTrkF32_getTurn')
	.sect	'.debug_frame'
	.word	24
	.word	.L797,.L87,.L302-.L87
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_AngleTrkF32_resetFaults')
	.sect	'.debug_frame'
	.word	24
	.word	.L797,.L89,.L317-.L89
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_AngleTrkF32_setRefreshPeriod')
	.sect	'.debug_frame'
	.word	24
	.word	.L797,.L91,.L323-.L91
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_AngleTrkF32_reset')
	.sect	'.debug_frame'
	.word	24
	.word	.L797,.L93,.L309-.L93
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_AngleTrkF32_stdIfPosInit')
	.sect	'.debug_frame'
	.word	12
	.word	.L797,.L95,.L332-.L95

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_AngleTrkF32.c	   466      return TRUE;
	; Module end
