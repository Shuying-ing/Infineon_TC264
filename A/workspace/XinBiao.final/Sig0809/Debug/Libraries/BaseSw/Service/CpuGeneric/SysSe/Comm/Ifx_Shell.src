	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 99277908"
	.compiler_invocation	"ctc --dep-file=Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\.Ifx_Shell.o.d --fp-model=c,f,l,n,r,S,T,z -D__CPU__=tc26x -D__CPU_TC26X__ --core=tc1.6.x --iso=99 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\CODE -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Build -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\DataHandling -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\InternalMux -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Asc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Lin -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Spi -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Icu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmBc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmHl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Timer -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TimerWithTrigger -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TPwm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Cam -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Irq -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Dma -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Rdc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Dts -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Eray -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Phy_Pef7071 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Crc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Fft -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\IncrEnc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Pwm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Timer -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim\\In -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Pwm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Trig -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\I2c -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Driver -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Msc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Can -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Io -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Psi5 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Psi5s -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiMaster -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiSlave -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Src -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Adc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Platform -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Platform\\Tricore -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Platform\\Tricore\\Compilers -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Sfr -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Sfr\\TC26B -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Service -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Service\\CpuGeneric -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\seekfree_libraries -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\seekfree_libraries\\common -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\seekfree_peripheral -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\USER -g2 -wW557 --make-target=Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.o -t0 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O0 --default-a1-size=0 --default-a0-size=0 --source --align=0 --switch=auto --error-limit=42 -o Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.src ..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c"
	.compiler_name		"ctc"
	;source	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c'

	
$TC16X
	.sdecl	'.rodata.Ifx_Shell..33.cnt',data,rom
	.sect	'.rodata.Ifx_Shell..33.cnt'
	.align	4
.33.cnt:	.type	object
	.size	.33.cnt,8
	.word	-1,2147483647
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_isEndOfLine',code,cluster('Ifx_Shell_isEndOfLine')
	.sect	'.text.Ifx_Shell.Ifx_Shell_isEndOfLine'
	.align	2
	
	.global	Ifx_Shell_isEndOfLine

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	     1  /**
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	     2   * \file Ifx_Shell.c
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	     3   * \brief shell functions.
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	     4   *
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	     5   * \version disabled
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	     7   *
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	     8   *
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	     9   *                                 IMPORTANT NOTICE
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    10   *
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    11   *
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    12   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    13   * the company in which ordinary course of business you are acting and (ii) 
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    14   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    15   * terms of use are agreed, use of this file is subject to following:
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    16  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    17  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    19  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    20   * Permission is hereby granted, free of charge, to any person or 
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    21   * organization obtaining a copy of the software and accompanying 
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    22   * documentation covered by this license (the "Software") to use, reproduce,
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    23   * display, distribute, execute, and transmit the Software, and to prepare
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    24   * derivative works of the Software, and to permit third-parties to whom the 
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    25   * Software is furnished to do so, all subject to the following:
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    26  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    27   * The copyright notices in the Software and this entire statement, including
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    28   * the above license grant, this restriction and the following disclaimer, must
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    29   * be included in all copies of the Software, in whole or in part, and all
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    30   * derivative works of the Software, unless such copies or derivative works are
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    31   * solely in the form of machine-executable object code generated by a source
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    32   * language processor.
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    33  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    40   * DEALINGS IN THE SOFTWARE.
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    41  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    42   *
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    43   */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    44  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    45  //---------------------------------------------------------------------------
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    46  #include "Ifx_Shell.h"
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    47  #include "_Utilities/Ifx_Assert.h"
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    48  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    49  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    50  #include <string.h>
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    51  #include <stdlib.h>
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    52  #include <stdio.h>
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    53  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    54  #define IFX_SHELL_LLD              "%lld "
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    55  #define IFX_SHELL_LLX              "%llx "
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    56  #define IFX_SHELL_LLU              "%llu "
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    57  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    58  //---------------------------------------------------------------------------
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    59  #define IFX_SHELL_MAX_MESSAGE_SIZE 255
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    60  //---------------------------------------------------------------------------
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    61  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    62  /* Macro to detect space character */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    63  #define ISSPACE(c)           (((c) == ' ') || ((c) == '\t'))
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    64  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    65  /* Macro to only execute parameter if echo is enabled for this shell */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    66  #define IFX_SHELL_IF_ECHO(X) {if (shell->control.echo) {X; }}
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    67  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    68  /* Macro to write lots of spaces */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    69  #define IFX_SHELL_WRITE_SPACES(X) \ 
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    70      {int ii; for (ii = 0; ii < (X); ii++) {IfxStdIf_DPipe_print(shell->io, " "); }}
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    71  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    72  /* Macro to write lots of backspaces */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    73  #define IFX_SHELL_WRITE_BACKSPACES(X) \ 
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    74      {int ii; for (ii = 0; ii < (X); ii++) {IfxStdIf_DPipe_print(shell->io, "\b"); }}
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    75  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    76  //---------------------------------------------------------------------------
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    77  char Ifx_Shell_cmdBuffer[IFX_CFG_SHELL_CMD_LINE_SIZE * IFX_CFG_SHELL_CMD_HISTORY_SIZE];
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    78  //---------------------------------------------------------------------------
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    79  void                     Ifx_Shell_execute(Ifx_Shell *shell, pchar commandLine);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    80  void                     Ifx_Shell_cmdEscapeProcess(Ifx_Shell *shell, char EscapeChar1, char EscapeChar2);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    81  const Ifx_Shell_Command *Ifx_Shell_commandListFind(Ifx_Shell *shell, pchar commandLine, pchar *args, Ifx_Shell_CommandListConst *commandList);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    82  static boolean           Ifx_Shell_matchCommand(pchar *argsPtr, pchar *match);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    83  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    84  //---------------------------------------------------------------------------
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    85  /**
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    86   * \brief Check whether the args is already at the end.
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    87   * \param args The argument null-terminated string
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    88   */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    89  boolean Ifx_Shell_isEndOfLine(pchar args)
; Function Ifx_Shell_isEndOfLine
.L306:
Ifx_Shell_isEndOfLine:	.type	func

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    90  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    91      return ((args == NULL_PTR) || (*args == IFX_SHELL_NULL_CHAR)) ? TRUE : FALSE;
	jz.a	a4,.L2
.L1774:
	ld.b	d15,[a4]0
.L1775:
	jne	d15,#0,.L3
.L2:
	mov	d2,#1
.L1776:
	j	.L4
.L3:
	mov	d2,#0
.L4:
	j	.L5

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    92  }
.L5:
	ret
.L765:
	
__Ifx_Shell_isEndOfLine_function_end:
	.size	Ifx_Shell_isEndOfLine,__Ifx_Shell_isEndOfLine_function_end-Ifx_Shell_isEndOfLine
.L501:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_writeResult',code,cluster('Ifx_Shell_writeResult')
	.sect	'.text.Ifx_Shell.Ifx_Shell_writeResult'
	.align	2
	

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    93  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    94  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    95  static boolean Ifx_Shell_writeResult(Ifx_Shell *shell, Ifx_SizeT Code)
; Function Ifx_Shell_writeResult
.L308:
Ifx_Shell_writeResult:	.type	func
	sub.a	a10,#8
.L784:
	st.h	[a10],d4
.L1781:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    96  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    97      Ifx_SizeT length = sizeof(Code);
	mov	d15,#2
.L1782:
	st.h	[a10]2,d15
.L1783:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    98      boolean   result = IfxStdIf_DPipe_write(shell->io, &Code, &length, TIME_INFINITE);
	ld.a	a15,[a4]
.L1784:
	lea	a5,[a10]0
.L1785:
	lea	a6,[a10]2
.L1786:
	movh.a	a2,#@his(.33.cnt)
	lea	a2,[a2]@los(.33.cnt)
	ld.d	e4,[a2]0
.L772:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     2   * \file IfxStdIf_DPipe.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     3   * \brief Standard interface: Data Pipe
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     4   * \ingroup IfxStdIf
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     7   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     8   * $Date: 2014-02-27 20:08:24 GMT$
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    45   * \defgroup library_srvsw_stdif_dpipe Standard interface: Data Pipe
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    46   * \ingroup library_srvsw_stdif
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    47   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    48   * The standard interafce data pipe (DPipe) abstract the hardware used for data transfer. It provide, after proper initialization an hardware independant way to write
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    49   * and read data to/from as communciation channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    50   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    51   * \par Porting StandardIo to DPipe
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    52   * replace all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    53   *  - StandardIo type with IfxStdIf_DPipe
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    54   *  - StandardIo_print with IfxStdIf_DPipe_print
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    55   * delete StandardIo.c and StandardIo.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    56   * Include "StdIf/IfxStdIf_DPipe.h" instead of "SysSe/Bsp/StandardIo.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    57   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    58   * The following files are already ported: Ifx_Console, Ifx_Shell
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    59   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    60   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    61  #ifndef STDIF_DPIPE_H_
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    62  #define STDIF_DPIPE_H_ 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    63  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    64  #include "IfxStdIf.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    65  //----------------------------------------------------------------------------------------
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    66  #ifndef ENDL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    67  #    define ENDL       "\r\n"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    68  #endif
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    69  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    70  /** \brief Forward declaration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    71  typedef struct IfxStdIf_DPipe_ IfxStdIf_DPipe;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    72  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    73  typedef volatile boolean      *IfxStdIf_DPipe_WriteEvent;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    74  typedef volatile boolean      *IfxStdIf_DPipe_ReadEvent;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    75  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    76  /** \brief Size of the buffer allocated on the stack for the print function */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    77  #define STDIF_DPIPE_MAX_PRINT_SIZE (255)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    78  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    79  /** \brief Write binary data into the \ref IfxStdIf_DPipe.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    80   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    81   * Initially the parameter 'count' specifies count of data to write.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    82   * After execution the data pointed by 'count' specifies the data actually written
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    83   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    84   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    85   * \param data Pointer to the start of data
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    86   * \param count Pointer to the count of data (in bytes).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    87   * \param timeout in system timer ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    88   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    89   * \retval TRUE Returns TRUE if all items could be written
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    90   * \retval FALSE Returns FALSE if not all the items could be written
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    91   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    92  typedef boolean (*IfxStdIf_DPipe_Write)(IfxStdIf_InterfaceDriver stdIf, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    93  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    94  /** \brief Read data from the \ref IfxStdIf_DPipe object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    95   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    96   * Initially the parameter 'count' specifies count of data to read.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    97   * After execution the data pointed by 'count' specifies the data actually read.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    98   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    99   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   100   * \param data Pointer to the start of data
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   101   * \param count Pointer to the count of data (in bytes).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   102   * \param timeout in system timer ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   103   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   104   * \retval TRUE Returns TRUE if all items could be read
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   105   * \retval FALSE Returns FALSE if not all the items could be read
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   106   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   107  typedef boolean (*IfxStdIf_DPipe_Read)(IfxStdIf_InterfaceDriver stdIf, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   108  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   109  /** \brief Returns the number of bytes in the rx buffer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   110   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   111   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   112   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   113   * \return Returns the number of bytes in the rx buffer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   114   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   115  typedef sint32 (*IfxStdIf_DPipe_GetReadCount)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   116  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   117  /** \brief Returns read event object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   118   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   119   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   120   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   121   * \return Returns read event object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   122   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   123  typedef IfxStdIf_DPipe_ReadEvent (*IfxStdIf_DPipe_GetReadEvent)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   124  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   125  /** \brief Returns number of bytes send
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   126   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   127   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   128   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   129   * \return Returns number of bytes send
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   130   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   131  typedef uint32 (*IfxStdIf_DPipe_GetSendCount)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   132  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   133  /** \brief Returns the time stamp of the last transmit data
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   134   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   135   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   136   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   137   * \return Returns the time stamp of the last transmit data
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   138   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   139  typedef Ifx_TickTime (*IfxStdIf_DPipe_GetTxTimeStamp)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   140  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   141  /** \brief Returns the number of free bytes (free space) in the tx buffer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   142   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   143   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   144   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   145   * \return Returns the number of free bytes in the tx buffer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   146   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   147  typedef sint32 (*IfxStdIf_DPipe_GetWriteCount)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   148  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   149  /** \brief Returns write event object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   150   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   151   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   152   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   153   * \return Returns write event object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   154   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   155  typedef IfxStdIf_DPipe_WriteEvent (*IfxStdIf_DPipe_GetWriteEvent)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   156  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   157  /** \brief Indicates if the required number of bytes are available for read in the buffer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   158   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   159   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   160   * \param count Pointer to the count of data (in bytes).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   161   * \param timeout in system timer ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   162   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   163   * \return Returns TRUE if at least count bytes are available for read in the rx buffer,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   164   * if not the Event is armed to be set when the buffer count is bigger or equal to the requested count
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   165   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   166  typedef boolean (*IfxStdIf_DPipe_CanReadCount)(IfxStdIf_InterfaceDriver stdIf, Ifx_SizeT count, Ifx_TickTime timeout);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   167  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   168  /** \brief  Indicates if there is enough free space to write the data in the buffer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   169   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   170   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   171   * \param count Pointer to the count of data (in bytes).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   172   * \param timeout in system timer ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   173   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   174   * \return Returns TRUE if at least count bytes can be written to the tx buffer,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   175   *  if not the Event is armed to be set when the buffer free count is bigger or equal to the requested count
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   176   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   177  typedef boolean (*IfxStdIf_DPipe_CanWriteCount)(IfxStdIf_InterfaceDriver stdIf, Ifx_SizeT count, Ifx_TickTime timeout);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   178  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   179  /** \brief Flush the transmit buffer by transmitting all data
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   180   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   181   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   182   * \param timeout timeout for the flush operation
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   183   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   184   * \return Returns TRUE if the FIFO is empty
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   185   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   186  typedef boolean (*IfxStdIf_DPipe_FlushTx)(IfxStdIf_InterfaceDriver stdIf, Ifx_TickTime timeout);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   187  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   188  /** \brief Clears the RX buffer by removing all data
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   189   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   190   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   191   * \return void
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   192   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   193  typedef void (*IfxStdIf_DPipe_ClearRx)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   194  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   195  /** \brief Clears the TX buffer by removing all data
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   196   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   197   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   198   * \return void
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   199   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   200  typedef void (*IfxStdIf_DPipe_ClearTx)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   201  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   202  /** \brief handler called on reveive event
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   203   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   204   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   205   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   206   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   207   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   208  typedef void (*IfxStdIf_DPipe_OnReceive)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   209  /** \brief handler called on transmit event
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   210   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   211   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   212   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   213   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   214   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   215  typedef void (*IfxStdIf_DPipe_OnTransmit)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   216  /** \brief handler called on error event
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   217   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   218   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   219   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   220   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   221   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   222  typedef void (*IfxStdIf_DPipe_OnError)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   223  /** \brief Reset the sendCount counter
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   224   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   225   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   226   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   227   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   228   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   229  typedef void (*IfxStdIf_DPipe_ResetSendCount)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   230  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   231  /** \brief Standard interface object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   232   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   233  struct IfxStdIf_DPipe_
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   234  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   235      IfxStdIf_InterfaceDriver driver;              /**< \brief Pointer to the specific driver object */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   236      boolean                  txDisabled;          /**< \brief If disabled is set to TRUE, the output is disabled, else enabled */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   237  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   238      /* Standard interface APIs */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   239      IfxStdIf_DPipe_Write          write;          /**< \brief \see IfxStdIf_DPipe_Write */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   240      IfxStdIf_DPipe_Read           read;           /**< \brief \see IfxStdIf_DPipe_Read */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   241      IfxStdIf_DPipe_GetReadCount   getReadCount;   /**< \brief \see IfxStdIf_DPipe_GetReadCount */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   242      IfxStdIf_DPipe_GetReadEvent   getReadEvent;   /**< \brief \see IfxStdIf_DPipe_GetReadEvent */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   243      IfxStdIf_DPipe_GetWriteCount  getWriteCount;  /**< \brief \see IfxStdIf_DPipe_GetWriteCount */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   244      IfxStdIf_DPipe_GetWriteEvent  getWriteEvent;  /**< \brief \see IfxStdIf_DPipe_GetWriteEvent */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   245      IfxStdIf_DPipe_CanReadCount   canReadCount;   /**< \brief \see IfxStdIf_DPipe_CanReadCount */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   246      IfxStdIf_DPipe_CanWriteCount  canWriteCount;  /**< \brief \see IfxStdIf_DPipe_CanWriteCount */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   247      IfxStdIf_DPipe_FlushTx        flushTx;        /**< \brief \see IfxStdIf_DPipe_FlushTx */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   248      IfxStdIf_DPipe_ClearTx        clearTx;        /**< \brief \see IfxStdIf_DPipe_ClearTx */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   249      IfxStdIf_DPipe_ClearRx        clearRx;        /**< \brief \see IfxStdIf_DPipe_ClearRx */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   250      IfxStdIf_DPipe_OnReceive      onReceive;      /**< \brief \see IfxStdIf_DPipe_OnReceive  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   251      IfxStdIf_DPipe_OnTransmit     onTransmit;     /**< \brief \see IfxStdIf_DPipe_OnTransmit */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   252      IfxStdIf_DPipe_OnError        onError;        /**< \brief \see IfxStdIf_DPipe_OnError    */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   253  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   254      IfxStdIf_DPipe_GetSendCount   getSendCount;   /**< \brief \see IfxStdIf_DPipe_GetSendCount    */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   255      IfxStdIf_DPipe_GetTxTimeStamp getTxTimeStamp; /**< \brief \see IfxStdIf_DPipe_GetTxTimeStamp    */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   256      IfxStdIf_DPipe_ResetSendCount resetSendCount; /**< \brief \see IfxStdIf_DPipe_ResetSendCount    */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   257  };
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   258  /** \addtogroup library_srvsw_stdif_dpipe
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   259   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   260  /** \copydoc IfxStdIf_DPipe_Write
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   261   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   262  IFX_INLINE boolean IfxStdIf_DPipe_write(IfxStdIf_DPipe *stdIf, void *data, Ifx_SizeT *count, Ifx_TickTime timeout)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   263  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   264      return stdIf->write(stdIf->driver, data, count, timeout);
	ld.a	a2,[a15]8
.L1787:
	ld.a	a4,[a15]
.L785:
	calli	a2
.L1788:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   264      return stdIf->write(stdIf->driver, data, count, timeout);      (inlined)
	j	.L6

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   265  }      (inlined)
.L6:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    99   IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, result != FALSE);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   100  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   101      return result;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   102  }
	j	.L7

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   103  
.L7:
	ret
.L767:
	
__Ifx_Shell_writeResult_function_end:
	.size	Ifx_Shell_writeResult,__Ifx_Shell_writeResult_function_end-Ifx_Shell_writeResult
.L506:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_showHelpSingle',code,cluster('Ifx_Shell_showHelpSingle')
	.sect	'.text.Ifx_Shell.Ifx_Shell_showHelpSingle'
	.align	2
	
	.global	Ifx_Shell_showHelpSingle

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   104  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   105  //---------------------------------------------------------------------------
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   106  boolean Ifx_Shell_showHelpSingle(Ifx_Shell_CommandListConst commandList, IfxStdIf_DPipe *io, boolean briefOnly, boolean singleCommand)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   107  {
; Function Ifx_Shell_showHelpSingle
.L310:
Ifx_Shell_showHelpSingle:	.type	func
	sub.a	a10,#32
.L786:
	mov.aa	a12,a5
.L787:
	mov	e8,d5,d4
.L1505:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   108      const Ifx_Shell_Command *command          = commandList;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   109      uint32                   index            = 0;
	st.a	[a10]24,a4
.L788:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   110      pchar                    space            = "";
	mov	d10,#0
.L789:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   111      pchar                    spaceParam       = "";
	movh.a	a13,#@his(.1.str)
.L790:
	lea	a13,[a13]@los(.1.str)
.L1506:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   112  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   113      while (command->commandLine != NULL_PTR)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   114      {
	j	.L8
.L9:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   115          pchar   help     = command->help;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   116          pchar   chunk;
	ld.a	a2,[a15]4
.L1507:
	st.a	[a10]8,a2
.L1508:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   117          boolean isParam  = FALSE;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   118          boolean isSyntax = FALSE;
	mov	d11,#0
.L792:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   119          IfxStdIf_DPipe_print(io, "%s%s", space, command->commandLine);
	mov	d12,#0
.L793:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   120  
	st.a	[a10],a13
.L1509:
	ld.a	a15,[a15]
.L791:
	st.a	[a10]4,a15
.L1510:
	movh.a	a5,#@his(.2.str)
	lea	a5,[a5]@los(.2.str)
	mov.aa	a4,a12
.L794:
	call	IfxStdIf_DPipe_print
.L795:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   121          while (*help != IFX_SHELL_NULL_CHAR)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   122          {
	j	.L10
.L11:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   123              Ifx_SizeT count;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   124              pchar     matchp     = "/p";
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   125              pchar     matchs     = "/s";
	movh.a	a15,#@his(.3.str)
	lea	a15,[a15]@los(.3.str)
.L1511:
	st.a	[a10]16,a15
.L1512:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   126                   spaceParam = "";
	movh.a	a15,#@his(.4.str)
	lea	a15,[a15]@los(.4.str)
.L1513:
	st.a	[a10]20,a15
.L1514:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   127  
	movh.a	a15,#@his(.1.str)
.L796:
	lea	a15,[a15]@los(.1.str)
.L1515:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   128              if (Ifx_Shell_matchCommand(&help, &matchp))
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   129              {   /* Parameter description found */
	lea	a4,[a10]8
.L1516:
	lea	a5,[a10]16
	call	Ifx_Shell_matchCommand
.L1517:
	jeq	d2,#0,.L12
.L1518:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   130                  isParam    = TRUE;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   131                  isSyntax   = FALSE,
	mov	d11,#1
.L1519:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   132                  spaceParam = "      ";
	mov	d12,#0
.L1520:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   133              }
	movh.a	a15,#@his(.5.str)
	lea	a15,[a15]@los(.5.str)
.L1521:
	j	.L13
.L12:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   134              else if (Ifx_Shell_matchCommand(&help, &matchs))
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   135              {   /* Parameter description found */
	lea	a4,[a10]8
.L1522:
	lea	a5,[a10]20
	call	Ifx_Shell_matchCommand
.L1523:
	jeq	d2,#0,.L14
.L1524:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   136                  isParam    = FALSE;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   137                  isSyntax   = TRUE,
	mov	d11,#0
.L1525:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   138                  spaceParam = "    SYNTAX: ";
	mov	d12,#1
.L1526:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   139              }
	movh.a	a15,#@his(.6.str)
	lea	a15,[a15]@los(.6.str)
.L1527:
	j	.L15
.L14:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   140              else
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   141              {     /* Other text */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   142                  if (isParam)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   143                  { /* Show param details*/
	jeq	d11,#0,.L16
.L1528:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   144                      spaceParam = "        ";
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   145                  }
	movh.a	a15,#@his(.7.str)
	lea	a15,[a15]@los(.7.str)
.L1529:
	j	.L17
.L16:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   146                  else if (isSyntax)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   147                  {   /* Show param details*/
	jeq	d12,#0,.L18
.L1530:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   148                      spaceParam = "            ";
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   149                  }
	movh.a	a15,#@his(.8.str)
	lea	a15,[a15]@los(.8.str)
.L18:
.L17:
.L15:
.L13:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   150              }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   151  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   152              /* Split print by ENDL */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   153              chunk = strstr(help, ENDL);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   154  
	ld.a	a4,[a10]8
.L1531:
	movh.a	a5,#@his(.9.str)
	lea	a5,[a5]@los(.9.str)
	call	strstr
.L798:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   155              if (chunk == NULL_PTR)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   156              {
	jnz.a	a2,.L19
.L1532:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   157                  chunk = help + strlen(help);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   158              }
	ld.a	a14,[a10]8
.L1533:
	ld.a	a4,[a10]8
	call	strlen
.L799:
	addsc.a	a2,a14,d2,#0
.L800:
	j	.L20
.L19:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   159              else
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   160              {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   161                  if (!briefOnly)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   162                  {
	jne	d8,#0,.L21
.L802:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   163                      chunk += strlen(ENDL);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   164                  }
	add.a	a2,#2
.L21:
.L20:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   165              }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   166  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   167              count = chunk - help;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   168              IfxStdIf_DPipe_print(io, "%s%s", space, spaceParam);
	ld.a	a4,[a10]8
.L1534:
	sub.a	a2,a2,a4
.L801:
	mov.d	d15,a2
.L1535:
	st.h	[a10]12,d15
.L1536:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   169              IfxStdIf_DPipe_write(io, (void *)help, &count, TIME_INFINITE);
	st.a	[a10],a13
.L1537:
	st.a	[a10]4,a15
.L1538:
	movh.a	a5,#@his(.2.str)
	lea	a5,[a5]@los(.2.str)
	mov.aa	a4,a12
.L803:
	call	IfxStdIf_DPipe_print
.L804:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   170  
	ld.a	a5,[a10]8
.L1539:
	lea	a6,[a10]12
.L1540:
	movh.a	a15,#@his(.33.cnt)
.L797:
	lea	a15,[a15]@los(.33.cnt)
	ld.d	e4,[a15]0
.L670:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     2   * \file IfxStdIf_DPipe.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     3   * \brief Standard interface: Data Pipe
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     4   * \ingroup IfxStdIf
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     7   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     8   * $Date: 2014-02-27 20:08:24 GMT$
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    45   * \defgroup library_srvsw_stdif_dpipe Standard interface: Data Pipe
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    46   * \ingroup library_srvsw_stdif
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    47   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    48   * The standard interafce data pipe (DPipe) abstract the hardware used for data transfer. It provide, after proper initialization an hardware independant way to write
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    49   * and read data to/from as communciation channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    50   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    51   * \par Porting StandardIo to DPipe
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    52   * replace all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    53   *  - StandardIo type with IfxStdIf_DPipe
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    54   *  - StandardIo_print with IfxStdIf_DPipe_print
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    55   * delete StandardIo.c and StandardIo.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    56   * Include "StdIf/IfxStdIf_DPipe.h" instead of "SysSe/Bsp/StandardIo.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    57   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    58   * The following files are already ported: Ifx_Console, Ifx_Shell
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    59   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    60   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    61  #ifndef STDIF_DPIPE_H_
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    62  #define STDIF_DPIPE_H_ 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    63  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    64  #include "IfxStdIf.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    65  //----------------------------------------------------------------------------------------
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    66  #ifndef ENDL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    67  #    define ENDL       "\r\n"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    68  #endif
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    69  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    70  /** \brief Forward declaration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    71  typedef struct IfxStdIf_DPipe_ IfxStdIf_DPipe;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    72  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    73  typedef volatile boolean      *IfxStdIf_DPipe_WriteEvent;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    74  typedef volatile boolean      *IfxStdIf_DPipe_ReadEvent;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    75  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    76  /** \brief Size of the buffer allocated on the stack for the print function */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    77  #define STDIF_DPIPE_MAX_PRINT_SIZE (255)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    78  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    79  /** \brief Write binary data into the \ref IfxStdIf_DPipe.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    80   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    81   * Initially the parameter 'count' specifies count of data to write.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    82   * After execution the data pointed by 'count' specifies the data actually written
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    83   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    84   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    85   * \param data Pointer to the start of data
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    86   * \param count Pointer to the count of data (in bytes).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    87   * \param timeout in system timer ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    88   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    89   * \retval TRUE Returns TRUE if all items could be written
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    90   * \retval FALSE Returns FALSE if not all the items could be written
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    91   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    92  typedef boolean (*IfxStdIf_DPipe_Write)(IfxStdIf_InterfaceDriver stdIf, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    93  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    94  /** \brief Read data from the \ref IfxStdIf_DPipe object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    95   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    96   * Initially the parameter 'count' specifies count of data to read.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    97   * After execution the data pointed by 'count' specifies the data actually read.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    98   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    99   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   100   * \param data Pointer to the start of data
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   101   * \param count Pointer to the count of data (in bytes).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   102   * \param timeout in system timer ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   103   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   104   * \retval TRUE Returns TRUE if all items could be read
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   105   * \retval FALSE Returns FALSE if not all the items could be read
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   106   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   107  typedef boolean (*IfxStdIf_DPipe_Read)(IfxStdIf_InterfaceDriver stdIf, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   108  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   109  /** \brief Returns the number of bytes in the rx buffer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   110   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   111   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   112   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   113   * \return Returns the number of bytes in the rx buffer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   114   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   115  typedef sint32 (*IfxStdIf_DPipe_GetReadCount)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   116  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   117  /** \brief Returns read event object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   118   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   119   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   120   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   121   * \return Returns read event object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   122   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   123  typedef IfxStdIf_DPipe_ReadEvent (*IfxStdIf_DPipe_GetReadEvent)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   124  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   125  /** \brief Returns number of bytes send
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   126   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   127   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   128   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   129   * \return Returns number of bytes send
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   130   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   131  typedef uint32 (*IfxStdIf_DPipe_GetSendCount)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   132  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   133  /** \brief Returns the time stamp of the last transmit data
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   134   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   135   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   136   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   137   * \return Returns the time stamp of the last transmit data
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   138   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   139  typedef Ifx_TickTime (*IfxStdIf_DPipe_GetTxTimeStamp)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   140  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   141  /** \brief Returns the number of free bytes (free space) in the tx buffer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   142   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   143   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   144   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   145   * \return Returns the number of free bytes in the tx buffer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   146   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   147  typedef sint32 (*IfxStdIf_DPipe_GetWriteCount)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   148  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   149  /** \brief Returns write event object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   150   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   151   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   152   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   153   * \return Returns write event object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   154   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   155  typedef IfxStdIf_DPipe_WriteEvent (*IfxStdIf_DPipe_GetWriteEvent)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   156  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   157  /** \brief Indicates if the required number of bytes are available for read in the buffer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   158   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   159   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   160   * \param count Pointer to the count of data (in bytes).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   161   * \param timeout in system timer ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   162   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   163   * \return Returns TRUE if at least count bytes are available for read in the rx buffer,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   164   * if not the Event is armed to be set when the buffer count is bigger or equal to the requested count
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   165   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   166  typedef boolean (*IfxStdIf_DPipe_CanReadCount)(IfxStdIf_InterfaceDriver stdIf, Ifx_SizeT count, Ifx_TickTime timeout);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   167  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   168  /** \brief  Indicates if there is enough free space to write the data in the buffer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   169   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   170   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   171   * \param count Pointer to the count of data (in bytes).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   172   * \param timeout in system timer ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   173   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   174   * \return Returns TRUE if at least count bytes can be written to the tx buffer,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   175   *  if not the Event is armed to be set when the buffer free count is bigger or equal to the requested count
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   176   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   177  typedef boolean (*IfxStdIf_DPipe_CanWriteCount)(IfxStdIf_InterfaceDriver stdIf, Ifx_SizeT count, Ifx_TickTime timeout);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   178  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   179  /** \brief Flush the transmit buffer by transmitting all data
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   180   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   181   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   182   * \param timeout timeout for the flush operation
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   183   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   184   * \return Returns TRUE if the FIFO is empty
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   185   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   186  typedef boolean (*IfxStdIf_DPipe_FlushTx)(IfxStdIf_InterfaceDriver stdIf, Ifx_TickTime timeout);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   187  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   188  /** \brief Clears the RX buffer by removing all data
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   189   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   190   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   191   * \return void
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   192   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   193  typedef void (*IfxStdIf_DPipe_ClearRx)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   194  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   195  /** \brief Clears the TX buffer by removing all data
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   196   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   197   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   198   * \return void
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   199   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   200  typedef void (*IfxStdIf_DPipe_ClearTx)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   201  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   202  /** \brief handler called on reveive event
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   203   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   204   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   205   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   206   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   207   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   208  typedef void (*IfxStdIf_DPipe_OnReceive)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   209  /** \brief handler called on transmit event
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   210   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   211   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   212   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   213   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   214   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   215  typedef void (*IfxStdIf_DPipe_OnTransmit)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   216  /** \brief handler called on error event
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   217   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   218   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   219   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   220   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   221   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   222  typedef void (*IfxStdIf_DPipe_OnError)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   223  /** \brief Reset the sendCount counter
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   224   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   225   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   226   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   227   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   228   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   229  typedef void (*IfxStdIf_DPipe_ResetSendCount)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   230  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   231  /** \brief Standard interface object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   232   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   233  struct IfxStdIf_DPipe_
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   234  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   235      IfxStdIf_InterfaceDriver driver;              /**< \brief Pointer to the specific driver object */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   236      boolean                  txDisabled;          /**< \brief If disabled is set to TRUE, the output is disabled, else enabled */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   237  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   238      /* Standard interface APIs */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   239      IfxStdIf_DPipe_Write          write;          /**< \brief \see IfxStdIf_DPipe_Write */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   240      IfxStdIf_DPipe_Read           read;           /**< \brief \see IfxStdIf_DPipe_Read */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   241      IfxStdIf_DPipe_GetReadCount   getReadCount;   /**< \brief \see IfxStdIf_DPipe_GetReadCount */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   242      IfxStdIf_DPipe_GetReadEvent   getReadEvent;   /**< \brief \see IfxStdIf_DPipe_GetReadEvent */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   243      IfxStdIf_DPipe_GetWriteCount  getWriteCount;  /**< \brief \see IfxStdIf_DPipe_GetWriteCount */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   244      IfxStdIf_DPipe_GetWriteEvent  getWriteEvent;  /**< \brief \see IfxStdIf_DPipe_GetWriteEvent */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   245      IfxStdIf_DPipe_CanReadCount   canReadCount;   /**< \brief \see IfxStdIf_DPipe_CanReadCount */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   246      IfxStdIf_DPipe_CanWriteCount  canWriteCount;  /**< \brief \see IfxStdIf_DPipe_CanWriteCount */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   247      IfxStdIf_DPipe_FlushTx        flushTx;        /**< \brief \see IfxStdIf_DPipe_FlushTx */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   248      IfxStdIf_DPipe_ClearTx        clearTx;        /**< \brief \see IfxStdIf_DPipe_ClearTx */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   249      IfxStdIf_DPipe_ClearRx        clearRx;        /**< \brief \see IfxStdIf_DPipe_ClearRx */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   250      IfxStdIf_DPipe_OnReceive      onReceive;      /**< \brief \see IfxStdIf_DPipe_OnReceive  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   251      IfxStdIf_DPipe_OnTransmit     onTransmit;     /**< \brief \see IfxStdIf_DPipe_OnTransmit */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   252      IfxStdIf_DPipe_OnError        onError;        /**< \brief \see IfxStdIf_DPipe_OnError    */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   253  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   254      IfxStdIf_DPipe_GetSendCount   getSendCount;   /**< \brief \see IfxStdIf_DPipe_GetSendCount    */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   255      IfxStdIf_DPipe_GetTxTimeStamp getTxTimeStamp; /**< \brief \see IfxStdIf_DPipe_GetTxTimeStamp    */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   256      IfxStdIf_DPipe_ResetSendCount resetSendCount; /**< \brief \see IfxStdIf_DPipe_ResetSendCount    */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   257  };
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   258  /** \addtogroup library_srvsw_stdif_dpipe
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   259   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   260  /** \copydoc IfxStdIf_DPipe_Write
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   261   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   262  IFX_INLINE boolean IfxStdIf_DPipe_write(IfxStdIf_DPipe *stdIf, void *data, Ifx_SizeT *count, Ifx_TickTime timeout)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   263  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   264      return stdIf->write(stdIf->driver, data, count, timeout);
	ld.a	a15,[a12]8
.L1541:
	ld.a	a4,[a12]
.L1542:
	calli	a15
.L1543:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   264      return stdIf->write(stdIf->driver, data, count, timeout);      (inlined)
	j	.L22

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   265  }      (inlined)
.L22:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   171  * Print Brief only */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   172                  break;
	ld.a	a15,[a10]8
.L1544:
	ld.h	d15,[a10]12
.L1545:
	addsc.a	a15,a15,d15,#0
	st.a	[a10]8,a15
.L805:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   173              }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   174          }
	jeq	d8,#0,.L23
.L806:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   175  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   176          IfxStdIf_DPipe_print(io, ENDL);
	j	.L24
.L23:
.L10:
	ld.a	a15,[a10]8
.L1546:
	ld.b	d15,[a15]0
.L1547:
	jne	d15,#0,.L11

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   177  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   178          if ((command->call == NULL_PTR) && (index == 0))
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   179          {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   180              index = 1;
.L24:
	movh.a	a5,#@his(.9.str)
	lea	a5,[a5]@los(.9.str)
	mov.aa	a4,a12
.L807:
	call	IfxStdIf_DPipe_print
.L808:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   181              space = "  ";
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   182          }
	ld.a	a15,[a10]24
.L809:
	ld.w	d15,[a15]12
.L1548:
	jne	d15,#0,.L25
.L1549:
	jne	d10,#0,.L26
.L1550:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   183  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   184          command = &command[1];
	mov	d10,#1
.L1551:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   185  
	movh.a	a13,#@his(.10.str)
	lea	a13,[a13]@los(.10.str)
.L26:
.L25:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   186          if (singleCommand)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   187          {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   188              break;
	lea	a15,[a15]16
	st.a	[a10]24,a15
.L810:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   189          }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   190      }
	jeq	d9,#0,.L27
.L811:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   191  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   192      return TRUE;
	j	.L28
.L27:
.L8:
	ld.a	a15,[a10]24
.L812:
	ld.w	d15,[a15]
.L1552:
	jne	d15,#0,.L9

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   193  }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   194  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   195  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   196  boolean Ifx_Shell_showHelpSingleCommand(pchar args, void *shellPtr, IfxStdIf_DPipe *io)
.L28:
	mov	d2,#1
.L1553:
	j	.L29

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   197  {
.L29:
	ret
.L652:
	
__Ifx_Shell_showHelpSingle_function_end:
	.size	Ifx_Shell_showHelpSingle,__Ifx_Shell_showHelpSingle_function_end-Ifx_Shell_showHelpSingle
.L456:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_showHelpSingleCommand',code,cluster('Ifx_Shell_showHelpSingleCommand')
	.sect	'.text.Ifx_Shell.Ifx_Shell_showHelpSingleCommand'
	.align	2
	
	.global	Ifx_Shell_showHelpSingleCommand

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   198      Ifx_Shell_CommandListConst commandList;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   199      const Ifx_Shell_Command   *shellCommand = Ifx_Shell_commandListFind(shellPtr, args, &args, &commandList);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   200  
; Function Ifx_Shell_showHelpSingleCommand
.L312:
Ifx_Shell_showHelpSingleCommand:	.type	func
	sub.a	a10,#16
.L813:
	st.a	[a10]4,a4
	mov.aa	a12,a6
.L817:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   201      if (shellCommand != NULL_PTR)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   202      {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   203          if (shellCommand->call == NULL_PTR)
	ld.a	a15,[a10]4
.L1793:
	lea	a6,[a10]4
.L815:
	lea	a7,[a10]8
	mov.aa	a4,a5
.L814:
	mov.aa	a5,a15
.L816:
	call	Ifx_Shell_commandListFind
.L818:
	mov.aa	a13,a2
.L820:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   204          {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   205              Ifx_Shell_showHelpSingle(commandList, io, FALSE, FALSE);
	jz.a	a13,.L30
.L1794:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   206          }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   207          else
	ld.w	d15,[a13]12
.L1795:
	jne	d15,#0,.L31
.L1796:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   208          {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   209              if (commandList->call == NULL_PTR)
	ld.a	a4,[a10]8
.L1797:
	mov	d4,#0
.L1798:
	mov	d5,#0
	mov.aa	a5,a12
.L821:
	call	Ifx_Shell_showHelpSingle
.L819:
	j	.L32
.L31:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   210              {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   211                  IfxStdIf_DPipe_print(io, "%s ", commandList->commandLine);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   212              }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   213  
	ld.a	a15,[a10]8
.L1799:
	ld.w	d15,[a15]12
.L1800:
	jne	d15,#0,.L33
.L1801:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   214              Ifx_Shell_showHelpSingle(shellCommand, io, FALSE, TRUE);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   215          }
	ld.a	a2,[a10]8
.L822:
	ld.a	a15,[a2]
	st.a	[a10],a15
.L1802:
	movh.a	a5,#@his(.11.str)
	lea	a5,[a5]@los(.11.str)
	mov.aa	a4,a12
.L823:
	call	IfxStdIf_DPipe_print
.L33:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   216  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   217          return TRUE;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   218      }
	mov	d4,#0
.L1803:
	mov	d5,#1
	mov.aa	a4,a13
.L824:
	mov.aa	a5,a12
.L825:
	call	Ifx_Shell_showHelpSingle
.L32:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   219      else
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   220      {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   221          IfxStdIf_DPipe_print(io, "unknown command");
	mov	d2,#1
.L1804:
	j	.L34
.L30:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   222          return FALSE;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   223      }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   224  }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   225  
	movh.a	a5,#@his(.12.str)
	lea	a5,[a5]@los(.12.str)
	mov.aa	a4,a12
.L827:
	call	IfxStdIf_DPipe_print
.L826:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   226  
	mov	d2,#0
.L1805:
	j	.L35

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   227  boolean Ifx_Shell_showHelp(pchar args, void *shellPtr, IfxStdIf_DPipe *io)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   228  {
.L35:
.L34:
	ret
.L777:
	
__Ifx_Shell_showHelpSingleCommand_function_end:
	.size	Ifx_Shell_showHelpSingleCommand,__Ifx_Shell_showHelpSingleCommand_function_end-Ifx_Shell_showHelpSingleCommand
.L511:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_showHelp',code,cluster('Ifx_Shell_showHelp')
	.sect	'.text.Ifx_Shell.Ifx_Shell_showHelp'
	.align	2
	
	.global	Ifx_Shell_showHelp

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   229      sint32     i;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   230      Ifx_Shell *shell  = shellPtr;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   231      boolean    result = TRUE;
; Function Ifx_Shell_showHelp
.L314:
Ifx_Shell_showHelp:	.type	func
	mov.aa	a15,a5
.L828:
	mov.aa	a12,a6
.L829:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   232  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   233      if (*args == IFX_SHELL_NULL_CHAR)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   234      {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   235          for (i = 0; i < IFX_CFG_SHELL_COMMAND_LISTS; i++)
	mov	d8,#1
.L830:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   236          {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   237              if (shell->commandList[i] != NULL_PTR)
	ld.b	d15,[a4]0
.L1558:
	jne	d15,#0,.L36
.L1559:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   238              {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   239                  Ifx_Shell_showHelpSingle(shell->commandList[i], io, TRUE, FALSE);
	mov	d9,#0
.L832:
	j	.L37
.L38:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   240              }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   241          }
	mul	d15,d9,#4
	addsc.a	a2,a15,d15,#0
	ld.w	d15,[a2]324
.L1560:
	jeq	d15,#0,.L39
.L1561:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   242      }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   243      else
	mul	d15,d9,#4
	addsc.a	a2,a15,d15,#0
	ld.a	a4,[a2]324
.L1562:
	mov	d4,#1
.L1563:
	mov	d5,#0
	mov.aa	a5,a12
.L833:
	call	Ifx_Shell_showHelpSingle
.L39:
	add	d9,#1
.L37:
	jlt	d9,#1,.L38
.L1564:
	j	.L40
.L36:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   244      {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   245          result = Ifx_Shell_showHelpSingleCommand(args, shellPtr, io);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   246      }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   247  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   248      return result;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   249  }
	mov.aa	a5,a15
	mov.aa	a6,a12
	call	Ifx_Shell_showHelpSingleCommand
.L831:
	mov	d8,d2
.L40:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   250  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   251  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   252  boolean Ifx_Shell_protocolStart(pchar args, void *data, IfxStdIf_DPipe *io)
	mov	d2,d8
.L834:
	j	.L41

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   253  {
.L41:
	ret
.L680:
	
__Ifx_Shell_showHelp_function_end:
	.size	Ifx_Shell_showHelp,__Ifx_Shell_showHelp_function_end-Ifx_Shell_showHelp
.L461:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_protocolStart',code,cluster('Ifx_Shell_protocolStart')
	.sect	'.text.Ifx_Shell.Ifx_Shell_protocolStart'
	.align	2
	
	.global	Ifx_Shell_protocolStart

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   254      Ifx_Shell *shell  = data;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   255      boolean    Result = TRUE;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   256  
; Function Ifx_Shell_protocolStart
.L316:
Ifx_Shell_protocolStart:	.type	func
	sub.a	a10,#8
.L835:
	st.a	[a10],a4
	mov.aa	a15,a5
.L839:
	mov.aa	a12,a6
.L840:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   257      if (Ifx_Shell_matchToken(&args, "?") != FALSE)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   258      {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   259          IfxStdIf_DPipe_print(io, "Syntax     : protocol start" ENDL);
	mov	d8,#1
.L841:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   260          IfxStdIf_DPipe_print(io, "           > start a protocol" ENDL);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   261      }
	lea	a4,[a10]0
.L836:
	movh.a	a5,#@his(.13.str)
.L837:
	lea	a5,[a5]@los(.13.str)
	call	Ifx_Shell_matchToken
.L838:
	jeq	d2,#0,.L42
.L1577:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   262      else if (Ifx_Shell_matchToken(&args, "start") != FALSE)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   263      {
	movh.a	a5,#@his(.14.str)
	lea	a5,[a5]@los(.14.str)
	mov.aa	a4,a12
.L843:
	call	IfxStdIf_DPipe_print
.L844:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   264          if ((shell->protocol.start != NULL_PTR) && (shell->protocol.object != NULL_PTR))
	movh.a	a5,#@his(.15.str)
	lea	a5,[a5]@los(.15.str)
	mov.aa	a4,a12
.L845:
	call	IfxStdIf_DPipe_print
.L846:
	j	.L43
.L42:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   265          {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   266              Result                  = shell->protocol.start(shell->protocol.object, io);
	lea	a4,[a10]0
.L1578:
	movh.a	a5,#@his(.16.str)
	lea	a5,[a5]@los(.16.str)
	call	Ifx_Shell_matchToken
.L1579:
	jeq	d2,#0,.L44
.L1580:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   267              shell->protocol.started = (Result != FALSE);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   268  
	ld.w	d15,[a15]328
.L1581:
	jeq	d15,#0,.L45
.L1582:
	ld.w	d15,[a15]344
.L1583:
	jeq	d15,#0,.L46
.L1584:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   269              if (shell->protocol.onStart != NULL_PTR)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   270              {
	ld.a	a2,[a15]328
.L1585:
	ld.a	a4,[a15]344
.L1586:
	mov.aa	a5,a12
.L847:
	calli	a2
.L842:
	mov	d8,d2
.L848:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   271                  shell->protocol.onStart(shell->protocol.object, shell->protocol.onStartData);
	ne	d15,d8,#0
.L1587:
	st.b	[a15]348,d15
.L1588:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   272              }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   273          }
	ld.w	d15,[a15]336
.L1589:
	jeq	d15,#0,.L47
.L1590:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   274          else
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   275          {
	ld.a	a2,[a15]336
.L1591:
	ld.a	a4,[a15]344
.L1592:
	ld.a	a5,[a15]340
	calli	a2
.L47:
	j	.L48
.L46:
.L45:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   276              Result = FALSE;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   277          }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   278      }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   279      else
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   280      {}
	mov	d8,#0
.L48:
	j	.L49
.L44:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   281  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   282      return Result;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   283  }
.L49:
.L43:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   284  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   285  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   286  boolean Ifx_Shell_bbProtocolStart(pchar args, void *data, IfxStdIf_DPipe *io)
	mov	d2,d8
.L849:
	j	.L50

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   287  {
.L50:
	ret
.L693:
	
__Ifx_Shell_protocolStart_function_end:
	.size	Ifx_Shell_protocolStart,__Ifx_Shell_protocolStart_function_end-Ifx_Shell_protocolStart
.L471:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_bbProtocolStart',code,cluster('Ifx_Shell_bbProtocolStart')
	.sect	'.text.Ifx_Shell.Ifx_Shell_bbProtocolStart'
	.align	2
	
	.global	Ifx_Shell_bbProtocolStart

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   288      boolean result = TRUE;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   289  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   290      if (Ifx_Shell_matchToken(&args, "?") != FALSE)
; Function Ifx_Shell_bbProtocolStart
.L318:
Ifx_Shell_bbProtocolStart:	.type	func
	sub.a	a10,#8
.L850:
	st.a	[a10],a4
	mov.aa	a15,a5
.L854:
	mov.aa	a12,a6
.L855:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   291      {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   292          IfxStdIf_DPipe_print(io, "Syntax     : protocol start" ENDL);
	mov	d15,#1
.L856:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   293          IfxStdIf_DPipe_print(io, "           > start a protocol" ENDL);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   294      }
	lea	a4,[a10]0
.L851:
	movh.a	a5,#@his(.13.str)
.L852:
	lea	a5,[a5]@los(.13.str)
	call	Ifx_Shell_matchToken
.L853:
	jeq	d2,#0,.L51
.L1597:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   295      else if (Ifx_Shell_matchToken(&args, "protocol") != FALSE)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   296      {
	movh.a	a5,#@his(.14.str)
	lea	a5,[a5]@los(.14.str)
	mov.aa	a4,a12
.L858:
	call	IfxStdIf_DPipe_print
.L859:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   297          result = Ifx_Shell_protocolStart(args, data, io);
	movh.a	a5,#@his(.15.str)
	lea	a5,[a5]@los(.15.str)
	mov.aa	a4,a12
.L860:
	call	IfxStdIf_DPipe_print
.L861:
	j	.L52
.L51:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   298      }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   299      else
	lea	a4,[a10]0
.L1598:
	movh.a	a5,#@his(.17.str)
	lea	a5,[a5]@los(.17.str)
	call	Ifx_Shell_matchToken
.L1599:
	jeq	d2,#0,.L53
.L1600:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   300      {}
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   301  
	ld.a	a4,[a10]
.L1601:
	mov.aa	a5,a15
.L862:
	mov.aa	a6,a12
.L863:
	call	Ifx_Shell_protocolStart
.L857:
	mov	d15,d2
.L864:
	j	.L54
.L53:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   302      return result;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   303  }
.L54:
.L52:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   304  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   305  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   306  //---------------------------------------------------------------------------
	mov	d2,d15
.L865:
	j	.L55

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   307  void Ifx_Shell_initConfig(Ifx_Shell_Config *config)
.L55:
	ret
.L699:
	
__Ifx_Shell_bbProtocolStart_function_end:
	.size	Ifx_Shell_bbProtocolStart,__Ifx_Shell_bbProtocolStart_function_end-Ifx_Shell_bbProtocolStart
.L476:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_initConfig',code,cluster('Ifx_Shell_initConfig')
	.sect	'.text.Ifx_Shell.Ifx_Shell_initConfig'
	.align	2
	
	.global	Ifx_Shell_initConfig

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   308  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   309      uint32 i;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   310  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   311      for (i = 0; i < IFX_CFG_SHELL_COMMAND_LISTS; i++)
; Function Ifx_Shell_initConfig
.L320:
Ifx_Shell_initConfig:	.type	func

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   312      {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   313          config->commandList[i] = NULL_PTR;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   314      }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   315  
	mov	d0,#0
.L866:
	j	.L56
.L57:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   316      config->standardIo           = NULL_PTR;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   317      config->echo                 = TRUE;
	mul	d15,d0,#4
	addsc.a	a15,a4,d15,#0
.L1087:
	mov.a	a2,#0
.L1088:
	st.a	[a15]8,a2
.L1089:
	add	d0,#1
.L56:
	jlt.u	d0,#1,.L57
.L1090:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   318      config->protocol.execute     = NULL_PTR;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   319      config->protocol.object      = NULL_PTR;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   320      config->protocol.onStart     = NULL_PTR;
	mov.a	a15,#0
.L1091:
	st.a	[a4],a15
.L1092:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   321      config->protocol.onStartData = NULL_PTR;
	mov	d15,#1
.L1093:
	st.b	[a4]4,d15
.L1094:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   322      config->protocol.start       = NULL_PTR;
	mov.a	a15,#0
.L1095:
	st.a	[a4]16,a15
.L1096:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   323      config->protocol.started     = FALSE;
	mov.a	a15,#0
.L1097:
	st.a	[a4]28,a15
.L1098:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   324      config->sendResultCode       = FALSE;
	mov.a	a15,#0
.L1099:
	st.a	[a4]20,a15
.L1100:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   325      config->showPrompt           = TRUE;
	mov.a	a15,#0
.L1101:
	st.a	[a4]24,a15
.L1102:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   326      config->standardIo           = NULL_PTR;
	mov.a	a15,#0
.L1103:
	st.a	[a4]12,a15
.L1104:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   327  }
	mov	d15,#0
.L1105:
	st.b	[a4]32,d15
.L1106:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   328  
	mov	d15,#0
.L1107:
	st.b	[a4]6,d15
.L1108:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   329  
	mov	d15,#1
.L1109:
	st.b	[a4]5,d15
.L1110:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   330  boolean Ifx_Shell_init(Ifx_Shell *shell, const Ifx_Shell_Config *config)
	mov.a	a15,#0
.L1111:
	st.a	[a4],a15
.L1112:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   331  {
	ret
.L514:
	
__Ifx_Shell_initConfig_function_end:
	.size	Ifx_Shell_initConfig,__Ifx_Shell_initConfig_function_end-Ifx_Shell_initConfig
.L371:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_init',code,cluster('Ifx_Shell_init')
	.sect	'.text.Ifx_Shell.Ifx_Shell_init'
	.align	2
	
	.global	Ifx_Shell_init

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   332      sint32 i;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   333      char **CmdHistory = NULL_PTR;   /* Pointer to array of pointers for command history items */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   334  
; Function Ifx_Shell_init
.L322:
Ifx_Shell_init:	.type	func
	mov.aa	a15,a4
.L868:
	mov.aa	a12,a5
.L869:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   335      /* Ensure state variable is cleared */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   336      memset(shell, 0, sizeof(*shell));
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   337  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   338      shell->protocol               = config->protocol;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   339      shell->protocol.started       = FALSE;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   340  
	mov	d4,#0
.L1117:
	mov	d5,#352
	mov.aa	a4,a15
	call	memset
.L867:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   341      shell->io                     = config->standardIo;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   342      shell->control.showPrompt     = config->showPrompt;
	lea	a2,[a12]12
.L1118:
	lea	a4,[a15]328
	mov.a	a5,#2
.L58:
	ld.d	e0,[a2+]8
	st.d	[a4+]8,e0
	loop	a5,.L58
.L1119:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   343      shell->control.sendResultCode = config->sendResultCode;
	mov	d15,#0
.L1120:
	st.b	[a15]348,d15
.L1121:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   344      shell->control.echo           = config->echo;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   345      shell->control.echoError      = TRUE;
	ld.a	a2,[a12]
.L1122:
	st.a	[a15],a2
.L1123:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   346      shell->control.enabled        = TRUE;
	ld.bu	d15,[a15]4
.L1124:
	ld.bu	d0,[a12]5
.L1125:
	insert	d15,d15,d0,#0,#1
	st.b	[a15]4,d15
.L1126:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   347  
	ld.bu	d15,[a15]4
.L1127:
	ld.bu	d0,[a12]6
.L1128:
	insert	d15,d15,d0,#2,#1
	st.b	[a15]4,d15
.L1129:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   348      shell->locals.escBracketNum   = IFX_SHELL_NULL_CHAR; /* Used to cache number in sequence "ESC [ 1/2/3/4 ~" */
	ld.bu	d15,[a15]4
.L1130:
	ld.bu	d0,[a12]4
.L1131:
	insert	d15,d15,d0,#3,#1
	st.b	[a15]4,d15
.L1132:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   349      shell->locals.cmdState        = IFX_SHELL_CMD_STATE_NORMAL;
	ld.bu	d15,[a15]4
.L1133:
	or	d15,#16
	st.b	[a15]4,d15
.L1134:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   350  
	ld.bu	d15,[a15]4
.L1135:
	or	d15,#2
	st.b	[a15]4,d15
.L1136:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   351      /* Copy command line buffer pointer into state variable */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   352      shell->cmd.cmdStr = shell->locals.cmdStr;
	mov	d15,#0
.L1137:
	st.b	[a15]320,d15
.L1138:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   353  
	mov	d15,#0
.L1139:
	st.b	[a15]319,d15
.L1140:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   354      /* Initialize command history space and cache pointer */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   355      memset(Ifx_Shell_cmdBuffer, 0, sizeof(Ifx_Shell_cmdBuffer));
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   356      shell->cmdHistory[0] = &Ifx_Shell_cmdBuffer[0];
	lea	a2,[a15]191
.L1141:
	st.a	[a15]48,a2
.L1142:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   357  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   358      for (i = 0; i < IFX_CFG_SHELL_COMMAND_LISTS; i++)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   359      {
	movh.a	a4,#@his(Ifx_Shell_cmdBuffer)
	lea	a4,[a4]@los(Ifx_Shell_cmdBuffer)
.L1143:
	mov	d4,#0
.L1144:
	mov	d5,#1280
	call	memset
.L1145:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   360          shell->commandList[i] = config->commandList[i];
	movh.a	a2,#@his(Ifx_Shell_cmdBuffer)
	lea	a2,[a2]@los(Ifx_Shell_cmdBuffer)
.L1146:
	st.a	[a15]8,a2
.L1147:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   361      }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   362  
	mov	d0,#0
.L870:
	j	.L59
.L60:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   363      /* Initialize command history pointers */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   364      CmdHistory = shell->cmdHistory;
	mul	d15,d0,#4
	addsc.a	a2,a15,d15,#0
.L1148:
	mul	d15,d0,#4
	addsc.a	a4,a12,d15,#0
	ld.a	a4,[a4]8
.L1149:
	st.a	[a2]324,a4
.L1150:
	add	d0,#1
.L59:
	jlt	d0,#1,.L60
.L1151:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   365  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   366      for (i = 1; i < IFX_CFG_SHELL_CMD_HISTORY_SIZE; i++)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   367      {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   368          CmdHistory[i] = &CmdHistory[i - 1][IFX_CFG_SHELL_CMD_LINE_SIZE];    /* Items are just offsets into a large allocated area */
	lea	a2,[a15]8
.L872:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   369      }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   370  
	mov	d0,#1
.L1152:
	j	.L61
.L62:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   371      shell->cmd.historyItem = IFX_SHELL_CMD_HISTORY_NO_ITEM;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   372  
	mul	d15,d0,#4
	addsc.a	a4,a2,d15,#0
.L1153:
	add	d15,d0,#-1
.L1154:
	mul	d15,d15,#4
	addsc.a	a5,a2,d15,#0
	ld.a	a5,[a5]
.L1155:
	lea	a5,[a5]128
.L1156:
	st.a	[a4],a5
.L1157:
	add	d0,#1
.L61:
	mov	d15,#10
.L1158:
	jlt	d0,d15,.L62
.L1159:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   373      /* Pre-load useful commands into history buffer */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   374      strcpy(CmdHistory[0], "help");
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   375      //strcpy(CmdHistory[1], "protocol start");
	mov	d15,#-1
.L1160:
	st.h	[a15]58,d15
.L1161:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   376  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   377      if (shell->control.showPrompt != 0)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   378      {
	ld.a	a4,[a2]
.L1162:
	movh.a	a5,#@his(.18.str)
	lea	a5,[a5]@los(.18.str)
	call	strcpy
.L871:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   379          IfxStdIf_DPipe_print(shell->io, ENDL);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   380          IfxStdIf_DPipe_print(shell->io, IFX_CFG_SHELL_PROMPT);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   381      }
	ld.bu	d15,[a15]4
.L1163:
	jz.t	d15:0,.L63
.L1164:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   382  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   383      return TRUE;
	ld.a	a4,[a15]
.L1165:
	movh.a	a5,#@his(.9.str)
	lea	a5,[a5]@los(.9.str)
	call	IfxStdIf_DPipe_print
.L1166:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   384  }
	ld.a	a4,[a15]
.L1167:
	movh.a	a5,#@his(.19.str)
	lea	a5,[a5]@los(.19.str)
	call	IfxStdIf_DPipe_print
.L63:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   385  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   386  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   387  void Ifx_Shell_process(Ifx_Shell *shell)
	mov	d2,#1
.L1168:
	j	.L64

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   388  {
.L64:
	ret
.L520:
	
__Ifx_Shell_init_function_end:
	.size	Ifx_Shell_init,__Ifx_Shell_init_function_end-Ifx_Shell_init
.L376:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_process',code,cluster('Ifx_Shell_process')
	.sect	'.text.Ifx_Shell.Ifx_Shell_process'
	.align	2
	
	.global	Ifx_Shell_process

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   389      Ifx_SizeT          i, j;           /* Loop variables */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   390      Ifx_SizeT          count;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   391      Ifx_SizeT          readCount;
; Function Ifx_Shell_process
.L324:
Ifx_Shell_process:	.type	func
	sub.a	a10,#8
.L873:
	mov.aa	a15,a4
.L875:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   392      boolean            NormalKeyPress; /* Indicates if this is a normal keypress, i.e. not part of an escape code */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   393  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   394      Ifx_Shell_CmdLine *Cmd         = &shell->cmd;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   395      char              *inputbuffer = shell->locals.inputbuffer;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   396      char              *cmdStr      = shell->locals.cmdStr;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   397      char             **CmdHistory  = shell->cmdHistory;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   398  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   399      if (shell->control.enabled == 0)
	lea	a5,[a15]62
.L876:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   400      {
	lea	a12,[a15]191
.L878:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   401          return;
	lea	a13,[a15]8
.L879:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   402      }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   403  
	ld.bu	d15,[a15]4
.L1190:
	jnz.t	d15:1,.L65
.L1191:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   404      if ((shell->protocol.object != NULL_PTR) && (shell->protocol.started != FALSE))
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   405      {
	j	.L66
.L65:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   406          shell->protocol.execute(shell->protocol.object);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   407      }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   408      else
	ld.w	d15,[a15]344
.L1192:
	jeq	d15,#0,.L67
.L1193:
	ld.bu	d15,[a15]348
.L1194:
	jeq	d15,#0,.L68
.L1195:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   409      {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   410          /**** NORMAL MODE ****/
	ld.a	a2,[a15]332
.L1196:
	ld.a	a4,[a15]344
.L874:
	calli	a2
.L877:
	j	.L69
.L68:
.L67:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   411  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   412          /********************************************************************************/
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   413          /* Read all characters until enter inclusive.                                   */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   414          /* If the command is bigger than IFX_SHELL_CMD_SIZE, the command is ignored.    */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   415          /*                                                                              */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   416          /* Escape sequences are handled by a state machine.                             */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   417          /* The following escape sequences (prefix "ESC [") are supported:               */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   418          /*                                                                              */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   419          /* A  - up      B - down       C - right     D - left                           */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   420          /* 1~ - HOME   2~ - INSERT    3~ - DELETE   5~ - END                            */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   421          /*                                                                              */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   422          /* Backspace ('\b') is also supported.                                          */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   423          /********************************************************************************/
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   424  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   425          count     = 0;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   426          readCount = IFX_CFG_SHELL_CMD_LINE_SIZE - count;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   427          IfxStdIf_DPipe_read(shell->io, &inputbuffer[count], &readCount, TIME_NULL);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   428          count    += readCount;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   429  
	mov	d8,#0
.L882:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   430          for (i = 0; i < count; i++)
	rsub	d15,d8,#128
.L1197:
	st.h	[a10]4,d15
.L1198:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   431          {
	ld.a	a2,[a15]
.L1199:
	add.a	a5,#0
.L1200:
	lea	a6,[a10]4
.L1201:
	mov	e4,#0
.L556:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     2   * \file IfxStdIf_DPipe.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     3   * \brief Standard interface: Data Pipe
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     4   * \ingroup IfxStdIf
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     7   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     8   * $Date: 2014-02-27 20:08:24 GMT$
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    45   * \defgroup library_srvsw_stdif_dpipe Standard interface: Data Pipe
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    46   * \ingroup library_srvsw_stdif
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    47   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    48   * The standard interafce data pipe (DPipe) abstract the hardware used for data transfer. It provide, after proper initialization an hardware independant way to write
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    49   * and read data to/from as communciation channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    50   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    51   * \par Porting StandardIo to DPipe
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    52   * replace all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    53   *  - StandardIo type with IfxStdIf_DPipe
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    54   *  - StandardIo_print with IfxStdIf_DPipe_print
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    55   * delete StandardIo.c and StandardIo.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    56   * Include "StdIf/IfxStdIf_DPipe.h" instead of "SysSe/Bsp/StandardIo.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    57   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    58   * The following files are already ported: Ifx_Console, Ifx_Shell
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    59   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    60   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    61  #ifndef STDIF_DPIPE_H_
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    62  #define STDIF_DPIPE_H_ 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    63  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    64  #include "IfxStdIf.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    65  //----------------------------------------------------------------------------------------
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    66  #ifndef ENDL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    67  #    define ENDL       "\r\n"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    68  #endif
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    69  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    70  /** \brief Forward declaration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    71  typedef struct IfxStdIf_DPipe_ IfxStdIf_DPipe;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    72  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    73  typedef volatile boolean      *IfxStdIf_DPipe_WriteEvent;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    74  typedef volatile boolean      *IfxStdIf_DPipe_ReadEvent;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    75  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    76  /** \brief Size of the buffer allocated on the stack for the print function */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    77  #define STDIF_DPIPE_MAX_PRINT_SIZE (255)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    78  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    79  /** \brief Write binary data into the \ref IfxStdIf_DPipe.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    80   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    81   * Initially the parameter 'count' specifies count of data to write.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    82   * After execution the data pointed by 'count' specifies the data actually written
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    83   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    84   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    85   * \param data Pointer to the start of data
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    86   * \param count Pointer to the count of data (in bytes).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    87   * \param timeout in system timer ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    88   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    89   * \retval TRUE Returns TRUE if all items could be written
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    90   * \retval FALSE Returns FALSE if not all the items could be written
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    91   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    92  typedef boolean (*IfxStdIf_DPipe_Write)(IfxStdIf_InterfaceDriver stdIf, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    93  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    94  /** \brief Read data from the \ref IfxStdIf_DPipe object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    95   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    96   * Initially the parameter 'count' specifies count of data to read.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    97   * After execution the data pointed by 'count' specifies the data actually read.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    98   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    99   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   100   * \param data Pointer to the start of data
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   101   * \param count Pointer to the count of data (in bytes).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   102   * \param timeout in system timer ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   103   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   104   * \retval TRUE Returns TRUE if all items could be read
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   105   * \retval FALSE Returns FALSE if not all the items could be read
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   106   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   107  typedef boolean (*IfxStdIf_DPipe_Read)(IfxStdIf_InterfaceDriver stdIf, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   108  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   109  /** \brief Returns the number of bytes in the rx buffer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   110   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   111   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   112   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   113   * \return Returns the number of bytes in the rx buffer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   114   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   115  typedef sint32 (*IfxStdIf_DPipe_GetReadCount)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   116  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   117  /** \brief Returns read event object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   118   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   119   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   120   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   121   * \return Returns read event object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   122   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   123  typedef IfxStdIf_DPipe_ReadEvent (*IfxStdIf_DPipe_GetReadEvent)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   124  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   125  /** \brief Returns number of bytes send
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   126   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   127   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   128   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   129   * \return Returns number of bytes send
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   130   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   131  typedef uint32 (*IfxStdIf_DPipe_GetSendCount)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   132  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   133  /** \brief Returns the time stamp of the last transmit data
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   134   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   135   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   136   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   137   * \return Returns the time stamp of the last transmit data
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   138   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   139  typedef Ifx_TickTime (*IfxStdIf_DPipe_GetTxTimeStamp)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   140  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   141  /** \brief Returns the number of free bytes (free space) in the tx buffer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   142   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   143   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   144   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   145   * \return Returns the number of free bytes in the tx buffer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   146   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   147  typedef sint32 (*IfxStdIf_DPipe_GetWriteCount)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   148  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   149  /** \brief Returns write event object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   150   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   151   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   152   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   153   * \return Returns write event object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   154   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   155  typedef IfxStdIf_DPipe_WriteEvent (*IfxStdIf_DPipe_GetWriteEvent)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   156  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   157  /** \brief Indicates if the required number of bytes are available for read in the buffer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   158   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   159   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   160   * \param count Pointer to the count of data (in bytes).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   161   * \param timeout in system timer ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   162   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   163   * \return Returns TRUE if at least count bytes are available for read in the rx buffer,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   164   * if not the Event is armed to be set when the buffer count is bigger or equal to the requested count
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   165   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   166  typedef boolean (*IfxStdIf_DPipe_CanReadCount)(IfxStdIf_InterfaceDriver stdIf, Ifx_SizeT count, Ifx_TickTime timeout);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   167  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   168  /** \brief  Indicates if there is enough free space to write the data in the buffer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   169   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   170   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   171   * \param count Pointer to the count of data (in bytes).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   172   * \param timeout in system timer ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   173   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   174   * \return Returns TRUE if at least count bytes can be written to the tx buffer,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   175   *  if not the Event is armed to be set when the buffer free count is bigger or equal to the requested count
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   176   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   177  typedef boolean (*IfxStdIf_DPipe_CanWriteCount)(IfxStdIf_InterfaceDriver stdIf, Ifx_SizeT count, Ifx_TickTime timeout);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   178  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   179  /** \brief Flush the transmit buffer by transmitting all data
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   180   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   181   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   182   * \param timeout timeout for the flush operation
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   183   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   184   * \return Returns TRUE if the FIFO is empty
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   185   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   186  typedef boolean (*IfxStdIf_DPipe_FlushTx)(IfxStdIf_InterfaceDriver stdIf, Ifx_TickTime timeout);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   187  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   188  /** \brief Clears the RX buffer by removing all data
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   189   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   190   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   191   * \return void
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   192   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   193  typedef void (*IfxStdIf_DPipe_ClearRx)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   194  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   195  /** \brief Clears the TX buffer by removing all data
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   196   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   197   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   198   * \return void
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   199   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   200  typedef void (*IfxStdIf_DPipe_ClearTx)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   201  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   202  /** \brief handler called on reveive event
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   203   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   204   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   205   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   206   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   207   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   208  typedef void (*IfxStdIf_DPipe_OnReceive)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   209  /** \brief handler called on transmit event
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   210   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   211   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   212   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   213   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   214   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   215  typedef void (*IfxStdIf_DPipe_OnTransmit)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   216  /** \brief handler called on error event
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   217   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   218   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   219   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   220   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   221   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   222  typedef void (*IfxStdIf_DPipe_OnError)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   223  /** \brief Reset the sendCount counter
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   224   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   225   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   226   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   227   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   228   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   229  typedef void (*IfxStdIf_DPipe_ResetSendCount)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   230  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   231  /** \brief Standard interface object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   232   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   233  struct IfxStdIf_DPipe_
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   234  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   235      IfxStdIf_InterfaceDriver driver;              /**< \brief Pointer to the specific driver object */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   236      boolean                  txDisabled;          /**< \brief If disabled is set to TRUE, the output is disabled, else enabled */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   237  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   238      /* Standard interface APIs */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   239      IfxStdIf_DPipe_Write          write;          /**< \brief \see IfxStdIf_DPipe_Write */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   240      IfxStdIf_DPipe_Read           read;           /**< \brief \see IfxStdIf_DPipe_Read */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   241      IfxStdIf_DPipe_GetReadCount   getReadCount;   /**< \brief \see IfxStdIf_DPipe_GetReadCount */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   242      IfxStdIf_DPipe_GetReadEvent   getReadEvent;   /**< \brief \see IfxStdIf_DPipe_GetReadEvent */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   243      IfxStdIf_DPipe_GetWriteCount  getWriteCount;  /**< \brief \see IfxStdIf_DPipe_GetWriteCount */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   244      IfxStdIf_DPipe_GetWriteEvent  getWriteEvent;  /**< \brief \see IfxStdIf_DPipe_GetWriteEvent */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   245      IfxStdIf_DPipe_CanReadCount   canReadCount;   /**< \brief \see IfxStdIf_DPipe_CanReadCount */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   246      IfxStdIf_DPipe_CanWriteCount  canWriteCount;  /**< \brief \see IfxStdIf_DPipe_CanWriteCount */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   247      IfxStdIf_DPipe_FlushTx        flushTx;        /**< \brief \see IfxStdIf_DPipe_FlushTx */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   248      IfxStdIf_DPipe_ClearTx        clearTx;        /**< \brief \see IfxStdIf_DPipe_ClearTx */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   249      IfxStdIf_DPipe_ClearRx        clearRx;        /**< \brief \see IfxStdIf_DPipe_ClearRx */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   250      IfxStdIf_DPipe_OnReceive      onReceive;      /**< \brief \see IfxStdIf_DPipe_OnReceive  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   251      IfxStdIf_DPipe_OnTransmit     onTransmit;     /**< \brief \see IfxStdIf_DPipe_OnTransmit */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   252      IfxStdIf_DPipe_OnError        onError;        /**< \brief \see IfxStdIf_DPipe_OnError    */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   253  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   254      IfxStdIf_DPipe_GetSendCount   getSendCount;   /**< \brief \see IfxStdIf_DPipe_GetSendCount    */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   255      IfxStdIf_DPipe_GetTxTimeStamp getTxTimeStamp; /**< \brief \see IfxStdIf_DPipe_GetTxTimeStamp    */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   256      IfxStdIf_DPipe_ResetSendCount resetSendCount; /**< \brief \see IfxStdIf_DPipe_ResetSendCount    */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   257  };
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   258  /** \addtogroup library_srvsw_stdif_dpipe
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   259   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   260  /** \copydoc IfxStdIf_DPipe_Write
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   261   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   262  IFX_INLINE boolean IfxStdIf_DPipe_write(IfxStdIf_DPipe *stdIf, void *data, Ifx_SizeT *count, Ifx_TickTime timeout)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   263  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   264      return stdIf->write(stdIf->driver, data, count, timeout);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   265  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   266  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   267  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   268  /** \copydoc IfxStdIf_DPipe_Read
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   269   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   270  IFX_INLINE boolean IfxStdIf_DPipe_read(IfxStdIf_DPipe *stdIf, void *data, Ifx_SizeT *count, Ifx_TickTime timeout)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   271  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   272      return stdIf->read(stdIf->driver, data, count, timeout);
	ld.a	a7,[a2]12
.L1202:
	ld.a	a4,[a2]
.L881:
	calli	a7
.L880:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   272      return stdIf->read(stdIf->driver, data, count, timeout);      (inlined)
	j	.L70

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   273  }      (inlined)
.L70:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   432  yPress = FALSE;
	ld.h	d15,[a10]4
.L1203:
	add	d8,d15
.L1204:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   433  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   434              /* Process key pressed */
	mov	d9,#0
.L883:
	j	.L71
.L72:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   435              switch (inputbuffer[i])
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   436              {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   437              /* New line (ENTER) */
	mov	d10,#0
.L885:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   438              case '\n':
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   439              case '\r':
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   440                  /* Print new line to terminal if requested */
	addsc.a	a2,a15,d9,#0
	ld.b	d0,[a2]62
.L1205:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   441                  IFX_SHELL_IF_ECHO(IfxStdIf_DPipe_print(shell->io, ENDL))
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   442  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   443                  /* Execute command if length is valid - i.e. not an over-full buffer
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   444                   * (prevents attempted execution of junk) */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   445                  if (Cmd->length < IFX_CFG_SHELL_CMD_LINE_SIZE)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   446                  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   447                      cmdStr[Cmd->length] = IFX_SHELL_NULL_CHAR;  /* Terminate cmdStr */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   448  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   449                      if (Cmd->historyAdd != FALSE)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   450                      {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   451                          /* Shuffle history up */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   452                          for (j = IFX_CFG_SHELL_CMD_HISTORY_SIZE - 1; j > 0; j--)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   453                          {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   454                              /* Copy text */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   455                              strncpy(CmdHistory[j], CmdHistory[j - 1], IFX_CFG_SHELL_CMD_LINE_SIZE);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   456                          }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   457  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   458                          /* Copy in new entry */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   459                          strncpy(CmdHistory[0], cmdStr, IFX_CFG_SHELL_CMD_LINE_SIZE);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   460                      }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   461  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   462                      /* Execute command */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   463                      Ifx_Shell_execute(shell, cmdStr);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   464                  }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   465  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   466                  /* Show prompt if in main shell */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   467                  if (shell->control.showPrompt != 0)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   468                  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   469                      IfxStdIf_DPipe_print(shell->io, IFX_CFG_SHELL_PROMPT);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   470                  }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   471  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   472                  /* Reset command line buffer length */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   473                  Cmd->length = 0;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   474  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   475                  /* Reset command line buffer cursor position */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   476                  Cmd->cursor = 0;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   477  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   478                  /* Clear flag */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   479                  Cmd->historyAdd = FALSE;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   480  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   481                  /* Ensure we're not in command history list */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   482                  Cmd->historyItem = IFX_SHELL_CMD_HISTORY_NO_ITEM;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   483                  break;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   484  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   485              /* Backspace (may occur in middle of text if cursor location is not at end) */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   486              case '\b':
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   487  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   488                  if (Cmd->cursor > 0)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   489                  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   490                      /* Update on screen */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   491                      if (shell->control.echo != 0)
	mov	d15,#8
	jeq	d15,d0,.L73
.L1206:
	mov	d15,#10
	jeq	d15,d0,.L74
.L1207:
	mov	d15,#13
	jeq	d15,d0,.L75
.L1208:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   492                      {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   493                          /* Move left one character */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   494                          IfxStdIf_DPipe_print(shell->io, "\b");
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   495  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   496                          /* Update line with new characters */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   497                          for (j = Cmd->cursor; j < Cmd->length; j++)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   498                          {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   499                              IfxStdIf_DPipe_print(shell->io, "%c", cmdStr[j]);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   500                          }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   501  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   502                          /* Write over duplicated character at end */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   503                          IfxStdIf_DPipe_print(shell->io, " ");
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   504                          IFX_SHELL_WRITE_BACKSPACES((Cmd->length - Cmd->cursor) + 1)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   505                      }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   506  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   507                      /* Update in command line variable. Shuffle text left */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   508                      strncpy(&cmdStr[Cmd->cursor - 1], &cmdStr[Cmd->cursor], Cmd->length - Cmd->cursor);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   509  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   510                      /* Terminate string at end of shorter string */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   511                      cmdStr[Cmd->length - 1] = IFX_SHELL_NULL_CHAR;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   512  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   513                      Cmd->length--;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   514                      Cmd->cursor--;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   515  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   516                      /* Command line has been modified */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   517                      Cmd->historyAdd = TRUE;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   518                  }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   519  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   520                  break;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   521  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   522              /* Escape character */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   523              case '\x1B':       /*'\x1B': */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   524                  shell->locals.cmdState = IFX_SHELL_CMD_STATE_ESCAPE;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   525                  break;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   526  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   527              /* '[' - check to see if this is second part of an escape sequence */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   528              case '[':
	mov	d15,#27
	jeq	d15,d0,.L76
.L1209:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   529  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   530                  if (shell->locals.cmdState == IFX_SHELL_CMD_STATE_ESCAPE)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   531                  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   532                      /* ESC [ pressed */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   533                      shell->locals.cmdState = IFX_SHELL_CMD_STATE_ESCAPE_BRACKET;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   534                  }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   535                  else
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   536                  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   537                      NormalKeyPress = TRUE;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   538                  }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   539  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   540                  break;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   541  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   542              /* Check for supported characters in escape sequences ( ESC [ A/B/C/D ) */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   543              case 'A':
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   544              case 'B':
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   545              case 'C':
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   546              case 'D':
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   547  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   548                  if (shell->locals.cmdState == IFX_SHELL_CMD_STATE_ESCAPE_BRACKET)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   549                  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   550                      /* Process arrow keys */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   551                      Ifx_Shell_cmdEscapeProcess(shell, inputbuffer[i], 0);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   552  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   553                      /* End of escape sequence */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   554                      shell->locals.cmdState = IFX_SHELL_CMD_STATE_NORMAL;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   555                  }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   556                  else
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   557                  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   558                      NormalKeyPress = TRUE;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   559                  }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   560  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   561                  break;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   562  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   563              /* Check for supported characters in escape sequences (ESC [ 2/4/5 ~) */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   564              case '1':
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   565              case '2':
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   566              case '3':
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   567              case '4':
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   568  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   569                  if (shell->locals.cmdState == IFX_SHELL_CMD_STATE_ESCAPE_BRACKET)
	mov	d15,#49
	jeq	d15,d0,.L77
.L1210:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   570                  {
	mov	d15,#50
	jeq	d15,d0,.L78
.L1211:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   571                      /* Store number for use once complete escape sequence is confirmed (below) */
	mov	d15,#51
	jeq	d15,d0,.L79
.L1212:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   572                      shell->locals.escBracketNum = inputbuffer[i];
	mov	d15,#52
	jeq	d15,d0,.L80
.L1213:
	mov	d15,#65
	jeq	d15,d0,.L81
.L1214:
	mov	d15,#66
	jeq	d15,d0,.L82
.L1215:
	mov	d15,#67
	jeq	d15,d0,.L83
.L1216:
	mov	d15,#68
	jeq	d15,d0,.L84
.L1217:
	mov	d15,#91
	jeq	d15,d0,.L85
.L1218:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   573                      shell->locals.cmdState      = IFX_SHELL_CMD_STATE_ESCAPE_BRACKET_NUMBER;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   574                  }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   575                  else
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   576                  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   577                      NormalKeyPress = TRUE;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   578                  }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   579  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   580                  break;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   581  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   582              /* Check for supported characters in escape sequences (ESC [ 2/4/5 ~) */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   583              case '~':
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   584  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   585                  if (shell->locals.cmdState == IFX_SHELL_CMD_STATE_ESCAPE_BRACKET_NUMBER)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   586                  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   587                      /* Process home/delete/end */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   588                      Ifx_Shell_cmdEscapeProcess(shell, shell->locals.escBracketNum, '~');
	mov	d15,#126
	jeq	d15,d0,.L86
	j	.L87
.L74:
.L75:
	ld.bu	d15,[a15]4
	jz.t	d15:3,.L88
	ld.a	a4,[a15]
	movh.a	a5,#@his(.9.str)
	lea	a5,[a5]@los(.9.str)
	call	IfxStdIf_DPipe_print
.L88:
	ld.h	d0,[a15]54
.L1219:
	mov	d15,#128
.L1220:
	jge	d0,d15,.L89
.L1221:
	ld.h	d15,[a15]54
.L1222:
	addsc.a	a2,a12,d15,#0
.L1223:
	mov	d15,#0
.L1224:
	st.b	[a2],d15
.L1225:
	ld.bu	d15,[a15]56
.L1226:
	jeq	d15,#0,.L90
.L1227:
	mov	d11,#9
.L886:
	j	.L91
.L92:
	mul	d15,d11,#4
	addsc.a	a2,a13,d15,#0
	ld.a	a4,[a2]
.L1228:
	add	d15,d11,#-1
.L1229:
	mul	d15,d15,#4
	addsc.a	a2,a13,d15,#0
	ld.a	a5,[a2]
.L1230:
	mov	d4,#128
	call	strncpy
.L1231:
	add	d11,#-1
.L91:
	jge	d11,#1,.L92
.L1232:
	ld.a	a4,[a13]
.L1233:
	mov	d4,#128
	mov.aa	a5,a12
.L887:
	call	strncpy
.L90:
	mov.aa	a4,a15
.L888:
	mov.aa	a5,a12
.L889:
	call	Ifx_Shell_execute
.L89:
	ld.bu	d15,[a15]4
.L1234:
	jz.t	d15:0,.L93
.L1235:
	ld.a	a4,[a15]
.L1236:
	movh.a	a5,#@his(.19.str)
	lea	a5,[a5]@los(.19.str)
	call	IfxStdIf_DPipe_print
.L93:
	mov	d15,#0
.L1237:
	st.h	[a15]54,d15
.L1238:
	mov	d15,#0
.L1239:
	st.h	[a15]52,d15
.L1240:
	mov	d15,#0
.L1241:
	st.b	[a15]56,d15
.L1242:
	mov	d15,#-1
.L1243:
	st.h	[a15]58,d15
.L1244:
	j	.L94
.L73:
	ld.h	d15,[a15]52
.L1245:
	jlt	d15,#1,.L95
.L1246:
	ld.bu	d15,[a15]4
.L1247:
	jz.t	d15:3,.L96
.L1248:
	ld.a	a4,[a15]
.L1249:
	movh.a	a5,#@his(.20.str)
	lea	a5,[a5]@los(.20.str)
	call	IfxStdIf_DPipe_print
.L1250:
	ld.h	d15,[a15]52
.L890:
	j	.L97
.L98:
	addsc.a	a2,a15,d15,#0
	ld.b	d0,[a2]191
	st.w	[a10],d0
.L1251:
	ld.a	a4,[a15]
.L1252:
	movh.a	a5,#@his(.21.str)
	lea	a5,[a5]@los(.21.str)
	call	IfxStdIf_DPipe_print
.L1253:
	add	d15,#1
.L891:
	extr	d15,d15,#0,#16
.L97:
	ld.h	d0,[a15]54
.L1254:
	jlt	d15,d0,.L98
.L1255:
	ld.a	a4,[a15]
.L1256:
	movh.a	a5,#@his(.22.str)
	lea	a5,[a5]@los(.22.str)
	call	IfxStdIf_DPipe_print
.L566:
	mov	d11,#0
.L892:
	j	.L99
.L100:
	ld.a	a4,[a15]
	movh.a	a5,#@his(.20.str)
	lea	a5,[a5]@los(.20.str)
	call	IfxStdIf_DPipe_print
	add	d11,#1
.L99:
	ld.h	d15,[a15]54
	ld.h	d0,[a15]52
	sub	d15,d0
	add	d15,#1
	jlt	d11,d15,.L100
.L96:
	ld.h	d15,[a15]52
.L1257:
	addsc.a	a2,a15,d15,#0
	lea	a4,[a2]190
.L1258:
	ld.h	d15,[a15]52
.L1259:
	addsc.a	a5,a12,d15,#0
.L1260:
	ld.h	d4,[a15]54
.L1261:
	ld.h	d15,[a15]52
.L1262:
	sub	d4,d15
	call	strncpy
.L1263:
	ld.h	d15,[a15]54
.L1264:
	addsc.a	a2,a15,d15,#0
.L1265:
	mov	d15,#0
.L1266:
	st.b	[a2]190,d15
.L1267:
	ld.h	d15,[a15]54
.L1268:
	add	d15,#-1
	st.h	[a15]54,d15
.L1269:
	ld.h	d15,[a15]52
.L1270:
	add	d15,#-1
	st.h	[a15]52,d15
.L1271:
	mov	d15,#1
.L1272:
	st.b	[a15]56,d15
.L95:
	j	.L101
.L76:
	mov	d15,#1
.L1273:
	st.b	[a15]319,d15
.L1274:
	j	.L102
.L85:
	ld.bu	d15,[a15]319
.L1275:
	jne	d15,#1,.L103
.L1276:
	mov	d15,#2
.L1277:
	st.b	[a15]319,d15
.L1278:
	j	.L104
.L103:
	mov	d10,#1
.L104:
	j	.L105
.L81:
.L82:
.L83:
.L84:
	ld.bu	d15,[a15]319
.L1279:
	jne	d15,#2,.L106
.L1280:
	addsc.a	a2,a15,d9,#0
	ld.b	d4,[a2]62
.L1281:
	mov	d5,#0
	mov.aa	a4,a15
.L893:
	call	Ifx_Shell_cmdEscapeProcess
.L894:
	mov	d15,#0
.L1282:
	st.b	[a15]319,d15
.L1283:
	j	.L107
.L106:
	mov	d10,#1
.L107:
	j	.L108
.L77:
.L78:
.L79:
.L80:
	ld.bu	d15,[a15]319
.L1284:
	jne	d15,#2,.L109
.L1285:
	addsc.a	a2,a15,d9,#0
	ld.b	d15,[a2]62
.L1286:
	st.b	[a15]320,d15
.L1287:
	mov	d15,#3
.L1288:
	st.b	[a15]319,d15
.L1289:
	j	.L110
.L109:
	mov	d10,#1
.L110:
	j	.L111
.L86:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   589  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   590                      /* End of escape sequence */
	ld.bu	d15,[a15]319
.L1290:
	jne	d15,#3,.L112
.L1291:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   591                      shell->locals.cmdState = IFX_SHELL_CMD_STATE_NORMAL;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   592                  }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   593                  else
	ld.b	d4,[a15]320
.L1292:
	mov	d5,#126
	mov.aa	a4,a15
.L895:
	call	Ifx_Shell_cmdEscapeProcess
.L896:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   594                  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   595                      NormalKeyPress = TRUE;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   596                  }
	mov	d15,#0
.L1293:
	st.b	[a15]319,d15
.L1294:
	j	.L113
.L112:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   597  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   598                  break;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   599  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   600              /* Normal character - add to command string */
	mov	d10,#1
.L113:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   601              default:
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   602                  NormalKeyPress = TRUE;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   603                  break;
	j	.L114

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   604              }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   605  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   606              IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, Cmd->length >= Cmd->cursor);    /* Sanity check */
.L87:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   607  
	mov	d10,#1
.L1295:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   608              /* If this was a normal key press (not part of an escape sequence),
	j	.L115

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   609               * add it to the command string */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   610              if (NormalKeyPress != FALSE)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   611              {
.L115:
.L114:
.L111:
.L108:
.L105:
.L102:
.L101:
.L94:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   612                  /* Ensure state machine is reset */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   613                  shell->locals.cmdState = IFX_SHELL_CMD_STATE_NORMAL;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   614  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   615                  /* If not filled buffer, add in this character */
	jeq	d10,#0,.L116
.L1296:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   616                  if (Cmd->length < (IFX_CFG_SHELL_CMD_LINE_SIZE - 1))
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   617                  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   618                      /* Command line has been modified */
	mov	d15,#0
.L1297:
	st.b	[a15]319,d15
.L1298:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   619                      Cmd->historyAdd = TRUE;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   620  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   621                      /* Copy into command line */
	ld.h	d0,[a15]54
.L1299:
	mov	d15,#127
.L1300:
	jge	d0,d15,.L117
.L1301:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   622                      cmdStr[Cmd->cursor] = inputbuffer[i];
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   623                      Cmd->cursor++;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   624  
	mov	d15,#1
.L1302:
	st.b	[a15]56,d15
.L1303:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   625                      /* Update length of buffer */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   626                      Cmd->length = __max(Cmd->length, Cmd->cursor);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   627  
	ld.h	d15,[a15]52
.L1304:
	addsc.a	a2,a12,d15,#0
.L1305:
	addsc.a	a4,a15,d9,#0
	ld.b	d15,[a4]62
.L1306:
	st.b	[a2],d15
.L1307:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   628                      if (shell->control.echo != 0)
	ld.h	d15,[a15]52
.L1308:
	add	d15,#1
	st.h	[a15]52,d15
.L1309:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   629                      {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   630                          /* echo character to shell output if requested */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   631                          shell->locals.echo[0] = inputbuffer[i];
	ld.h	d15,[a15]54
.L1310:
	ld.h	d0,[a15]52
.L1311:
	max	d15,d15,d0
.L1312:
	st.h	[a15]54,d15
.L1313:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   632                          IfxStdIf_DPipe_print(shell->io, shell->locals.echo);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   633                      }
	ld.bu	d15,[a15]4
.L1314:
	jz.t	d15:3,.L118
.L1315:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   634                  }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   635                  else
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   636                  {
	addsc.a	a2,a15,d9,#0
	ld.b	d15,[a2]62
.L1316:
	st.b	[a15]60,d15
.L1317:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   637                      /* Line too long - ignore further characters */
	ld.a	a4,[a15]
.L1318:
	lea	a5,[a15]60
.L1319:
	call	IfxStdIf_DPipe_print
.L118:
	j	.L119
.L117:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   638                      Cmd->historyAdd = FALSE;    /* Invalid command line */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   639                  }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   640              }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   641          }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   642      }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   643  }
	mov	d15,#0
.L1320:
	st.b	[a15]56,d15
.L119:
.L116:
	add	d9,#1
.L884:
	extr	d9,d9,#0,#16
.L71:
	jlt	d9,d8,.L72
.L69:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   644  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   645  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   646  void Ifx_Shell_deinit(Ifx_Shell *shell)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   647  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   648      (void)shell;                /* ignore compiler warning; */
.L66:
	ret
.L541:
	
__Ifx_Shell_process_function_end:
	.size	Ifx_Shell_process,__Ifx_Shell_process_function_end-Ifx_Shell_process
.L396:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_deinit',code,cluster('Ifx_Shell_deinit')
	.sect	'.text.Ifx_Shell.Ifx_Shell_deinit'
	.align	2
	
	.global	Ifx_Shell_deinit

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   649      // tbd free necessary memory
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   650  }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   651  
; Function Ifx_Shell_deinit
.L326:
Ifx_Shell_deinit:	.type	func

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   652  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   653  pchar Ifx_Shell_skipWhitespace(pchar args)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   654  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   655      if (args != NULL_PTR)
	ret
.L529:
	
__Ifx_Shell_deinit_function_end:
	.size	Ifx_Shell_deinit,__Ifx_Shell_deinit_function_end-Ifx_Shell_deinit
.L381:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_skipWhitespace',code,cluster('Ifx_Shell_skipWhitespace')
	.sect	'.text.Ifx_Shell.Ifx_Shell_skipWhitespace'
	.align	2
	
	.global	Ifx_Shell_skipWhitespace

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   656      {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   657          while ((*args != IFX_SHELL_NULL_CHAR) && (ISSPACE(*args)))
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   658          {
; Function Ifx_Shell_skipWhitespace
.L328:
Ifx_Shell_skipWhitespace:	.type	func

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   659              args = &args[1];
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   660          }
	jz.a	a4,.L120
.L1325:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   661      }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   662  
	j	.L121
.L122:
.L123:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   663      return args;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   664  }
	add.a	a4,#1
.L121:
	ld.b	d15,[a4]0
.L1326:
	jeq	d15,#0,.L124
.L1327:
	ld.b	d0,[a4]0
	mov	d15,#32
	jeq	d15,d0,.L123
	ld.b	d0,[a4]0
	mov	d15,#9
	jeq	d15,d0,.L122
.L124:
.L120:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   665  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   666  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   667  boolean Ifx_Shell_matchToken(pchar *argsPtr, pchar token)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   668  {
	mov.aa	a2,a4
.L897:
	j	.L125

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   669      pchar   savedArguments = *argsPtr;
.L125:
	ret
.L570:
	
__Ifx_Shell_skipWhitespace_function_end:
	.size	Ifx_Shell_skipWhitespace,__Ifx_Shell_skipWhitespace_function_end-Ifx_Shell_skipWhitespace
.L401:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_matchToken',code,cluster('Ifx_Shell_matchToken')
	.sect	'.text.Ifx_Shell.Ifx_Shell_matchToken'
	.align	2
	
	.global	Ifx_Shell_matchToken

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   670      char    buffer[256];
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   671      boolean result         = FALSE;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   672  
; Function Ifx_Shell_matchToken
.L330:
Ifx_Shell_matchToken:	.type	func
	lea	a10,[a10]-256
.L898:
	mov.aa	a15,a4
.L901:
	mov.aa	a12,a5
.L902:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   673      if (Ifx_Shell_parseToken(argsPtr, buffer, Ifx_COUNTOF(buffer)) != FALSE)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   674      {
	ld.a	a13,[a15]
.L903:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   675          if (strcmp(token, buffer) == 0)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   676          {
	mov	d15,#0
.L904:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   677              result = TRUE;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   678          }
	lea	a5,[a10]0
.L900:
	mov	d4,#256
	mov.aa	a4,a15
	call	Ifx_Shell_parseToken
.L899:
	jeq	d2,#0,.L126
.L1332:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   679      }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   680  
	lea	a5,[a10]0
	mov.aa	a4,a12
.L905:
	call	strcmp
.L906:
	jne	d2,#0,.L127
.L1333:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   681      if (result == FALSE)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   682      {
	mov	d15,#1
.L127:
.L126:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   683          // No match: don't advance pointer
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   684          *argsPtr = savedArguments;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   685      }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   686  
	jne	d15,#0,.L128
.L1334:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   687      return result;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   688  }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   689  
	st.a	[a15],a13
.L128:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   690  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   691  static boolean Ifx_Shell_matchCommand(pchar *argsPtr, pchar *match)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   692  {
	mov	d2,d15
.L907:
	j	.L129

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   693      boolean result         = FALSE;
.L129:
	ret
.L572:
	
__Ifx_Shell_matchToken_function_end:
	.size	Ifx_Shell_matchToken,__Ifx_Shell_matchToken_function_end-Ifx_Shell_matchToken
.L406:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_matchCommand',code,cluster('Ifx_Shell_matchCommand')
	.sect	'.text.Ifx_Shell.Ifx_Shell_matchCommand'
	.align	2
	

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   694      pchar   savedArguments = *argsPtr;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   695      pchar   savedMatch     = *match;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   696      char    buffer0[256];
; Function Ifx_Shell_matchCommand
.L332:
Ifx_Shell_matchCommand:	.type	func
	lea	a10,[a10]-512
.L908:
	mov.aa	a15,a4
.L911:
	mov.aa	a12,a5
.L912:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   697      char    buffer1[256];
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   698  
	mov	d15,#0
.L913:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   699      if ((Ifx_Shell_parseToken(argsPtr, buffer0, Ifx_COUNTOF(buffer0)) != FALSE)
	ld.a	a13,[a15]
.L914:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   700          && (Ifx_Shell_parseToken(match, buffer1, Ifx_COUNTOF(buffer1)) != FALSE))
	ld.a	a14,[a12]
.L915:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   701      {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   702          if (strcmp(buffer1, buffer0) == 0)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   703          {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   704              result = TRUE;
	lea	a5,[a10]0
.L910:
	mov	d4,#256
	mov.aa	a4,a15
	call	Ifx_Shell_parseToken
.L909:
	jeq	d2,#0,.L130
.L1762:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   705          }
	lea	a5,[a10]256
.L1763:
	mov	d4,#256
	mov.aa	a4,a12
.L916:
	call	Ifx_Shell_parseToken
.L917:
	jeq	d2,#0,.L131
.L1764:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   706      }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   707  
	lea	a4,[a10]256
.L1765:
	lea	a5,[a10]0
	call	strcmp
.L1766:
	jne	d2,#0,.L132
.L1767:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   708      if (result == FALSE)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   709      {
	mov	d15,#1
.L132:
.L131:
.L130:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   710          // No match: don't advance pointer
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   711          *argsPtr = savedArguments;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   712          *match   = savedMatch;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   713      }
	jne	d15,#0,.L133
.L1768:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   714  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   715      return result;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   716  }
	st.a	[a15],a13
.L1769:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   717  
	st.a	[a12],a14
.L133:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   718  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   719  boolean Ifx_Shell_parseToken(pchar *argsPtr, char *tokenBuffer, int bufferLength)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   720  {
	mov	d2,d15
.L918:
	j	.L134

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   721      int   mindex = 0;
.L134:
	ret
.L757:
	
__Ifx_Shell_matchCommand_function_end:
	.size	Ifx_Shell_matchCommand,__Ifx_Shell_matchCommand_function_end-Ifx_Shell_matchCommand
.L496:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_parseToken',code,cluster('Ifx_Shell_parseToken')
	.sect	'.text.Ifx_Shell.Ifx_Shell_parseToken'
	.align	2
	
	.global	Ifx_Shell_parseToken

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   722      pchar args   = Ifx_Shell_skipWhitespace(*argsPtr);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   723  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   724      tokenBuffer[0] = IFX_SHELL_NULL_CHAR;
; Function Ifx_Shell_parseToken
.L334:
Ifx_Shell_parseToken:	.type	func
	mov.aa	a12,a4
.L921:
	mov.aa	a15,a5
.L922:
	mov	d8,d4
.L924:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   725  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   726      if (args == NULL_PTR)
	mov	d9,#0
.L926:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   727      {
	ld.a	a4,[a12]
.L919:
	call	Ifx_Shell_skipWhitespace
.L920:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   728          return FALSE;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   729      }
	mov	d0,#0
.L1339:
	st.b	[a15],d0
.L1340:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   730  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   731      if (*args == '\"')
	jnz.a	a2,.L135
.L1341:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   732      {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   733          args = &args[1];
	mov	d2,#0
.L1342:
	j	.L136
.L135:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   734  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   735          while ((*args != IFX_SHELL_NULL_CHAR) && (*args != '\"'))
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   736          {
	ld.b	d0,[a2]0
.L1343:
	mov	d15,#34
.L1344:
	jne	d15,d0,.L137
.L1345:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   737              if (mindex < bufferLength)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   738              {
	add.a	a2,#1
.L1346:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   739                  tokenBuffer[mindex] = *args;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   740                  mindex++;
	j	.L138
.L139:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   741              }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   742  
	jge	d9,d8,.L140
.L1347:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   743              args = &args[1];
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   744          }
	addsc.a	a4,a15,d9,#0
.L1348:
	ld.b	d0,[a2]0
.L1349:
	st.b	[a4],d0
.L1350:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   745  
	add	d9,#1
.L140:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   746          // error if no closing quote
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   747          if (*args != '\"')
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   748          {
	add.a	a2,#1
.L138:
	ld.b	d15,[a2]0
.L1351:
	jeq	d15,#0,.L141
.L1352:
	ld.b	d0,[a2]0
.L1353:
	mov	d15,#34
.L1354:
	jne	d15,d0,.L139
.L141:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   749              return FALSE;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   750          }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   751  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   752          args = &args[1];
	ld.b	d0,[a2]0
.L1355:
	mov	d15,#34
.L1356:
	jeq	d15,d0,.L142
.L1357:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   753      }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   754      else
	mov	d2,#0
.L1358:
	j	.L143
.L142:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   755      {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   756          // don't allow unquoted empty tokens
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   757          if (*args == IFX_SHELL_NULL_CHAR)
	add.a	a2,#1
.L1359:
	j	.L144
.L137:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   758          {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   759              return FALSE;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   760          }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   761  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   762          while ((*args != IFX_SHELL_NULL_CHAR) && (!ISSPACE(*args)))
	ld.b	d15,[a2]0
.L1360:
	jne	d15,#0,.L145
.L1361:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   763          {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   764              if (mindex < bufferLength)
	mov	d2,#0
.L1362:
	j	.L146
.L145:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   765              {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   766                  tokenBuffer[mindex] = *args;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   767                  mindex++;
	j	.L147
.L148:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   768              }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   769  
	jge	d9,d8,.L149
.L1363:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   770              args = &args[1];
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   771          }
	addsc.a	a4,a15,d9,#0
.L1364:
	ld.b	d15,[a2]0
.L1365:
	st.b	[a4],d15
.L1366:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   772      }
	add	d9,#1
.L149:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   773  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   774      // make sure string is zero terminated
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   775      if (bufferLength > 0)
	add.a	a2,#1
.L147:
	ld.b	d15,[a2]0
.L1367:
	jeq	d15,#0,.L150
.L1368:
	ld.b	d0,[a2]0
	mov	d15,#32
	jeq	d15,d0,.L151
	ld.b	d0,[a2]0
	mov	d15,#9
	jne	d15,d0,.L148
.L151:
.L150:
.L144:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   776      {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   777          tokenBuffer[__min(mindex, bufferLength - 1)] = IFX_SHELL_NULL_CHAR;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   778      }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   779  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   780      *argsPtr = Ifx_Shell_skipWhitespace(args);
	jlt	d8,#1,.L152
.L1369:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   781  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   782      return TRUE;
	add	d8,#-1
.L925:
	min	d15,d9,d8
.L1370:
	addsc.a	a15,a15,d15,#0
.L923:
	mov	d15,#0
.L1371:
	st.b	[a15],d15
.L152:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   783  }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   784  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   785  
	mov.aa	a4,a2
.L928:
	call	Ifx_Shell_skipWhitespace
.L927:
	st.a	[a12],a2
.L1372:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   786  boolean Ifx_Shell_parseAddress(pchar *argsPtr, void **address)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   787  {
	mov	d2,#1
.L1373:
	j	.L153

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   788      char    buffer[32];
.L153:
.L146:
.L143:
.L136:
	ret
.L580:
	
__Ifx_Shell_parseToken_function_end:
	.size	Ifx_Shell_parseToken,__Ifx_Shell_parseToken_function_end-Ifx_Shell_parseToken
.L411:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_parseAddress',code,cluster('Ifx_Shell_parseAddress')
	.sect	'.text.Ifx_Shell.Ifx_Shell_parseAddress'
	.align	2
	
	.global	Ifx_Shell_parseAddress

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   789      boolean result;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   790  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   791      *address = 0;
; Function Ifx_Shell_parseAddress
.L336:
Ifx_Shell_parseAddress:	.type	func
	sub.a	a10,#40
.L929:
	mov.aa	a15,a5
.L932:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   792  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   793      if (Ifx_Shell_parseToken(argsPtr, buffer, Ifx_COUNTOF(buffer)) == FALSE)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   794      {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   795          result = FALSE;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   796      }
	mov.a	a2,#0
.L1378:
	st.a	[a15],a2
.L1379:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   797      else
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   798      {
	lea	a5,[a10]4
.L930:
	mov	d4,#32
	call	Ifx_Shell_parseToken
.L931:
	jne	d2,#0,.L154
.L1380:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   799          result = (buffer[0] != IFX_SHELL_NULL_CHAR) && (sscanf(buffer, "%x ", (unsigned int *)address) == 1);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   800      }
	mov	d8,#0
.L933:
	j	.L155
.L154:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   801  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   802      return result;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   803  }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   804  
	mov	d8,#0
.L934:
	ld.b	d15,[a10]4
.L1381:
	jeq	d15,#0,.L156
.L1382:
	st.a	[a10],a15
.L1383:
	lea	a4,[a10]4
.L1384:
	movh.a	a5,#@his(.23.str)
	lea	a5,[a5]@los(.23.str)
	call	sscanf
.L1385:
	jne	d2,#1,.L157
.L1386:
	mov	d8,#1
.L157:
.L156:
.L155:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   805  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   806  boolean Ifx_Shell_parseSInt32(pchar *argsPtr, sint32 *value)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   807  {
	mov	d2,d8
	j	.L158

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   808      sint64  value64;
.L158:
	ret
.L586:
	
__Ifx_Shell_parseAddress_function_end:
	.size	Ifx_Shell_parseAddress,__Ifx_Shell_parseAddress_function_end-Ifx_Shell_parseAddress
.L416:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_parseSInt32',code,cluster('Ifx_Shell_parseSInt32')
	.sect	'.text.Ifx_Shell.Ifx_Shell_parseSInt32'
	.align	2
	
	.global	Ifx_Shell_parseSInt32

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   809      boolean result;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   810  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   811      *value = 0;
; Function Ifx_Shell_parseSInt32
.L338:
Ifx_Shell_parseSInt32:	.type	func
	sub.a	a10,#8
.L935:
	mov.aa	a15,a5
.L938:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   812  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   813      if (Ifx_Shell_parseSInt64(argsPtr, &value64) == FALSE)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   814      {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   815          result = FALSE;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   816      }
	mov	d15,#0
.L1391:
	st.w	[a15],d15
.L1392:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   817      else
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   818      {
	lea	a5,[a10]0
.L937:
	call	Ifx_Shell_parseSInt64
.L936:
	jne	d2,#0,.L159
.L1393:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   819          *value = (sint32)value64;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   820          result = TRUE;
	mov	d2,#0
.L939:
	j	.L160
.L159:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   821      }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   822  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   823      return result;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   824  }
	ld.d	e0,[a10]0
.L1394:
	st.w	[a15],d0
.L1395:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   825  
	mov	d2,#1
.L160:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   826  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   827  boolean Ifx_Shell_parseUInt32(pchar *argsPtr, uint32 *value, boolean hex)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   828  {
	j	.L161

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   829      uint64  value64;
.L161:
	ret
.L593:
	
__Ifx_Shell_parseSInt32_function_end:
	.size	Ifx_Shell_parseSInt32,__Ifx_Shell_parseSInt32_function_end-Ifx_Shell_parseSInt32
.L421:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_parseUInt32',code,cluster('Ifx_Shell_parseUInt32')
	.sect	'.text.Ifx_Shell.Ifx_Shell_parseUInt32'
	.align	2
	
	.global	Ifx_Shell_parseUInt32

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   830      boolean result;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   831  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   832      *value = 0;
; Function Ifx_Shell_parseUInt32
.L340:
Ifx_Shell_parseUInt32:	.type	func
	sub.a	a10,#8
.L940:
	mov.aa	a15,a5
.L943:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   833  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   834      if (Ifx_Shell_parseUInt64(argsPtr, &value64, hex) == FALSE)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   835      {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   836          result = FALSE;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   837      }
	mov	d15,#0
.L1400:
	st.w	[a15],d15
.L1401:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   838      else
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   839      {
	lea	a5,[a10]0
.L942:
	call	Ifx_Shell_parseUInt64
.L941:
	jne	d2,#0,.L162
.L1402:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   840          *value = (uint32)value64;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   841          result = TRUE;
	mov	d2,#0
.L944:
	j	.L163
.L162:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   842      }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   843  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   844      return result;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   845  }
	ld.d	e0,[a10]0
.L1403:
	st.w	[a15],d0
.L1404:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   846  
	mov	d2,#1
.L163:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   847  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   848  boolean Ifx_Shell_parseSInt64(pchar *argsPtr, sint64 *value)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   849  {
	j	.L164

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   850      char    buffer[64];
.L164:
	ret
.L600:
	
__Ifx_Shell_parseUInt32_function_end:
	.size	Ifx_Shell_parseUInt32,__Ifx_Shell_parseUInt32_function_end-Ifx_Shell_parseUInt32
.L426:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_parseSInt64',code,cluster('Ifx_Shell_parseSInt64')
	.sect	'.text.Ifx_Shell.Ifx_Shell_parseSInt64'
	.align	2
	
	.global	Ifx_Shell_parseSInt64

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   851      boolean result;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   852  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   853      *value = 0;
; Function Ifx_Shell_parseSInt64
.L342:
Ifx_Shell_parseSInt64:	.type	func
	sub.a	a10,#72
.L945:
	mov.aa	a15,a5
.L948:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   854  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   855      if (Ifx_Shell_parseToken(argsPtr, buffer, Ifx_COUNTOF(buffer)) == FALSE)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   856      {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   857          result = FALSE;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   858      }
	mov	e0,#0
.L1409:
	st.d	[a15]0,e0
.L1410:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   859      else
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   860      {
	lea	a5,[a10]4
.L947:
	mov	d4,#64
	call	Ifx_Shell_parseToken
.L946:
	jne	d2,#0,.L165
.L1411:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   861          result = (buffer[0] != IFX_SHELL_NULL_CHAR) && (sscanf(buffer, IFX_SHELL_LLD, value) == 1);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   862      }
	mov	d8,#0
.L949:
	j	.L166
.L165:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   863  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   864      return result;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   865  }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   866  
	mov	d8,#0
.L950:
	ld.b	d15,[a10]4
.L1412:
	jeq	d15,#0,.L167
.L1413:
	st.a	[a10],a15
.L1414:
	lea	a4,[a10]4
.L1415:
	movh.a	a5,#@his(.24.str)
	lea	a5,[a5]@los(.24.str)
	call	sscanf
.L1416:
	jne	d2,#1,.L168
.L1417:
	mov	d8,#1
.L168:
.L167:
.L166:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   867  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   868  boolean Ifx_Shell_parseUInt64(pchar *argsPtr, uint64 *value, boolean hex)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   869  {
	mov	d2,d8
	j	.L169

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   870      char    buffer[64];
.L169:
	ret
.L608:
	
__Ifx_Shell_parseSInt64_function_end:
	.size	Ifx_Shell_parseSInt64,__Ifx_Shell_parseSInt64_function_end-Ifx_Shell_parseSInt64
.L431:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_parseUInt64',code,cluster('Ifx_Shell_parseUInt64')
	.sect	'.text.Ifx_Shell.Ifx_Shell_parseUInt64'
	.align	2
	
	.global	Ifx_Shell_parseUInt64

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   871      boolean result;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   872  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   873      *value = 0;
; Function Ifx_Shell_parseUInt64
.L344:
Ifx_Shell_parseUInt64:	.type	func
	sub.a	a10,#72
.L951:
	mov.aa	a15,a5
.L955:
	mov	d8,d4
.L956:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   874  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   875      if (Ifx_Shell_parseToken(argsPtr, buffer, Ifx_COUNTOF(buffer)) == FALSE)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   876      {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   877          result = FALSE;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   878      }
	mov	e0,#0
.L1422:
	st.d	[a15]0,e0
.L1423:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   879      else
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   880      {
	lea	a5,[a10]4
.L954:
	mov	d4,#64
.L953:
	call	Ifx_Shell_parseToken
.L952:
	jne	d2,#0,.L170
.L1424:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   881          char *bufferPointer = buffer;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   882  
	mov	d8,#0
.L957:
	j	.L171
.L170:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   883          if ((buffer[0] == '0') && (buffer[1] == 'x'))
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   884          {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   885              bufferPointer = &bufferPointer[2];
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   886              hex           = TRUE;
	lea	a4,[a10]4
.L959:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   887          }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   888  
	ld.b	d0,[a10]4
.L1425:
	mov	d15,#48
.L1426:
	jne	d15,d0,.L172
.L1427:
	ld.b	d0,[a10]5
.L1428:
	mov	d15,#120
.L1429:
	jne	d15,d0,.L173
.L1430:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   889          if (hex != FALSE)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   890          {
	add.a	a4,#2
.L1431:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   891              result = (bufferPointer[0] != IFX_SHELL_NULL_CHAR) && (sscanf(bufferPointer, IFX_SHELL_LLX, value) == 1);
	mov	d8,#1
.L173:
.L172:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   892          }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   893          else
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   894          {
	jeq	d8,#0,.L174
.L1432:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   895              result = (bufferPointer[0] != IFX_SHELL_NULL_CHAR) && (sscanf(bufferPointer, IFX_SHELL_LLU, value) == 1);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   896          }
	mov	d8,#0
.L958:
	ld.b	d15,[a4]0
.L1433:
	jeq	d15,#0,.L175
.L1434:
	st.a	[a10],a15
.L1435:
	movh.a	a5,#@his(.25.str)
	lea	a5,[a5]@los(.25.str)
	call	sscanf
.L960:
	jne	d2,#1,.L176
.L1436:
	mov	d8,#1
.L176:
.L175:
	j	.L177
.L174:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   897      }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   898  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   899      return result;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   900  }
	mov	d8,#0
.L962:
	ld.b	d15,[a4]0
.L1437:
	jeq	d15,#0,.L178
.L1438:
	st.a	[a10],a15
.L1439:
	movh.a	a5,#@his(.26.str)
	lea	a5,[a5]@los(.26.str)
	call	sscanf
.L961:
	jne	d2,#1,.L179
.L1440:
	mov	d8,#1
.L179:
.L178:
.L177:
.L171:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   901  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   902  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   903  boolean Ifx_Shell_parseFloat64(pchar *argsPtr, float64 *value)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   904  {
	mov	d2,d8
	j	.L180

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   905      char    buffer[64];
.L180:
	ret
.L615:
	
__Ifx_Shell_parseUInt64_function_end:
	.size	Ifx_Shell_parseUInt64,__Ifx_Shell_parseUInt64_function_end-Ifx_Shell_parseUInt64
.L436:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_parseFloat64',code,cluster('Ifx_Shell_parseFloat64')
	.sect	'.text.Ifx_Shell.Ifx_Shell_parseFloat64'
	.align	2
	
	.global	Ifx_Shell_parseFloat64

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   906      boolean result;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   907  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   908      *value = 0;
; Function Ifx_Shell_parseFloat64
.L346:
Ifx_Shell_parseFloat64:	.type	func
	sub.a	a10,#72
.L963:
	mov.aa	a15,a5
.L966:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   909  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   910      if (Ifx_Shell_parseToken(argsPtr, buffer, Ifx_COUNTOF(buffer)) == FALSE)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   911      {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   912          result = FALSE;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   913      }
	mov	d15,#0
.L1445:
	st.w	[a15],d15
.L1446:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   914      else
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   915      {
	lea	a5,[a10]4
.L965:
	mov	d4,#64
	call	Ifx_Shell_parseToken
.L964:
	jne	d2,#0,.L181
.L1447:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   916          result = (buffer[0] != IFX_SHELL_NULL_CHAR) && (sscanf(buffer, "%lf ", value) == 1);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   917      }
	mov	d8,#0
.L967:
	j	.L182
.L181:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   918  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   919      return result;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   920  }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   921  
	mov	d8,#0
.L968:
	ld.b	d15,[a10]4
.L1448:
	jeq	d15,#0,.L183
.L1449:
	st.a	[a10],a15
.L1450:
	lea	a4,[a10]4
.L1451:
	movh.a	a5,#@his(.27.str)
	lea	a5,[a5]@los(.27.str)
	call	sscanf
.L1452:
	jne	d2,#1,.L184
.L1453:
	mov	d8,#1
.L184:
.L183:
.L182:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   922  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   923  boolean Ifx_Shell_parseFloat32(pchar *argsPtr, float32 *value)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   924  {
	mov	d2,d8
	j	.L185

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   925      char    buffer[64];
.L185:
	ret
.L623:
	
__Ifx_Shell_parseFloat64_function_end:
	.size	Ifx_Shell_parseFloat64,__Ifx_Shell_parseFloat64_function_end-Ifx_Shell_parseFloat64
.L441:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_parseFloat32',code,cluster('Ifx_Shell_parseFloat32')
	.sect	'.text.Ifx_Shell.Ifx_Shell_parseFloat32'
	.align	2
	
	.global	Ifx_Shell_parseFloat32

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   926      boolean result;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   927  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   928      *value = 0;
; Function Ifx_Shell_parseFloat32
.L348:
Ifx_Shell_parseFloat32:	.type	func
	sub.a	a10,#72
.L969:
	mov.aa	a15,a5
.L972:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   929  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   930      if (Ifx_Shell_parseToken(argsPtr, buffer, Ifx_COUNTOF(buffer)) == FALSE)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   931      {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   932          result = FALSE;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   933      }
	mov	d15,#0
.L1458:
	st.w	[a15],d15
.L1459:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   934      else
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   935      {
	lea	a5,[a10]4
.L971:
	mov	d4,#64
	call	Ifx_Shell_parseToken
.L970:
	jne	d2,#0,.L186
.L1460:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   936          result = (buffer[0] != IFX_SHELL_NULL_CHAR) && (sscanf(buffer, "%f ", value) == 1);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   937      }
	mov	d8,#0
.L973:
	j	.L187
.L186:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   938  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   939      return result;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   940  }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   941  
	mov	d8,#0
.L974:
	ld.b	d15,[a10]4
.L1461:
	jeq	d15,#0,.L188
.L1462:
	st.a	[a10],a15
.L1463:
	lea	a4,[a10]4
.L1464:
	movh.a	a5,#@his(.28.str)
	lea	a5,[a5]@los(.28.str)
	call	sscanf
.L1465:
	jne	d2,#1,.L189
.L1466:
	mov	d8,#1
.L189:
.L188:
.L187:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   942  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   943  const Ifx_Shell_Command *Ifx_Shell_commandFind(Ifx_Shell_CommandListConst commandList, pchar commandLine, pchar *args, uint32 *match)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   944  {
	mov	d2,d8
	j	.L190

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   945      const Ifx_Shell_Command *command     = commandList;
.L190:
	ret
.L629:
	
__Ifx_Shell_parseFloat32_function_end:
	.size	Ifx_Shell_parseFloat32,__Ifx_Shell_parseFloat32_function_end-Ifx_Shell_parseFloat32
.L446:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_commandFind',code,cluster('Ifx_Shell_commandFind')
	.sect	'.text.Ifx_Shell.Ifx_Shell_commandFind'
	.align	2
	
	.global	Ifx_Shell_commandFind

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   946      const Ifx_Shell_Command *result      = NULL_PTR;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   947      pchar                    cmdLineTemp = commandLine;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   948      uint32                   matchInit   = 0;
; Function Ifx_Shell_commandFind
.L350:
Ifx_Shell_commandFind:	.type	func
	lea	a10,[a10]-272
.L975:
	st.a	[a10]264,a6
.L976:
	mov.aa	a12,a7
.L977:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   949      uint32                   index       = 0;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   950  
	mov.aa	a13,a4
.L978:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   951      boolean                  hasPrefix;
	mov.a	a14,#0
.L979:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   952  
	mov.aa	a15,a5
.L980:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   953      hasPrefix = (command->commandLine != NULL_PTR) && (command->call == NULL_PTR);
	mov	d9,#0
.L981:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   954      *match    = 0;
	mov	d10,#0
.L982:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   955  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   956      while (command->commandLine != NULL_PTR)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   957      {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   958          pchar  commandTemp     = command->commandLine;
	mov	d11,#0
.L983:
	ld.w	d15,[a4]
.L1471:
	jeq	d15,#0,.L191
.L1472:
	ld.w	d15,[a4]12
.L1473:
	jne	d15,#0,.L192
.L1474:
	mov	d11,#1
.L192:
.L191:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   959          pchar  commandLineTemp = cmdLineTemp;
	mov	d0,#0
.L1475:
	st.w	[a12],d0
.L1476:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   960          char   buffer[256];
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   961          uint32 matchCount      = matchInit;
	j	.L193
.L194:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   962  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   963          while (Ifx_Shell_matchCommand(&commandLineTemp, &commandTemp) != FALSE)
	ld.a	a2,[a13]
.L1477:
	st.a	[a10],a2
.L1478:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   964          {
	st.a	[a10]4,a15
.L1479:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   965              matchCount++;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   966          }
	mov	d8,d9
.L984:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   967  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   968          if ((matchCount > *match) && (Ifx_Shell_parseToken(&commandTemp, buffer, Ifx_COUNTOF(buffer)) == FALSE))
	j	.L195
.L196:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   969          {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   970              if ((index == 0) && (command->call == NULL_PTR))
	add	d8,#1
.L195:
	lea	a4,[a10]4
.L1480:
	lea	a5,[a10]0
	call	Ifx_Shell_matchCommand
.L1481:
	jne	d2,#0,.L196
.L1482:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   971              {   /* List has a prefix */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   972                  cmdLineTemp = commandLineTemp;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   973                  matchInit   = matchCount;
	ld.w	d0,[a12]
.L1483:
	jge.u	d0,d8,.L197
.L1484:
	lea	a4,[a10]0
.L1485:
	lea	a5,[a10]8
.L1486:
	mov	d4,#256
	call	Ifx_Shell_parseToken
.L1487:
	jne	d2,#0,.L198
.L1488:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   974              }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   975  
	jne	d10,#0,.L199
.L1489:
	ld.w	d15,[a13]12
.L1490:
	jne	d15,#0,.L200
.L1491:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   976              *match = matchCount;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   977              *args  = commandLineTemp;
	ld.a	a15,[a10]4
.L1492:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   978              result = command;
	mov	d9,d8
.L200:
.L199:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   979          }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   980          else
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   981          {
	st.w	[a12],d8
.L1493:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   982              if ((index == 0) && hasPrefix)
	ld.a	a4,[a10]4
.L1494:
	ld.a	a2,[a10]264
.L985:
	st.a	[a2],a4
.L1495:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   983              {
	mov.aa	a14,a13
.L1496:
	j	.L201
.L198:
.L197:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   984                  /* Prefix does not match */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   985                  break;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   986              }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   987          }
	jne	d10,#0,.L202
.L1497:
	jeq	d11,#0,.L203
.L1498:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   988  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   989          command = &command[1];
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   990  
	j	.L204
.L203:
.L202:
.L201:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   991          index++;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   992      }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   993  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   994      return result;
	lea	a13,[a13]16
.L1499:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   995  }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   996  
	add	d10,#1
.L193:
	ld.w	d15,[a13]
.L1500:
	jne	d15,#0,.L194

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   997  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   998  const Ifx_Shell_Command *Ifx_Shell_commandListFind(Ifx_Shell *shell, pchar commandLine, pchar *args, Ifx_Shell_CommandListConst *commandList)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   999  {
.L204:
	mov.aa	a2,a14
.L986:
	j	.L205

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1000      int                      i;
.L205:
	ret
.L636:
	
__Ifx_Shell_commandFind_function_end:
	.size	Ifx_Shell_commandFind,__Ifx_Shell_commandFind_function_end-Ifx_Shell_commandFind
.L451:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_commandListFind',code,cluster('Ifx_Shell_commandListFind')
	.sect	'.text.Ifx_Shell.Ifx_Shell_commandListFind'
	.align	2
	
	.global	Ifx_Shell_commandListFind

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1001      const Ifx_Shell_Command *shellCommand = NULL_PTR;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1002      const Ifx_Shell_Command *Command      = NULL_PTR;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1003      uint32                   matchMax     = 0;
; Function Ifx_Shell_commandListFind
.L352:
Ifx_Shell_commandListFind:	.type	func
	sub.a	a10,#8
.L987:
	mov.aa	a15,a4
.L988:
	st.a	[a10]4,a5
.L989:
	mov.aa	a12,a6
.L990:
	mov.aa	a13,a7
.L991:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1004      uint32                   match;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1005  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1006      for (i = 0; i < IFX_CFG_SHELL_COMMAND_LISTS; i++)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1007      {
	mov.a	a14,#0
.L992:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1008          if (shell->commandList[i] != NULL_PTR)
	mov	d8,#0
.L993:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1009          {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1010              shellCommand = Ifx_Shell_commandFind(shell->commandList[i], commandLine, args, &match);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1011  
	mov	d9,#0
.L994:
	j	.L206
.L207:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1012              if ((shellCommand != NULL_PTR) && (match > matchMax))
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1013              {
	mul	d15,d9,#4
	addsc.a	a2,a15,d15,#0
	ld.w	d15,[a2]324
.L1748:
	jeq	d15,#0,.L208
.L1749:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1014                  matchMax     = match;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1015                  Command      = shellCommand;
	mul	d15,d9,#4
	addsc.a	a2,a15,d15,#0
	ld.a	a4,[a2]324
.L1750:
	lea	a7,[a10]0
	ld.a	a5,[a10]4
.L995:
	mov.aa	a6,a12
.L997:
	call	Ifx_Shell_commandFind
.L996:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1016                  *commandList = shell->commandList[i];
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1017              }
	jz.a	a2,.L209
.L1751:
	ld.w	d15,[a10]
.L1752:
	jge.u	d8,d15,.L210
.L1753:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1018          }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1019      }
	ld.w	d8,[a10]
.L1754:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1020  
	mov.aa	a14,a2
.L1755:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1021      return Command;
	mul	d15,d9,#4
	addsc.a	a2,a15,d15,#0
.L998:
	ld.a	a2,[a2]324
.L1756:
	st.a	[a13],a2
.L210:
.L209:
.L208:
	add	d9,#1
.L206:
	jlt	d9,#1,.L207
.L1757:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1022  }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1023  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1024  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1025  void Ifx_Shell_execute(Ifx_Shell *shell, pchar commandLine)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1026  {
	mov.aa	a2,a14
.L999:
	j	.L211

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1027      pchar                      args         = NULL_PTR;
.L211:
	ret
.L746:
	
__Ifx_Shell_commandListFind_function_end:
	.size	Ifx_Shell_commandListFind,__Ifx_Shell_commandListFind_function_end-Ifx_Shell_commandListFind
.L491:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_execute',code,cluster('Ifx_Shell_execute')
	.sect	'.text.Ifx_Shell.Ifx_Shell_execute'
	.align	2
	
	.global	Ifx_Shell_execute

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1028      Ifx_Shell_CommandListConst commandList;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1029      const Ifx_Shell_Command   *shellCommand = Ifx_Shell_commandListFind(shell, commandLine, &args, &commandList);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1030  
; Function Ifx_Shell_execute
.L354:
Ifx_Shell_execute:	.type	func
	sub.a	a10,#16
.L1000:
	mov.aa	a15,a4
.L1002:
	mov.aa	a12,a5
.L1003:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1031      if (shellCommand != NULL_PTR)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1032      {
	mov.a	a2,#0
.L1606:
	st.a	[a10]4,a2
.L1607:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1033          if (shellCommand->call == NULL_PTR)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1034          {
	lea	a6,[a10]4
.L1608:
	lea	a7,[a10]8
	mov.aa	a4,a15
	mov.aa	a5,a12
	call	Ifx_Shell_commandListFind
.L1001:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1035              Ifx_Shell_showHelp(commandLine, shell, shell->io);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1036          }
	jz.a	a2,.L212
.L1609:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1037          else if (shellCommand->call(args, shellCommand->data, shell->io) != FALSE)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1038          {
	ld.w	d15,[a2]12
.L1610:
	jne	d15,#0,.L213
.L1611:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1039              if (shell->control.sendResultCode != 0)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1040              {
	ld.a	a6,[a15]
	mov.aa	a4,a12
.L1005:
	mov.aa	a5,a15
.L1006:
	call	Ifx_Shell_showHelp
.L1004:
	j	.L214
.L213:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1041                  Ifx_Shell_writeResult(shell, Ifx_Shell_ResultCode_ok);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1042              }
	ld.a	a7,[a2]12
.L1612:
	ld.a	a4,[a10]4
.L1613:
	ld.a	a5,[a2]8
.L1614:
	ld.a	a6,[a15]
	calli	a7
.L1007:
	jeq	d2,#0,.L215
.L1615:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1043          }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1044          else
	ld.bu	d15,[a15]4
.L1616:
	jz.t	d15:2,.L216
.L1617:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1045          {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1046              if (shell->control.sendResultCode != 0)
	mov	d4,#255
	mov.aa	a4,a15
.L1008:
	call	Ifx_Shell_writeResult
.L216:
	j	.L217
.L215:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1047              {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1048                  Ifx_Shell_writeResult(shell, Ifx_Shell_ResultCode_nok);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1049              }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1050              else if (shell->control.echoError != 0)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1051              {
	ld.bu	d15,[a15]4
.L1618:
	jz.t	d15:2,.L218
.L1619:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1052                  IfxStdIf_DPipe_print(shell->io, "\r\nShell command error: %s" ENDL, commandLine);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1053              }
	mov	d4,#129
	mov.aa	a4,a15
.L1009:
	call	Ifx_Shell_writeResult
.L1010:
	j	.L219
.L218:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1054              else
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1055              {}
	ld.bu	d15,[a15]4
.L1620:
	jz.t	d15:4,.L220
.L1621:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1056          }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1057      }
	st.a	[a10],a12
.L1622:
	ld.a	a4,[a15]
.L1623:
	movh.a	a5,#@his(.29.str)
	lea	a5,[a5]@los(.29.str)
	call	IfxStdIf_DPipe_print
.L1624:
	j	.L221
.L220:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1058      else
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1059      {
.L221:
.L219:
.L217:
.L214:
	j	.L222
.L212:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1060          if (commandLine[0] != IFX_SHELL_NULL_CHAR)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1061          {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1062              if (shell->control.sendResultCode != 0)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1063              {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1064                  Ifx_Shell_writeResult(shell, Ifx_Shell_ResultCode_unknown);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1065              }
	ld.b	d15,[a12]0
.L1625:
	jeq	d15,#0,.L223
.L1626:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1066              else if (shell->control.echoError != 0)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1067              {
	ld.bu	d15,[a15]4
.L1627:
	jz.t	d15:2,.L224
.L1628:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1068                  IfxStdIf_DPipe_print(shell->io, "\r\nUnknown command: %s" ENDL, commandLine);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1069              }
	mov	d4,#128
	mov.aa	a4,a15
.L1012:
	call	Ifx_Shell_writeResult
.L1011:
	j	.L225
.L224:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1070              else
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1071              {}
	ld.bu	d15,[a15]4
.L1629:
	jz.t	d15:4,.L226
.L1630:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1072          }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1073      }
	st.a	[a10],a12
.L1631:
	ld.a	a4,[a15]
.L1632:
	movh.a	a5,#@his(.30.str)
	lea	a5,[a5]@los(.30.str)
	call	IfxStdIf_DPipe_print
.L1013:
	j	.L227
.L226:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1074  }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1075  
.L227:
.L225:
.L223:
.L222:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1076  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1077  /****************************************************************************************/
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1078  /* Processes escape sequences, including handling command history.                      */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1079  /* The following escape sequences (prefix "ESC [") are supported:                       */
	ret
.L704:
	
__Ifx_Shell_execute_function_end:
	.size	Ifx_Shell_execute,__Ifx_Shell_execute_function_end-Ifx_Shell_execute
.L481:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_cmdEscapeProcess',code,cluster('Ifx_Shell_cmdEscapeProcess')
	.sect	'.text.Ifx_Shell.Ifx_Shell_cmdEscapeProcess'
	.align	2
	
	.global	Ifx_Shell_cmdEscapeProcess

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1080  /* A - up     B - down      C - right     D - left                                      */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1081  /* 1~ - HOME  2~ - INSERT   3~ - DELETE   4~ - END                                      */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1082  /*                                                                                      */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1083  /* Parameters:                                                                          */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1084  /*      EscapeChar1 - First character to follow ESC [                                   */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1085  /*      EscapeChar2 - Second character following ESC [ , if applicable                  */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1086  /*                                                                                      */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1087  /****************************************************************************************/
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1088  void Ifx_Shell_cmdEscapeProcess(Ifx_Shell *shell, char EscapeChar1, char EscapeChar2)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1089  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1090      Ifx_Shell_CmdLine *Cmd    = NULL_PTR; /* Command line editing state */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1091      char              *cmdStr = NULL_PTR; /* Cached pointer to command line being edited */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1092      sint32             i      = 0;        /* Loop variable */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1093  
; Function Ifx_Shell_cmdEscapeProcess
.L356:
Ifx_Shell_cmdEscapeProcess:	.type	func
	sub.a	a10,#8
.L1014:
	mov.aa	a15,a4
.L1018:
	mov	e8,d5,d4
.L1637:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1094      /* Validate parameters */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1095      boolean            result = (shell != NULL_PTR);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1096  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1097      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, result != FALSE);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1098  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1099      if (result == FALSE)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1100      {
	mov.a	a2,#0
.L1638:
	ne.a	d15,a15,a2
.L1019:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1101          return;                 /* ERROR CASE - no thread data available! */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1102      }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1103  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1104      /* Cache command state and command line pointer */
	jne	d15,#0,.L228
.L1639:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1105      Cmd    = &shell->cmd;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1106      cmdStr = Cmd->cmdStr;
	j	.L229
.L228:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1107  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1108      /* Validate command line state */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1109      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, cmdStr != NULL_PTR);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1110      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, Cmd->cursor < IFX_CFG_SHELL_CMD_LINE_SIZE);
	lea	a2,[a15]48
.L1021:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1111      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, Cmd->length < IFX_CFG_SHELL_CMD_LINE_SIZE);
	ld.a	a12,[a2]
.L1023:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1112  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1113      /* Switch on first character after ESC [ */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1114      switch (EscapeChar1)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1115      {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1116      case 'A':                  /* Up arrow */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1117  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1118          if (Cmd->historyItem == IFX_SHELL_CMD_HISTORY_NO_ITEM)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1119          {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1120              /* Not using list at the moment - take most recent item [0] */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1121              Cmd->historyItem = 0;
	mov	d15,#65
.L1020:
	jeq	d15,d8,.L230
.L1024:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1122          }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1123          else
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1124          {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1125              if (Cmd->historyItem < (IFX_CFG_SHELL_CMD_HISTORY_SIZE - 1))
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1126              {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1127                  /* If not already at oldest, go back one in list */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1128                  Cmd->historyItem++;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1129              }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1130          }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1131  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1132          /* Copy text into buffer */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1133          strncpy(cmdStr, shell->cmdHistory[Cmd->historyItem], IFX_CFG_SHELL_CMD_LINE_SIZE);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1134  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1135          /* echo to screen if requested */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1136          if (shell->control.echo != 0)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1137          {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1138              IFX_SHELL_WRITE_BACKSPACES(Cmd->cursor)  /* Move cursor back to start */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1139              IFX_SHELL_WRITE_SPACES(Cmd->length)      /* Overwrite text with spaces */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1140              IFX_SHELL_WRITE_BACKSPACES(Cmd->length)  /* Move cursor back to start */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1141              IfxStdIf_DPipe_print(shell->io, cmdStr); /* Copy buffer to screen */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1142          }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1143  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1144          Cmd->cursor     = (Ifx_SizeT)strlen(cmdStr); /* Store cursor position */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1145          Cmd->length     = Cmd->cursor;               /* Store command line length */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1146          Cmd->historyAdd = FALSE;                     /* Don't add back to history unless modified */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1147          break;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1148  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1149      case 'B':                                        /* Down arrow */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1150  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1151          if ((Cmd->historyItem == IFX_SHELL_CMD_HISTORY_NO_ITEM) || (Cmd->historyItem == 0))
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1152          {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1153              /* Not using list at the moment, or have dropped off the end - just clear command line */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1154              if (shell->control.echo != 0)
	mov	d15,#66
.L1025:
	jeq	d15,d8,.L231
.L1026:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1155              {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1156                  IFX_SHELL_WRITE_BACKSPACES(Cmd->cursor)       /* Move cursor back to start */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1157                  IFX_SHELL_WRITE_SPACES(Cmd->length)           /* Overwrite text with spaces */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1158                  IFX_SHELL_WRITE_BACKSPACES(Cmd->length)       /* Move cursor back to start */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1159              }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1160  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1161              Cmd->length      = 0;                             /* Reset command line length */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1162              Cmd->cursor      = 0;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1163              Cmd->historyItem = IFX_SHELL_CMD_HISTORY_NO_ITEM; /* Ensure we are not using list */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1164          }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1165          else
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1166          {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1167              /* Within list - move to more recent entry */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1168              Cmd->historyItem--;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1169  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1170              /* Copy text into buffer */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1171              strncpy(cmdStr, shell->cmdHistory[Cmd->historyItem], IFX_CFG_SHELL_CMD_LINE_SIZE);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1172  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1173              if (shell->control.echo != 0)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1174              {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1175                  IFX_SHELL_WRITE_BACKSPACES(Cmd->cursor)  /* Move cursor back to start */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1176                  IFX_SHELL_WRITE_SPACES(Cmd->length)      /* Overwrite text with spaces */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1177                  IFX_SHELL_WRITE_BACKSPACES(Cmd->length)  /* Move cursor back to start */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1178                  IfxStdIf_DPipe_print(shell->io, cmdStr); /* Copy buffer to screen */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1179              }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1180  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1181              Cmd->cursor = (Ifx_SizeT)strlen(cmdStr);     /* Store cursor position */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1182              Cmd->length = Cmd->cursor;                   /* Store command line length */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1183          }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1184  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1185          Cmd->historyAdd = FALSE;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1186          break;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1187  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1188      case 'C':                  /* Right arrow */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1189  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1190          if (Cmd->cursor < Cmd->length)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1191          {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1192              /* Move cursor one place to right */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1193              IFX_SHELL_IF_ECHO(IfxStdIf_DPipe_print(shell->io, "%c", cmdStr[Cmd->cursor])) Cmd->cursor++;
	mov	d15,#67
.L1027:
	jeq	d15,d8,.L232
.L1028:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1194          }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1195  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1196          break;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1197  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1198      case 'D':                  /* Left arrow */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1199  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1200          if (Cmd->cursor > 0)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1201          {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1202              /* Move cursor one place to left */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1203              IFX_SHELL_IF_ECHO(IfxStdIf_DPipe_print(shell->io, "\b")) Cmd->cursor--;
	mov	d15,#68
.L1029:
	jeq	d15,d8,.L233
.L1030:
	j	.L234
.L230:
	ld.h	d15,[a15]58
.L1640:
	jne	d15,#-1,.L235
.L1641:
	mov	d15,#0
.L1642:
	st.h	[a15]58,d15
.L1643:
	j	.L236
.L235:
	ld.h	d0,[a15]58
.L1644:
	mov	d15,#9
.L1645:
	jge	d0,d15,.L237
.L1646:
	ld.h	d15,[a15]58
.L1647:
	add	d15,#1
	st.h	[a15]58,d15
.L237:
.L236:
	ld.h	d15,[a15]58
.L1648:
	mul	d15,d15,#4
	addsc.a	a2,a15,d15,#0
.L1022:
	ld.a	a5,[a2]8
.L1649:
	mov	d4,#128
.L1015:
	mov.aa	a4,a12
.L1017:
	call	strncpy
.L1016:
	ld.bu	d15,[a15]4
.L1650:
	jz.t	d15:3,.L238
.L719:
	mov	d15,#0
.L1031:
	j	.L239
.L240:
	ld.a	a4,[a15]
	movh.a	a5,#@his(.20.str)
	lea	a5,[a5]@los(.20.str)
	call	IfxStdIf_DPipe_print
	add	d15,#1
.L239:
	ld.h	d0,[a15]52
	jlt	d15,d0,.L240
.L720:
	mov	d15,#0
.L1032:
	j	.L241
.L242:
	ld.a	a4,[a15]
	movh.a	a5,#@his(.22.str)
	lea	a5,[a5]@los(.22.str)
	call	IfxStdIf_DPipe_print
	add	d15,#1
.L241:
	ld.h	d0,[a15]54
	jlt	d15,d0,.L242
.L722:
	mov	d15,#0
.L1033:
	j	.L243
.L244:
	ld.a	a4,[a15]
	movh.a	a5,#@his(.20.str)
	lea	a5,[a5]@los(.20.str)
	call	IfxStdIf_DPipe_print
	add	d15,#1
.L243:
	ld.h	d0,[a15]54
	jlt	d15,d0,.L244
.L724:
	ld.a	a4,[a15]
.L1651:
	mov.aa	a5,a12
.L1034:
	call	IfxStdIf_DPipe_print
.L238:
	mov.aa	a4,a12
.L1035:
	call	strlen
.L1036:
	st.h	[a15]52,d2
.L1652:
	ld.h	d15,[a15]52
.L1653:
	st.h	[a15]54,d15
.L1654:
	mov	d15,#0
.L1655:
	st.b	[a15]56,d15
.L1656:
	j	.L245
.L231:
	ld.h	d15,[a15]58
.L1657:
	jeq	d15,#-1,.L246
.L1658:
	ld.h	d15,[a15]58
.L1659:
	jne	d15,#0,.L247
.L246:
	ld.bu	d15,[a15]4
.L1660:
	jz.t	d15:3,.L248
.L726:
	mov	d15,#0
.L1037:
	j	.L249
.L250:
	ld.a	a4,[a15]
	movh.a	a5,#@his(.20.str)
	lea	a5,[a5]@los(.20.str)
	call	IfxStdIf_DPipe_print
	add	d15,#1
.L249:
	ld.h	d0,[a15]52
	jlt	d15,d0,.L250
.L727:
	mov	d15,#0
.L1038:
	j	.L251
.L252:
	ld.a	a4,[a15]
	movh.a	a5,#@his(.22.str)
	lea	a5,[a5]@los(.22.str)
	call	IfxStdIf_DPipe_print
	add	d15,#1
.L251:
	ld.h	d0,[a15]54
	jlt	d15,d0,.L252
.L729:
	mov	d15,#0
.L1039:
	j	.L253
.L254:
	ld.a	a4,[a15]
	movh.a	a5,#@his(.20.str)
	lea	a5,[a5]@los(.20.str)
	call	IfxStdIf_DPipe_print
	add	d15,#1
.L253:
	ld.h	d0,[a15]54
	jlt	d15,d0,.L254
.L248:
	mov	d15,#0
.L1661:
	st.h	[a15]54,d15
.L1662:
	mov	d15,#0
.L1663:
	st.h	[a15]52,d15
.L1664:
	mov	d15,#-1
.L1665:
	st.h	[a15]58,d15
.L1666:
	j	.L255
.L247:
	ld.h	d15,[a15]58
.L1667:
	add	d15,#-1
	st.h	[a15]58,d15
.L1668:
	ld.h	d15,[a15]58
.L1669:
	mul	d15,d15,#4
	addsc.a	a2,a15,d15,#0
.L1040:
	ld.a	a5,[a2]8
.L1670:
	mov	d4,#128
.L1041:
	mov.aa	a4,a12
.L1043:
	call	strncpy
.L1042:
	ld.bu	d15,[a15]4
.L1671:
	jz.t	d15:3,.L256
.L732:
	mov	d15,#0
.L1044:
	j	.L257
.L258:
	ld.a	a4,[a15]
	movh.a	a5,#@his(.20.str)
	lea	a5,[a5]@los(.20.str)
	call	IfxStdIf_DPipe_print
	add	d15,#1
.L257:
	ld.h	d0,[a15]52
	jlt	d15,d0,.L258
.L733:
	mov	d15,#0
.L1045:
	j	.L259
.L260:
	ld.a	a4,[a15]
	movh.a	a5,#@his(.22.str)
	lea	a5,[a5]@los(.22.str)
	call	IfxStdIf_DPipe_print
	add	d15,#1
.L259:
	ld.h	d0,[a15]54
	jlt	d15,d0,.L260
.L735:
	mov	d15,#0
.L1046:
	j	.L261
.L262:
	ld.a	a4,[a15]
	movh.a	a5,#@his(.20.str)
	lea	a5,[a5]@los(.20.str)
	call	IfxStdIf_DPipe_print
	add	d15,#1
.L261:
	ld.h	d0,[a15]54
	jlt	d15,d0,.L262
.L737:
	ld.a	a4,[a15]
.L1672:
	mov.aa	a5,a12
.L1047:
	call	IfxStdIf_DPipe_print
.L256:
	mov.aa	a4,a12
.L1048:
	call	strlen
.L1049:
	st.h	[a15]52,d2
.L1673:
	ld.h	d15,[a15]52
.L1674:
	st.h	[a15]54,d15
.L255:
	mov	d15,#0
.L1675:
	st.b	[a15]56,d15
.L1676:
	j	.L263
.L232:
	ld.h	d15,[a15]52
.L1677:
	ld.h	d0,[a15]54
.L1678:
	jge	d15,d0,.L264
.L1679:
	ld.bu	d15,[a15]4
	jz.t	d15:3,.L265
	ld.h	d15,[a15]52
	addsc.a	a2,a12,d15,#0
.L1050:
	ld.b	d15,[a2]0
	st.w	[a10],d15
	ld.a	a4,[a15]
.L1051:
	movh.a	a5,#@his(.21.str)
	lea	a5,[a5]@los(.21.str)
	call	IfxStdIf_DPipe_print
.L265:
	ld.h	d15,[a15]52
.L1680:
	add	d15,#1
	st.h	[a15]52,d15
.L264:
	j	.L266
.L233:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1204          }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1205  
	ld.h	d15,[a15]52
.L1681:
	jlt	d15,#1,.L267
.L1682:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1206          break;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1207  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1208      default:
	ld.bu	d15,[a15]4
	jz.t	d15:3,.L268
	ld.a	a4,[a15]
.L1052:
	movh.a	a5,#@his(.20.str)
	lea	a5,[a5]@los(.20.str)
	call	IfxStdIf_DPipe_print
.L268:
	ld.h	d15,[a15]52
.L1683:
	add	d15,#-1
	st.h	[a15]52,d15
.L267:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1209          break;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1210      }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1211  
	j	.L269

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1212      /* If second character after ESC [ is ~ then switch on number */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1213      if (EscapeChar2 == '~')
.L234:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1214      {
	j	.L270

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1215          switch (EscapeChar1)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1216          {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1217          case '1':              /* HOME - move to start of buffer */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1218  
.L270:
.L269:
.L266:
.L263:
.L245:
	mov	d15,#126
.L1053:
	jne	d15,d9,.L271
.L1054:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1219              if (Cmd->cursor > 0)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1220              {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1221                  IFX_SHELL_WRITE_BACKSPACES(Cmd->cursor) Cmd->cursor = 0;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1222              }
	mov	d15,#49
.L1055:
	jeq	d15,d8,.L272
.L1056:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1223  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1224              break;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1225  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1226          case '2':              /* INSERT - insert blank character at cursor and move all remaining characters right one */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1227  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1228              if ((Cmd->cursor < Cmd->length) && (Cmd->length < (IFX_CFG_SHELL_CMD_LINE_SIZE - 1)))
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1229              {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1230                  /* Update on screen */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1231                  if (shell->control.echo != FALSE)
	mov	d15,#50
.L1057:
	jeq	d15,d8,.L273
.L1058:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1232                  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1233                      /* write over duplicated character at cursor */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1234                      IfxStdIf_DPipe_print(shell->io, " ");
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1235  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1236                      /* Update line with new characters */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1237                      for (i = Cmd->cursor; i < Cmd->length; i++)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1238                      {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1239                          IfxStdIf_DPipe_print(shell->io, "%c", cmdStr[i]);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1240                      }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1241  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1242                      /* Move cursor back to new place */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1243                      IFX_SHELL_WRITE_BACKSPACES((Cmd->length + 1) - Cmd->cursor)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1244                  }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1245  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1246                  /* Update in command line variable */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1247                  for (i = Cmd->length; i > Cmd->cursor; i--)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1248                  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1249                      cmdStr[i] = cmdStr[i - 1];                 /* Shuffle text right */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1250                  }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1251  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1252                  cmdStr[Cmd->length + 1] = IFX_SHELL_NULL_CHAR; /* Terminate string at end of longer string */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1253                  cmdStr[Cmd->cursor]     = ' ';                 /* Blank character at cursor */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1254  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1255                  Cmd->length++;                                 /* Now one character longer */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1256              }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1257  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1258              break;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1259  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1260          case '3':              /* DELETE - delete character to right and move all remaining characters left one */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1261  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1262              if (Cmd->cursor < Cmd->length)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1263              {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1264                  /* Update on screen */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1265                  if (shell->control.echo != 0)
	mov	d15,#51
.L1059:
	jeq	d15,d8,.L274
.L1060:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1266                  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1267                      for (i = Cmd->cursor; i < (Cmd->length - 1); i++)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1268                      {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1269                          /* Update line with new characters */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1270                          IfxStdIf_DPipe_print(shell->io, "%c", cmdStr[i + 1]);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1271                      }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1272  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1273                      /* write over duplicated character at end */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1274                      IfxStdIf_DPipe_print(shell->io, " ");
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1275  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1276                      /* Move cursor back to right place */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1277                      IFX_SHELL_WRITE_BACKSPACES(Cmd->length - Cmd->cursor)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1278                  }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1279  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1280                  /* Update in command line variable. Shuffle text left */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1281                  strncpy(&cmdStr[Cmd->cursor], &cmdStr[Cmd->cursor + 1], Cmd->length - Cmd->cursor - 1);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1282  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1283                  cmdStr[Cmd->length - 1] = IFX_SHELL_NULL_CHAR; /* Terminate string at end of shorter string */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1284                  Cmd->length--;                                 /* Now one character shorter */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1285              }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1286  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1287              break;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1288  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1289          case '4':              /* END - ensure cursor is at end */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1290  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1291              while (Cmd->cursor < Cmd->length)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1292              {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1293                  IFX_SHELL_IF_ECHO(IfxStdIf_DPipe_print(shell->io, "%c", cmdStr[Cmd->cursor])) Cmd->cursor++;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1294              }
	mov	d15,#52
.L1061:
	jeq	d15,d8,.L275
.L1062:
	j	.L276
.L272:
	ld.h	d15,[a15]52
.L1684:
	jlt	d15,#1,.L277
.L739:
	mov	d15,#0
.L1063:
	j	.L278
.L279:
	ld.a	a4,[a15]
	movh.a	a5,#@his(.20.str)
	lea	a5,[a5]@los(.20.str)
	call	IfxStdIf_DPipe_print
	add	d15,#1
.L278:
	ld.h	d0,[a15]52
	jlt	d15,d0,.L279
.L740:
	mov	d15,#0
.L1064:
	st.h	[a15]52,d15
.L277:
	j	.L280
.L273:
	ld.h	d15,[a15]52
.L1685:
	ld.h	d0,[a15]54
.L1686:
	jge	d15,d0,.L281
.L1687:
	ld.h	d0,[a15]54
.L1688:
	mov	d15,#127
.L1689:
	jge	d0,d15,.L282
.L1690:
	ld.bu	d15,[a15]4
	extr.u	d15,d15,#3,#1
.L1691:
	jeq	d15,#0,.L283
.L1692:
	ld.a	a4,[a15]
.L1693:
	movh.a	a5,#@his(.22.str)
	lea	a5,[a5]@los(.22.str)
	call	IfxStdIf_DPipe_print
.L1694:
	ld.h	d15,[a15]52
.L1065:
	j	.L284
.L285:
	addsc.a	a2,a12,d15,#0
	ld.b	d0,[a2]0
	st.w	[a10],d0
.L1695:
	ld.a	a4,[a15]
.L1696:
	movh.a	a5,#@his(.21.str)
	lea	a5,[a5]@los(.21.str)
	call	IfxStdIf_DPipe_print
.L1697:
	add	d15,#1
.L284:
	ld.h	d0,[a15]54
.L1698:
	jlt	d15,d0,.L285
.L742:
	mov	d8,#0
.L1066:
	j	.L286
.L287:
	ld.a	a4,[a15]
	movh.a	a5,#@his(.20.str)
	lea	a5,[a5]@los(.20.str)
	call	IfxStdIf_DPipe_print
	add	d8,#1
.L286:
	ld.h	d15,[a15]54
	add	d15,#1
	ld.h	d0,[a15]52
	sub	d15,d0
	jlt	d8,d15,.L287
.L283:
	ld.h	d0,[a15]54
.L1067:
	j	.L288
.L289:
	addsc.a	a2,a12,d0,#0
.L1699:
	add	d15,d0,#-1
.L1700:
	addsc.a	a4,a12,d15,#0
	ld.b	d15,[a4]0
.L1701:
	st.b	[a2],d15
.L1702:
	add	d0,#-1
.L288:
	ld.h	d15,[a15]52
.L1703:
	jlt	d15,d0,.L289
.L1704:
	ld.h	d15,[a15]54
.L1705:
	addsc.a	a2,a12,d15,#0
.L1706:
	mov	d15,#0
.L1707:
	st.b	[a2]1,d15
.L1708:
	ld.h	d15,[a15]52
.L1709:
	addsc.a	a2,a12,d15,#0
.L1710:
	mov	d15,#32
.L1711:
	st.b	[a2],d15
.L1712:
	ld.h	d15,[a15]54
.L1713:
	add	d15,#1
	st.h	[a15]54,d15
.L282:
.L281:
	j	.L290
.L274:
	ld.h	d15,[a15]52
.L1714:
	ld.h	d0,[a15]54
.L1715:
	jge	d15,d0,.L291
.L1716:
	ld.bu	d15,[a15]4
.L1717:
	jz.t	d15:3,.L292
.L1718:
	ld.h	d8,[a15]52
.L1068:
	j	.L293
.L294:
	add	d15,d8,#1
.L1719:
	addsc.a	a2,a12,d15,#0
	ld.b	d15,[a2]0
	st.w	[a10],d15
.L1720:
	ld.a	a4,[a15]
.L1721:
	movh.a	a5,#@his(.21.str)
	lea	a5,[a5]@los(.21.str)
	call	IfxStdIf_DPipe_print
.L1722:
	add	d8,#1
.L293:
	ld.h	d15,[a15]54
.L1723:
	add	d15,#-1
.L1724:
	jlt	d8,d15,.L294
.L1725:
	ld.a	a4,[a15]
.L1726:
	movh.a	a5,#@his(.22.str)
	lea	a5,[a5]@los(.22.str)
	call	IfxStdIf_DPipe_print
.L744:
	mov	d8,#0
.L1069:
	j	.L295
.L296:
	ld.a	a4,[a15]
	movh.a	a5,#@his(.20.str)
	lea	a5,[a5]@los(.20.str)
	call	IfxStdIf_DPipe_print
	add	d8,#1
.L295:
	ld.h	d15,[a15]54
	ld.h	d0,[a15]52
	sub	d15,d0
	jlt	d8,d15,.L296
.L292:
	ld.h	d15,[a15]52
.L1727:
	addsc.a	a4,a12,d15,#0
.L1728:
	ld.h	d15,[a15]52
.L1729:
	addsc.a	a2,a12,d15,#0
	lea	a5,[a2]1
.L1730:
	ld.h	d15,[a15]54
.L1731:
	ld.h	d0,[a15]52
.L1732:
	sub	d15,d0
.L1733:
	add	d4,d15,#-1
	call	strncpy
.L1734:
	ld.h	d15,[a15]54
.L1735:
	addsc.a	a2,a12,d15,#0
.L1736:
	mov	d15,#0
.L1737:
	st.b	[a2]-1,d15
.L1738:
	ld.h	d15,[a15]54
.L1739:
	add	d15,#-1
	st.h	[a15]54,d15
.L291:
	j	.L297
.L275:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1295  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1296              break;
	j	.L298
.L299:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1297  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1298          default:
	ld.bu	d15,[a15]4
	jz.t	d15:3,.L300
	ld.h	d15,[a15]52
	addsc.a	a2,a12,d15,#0
	ld.b	d15,[a2]0
	st.w	[a10],d15
	ld.a	a4,[a15]
	movh.a	a5,#@his(.21.str)
	lea	a5,[a5]@los(.21.str)
	call	IfxStdIf_DPipe_print
.L300:
	ld.h	d15,[a15]52
.L1740:
	add	d15,#1
	st.h	[a15]52,d15
.L298:
	ld.h	d15,[a15]52
.L1741:
	ld.h	d0,[a15]54
.L1742:
	jlt	d15,d0,.L299
.L1743:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1299              break;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1300          }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1301      }
	j	.L301

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1302  }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1303  
.L276:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1304  
	j	.L302

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1305  void Ifx_Shell_enable(Ifx_Shell *shell)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1306  {
.L302:
.L301:
.L297:
.L290:
.L280:
.L271:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1307      // Clear the Rx buffer!
.L229:
	ret
.L710:
	
__Ifx_Shell_cmdEscapeProcess_function_end:
	.size	Ifx_Shell_cmdEscapeProcess,__Ifx_Shell_cmdEscapeProcess_function_end-Ifx_Shell_cmdEscapeProcess
.L486:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_enable',code,cluster('Ifx_Shell_enable')
	.sect	'.text.Ifx_Shell.Ifx_Shell_enable'
	.align	2
	
	.global	Ifx_Shell_enable

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1308      IfxStdIf_DPipe_clearRx(shell->io);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1309      // Enable the shell
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1310      shell->control.enabled = 1;
; Function Ifx_Shell_enable
.L358:
Ifx_Shell_enable:	.type	func
	mov.aa	a15,a4
.L1071:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1311  }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1312  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1313  
	ld.a	a2,[a15]
.L534:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     2   * \file IfxStdIf_DPipe.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     3   * \brief Standard interface: Data Pipe
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     4   * \ingroup IfxStdIf
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     7   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     8   * $Date: 2014-02-27 20:08:24 GMT$
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    45   * \defgroup library_srvsw_stdif_dpipe Standard interface: Data Pipe
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    46   * \ingroup library_srvsw_stdif
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    47   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    48   * The standard interafce data pipe (DPipe) abstract the hardware used for data transfer. It provide, after proper initialization an hardware independant way to write
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    49   * and read data to/from as communciation channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    50   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    51   * \par Porting StandardIo to DPipe
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    52   * replace all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    53   *  - StandardIo type with IfxStdIf_DPipe
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    54   *  - StandardIo_print with IfxStdIf_DPipe_print
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    55   * delete StandardIo.c and StandardIo.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    56   * Include "StdIf/IfxStdIf_DPipe.h" instead of "SysSe/Bsp/StandardIo.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    57   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    58   * The following files are already ported: Ifx_Console, Ifx_Shell
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    59   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    60   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    61  #ifndef STDIF_DPIPE_H_
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    62  #define STDIF_DPIPE_H_ 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    63  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    64  #include "IfxStdIf.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    65  //----------------------------------------------------------------------------------------
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    66  #ifndef ENDL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    67  #    define ENDL       "\r\n"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    68  #endif
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    69  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    70  /** \brief Forward declaration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    71  typedef struct IfxStdIf_DPipe_ IfxStdIf_DPipe;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    72  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    73  typedef volatile boolean      *IfxStdIf_DPipe_WriteEvent;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    74  typedef volatile boolean      *IfxStdIf_DPipe_ReadEvent;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    75  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    76  /** \brief Size of the buffer allocated on the stack for the print function */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    77  #define STDIF_DPIPE_MAX_PRINT_SIZE (255)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    78  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    79  /** \brief Write binary data into the \ref IfxStdIf_DPipe.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    80   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    81   * Initially the parameter 'count' specifies count of data to write.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    82   * After execution the data pointed by 'count' specifies the data actually written
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    83   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    84   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    85   * \param data Pointer to the start of data
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    86   * \param count Pointer to the count of data (in bytes).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    87   * \param timeout in system timer ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    88   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    89   * \retval TRUE Returns TRUE if all items could be written
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    90   * \retval FALSE Returns FALSE if not all the items could be written
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    91   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    92  typedef boolean (*IfxStdIf_DPipe_Write)(IfxStdIf_InterfaceDriver stdIf, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    93  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    94  /** \brief Read data from the \ref IfxStdIf_DPipe object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    95   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    96   * Initially the parameter 'count' specifies count of data to read.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    97   * After execution the data pointed by 'count' specifies the data actually read.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    98   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    99   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   100   * \param data Pointer to the start of data
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   101   * \param count Pointer to the count of data (in bytes).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   102   * \param timeout in system timer ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   103   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   104   * \retval TRUE Returns TRUE if all items could be read
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   105   * \retval FALSE Returns FALSE if not all the items could be read
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   106   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   107  typedef boolean (*IfxStdIf_DPipe_Read)(IfxStdIf_InterfaceDriver stdIf, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   108  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   109  /** \brief Returns the number of bytes in the rx buffer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   110   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   111   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   112   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   113   * \return Returns the number of bytes in the rx buffer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   114   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   115  typedef sint32 (*IfxStdIf_DPipe_GetReadCount)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   116  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   117  /** \brief Returns read event object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   118   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   119   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   120   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   121   * \return Returns read event object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   122   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   123  typedef IfxStdIf_DPipe_ReadEvent (*IfxStdIf_DPipe_GetReadEvent)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   124  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   125  /** \brief Returns number of bytes send
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   126   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   127   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   128   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   129   * \return Returns number of bytes send
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   130   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   131  typedef uint32 (*IfxStdIf_DPipe_GetSendCount)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   132  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   133  /** \brief Returns the time stamp of the last transmit data
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   134   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   135   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   136   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   137   * \return Returns the time stamp of the last transmit data
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   138   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   139  typedef Ifx_TickTime (*IfxStdIf_DPipe_GetTxTimeStamp)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   140  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   141  /** \brief Returns the number of free bytes (free space) in the tx buffer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   142   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   143   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   144   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   145   * \return Returns the number of free bytes in the tx buffer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   146   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   147  typedef sint32 (*IfxStdIf_DPipe_GetWriteCount)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   148  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   149  /** \brief Returns write event object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   150   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   151   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   152   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   153   * \return Returns write event object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   154   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   155  typedef IfxStdIf_DPipe_WriteEvent (*IfxStdIf_DPipe_GetWriteEvent)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   156  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   157  /** \brief Indicates if the required number of bytes are available for read in the buffer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   158   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   159   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   160   * \param count Pointer to the count of data (in bytes).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   161   * \param timeout in system timer ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   162   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   163   * \return Returns TRUE if at least count bytes are available for read in the rx buffer,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   164   * if not the Event is armed to be set when the buffer count is bigger or equal to the requested count
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   165   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   166  typedef boolean (*IfxStdIf_DPipe_CanReadCount)(IfxStdIf_InterfaceDriver stdIf, Ifx_SizeT count, Ifx_TickTime timeout);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   167  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   168  /** \brief  Indicates if there is enough free space to write the data in the buffer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   169   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   170   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   171   * \param count Pointer to the count of data (in bytes).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   172   * \param timeout in system timer ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   173   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   174   * \return Returns TRUE if at least count bytes can be written to the tx buffer,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   175   *  if not the Event is armed to be set when the buffer free count is bigger or equal to the requested count
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   176   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   177  typedef boolean (*IfxStdIf_DPipe_CanWriteCount)(IfxStdIf_InterfaceDriver stdIf, Ifx_SizeT count, Ifx_TickTime timeout);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   178  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   179  /** \brief Flush the transmit buffer by transmitting all data
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   180   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   181   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   182   * \param timeout timeout for the flush operation
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   183   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   184   * \return Returns TRUE if the FIFO is empty
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   185   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   186  typedef boolean (*IfxStdIf_DPipe_FlushTx)(IfxStdIf_InterfaceDriver stdIf, Ifx_TickTime timeout);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   187  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   188  /** \brief Clears the RX buffer by removing all data
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   189   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   190   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   191   * \return void
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   192   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   193  typedef void (*IfxStdIf_DPipe_ClearRx)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   194  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   195  /** \brief Clears the TX buffer by removing all data
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   196   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   197   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   198   * \return void
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   199   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   200  typedef void (*IfxStdIf_DPipe_ClearTx)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   201  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   202  /** \brief handler called on reveive event
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   203   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   204   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   205   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   206   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   207   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   208  typedef void (*IfxStdIf_DPipe_OnReceive)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   209  /** \brief handler called on transmit event
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   210   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   211   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   212   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   213   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   214   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   215  typedef void (*IfxStdIf_DPipe_OnTransmit)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   216  /** \brief handler called on error event
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   217   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   218   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   219   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   220   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   221   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   222  typedef void (*IfxStdIf_DPipe_OnError)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   223  /** \brief Reset the sendCount counter
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   224   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   225   * \param stdif Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   226   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   227   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   228   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   229  typedef void (*IfxStdIf_DPipe_ResetSendCount)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   230  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   231  /** \brief Standard interface object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   232   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   233  struct IfxStdIf_DPipe_
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   234  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   235      IfxStdIf_InterfaceDriver driver;              /**< \brief Pointer to the specific driver object */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   236      boolean                  txDisabled;          /**< \brief If disabled is set to TRUE, the output is disabled, else enabled */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   237  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   238      /* Standard interface APIs */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   239      IfxStdIf_DPipe_Write          write;          /**< \brief \see IfxStdIf_DPipe_Write */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   240      IfxStdIf_DPipe_Read           read;           /**< \brief \see IfxStdIf_DPipe_Read */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   241      IfxStdIf_DPipe_GetReadCount   getReadCount;   /**< \brief \see IfxStdIf_DPipe_GetReadCount */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   242      IfxStdIf_DPipe_GetReadEvent   getReadEvent;   /**< \brief \see IfxStdIf_DPipe_GetReadEvent */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   243      IfxStdIf_DPipe_GetWriteCount  getWriteCount;  /**< \brief \see IfxStdIf_DPipe_GetWriteCount */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   244      IfxStdIf_DPipe_GetWriteEvent  getWriteEvent;  /**< \brief \see IfxStdIf_DPipe_GetWriteEvent */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   245      IfxStdIf_DPipe_CanReadCount   canReadCount;   /**< \brief \see IfxStdIf_DPipe_CanReadCount */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   246      IfxStdIf_DPipe_CanWriteCount  canWriteCount;  /**< \brief \see IfxStdIf_DPipe_CanWriteCount */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   247      IfxStdIf_DPipe_FlushTx        flushTx;        /**< \brief \see IfxStdIf_DPipe_FlushTx */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   248      IfxStdIf_DPipe_ClearTx        clearTx;        /**< \brief \see IfxStdIf_DPipe_ClearTx */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   249      IfxStdIf_DPipe_ClearRx        clearRx;        /**< \brief \see IfxStdIf_DPipe_ClearRx */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   250      IfxStdIf_DPipe_OnReceive      onReceive;      /**< \brief \see IfxStdIf_DPipe_OnReceive  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   251      IfxStdIf_DPipe_OnTransmit     onTransmit;     /**< \brief \see IfxStdIf_DPipe_OnTransmit */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   252      IfxStdIf_DPipe_OnError        onError;        /**< \brief \see IfxStdIf_DPipe_OnError    */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   253  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   254      IfxStdIf_DPipe_GetSendCount   getSendCount;   /**< \brief \see IfxStdIf_DPipe_GetSendCount    */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   255      IfxStdIf_DPipe_GetTxTimeStamp getTxTimeStamp; /**< \brief \see IfxStdIf_DPipe_GetTxTimeStamp    */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   256      IfxStdIf_DPipe_ResetSendCount resetSendCount; /**< \brief \see IfxStdIf_DPipe_ResetSendCount    */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   257  };
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   258  /** \addtogroup library_srvsw_stdif_dpipe
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   259   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   260  /** \copydoc IfxStdIf_DPipe_Write
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   261   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   262  IFX_INLINE boolean IfxStdIf_DPipe_write(IfxStdIf_DPipe *stdIf, void *data, Ifx_SizeT *count, Ifx_TickTime timeout)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   263  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   264      return stdIf->write(stdIf->driver, data, count, timeout);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   265  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   266  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   267  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   268  /** \copydoc IfxStdIf_DPipe_Read
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   269   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   270  IFX_INLINE boolean IfxStdIf_DPipe_read(IfxStdIf_DPipe *stdIf, void *data, Ifx_SizeT *count, Ifx_TickTime timeout)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   271  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   272      return stdIf->read(stdIf->driver, data, count, timeout);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   273  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   274  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   275  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   276  /** \copydoc IfxStdIf_DPipe_GetReadCount
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   277   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   278  IFX_INLINE sint32 IfxStdIf_DPipe_getReadCount(IfxStdIf_DPipe *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   279  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   280      return stdIf->getReadCount(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   281  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   282  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   283  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   284  /** \copydoc IfxStdIf_DPipe_GetWriteCount
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   285   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   286  IFX_INLINE sint32 IfxStdIf_DPipe_getWriteCount(IfxStdIf_DPipe *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   287  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   288      return stdIf->getWriteCount(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   289  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   290  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   291  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   292  /** \copydoc IfxStdIf_DPipe_CanReadCount
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   293   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   294  IFX_INLINE boolean IfxStdIf_DPipe_canReadCount(IfxStdIf_DPipe *stdIf, Ifx_SizeT count, Ifx_TickTime timeout)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   295  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   296      return stdIf->canReadCount(stdIf->driver, count, timeout);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   297  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   298  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   299  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   300  /** \copydoc IfxStdIf_DPipe_CanWriteCount
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   301   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   302  IFX_INLINE boolean IfxStdIf_DPipe_canWriteCount(IfxStdIf_DPipe *stdIf, Ifx_SizeT count, Ifx_TickTime timeout)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   303  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   304      return stdIf->canWriteCount(stdIf->driver, count, timeout);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   305  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   306  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   307  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   308  /** \copydoc IfxStdIf_DPipe_GetReadEvent
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   309   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   310  IFX_INLINE IfxStdIf_DPipe_ReadEvent IfxStdIf_DPipe_getReadEvent(IfxStdIf_DPipe *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   311  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   312      return stdIf->getReadEvent(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   313  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   314  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   315  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   316  /** \copydoc IfxStdIf_DPipe_GetWriteEvent
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   317   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   318  IFX_INLINE IfxStdIf_DPipe_WriteEvent IfxStdIf_DPipe_getWriteEvent(IfxStdIf_DPipe *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   319  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   320      return stdIf->getWriteEvent(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   321  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   322  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   323  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   324  /** \copydoc IfxStdIf_DPipe_FlushTx
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   325   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   326  IFX_INLINE boolean IfxStdIf_DPipe_flushTx(IfxStdIf_DPipe *stdIf, Ifx_TickTime timeout)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   327  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   328      return stdIf->flushTx(stdIf->driver, timeout);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   329  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   330  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   331  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   332  /** \copydoc IfxStdIf_DPipe_ClearTx
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   333   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   334  IFX_INLINE void IfxStdIf_DPipe_clearTx(IfxStdIf_DPipe *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   335  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   336      stdIf->clearTx(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   337  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   338  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   339  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   340  /** \copydoc IfxStdIf_DPipe_ClearRx
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   341   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   342  IFX_INLINE void IfxStdIf_DPipe_clearRx(IfxStdIf_DPipe *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   343  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   344      stdIf->clearRx(stdIf->driver);
	ld.a	a5,[a2]48
.L1177:
	ld.a	a4,[a2]
.L1070:
	calli	a5
.L535:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1314  enabled = 1;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1315  }
	ld.bu	d15,[a15]4
.L1178:
	or	d15,#2
	st.b	[a15]4,d15
.L1179:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1316  
	ret
.L531:
	
__Ifx_Shell_enable_function_end:
	.size	Ifx_Shell_enable,__Ifx_Shell_enable_function_end-Ifx_Shell_enable
.L386:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_disable',code,cluster('Ifx_Shell_disable')
	.sect	'.text.Ifx_Shell.Ifx_Shell_disable'
	.align	2
	
	.global	Ifx_Shell_disable

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1317  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1318  void Ifx_Shell_disable(Ifx_Shell *shell)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1319  {
; Function Ifx_Shell_disable
.L360:
Ifx_Shell_disable:	.type	func

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1320      shell->control.enabled = 0;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1321  }
	ld.bu	d15,[a4]4
.L1184:
	insert	d15,d15,#0,#1,#1
	st.b	[a4]4,d15
.L1185:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1322  
	ret
.L539:
	
__Ifx_Shell_disable_function_end:
	.size	Ifx_Shell_disable,__Ifx_Shell_disable_function_end-Ifx_Shell_disable
.L391:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_printSyntax',code,cluster('Ifx_Shell_printSyntax')
	.sect	'.text.Ifx_Shell.Ifx_Shell_printSyntax'
	.align	2
	
	.global	Ifx_Shell_printSyntax

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1323  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1324  void Ifx_Shell_printSyntax(const Ifx_Shell_Syntax *syntaxList, IfxStdIf_DPipe *io)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1325  {
; Function Ifx_Shell_printSyntax
.L362:
Ifx_Shell_printSyntax:	.type	func
	sub.a	a10,#8
.L1072:
	mov.aa	a12,a5
.L1073:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1326      const Ifx_Shell_Syntax *syntax = syntaxList;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1327  
	mov.aa	a15,a4
.L1074:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1328      while (syntax->syntax != NULL_PTR)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1329      {
	j	.L303
.L304:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1330          IfxStdIf_DPipe_print(io, "Syntax     : %s" ENDL, syntax->syntax);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1331          IfxStdIf_DPipe_print(io, "           > %s" ENDL, syntax->description);
	ld.a	a2,[a15]
	st.a	[a10],a2
.L1569:
	movh.a	a5,#@his(.31.str)
	lea	a5,[a5]@los(.31.str)
	mov.aa	a4,a12
.L1075:
	call	IfxStdIf_DPipe_print
.L1076:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1332          syntax = &syntax[1];
	ld.a	a2,[a15]4
	st.a	[a10],a2
.L1570:
	movh.a	a5,#@his(.32.str)
	lea	a5,[a5]@los(.32.str)
	mov.aa	a4,a12
.L1077:
	call	IfxStdIf_DPipe_print
.L1078:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1333      }
	lea	a15,[a15]8
.L303:
	ld.w	d15,[a15]
.L1571:
	jne	d15,#0,.L304
.L1572:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1334  }

	ret
.L688:
	
__Ifx_Shell_printSyntax_function_end:
	.size	Ifx_Shell_printSyntax,__Ifx_Shell_printSyntax_function_end-Ifx_Shell_printSyntax
.L466:
	; End of function
	
	.sdecl	'.bss.Ifx_Shell.Ifx_Shell_cmdBuffer',data,cluster('Ifx_Shell_cmdBuffer')
	.sect	'.bss.Ifx_Shell.Ifx_Shell_cmdBuffer'
	.global	Ifx_Shell_cmdBuffer
Ifx_Shell_cmdBuffer:	.type	object
	.size	Ifx_Shell_cmdBuffer,1280
	.space	1280
	.sdecl	'.rodata.Ifx_Shell..1.str',data,rom
	.sect	'.rodata.Ifx_Shell..1.str'
.1.str:	.type	object
	.size	.1.str,1
	.space	1
	.sdecl	'.rodata.Ifx_Shell..2.str',data,rom
	.sect	'.rodata.Ifx_Shell..2.str'
.2.str:	.type	object
	.size	.2.str,5
	.byte	37,115,37,115
	.space	1
	.sdecl	'.rodata.Ifx_Shell..3.str',data,rom
	.sect	'.rodata.Ifx_Shell..3.str'
.3.str:	.type	object
	.size	.3.str,3
	.byte	47,112
	.space	1
	.sdecl	'.rodata.Ifx_Shell..4.str',data,rom
	.sect	'.rodata.Ifx_Shell..4.str'
.4.str:	.type	object
	.size	.4.str,3
	.byte	47,115
	.space	1
	.sdecl	'.rodata.Ifx_Shell..5.str',data,rom
	.sect	'.rodata.Ifx_Shell..5.str'
.5.str:	.type	object
	.size	.5.str,7
	.byte	32,32,32,32
	.byte	32,32
	.space	1
	.sdecl	'.rodata.Ifx_Shell..6.str',data,rom
	.sect	'.rodata.Ifx_Shell..6.str'
.6.str:	.type	object
	.size	.6.str,13
	.byte	32,32,32,32
	.byte	83,89,78,84
	.byte	65,88,58,32
	.space	1
	.sdecl	'.rodata.Ifx_Shell..7.str',data,rom
	.sect	'.rodata.Ifx_Shell..7.str'
.7.str:	.type	object
	.size	.7.str,9
	.byte	32,32,32,32
	.byte	32,32,32,32
	.space	1
	.sdecl	'.rodata.Ifx_Shell..8.str',data,rom
	.sect	'.rodata.Ifx_Shell..8.str'
.8.str:	.type	object
	.size	.8.str,13
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.space	1
	.sdecl	'.rodata.Ifx_Shell..9.str',data,rom
	.sect	'.rodata.Ifx_Shell..9.str'
.9.str:	.type	object
	.size	.9.str,3
	.byte	13,10
	.space	1
	.sdecl	'.rodata.Ifx_Shell..10.str',data,rom
	.sect	'.rodata.Ifx_Shell..10.str'
.10.str:	.type	object
	.size	.10.str,3
	.byte	32,32
	.space	1
	.sdecl	'.rodata.Ifx_Shell..11.str',data,rom
	.sect	'.rodata.Ifx_Shell..11.str'
.11.str:	.type	object
	.size	.11.str,4
	.byte	37,115,32
	.space	1
	.sdecl	'.rodata.Ifx_Shell..12.str',data,rom
	.sect	'.rodata.Ifx_Shell..12.str'
.12.str:	.type	object
	.size	.12.str,16
	.byte	117,110,107,110
	.byte	111,119,110,32
	.byte	99,111,109,109
	.byte	97,110,100
	.space	1
	.sdecl	'.rodata.Ifx_Shell..13.str',data,rom
	.sect	'.rodata.Ifx_Shell..13.str'
.13.str:	.type	object
	.size	.13.str,2
	.byte	63
	.space	1
	.sdecl	'.rodata.Ifx_Shell..14.str',data,rom
	.sect	'.rodata.Ifx_Shell..14.str'
.14.str:	.type	object
	.size	.14.str,30
	.byte	83,121,110,116
	.byte	97,120,32,32
	.byte	32,32,32,58
	.byte	32,112,114,111
	.byte	116,111,99,111
	.byte	108,32,115,116
	.byte	97,114,116,13
	.byte	10
	.space	1
	.sdecl	'.rodata.Ifx_Shell..15.str',data,rom
	.sect	'.rodata.Ifx_Shell..15.str'
.15.str:	.type	object
	.size	.15.str,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,62
	.byte	32,115,116,97
	.byte	114,116,32,97
	.byte	32,112,114,111
	.byte	116,111,99,111
	.byte	108,13,10
	.space	1
	.sdecl	'.rodata.Ifx_Shell..16.str',data,rom
	.sect	'.rodata.Ifx_Shell..16.str'
.16.str:	.type	object
	.size	.16.str,6
	.byte	115,116,97,114
	.byte	116
	.space	1
	.sdecl	'.rodata.Ifx_Shell..17.str',data,rom
	.sect	'.rodata.Ifx_Shell..17.str'
.17.str:	.type	object
	.size	.17.str,9
	.byte	112,114,111,116
	.byte	111,99,111,108
	.space	1
	.sdecl	'.rodata.Ifx_Shell..18.str',data,rom
	.sect	'.rodata.Ifx_Shell..18.str'
.18.str:	.type	object
	.size	.18.str,5
	.byte	104,101,108,112
	.space	1
	.sdecl	'.rodata.Ifx_Shell..19.str',data,rom
	.sect	'.rodata.Ifx_Shell..19.str'
.19.str:	.type	object
	.size	.19.str,7
	.byte	83,104,101,108
	.byte	108,62
	.space	1
	.sdecl	'.rodata.Ifx_Shell..20.str',data,rom
	.sect	'.rodata.Ifx_Shell..20.str'
.20.str:	.type	object
	.size	.20.str,2
	.byte	8
	.space	1
	.sdecl	'.rodata.Ifx_Shell..21.str',data,rom
	.sect	'.rodata.Ifx_Shell..21.str'
.21.str:	.type	object
	.size	.21.str,3
	.byte	37,99
	.space	1
	.sdecl	'.rodata.Ifx_Shell..22.str',data,rom
	.sect	'.rodata.Ifx_Shell..22.str'
.22.str:	.type	object
	.size	.22.str,2
	.byte	32
	.space	1
	.sdecl	'.rodata.Ifx_Shell..23.str',data,rom
	.sect	'.rodata.Ifx_Shell..23.str'
.23.str:	.type	object
	.size	.23.str,4
	.byte	37,120,32
	.space	1
	.sdecl	'.rodata.Ifx_Shell..24.str',data,rom
	.sect	'.rodata.Ifx_Shell..24.str'
.24.str:	.type	object
	.size	.24.str,6
	.byte	37,108,108,100
	.byte	32
	.space	1
	.sdecl	'.rodata.Ifx_Shell..25.str',data,rom
	.sect	'.rodata.Ifx_Shell..25.str'
.25.str:	.type	object
	.size	.25.str,6
	.byte	37,108,108,120
	.byte	32
	.space	1
	.sdecl	'.rodata.Ifx_Shell..26.str',data,rom
	.sect	'.rodata.Ifx_Shell..26.str'
.26.str:	.type	object
	.size	.26.str,6
	.byte	37,108,108,117
	.byte	32
	.space	1
	.sdecl	'.rodata.Ifx_Shell..27.str',data,rom
	.sect	'.rodata.Ifx_Shell..27.str'
.27.str:	.type	object
	.size	.27.str,5
	.byte	37,108,102,32
	.space	1
	.sdecl	'.rodata.Ifx_Shell..28.str',data,rom
	.sect	'.rodata.Ifx_Shell..28.str'
.28.str:	.type	object
	.size	.28.str,4
	.byte	37,102,32
	.space	1
	.sdecl	'.rodata.Ifx_Shell..29.str',data,rom
	.sect	'.rodata.Ifx_Shell..29.str'
.29.str:	.type	object
	.size	.29.str,28
	.byte	13,10,83,104
	.byte	101,108,108,32
	.byte	99,111,109,109
	.byte	97,110,100,32
	.byte	101,114,114,111
	.byte	114,58,32,37
	.byte	115,13,10
	.space	1
	.sdecl	'.rodata.Ifx_Shell..30.str',data,rom
	.sect	'.rodata.Ifx_Shell..30.str'
.30.str:	.type	object
	.size	.30.str,24
	.byte	13,10,85,110
	.byte	107,110,111,119
	.byte	110,32,99,111
	.byte	109,109,97,110
	.byte	100,58,32,37
	.byte	115,13,10
	.space	1
	.sdecl	'.rodata.Ifx_Shell..31.str',data,rom
	.sect	'.rodata.Ifx_Shell..31.str'
.31.str:	.type	object
	.size	.31.str,18
	.byte	83,121,110,116
	.byte	97,120,32,32
	.byte	32,32,32,58
	.byte	32,37,115,13
	.byte	10
	.space	1
	.sdecl	'.rodata.Ifx_Shell..32.str',data,rom
	.sect	'.rodata.Ifx_Shell..32.str'
.32.str:	.type	object
	.size	.32.str,18
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,62
	.byte	32,37,115,13
	.byte	10
	.space	1
	.calls	'Ifx_Shell_writeResult','__INDIRECT__'
	.calls	'Ifx_Shell_showHelpSingle','IfxStdIf_DPipe_print'
	.calls	'Ifx_Shell_showHelpSingle','Ifx_Shell_matchCommand'
	.calls	'Ifx_Shell_showHelpSingle','strstr'
	.calls	'Ifx_Shell_showHelpSingle','strlen'
	.calls	'Ifx_Shell_showHelpSingle','__INDIRECT__'
	.calls	'Ifx_Shell_showHelpSingleCommand','Ifx_Shell_commandListFind'
	.calls	'Ifx_Shell_showHelpSingleCommand','Ifx_Shell_showHelpSingle'
	.calls	'Ifx_Shell_showHelpSingleCommand','IfxStdIf_DPipe_print'
	.calls	'Ifx_Shell_showHelp','Ifx_Shell_showHelpSingle'
	.calls	'Ifx_Shell_showHelp','Ifx_Shell_showHelpSingleCommand'
	.calls	'Ifx_Shell_protocolStart','Ifx_Shell_matchToken'
	.calls	'Ifx_Shell_protocolStart','IfxStdIf_DPipe_print'
	.calls	'Ifx_Shell_protocolStart','__INDIRECT__'
	.calls	'Ifx_Shell_bbProtocolStart','Ifx_Shell_matchToken'
	.calls	'Ifx_Shell_bbProtocolStart','IfxStdIf_DPipe_print'
	.calls	'Ifx_Shell_bbProtocolStart','Ifx_Shell_protocolStart'
	.calls	'Ifx_Shell_init','memset'
	.calls	'Ifx_Shell_init','strcpy'
	.calls	'Ifx_Shell_init','IfxStdIf_DPipe_print'
	.calls	'Ifx_Shell_process','__INDIRECT__'
	.calls	'Ifx_Shell_process','IfxStdIf_DPipe_print'
	.calls	'Ifx_Shell_process','strncpy'
	.calls	'Ifx_Shell_process','Ifx_Shell_execute'
	.calls	'Ifx_Shell_process','Ifx_Shell_cmdEscapeProcess'
	.calls	'Ifx_Shell_matchToken','Ifx_Shell_parseToken'
	.calls	'Ifx_Shell_matchToken','strcmp'
	.calls	'Ifx_Shell_matchCommand','Ifx_Shell_parseToken'
	.calls	'Ifx_Shell_matchCommand','strcmp'
	.calls	'Ifx_Shell_parseToken','Ifx_Shell_skipWhitespace'
	.calls	'Ifx_Shell_parseAddress','Ifx_Shell_parseToken'
	.calls	'Ifx_Shell_parseAddress','sscanf'
	.calls	'Ifx_Shell_parseSInt32','Ifx_Shell_parseSInt64'
	.calls	'Ifx_Shell_parseUInt32','Ifx_Shell_parseUInt64'
	.calls	'Ifx_Shell_parseSInt64','Ifx_Shell_parseToken'
	.calls	'Ifx_Shell_parseSInt64','sscanf'
	.calls	'Ifx_Shell_parseUInt64','Ifx_Shell_parseToken'
	.calls	'Ifx_Shell_parseUInt64','sscanf'
	.calls	'Ifx_Shell_parseFloat64','Ifx_Shell_parseToken'
	.calls	'Ifx_Shell_parseFloat64','sscanf'
	.calls	'Ifx_Shell_parseFloat32','Ifx_Shell_parseToken'
	.calls	'Ifx_Shell_parseFloat32','sscanf'
	.calls	'Ifx_Shell_commandFind','Ifx_Shell_matchCommand'
	.calls	'Ifx_Shell_commandFind','Ifx_Shell_parseToken'
	.calls	'Ifx_Shell_commandListFind','Ifx_Shell_commandFind'
	.calls	'Ifx_Shell_execute','Ifx_Shell_commandListFind'
	.calls	'Ifx_Shell_execute','Ifx_Shell_showHelp'
	.calls	'Ifx_Shell_execute','__INDIRECT__'
	.calls	'Ifx_Shell_execute','Ifx_Shell_writeResult'
	.calls	'Ifx_Shell_execute','IfxStdIf_DPipe_print'
	.calls	'Ifx_Shell_cmdEscapeProcess','strncpy'
	.calls	'Ifx_Shell_cmdEscapeProcess','IfxStdIf_DPipe_print'
	.calls	'Ifx_Shell_cmdEscapeProcess','strlen'
	.calls	'Ifx_Shell_enable','__INDIRECT__'
	.calls	'Ifx_Shell_printSyntax','IfxStdIf_DPipe_print'
	.calls	'Ifx_Shell_isEndOfLine','',0
	.calls	'Ifx_Shell_writeResult','',8
	.calls	'Ifx_Shell_showHelpSingle','',32
	.calls	'Ifx_Shell_showHelpSingleCommand','',16
	.calls	'Ifx_Shell_showHelp','',0
	.calls	'Ifx_Shell_protocolStart','',8
	.calls	'Ifx_Shell_bbProtocolStart','',8
	.calls	'Ifx_Shell_initConfig','',0
	.calls	'Ifx_Shell_init','',0
	.calls	'Ifx_Shell_process','',8
	.calls	'Ifx_Shell_deinit','',0
	.calls	'Ifx_Shell_skipWhitespace','',0
	.calls	'Ifx_Shell_matchToken','',256
	.calls	'Ifx_Shell_matchCommand','',512
	.calls	'Ifx_Shell_parseToken','',0
	.calls	'Ifx_Shell_parseAddress','',40
	.calls	'Ifx_Shell_parseSInt32','',8
	.calls	'Ifx_Shell_parseUInt32','',8
	.calls	'Ifx_Shell_parseSInt64','',72
	.calls	'Ifx_Shell_parseUInt64','',72
	.calls	'Ifx_Shell_parseFloat64','',72
	.calls	'Ifx_Shell_parseFloat32','',72
	.calls	'Ifx_Shell_commandFind','',272
	.calls	'Ifx_Shell_commandListFind','',8
	.calls	'Ifx_Shell_execute','',16
	.calls	'Ifx_Shell_cmdEscapeProcess','',8
	.calls	'Ifx_Shell_enable','',0
	.calls	'Ifx_Shell_disable','',0
	.extern	IfxStdIf_DPipe_print
	.extern	strcpy
	.extern	strncpy
	.extern	strstr
	.extern	strcmp
	.extern	strlen
	.extern	memset
	.extern	sscanf
	.extern	__scanf_float
	.extern	__scanf_llong
	.extern	__INDIRECT__
	.calls	'Ifx_Shell_printSyntax','',8
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L364:
	.word	4711
	.half	3
	.word	.L365
	.byte	4
.L363:
	.byte	1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L366
.L519:
	.byte	2
	.byte	'unsigned char',0,1,8,3
	.byte	'void',0
.L682:
	.byte	4
	.word	188
	.byte	5
	.byte	'IfxStdIf_InterfaceDriver',0,2,118,15
	.word	194
.L543:
	.byte	2
	.byte	'short int',0,2,5,4
	.word	232
.L597:
	.byte	2
	.byte	'long long int',0,8,5,6
	.word	171
	.byte	1,1,7
	.word	194
	.byte	7
	.word	194
	.byte	7
	.word	245
	.byte	7
	.word	250
	.byte	0,4
	.word	267
	.byte	5
	.byte	'IfxStdIf_DPipe_Write',0,1,92,19
	.word	295
	.byte	5
	.byte	'IfxStdIf_DPipe_Read',0,1,107,19
	.word	295
.L525:
	.byte	2
	.byte	'long int',0,4,5,6
	.word	357
	.byte	1,1,7
	.word	194
	.byte	0,4
	.word	369
	.byte	5
	.byte	'IfxStdIf_DPipe_GetReadCount',0,1,115,18
	.word	382
	.byte	8
	.word	171
	.byte	4
	.word	423
	.byte	6
	.word	428
	.byte	1,1,7
	.word	194
	.byte	0,4
	.word	433
	.byte	5
	.byte	'IfxStdIf_DPipe_GetReadEvent',0,1,123,36
	.word	446
	.byte	5
	.byte	'IfxStdIf_DPipe_GetWriteCount',0,1,147,1,18
	.word	382
	.byte	4
	.word	433
	.byte	5
	.byte	'IfxStdIf_DPipe_GetWriteEvent',0,1,155,1,37
	.word	525
	.byte	6
	.word	171
	.byte	1,1,7
	.word	194
	.byte	7
	.word	232
	.byte	7
	.word	250
	.byte	0,4
	.word	568
	.byte	5
	.byte	'IfxStdIf_DPipe_CanReadCount',0,1,166,1,19
	.word	591
	.byte	5
	.byte	'IfxStdIf_DPipe_CanWriteCount',0,1,177,1,19
	.word	591
	.byte	6
	.word	171
	.byte	1,1,7
	.word	194
	.byte	7
	.word	250
	.byte	0,4
	.word	671
	.byte	5
	.byte	'IfxStdIf_DPipe_FlushTx',0,1,186,1,19
	.word	689
	.byte	9,1,1,7
	.word	194
	.byte	0,4
	.word	726
	.byte	5
	.byte	'IfxStdIf_DPipe_ClearTx',0,1,200,1,16
	.word	735
	.byte	5
	.byte	'IfxStdIf_DPipe_ClearRx',0,1,193,1,16
	.word	735
	.byte	5
	.byte	'IfxStdIf_DPipe_OnReceive',0,1,208,1,16
	.word	735
	.byte	5
	.byte	'IfxStdIf_DPipe_OnTransmit',0,1,215,1,16
	.word	735
	.byte	5
	.byte	'IfxStdIf_DPipe_OnError',0,1,222,1,16
	.word	735
.L517:
	.byte	2
	.byte	'unsigned long int',0,4,7,6
	.word	905
	.byte	1,1,7
	.word	194
	.byte	0,4
	.word	926
	.byte	5
	.byte	'IfxStdIf_DPipe_GetSendCount',0,1,131,1,18
	.word	939
	.byte	6
	.word	250
	.byte	1,1,7
	.word	194
	.byte	0,4
	.word	981
	.byte	5
	.byte	'IfxStdIf_DPipe_GetTxTimeStamp',0,1,139,1,24
	.word	994
	.byte	5
	.byte	'IfxStdIf_DPipe_ResetSendCount',0,1,229,1,16
	.word	735
	.byte	10
	.byte	'IfxStdIf_DPipe_',0,1,233,1,8,76,11
	.byte	'driver',0
	.word	199
	.byte	4,2,35,0,11
	.byte	'txDisabled',0
	.word	171
	.byte	1,2,35,4,11
	.byte	'write',0
	.word	300
	.byte	4,2,35,8,11
	.byte	'read',0
	.word	329
	.byte	4,2,35,12,11
	.byte	'getReadCount',0
	.word	387
	.byte	4,2,35,16,11
	.byte	'getReadEvent',0
	.word	451
	.byte	4,2,35,20,11
	.byte	'getWriteCount',0
	.word	487
	.byte	4,2,35,24,11
	.byte	'getWriteEvent',0
	.word	530
	.byte	4,2,35,28,11
	.byte	'canReadCount',0
	.word	596
	.byte	4,2,35,32,11
	.byte	'canWriteCount',0
	.word	633
	.byte	4,2,35,36,11
	.byte	'flushTx',0
	.word	694
	.byte	4,2,35,40,11
	.byte	'clearTx',0
	.word	740
	.byte	4,2,35,44,11
	.byte	'clearRx',0
	.word	772
	.byte	4,2,35,48,11
	.byte	'onReceive',0
	.word	804
	.byte	4,2,35,52,11
	.byte	'onTransmit',0
	.word	838
	.byte	4,2,35,56,11
	.byte	'onError',0
	.word	873
	.byte	4,2,35,60,11
	.byte	'getSendCount',0
	.word	944
	.byte	4,2,35,64,11
	.byte	'getTxTimeStamp',0
	.word	999
	.byte	4,2,35,68,11
	.byte	'resetSendCount',0
	.word	1038
	.byte	4,2,35,72,0
.L654:
	.byte	4
	.word	1077
	.byte	4
	.word	232
.L669:
	.byte	12
	.byte	'IfxStdIf_DPipe_write',0,3,1,134,2,20
	.word	171
	.byte	1,1
.L671:
	.byte	13
	.byte	'stdIf',0,1,134,2,57
	.word	1477
.L673:
	.byte	13
	.byte	'data',0,1,134,2,70
	.word	194
.L675:
	.byte	13
	.byte	'count',0,1,134,2,87
	.word	1482
.L677:
	.byte	13
	.byte	'timeout',0,1,134,2,107
	.word	250
.L679:
	.byte	14,0,4
	.word	188
	.byte	4
	.word	267
	.byte	4
	.word	267
	.byte	4
	.word	369
	.byte	4
	.word	433
	.byte	4
	.word	369
	.byte	4
	.word	433
	.byte	4
	.word	568
	.byte	4
	.word	568
	.byte	4
	.word	671
	.byte	4
	.word	726
	.byte	4
	.word	726
	.byte	4
	.word	726
	.byte	4
	.word	726
	.byte	4
	.word	726
	.byte	4
	.word	926
	.byte	4
	.word	981
	.byte	4
	.word	726
.L555:
	.byte	12
	.byte	'IfxStdIf_DPipe_read',0,3,1,142,2,20
	.word	171
	.byte	1,1
.L557:
	.byte	13
	.byte	'stdIf',0,1,142,2,56
	.word	1477
.L559:
	.byte	13
	.byte	'data',0,1,142,2,69
	.word	194
.L561:
	.byte	13
	.byte	'count',0,1,142,2,86
	.word	1482
.L563:
	.byte	13
	.byte	'timeout',0,1,142,2,106
	.word	250
.L565:
	.byte	14,0
.L533:
	.byte	15
	.byte	'IfxStdIf_DPipe_clearRx',0,3,1,214,2,17,1,1
.L536:
	.byte	13
	.byte	'stdIf',0,1,214,2,56
	.word	1477
.L538:
	.byte	14,0,16,1,1,4
	.word	1816
	.byte	15
	.byte	'Ifx__jump_and_link',0,3,3,61,17,1,1,13
	.byte	'fun',0,3,61,43
	.word	1819
	.byte	14,0,2
	.byte	'__fract',0,4,128,1,2
	.byte	'float',0,4,4,12
	.byte	'Ifx__float_to_fract',0,3,3,152,2,18
	.word	1864
	.byte	1,1,13
	.byte	'a',0,3,152,2,44
	.word	1876
	.byte	14,0
.L605:
	.byte	2
	.byte	'unsigned long long int',0,8,7,12
	.byte	'__ld64',0,3,4,135,1,19
	.word	1930
	.byte	1,1,13
	.byte	'addr',0,4,135,1,32
	.word	194
	.byte	14,0,15
	.byte	'__st64',0,3,4,143,1,17,1,1,13
	.byte	'addr',0,4,143,1,30
	.word	194
	.byte	13
	.byte	'value',0,4,143,1,43
	.word	1930
	.byte	14,0
.L567:
	.byte	2
	.byte	'int',0,4,5,17
	.word	2037
	.byte	18
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,7
	.word	2044
	.byte	0,2
	.byte	'unsigned int',0,4,7,8
	.word	2086
	.byte	4
	.word	2086
	.byte	19
	.byte	'__cmpswapw',0
	.word	2102
	.byte	1,1,1,1,20
	.byte	'p',0
	.word	2107
	.byte	20
	.byte	'value',0
	.word	2086
	.byte	20
	.byte	'compare',0
	.word	2086
	.byte	0,19
	.byte	'__max',0
	.word	2037
	.byte	1,1,1,1,7
	.word	2037
	.byte	7
	.word	2037
	.byte	0,19
	.byte	'__min',0
	.word	2037
	.byte	1,1,1,1,7
	.word	2037
	.byte	7
	.word	2037
	.byte	0,21
	.word	1487
	.byte	22
	.word	1520
	.byte	22
	.word	1535
	.byte	22
	.word	1549
	.byte	22
	.word	1564
	.byte	14,0,21
	.word	1673
	.byte	22
	.word	1705
	.byte	22
	.word	1720
	.byte	22
	.word	1734
	.byte	22
	.word	1749
	.byte	14,0,21
	.word	1768
	.byte	22
	.word	1799
	.byte	14,0
.L712:
	.byte	2
	.byte	'char',0,1,6,17
	.word	2282
	.byte	4
	.word	2290
.L569:
	.byte	5
	.byte	'pchar',0,5,56,28
	.word	2295
	.byte	23
	.byte	'IfxStdIf_DPipe_print',0,1,140,3,17,1,1,1,1,13
	.byte	'stdIf',0,1,140,3,54
	.word	1477
	.byte	13
	.byte	'format',0,1,140,3,67
	.word	2300
	.byte	24,1,140,3,75,0,17
	.word	2282
	.byte	4
	.word	2381
	.byte	4
	.word	1077
	.byte	6
	.word	171
	.byte	1,1,7
	.word	2295
	.byte	7
	.word	194
	.byte	7
	.word	2391
	.byte	0,4
	.word	2396
	.byte	5
	.byte	'Ifx_Shell_Call',0,6,169,1,19
	.word	2419
	.byte	25,6,172,1,9,16,11
	.byte	'commandLine',0
	.word	2300
	.byte	4,2,35,0,11
	.byte	'help',0
	.word	2300
	.byte	4,2,35,4,11
	.byte	'data',0
	.word	194
	.byte	4,2,35,8,11
	.byte	'call',0
	.word	2424
	.byte	4,2,35,12,0,17
	.word	2448
.L635:
	.byte	4
	.word	2518
.L637:
	.byte	5
	.byte	'Ifx_Shell_CommandListConst',0,6,231,1,34
	.word	2523
	.byte	26,4
	.word	2528
	.byte	27,0,0,6
	.word	171
	.byte	1,1,7
	.word	194
	.byte	7
	.word	2391
	.byte	0,4
	.word	2573
	.byte	9,1,1,7
	.word	194
	.byte	7
	.word	194
	.byte	0,4
	.word	2596
	.byte	25,6,200,1,9,24,11
	.byte	'start',0
	.word	2591
	.byte	4,2,35,0,11
	.byte	'execute',0
	.word	735
	.byte	4,2,35,4,11
	.byte	'onStart',0
	.word	2610
	.byte	4,2,35,8,11
	.byte	'onStartData',0
	.word	194
	.byte	4,2,35,12,11
	.byte	'object',0
	.word	194
	.byte	4,2,35,16,11
	.byte	'started',0
	.word	171
	.byte	1,2,35,20,0,25,6,136,2,9,36,11
	.byte	'standardIo',0
	.word	1477
	.byte	4,2,35,0,11
	.byte	'echo',0
	.word	171
	.byte	1,2,35,4,11
	.byte	'showPrompt',0
	.word	171
	.byte	1,2,35,5,11
	.byte	'sendResultCode',0
	.word	171
	.byte	1,2,35,6,11
	.byte	'commandList',0
	.word	2564
	.byte	4,2,35,8,11
	.byte	'protocol',0
	.word	2615
	.byte	24,2,35,12,0
.L515:
	.byte	4
	.word	2725
	.byte	17
	.word	2448
	.byte	4
	.word	2854
	.byte	4
	.word	2396
	.byte	25,6,211,1,9,1,28
	.byte	'showPrompt',0,1
	.word	171
	.byte	1,7,2,35,0,28
	.byte	'enabled',0,1
	.word	171
	.byte	1,6,2,35,0,28
	.byte	'sendResultCode',0,1
	.word	171
	.byte	1,5,2,35,0,28
	.byte	'echo',0,1
	.word	171
	.byte	1,4,2,35,0,28
	.byte	'echoError',0,1
	.word	171
	.byte	1,3,2,35,0,0
.L551:
	.byte	4
	.word	2282
	.byte	26,40
	.word	2980
	.byte	27,9,0,25,6,181,1,9,12,11
	.byte	'cmdStr',0
	.word	2980
	.byte	4,2,35,0,11
	.byte	'cursor',0
	.word	232
	.byte	2,2,35,4,11
	.byte	'length',0
	.word	232
	.byte	2,2,35,6,11
	.byte	'historyAdd',0
	.word	171
	.byte	1,2,35,8,11
	.byte	'historyItem',0
	.word	232
	.byte	2,2,35,10,0,26,2
	.word	2282
	.byte	27,1,0,26,129,1
	.word	2282
	.byte	27,128,1,0,26,128,1
	.word	2282
	.byte	27,127,0,29,6,191,1,9,1,30
	.byte	'IFX_SHELL_CMD_STATE_NORMAL',0,0,30
	.byte	'IFX_SHELL_CMD_STATE_ESCAPE',0,1,30
	.byte	'IFX_SHELL_CMD_STATE_ESCAPE_BRACKET',0,2,30
	.byte	'IFX_SHELL_CMD_STATE_ESCAPE_BRACKET_NUMBER',0,3,0,25,6,221,1,9,136,2,11
	.byte	'echo',0
	.word	3090
	.byte	2,2,35,0,11
	.byte	'inputbuffer',0
	.word	3099
	.byte	129,1,2,35,2,11
	.byte	'cmdStr',0
	.word	3110
	.byte	128,1,3,35,131,1,11
	.byte	'cmdState',0
	.word	3120
	.byte	1,3,35,131,2,11
	.byte	'escBracketNum',0
	.word	2282
	.byte	1,3,35,132,2,0,25,6,235,1,9,224,2,11
	.byte	'io',0
	.word	1477
	.byte	4,2,35,0,11
	.byte	'control',0
	.word	2869
	.byte	1,2,35,4,11
	.byte	'cmdHistory',0
	.word	2985
	.byte	40,2,35,8,11
	.byte	'cmd',0
	.word	2994
	.byte	12,2,35,48,11
	.byte	'locals',0
	.word	3266
	.byte	136,2,2,35,60,11
	.byte	'commandList',0
	.word	2564
	.byte	4,3,35,196,2,11
	.byte	'protocol',0
	.word	2615
	.byte	24,3,35,200,2,0
.L521:
	.byte	4
	.word	3371
	.byte	17
	.word	2725
.L523:
	.byte	4
	.word	3504
.L527:
	.byte	4
	.word	2980
.L549:
	.byte	4
	.word	2994
.L573:
	.byte	4
	.word	2300
.L577:
	.byte	26,128,2
	.word	2282
	.byte	27,255,1,0
.L588:
	.byte	4
	.word	194
.L590:
	.byte	26,32
	.word	2282
	.byte	27,31,0
.L595:
	.byte	4
	.word	357
.L602:
	.byte	4
	.word	905
.L610:
	.byte	4
	.word	250
.L612:
	.byte	26,64
	.word	2282
	.byte	27,63,0
.L617:
	.byte	4
	.word	1930
.L625:
	.byte	4
	.word	1876
.L631:
	.byte	4
	.word	1876
	.byte	25,6,149,2,9,8,11
	.byte	'syntax',0
	.word	2300
	.byte	4,2,35,0,11
	.byte	'description',0
	.word	2300
	.byte	4,2,35,4,0,17
	.word	3593
.L689:
	.byte	4
	.word	3637
	.byte	21
	.word	1824
	.byte	22
	.word	1850
	.byte	14,0,21
	.word	1885
	.byte	22
	.word	1917
	.byte	14,0,21
	.word	1956
	.byte	22
	.word	1975
	.byte	14,0,21
	.word	1991
	.byte	22
	.word	2006
	.byte	22
	.word	2020
	.byte	14,0,31
	.word	2980
	.byte	31
	.word	2295
	.byte	32
	.byte	'strcpy',0,7,39,17
	.word	2980
	.byte	1,1,1,1,33,7,39,33
	.word	3700
	.byte	33,7,39,56
	.word	3705
	.byte	0,31
	.word	2980
	.byte	31
	.word	2295
	.byte	32
	.byte	'strncpy',0,7,40,17
	.word	2980
	.byte	1,1,1,1,33,7,40,33
	.word	3746
	.byte	33,7,40,56
	.word	3751
	.byte	33,7,40,68
	.word	2086
	.byte	0,32
	.byte	'strstr',0,7,48,17
	.word	2980
	.byte	1,1,1,1,33,7,48,39
	.word	2295
	.byte	33,7,48,53
	.word	2295
	.byte	0,32
	.byte	'strcmp',0,7,50,17
	.word	2037
	.byte	1,1,1,1,33,7,50,39
	.word	2295
	.byte	33,7,50,53
	.word	2295
	.byte	0,32
	.byte	'strlen',0,7,52,17
	.word	2086
	.byte	1,1,1,1,33,7,52,39
	.word	2295
	.byte	0,32
	.byte	'memset',0,7,56,17
	.word	194
	.byte	1,1,1,1,33,7,56,33
	.word	194
	.byte	33,7,56,36
	.word	2037
	.byte	33,7,56,41
	.word	2086
	.byte	0,31
	.word	2295
	.byte	31
	.word	2295
	.byte	32
	.byte	'sscanf',0,8,145,1,16
	.word	2037
	.byte	1,1,1,1,33,8,145,1,38
	.word	3945
	.byte	33,8,145,1,61
	.word	3950
	.byte	24,8,145,1,73,0
.L750:
	.byte	4
	.word	2528
	.byte	34
	.byte	'__INDIRECT__',0,9,1,1,1,1,1,5
	.byte	'__wchar_t',0,9,1,1
	.word	232
	.byte	5
	.byte	'__size_t',0,9,1,1
	.word	2086
	.byte	5
	.byte	'__ptrdiff_t',0,9,1,1
	.word	2037
	.byte	35,1,4
	.word	4079
	.byte	5
	.byte	'__codeptr',0,9,1,1
	.word	4081
	.byte	5
	.byte	'size_t',0,10,24,25
	.word	2086
	.byte	5
	.byte	'boolean',0,11,101,29
	.word	171
	.byte	5
	.byte	'uint8',0,11,105,29
	.word	171
	.byte	2
	.byte	'unsigned short int',0,2,7,5
	.byte	'uint16',0,11,109,29
	.word	4149
	.byte	5
	.byte	'uint32',0,11,113,29
	.word	905
	.byte	5
	.byte	'uint64',0,11,118,29
	.word	1930
	.byte	5
	.byte	'sint16',0,11,126,29
	.word	232
	.byte	5
	.byte	'sint32',0,11,131,1,29
	.word	357
	.byte	5
	.byte	'sint64',0,11,138,1,29
	.word	250
	.byte	5
	.byte	'float32',0,11,167,1,29
	.word	1876
	.byte	5
	.byte	'float64',0,11,172,1,29
	.word	1876
	.byte	5
	.byte	'pvoid',0,5,57,28
	.word	194
	.byte	5
	.byte	'Ifx_TickTime',0,5,79,28
	.word	250
	.byte	5
	.byte	'Ifx_SizeT',0,5,92,16
	.word	232
	.byte	5
	.byte	'IfxStdIf_DPipe',0,1,71,32
	.word	1077
	.byte	8
	.word	171
	.byte	4
	.word	4373
	.byte	5
	.byte	'IfxStdIf_DPipe_WriteEvent',0,1,73,32
	.word	4378
	.byte	5
	.byte	'IfxStdIf_DPipe_ReadEvent',0,1,74,32
	.word	4378
	.byte	5
	.byte	'Ifx_Shell_Command',0,6,178,1,3
	.word	2448
	.byte	5
	.byte	'Ifx_Shell_CmdLine',0,6,188,1,3
	.word	2994
	.byte	5
	.byte	'Ifx_Shell_CmdState',0,6,197,1,3
	.word	3120
	.byte	5
	.byte	'Ifx_Shell_Protocol',0,6,208,1,3
	.word	2615
	.byte	5
	.byte	'Ifx_Shell_Flags',0,6,218,1,3
	.word	2869
	.byte	5
	.byte	'Ifx_Shell_Runtime',0,6,228,1,3
	.word	3266
	.byte	5
	.byte	'Ifx_Shell',0,6,131,2,3
	.word	3371
	.byte	5
	.byte	'Ifx_Shell_Config',0,6,144,2,3
	.word	2725
	.byte	5
	.byte	'Ifx_Shell_Syntax',0,6,153,2,3
	.word	3593
	.byte	5
	.byte	'_iob_flag_t',0,8,82,25
	.word	4149
.L783:
	.byte	26,128,10
	.word	2282
	.byte	27,255,9,0,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L365:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,59,0,3,8,0,0,4,15,0,73,19,0
	.byte	0,5,22,0,3,8,58,15,59,15,57,15,73,19,0,0,6,21,1,73,19,54,15,39,12,0,0,7,5,0,73,19,0,0,8,53,0,73,19,0,0
	.byte	9,21,1,54,15,39,12,0,0,10,19,1,3,8,58,15,59,15,57,15,11,15,0,0,11,13,0,3,8,73,19,11,15,56,9,0,0,12,46
	.byte	1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,13,5,0,3,8,58,15,59,15,57,15,73,19,0,0,14,11,0,0,0
	.byte	15,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,16,21,0,54,15,39,12,0,0,17,38,0,73,19,0,0,18,46,1
	.byte	3,8,54,15,39,12,63,12,60,12,0,0,19,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,20,5,0,3,8,73,19,0,0,21
	.byte	46,1,49,19,0,0,22,5,0,49,19,0,0,23,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,24,24,0,58,15
	.byte	59,15,57,15,0,0,25,19,1,58,15,59,15,57,15,11,15,0,0,26,1,1,11,15,73,19,0,0,27,33,0,47,15,0,0,28,13,0,3
	.byte	8,11,15,73,19,13,15,12,15,56,9,0,0,29,4,1,58,15,59,15,57,15,11,15,0,0,30,40,0,3,8,28,13,0,0,31,55,0,73
	.byte	19,0,0,32,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,33,5,0,58,15,59,15,57,15,73,19
	.byte	0,0,34,46,0,3,8,58,15,59,15,57,15,54,15,63,12,60,12,0,0,35,21,0,54,15,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L366:
	.word	.L1080-.L1079
.L1079:
	.half	3
	.word	.L1082-.L1081
.L1081:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0
	.byte	'D:\\Program Files\\TASKING\\TriCore v6.3r1\\ctc\\include\\',0,0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Service\\CpuGeneric\\StdIf\\IfxStdIf_DPipe.h',0
	.byte	0,0,0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Service\\CpuGeneric\\StdIf\\IfxStdIf.h',0
	.byte	0,0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu_Intrinsics.h',0,1,0,0
	.byte	'Ifx_Types.h',0,1,0,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.h',0,0,0,0
	.byte	'string.h',0,2,0,0
	.byte	'stdio.h',0,2,0,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0
	.byte	'stddef.h',0,2,0,0
	.byte	'Platform_Types.h',0,1,0,0,0
.L1082:
.L1080:
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_initConfig')
	.sect	'.debug_info'
.L367:
	.word	264
	.half	3
	.word	.L368
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L370,.L369
	.byte	2
	.word	.L363
	.byte	3
	.byte	'Ifx_Shell_initConfig',0,1,183,2,6,1,1,1
	.word	.L320,.L514,.L319
	.byte	4
	.byte	'config',0,1,183,2,45
	.word	.L515,.L516
	.byte	5
	.word	.L320,.L514
	.byte	6
	.byte	'i',0,1,185,2,12
	.word	.L517,.L518
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_initConfig')
	.sect	'.debug_abbrev'
.L368:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_initConfig')
	.sect	'.debug_line'
.L369:
	.word	.L1084-.L1083
.L1083:
	.half	3
	.word	.L1086-.L1085
.L1085:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1086:
	.byte	5,12,7,0,5,2
	.word	.L320
	.byte	3,186,2,1,5,48,9
	.half	.L866-.L320
	.byte	1,5,28,9
	.half	.L57-.L866
	.byte	3,2,1,5,34,9
	.half	.L1087-.L57
	.byte	1,5,32,9
	.half	.L1088-.L1087
	.byte	1,5,51,9
	.half	.L1089-.L1088
	.byte	3,126,1,5,48,9
	.half	.L56-.L1089
	.byte	1,5,36,7,9
	.half	.L1090-.L56
	.byte	3,5,1,5,34,9
	.half	.L1091-.L1090
	.byte	1,5,36,9
	.half	.L1092-.L1091
	.byte	3,1,1,5,34,9
	.half	.L1093-.L1092
	.byte	1,5,36,9
	.half	.L1094-.L1093
	.byte	3,1,1,5,34,9
	.half	.L1095-.L1094
	.byte	1,5,36,9
	.half	.L1096-.L1095
	.byte	3,1,1,5,34,9
	.half	.L1097-.L1096
	.byte	1,5,36,9
	.half	.L1098-.L1097
	.byte	3,1,1,5,34,9
	.half	.L1099-.L1098
	.byte	1,5,36,9
	.half	.L1100-.L1099
	.byte	3,1,1,5,34,9
	.half	.L1101-.L1100
	.byte	1,5,36,9
	.half	.L1102-.L1101
	.byte	3,1,1,5,34,9
	.half	.L1103-.L1102
	.byte	1,5,36,9
	.half	.L1104-.L1103
	.byte	3,1,1,5,34,9
	.half	.L1105-.L1104
	.byte	1,5,36,9
	.half	.L1106-.L1105
	.byte	3,1,1,5,34,9
	.half	.L1107-.L1106
	.byte	1,5,36,9
	.half	.L1108-.L1107
	.byte	3,1,1,5,34,9
	.half	.L1109-.L1108
	.byte	1,5,36,9
	.half	.L1110-.L1109
	.byte	3,1,1,5,34,9
	.half	.L1111-.L1110
	.byte	1,5,1,9
	.half	.L1112-.L1111
	.byte	3,1,1,7,9
	.half	.L371-.L1112
	.byte	0,1,1
.L1084:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_initConfig')
	.sect	'.debug_ranges'
.L370:
	.word	-1,.L320,0,.L371-.L320,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_init')
	.sect	'.debug_info'
.L372:
	.word	305
	.half	3
	.word	.L373
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L375,.L374
	.byte	2
	.word	.L363
	.byte	3
	.byte	'Ifx_Shell_init',0,1,206,2,9
	.word	.L519
	.byte	1,1,1
	.word	.L322,.L520,.L321
	.byte	4
	.byte	'shell',0,1,206,2,35
	.word	.L521,.L522
	.byte	4
	.byte	'config',0,1,206,2,66
	.word	.L523,.L524
	.byte	5
	.word	.L322,.L520
	.byte	6
	.byte	'i',0,1,208,2,12
	.word	.L525,.L526
	.byte	6
	.byte	'CmdHistory',0,1,209,2,12
	.word	.L527,.L528
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_init')
	.sect	'.debug_abbrev'
.L373:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_init')
	.sect	'.debug_line'
.L374:
	.word	.L1114-.L1113
.L1113:
	.half	3
	.word	.L1116-.L1115
.L1115:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1116:
	.byte	5,9,7,0,5,2
	.word	.L322
	.byte	3,205,2,1,5,19,9
	.half	.L869-.L322
	.byte	3,6,1,5,22,9
	.half	.L1117-.L869
	.byte	1,5,43,9
	.half	.L867-.L1117
	.byte	3,2,1,5,35,9
	.half	.L1118-.L867
	.byte	1,5,37,9
	.half	.L1119-.L1118
	.byte	3,1,1,5,35,9
	.half	.L1120-.L1119
	.byte	1,5,43,9
	.half	.L1121-.L1120
	.byte	3,2,1,5,35,9
	.half	.L1122-.L1121
	.byte	1,5,19,9
	.half	.L1123-.L1122
	.byte	3,1,1,5,43,9
	.half	.L1124-.L1123
	.byte	1,5,35,9
	.half	.L1125-.L1124
	.byte	1,5,19,9
	.half	.L1126-.L1125
	.byte	3,1,1,5,43,9
	.half	.L1127-.L1126
	.byte	1,5,35,9
	.half	.L1128-.L1127
	.byte	1,5,19,9
	.half	.L1129-.L1128
	.byte	3,1,1,5,43,9
	.half	.L1130-.L1129
	.byte	1,5,35,9
	.half	.L1131-.L1130
	.byte	1,5,19,9
	.half	.L1132-.L1131
	.byte	3,1,1,5,35,9
	.half	.L1133-.L1132
	.byte	1,5,19,9
	.half	.L1134-.L1133
	.byte	3,1,1,5,35,9
	.half	.L1135-.L1134
	.byte	1,5,37,9
	.half	.L1136-.L1135
	.byte	3,2,1,5,35,9
	.half	.L1137-.L1136
	.byte	1,5,37,9
	.half	.L1138-.L1137
	.byte	3,1,1,5,35,9
	.half	.L1139-.L1138
	.byte	1,5,38,9
	.half	.L1140-.L1139
	.byte	3,3,1,5,23,9
	.half	.L1141-.L1140
	.byte	1,5,12,9
	.half	.L1142-.L1141
	.byte	3,3,1,5,33,9
	.half	.L1143-.L1142
	.byte	1,5,36,9
	.half	.L1144-.L1143
	.byte	1,5,29,9
	.half	.L1145-.L1144
	.byte	3,1,1,5,26,9
	.half	.L1146-.L1145
	.byte	1,5,12,9
	.half	.L1147-.L1146
	.byte	3,2,1,5,48,9
	.half	.L870-.L1147
	.byte	1,5,27,9
	.half	.L60-.L870
	.byte	3,2,1,5,52,9
	.half	.L1148-.L60
	.byte	1,5,31,9
	.half	.L1149-.L1148
	.byte	1,5,51,9
	.half	.L1150-.L1149
	.byte	3,126,1,5,48,9
	.half	.L59-.L1150
	.byte	1,5,23,7,9
	.half	.L1151-.L59
	.byte	3,6,1,5,12,9
	.half	.L872-.L1151
	.byte	3,2,1,5,51,9
	.half	.L1152-.L872
	.byte	1,5,19,9
	.half	.L62-.L1152
	.byte	3,2,1,5,39,9
	.half	.L1153-.L62
	.byte	1,5,36,9
	.half	.L1154-.L1153
	.byte	1,5,43,9
	.half	.L1155-.L1154
	.byte	1,5,23,9
	.half	.L1156-.L1155
	.byte	1,5,54,9
	.half	.L1157-.L1156
	.byte	3,126,1,5,21,9
	.half	.L61-.L1157
	.byte	1,5,51,9
	.half	.L1158-.L61
	.byte	1,5,30,7,9
	.half	.L1159-.L1158
	.byte	3,5,1,5,28,9
	.half	.L1160-.L1159
	.byte	1,5,22,9
	.half	.L1161-.L1160
	.byte	3,3,1,5,27,9
	.half	.L1162-.L1161
	.byte	1,5,23,9
	.half	.L871-.L1162
	.byte	3,3,1,5,5,9
	.half	.L1163-.L871
	.byte	1,5,35,7,9
	.half	.L1164-.L1163
	.byte	3,2,1,5,41,9
	.half	.L1165-.L1164
	.byte	1,5,35,9
	.half	.L1166-.L1165
	.byte	3,1,1,5,41,9
	.half	.L1167-.L1166
	.byte	1,5,12,9
	.half	.L63-.L1167
	.byte	3,3,1,5,5,9
	.half	.L1168-.L63
	.byte	1,5,1,9
	.half	.L64-.L1168
	.byte	3,1,1,7,9
	.half	.L376-.L64
	.byte	0,1,1
.L1114:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_init')
	.sect	'.debug_ranges'
.L375:
	.word	-1,.L322,0,.L376-.L322,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_deinit')
	.sect	'.debug_info'
.L377:
	.word	243
	.half	3
	.word	.L378
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L380,.L379
	.byte	2
	.word	.L363
	.byte	3
	.byte	'Ifx_Shell_deinit',0,1,139,5,6,1,1,1
	.word	.L326,.L529,.L325
	.byte	4
	.byte	'shell',0,1,139,5,34
	.word	.L521,.L530
	.byte	5
	.word	.L326,.L529
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_deinit')
	.sect	'.debug_abbrev'
.L378:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_deinit')
	.sect	'.debug_line'
.L379:
	.word	.L1170-.L1169
.L1169:
	.half	3
	.word	.L1172-.L1171
.L1171:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1172:
	.byte	5,1,7,0,5,2
	.word	.L326
	.byte	3,142,5,1,7,9
	.half	.L381-.L326
	.byte	0,1,1
.L1170:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_deinit')
	.sect	'.debug_ranges'
.L380:
	.word	-1,.L326,0,.L381-.L326,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_enable')
	.sect	'.debug_info'
.L382:
	.word	280
	.half	3
	.word	.L383
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L385,.L384
	.byte	2
	.word	.L363
	.byte	3
	.byte	'Ifx_Shell_enable',0,1,158,10,6,1,1,1
	.word	.L358,.L531,.L357
	.byte	4
	.byte	'shell',0,1,158,10,34
	.word	.L521,.L532
	.byte	5
	.word	.L358,.L531
	.byte	6
	.word	.L533,.L534,.L535
	.byte	7
	.word	.L536,.L537
	.byte	8
	.word	.L538,.L534,.L535
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_enable')
	.sect	'.debug_abbrev'
.L383:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_enable')
	.sect	'.debug_line'
.L384:
	.word	.L1174-.L1173
.L1173:
	.half	3
	.word	.L1176-.L1175
.L1175:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Service\\CpuGeneric\\StdIf\\IfxStdIf_DPipe.h',0
	.byte	0,0,0,0
.L1176:
	.byte	5,6,7,0,5,2
	.word	.L358
	.byte	3,157,10,1,5,33,9
	.half	.L1071-.L358
	.byte	3,3,1,4,2,5,10,9
	.half	.L534-.L1071
	.byte	3,183,120,1,5,25,9
	.half	.L1177-.L534
	.byte	1,4,1,5,19,9
	.half	.L535-.L1177
	.byte	3,203,7,1,5,28,9
	.half	.L1178-.L535
	.byte	1,5,1,9
	.half	.L1179-.L1178
	.byte	3,1,1,7,9
	.half	.L386-.L1179
	.byte	0,1,1
.L1174:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_enable')
	.sect	'.debug_ranges'
.L385:
	.word	-1,.L358,0,.L386-.L358,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_disable')
	.sect	'.debug_info'
.L387:
	.word	244
	.half	3
	.word	.L388
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L390,.L389
	.byte	2
	.word	.L363
	.byte	3
	.byte	'Ifx_Shell_disable',0,1,167,10,6,1,1,1
	.word	.L360,.L539,.L359
	.byte	4
	.byte	'shell',0,1,167,10,35
	.word	.L521,.L540
	.byte	5
	.word	.L360,.L539
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_disable')
	.sect	'.debug_abbrev'
.L388:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_disable')
	.sect	'.debug_line'
.L389:
	.word	.L1181-.L1180
.L1180:
	.half	3
	.word	.L1183-.L1182
.L1182:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1183:
	.byte	5,19,7,0,5,2
	.word	.L360
	.byte	3,168,10,1,5,28,9
	.half	.L1184-.L360
	.byte	1,5,1,9
	.half	.L1185-.L1184
	.byte	3,1,1,7,9
	.half	.L391-.L1185
	.byte	0,1,1
.L1181:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_disable')
	.sect	'.debug_ranges'
.L390:
	.word	-1,.L360,0,.L391-.L360,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_process')
	.sect	'.debug_info'
.L392:
	.word	520
	.half	3
	.word	.L393
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L395,.L394
	.byte	2
	.word	.L363
	.byte	3
	.byte	'Ifx_Shell_process',0,1,135,3,6,1,1,1
	.word	.L324,.L541,.L323
	.byte	4
	.byte	'shell',0,1,135,3,35
	.word	.L521,.L542
	.byte	5
	.word	.L324,.L541
	.byte	6
	.byte	'i',0,1,137,3,24
	.word	.L543,.L544
	.byte	6
	.byte	'j',0,1,137,3,27
	.word	.L543,.L545
	.byte	6
	.byte	'count',0,1,138,3,24
	.word	.L543,.L546
	.byte	6
	.byte	'readCount',0,1,139,3,24
	.word	.L543,.L547
	.byte	6
	.byte	'NormalKeyPress',0,1,140,3,24
	.word	.L519,.L548
	.byte	6
	.byte	'Cmd',0,1,142,3,24
	.word	.L549,.L550
	.byte	6
	.byte	'inputbuffer',0,1,143,3,24
	.word	.L551,.L552
	.byte	6
	.byte	'cmdStr',0,1,144,3,24
	.word	.L551,.L553
	.byte	6
	.byte	'CmdHistory',0,1,145,3,24
	.word	.L527,.L554
	.byte	7
	.word	.L555,.L556,.L70
	.byte	8
	.word	.L557,.L558
	.byte	8
	.word	.L559,.L560
	.byte	8
	.word	.L561,.L562
	.byte	8
	.word	.L563,.L564
	.byte	9
	.word	.L565,.L556,.L70
	.byte	0,5
	.word	.L566,.L96
	.byte	6
	.byte	'ii',0,1,253,3,25
	.word	.L567,.L568
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_process')
	.sect	'.debug_abbrev'
.L393:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_process')
	.sect	'.debug_line'
.L394:
	.word	.L1187-.L1186
.L1186:
	.half	3
	.word	.L1189-.L1188
.L1188:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Service\\CpuGeneric\\StdIf\\IfxStdIf_DPipe.h',0
	.byte	0,0,0,0
.L1189:
	.byte	5,6,7,0,5,2
	.word	.L324
	.byte	3,134,3,1,5,51,9
	.half	.L875-.L324
	.byte	3,8,1,9
	.half	.L876-.L875
	.byte	3,1,1,5,43,9
	.half	.L878-.L876
	.byte	3,1,1,5,23,9
	.half	.L879-.L878
	.byte	3,2,1,5,5,9
	.half	.L1190-.L879
	.byte	1,5,9,7,9
	.half	.L1191-.L1190
	.byte	3,2,1,5,25,9
	.half	.L65-.L1191
	.byte	3,3,1,5,9,9
	.half	.L1192-.L65
	.byte	1,5,65,7,9
	.half	.L1193-.L1192
	.byte	1,5,74,9
	.half	.L1194-.L1193
	.byte	1,5,24,7,9
	.half	.L1195-.L1194
	.byte	3,2,1,5,48,9
	.half	.L1196-.L1195
	.byte	1,5,56,9
	.half	.L877-.L1196
	.byte	1,5,19,9
	.half	.L67-.L877
	.byte	3,19,1,5,49,9
	.half	.L882-.L67
	.byte	3,1,1,5,19,9
	.half	.L1197-.L882
	.byte	1,5,34,9
	.half	.L1198-.L1197
	.byte	3,1,1,5,52,9
	.half	.L1199-.L1198
	.byte	1,5,62,9
	.half	.L1200-.L1199
	.byte	1,5,73,9
	.half	.L1201-.L1200
	.byte	1,4,2,5,17,9
	.half	.L556-.L1201
	.byte	3,225,126,1,5,29,9
	.half	.L1202-.L556
	.byte	1,5,52,9
	.half	.L881-.L1202
	.byte	1,5,5,9
	.half	.L880-.L881
	.byte	1,4,1,5,21,9
	.half	.L70-.L880
	.byte	3,160,1,1,5,18,9
	.half	.L1203-.L70
	.byte	1,5,16,9
	.half	.L1204-.L1203
	.byte	3,2,1,5,30,9
	.half	.L883-.L1204
	.byte	1,5,28,9
	.half	.L72-.L883
	.byte	3,3,1,5,32,9
	.half	.L885-.L72
	.byte	3,3,1,5,18,9
	.half	.L1205-.L885
	.byte	3,51,1,9
	.half	.L1206-.L1205
	.byte	3,80,1,9
	.half	.L1207-.L1206
	.byte	3,1,1,9
	.half	.L1208-.L1207
	.byte	3,212,0,1,9
	.half	.L1209-.L1208
	.byte	3,41,1,9
	.half	.L1210-.L1209
	.byte	3,1,1,9
	.half	.L1211-.L1210
	.byte	3,1,1,9
	.half	.L1212-.L1211
	.byte	3,1,1,9
	.half	.L1213-.L1212
	.byte	3,104,1,9
	.half	.L1214-.L1213
	.byte	3,1,1,9
	.half	.L1215-.L1214
	.byte	3,1,1,9
	.half	.L1216-.L1215
	.byte	3,1,1,9
	.half	.L1217-.L1216
	.byte	3,110,1,9
	.half	.L1218-.L1217
	.byte	3,55,1,5,17,9
	.half	.L75-.L1218
	.byte	3,242,126,1,5,24,9
	.half	.L88-.L75
	.byte	3,4,1,5,35,9
	.half	.L1219-.L88
	.byte	1,5,17,9
	.half	.L1220-.L1219
	.byte	1,5,31,7,9
	.half	.L1221-.L1220
	.byte	3,2,1,5,27,9
	.half	.L1222-.L1221
	.byte	1,5,43,9
	.half	.L1223-.L1222
	.byte	1,5,41,9
	.half	.L1224-.L1223
	.byte	1,5,28,9
	.half	.L1225-.L1224
	.byte	3,2,1,5,21,9
	.half	.L1226-.L1225
	.byte	1,5,32,7,9
	.half	.L1227-.L1226
	.byte	3,3,1,5,75,9
	.half	.L886-.L1227
	.byte	1,5,47,9
	.half	.L92-.L886
	.byte	3,3,1,5,65,9
	.half	.L1228-.L92
	.byte	1,5,62,9
	.half	.L1229-.L1228
	.byte	1,5,71,9
	.half	.L1230-.L1229
	.byte	1,5,78,9
	.half	.L1231-.L1230
	.byte	3,125,1,5,75,9
	.half	.L91-.L1231
	.byte	1,5,43,7,9
	.half	.L1232-.L91
	.byte	3,7,1,5,56,9
	.half	.L1233-.L1232
	.byte	1,5,46,9
	.half	.L90-.L1233
	.byte	3,4,1,5,35,9
	.half	.L89-.L90
	.byte	3,4,1,5,17,9
	.half	.L1234-.L89
	.byte	1,5,47,7,9
	.half	.L1235-.L1234
	.byte	3,2,1,5,53,9
	.half	.L1236-.L1235
	.byte	1,5,31,9
	.half	.L93-.L1236
	.byte	3,4,1,5,29,9
	.half	.L1237-.L93
	.byte	1,5,31,9
	.half	.L1238-.L1237
	.byte	3,3,1,5,29,9
	.half	.L1239-.L1238
	.byte	1,5,35,9
	.half	.L1240-.L1239
	.byte	3,3,1,5,33,9
	.half	.L1241-.L1240
	.byte	1,5,36,9
	.half	.L1242-.L1241
	.byte	3,3,1,5,34,9
	.half	.L1243-.L1242
	.byte	1,5,17,9
	.half	.L1244-.L1243
	.byte	3,1,1,5,24,9
	.half	.L73-.L1244
	.byte	3,5,1,5,17,9
	.half	.L1245-.L73
	.byte	1,5,39,7,9
	.half	.L1246-.L1245
	.byte	3,3,1,5,21,9
	.half	.L1247-.L1246
	.byte	1,5,51,7,9
	.half	.L1248-.L1247
	.byte	3,3,1,5,57,9
	.half	.L1249-.L1248
	.byte	1,5,37,9
	.half	.L1250-.L1249
	.byte	3,3,1,5,62,9
	.half	.L890-.L1250
	.byte	1,5,73,9
	.half	.L98-.L890
	.byte	3,2,1,5,55,9
	.half	.L1251-.L98
	.byte	1,5,61,9
	.half	.L1252-.L1251
	.byte	1,5,65,9
	.half	.L1253-.L1252
	.byte	3,126,1,5,54,9
	.half	.L97-.L1253
	.byte	1,5,62,9
	.half	.L1254-.L97
	.byte	1,5,51,7,9
	.half	.L1255-.L1254
	.byte	3,6,1,5,57,9
	.half	.L1256-.L1255
	.byte	1,5,25,9
	.half	.L566-.L1256
	.byte	3,1,1,5,40,9
	.half	.L96-.L566
	.byte	3,4,1,5,36,9
	.half	.L1257-.L96
	.byte	1,5,66,9
	.half	.L1258-.L1257
	.byte	1,5,62,9
	.half	.L1259-.L1258
	.byte	1,5,80,9
	.half	.L1260-.L1259
	.byte	1,5,94,9
	.half	.L1261-.L1260
	.byte	1,5,89,9
	.half	.L1262-.L1261
	.byte	1,5,31,9
	.half	.L1263-.L1262
	.byte	3,3,1,5,27,9
	.half	.L1264-.L1263
	.byte	1,5,47,9
	.half	.L1265-.L1264
	.byte	1,5,45,9
	.half	.L1266-.L1265
	.byte	1,5,24,9
	.half	.L1267-.L1266
	.byte	3,2,1,5,32,9
	.half	.L1268-.L1267
	.byte	1,5,24,9
	.half	.L1269-.L1268
	.byte	3,1,1,5,32,9
	.half	.L1270-.L1269
	.byte	1,5,39,9
	.half	.L1271-.L1270
	.byte	3,3,1,5,37,9
	.half	.L1272-.L1271
	.byte	1,5,17,9
	.half	.L95-.L1272
	.byte	3,3,1,5,42,9
	.half	.L76-.L95
	.byte	3,4,1,5,40,9
	.half	.L1273-.L76
	.byte	1,5,17,9
	.half	.L1274-.L1273
	.byte	3,1,1,5,34,9
	.half	.L85-.L1274
	.byte	3,5,1,5,17,9
	.half	.L1275-.L85
	.byte	1,5,46,7,9
	.half	.L1276-.L1275
	.byte	3,3,1,5,44,9
	.half	.L1277-.L1276
	.byte	1,5,80,9
	.half	.L1278-.L1277
	.byte	1,5,36,9
	.half	.L103-.L1278
	.byte	3,4,1,5,17,9
	.half	.L104-.L103
	.byte	3,3,1,5,34,9
	.half	.L84-.L104
	.byte	3,8,1,5,17,9
	.half	.L1279-.L84
	.byte	1,5,66,7,9
	.half	.L1280-.L1279
	.byte	3,3,1,5,71,9
	.half	.L1281-.L1280
	.byte	1,5,46,9
	.half	.L894-.L1281
	.byte	3,3,1,5,44,9
	.half	.L1282-.L894
	.byte	1,5,73,9
	.half	.L1283-.L1282
	.byte	3,125,1,5,36,9
	.half	.L106-.L1283
	.byte	3,7,1,5,17,9
	.half	.L107-.L106
	.byte	3,3,1,5,34,9
	.half	.L80-.L107
	.byte	3,8,1,5,17,9
	.half	.L1284-.L80
	.byte	1,5,62,7,9
	.half	.L1285-.L1284
	.byte	3,3,1,5,49,9
	.half	.L1286-.L1285
	.byte	1,5,51,9
	.half	.L1287-.L1286
	.byte	3,1,1,5,49,9
	.half	.L1288-.L1287
	.byte	1,5,65,9
	.half	.L1289-.L1288
	.byte	3,127,1,5,36,9
	.half	.L109-.L1289
	.byte	3,5,1,5,17,9
	.half	.L110-.L109
	.byte	3,3,1,5,34,9
	.half	.L86-.L110
	.byte	3,5,1,5,17,9
	.half	.L1290-.L86
	.byte	1,5,68,7,9
	.half	.L1291-.L1290
	.byte	3,3,1,5,84,9
	.half	.L1292-.L1291
	.byte	1,5,46,9
	.half	.L896-.L1292
	.byte	3,3,1,5,44,9
	.half	.L1293-.L896
	.byte	1,5,88,9
	.half	.L1294-.L1293
	.byte	3,125,1,5,36,9
	.half	.L112-.L1294
	.byte	3,7,1,5,17,9
	.half	.L113-.L112
	.byte	3,3,1,5,32,9
	.half	.L87-.L113
	.byte	3,4,1,5,17,9
	.half	.L1295-.L87
	.byte	3,1,1,5,13,9
	.half	.L94-.L1295
	.byte	3,7,1,5,42,7,9
	.half	.L1296-.L94
	.byte	3,3,1,5,40,9
	.half	.L1297-.L1296
	.byte	1,5,24,9
	.half	.L1298-.L1297
	.byte	3,3,1,5,64,9
	.half	.L1299-.L1298
	.byte	1,5,17,9
	.half	.L1300-.L1299
	.byte	1,5,39,7,9
	.half	.L1301-.L1300
	.byte	3,3,1,5,37,9
	.half	.L1302-.L1301
	.byte	1,5,31,9
	.half	.L1303-.L1302
	.byte	3,3,1,5,27,9
	.half	.L1304-.L1303
	.byte	1,5,54,9
	.half	.L1305-.L1304
	.byte	1,5,41,9
	.half	.L1306-.L1305
	.byte	1,5,24,9
	.half	.L1307-.L1306
	.byte	3,1,1,5,32,9
	.half	.L1308-.L1307
	.byte	1,5,44,9
	.half	.L1309-.L1308
	.byte	3,3,1,5,57,9
	.half	.L1310-.L1309
	.byte	1,5,40,9
	.half	.L1311-.L1310
	.byte	1,5,33,9
	.half	.L1312-.L1311
	.byte	1,5,39,9
	.half	.L1313-.L1312
	.byte	3,2,1,5,21,9
	.half	.L1314-.L1313
	.byte	1,5,60,7,9
	.half	.L1315-.L1314
	.byte	3,3,1,5,47,9
	.half	.L1316-.L1315
	.byte	1,5,51,9
	.half	.L1317-.L1316
	.byte	3,1,1,5,62,9
	.half	.L1318-.L1317
	.byte	1,5,70,9
	.half	.L1319-.L1318
	.byte	1,5,21,9
	.half	.L118-.L1319
	.byte	3,124,1,5,39,9
	.half	.L117-.L118
	.byte	3,10,1,5,37,9
	.half	.L1320-.L117
	.byte	1,5,33,9
	.half	.L116-.L1320
	.byte	3,175,126,1,5,30,9
	.half	.L71-.L116
	.byte	1,5,1,7,9
	.half	.L66-.L71
	.byte	3,214,1,1,7,9
	.half	.L396-.L66
	.byte	0,1,1
.L1187:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_process')
	.sect	'.debug_ranges'
.L395:
	.word	-1,.L324,0,.L396-.L324,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_skipWhitespace')
	.sect	'.debug_info'
.L397:
	.word	254
	.half	3
	.word	.L398
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L400,.L399
	.byte	2
	.word	.L363
	.byte	3
	.byte	'Ifx_Shell_skipWhitespace',0,1,146,5,7
	.word	.L569
	.byte	1,1,1
	.word	.L328,.L570,.L327
	.byte	4
	.byte	'args',0,1,146,5,38
	.word	.L569,.L571
	.byte	5
	.word	.L328,.L570
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_skipWhitespace')
	.sect	'.debug_abbrev'
.L398:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_skipWhitespace')
	.sect	'.debug_line'
.L399:
	.word	.L1322-.L1321
.L1321:
	.half	3
	.word	.L1324-.L1323
.L1323:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1324:
	.byte	5,5,7,0,5,2
	.word	.L328
	.byte	3,147,5,1,5,66,7,9
	.half	.L1325-.L328
	.byte	3,2,1,5,25,9
	.half	.L123-.L1325
	.byte	3,2,1,5,17,9
	.half	.L121-.L123
	.byte	3,126,1,5,16,9
	.half	.L1326-.L121
	.byte	1,5,51,7,9
	.half	.L1327-.L1326
	.byte	1,5,5,9
	.half	.L120-.L1327
	.byte	3,6,1,5,1,9
	.half	.L125-.L120
	.byte	3,1,1,7,9
	.half	.L401-.L125
	.byte	0,1,1
.L1322:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_skipWhitespace')
	.sect	'.debug_ranges'
.L400:
	.word	-1,.L328,0,.L401-.L328,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_matchToken')
	.sect	'.debug_info'
.L402:
	.word	341
	.half	3
	.word	.L403
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L405,.L404
	.byte	2
	.word	.L363
	.byte	3
	.byte	'Ifx_Shell_matchToken',0,1,160,5,9
	.word	.L519
	.byte	1,1,1
	.word	.L330,.L572,.L329
	.byte	4
	.byte	'argsPtr',0,1,160,5,37
	.word	.L573,.L574
	.byte	4
	.byte	'token',0,1,160,5,52
	.word	.L569,.L575
	.byte	5
	.word	.L330,.L572
	.byte	6
	.byte	'savedArguments',0,1,162,5,13
	.word	.L569,.L576
	.byte	6
	.byte	'buffer',0,1,163,5,13
	.word	.L577,.L578
	.byte	6
	.byte	'result',0,1,164,5,13
	.word	.L519,.L579
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_matchToken')
	.sect	'.debug_abbrev'
.L403:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_matchToken')
	.sect	'.debug_line'
.L404:
	.word	.L1329-.L1328
.L1328:
	.half	3
	.word	.L1331-.L1330
.L1330:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1331:
	.byte	5,9,7,0,5,2
	.word	.L330
	.byte	3,159,5,1,5,30,9
	.half	.L902-.L330
	.byte	3,2,1,5,28,9
	.half	.L903-.L902
	.byte	3,2,1,5,39,9
	.half	.L904-.L903
	.byte	3,2,1,5,47,9
	.half	.L900-.L904
	.byte	1,5,5,9
	.half	.L899-.L900
	.byte	1,5,27,7,9
	.half	.L1332-.L899
	.byte	3,2,1,5,9,9
	.half	.L906-.L1332
	.byte	1,5,20,7,9
	.half	.L1333-.L906
	.byte	3,2,1,5,5,9
	.half	.L126-.L1333
	.byte	3,4,1,5,18,7,9
	.half	.L1334-.L126
	.byte	3,3,1,5,5,9
	.half	.L128-.L1334
	.byte	3,3,1,5,1,9
	.half	.L129-.L128
	.byte	3,1,1,7,9
	.half	.L406-.L129
	.byte	0,1,1
.L1329:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_matchToken')
	.sect	'.debug_ranges'
.L405:
	.word	-1,.L330,0,.L406-.L330,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_parseToken')
	.sect	'.debug_info'
.L407:
	.word	343
	.half	3
	.word	.L408
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L410,.L409
	.byte	2
	.word	.L363
	.byte	3
	.byte	'Ifx_Shell_parseToken',0,1,212,5,9
	.word	.L519
	.byte	1,1,1
	.word	.L334,.L580,.L333
	.byte	4
	.byte	'argsPtr',0,1,212,5,37
	.word	.L573,.L581
	.byte	4
	.byte	'tokenBuffer',0,1,212,5,52
	.word	.L551,.L582
	.byte	4
	.byte	'bufferLength',0,1,212,5,69
	.word	.L567,.L583
	.byte	5
	.word	.L334,.L580
	.byte	6
	.byte	'mindex',0,1,214,5,11
	.word	.L567,.L584
	.byte	6
	.byte	'args',0,1,215,5,11
	.word	.L569,.L585
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_parseToken')
	.sect	'.debug_abbrev'
.L408:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_parseToken')
	.sect	'.debug_line'
.L409:
	.word	.L1336-.L1335
.L1335:
	.half	3
	.word	.L1338-.L1337
.L1337:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1338:
	.byte	5,9,7,0,5,2
	.word	.L334
	.byte	3,211,5,1,5,18,9
	.half	.L924-.L334
	.byte	3,2,1,5,45,9
	.half	.L926-.L924
	.byte	3,1,1,5,22,9
	.half	.L920-.L926
	.byte	3,2,1,5,20,9
	.half	.L1339-.L920
	.byte	1,5,5,9
	.half	.L1340-.L1339
	.byte	3,2,1,5,16,7,9
	.half	.L1341-.L1340
	.byte	3,2,1,5,9,9
	.half	.L1342-.L1341
	.byte	1,9
	.half	.L135-.L1342
	.byte	3,3,1,5,18,9
	.half	.L1343-.L135
	.byte	1,5,5,9
	.half	.L1344-.L1343
	.byte	1,5,21,7,9
	.half	.L1345-.L1344
	.byte	3,2,1,5,65,9
	.half	.L1346-.L1345
	.byte	3,2,1,5,13,9
	.half	.L139-.L1346
	.byte	3,2,1,5,28,7,9
	.half	.L1347-.L139
	.byte	3,2,1,5,39,9
	.half	.L1348-.L1347
	.byte	1,5,37,9
	.half	.L1349-.L1348
	.byte	1,5,23,9
	.half	.L1350-.L1349
	.byte	3,1,1,5,25,9
	.half	.L140-.L1350
	.byte	3,3,1,5,17,9
	.half	.L138-.L140
	.byte	3,120,1,5,16,9
	.half	.L1351-.L138
	.byte	1,5,51,7,9
	.half	.L1352-.L1351
	.byte	1,5,60,9
	.half	.L1353-.L1352
	.byte	1,5,57,9
	.half	.L1354-.L1353
	.byte	1,5,13,7,9
	.half	.L141-.L1354
	.byte	3,12,1,5,22,9
	.half	.L1355-.L141
	.byte	1,5,9,9
	.half	.L1356-.L1355
	.byte	1,5,20,7,9
	.half	.L1357-.L1356
	.byte	3,2,1,5,13,9
	.half	.L1358-.L1357
	.byte	1,5,21,9
	.half	.L142-.L1358
	.byte	3,3,1,5,24,9
	.half	.L1359-.L142
	.byte	1,5,13,9
	.half	.L137-.L1359
	.byte	3,5,1,5,9,9
	.half	.L1360-.L137
	.byte	1,5,20,7,9
	.half	.L1361-.L1360
	.byte	3,2,1,5,13,9
	.half	.L1362-.L1361
	.byte	1,5,67,9
	.half	.L145-.L1362
	.byte	3,3,1,5,13,9
	.half	.L148-.L145
	.byte	3,2,1,5,28,7,9
	.half	.L1363-.L148
	.byte	3,2,1,5,39,9
	.half	.L1364-.L1363
	.byte	1,5,37,9
	.half	.L1365-.L1364
	.byte	1,5,23,9
	.half	.L1366-.L1365
	.byte	3,1,1,5,25,9
	.half	.L149-.L1366
	.byte	3,3,1,5,17,9
	.half	.L147-.L149
	.byte	3,120,1,5,16,9
	.half	.L1367-.L147
	.byte	1,5,52,7,9
	.half	.L1368-.L1367
	.byte	1,5,5,9
	.half	.L144-.L1368
	.byte	3,13,1,5,48,7,9
	.half	.L1369-.L144
	.byte	3,2,1,5,26,9
	.half	.L925-.L1369
	.byte	1,5,20,9
	.half	.L1370-.L925
	.byte	1,5,56,9
	.half	.L923-.L1370
	.byte	1,5,54,9
	.half	.L1371-.L923
	.byte	1,5,41,9
	.half	.L152-.L1371
	.byte	3,3,1,5,14,9
	.half	.L927-.L152
	.byte	1,5,12,9
	.half	.L1372-.L927
	.byte	3,2,1,5,5,9
	.half	.L1373-.L1372
	.byte	1,5,1,9
	.half	.L136-.L1373
	.byte	3,1,1,7,9
	.half	.L411-.L136
	.byte	0,1,1
.L1336:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_parseToken')
	.sect	'.debug_ranges'
.L410:
	.word	-1,.L334,0,.L411-.L334,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_parseAddress')
	.sect	'.debug_info'
.L412:
	.word	317
	.half	3
	.word	.L413
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L415,.L414
	.byte	2
	.word	.L363
	.byte	3
	.byte	'Ifx_Shell_parseAddress',0,1,151,6,9
	.word	.L519
	.byte	1,1,1
	.word	.L336,.L586,.L335
	.byte	4
	.byte	'argsPtr',0,1,151,6,39
	.word	.L573,.L587
	.byte	4
	.byte	'address',0,1,151,6,55
	.word	.L588,.L589
	.byte	5
	.word	.L336,.L586
	.byte	6
	.byte	'buffer',0,1,153,6,13
	.word	.L590,.L591
	.byte	6
	.byte	'result',0,1,154,6,13
	.word	.L519,.L592
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_parseAddress')
	.sect	'.debug_abbrev'
.L413:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_parseAddress')
	.sect	'.debug_line'
.L414:
	.word	.L1375-.L1374
.L1374:
	.half	3
	.word	.L1377-.L1376
.L1376:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1377:
	.byte	5,9,7,0,5,2
	.word	.L336
	.byte	3,150,6,1,5,16,9
	.half	.L932-.L336
	.byte	3,5,1,5,14,9
	.half	.L1378-.L932
	.byte	1,5,39,9
	.half	.L1379-.L1378
	.byte	3,2,1,5,47,9
	.half	.L930-.L1379
	.byte	1,5,5,9
	.half	.L931-.L930
	.byte	1,5,16,7,9
	.half	.L1380-.L931
	.byte	3,2,1,5,23,9
	.half	.L933-.L1380
	.byte	1,5,53,9
	.half	.L154-.L933
	.byte	3,4,1,5,25,9
	.half	.L934-.L154
	.byte	1,5,18,9
	.half	.L1381-.L934
	.byte	1,5,79,7,9
	.half	.L1382-.L1381
	.byte	1,5,64,9
	.half	.L1383-.L1382
	.byte	1,5,72,9
	.half	.L1384-.L1383
	.byte	1,5,104,9
	.half	.L1385-.L1384
	.byte	1,5,53,7,9
	.half	.L1386-.L1385
	.byte	1,5,5,9
	.half	.L155-.L1386
	.byte	3,3,1,5,1,9
	.half	.L158-.L155
	.byte	3,1,1,7,9
	.half	.L416-.L158
	.byte	0,1,1
.L1375:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_parseAddress')
	.sect	'.debug_ranges'
.L415:
	.word	-1,.L336,0,.L416-.L336,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_parseSInt32')
	.sect	'.debug_info'
.L417:
	.word	315
	.half	3
	.word	.L418
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L420,.L419
	.byte	2
	.word	.L363
	.byte	3
	.byte	'Ifx_Shell_parseSInt32',0,1,171,6,9
	.word	.L519
	.byte	1,1,1
	.word	.L338,.L593,.L337
	.byte	4
	.byte	'argsPtr',0,1,171,6,38
	.word	.L573,.L594
	.byte	4
	.byte	'value',0,1,171,6,55
	.word	.L595,.L596
	.byte	5
	.word	.L338,.L593
	.byte	6
	.byte	'value64',0,1,173,6,13
	.word	.L597,.L598
	.byte	6
	.byte	'result',0,1,174,6,13
	.word	.L519,.L599
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_parseSInt32')
	.sect	'.debug_abbrev'
.L418:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_parseSInt32')
	.sect	'.debug_line'
.L419:
	.word	.L1388-.L1387
.L1387:
	.half	3
	.word	.L1390-.L1389
.L1389:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1390:
	.byte	5,9,7,0,5,2
	.word	.L338
	.byte	3,170,6,1,5,14,9
	.half	.L938-.L338
	.byte	3,5,1,5,12,9
	.half	.L1391-.L938
	.byte	1,5,41,9
	.half	.L1392-.L1391
	.byte	3,2,1,5,5,9
	.half	.L936-.L1392
	.byte	1,5,16,7,9
	.half	.L1393-.L936
	.byte	3,2,1,5,23,9
	.half	.L939-.L1393
	.byte	1,5,26,9
	.half	.L159-.L939
	.byte	3,4,1,5,16,9
	.half	.L1394-.L159
	.byte	1,9
	.half	.L1395-.L1394
	.byte	3,1,1,5,5,9
	.half	.L160-.L1395
	.byte	3,3,1,5,1,9
	.half	.L161-.L160
	.byte	3,1,1,7,9
	.half	.L421-.L161
	.byte	0,1,1
.L1388:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_parseSInt32')
	.sect	'.debug_ranges'
.L420:
	.word	-1,.L338,0,.L421-.L338,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_parseUInt32')
	.sect	'.debug_info'
.L422:
	.word	332
	.half	3
	.word	.L423
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L425,.L424
	.byte	2
	.word	.L363
	.byte	3
	.byte	'Ifx_Shell_parseUInt32',0,1,192,6,9
	.word	.L519
	.byte	1,1,1
	.word	.L340,.L600,.L339
	.byte	4
	.byte	'argsPtr',0,1,192,6,38
	.word	.L573,.L601
	.byte	4
	.byte	'value',0,1,192,6,55
	.word	.L602,.L603
	.byte	4
	.byte	'hex',0,1,192,6,70
	.word	.L519,.L604
	.byte	5
	.word	.L340,.L600
	.byte	6
	.byte	'value64',0,1,194,6,13
	.word	.L605,.L606
	.byte	6
	.byte	'result',0,1,195,6,13
	.word	.L519,.L607
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_parseUInt32')
	.sect	'.debug_abbrev'
.L423:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_parseUInt32')
	.sect	'.debug_line'
.L424:
	.word	.L1397-.L1396
.L1396:
	.half	3
	.word	.L1399-.L1398
.L1398:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1399:
	.byte	5,9,7,0,5,2
	.word	.L340
	.byte	3,191,6,1,5,14,9
	.half	.L943-.L340
	.byte	3,5,1,5,12,9
	.half	.L1400-.L943
	.byte	1,5,41,9
	.half	.L1401-.L1400
	.byte	3,2,1,5,50,9
	.half	.L942-.L1401
	.byte	1,5,5,9
	.half	.L941-.L942
	.byte	1,5,16,7,9
	.half	.L1402-.L941
	.byte	3,2,1,5,23,9
	.half	.L944-.L1402
	.byte	1,5,26,9
	.half	.L162-.L944
	.byte	3,4,1,5,16,9
	.half	.L1403-.L162
	.byte	1,9
	.half	.L1404-.L1403
	.byte	3,1,1,5,5,9
	.half	.L163-.L1404
	.byte	3,3,1,5,1,9
	.half	.L164-.L163
	.byte	3,1,1,7,9
	.half	.L426-.L164
	.byte	0,1,1
.L1397:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_parseUInt32')
	.sect	'.debug_ranges'
.L425:
	.word	-1,.L340,0,.L426-.L340,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_parseSInt64')
	.sect	'.debug_info'
.L427:
	.word	314
	.half	3
	.word	.L428
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L430,.L429
	.byte	2
	.word	.L363
	.byte	3
	.byte	'Ifx_Shell_parseSInt64',0,1,213,6,9
	.word	.L519
	.byte	1,1,1
	.word	.L342,.L608,.L341
	.byte	4
	.byte	'argsPtr',0,1,213,6,38
	.word	.L573,.L609
	.byte	4
	.byte	'value',0,1,213,6,55
	.word	.L610,.L611
	.byte	5
	.word	.L342,.L608
	.byte	6
	.byte	'buffer',0,1,215,6,13
	.word	.L612,.L613
	.byte	6
	.byte	'result',0,1,216,6,13
	.word	.L519,.L614
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_parseSInt64')
	.sect	'.debug_abbrev'
.L428:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_parseSInt64')
	.sect	'.debug_line'
.L429:
	.word	.L1406-.L1405
.L1405:
	.half	3
	.word	.L1408-.L1407
.L1407:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1408:
	.byte	5,9,7,0,5,2
	.word	.L342
	.byte	3,212,6,1,5,14,9
	.half	.L948-.L342
	.byte	3,5,1,5,12,9
	.half	.L1409-.L948
	.byte	1,5,39,9
	.half	.L1410-.L1409
	.byte	3,2,1,5,47,9
	.half	.L947-.L1410
	.byte	1,5,5,9
	.half	.L946-.L947
	.byte	1,5,16,7,9
	.half	.L1411-.L946
	.byte	3,2,1,5,23,9
	.half	.L949-.L1411
	.byte	1,5,53,9
	.half	.L165-.L949
	.byte	3,4,1,5,25,9
	.half	.L950-.L165
	.byte	1,5,18,9
	.half	.L1412-.L950
	.byte	1,5,87,7,9
	.half	.L1413-.L1412
	.byte	1,5,64,9
	.half	.L1414-.L1413
	.byte	1,5,72,9
	.half	.L1415-.L1414
	.byte	1,5,94,9
	.half	.L1416-.L1415
	.byte	1,5,53,7,9
	.half	.L1417-.L1416
	.byte	1,5,5,9
	.half	.L166-.L1417
	.byte	3,3,1,5,1,9
	.half	.L169-.L166
	.byte	3,1,1,7,9
	.half	.L431-.L169
	.byte	0,1,1
.L1406:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_parseSInt64')
	.sect	'.debug_ranges'
.L430:
	.word	-1,.L342,0,.L431-.L342,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_parseUInt64')
	.sect	'.debug_info'
.L432:
	.word	368
	.half	3
	.word	.L433
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L435,.L434
	.byte	2
	.word	.L363
	.byte	3
	.byte	'Ifx_Shell_parseUInt64',0,1,233,6,9
	.word	.L519
	.byte	1,1,1
	.word	.L344,.L615,.L343
	.byte	4
	.byte	'argsPtr',0,1,233,6,38
	.word	.L573,.L616
	.byte	4
	.byte	'value',0,1,233,6,55
	.word	.L617,.L618
	.byte	4
	.byte	'hex',0,1,233,6,70
	.word	.L519,.L619
	.byte	5
	.word	.L344,.L615
	.byte	6
	.byte	'buffer',0,1,235,6,13
	.word	.L612,.L620
	.byte	6
	.byte	'result',0,1,236,6,13
	.word	.L519,.L621
	.byte	5
	.word	.L170,.L171
	.byte	6
	.byte	'bufferPointer',0,1,246,6,15
	.word	.L551,.L622
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_parseUInt64')
	.sect	'.debug_abbrev'
.L433:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_parseUInt64')
	.sect	'.debug_line'
.L434:
	.word	.L1419-.L1418
.L1418:
	.half	3
	.word	.L1421-.L1420
.L1420:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1421:
	.byte	5,9,7,0,5,2
	.word	.L344
	.byte	3,232,6,1,5,14,9
	.half	.L956-.L344
	.byte	3,5,1,5,12,9
	.half	.L1422-.L956
	.byte	1,5,39,9
	.half	.L1423-.L1422
	.byte	3,2,1,5,47,9
	.half	.L954-.L1423
	.byte	1,5,5,9
	.half	.L952-.L954
	.byte	1,5,16,7,9
	.half	.L1424-.L952
	.byte	3,2,1,5,23,9
	.half	.L957-.L1424
	.byte	1,5,31,9
	.half	.L170-.L957
	.byte	3,4,1,5,20,9
	.half	.L959-.L170
	.byte	3,2,1,5,27,9
	.half	.L1425-.L959
	.byte	1,5,13,9
	.half	.L1426-.L1425
	.byte	1,5,42,7,9
	.half	.L1427-.L1426
	.byte	1,5,49,9
	.half	.L1428-.L1427
	.byte	1,5,46,9
	.half	.L1429-.L1428
	.byte	1,5,43,7,9
	.half	.L1430-.L1429
	.byte	3,2,1,5,27,9
	.half	.L1431-.L1430
	.byte	3,1,1,5,9,9
	.half	.L172-.L1431
	.byte	3,3,1,5,64,7,9
	.half	.L1432-.L172
	.byte	3,2,1,5,36,9
	.half	.L958-.L1432
	.byte	1,5,22,9
	.half	.L1433-.L958
	.byte	1,5,105,7,9
	.half	.L1434-.L1433
	.byte	1,5,90,9
	.half	.L1435-.L1434
	.byte	1,5,112,9
	.half	.L960-.L1435
	.byte	1,5,64,7,9
	.half	.L1436-.L960
	.byte	1,5,117,9
	.half	.L175-.L1436
	.byte	1,5,64,9
	.half	.L174-.L175
	.byte	3,4,1,5,36,9
	.half	.L962-.L174
	.byte	1,5,22,9
	.half	.L1437-.L962
	.byte	1,5,105,7,9
	.half	.L1438-.L1437
	.byte	1,5,90,9
	.half	.L1439-.L1438
	.byte	1,5,112,9
	.half	.L961-.L1439
	.byte	1,5,64,7,9
	.half	.L1440-.L961
	.byte	1,5,5,9
	.half	.L171-.L1440
	.byte	3,4,1,5,1,9
	.half	.L180-.L171
	.byte	3,1,1,7,9
	.half	.L436-.L180
	.byte	0,1,1
.L1419:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_parseUInt64')
	.sect	'.debug_ranges'
.L435:
	.word	-1,.L344,0,.L436-.L344,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_parseFloat64')
	.sect	'.debug_info'
.L437:
	.word	315
	.half	3
	.word	.L438
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L440,.L439
	.byte	2
	.word	.L363
	.byte	3
	.byte	'Ifx_Shell_parseFloat64',0,1,140,7,9
	.word	.L519
	.byte	1,1,1
	.word	.L346,.L623,.L345
	.byte	4
	.byte	'argsPtr',0,1,140,7,39
	.word	.L573,.L624
	.byte	4
	.byte	'value',0,1,140,7,57
	.word	.L625,.L626
	.byte	5
	.word	.L346,.L623
	.byte	6
	.byte	'buffer',0,1,142,7,13
	.word	.L612,.L627
	.byte	6
	.byte	'result',0,1,143,7,13
	.word	.L519,.L628
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_parseFloat64')
	.sect	'.debug_abbrev'
.L438:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_parseFloat64')
	.sect	'.debug_line'
.L439:
	.word	.L1442-.L1441
.L1441:
	.half	3
	.word	.L1444-.L1443
.L1443:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1444:
	.byte	5,9,7,0,5,2
	.word	.L346
	.byte	3,139,7,1,5,14,9
	.half	.L966-.L346
	.byte	3,5,1,5,12,9
	.half	.L1445-.L966
	.byte	1,5,39,9
	.half	.L1446-.L1445
	.byte	3,2,1,5,47,9
	.half	.L965-.L1446
	.byte	1,5,5,9
	.half	.L964-.L965
	.byte	1,5,16,7,9
	.half	.L1447-.L964
	.byte	3,2,1,5,23,9
	.half	.L967-.L1447
	.byte	1,5,53,9
	.half	.L181-.L967
	.byte	3,4,1,5,25,9
	.half	.L968-.L181
	.byte	1,5,18,9
	.half	.L1448-.L968
	.byte	1,5,80,7,9
	.half	.L1449-.L1448
	.byte	1,5,64,9
	.half	.L1450-.L1449
	.byte	1,5,72,9
	.half	.L1451-.L1450
	.byte	1,5,87,9
	.half	.L1452-.L1451
	.byte	1,5,53,7,9
	.half	.L1453-.L1452
	.byte	1,5,5,9
	.half	.L182-.L1453
	.byte	3,3,1,5,1,9
	.half	.L185-.L182
	.byte	3,1,1,7,9
	.half	.L441-.L185
	.byte	0,1,1
.L1442:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_parseFloat64')
	.sect	'.debug_ranges'
.L440:
	.word	-1,.L346,0,.L441-.L346,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_parseFloat32')
	.sect	'.debug_info'
.L442:
	.word	315
	.half	3
	.word	.L443
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L445,.L444
	.byte	2
	.word	.L363
	.byte	3
	.byte	'Ifx_Shell_parseFloat32',0,1,160,7,9
	.word	.L519
	.byte	1,1,1
	.word	.L348,.L629,.L347
	.byte	4
	.byte	'argsPtr',0,1,160,7,39
	.word	.L573,.L630
	.byte	4
	.byte	'value',0,1,160,7,57
	.word	.L631,.L632
	.byte	5
	.word	.L348,.L629
	.byte	6
	.byte	'buffer',0,1,162,7,13
	.word	.L612,.L633
	.byte	6
	.byte	'result',0,1,163,7,13
	.word	.L519,.L634
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_parseFloat32')
	.sect	'.debug_abbrev'
.L443:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_parseFloat32')
	.sect	'.debug_line'
.L444:
	.word	.L1455-.L1454
.L1454:
	.half	3
	.word	.L1457-.L1456
.L1456:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1457:
	.byte	5,9,7,0,5,2
	.word	.L348
	.byte	3,159,7,1,5,14,9
	.half	.L972-.L348
	.byte	3,5,1,5,12,9
	.half	.L1458-.L972
	.byte	1,5,39,9
	.half	.L1459-.L1458
	.byte	3,2,1,5,47,9
	.half	.L971-.L1459
	.byte	1,5,5,9
	.half	.L970-.L971
	.byte	1,5,16,7,9
	.half	.L1460-.L970
	.byte	3,2,1,5,23,9
	.half	.L973-.L1460
	.byte	1,5,53,9
	.half	.L186-.L973
	.byte	3,4,1,5,25,9
	.half	.L974-.L186
	.byte	1,5,18,9
	.half	.L1461-.L974
	.byte	1,5,79,7,9
	.half	.L1462-.L1461
	.byte	1,5,64,9
	.half	.L1463-.L1462
	.byte	1,5,72,9
	.half	.L1464-.L1463
	.byte	1,5,86,9
	.half	.L1465-.L1464
	.byte	1,5,53,7,9
	.half	.L1466-.L1465
	.byte	1,5,5,9
	.half	.L187-.L1466
	.byte	3,3,1,5,1,9
	.half	.L190-.L187
	.byte	3,1,1,7,9
	.half	.L446-.L190
	.byte	0,1,1
.L1455:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_parseFloat32')
	.sect	'.debug_ranges'
.L445:
	.word	-1,.L348,0,.L446-.L348,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_commandFind')
	.sect	'.debug_info'
.L447:
	.word	561
	.half	3
	.word	.L448
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L450,.L449
	.byte	2
	.word	.L363
	.byte	3
	.byte	'Ifx_Shell_commandFind',0,1,180,7,26
	.word	.L635
	.byte	1,1,1
	.word	.L350,.L636,.L349
	.byte	4
	.byte	'commandList',0,1,180,7,75
	.word	.L637,.L638
	.byte	4
	.byte	'commandLine',0,1,180,7,94
	.word	.L569,.L639
	.byte	4
	.byte	'args',0,1,180,7,114
	.word	.L573,.L640
	.byte	4
	.byte	'match',0,1,180,7,128,1
	.word	.L602,.L641
	.byte	5
	.word	.L350,.L636
	.byte	6
	.byte	'command',0,1,182,7,30
	.word	.L635,.L642
	.byte	6
	.byte	'result',0,1,183,7,30
	.word	.L635,.L643
	.byte	6
	.byte	'cmdLineTemp',0,1,184,7,30
	.word	.L569,.L644
	.byte	6
	.byte	'matchInit',0,1,185,7,30
	.word	.L517,.L645
	.byte	6
	.byte	'index',0,1,186,7,30
	.word	.L517,.L646
	.byte	6
	.byte	'hasPrefix',0,1,188,7,30
	.word	.L519,.L647
	.byte	5
	.word	.L194,.L193
	.byte	6
	.byte	'commandTemp',0,1,195,7,16
	.word	.L569,.L648
	.byte	6
	.byte	'commandLineTemp',0,1,196,7,16
	.word	.L569,.L649
	.byte	6
	.byte	'buffer',0,1,197,7,16
	.word	.L577,.L650
	.byte	6
	.byte	'matchCount',0,1,198,7,16
	.word	.L517,.L651
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_commandFind')
	.sect	'.debug_abbrev'
.L448:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_commandFind')
	.sect	'.debug_line'
.L449:
	.word	.L1468-.L1467
.L1467:
	.half	3
	.word	.L1470-.L1469
.L1469:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1470:
	.byte	5,26,7,0,5,2
	.word	.L350
	.byte	3,179,7,1,5,42,9
	.half	.L977-.L350
	.byte	3,2,1,9
	.half	.L978-.L977
	.byte	3,1,1,9
	.half	.L979-.L978
	.byte	3,1,1,9
	.half	.L980-.L979
	.byte	3,1,1,9
	.half	.L981-.L980
	.byte	3,1,1,5,52,9
	.half	.L982-.L981
	.byte	3,4,1,5,25,9
	.half	.L983-.L982
	.byte	1,5,17,9
	.half	.L1471-.L983
	.byte	1,5,63,7,9
	.half	.L1472-.L1471
	.byte	1,5,70,9
	.half	.L1473-.L1472
	.byte	1,5,52,7,9
	.half	.L1474-.L1473
	.byte	1,5,17,9
	.half	.L191-.L1474
	.byte	3,1,1,5,15,9
	.half	.L1475-.L191
	.byte	1,5,44,9
	.half	.L1476-.L1475
	.byte	3,2,1,5,41,9
	.half	.L194-.L1476
	.byte	3,2,1,5,32,9
	.half	.L1477-.L194
	.byte	1,9
	.half	.L1478-.L1477
	.byte	3,1,1,9
	.half	.L1479-.L1478
	.byte	3,2,1,5,79,9
	.half	.L984-.L1479
	.byte	3,2,1,5,23,9
	.half	.L196-.L984
	.byte	3,2,1,5,40,9
	.half	.L195-.L196
	.byte	3,126,1,5,58,9
	.half	.L1480-.L195
	.byte	1,5,79,9
	.half	.L1481-.L1480
	.byte	1,5,27,7,9
	.half	.L1482-.L1481
	.byte	3,5,1,5,13,9
	.half	.L1483-.L1482
	.byte	1,5,61,7,9
	.half	.L1484-.L1483
	.byte	1,5,74,9
	.half	.L1485-.L1484
	.byte	1,5,82,9
	.half	.L1486-.L1485
	.byte	1,5,103,9
	.half	.L1487-.L1486
	.byte	1,5,17,7,9
	.half	.L1488-.L1487
	.byte	3,2,1,5,41,7,9
	.half	.L1489-.L1488
	.byte	1,5,48,9
	.half	.L1490-.L1489
	.byte	1,5,31,7,9
	.half	.L1491-.L1490
	.byte	3,2,1,5,29,9
	.half	.L1492-.L1491
	.byte	3,1,1,5,20,9
	.half	.L199-.L1492
	.byte	3,3,1,5,22,9
	.half	.L1493-.L199
	.byte	3,1,1,5,20,9
	.half	.L1494-.L1493
	.byte	1,9
	.half	.L1495-.L1494
	.byte	3,1,1,5,32,9
	.half	.L1496-.L1495
	.byte	3,126,1,5,17,9
	.half	.L197-.L1496
	.byte	3,6,1,5,33,7,9
	.half	.L1497-.L197
	.byte	1,5,17,7,9
	.half	.L1498-.L1497
	.byte	3,3,1,5,27,9
	.half	.L201-.L1498
	.byte	3,4,1,5,14,9
	.half	.L1499-.L201
	.byte	3,2,1,5,19,9
	.half	.L193-.L1499
	.byte	3,93,1,5,44,9
	.half	.L1500-.L193
	.byte	1,5,5,7,9
	.half	.L204-.L1500
	.byte	3,38,1,5,1,9
	.half	.L205-.L204
	.byte	3,1,1,7,9
	.half	.L451-.L205
	.byte	0,1,1
.L1468:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_commandFind')
	.sect	'.debug_ranges'
.L450:
	.word	-1,.L350,0,.L451-.L350,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_showHelpSingle')
	.sect	'.debug_info'
.L452:
	.word	617
	.half	3
	.word	.L453
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L455,.L454
	.byte	2
	.word	.L363
	.byte	3
	.byte	'Ifx_Shell_showHelpSingle',0,1,107,9
	.word	.L519
	.byte	1,1,1
	.word	.L310,.L652,.L309
	.byte	4
	.byte	'commandList',0,1,107,61
	.word	.L637,.L653
	.byte	4
	.byte	'io',0,1,107,90
	.word	.L654,.L655
	.byte	4
	.byte	'briefOnly',0,1,107,102
	.word	.L519,.L656
	.byte	4
	.byte	'singleCommand',0,1,107,121
	.word	.L519,.L657
	.byte	5
	.word	.L310,.L652
	.byte	6
	.byte	'command',0,1,109,30
	.word	.L635,.L658
	.byte	6
	.byte	'index',0,1,110,30
	.word	.L517,.L659
	.byte	6
	.byte	'space',0,1,111,30
	.word	.L569,.L660
	.byte	6
	.byte	'spaceParam',0,1,112,30
	.word	.L569,.L661
	.byte	5
	.word	.L9,.L8
	.byte	6
	.byte	'help',0,1,116,17
	.word	.L569,.L662
	.byte	6
	.byte	'chunk',0,1,117,17
	.word	.L569,.L663
	.byte	6
	.byte	'isParam',0,1,118,17
	.word	.L519,.L664
	.byte	6
	.byte	'isSyntax',0,1,119,17
	.word	.L519,.L665
	.byte	5
	.word	.L11,.L10
	.byte	6
	.byte	'count',0,1,124,23
	.word	.L543,.L666
	.byte	6
	.byte	'matchp',0,1,125,23
	.word	.L569,.L667
	.byte	6
	.byte	'matchs',0,1,126,23
	.word	.L569,.L668
	.byte	7
	.word	.L669,.L670,.L22
	.byte	8
	.word	.L671,.L672
	.byte	8
	.word	.L673,.L674
	.byte	8
	.word	.L675,.L676
	.byte	8
	.word	.L677,.L678
	.byte	9
	.word	.L679,.L670,.L22
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_showHelpSingle')
	.sect	'.debug_abbrev'
.L453:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_showHelpSingle')
	.sect	'.debug_line'
.L454:
	.word	.L1502-.L1501
.L1501:
	.half	3
	.word	.L1504-.L1503
.L1503:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Service\\CpuGeneric\\StdIf\\IfxStdIf_DPipe.h',0
	.byte	0,0,0,0
.L1504:
	.byte	5,9,7,0,5,2
	.word	.L310
	.byte	3,234,0,1,5,47,9
	.half	.L1505-.L310
	.byte	3,2,1,9
	.half	.L788-.L1505
	.byte	3,1,1,5,49,9
	.half	.L789-.L788
	.byte	3,1,1,5,44,9
	.half	.L1506-.L789
	.byte	3,3,1,5,35,9
	.half	.L9-.L1506
	.byte	3,2,1,5,26,9
	.half	.L1507-.L9
	.byte	1,9
	.half	.L1508-.L1507
	.byte	3,2,1,9
	.half	.L792-.L1508
	.byte	3,1,1,5,42,9
	.half	.L793-.L792
	.byte	3,1,1,5,56,9
	.half	.L1509-.L793
	.byte	1,5,34,9
	.half	.L1510-.L1509
	.byte	1,5,44,9
	.half	.L795-.L1510
	.byte	3,2,1,5,36,9
	.half	.L11-.L795
	.byte	3,3,1,5,34,9
	.half	.L1511-.L11
	.byte	1,5,36,9
	.half	.L1512-.L1511
	.byte	3,1,1,5,34,9
	.half	.L1513-.L1512
	.byte	1,5,31,9
	.half	.L1514-.L1513
	.byte	3,1,1,5,41,9
	.half	.L1515-.L1514
	.byte	3,2,1,5,48,9
	.half	.L1516-.L1515
	.byte	1,5,13,9
	.half	.L1517-.L1516
	.byte	1,5,28,7,9
	.half	.L1518-.L1517
	.byte	3,2,1,9
	.half	.L1519-.L1518
	.byte	3,1,1,5,30,9
	.half	.L1520-.L1519
	.byte	3,1,1,5,34,9
	.half	.L1521-.L1520
	.byte	3,126,1,5,46,9
	.half	.L12-.L1521
	.byte	3,4,1,5,53,9
	.half	.L1522-.L12
	.byte	1,5,18,9
	.half	.L1523-.L1522
	.byte	1,5,28,7,9
	.half	.L1524-.L1523
	.byte	3,2,1,9
	.half	.L1525-.L1524
	.byte	3,1,1,5,30,9
	.half	.L1526-.L1525
	.byte	3,1,1,5,35,9
	.half	.L1527-.L1526
	.byte	3,126,1,5,17,9
	.half	.L14-.L1527
	.byte	3,6,1,5,34,7,9
	.half	.L1528-.L14
	.byte	3,2,1,5,44,9
	.half	.L1529-.L1528
	.byte	1,5,22,9
	.half	.L16-.L1529
	.byte	3,2,1,5,34,7,9
	.half	.L1530-.L16
	.byte	3,2,1,5,28,9
	.half	.L13-.L1530
	.byte	3,5,1,5,34,9
	.half	.L1531-.L13
	.byte	1,5,13,9
	.half	.L798-.L1531
	.byte	3,2,1,5,25,7,9
	.half	.L1532-.L798
	.byte	3,2,1,5,39,9
	.half	.L1533-.L1532
	.byte	1,5,30,9
	.half	.L799-.L1533
	.byte	1,5,44,9
	.half	.L800-.L799
	.byte	1,5,22,9
	.half	.L19-.L800
	.byte	3,4,1,5,27,7,9
	.half	.L802-.L19
	.byte	3,2,1,5,29,9
	.half	.L20-.L802
	.byte	3,4,1,5,27,9
	.half	.L1534-.L20
	.byte	1,5,19,9
	.half	.L1535-.L1534
	.byte	1,5,46,9
	.half	.L1536-.L1535
	.byte	3,1,1,5,53,9
	.half	.L1537-.L1536
	.byte	1,5,38,9
	.half	.L1538-.L1537
	.byte	1,5,46,9
	.half	.L804-.L1538
	.byte	3,1,1,5,53,9
	.half	.L1539-.L804
	.byte	1,5,60,9
	.half	.L1540-.L1539
	.byte	1,4,2,5,17,9
	.half	.L670-.L1540
	.byte	3,222,0,1,5,30,9
	.half	.L1541-.L670
	.byte	1,5,53,9
	.half	.L1542-.L1541
	.byte	1,5,5,9
	.half	.L1543-.L1542
	.byte	1,4,1,5,13,9
	.half	.L22-.L1543
	.byte	3,164,127,1,5,21,9
	.half	.L1544-.L22
	.byte	1,5,18,9
	.half	.L1545-.L1544
	.byte	1,5,13,9
	.half	.L805-.L1545
	.byte	3,2,1,5,17,7,9
	.half	.L806-.L805
	.byte	3,2,1,9
	.half	.L10-.L806
	.byte	3,74,1,5,16,9
	.half	.L1546-.L10
	.byte	1,5,44,9
	.half	.L1547-.L1546
	.byte	1,5,34,7,9
	.half	.L24-.L1547
	.byte	3,58,1,5,21,9
	.half	.L808-.L24
	.byte	3,2,1,5,13,9
	.half	.L1548-.L808
	.byte	1,5,51,7,9
	.half	.L1549-.L1548
	.byte	1,5,19,7,9
	.half	.L1550-.L1549
	.byte	3,2,1,5,21,9
	.half	.L1551-.L1550
	.byte	3,1,1,5,27,9
	.half	.L25-.L1551
	.byte	3,3,1,5,9,9
	.half	.L810-.L25
	.byte	3,2,1,5,13,7,9
	.half	.L811-.L810
	.byte	3,2,1,5,19,9
	.half	.L8-.L811
	.byte	3,178,127,1,5,44,9
	.half	.L1552-.L8
	.byte	1,5,12,7,9
	.half	.L28-.L1552
	.byte	3,210,0,1,5,5,9
	.half	.L1553-.L28
	.byte	1,5,1,9
	.half	.L29-.L1553
	.byte	3,1,1,7,9
	.half	.L456-.L29
	.byte	0,1,1
.L1502:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_showHelpSingle')
	.sect	'.debug_ranges'
.L455:
	.word	-1,.L310,0,.L456-.L310,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_showHelp')
	.sect	'.debug_info'
.L457:
	.word	341
	.half	3
	.word	.L458
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L460,.L459
	.byte	2
	.word	.L363
	.byte	3
	.byte	'Ifx_Shell_showHelp',0,1,231,1,9
	.word	.L519
	.byte	1,1,1
	.word	.L314,.L680,.L313
	.byte	4
	.byte	'args',0,1,231,1,34
	.word	.L569,.L681
	.byte	4
	.byte	'shellPtr',0,1,231,1,46
	.word	.L682,.L683
	.byte	4
	.byte	'io',0,1,231,1,72
	.word	.L654,.L684
	.byte	5
	.word	.L314,.L680
	.byte	6
	.byte	'i',0,1,233,1,16
	.word	.L525,.L685
	.byte	6
	.byte	'shell',0,1,234,1,16
	.word	.L521,.L686
	.byte	6
	.byte	'result',0,1,235,1,16
	.word	.L519,.L687
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_showHelp')
	.sect	'.debug_abbrev'
.L458:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_showHelp')
	.sect	'.debug_line'
.L459:
	.word	.L1555-.L1554
.L1554:
	.half	3
	.word	.L1557-.L1556
.L1556:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1557:
	.byte	5,9,7,0,5,2
	.word	.L314
	.byte	3,230,1,1,5,23,9
	.half	.L829-.L314
	.byte	3,4,1,5,9,9
	.half	.L830-.L829
	.byte	3,2,1,5,5,9
	.half	.L1558-.L830
	.byte	1,5,16,7,9
	.half	.L1559-.L1558
	.byte	3,2,1,5,52,9
	.half	.L832-.L1559
	.byte	1,5,35,9
	.half	.L38-.L832
	.byte	3,2,1,5,13,9
	.half	.L1560-.L38
	.byte	1,5,60,7,9
	.half	.L1561-.L1560
	.byte	3,2,1,5,69,9
	.half	.L1562-.L1561
	.byte	1,5,75,9
	.half	.L1563-.L1562
	.byte	1,5,55,9
	.half	.L39-.L1563
	.byte	3,124,1,5,52,9
	.half	.L37-.L39
	.byte	1,7,9
	.half	.L1564-.L37
	.byte	1,5,66,9
	.half	.L36-.L1564
	.byte	3,10,1,5,16,9
	.half	.L831-.L36
	.byte	1,5,5,9
	.half	.L40-.L831
	.byte	3,3,1,5,1,9
	.half	.L41-.L40
	.byte	3,1,1,7,9
	.half	.L461-.L41
	.byte	0,1,1
.L1555:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_showHelp')
	.sect	'.debug_ranges'
.L460:
	.word	-1,.L314,0,.L461-.L314,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_printSyntax')
	.sect	'.debug_info'
.L462:
	.word	290
	.half	3
	.word	.L463
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L465,.L464
	.byte	2
	.word	.L363
	.byte	3
	.byte	'Ifx_Shell_printSyntax',0,1,173,10,6,1,1,1
	.word	.L362,.L688,.L361
	.byte	4
	.byte	'syntaxList',0,1,173,10,52
	.word	.L689,.L690
	.byte	4
	.byte	'io',0,1,173,10,80
	.word	.L654,.L691
	.byte	5
	.word	.L362,.L688
	.byte	6
	.byte	'syntax',0,1,175,10,29
	.word	.L689,.L692
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_printSyntax')
	.sect	'.debug_abbrev'
.L463:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_printSyntax')
	.sect	'.debug_line'
.L464:
	.word	.L1566-.L1565
.L1565:
	.half	3
	.word	.L1568-.L1567
.L1567:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1568:
	.byte	5,6,7,0,5,2
	.word	.L362
	.byte	3,172,10,1,5,36,9
	.half	.L1073-.L362
	.byte	3,2,1,5,38,9
	.half	.L1074-.L1073
	.byte	3,2,1,5,64,9
	.half	.L304-.L1074
	.byte	3,2,1,5,34,9
	.half	.L1569-.L304
	.byte	1,5,64,9
	.half	.L1076-.L1569
	.byte	3,1,1,5,34,9
	.half	.L1570-.L1076
	.byte	1,5,25,9
	.half	.L1078-.L1570
	.byte	3,1,1,5,18,9
	.half	.L303-.L1078
	.byte	3,124,1,5,38,9
	.half	.L1571-.L303
	.byte	1,5,1,7,9
	.half	.L1572-.L1571
	.byte	3,6,1,7,9
	.half	.L466-.L1572
	.byte	0,1,1
.L1566:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_printSyntax')
	.sect	'.debug_ranges'
.L465:
	.word	-1,.L362,0,.L466-.L362,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_protocolStart')
	.sect	'.debug_info'
.L467:
	.word	327
	.half	3
	.word	.L468
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L470,.L469
	.byte	2
	.word	.L363
	.byte	3
	.byte	'Ifx_Shell_protocolStart',0,1,128,2,9
	.word	.L519
	.byte	1,1,1
	.word	.L316,.L693,.L315
	.byte	4
	.byte	'args',0,1,128,2,39
	.word	.L569,.L694
	.byte	4
	.byte	'data',0,1,128,2,51
	.word	.L682,.L695
	.byte	4
	.byte	'io',0,1,128,2,73
	.word	.L654,.L696
	.byte	5
	.word	.L316,.L693
	.byte	6
	.byte	'shell',0,1,130,2,16
	.word	.L521,.L697
	.byte	6
	.byte	'Result',0,1,131,2,16
	.word	.L519,.L698
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_protocolStart')
	.sect	'.debug_abbrev'
.L468:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_protocolStart')
	.sect	'.debug_line'
.L469:
	.word	.L1574-.L1573
.L1573:
	.half	3
	.word	.L1576-.L1575
.L1575:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1576:
	.byte	5,9,7,0,5,2
	.word	.L316
	.byte	3,255,1,1,5,23,9
	.half	.L840-.L316
	.byte	3,3,1,5,31,9
	.half	.L841-.L840
	.byte	3,2,1,5,37,9
	.half	.L836-.L841
	.byte	1,5,5,9
	.half	.L838-.L836
	.byte	1,5,34,7,9
	.half	.L1577-.L838
	.byte	3,2,1,9
	.half	.L844-.L1577
	.byte	3,1,1,5,69,9
	.half	.L846-.L844
	.byte	3,127,1,5,36,9
	.half	.L42-.L846
	.byte	3,3,1,5,42,9
	.half	.L1578-.L42
	.byte	1,5,10,9
	.half	.L1579-.L1578
	.byte	1,5,29,7,9
	.half	.L1580-.L1579
	.byte	3,2,1,5,13,9
	.half	.L1581-.L1580
	.byte	1,5,68,7,9
	.half	.L1582-.L1581
	.byte	1,5,76,9
	.half	.L1583-.L1582
	.byte	1,5,54,7,9
	.half	.L1584-.L1583
	.byte	3,2,1,5,76,9
	.half	.L1585-.L1584
	.byte	1,5,85,9
	.half	.L1586-.L1585
	.byte	1,5,37,9
	.half	.L842-.L1586
	.byte	1,5,47,9
	.half	.L848-.L842
	.byte	3,1,1,5,37,9
	.half	.L1587-.L848
	.byte	1,5,32,9
	.half	.L1588-.L1587
	.byte	3,2,1,5,13,9
	.half	.L1589-.L1588
	.byte	1,5,32,7,9
	.half	.L1590-.L1589
	.byte	3,2,1,5,56,9
	.half	.L1591-.L1590
	.byte	1,5,80,9
	.half	.L1592-.L1591
	.byte	1,5,13,9
	.half	.L47-.L1592
	.byte	3,126,1,5,20,9
	.half	.L45-.L47
	.byte	3,7,1,5,9,9
	.half	.L48-.L45
	.byte	3,126,1,5,5,9
	.half	.L43-.L48
	.byte	3,8,1,5,1,9
	.half	.L50-.L43
	.byte	3,1,1,7,9
	.half	.L471-.L50
	.byte	0,1,1
.L1574:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_protocolStart')
	.sect	'.debug_ranges'
.L470:
	.word	-1,.L316,0,.L471-.L316,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_bbProtocolStart')
	.sect	'.debug_info'
.L472:
	.word	310
	.half	3
	.word	.L473
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L475,.L474
	.byte	2
	.word	.L363
	.byte	3
	.byte	'Ifx_Shell_bbProtocolStart',0,1,162,2,9
	.word	.L519
	.byte	1,1,1
	.word	.L318,.L699,.L317
	.byte	4
	.byte	'args',0,1,162,2,41
	.word	.L569,.L700
	.byte	4
	.byte	'data',0,1,162,2,53
	.word	.L682,.L701
	.byte	4
	.byte	'io',0,1,162,2,75
	.word	.L654,.L702
	.byte	5
	.word	.L318,.L699
	.byte	6
	.byte	'result',0,1,164,2,13
	.word	.L519,.L703
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_bbProtocolStart')
	.sect	'.debug_abbrev'
.L473:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_bbProtocolStart')
	.sect	'.debug_line'
.L474:
	.word	.L1594-.L1593
.L1593:
	.half	3
	.word	.L1596-.L1595
.L1595:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1596:
	.byte	5,9,7,0,5,2
	.word	.L318
	.byte	3,161,2,1,5,20,9
	.half	.L855-.L318
	.byte	3,2,1,5,31,9
	.half	.L856-.L855
	.byte	3,2,1,5,37,9
	.half	.L851-.L856
	.byte	1,5,5,9
	.half	.L853-.L851
	.byte	1,5,34,7,9
	.half	.L1597-.L853
	.byte	3,2,1,9
	.half	.L859-.L1597
	.byte	3,1,1,5,69,9
	.half	.L861-.L859
	.byte	3,127,1,5,36,9
	.half	.L51-.L861
	.byte	3,3,1,5,42,9
	.half	.L1598-.L51
	.byte	1,5,10,9
	.half	.L1599-.L1598
	.byte	1,5,42,7,9
	.half	.L1600-.L1599
	.byte	3,2,1,5,54,9
	.half	.L1601-.L1600
	.byte	1,5,16,9
	.half	.L857-.L1601
	.byte	1,5,57,9
	.half	.L864-.L857
	.byte	1,5,5,9
	.half	.L52-.L864
	.byte	3,5,1,5,1,9
	.half	.L55-.L52
	.byte	3,1,1,7,9
	.half	.L476-.L55
	.byte	0,1,1
.L1594:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_bbProtocolStart')
	.sect	'.debug_ranges'
.L475:
	.word	-1,.L318,0,.L476-.L318,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_execute')
	.sect	'.debug_info'
.L477:
	.word	339
	.half	3
	.word	.L478
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L480,.L479
	.byte	2
	.word	.L363
	.byte	3
	.byte	'Ifx_Shell_execute',0,1,134,8,6,1,1,1
	.word	.L354,.L704,.L353
	.byte	4
	.byte	'shell',0,1,134,8,35
	.word	.L521,.L705
	.byte	4
	.byte	'commandLine',0,1,134,8,48
	.word	.L569,.L706
	.byte	5
	.word	.L354,.L704
	.byte	6
	.byte	'args',0,1,136,8,32
	.word	.L569,.L707
	.byte	6
	.byte	'commandList',0,1,137,8,32
	.word	.L637,.L708
	.byte	6
	.byte	'shellCommand',0,1,138,8,32
	.word	.L635,.L709
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_execute')
	.sect	'.debug_abbrev'
.L478:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_execute')
	.sect	'.debug_line'
.L479:
	.word	.L1603-.L1602
.L1602:
	.half	3
	.word	.L1605-.L1604
.L1604:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1605:
	.byte	5,6,7,0,5,2
	.word	.L354
	.byte	3,133,8,1,5,47,9
	.half	.L1003-.L354
	.byte	3,2,1,5,45,9
	.half	.L1606-.L1003
	.byte	1,5,94,9
	.half	.L1607-.L1606
	.byte	3,2,1,5,101,9
	.half	.L1608-.L1607
	.byte	1,5,5,9
	.half	.L1001-.L1608
	.byte	3,2,1,5,25,7,9
	.half	.L1609-.L1001
	.byte	3,2,1,5,9,9
	.half	.L1610-.L1609
	.byte	1,5,57,7,9
	.half	.L1611-.L1610
	.byte	3,2,1,5,62,9
	.half	.L1004-.L1611
	.byte	1,5,30,9
	.half	.L213-.L1004
	.byte	3,2,1,5,37,9
	.half	.L1612-.L213
	.byte	1,5,55,9
	.half	.L1613-.L1612
	.byte	1,5,68,9
	.half	.L1614-.L1613
	.byte	1,5,14,9
	.half	.L1007-.L1614
	.byte	1,5,31,7,9
	.half	.L1615-.L1007
	.byte	3,2,1,5,13,9
	.half	.L1616-.L1615
	.byte	1,5,46,7,9
	.half	.L1617-.L1616
	.byte	3,2,1,5,13,9
	.half	.L216-.L1617
	.byte	3,126,1,5,31,9
	.half	.L215-.L216
	.byte	3,7,1,5,13,9
	.half	.L1618-.L215
	.byte	1,5,46,7,9
	.half	.L1619-.L1618
	.byte	3,2,1,5,71,9
	.half	.L1010-.L1619
	.byte	1,5,36,9
	.half	.L218-.L1010
	.byte	3,2,1,5,18,9
	.half	.L1620-.L218
	.byte	1,5,85,7,9
	.half	.L1621-.L1620
	.byte	3,2,1,5,43,9
	.half	.L1622-.L1621
	.byte	1,5,49,9
	.half	.L1623-.L1622
	.byte	1,5,97,9
	.half	.L1624-.L1623
	.byte	1,5,9,9
	.half	.L214-.L1624
	.byte	3,113,1,5,24,9
	.half	.L212-.L214
	.byte	3,23,1,5,9,9
	.half	.L1625-.L212
	.byte	1,5,31,7,9
	.half	.L1626-.L1625
	.byte	3,2,1,5,13,9
	.half	.L1627-.L1626
	.byte	1,5,46,7,9
	.half	.L1628-.L1627
	.byte	3,2,1,5,75,9
	.half	.L1011-.L1628
	.byte	1,5,36,9
	.half	.L224-.L1011
	.byte	3,2,1,5,18,9
	.half	.L1629-.L224
	.byte	1,5,81,7,9
	.half	.L1630-.L1629
	.byte	3,2,1,5,43,9
	.half	.L1631-.L1630
	.byte	1,5,49,9
	.half	.L1632-.L1631
	.byte	1,5,93,9
	.half	.L1013-.L1632
	.byte	1,5,1,9
	.half	.L222-.L1013
	.byte	3,6,1,7,9
	.half	.L481-.L222
	.byte	0,1,1
.L1603:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_execute')
	.sect	'.debug_ranges'
.L480:
	.word	-1,.L354,0,.L481-.L354,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_cmdEscapeProcess')
	.sect	'.debug_info'
.L482:
	.word	688
	.half	3
	.word	.L483
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L485,.L484
	.byte	2
	.word	.L363
	.byte	3
	.byte	'Ifx_Shell_cmdEscapeProcess',0,1,197,8,6,1,1,1
	.word	.L356,.L710,.L355
	.byte	4
	.byte	'shell',0,1,197,8,44
	.word	.L521,.L711
	.byte	4
	.byte	'EscapeChar1',0,1,197,8,56
	.word	.L712,.L713
	.byte	4
	.byte	'EscapeChar2',0,1,197,8,74
	.word	.L712,.L714
	.byte	5
	.word	.L356,.L710
	.byte	6
	.byte	'Cmd',0,1,199,8,24
	.word	.L549,.L715
	.byte	6
	.byte	'cmdStr',0,1,200,8,24
	.word	.L551,.L716
	.byte	6
	.byte	'i',0,1,201,8,24
	.word	.L525,.L717
	.byte	6
	.byte	'result',0,1,204,8,24
	.word	.L519,.L718
	.byte	5
	.word	.L719,.L720
	.byte	6
	.byte	'ii',0,1,247,8,13
	.word	.L567,.L721
	.byte	0,5
	.word	.L720,.L722
	.byte	6
	.byte	'ii',0,1,248,8,13
	.word	.L567,.L723
	.byte	0,5
	.word	.L722,.L724
	.byte	6
	.byte	'ii',0,1,249,8,13
	.word	.L567,.L725
	.byte	0,5
	.word	.L726,.L727
	.byte	6
	.byte	'ii',0,1,137,9,17
	.word	.L567,.L728
	.byte	0,5
	.word	.L727,.L729
	.byte	6
	.byte	'ii',0,1,138,9,17
	.word	.L567,.L730
	.byte	0,5
	.word	.L729,.L248
	.byte	6
	.byte	'ii',0,1,139,9,17
	.word	.L567,.L731
	.byte	0,5
	.word	.L732,.L733
	.byte	6
	.byte	'ii',0,1,156,9,17
	.word	.L567,.L734
	.byte	0,5
	.word	.L733,.L735
	.byte	6
	.byte	'ii',0,1,157,9,17
	.word	.L567,.L736
	.byte	0,5
	.word	.L735,.L737
	.byte	6
	.byte	'ii',0,1,158,9,17
	.word	.L567,.L738
	.byte	0,5
	.word	.L739,.L740
	.byte	6
	.byte	'ii',0,1,202,9,17
	.word	.L567,.L741
	.byte	0,5
	.word	.L742,.L283
	.byte	6
	.byte	'ii',0,1,224,9,21
	.word	.L567,.L743
	.byte	0,5
	.word	.L744,.L292
	.byte	6
	.byte	'ii',0,1,130,10,21
	.word	.L567,.L745
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_cmdEscapeProcess')
	.sect	'.debug_abbrev'
.L483:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_cmdEscapeProcess')
	.sect	'.debug_line'
.L484:
	.word	.L1634-.L1633
.L1633:
	.half	3
	.word	.L1636-.L1635
.L1635:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1636:
	.byte	5,6,7,0,5,2
	.word	.L356
	.byte	3,196,8,1,5,43,9
	.half	.L1637-.L356
	.byte	3,7,1,5,40,9
	.half	.L1638-.L1637
	.byte	1,5,5,9
	.half	.L1019-.L1638
	.byte	3,4,1,5,9,7,9
	.half	.L1639-.L1019
	.byte	3,2,1,5,20,9
	.half	.L228-.L1639
	.byte	3,4,1,5,17,9
	.half	.L1021-.L228
	.byte	3,1,1,5,10,9
	.half	.L1023-.L1021
	.byte	3,10,1,9
	.half	.L1024-.L1023
	.byte	3,33,1,9
	.half	.L1026-.L1024
	.byte	3,39,1,9
	.half	.L1028-.L1026
	.byte	3,10,1,5,16,9
	.half	.L230-.L1028
	.byte	3,176,127,1,5,9,9
	.half	.L1640-.L230
	.byte	1,5,32,7,9
	.half	.L1641-.L1640
	.byte	3,3,1,5,30,9
	.half	.L1642-.L1641
	.byte	1,5,33,9
	.half	.L1643-.L1642
	.byte	1,5,20,9
	.half	.L235-.L1643
	.byte	3,4,1,5,68,9
	.half	.L1644-.L235
	.byte	1,5,13,9
	.half	.L1645-.L1644
	.byte	1,5,20,7,9
	.half	.L1646-.L1645
	.byte	3,3,1,5,33,9
	.half	.L1647-.L1646
	.byte	1,5,46,9
	.half	.L236-.L1647
	.byte	3,5,1,5,42,9
	.half	.L1648-.L236
	.byte	1,5,62,9
	.half	.L1649-.L1648
	.byte	1,5,27,9
	.half	.L1016-.L1649
	.byte	3,3,1,5,9,9
	.half	.L1650-.L1016
	.byte	1,5,13,7,9
	.half	.L719-.L1650
	.byte	3,2,1,9
	.half	.L720-.L719
	.byte	3,1,1,9
	.half	.L722-.L720
	.byte	3,1,1,5,39,9
	.half	.L724-.L722
	.byte	3,1,1,5,45,9
	.half	.L1651-.L724
	.byte	1,9
	.half	.L238-.L1651
	.byte	3,3,1,5,25,9
	.half	.L1036-.L238
	.byte	1,5,30,9
	.half	.L1652-.L1036
	.byte	3,1,1,5,25,9
	.half	.L1653-.L1652
	.byte	1,5,27,9
	.half	.L1654-.L1653
	.byte	3,1,1,5,25,9
	.half	.L1655-.L1654
	.byte	1,5,9,9
	.half	.L1656-.L1655
	.byte	3,1,1,5,17,9
	.half	.L231-.L1656
	.byte	3,4,1,5,13,9
	.half	.L1657-.L231
	.byte	1,5,72,7,9
	.half	.L1658-.L1657
	.byte	1,5,86,9
	.half	.L1659-.L1658
	.byte	1,5,31,7,9
	.half	.L246-.L1659
	.byte	3,3,1,5,13,9
	.half	.L1660-.L246
	.byte	1,5,17,7,9
	.half	.L726-.L1660
	.byte	3,2,1,9
	.half	.L727-.L726
	.byte	3,1,1,9
	.half	.L729-.L727
	.byte	3,1,1,5,32,9
	.half	.L248-.L729
	.byte	3,3,1,5,30,9
	.half	.L1661-.L248
	.byte	1,5,32,9
	.half	.L1662-.L1661
	.byte	3,1,1,5,30,9
	.half	.L1663-.L1662
	.byte	1,5,32,9
	.half	.L1664-.L1663
	.byte	3,1,1,5,30,9
	.half	.L1665-.L1664
	.byte	1,5,33,9
	.half	.L1666-.L1665
	.byte	3,126,1,5,16,9
	.half	.L247-.L1666
	.byte	3,7,1,5,29,9
	.half	.L1667-.L247
	.byte	1,5,50,9
	.half	.L1668-.L1667
	.byte	3,3,1,5,46,9
	.half	.L1669-.L1668
	.byte	1,5,66,9
	.half	.L1670-.L1669
	.byte	1,5,31,9
	.half	.L1042-.L1670
	.byte	3,2,1,5,13,9
	.half	.L1671-.L1042
	.byte	1,5,17,7,9
	.half	.L732-.L1671
	.byte	3,2,1,9
	.half	.L733-.L732
	.byte	3,1,1,9
	.half	.L735-.L733
	.byte	3,1,1,5,43,9
	.half	.L737-.L735
	.byte	3,1,1,5,49,9
	.half	.L1672-.L737
	.byte	1,5,45,9
	.half	.L256-.L1672
	.byte	3,3,1,5,25,9
	.half	.L1049-.L256
	.byte	1,5,30,9
	.half	.L1673-.L1049
	.byte	3,1,1,5,25,9
	.half	.L1674-.L1673
	.byte	1,5,27,9
	.half	.L255-.L1674
	.byte	3,3,1,5,25,9
	.half	.L1675-.L255
	.byte	1,5,9,9
	.half	.L1676-.L1675
	.byte	3,1,1,5,16,9
	.half	.L232-.L1676
	.byte	3,4,1,5,30,9
	.half	.L1677-.L232
	.byte	1,5,9,9
	.half	.L1678-.L1677
	.byte	1,5,13,7,9
	.half	.L1679-.L1678
	.byte	3,3,1,5,94,9
	.half	.L265-.L1679
	.byte	1,5,102,9
	.half	.L1680-.L265
	.byte	1,5,9,9
	.half	.L264-.L1680
	.byte	3,3,1,5,16,9
	.half	.L233-.L264
	.byte	3,4,1,5,9,9
	.half	.L1681-.L233
	.byte	1,5,13,7,9
	.half	.L1682-.L1681
	.byte	3,3,1,5,73,9
	.half	.L268-.L1682
	.byte	1,5,81,9
	.half	.L1683-.L268
	.byte	1,5,9,9
	.half	.L267-.L1683
	.byte	3,3,1,9
	.half	.L234-.L267
	.byte	3,3,1,5,24,9
	.half	.L245-.L234
	.byte	3,4,1,5,5,9
	.half	.L1053-.L245
	.byte	1,5,14,7,9
	.half	.L1054-.L1053
	.byte	3,4,1,9
	.half	.L1056-.L1054
	.byte	3,9,1,9
	.half	.L1058-.L1056
	.byte	3,34,1,9
	.half	.L1060-.L1058
	.byte	3,29,1,5,20,9
	.half	.L272-.L1060
	.byte	3,186,127,1,5,13,9
	.half	.L1684-.L272
	.byte	1,5,17,7,9
	.half	.L739-.L1684
	.byte	3,2,1,5,71,9
	.half	.L740-.L739
	.byte	1,5,69,9
	.half	.L1064-.L740
	.byte	1,5,13,9
	.half	.L277-.L1064
	.byte	3,3,1,5,21,9
	.half	.L273-.L277
	.byte	3,4,1,5,35,9
	.half	.L1685-.L273
	.byte	1,5,17,9
	.half	.L1686-.L1685
	.byte	1,5,52,7,9
	.half	.L1687-.L1686
	.byte	1,5,92,9
	.half	.L1688-.L1687
	.byte	1,5,61,9
	.half	.L1689-.L1688
	.byte	1,5,35,7,9
	.half	.L1690-.L1689
	.byte	3,3,1,5,17,9
	.half	.L1691-.L1690
	.byte	1,5,47,7,9
	.half	.L1692-.L1691
	.byte	3,3,1,5,53,9
	.half	.L1693-.L1692
	.byte	1,5,33,9
	.half	.L1694-.L1693
	.byte	3,3,1,5,58,9
	.half	.L1065-.L1694
	.byte	1,5,69,9
	.half	.L285-.L1065
	.byte	3,2,1,5,51,9
	.half	.L1695-.L285
	.byte	1,5,57,9
	.half	.L1696-.L1695
	.byte	1,5,61,9
	.half	.L1697-.L1696
	.byte	3,126,1,5,50,9
	.half	.L284-.L1697
	.byte	1,5,58,9
	.half	.L1698-.L284
	.byte	1,5,21,7,9
	.half	.L742-.L1698
	.byte	3,6,1,5,29,9
	.half	.L283-.L742
	.byte	3,4,1,5,54,9
	.half	.L1067-.L283
	.byte	1,5,27,9
	.half	.L289-.L1067
	.byte	3,2,1,5,42,9
	.half	.L1699-.L289
	.byte	1,5,39,9
	.half	.L1700-.L1699
	.byte	1,5,31,9
	.half	.L1701-.L1700
	.byte	1,5,57,9
	.half	.L1702-.L1701
	.byte	3,126,1,5,46,9
	.half	.L288-.L1702
	.byte	1,5,54,9
	.half	.L1703-.L288
	.byte	1,5,27,7,9
	.half	.L1704-.L1703
	.byte	3,5,1,5,23,9
	.half	.L1705-.L1704
	.byte	1,5,43,9
	.half	.L1706-.L1705
	.byte	1,5,41,9
	.half	.L1707-.L1706
	.byte	1,5,27,9
	.half	.L1708-.L1707
	.byte	3,1,1,5,23,9
	.half	.L1709-.L1708
	.byte	1,5,43,9
	.half	.L1710-.L1709
	.byte	1,5,41,9
	.half	.L1711-.L1710
	.byte	1,5,20,9
	.half	.L1712-.L1711
	.byte	3,2,1,5,28,9
	.half	.L1713-.L1712
	.byte	1,5,13,9
	.half	.L281-.L1713
	.byte	3,3,1,5,20,9
	.half	.L274-.L281
	.byte	3,4,1,5,34,9
	.half	.L1714-.L274
	.byte	1,5,13,9
	.half	.L1715-.L1714
	.byte	1,5,35,7,9
	.half	.L1716-.L1715
	.byte	3,3,1,5,17,9
	.half	.L1717-.L1716
	.byte	1,5,33,7,9
	.half	.L1718-.L1717
	.byte	3,2,1,5,64,9
	.half	.L1068-.L1718
	.byte	1,5,72,9
	.half	.L294-.L1068
	.byte	3,3,1,5,69,9
	.half	.L1719-.L294
	.byte	1,5,51,9
	.half	.L1720-.L1719
	.byte	1,5,57,9
	.half	.L1721-.L1720
	.byte	1,5,67,9
	.half	.L1722-.L1721
	.byte	3,125,1,5,51,9
	.half	.L293-.L1722
	.byte	1,5,60,9
	.half	.L1723-.L293
	.byte	1,5,64,9
	.half	.L1724-.L1723
	.byte	1,5,47,7,9
	.half	.L1725-.L1724
	.byte	3,7,1,5,53,9
	.half	.L1726-.L1725
	.byte	1,5,21,9
	.half	.L744-.L1726
	.byte	3,3,1,5,36,9
	.half	.L292-.L744
	.byte	3,4,1,5,32,9
	.half	.L1727-.L292
	.byte	1,5,58,9
	.half	.L1728-.L1727
	.byte	1,5,54,9
	.half	.L1729-.L1728
	.byte	1,5,76,9
	.half	.L1730-.L1729
	.byte	1,5,90,9
	.half	.L1731-.L1730
	.byte	1,5,85,9
	.half	.L1732-.L1731
	.byte	1,5,99,9
	.half	.L1733-.L1732
	.byte	1,5,27,9
	.half	.L1734-.L1733
	.byte	3,2,1,5,23,9
	.half	.L1735-.L1734
	.byte	1,5,43,9
	.half	.L1736-.L1735
	.byte	1,5,41,9
	.half	.L1737-.L1736
	.byte	1,5,20,9
	.half	.L1738-.L1737
	.byte	3,1,1,5,28,9
	.half	.L1739-.L1738
	.byte	1,5,13,9
	.half	.L291-.L1739
	.byte	3,3,1,5,45,9
	.half	.L275-.L291
	.byte	3,4,1,5,17,9
	.half	.L299-.L275
	.byte	3,2,1,5,98,9
	.half	.L300-.L299
	.byte	1,5,106,9
	.half	.L1740-.L300
	.byte	1,5,23,9
	.half	.L298-.L1740
	.byte	3,126,1,5,37,9
	.half	.L1741-.L298
	.byte	1,5,45,9
	.half	.L1742-.L1741
	.byte	1,5,13,7,9
	.half	.L1743-.L1742
	.byte	3,5,1,9
	.half	.L276-.L1743
	.byte	3,3,1,5,1,9
	.half	.L229-.L276
	.byte	3,3,1,7,9
	.half	.L486-.L229
	.byte	0,1,1
.L1634:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_cmdEscapeProcess')
	.sect	'.debug_ranges'
.L485:
	.word	-1,.L356,0,.L486-.L356,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_commandListFind')
	.sect	'.debug_info'
.L487:
	.word	429
	.half	3
	.word	.L488
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L490,.L489
	.byte	2
	.word	.L363
	.byte	3
	.byte	'Ifx_Shell_commandListFind',0,1,235,7,26
	.word	.L635
	.byte	1,1,1
	.word	.L352,.L746,.L351
	.byte	4
	.byte	'shell',0,1,235,7,63
	.word	.L521,.L747
	.byte	4
	.byte	'commandLine',0,1,235,7,76
	.word	.L569,.L748
	.byte	4
	.byte	'args',0,1,235,7,96
	.word	.L573,.L749
	.byte	4
	.byte	'commandList',0,1,235,7,130,1
	.word	.L750,.L751
	.byte	5
	.word	.L352,.L746
	.byte	6
	.byte	'i',0,1,237,7,30
	.word	.L567,.L752
	.byte	6
	.byte	'shellCommand',0,1,238,7,30
	.word	.L635,.L753
	.byte	6
	.byte	'Command',0,1,239,7,30
	.word	.L635,.L754
	.byte	6
	.byte	'matchMax',0,1,240,7,30
	.word	.L517,.L755
	.byte	6
	.byte	'match',0,1,241,7,30
	.word	.L517,.L756
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_commandListFind')
	.sect	'.debug_abbrev'
.L488:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_commandListFind')
	.sect	'.debug_line'
.L489:
	.word	.L1745-.L1744
.L1744:
	.half	3
	.word	.L1747-.L1746
.L1746:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1747:
	.byte	5,26,7,0,5,2
	.word	.L352
	.byte	3,234,7,1,5,43,9
	.half	.L991-.L352
	.byte	3,4,1,9
	.half	.L992-.L991
	.byte	3,1,1,5,12,9
	.half	.L993-.L992
	.byte	3,3,1,5,48,9
	.half	.L994-.L993
	.byte	1,5,31,9
	.half	.L207-.L994
	.byte	3,2,1,5,9,9
	.half	.L1748-.L207
	.byte	1,5,68,7,9
	.half	.L1749-.L1748
	.byte	3,2,1,5,93,9
	.half	.L1750-.L1749
	.byte	1,5,17,9
	.half	.L996-.L1750
	.byte	3,2,1,5,48,7,9
	.half	.L1751-.L996
	.byte	1,5,54,9
	.half	.L1752-.L1751
	.byte	1,5,32,7,9
	.half	.L1753-.L1752
	.byte	3,2,1,5,30,9
	.half	.L1754-.L1753
	.byte	3,1,1,5,50,9
	.half	.L1755-.L1754
	.byte	3,1,1,5,30,9
	.half	.L1756-.L1755
	.byte	1,5,51,9
	.half	.L208-.L1756
	.byte	3,118,1,5,48,9
	.half	.L206-.L208
	.byte	1,5,5,7,9
	.half	.L1757-.L206
	.byte	3,15,1,5,1,9
	.half	.L211-.L1757
	.byte	3,1,1,7,9
	.half	.L491-.L211
	.byte	0,1,1
.L1745:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_commandListFind')
	.sect	'.debug_ranges'
.L490:
	.word	-1,.L352,0,.L491-.L352,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_matchCommand')
	.sect	'.debug_info'
.L492:
	.word	388
	.half	3
	.word	.L493
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L495,.L494
	.byte	2
	.word	.L363
	.byte	3
	.byte	'Ifx_Shell_matchCommand',0,1,184,5,16
	.word	.L519
	.byte	1,1
	.word	.L332,.L757,.L331
	.byte	4
	.byte	'argsPtr',0,1,184,5,46
	.word	.L573,.L758
	.byte	4
	.byte	'match',0,1,184,5,62
	.word	.L573,.L759
	.byte	5
	.word	.L332,.L757
	.byte	6
	.byte	'result',0,1,186,5,13
	.word	.L519,.L760
	.byte	6
	.byte	'savedArguments',0,1,187,5,13
	.word	.L569,.L761
	.byte	6
	.byte	'savedMatch',0,1,188,5,13
	.word	.L569,.L762
	.byte	6
	.byte	'buffer0',0,1,189,5,13
	.word	.L577,.L763
	.byte	6
	.byte	'buffer1',0,1,190,5,13
	.word	.L577,.L764
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_matchCommand')
	.sect	'.debug_abbrev'
.L493:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_matchCommand')
	.sect	'.debug_line'
.L494:
	.word	.L1759-.L1758
.L1758:
	.half	3
	.word	.L1761-.L1760
.L1760:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1761:
	.byte	5,16,7,0,5,2
	.word	.L332
	.byte	3,183,5,1,5,28,9
	.half	.L912-.L332
	.byte	3,2,1,5,30,9
	.half	.L913-.L912
	.byte	3,1,1,9
	.half	.L914-.L913
	.byte	3,1,1,5,40,9
	.half	.L915-.L914
	.byte	3,4,1,5,49,9
	.half	.L910-.L915
	.byte	1,5,9,9
	.half	.L909-.L910
	.byte	1,5,41,7,9
	.half	.L1762-.L909
	.byte	3,1,1,5,50,9
	.half	.L1763-.L1762
	.byte	1,5,72,9
	.half	.L917-.L1763
	.byte	1,5,20,7,9
	.half	.L1764-.L917
	.byte	3,2,1,5,29,9
	.half	.L1765-.L1764
	.byte	1,5,9,9
	.half	.L1766-.L1765
	.byte	1,5,20,7,9
	.half	.L1767-.L1766
	.byte	3,2,1,5,5,9
	.half	.L130-.L1767
	.byte	3,4,1,5,18,7,9
	.half	.L1768-.L130
	.byte	3,3,1,9
	.half	.L1769-.L1768
	.byte	3,1,1,5,5,9
	.half	.L133-.L1769
	.byte	3,3,1,5,1,9
	.half	.L134-.L133
	.byte	3,1,1,7,9
	.half	.L496-.L134
	.byte	0,1,1
.L1759:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_matchCommand')
	.sect	'.debug_ranges'
.L495:
	.word	-1,.L332,0,.L496-.L332,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_isEndOfLine')
	.sect	'.debug_info'
.L497:
	.word	249
	.half	3
	.word	.L498
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L500,.L499
	.byte	2
	.word	.L363
	.byte	3
	.byte	'Ifx_Shell_isEndOfLine',0,1,89,9
	.word	.L519
	.byte	1,1,1
	.word	.L306,.L765,.L305
	.byte	4
	.byte	'args',0,1,89,37
	.word	.L569,.L766
	.byte	5
	.word	.L306,.L765
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_isEndOfLine')
	.sect	'.debug_abbrev'
.L498:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_isEndOfLine')
	.sect	'.debug_line'
.L499:
	.word	.L1771-.L1770
.L1770:
	.half	3
	.word	.L1773-.L1772
.L1772:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1773:
	.byte	5,13,7,0,5,2
	.word	.L306
	.byte	3,218,0,1,5,36,7,9
	.half	.L1774-.L306
	.byte	1,5,42,9
	.half	.L1775-.L1774
	.byte	1,5,67,7,9
	.half	.L2-.L1775
	.byte	1,5,74,9
	.half	.L1776-.L2
	.byte	1,5,67,9
	.half	.L3-.L1776
	.byte	1,5,5,9
	.half	.L4-.L3
	.byte	1,5,1,9
	.half	.L5-.L4
	.byte	3,1,1,7,9
	.half	.L501-.L5
	.byte	0,1,1
.L1771:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_isEndOfLine')
	.sect	'.debug_ranges'
.L500:
	.word	-1,.L306,0,.L501-.L306,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_writeResult')
	.sect	'.debug_info'
.L502:
	.word	368
	.half	3
	.word	.L503
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L505,.L504
	.byte	2
	.word	.L363
	.byte	3
	.byte	'Ifx_Shell_writeResult',0,1,95,16
	.word	.L519
	.byte	1,1
	.word	.L308,.L767,.L307
	.byte	4
	.byte	'shell',0,1,95,49
	.word	.L521,.L768
	.byte	4
	.byte	'Code',0,1,95,66
	.word	.L543,.L769
	.byte	5
	.word	.L308,.L767
	.byte	6
	.byte	'length',0,1,97,15
	.word	.L543,.L770
	.byte	6
	.byte	'result',0,1,98,15
	.word	.L519,.L771
	.byte	7
	.word	.L669,.L772,.L6
	.byte	8
	.word	.L671,.L773
	.byte	8
	.word	.L673,.L774
	.byte	8
	.word	.L675,.L775
	.byte	8
	.word	.L677,.L776
	.byte	9
	.word	.L679,.L772,.L6
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_writeResult')
	.sect	'.debug_abbrev'
.L503:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_writeResult')
	.sect	'.debug_line'
.L504:
	.word	.L1778-.L1777
.L1777:
	.half	3
	.word	.L1780-.L1779
.L1779:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Service\\CpuGeneric\\StdIf\\IfxStdIf_DPipe.h',0
	.byte	0,0,0,0
.L1780:
	.byte	5,16,7,0,5,2
	.word	.L308
	.byte	3,222,0,1,5,24,9
	.half	.L1781-.L308
	.byte	3,2,1,5,22,9
	.half	.L1782-.L1781
	.byte	1,5,50,9
	.half	.L1783-.L1782
	.byte	3,1,1,5,57,9
	.half	.L1784-.L1783
	.byte	1,5,64,9
	.half	.L1785-.L1784
	.byte	1,5,72,9
	.half	.L1786-.L1785
	.byte	1,4,2,5,17,9
	.half	.L772-.L1786
	.byte	3,166,1,1,5,30,9
	.half	.L1787-.L772
	.byte	1,5,53,9
	.half	.L785-.L1787
	.byte	1,5,5,9
	.half	.L1788-.L785
	.byte	1,4,1,9
	.half	.L6-.L1788
	.byte	3,222,126,1,5,1,9
	.half	.L7-.L6
	.byte	3,1,1,7,9
	.half	.L506-.L7
	.byte	0,1,1
.L1778:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_writeResult')
	.sect	'.debug_ranges'
.L505:
	.word	-1,.L308,0,.L506-.L308,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_showHelpSingleCommand')
	.sect	'.debug_info'
.L507:
	.word	351
	.half	3
	.word	.L508
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L510,.L509
	.byte	2
	.word	.L363
	.byte	3
	.byte	'Ifx_Shell_showHelpSingleCommand',0,1,200,1,9
	.word	.L519
	.byte	1,1,1
	.word	.L312,.L777,.L311
	.byte	4
	.byte	'args',0,1,200,1,47
	.word	.L569,.L778
	.byte	4
	.byte	'shellPtr',0,1,200,1,59
	.word	.L682,.L779
	.byte	4
	.byte	'io',0,1,200,1,85
	.word	.L654,.L780
	.byte	5
	.word	.L312,.L777
	.byte	6
	.byte	'commandList',0,1,202,1,32
	.word	.L637,.L781
	.byte	6
	.byte	'shellCommand',0,1,203,1,32
	.word	.L635,.L782
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_showHelpSingleCommand')
	.sect	'.debug_abbrev'
.L508:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_showHelpSingleCommand')
	.sect	'.debug_line'
.L509:
	.word	.L1790-.L1789
.L1789:
	.half	3
	.word	.L1792-.L1791
.L1791:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1792:
	.byte	5,9,7,0,5,2
	.word	.L312
	.byte	3,199,1,1,5,83,9
	.half	.L817-.L312
	.byte	3,3,1,5,90,9
	.half	.L1793-.L817
	.byte	1,5,97,9
	.half	.L815-.L1793
	.byte	1,5,45,9
	.half	.L818-.L815
	.byte	1,5,5,9
	.half	.L820-.L818
	.byte	3,2,1,5,25,7,9
	.half	.L1794-.L820
	.byte	3,2,1,5,9,9
	.half	.L1795-.L1794
	.byte	1,5,38,7,9
	.half	.L1796-.L1795
	.byte	3,2,1,5,55,9
	.half	.L1797-.L1796
	.byte	1,5,62,9
	.half	.L1798-.L1797
	.byte	1,5,68,9
	.half	.L819-.L1798
	.byte	1,5,17,9
	.half	.L31-.L819
	.byte	3,4,1,5,28,9
	.half	.L1799-.L31
	.byte	1,5,13,9
	.half	.L1800-.L1799
	.byte	1,5,49,7,9
	.half	.L1801-.L1800
	.byte	3,2,1,5,60,9
	.half	.L822-.L1801
	.byte	1,5,42,9
	.half	.L1802-.L822
	.byte	1,5,56,9
	.half	.L33-.L1802
	.byte	3,3,1,5,63,9
	.half	.L1803-.L33
	.byte	1,5,16,9
	.half	.L32-.L1803
	.byte	3,3,1,5,9,9
	.half	.L1804-.L32
	.byte	1,5,34,9
	.half	.L30-.L1804
	.byte	3,4,1,5,16,9
	.half	.L826-.L30
	.byte	3,1,1,5,9,9
	.half	.L1805-.L826
	.byte	1,5,1,9
	.half	.L34-.L1805
	.byte	3,2,1,7,9
	.half	.L511-.L34
	.byte	0,1,1
.L1790:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_showHelpSingleCommand')
	.sect	'.debug_ranges'
.L510:
	.word	-1,.L312,0,.L511-.L312,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_cmdBuffer')
	.sect	'.debug_info'
.L512:
	.word	204
	.half	3
	.word	.L513
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1,2
	.word	.L363
	.byte	3
	.byte	'Ifx_Shell_cmdBuffer',0,9,77,6
	.word	.L783
	.byte	1,5,3
	.word	Ifx_Shell_cmdBuffer
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_cmdBuffer')
	.sect	'.debug_abbrev'
.L513:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_bbProtocolStart')
	.sect	'.debug_loc'
.L317:
	.word	-1,.L318,0,.L850-.L318
	.half	2
	.byte	138,0
	.word	.L850-.L318,.L699-.L318
	.half	2
	.byte	138,8
	.word	.L699-.L318,.L699-.L318
	.half	2
	.byte	138,0
	.word	0,0
.L700:
	.word	-1,.L318,0,.L851-.L318
	.half	1
	.byte	100
	.word	0,.L699-.L318
	.half	2
	.byte	145,120
	.word	0,0
.L701:
	.word	-1,.L318,0,.L852-.L318
	.half	1
	.byte	101
	.word	.L854-.L318,.L699-.L318
	.half	1
	.byte	111
	.word	.L862-.L318,.L857-.L318
	.half	1
	.byte	101
	.word	0,0
.L702:
	.word	-1,.L318,0,.L853-.L318
	.half	1
	.byte	102
	.word	.L855-.L318,.L699-.L318
	.half	1
	.byte	108
	.word	.L858-.L318,.L859-.L318
	.half	1
	.byte	100
	.word	.L860-.L318,.L861-.L318
	.half	1
	.byte	100
	.word	.L863-.L318,.L857-.L318
	.half	1
	.byte	102
	.word	0,0
.L703:
	.word	-1,.L318,.L856-.L318,.L857-.L318
	.half	1
	.byte	95
	.word	.L857-.L318,.L52-.L318
	.half	1
	.byte	82
	.word	.L864-.L318,.L699-.L318
	.half	1
	.byte	95
	.word	.L865-.L318,.L699-.L318
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_cmdEscapeProcess')
	.sect	'.debug_loc'
.L715:
	.word	-1,.L356,.L1021-.L356,.L1022-.L356
	.half	1
	.byte	98
	.word	.L231-.L356,.L250-.L356
	.half	1
	.byte	98
	.word	.L247-.L356,.L1040-.L356
	.half	1
	.byte	98
	.word	.L232-.L356,.L1050-.L356
	.half	1
	.byte	98
	.word	.L233-.L356,.L268-.L356
	.half	1
	.byte	98
	.word	.L234-.L356,.L245-.L356
	.half	1
	.byte	98
	.word	0,0
.L713:
	.word	-1,.L356,0,.L1015-.L356
	.half	1
	.byte	84
	.word	.L1020-.L356,.L1024-.L356
	.half	1
	.byte	88
	.word	.L1025-.L356,.L1026-.L356
	.half	1
	.byte	88
	.word	.L1027-.L356,.L1028-.L356
	.half	1
	.byte	88
	.word	.L1029-.L356,.L1030-.L356
	.half	1
	.byte	88
	.word	.L231-.L356,.L250-.L356
	.half	1
	.byte	84
	.word	.L247-.L356,.L1041-.L356
	.half	1
	.byte	84
	.word	.L232-.L356,.L265-.L356
	.half	1
	.byte	84
	.word	.L233-.L356,.L268-.L356
	.half	1
	.byte	84
	.word	.L234-.L356,.L245-.L356
	.half	1
	.byte	84
	.word	.L1055-.L356,.L1056-.L356
	.half	1
	.byte	88
	.word	.L1057-.L356,.L1058-.L356
	.half	1
	.byte	88
	.word	.L1059-.L356,.L1060-.L356
	.half	1
	.byte	88
	.word	.L1061-.L356,.L1062-.L356
	.half	1
	.byte	88
	.word	0,0
.L714:
	.word	-1,.L356,0,.L1016-.L356
	.half	1
	.byte	85
	.word	.L231-.L356,.L250-.L356
	.half	1
	.byte	85
	.word	.L247-.L356,.L1042-.L356
	.half	1
	.byte	85
	.word	.L232-.L356,.L265-.L356
	.half	1
	.byte	85
	.word	.L233-.L356,.L268-.L356
	.half	1
	.byte	85
	.word	.L234-.L356,.L245-.L356
	.half	1
	.byte	85
	.word	.L1053-.L356,.L1054-.L356
	.half	1
	.byte	89
	.word	0,0
.L355:
	.word	-1,.L356,0,.L1014-.L356
	.half	2
	.byte	138,0
	.word	.L1014-.L356,.L710-.L356
	.half	2
	.byte	138,8
	.word	.L710-.L356,.L710-.L356
	.half	2
	.byte	138,0
	.word	0,0
.L716:
	.word	-1,.L356,.L1023-.L356,.L229-.L356
	.half	1
	.byte	108
	.word	.L1017-.L356,.L1016-.L356
	.half	1
	.byte	100
	.word	.L1034-.L356,.L238-.L356
	.half	1
	.byte	101
	.word	.L1035-.L356,.L1036-.L356
	.half	1
	.byte	100
	.word	.L1043-.L356,.L1042-.L356
	.half	1
	.byte	100
	.word	.L1047-.L356,.L256-.L356
	.half	1
	.byte	101
	.word	.L1048-.L356,.L1049-.L356
	.half	1
	.byte	100
	.word	0,0
.L717:
	.word	-1,.L356,.L1065-.L356,.L287-.L356
	.half	1
	.byte	95
	.word	.L1067-.L356,.L281-.L356
	.half	5
	.byte	144,32,157,32,0
	.word	.L1068-.L356,.L1069-.L356
	.half	1
	.byte	88
	.word	0,0
.L721:
	.word	-1,.L356,.L1031-.L356,.L1032-.L356
	.half	1
	.byte	95
	.word	0,0
.L723:
	.word	-1,.L356,.L1032-.L356,.L1033-.L356
	.half	1
	.byte	95
	.word	0,0
.L725:
	.word	-1,.L356,.L1033-.L356,.L238-.L356
	.half	1
	.byte	95
	.word	0,0
.L728:
	.word	-1,.L356,.L1037-.L356,.L1038-.L356
	.half	1
	.byte	95
	.word	0,0
.L730:
	.word	-1,.L356,.L1038-.L356,.L1039-.L356
	.half	1
	.byte	95
	.word	0,0
.L731:
	.word	-1,.L356,.L1039-.L356,.L248-.L356
	.half	1
	.byte	95
	.word	0,0
.L734:
	.word	-1,.L356,.L1044-.L356,.L1045-.L356
	.half	1
	.byte	95
	.word	0,0
.L736:
	.word	-1,.L356,.L1045-.L356,.L1046-.L356
	.half	1
	.byte	95
	.word	0,0
.L738:
	.word	-1,.L356,.L1046-.L356,.L256-.L356
	.half	1
	.byte	95
	.word	0,0
.L741:
	.word	-1,.L356,.L1063-.L356,.L1064-.L356
	.half	1
	.byte	95
	.word	0,0
.L743:
	.word	-1,.L356,.L1066-.L356,.L283-.L356
	.half	1
	.byte	88
	.word	0,0
.L745:
	.word	-1,.L356,.L1069-.L356,.L292-.L356
	.half	1
	.byte	88
	.word	0,0
.L718:
	.word	-1,.L356,.L1019-.L356,.L1020-.L356
	.half	1
	.byte	95
	.word	0,0
.L711:
	.word	-1,.L356,0,.L1017-.L356
	.half	1
	.byte	100
	.word	.L1018-.L356,.L710-.L356
	.half	1
	.byte	111
	.word	.L231-.L356,.L250-.L356
	.half	1
	.byte	100
	.word	.L247-.L356,.L1043-.L356
	.half	1
	.byte	100
	.word	.L232-.L356,.L1051-.L356
	.half	1
	.byte	100
	.word	.L233-.L356,.L1052-.L356
	.half	1
	.byte	100
	.word	.L234-.L356,.L245-.L356
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_commandFind')
	.sect	'.debug_loc'
.L349:
	.word	-1,.L350,0,.L975-.L350
	.half	2
	.byte	138,0
	.word	.L975-.L350,.L636-.L350
	.half	3
	.byte	138,144,2
	.word	.L636-.L350,.L636-.L350
	.half	2
	.byte	138,0
	.word	0,0
.L640:
	.word	-1,.L350,0,.L194-.L350
	.half	1
	.byte	102
	.word	.L976-.L350,.L636-.L350
	.half	2
	.byte	145,120
	.word	.L985-.L350,.L197-.L350
	.half	1
	.byte	98
	.word	0,0
.L650:
	.word	-1,.L350,0,.L636-.L350
	.half	3
	.byte	145,248,125
	.word	0,0
.L644:
	.word	-1,.L350,.L980-.L350,.L636-.L350
	.half	1
	.byte	111
	.word	0,0
.L642:
	.word	-1,.L350,.L978-.L350,.L636-.L350
	.half	1
	.byte	109
	.word	0,0
.L639:
	.word	-1,.L350,0,.L194-.L350
	.half	1
	.byte	101
	.word	0,0
.L649:
	.word	-1,.L350,0,.L636-.L350
	.half	3
	.byte	145,244,125
	.word	0,0
.L638:
	.word	-1,.L350,0,.L194-.L350
	.half	1
	.byte	100
	.word	0,0
.L648:
	.word	-1,.L350,0,.L636-.L350
	.half	3
	.byte	145,240,125
	.word	0,0
.L647:
	.word	-1,.L350,.L983-.L350,.L636-.L350
	.half	1
	.byte	91
	.word	0,0
.L646:
	.word	-1,.L350,.L982-.L350,.L636-.L350
	.half	1
	.byte	90
	.word	0,0
.L641:
	.word	-1,.L350,0,.L194-.L350
	.half	1
	.byte	103
	.word	.L977-.L350,.L636-.L350
	.half	1
	.byte	108
	.word	0,0
.L651:
	.word	-1,.L350,.L984-.L350,.L193-.L350
	.half	1
	.byte	88
	.word	0,0
.L645:
	.word	-1,.L350,.L981-.L350,.L636-.L350
	.half	1
	.byte	89
	.word	0,0
.L643:
	.word	-1,.L350,.L979-.L350,.L636-.L350
	.half	1
	.byte	110
	.word	.L986-.L350,.L636-.L350
	.half	1
	.byte	98
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_commandListFind')
	.sect	'.debug_loc'
.L754:
	.word	-1,.L352,.L992-.L352,.L746-.L352
	.half	1
	.byte	110
	.word	.L999-.L352,.L746-.L352
	.half	1
	.byte	98
	.word	0,0
.L351:
	.word	-1,.L352,0,.L987-.L352
	.half	2
	.byte	138,0
	.word	.L987-.L352,.L746-.L352
	.half	2
	.byte	138,8
	.word	.L746-.L352,.L746-.L352
	.half	2
	.byte	138,0
	.word	0,0
.L749:
	.word	-1,.L352,0,.L207-.L352
	.half	1
	.byte	102
	.word	.L990-.L352,.L746-.L352
	.half	1
	.byte	108
	.word	.L997-.L352,.L996-.L352
	.half	1
	.byte	102
	.word	0,0
.L748:
	.word	-1,.L352,0,.L207-.L352
	.half	1
	.byte	101
	.word	.L989-.L352,.L746-.L352
	.half	2
	.byte	145,124
	.word	.L995-.L352,.L996-.L352
	.half	1
	.byte	101
	.word	0,0
.L751:
	.word	-1,.L352,0,.L207-.L352
	.half	1
	.byte	103
	.word	.L991-.L352,.L746-.L352
	.half	1
	.byte	109
	.word	0,0
.L752:
	.word	-1,.L352,.L994-.L352,.L746-.L352
	.half	1
	.byte	89
	.word	0,0
.L756:
	.word	-1,.L352,0,.L746-.L352
	.half	2
	.byte	145,120
	.word	0,0
.L755:
	.word	-1,.L352,.L993-.L352,.L746-.L352
	.half	1
	.byte	88
	.word	0,0
.L747:
	.word	-1,.L352,0,.L207-.L352
	.half	1
	.byte	100
	.word	.L988-.L352,.L746-.L352
	.half	1
	.byte	111
	.word	0,0
.L753:
	.word	-1,.L352,.L996-.L352,.L998-.L352
	.half	1
	.byte	98
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_deinit')
	.sect	'.debug_loc'
.L325:
	.word	-1,.L326,0,.L529-.L326
	.half	2
	.byte	138,0
	.word	0,0
.L530:
	.word	-1,.L326,0,.L529-.L326
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_disable')
	.sect	'.debug_loc'
.L359:
	.word	-1,.L360,0,.L539-.L360
	.half	2
	.byte	138,0
	.word	0,0
.L540:
	.word	-1,.L360,0,.L539-.L360
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_enable')
	.sect	'.debug_loc'
.L357:
	.word	-1,.L358,0,.L531-.L358
	.half	2
	.byte	138,0
	.word	0,0
.L532:
	.word	-1,.L358,0,.L1070-.L358
	.half	1
	.byte	100
	.word	.L1071-.L358,.L531-.L358
	.half	1
	.byte	111
	.word	0,0
.L537:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_execute')
	.sect	'.debug_loc'
.L353:
	.word	-1,.L354,0,.L1000-.L354
	.half	2
	.byte	138,0
	.word	.L1000-.L354,.L704-.L354
	.half	2
	.byte	138,16
	.word	.L704-.L354,.L704-.L354
	.half	2
	.byte	138,0
	.word	0,0
.L707:
	.word	-1,.L354,0,.L704-.L354
	.half	2
	.byte	145,116
	.word	0,0
.L706:
	.word	-1,.L354,0,.L1001-.L354
	.half	1
	.byte	101
	.word	.L1003-.L354,.L704-.L354
	.half	1
	.byte	108
	.word	.L1005-.L354,.L1004-.L354
	.half	1
	.byte	100
	.word	0,0
.L708:
	.word	-1,.L354,0,.L704-.L354
	.half	2
	.byte	145,120
	.word	0,0
.L705:
	.word	-1,.L354,0,.L1001-.L354
	.half	1
	.byte	100
	.word	.L1002-.L354,.L704-.L354
	.half	1
	.byte	111
	.word	.L1006-.L354,.L1004-.L354
	.half	1
	.byte	101
	.word	.L1008-.L354,.L216-.L354
	.half	1
	.byte	100
	.word	.L1009-.L354,.L1010-.L354
	.half	1
	.byte	100
	.word	.L1012-.L354,.L1011-.L354
	.half	1
	.byte	100
	.word	0,0
.L709:
	.word	-1,.L354,.L1001-.L354,.L1004-.L354
	.half	1
	.byte	98
	.word	.L213-.L354,.L1007-.L354
	.half	1
	.byte	98
	.word	.L212-.L354,.L1011-.L354
	.half	1
	.byte	98
	.word	.L224-.L354,.L1013-.L354
	.half	1
	.byte	98
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_init')
	.sect	'.debug_loc'
.L528:
	.word	-1,.L322,.L872-.L322,.L871-.L322
	.half	1
	.byte	98
	.word	0,0
.L321:
	.word	-1,.L322,0,.L520-.L322
	.half	2
	.byte	138,0
	.word	0,0
.L524:
	.word	-1,.L322,0,.L867-.L322
	.half	1
	.byte	101
	.word	.L869-.L322,.L520-.L322
	.half	1
	.byte	108
	.word	0,0
.L526:
	.word	-1,.L322,.L870-.L322,.L871-.L322
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L522:
	.word	-1,.L322,0,.L867-.L322
	.half	1
	.byte	100
	.word	.L868-.L322,.L520-.L322
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_initConfig')
	.sect	'.debug_loc'
.L319:
	.word	-1,.L320,0,.L514-.L320
	.half	2
	.byte	138,0
	.word	0,0
.L516:
	.word	-1,.L320,0,.L514-.L320
	.half	1
	.byte	100
	.word	0,0
.L518:
	.word	-1,.L320,.L866-.L320,.L514-.L320
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_isEndOfLine')
	.sect	'.debug_loc'
.L305:
	.word	-1,.L306,0,.L765-.L306
	.half	2
	.byte	138,0
	.word	0,0
.L766:
	.word	-1,.L306,0,.L765-.L306
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_matchCommand')
	.sect	'.debug_loc'
.L331:
	.word	-1,.L332,0,.L908-.L332
	.half	2
	.byte	138,0
	.word	.L908-.L332,.L757-.L332
	.half	3
	.byte	138,128,4
	.word	.L757-.L332,.L757-.L332
	.half	2
	.byte	138,0
	.word	0,0
.L758:
	.word	-1,.L332,0,.L909-.L332
	.half	1
	.byte	100
	.word	.L911-.L332,.L757-.L332
	.half	1
	.byte	111
	.word	0,0
.L763:
	.word	-1,.L332,0,.L757-.L332
	.half	3
	.byte	145,128,124
	.word	0,0
.L764:
	.word	-1,.L332,0,.L757-.L332
	.half	3
	.byte	145,128,126
	.word	0,0
.L759:
	.word	-1,.L332,0,.L910-.L332
	.half	1
	.byte	101
	.word	.L912-.L332,.L757-.L332
	.half	1
	.byte	108
	.word	.L916-.L332,.L917-.L332
	.half	1
	.byte	100
	.word	0,0
.L760:
	.word	-1,.L332,.L913-.L332,.L757-.L332
	.half	1
	.byte	95
	.word	.L918-.L332,.L757-.L332
	.half	1
	.byte	82
	.word	0,0
.L761:
	.word	-1,.L332,.L914-.L332,.L757-.L332
	.half	1
	.byte	109
	.word	0,0
.L762:
	.word	-1,.L332,.L915-.L332,.L757-.L332
	.half	1
	.byte	110
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_matchToken')
	.sect	'.debug_loc'
.L329:
	.word	-1,.L330,0,.L898-.L330
	.half	2
	.byte	138,0
	.word	.L898-.L330,.L572-.L330
	.half	3
	.byte	138,128,2
	.word	.L572-.L330,.L572-.L330
	.half	2
	.byte	138,0
	.word	0,0
.L574:
	.word	-1,.L330,0,.L899-.L330
	.half	1
	.byte	100
	.word	.L901-.L330,.L572-.L330
	.half	1
	.byte	111
	.word	0,0
.L578:
	.word	-1,.L330,0,.L572-.L330
	.half	3
	.byte	145,128,126
	.word	0,0
.L579:
	.word	-1,.L330,.L904-.L330,.L572-.L330
	.half	1
	.byte	95
	.word	.L907-.L330,.L572-.L330
	.half	1
	.byte	82
	.word	0,0
.L576:
	.word	-1,.L330,.L903-.L330,.L572-.L330
	.half	1
	.byte	109
	.word	0,0
.L575:
	.word	-1,.L330,0,.L900-.L330
	.half	1
	.byte	101
	.word	.L902-.L330,.L572-.L330
	.half	1
	.byte	108
	.word	.L905-.L330,.L906-.L330
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_parseAddress')
	.sect	'.debug_loc'
.L335:
	.word	-1,.L336,0,.L929-.L336
	.half	2
	.byte	138,0
	.word	.L929-.L336,.L586-.L336
	.half	2
	.byte	138,40
	.word	.L586-.L336,.L586-.L336
	.half	2
	.byte	138,0
	.word	0,0
.L589:
	.word	-1,.L336,0,.L930-.L336
	.half	1
	.byte	101
	.word	.L932-.L336,.L586-.L336
	.half	1
	.byte	111
	.word	0,0
.L587:
	.word	-1,.L336,0,.L931-.L336
	.half	1
	.byte	100
	.word	0,0
.L591:
	.word	-1,.L336,0,.L586-.L336
	.half	2
	.byte	145,92
	.word	0,0
.L592:
	.word	-1,.L336,.L933-.L336,.L154-.L336
	.half	1
	.byte	88
	.word	.L934-.L336,.L586-.L336
	.half	1
	.byte	88
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_parseFloat32')
	.sect	'.debug_loc'
.L347:
	.word	-1,.L348,0,.L969-.L348
	.half	2
	.byte	138,0
	.word	.L969-.L348,.L629-.L348
	.half	3
	.byte	138,200,0
	.word	.L629-.L348,.L629-.L348
	.half	2
	.byte	138,0
	.word	0,0
.L630:
	.word	-1,.L348,0,.L970-.L348
	.half	1
	.byte	100
	.word	0,0
.L633:
	.word	-1,.L348,0,.L629-.L348
	.half	3
	.byte	145,188,127
	.word	0,0
.L634:
	.word	-1,.L348,.L973-.L348,.L186-.L348
	.half	1
	.byte	88
	.word	.L974-.L348,.L629-.L348
	.half	1
	.byte	88
	.word	0,0
.L632:
	.word	-1,.L348,0,.L971-.L348
	.half	1
	.byte	101
	.word	.L972-.L348,.L629-.L348
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_parseFloat64')
	.sect	'.debug_loc'
.L345:
	.word	-1,.L346,0,.L963-.L346
	.half	2
	.byte	138,0
	.word	.L963-.L346,.L623-.L346
	.half	3
	.byte	138,200,0
	.word	.L623-.L346,.L623-.L346
	.half	2
	.byte	138,0
	.word	0,0
.L624:
	.word	-1,.L346,0,.L964-.L346
	.half	1
	.byte	100
	.word	0,0
.L627:
	.word	-1,.L346,0,.L623-.L346
	.half	3
	.byte	145,188,127
	.word	0,0
.L628:
	.word	-1,.L346,.L967-.L346,.L181-.L346
	.half	1
	.byte	88
	.word	.L968-.L346,.L623-.L346
	.half	1
	.byte	88
	.word	0,0
.L626:
	.word	-1,.L346,0,.L965-.L346
	.half	1
	.byte	101
	.word	.L966-.L346,.L623-.L346
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_parseSInt32')
	.sect	'.debug_loc'
.L337:
	.word	-1,.L338,0,.L935-.L338
	.half	2
	.byte	138,0
	.word	.L935-.L338,.L593-.L338
	.half	2
	.byte	138,8
	.word	.L593-.L338,.L593-.L338
	.half	2
	.byte	138,0
	.word	0,0
.L594:
	.word	-1,.L338,0,.L936-.L338
	.half	1
	.byte	100
	.word	0,0
.L599:
	.word	-1,.L338,.L939-.L338,.L159-.L338
	.half	1
	.byte	82
	.word	.L160-.L338,.L593-.L338
	.half	1
	.byte	82
	.word	0,0
.L596:
	.word	-1,.L338,0,.L937-.L338
	.half	1
	.byte	101
	.word	.L938-.L338,.L593-.L338
	.half	1
	.byte	111
	.word	0,0
.L598:
	.word	-1,.L338,0,.L593-.L338
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_parseSInt64')
	.sect	'.debug_loc'
.L341:
	.word	-1,.L342,0,.L945-.L342
	.half	2
	.byte	138,0
	.word	.L945-.L342,.L608-.L342
	.half	3
	.byte	138,200,0
	.word	.L608-.L342,.L608-.L342
	.half	2
	.byte	138,0
	.word	0,0
.L609:
	.word	-1,.L342,0,.L946-.L342
	.half	1
	.byte	100
	.word	0,0
.L613:
	.word	-1,.L342,0,.L608-.L342
	.half	3
	.byte	145,188,127
	.word	0,0
.L614:
	.word	-1,.L342,.L949-.L342,.L165-.L342
	.half	1
	.byte	88
	.word	.L950-.L342,.L608-.L342
	.half	1
	.byte	88
	.word	0,0
.L611:
	.word	-1,.L342,0,.L947-.L342
	.half	1
	.byte	101
	.word	.L948-.L342,.L608-.L342
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_parseToken')
	.sect	'.debug_loc'
.L333:
	.word	-1,.L334,0,.L580-.L334
	.half	2
	.byte	138,0
	.word	0,0
.L585:
	.word	-1,.L334,.L920-.L334,.L927-.L334
	.half	1
	.byte	98
	.word	.L928-.L334,.L927-.L334
	.half	1
	.byte	100
	.word	0,0
.L581:
	.word	-1,.L334,0,.L919-.L334
	.half	1
	.byte	100
	.word	.L921-.L334,.L580-.L334
	.half	1
	.byte	108
	.word	0,0
.L583:
	.word	-1,.L334,0,.L920-.L334
	.half	1
	.byte	84
	.word	.L924-.L334,.L925-.L334
	.half	1
	.byte	88
	.word	0,0
.L584:
	.word	-1,.L334,.L926-.L334,.L580-.L334
	.half	1
	.byte	89
	.word	0,0
.L582:
	.word	-1,.L334,0,.L920-.L334
	.half	1
	.byte	101
	.word	.L922-.L334,.L923-.L334
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_parseUInt32')
	.sect	'.debug_loc'
.L339:
	.word	-1,.L340,0,.L940-.L340
	.half	2
	.byte	138,0
	.word	.L940-.L340,.L600-.L340
	.half	2
	.byte	138,8
	.word	.L600-.L340,.L600-.L340
	.half	2
	.byte	138,0
	.word	0,0
.L601:
	.word	-1,.L340,0,.L941-.L340
	.half	1
	.byte	100
	.word	0,0
.L604:
	.word	-1,.L340,0,.L941-.L340
	.half	1
	.byte	84
	.word	0,0
.L607:
	.word	-1,.L340,.L944-.L340,.L162-.L340
	.half	1
	.byte	82
	.word	.L163-.L340,.L600-.L340
	.half	1
	.byte	82
	.word	0,0
.L603:
	.word	-1,.L340,0,.L942-.L340
	.half	1
	.byte	101
	.word	.L943-.L340,.L600-.L340
	.half	1
	.byte	111
	.word	0,0
.L606:
	.word	-1,.L340,0,.L600-.L340
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_parseUInt64')
	.sect	'.debug_loc'
.L343:
	.word	-1,.L344,0,.L951-.L344
	.half	2
	.byte	138,0
	.word	.L951-.L344,.L615-.L344
	.half	3
	.byte	138,200,0
	.word	.L615-.L344,.L615-.L344
	.half	2
	.byte	138,0
	.word	0,0
.L616:
	.word	-1,.L344,0,.L952-.L344
	.half	1
	.byte	100
	.word	0,0
.L620:
	.word	-1,.L344,0,.L615-.L344
	.half	3
	.byte	145,188,127
	.word	0,0
.L622:
	.word	-1,.L344,.L959-.L344,.L960-.L344
	.half	1
	.byte	100
	.word	.L174-.L344,.L961-.L344
	.half	1
	.byte	100
	.word	0,0
.L619:
	.word	-1,.L344,0,.L953-.L344
	.half	1
	.byte	84
	.word	.L956-.L344,.L957-.L344
	.half	1
	.byte	88
	.word	.L170-.L344,.L958-.L344
	.half	1
	.byte	88
	.word	.L174-.L344,.L962-.L344
	.half	1
	.byte	88
	.word	0,0
.L621:
	.word	-1,.L344,.L957-.L344,.L170-.L344
	.half	1
	.byte	88
	.word	.L958-.L344,.L174-.L344
	.half	1
	.byte	88
	.word	.L962-.L344,.L615-.L344
	.half	1
	.byte	88
	.word	0,0
.L618:
	.word	-1,.L344,0,.L954-.L344
	.half	1
	.byte	101
	.word	.L955-.L344,.L615-.L344
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_printSyntax')
	.sect	'.debug_loc'
.L361:
	.word	-1,.L362,0,.L1072-.L362
	.half	2
	.byte	138,0
	.word	.L1072-.L362,.L688-.L362
	.half	2
	.byte	138,8
	.word	.L688-.L362,.L688-.L362
	.half	2
	.byte	138,0
	.word	0,0
.L691:
	.word	-1,.L362,0,.L304-.L362
	.half	1
	.byte	101
	.word	.L1073-.L362,.L688-.L362
	.half	1
	.byte	108
	.word	.L1075-.L362,.L1076-.L362
	.half	1
	.byte	100
	.word	.L1077-.L362,.L1078-.L362
	.half	1
	.byte	100
	.word	0,0
.L692:
	.word	-1,.L362,.L1074-.L362,.L688-.L362
	.half	1
	.byte	111
	.word	0,0
.L690:
	.word	-1,.L362,0,.L304-.L362
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_process')
	.sect	'.debug_loc'
.L550:
	.word	0,0
.L554:
	.word	-1,.L324,.L879-.L324,.L541-.L324
	.half	1
	.byte	109
	.word	0,0
.L323:
	.word	-1,.L324,0,.L873-.L324
	.half	2
	.byte	138,0
	.word	.L873-.L324,.L541-.L324
	.half	2
	.byte	138,8
	.word	.L541-.L324,.L541-.L324
	.half	2
	.byte	138,0
	.word	0,0
.L548:
	.word	-1,.L324,.L885-.L324,.L71-.L324
	.half	1
	.byte	90
	.word	0,0
.L553:
	.word	-1,.L324,.L878-.L324,.L541-.L324
	.half	1
	.byte	108
	.word	.L887-.L324,.L90-.L324
	.half	1
	.byte	101
	.word	.L889-.L324,.L89-.L324
	.half	1
	.byte	101
	.word	0,0
.L562:
	.word	0,0
.L546:
	.word	-1,.L324,.L882-.L324,.L66-.L324
	.half	1
	.byte	88
	.word	0,0
.L560:
	.word	0,0
.L544:
	.word	-1,.L324,.L883-.L324,.L884-.L324
	.half	1
	.byte	89
	.word	.L71-.L324,.L66-.L324
	.half	1
	.byte	89
	.word	0,0
.L568:
	.word	-1,.L324,.L892-.L324,.L96-.L324
	.half	1
	.byte	91
	.word	0,0
.L552:
	.word	-1,.L324,.L876-.L324,.L877-.L324
	.half	1
	.byte	101
	.word	.L67-.L324,.L880-.L324
	.half	1
	.byte	101
	.word	0,0
.L545:
	.word	-1,.L324,.L886-.L324,.L90-.L324
	.half	1
	.byte	91
	.word	.L890-.L324,.L891-.L324
	.half	1
	.byte	95
	.word	.L97-.L324,.L100-.L324
	.half	1
	.byte	95
	.word	0,0
.L547:
	.word	-1,.L324,0,.L541-.L324
	.half	2
	.byte	145,124
	.word	0,0
.L542:
	.word	-1,.L324,0,.L874-.L324
	.half	1
	.byte	100
	.word	.L875-.L324,.L541-.L324
	.half	1
	.byte	111
	.word	.L67-.L324,.L881-.L324
	.half	1
	.byte	100
	.word	.L888-.L324,.L89-.L324
	.half	1
	.byte	100
	.word	.L893-.L324,.L894-.L324
	.half	1
	.byte	100
	.word	.L895-.L324,.L896-.L324
	.half	1
	.byte	100
	.word	0,0
.L558:
	.word	0,0
.L564:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_protocolStart')
	.sect	'.debug_loc'
.L315:
	.word	-1,.L316,0,.L835-.L316
	.half	2
	.byte	138,0
	.word	.L835-.L316,.L693-.L316
	.half	2
	.byte	138,8
	.word	.L693-.L316,.L693-.L316
	.half	2
	.byte	138,0
	.word	0,0
.L698:
	.word	-1,.L316,.L841-.L316,.L842-.L316
	.half	1
	.byte	88
	.word	.L842-.L316,.L47-.L316
	.half	1
	.byte	82
	.word	.L848-.L316,.L693-.L316
	.half	1
	.byte	88
	.word	.L849-.L316,.L693-.L316
	.half	1
	.byte	82
	.word	0,0
.L694:
	.word	-1,.L316,0,.L836-.L316
	.half	1
	.byte	100
	.word	0,.L693-.L316
	.half	2
	.byte	145,120
	.word	0,0
.L695:
	.word	-1,.L316,0,.L837-.L316
	.half	1
	.byte	101
	.word	.L839-.L316,.L693-.L316
	.half	1
	.byte	111
	.word	0,0
.L696:
	.word	-1,.L316,0,.L838-.L316
	.half	1
	.byte	102
	.word	.L840-.L316,.L693-.L316
	.half	1
	.byte	108
	.word	.L843-.L316,.L844-.L316
	.half	1
	.byte	100
	.word	.L845-.L316,.L846-.L316
	.half	1
	.byte	100
	.word	.L847-.L316,.L842-.L316
	.half	1
	.byte	101
	.word	0,0
.L697:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_showHelp')
	.sect	'.debug_loc'
.L313:
	.word	-1,.L314,0,.L680-.L314
	.half	2
	.byte	138,0
	.word	0,0
.L681:
	.word	-1,.L314,0,.L38-.L314
	.half	1
	.byte	100
	.word	.L36-.L314,.L831-.L314
	.half	1
	.byte	100
	.word	0,0
.L685:
	.word	-1,.L314,.L832-.L314,.L36-.L314
	.half	1
	.byte	89
	.word	0,0
.L684:
	.word	-1,.L314,0,.L38-.L314
	.half	1
	.byte	102
	.word	.L829-.L314,.L680-.L314
	.half	1
	.byte	108
	.word	.L833-.L314,.L39-.L314
	.half	1
	.byte	101
	.word	.L36-.L314,.L831-.L314
	.half	1
	.byte	102
	.word	0,0
.L687:
	.word	-1,.L314,.L830-.L314,.L831-.L314
	.half	1
	.byte	88
	.word	.L831-.L314,.L40-.L314
	.half	1
	.byte	82
	.word	.L40-.L314,.L680-.L314
	.half	1
	.byte	88
	.word	.L834-.L314,.L680-.L314
	.half	1
	.byte	82
	.word	0,0
.L686:
	.word	0,0
.L683:
	.word	-1,.L314,0,.L38-.L314
	.half	1
	.byte	101
	.word	.L828-.L314,.L680-.L314
	.half	1
	.byte	111
	.word	.L36-.L314,.L831-.L314
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_showHelpSingle')
	.sect	'.debug_loc'
.L309:
	.word	-1,.L310,0,.L786-.L310
	.half	2
	.byte	138,0
	.word	.L786-.L310,.L652-.L310
	.half	2
	.byte	138,32
	.word	.L652-.L310,.L652-.L310
	.half	2
	.byte	138,0
	.word	0,0
.L656:
	.word	-1,.L310,0,.L9-.L310
	.half	1
	.byte	84
	.word	.L19-.L310,.L802-.L310
	.half	1
	.byte	88
	.word	.L805-.L310,.L806-.L310
	.half	1
	.byte	88
	.word	0,0
.L663:
	.word	-1,.L310,.L798-.L310,.L799-.L310
	.half	1
	.byte	98
	.word	.L800-.L310,.L801-.L310
	.half	1
	.byte	98
	.word	0,0
.L658:
	.word	-1,.L310,0,.L9-.L310
	.half	1
	.byte	100
	.word	.L788-.L310,.L652-.L310
	.half	2
	.byte	145,120
	.word	.L9-.L310,.L791-.L310
	.half	1
	.byte	111
	.word	.L809-.L310,.L8-.L310
	.half	1
	.byte	111
	.word	.L812-.L310,.L28-.L310
	.half	1
	.byte	111
	.word	0,0
.L653:
	.word	-1,.L310,0,.L9-.L310
	.half	1
	.byte	100
	.word	0,0
.L666:
	.word	-1,.L310,0,.L652-.L310
	.half	2
	.byte	145,108
	.word	0,0
.L676:
	.word	0,0
.L674:
	.word	0,0
.L662:
	.word	-1,.L310,0,.L652-.L310
	.half	2
	.byte	145,104
	.word	0,0
.L659:
	.word	-1,.L310,.L789-.L310,.L652-.L310
	.half	1
	.byte	90
	.word	0,0
.L655:
	.word	-1,.L310,0,.L9-.L310
	.half	1
	.byte	101
	.word	.L787-.L310,.L652-.L310
	.half	1
	.byte	108
	.word	.L794-.L310,.L795-.L310
	.half	1
	.byte	100
	.word	.L803-.L310,.L804-.L310
	.half	1
	.byte	100
	.word	.L807-.L310,.L808-.L310
	.half	1
	.byte	100
	.word	0,0
.L664:
	.word	-1,.L310,.L792-.L310,.L8-.L310
	.half	1
	.byte	91
	.word	0,0
.L665:
	.word	-1,.L310,.L793-.L310,.L8-.L310
	.half	1
	.byte	92
	.word	0,0
.L667:
	.word	-1,.L310,0,.L652-.L310
	.half	2
	.byte	145,112
	.word	0,0
.L668:
	.word	-1,.L310,0,.L652-.L310
	.half	2
	.byte	145,116
	.word	0,0
.L657:
	.word	-1,.L310,0,.L9-.L310
	.half	1
	.byte	85
	.word	.L810-.L310,.L811-.L310
	.half	1
	.byte	89
	.word	0,0
.L660:
	.word	-1,.L310,.L790-.L310,.L652-.L310
	.half	1
	.byte	109
	.word	0,0
.L661:
	.word	-1,.L310,.L796-.L310,.L797-.L310
	.half	1
	.byte	111
	.word	0,0
.L672:
	.word	0,0
.L678:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_showHelpSingleCommand')
	.sect	'.debug_loc'
.L311:
	.word	-1,.L312,0,.L813-.L312
	.half	2
	.byte	138,0
	.word	.L813-.L312,.L777-.L312
	.half	2
	.byte	138,16
	.word	.L777-.L312,.L777-.L312
	.half	2
	.byte	138,0
	.word	0,0
.L778:
	.word	-1,.L312,0,.L814-.L312
	.half	1
	.byte	100
	.word	0,.L777-.L312
	.half	2
	.byte	145,116
	.word	0,0
.L781:
	.word	-1,.L312,0,.L777-.L312
	.half	2
	.byte	145,120
	.word	0,0
.L780:
	.word	-1,.L312,0,.L815-.L312
	.half	1
	.byte	102
	.word	.L817-.L312,.L777-.L312
	.half	1
	.byte	108
	.word	.L821-.L312,.L819-.L312
	.half	1
	.byte	101
	.word	.L823-.L312,.L33-.L312
	.half	1
	.byte	100
	.word	.L825-.L312,.L32-.L312
	.half	1
	.byte	101
	.word	.L827-.L312,.L826-.L312
	.half	1
	.byte	100
	.word	0,0
.L782:
	.word	-1,.L312,.L818-.L312,.L819-.L312
	.half	1
	.byte	98
	.word	.L820-.L312,.L777-.L312
	.half	1
	.byte	109
	.word	.L31-.L312,.L822-.L312
	.half	1
	.byte	98
	.word	.L824-.L312,.L32-.L312
	.half	1
	.byte	100
	.word	.L30-.L312,.L826-.L312
	.half	1
	.byte	98
	.word	0,0
.L779:
	.word	-1,.L312,0,.L816-.L312
	.half	1
	.byte	101
	.word	.L814-.L312,.L818-.L312
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_skipWhitespace')
	.sect	'.debug_loc'
.L327:
	.word	-1,.L328,0,.L570-.L328
	.half	2
	.byte	138,0
	.word	0,0
.L571:
	.word	-1,.L328,0,.L570-.L328
	.half	1
	.byte	100
	.word	.L897-.L328,.L570-.L328
	.half	1
	.byte	98
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_writeResult')
	.sect	'.debug_loc'
.L769:
	.word	-1,.L308,0,.L772-.L308
	.half	1
	.byte	84
	.word	0,.L767-.L308
	.half	2
	.byte	145,120
	.word	0,0
.L307:
	.word	-1,.L308,0,.L784-.L308
	.half	2
	.byte	138,0
	.word	.L784-.L308,.L767-.L308
	.half	2
	.byte	138,8
	.word	.L767-.L308,.L767-.L308
	.half	2
	.byte	138,0
	.word	0,0
.L775:
	.word	0,0
.L774:
	.word	0,0
.L770:
	.word	-1,.L308,0,.L767-.L308
	.half	2
	.byte	145,122
	.word	0,0
.L771:
	.word	0,0
.L768:
	.word	-1,.L308,0,.L785-.L308
	.half	1
	.byte	100
	.word	0,0
.L773:
	.word	0,0
.L776:
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L1806:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_isEndOfLine')
	.sect	'.debug_frame'
	.word	24
	.word	.L1806,.L306,.L765-.L306
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_writeResult')
	.sect	'.debug_frame'
	.word	36
	.word	.L1806,.L308,.L767-.L308
	.byte	4
	.word	(.L784-.L308)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L767-.L784)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_showHelpSingle')
	.sect	'.debug_frame'
	.word	36
	.word	.L1806,.L310,.L652-.L310
	.byte	4
	.word	(.L786-.L310)/2
	.byte	19,32,22,26,3,19,138,32,4
	.word	(.L652-.L786)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_showHelpSingleCommand')
	.sect	'.debug_frame'
	.word	36
	.word	.L1806,.L312,.L777-.L312
	.byte	4
	.word	(.L813-.L312)/2
	.byte	19,16,22,26,3,19,138,16,4
	.word	(.L777-.L813)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_showHelp')
	.sect	'.debug_frame'
	.word	12
	.word	.L1806,.L314,.L680-.L314
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_protocolStart')
	.sect	'.debug_frame'
	.word	36
	.word	.L1806,.L316,.L693-.L316
	.byte	4
	.word	(.L835-.L316)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L693-.L835)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_bbProtocolStart')
	.sect	'.debug_frame'
	.word	36
	.word	.L1806,.L318,.L699-.L318
	.byte	4
	.word	(.L850-.L318)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L699-.L850)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_initConfig')
	.sect	'.debug_frame'
	.word	20
	.word	.L1806,.L320,.L514-.L320
	.byte	8,19,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_init')
	.sect	'.debug_frame'
	.word	12
	.word	.L1806,.L322,.L520-.L322
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_process')
	.sect	'.debug_frame'
	.word	36
	.word	.L1806,.L324,.L541-.L324
	.byte	4
	.word	(.L873-.L324)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L541-.L873)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_deinit')
	.sect	'.debug_frame'
	.word	24
	.word	.L1806,.L326,.L529-.L326
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_skipWhitespace')
	.sect	'.debug_frame'
	.word	20
	.word	.L1806,.L328,.L570-.L328
	.byte	8,19,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_matchToken')
	.sect	'.debug_frame'
	.word	36
	.word	.L1806,.L330,.L572-.L330
	.byte	4
	.word	(.L898-.L330)/2
	.byte	19,128,2,22,26,4,19,138,128,2,4
	.word	(.L572-.L898)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_matchCommand')
	.sect	'.debug_frame'
	.word	36
	.word	.L1806,.L332,.L757-.L332
	.byte	4
	.word	(.L908-.L332)/2
	.byte	19,128,4,22,26,4,19,138,128,4,4
	.word	(.L757-.L908)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_parseToken')
	.sect	'.debug_frame'
	.word	12
	.word	.L1806,.L334,.L580-.L334
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_parseAddress')
	.sect	'.debug_frame'
	.word	36
	.word	.L1806,.L336,.L586-.L336
	.byte	4
	.word	(.L929-.L336)/2
	.byte	19,40,22,26,3,19,138,40,4
	.word	(.L586-.L929)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_parseSInt32')
	.sect	'.debug_frame'
	.word	36
	.word	.L1806,.L338,.L593-.L338
	.byte	4
	.word	(.L935-.L338)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L593-.L935)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_parseUInt32')
	.sect	'.debug_frame'
	.word	36
	.word	.L1806,.L340,.L600-.L340
	.byte	4
	.word	(.L940-.L340)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L600-.L940)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_parseSInt64')
	.sect	'.debug_frame'
	.word	36
	.word	.L1806,.L342,.L608-.L342
	.byte	4
	.word	(.L945-.L342)/2
	.byte	19,200,0,22,26,4,19,138,200,0,4
	.word	(.L608-.L945)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_parseUInt64')
	.sect	'.debug_frame'
	.word	36
	.word	.L1806,.L344,.L615-.L344
	.byte	4
	.word	(.L951-.L344)/2
	.byte	19,200,0,22,26,4,19,138,200,0,4
	.word	(.L615-.L951)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_parseFloat64')
	.sect	'.debug_frame'
	.word	36
	.word	.L1806,.L346,.L623-.L346
	.byte	4
	.word	(.L963-.L346)/2
	.byte	19,200,0,22,26,4,19,138,200,0,4
	.word	(.L623-.L963)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_parseFloat32')
	.sect	'.debug_frame'
	.word	36
	.word	.L1806,.L348,.L629-.L348
	.byte	4
	.word	(.L969-.L348)/2
	.byte	19,200,0,22,26,4,19,138,200,0,4
	.word	(.L629-.L969)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_commandFind')
	.sect	'.debug_frame'
	.word	36
	.word	.L1806,.L350,.L636-.L350
	.byte	4
	.word	(.L975-.L350)/2
	.byte	19,144,2,22,26,4,19,138,144,2,4
	.word	(.L636-.L975)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_commandListFind')
	.sect	'.debug_frame'
	.word	36
	.word	.L1806,.L352,.L746-.L352
	.byte	4
	.word	(.L987-.L352)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L746-.L987)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_execute')
	.sect	'.debug_frame'
	.word	36
	.word	.L1806,.L354,.L704-.L354
	.byte	4
	.word	(.L1000-.L354)/2
	.byte	19,16,22,26,3,19,138,16,4
	.word	(.L704-.L1000)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_cmdEscapeProcess')
	.sect	'.debug_frame'
	.word	36
	.word	.L1806,.L356,.L710-.L356
	.byte	4
	.word	(.L1014-.L356)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L710-.L1014)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_enable')
	.sect	'.debug_frame'
	.word	12
	.word	.L1806,.L358,.L531-.L358
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_disable')
	.sect	'.debug_frame'
	.word	24
	.word	.L1806,.L360,.L539-.L360
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_printSyntax')
	.sect	'.debug_frame'
	.word	36
	.word	.L1806,.L362,.L688-.L362
	.byte	4
	.word	(.L1072-.L362)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L688-.L1072)/2
	.byte	19,0,8,26,0,0


	; Module end
