	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 99277908"
	.compiler_invocation	"ctc --dep-file=Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time\\.Ifx_DateTime.o.d --fp-model=c,f,l,n,r,S,T,z -D__CPU__=tc26x -D__CPU_TC26X__ --core=tc1.6.x --iso=99 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\CODE -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Build -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\DataHandling -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\InternalMux -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Asc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Lin -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Spi -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Icu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmBc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmHl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Timer -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TimerWithTrigger -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TPwm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Cam -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Irq -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Dma -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Rdc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Dts -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Eray -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Phy_Pef7071 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Crc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Fft -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\IncrEnc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Pwm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Timer -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim\\In -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Pwm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Trig -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\I2c -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Driver -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Msc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Can -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Io -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Psi5 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Psi5s -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiMaster -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiSlave -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Src -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Adc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Platform -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Platform\\Tricore -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Platform\\Tricore\\Compilers -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Sfr -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Sfr\\TC26B -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Service -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Service\\CpuGeneric -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\seekfree_libraries -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\seekfree_libraries\\common -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\seekfree_peripheral -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\USER -g2 -wW557 --make-target=Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time\\Ifx_DateTime.o -t0 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O0 --default-a1-size=0 --default-a0-size=0 --source --align=0 --switch=auto --error-limit=42 -o Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time\\Ifx_DateTime.src ..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time\\Ifx_DateTime.c"
	.compiler_name		"ctc"
	;source	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time\\Ifx_DateTime.c'

	
$TC16X
	.sdecl	'.rodata.Bsp..1.cnt',data,rom
	.sect	'.rodata.Bsp..1.cnt'
	.align	4
.1.cnt:	.type	object
	.size	.1.cnt,8
	.word	-1,2147483647
	
	.sdecl	'.text.Ifx_DateTime.DateTime_get',code,cluster('DateTime_get')
	.sect	'.text.Ifx_DateTime.DateTime_get'
	.align	2
	
	.global	DateTime_get

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	     1  /**
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	     2   * \file Ifx_DateTime.c
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	     3   * \brief Date and time functions.
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	     4   *
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	     5   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	     6   *
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	     7   * $Date: 2014-02-27 20:08:37 GMT$
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	     8   *
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	     9   *                                 IMPORTANT NOTICE
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    10   *
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    11   *
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    12   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    13   * the company in which ordinary course of business you are acting and (ii) 
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    14   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    15   * terms of use are agreed, use of this file is subject to following:
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    16  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    17  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    19  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    20   * Permission is hereby granted, free of charge, to any person or 
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    21   * organization obtaining a copy of the software and accompanying 
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    22   * documentation covered by this license (the "Software") to use, reproduce,
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    23   * display, distribute, execute, and transmit the Software, and to prepare
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    24   * derivative works of the Software, and to permit third-parties to whom the 
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    25   * Software is furnished to do so, all subject to the following:
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    26  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    27   * The copyright notices in the Software and this entire statement, including
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    28   * the above license grant, this restriction and the following disclaimer, must
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    29   * be included in all copies of the Software, in whole or in part, and all
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    30   * derivative works of the Software, unless such copies or derivative works are
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    31   * solely in the form of machine-executable object code generated by a source
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    32   * language processor.
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    33  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    40   * DEALINGS IN THE SOFTWARE.
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    41  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    42   *
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    43   */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    44  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    45  #include "Ifx_DateTime.h"
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    46  #include "SysSe/Bsp/Bsp.h"
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    47  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    48  /* FIXME make compatible to unix time */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    49  sint32 g_DateTimeOffset;
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    50  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    51  /** \brief Get the real time
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    52   * Note that this function is valid only if DateTime_set() has been called */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    53  void DateTime_get(Ifx_DateTime *dt)
; Function DateTime_get
.L15:
DateTime_get:	.type	func
	mov.aa	a15,a4
.L75:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    45   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    46   * \ingroup IfxLld_Cpu_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    47   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    48   * \ingroup IfxLld_Cpu_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    49   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    50   * \ingroup IfxLld_Cpu_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    51   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    52   * \ingroup IfxLld_Cpu_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    53   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    54   * \ingroup IfxLld_Cpu_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    55   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    56   * \ingroup IfxLld_Cpu_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    57   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    58   * \ingroup IfxLld_Cpu_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    59   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    60   * \ingroup IfxLld_Cpu_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    61   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    62  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    63  #ifndef IFXCPU_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    64  #define IFXCPU_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    65  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    66  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    67  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    68  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    69  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    70  #include "_Impl/IfxCpu_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    71  #include "IfxSrc_reg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    72  #include "IfxScu_reg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    73  #include "IfxStm_reg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    74  #include "_Impl/IfxScu_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    75  #include "_Utilities/Ifx_Assert.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    76  #include "Scu/Std/IfxScuWdt.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    77  #include "Scu/Std/IfxScuCcu.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    78  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    79  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    80  /*-----------------------------------Macros-----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    81  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    82  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    83  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    84   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    85   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    86   * the CPU number.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    87   * Example usage:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    88   *  \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    89   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    90   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    91   *  \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    92   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    93  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    94  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    95  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    96   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    97   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    98   * the CPU number.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    99   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   100   *   Example usage:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   101   *   \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   102   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   103   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   104   *   \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   105   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   106  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   107  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   108  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   109  /*------------------------------Type Definitions------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   110  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   111  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   112  /** \brief Lock type Spin lock
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   113   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   114  typedef unsigned int IfxCpu_spinLock;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   115  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   116  /** \brief Lock type Mutex lock
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   117   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   118  typedef unsigned int IfxCpu_mutexLock;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   119  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   120  /** \brief Event used for synchronisation.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   121   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   122  typedef unsigned int IfxCpu_syncEvent;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   123  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   124  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   125  /*--------------------------------Enumerations--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   126  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   127  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   128  /** \addtogroup IfxLld_Cpu_Std_Enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   129   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   130  /** \brief Enumeration for the Cpu mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   131   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   132  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   133  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   134      IfxCpu_CoreMode_halt,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   135      IfxCpu_CoreMode_run,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   136      IfxCpu_CoreMode_idle,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   137      IfxCpu_CoreMode_sleep,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   138      IfxCpu_CoreMode_stby,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   139      IfxCpu_CoreMode_unknown
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   140  } IfxCpu_CoreMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   141  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   142  /** \brief Performance conunter modes
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   143   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   144  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   145  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   146      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   147      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   148  } IfxCpu_CounterMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   149  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   150  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   151  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   152  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   153  /*-----------------------------Data Structures--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   154  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   155  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   156  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   157   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   158  /** \brief counter
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   159   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   160  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   161  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   162      uint32  counter;        /**< \brief Counter value */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   163      boolean overlfow;       /**< \brief sticky overlfow */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   164  } IfxCpu_Counter;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   165  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   166  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   167  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   168  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   169   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   170  /** \brief Performance counter result
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   171   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   172  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   173  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   174      IfxCpu_Counter instruction;       /**< \brief Instruction counter */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   175      IfxCpu_Counter clock;             /**< \brief CPU clock counter */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   176      IfxCpu_Counter counter1;          /**< \brief Multi counter 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   177      IfxCpu_Counter counter2;          /**< \brief Multi counter 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   178      IfxCpu_Counter counter3;          /**< \brief Multi counter 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   179  } IfxCpu_Perf;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   180  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   181  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   182  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   183  /** \addtogroup IfxLld_Cpu_Std_Core
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   184   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   185  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   186  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   187  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   188  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   189  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   190  /** \brief API to get the address for CPU HW module register memory map
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   191   * \param cpu Resource index of the CPU
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   192   * \return CPU module register address
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   193   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   194  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   195  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   196  /** \brief API to get core id of the CPU of the caller.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   197   * Caution: Core id of the cpu's may not be continguous and shouldn't be used to index cpu.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   198   * Use IfxCpu_getCoreIndex() to get cpu no.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   199   * \return Resource index of the CPU.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   200   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   201  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   202  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   203  /** \brief API to get cpu index of the caller CPU.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   204   * Note: This api can be used whereever cpu no/index is needed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   205   * \return Resource index of the CPU.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   206   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   207  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   208  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   209  /** \brief API to initialize the context save area of the CPU where this is called.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   210   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   211   * This API can initialize the CSA of the host CPU where this API is called. This API
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   212   * shall not be used to initialize the CSA of another CPU
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   213   * \param csaBegin Pointer to start of context save area
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   214   * \param csaEnd Pointer to end of context save area
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   215   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   216   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   217  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   218  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   219  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   220   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   221   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   222  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   223  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   224  /** \brief Triggers Software Reset
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   225   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   226   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   227  IFX_INLINE void IfxCpu_triggerSwReset(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   228  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   229  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   230  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   231  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   232  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   233  /** \brief API to get current mode of CPU
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   234   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   235   * \return Current mode of the CPU
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   236   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   237  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   238  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   239  /** \brief API to get current mode of CPU
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   240   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   241   * \return Resource index of the CPU
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   242   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   243  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   244  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   245  /** \brief API to set mode of the CPU
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   246   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   247   * \param mode CPU mode to be set by this API
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   248   * \return Success status of the activity (setting the core mode).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   249   * \retval TRUE: If the activity successfully be performed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   250   * \retval FALSE: If the activity can't be performed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   251   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   252  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   253  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   254  /** \brief API to set the program counter for the CPU specified.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   255   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   256   * \param programCounter Program counter value to be set
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   257   * \return success status of the activity (setting program counter value).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   258   * \retval TRUE: If the activity successfully be performed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   259   * \retval FALSE: If the activity can't be performed
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   260   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   261  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   262  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   263  /** \brief API to set the program counter for the CPU specified and start the CPU
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   264   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   265   * \param programCounter Program counter value to start the CPU
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   266   * \return success status of the activity (setting program counter value).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   267   * \retval TRUE: If the activity successfully be performed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   268   * \retval FALSE: If the activity can't be performed
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   269   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   270  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   271  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   272  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   273  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   274  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   275   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   276  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   277  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   278  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   279  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   280  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   281  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   282   * This API provides the status of CPU where this API is called
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   283   * \return Status of global interrupt enable bit.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   284   * \retval TRUE: Global interrupts enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   285   * \retval FALSE: Global interrupts disabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   286   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   287  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   288  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   289  /** \brief API to disable global interrupt and return the previous status.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   290   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   291   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   292   * used for this activity towards other CPUs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   293   * \return Previous status of global interrupt enable bit.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   294   * \retval TRUE: Previously, global interrupts enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   295   * \retval FALSE: Previously, global interrupts disabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   296   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   297  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   298  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   299  /** \brief API to enable global interrupt.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   300   * This API simply enables the global interrupt.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   301   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   302   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   303  IFX_INLINE void IfxCpu_enableInterrupts(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   304  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   305  /** \brief Disable the Global Interrupt
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   306   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   307   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   308  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   309  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   310  /** \brief API to restore global interrupt with that of the passed parameter.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   311   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   312   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   313   * used for this activity towards other CPUs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   314   * \param enabled Previous status of the global interrupt enable bit
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   315   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   316   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   317  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   318  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   319  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   320  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   321  /** \addtogroup IfxLld_Cpu_Std_Cache
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   322   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   323  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   324  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   325  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   326  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   327  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   328  /** \brief API to enable/ disable the data cacheability for selected segments
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   329   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   330   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   331   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   332   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   333   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   334   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   335  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   336  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   337  /** \brief API to enable/ disable the instruction cacheability for selected segments
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   338   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   339   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   340   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   341   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   342   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   343   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   344  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   345  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   346  /** \brief API to invalidate the program cache
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   347   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   348   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   349  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   350  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   351  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   352   * \param address Address
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   353   * \return Status TRUE/FALSE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   354   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   355  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   356  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   357  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   358   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   359   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   360   * used for this activity towards other CPUs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   361   * \param enable Command to enable or bypass the data cache
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   362   * TRUE: Enable the data cache.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   363   * FALSE: Bypass the data cache.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   364   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   365   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   366  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   367  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   368  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   369   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   370   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   371   * used for this activity towards other CPUs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   372   * \param enable Command to enable or bypass the program cache.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   373   * TRUE: Enable the program cache.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   374   * FALSE: Bypass the program cache
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   375   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   376   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   377  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   378  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   379  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   380  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   381  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   382   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   383  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   384  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   385  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   386  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   387  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   388  /** \brief API to read the clock counter for the CPU which calls this API.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   389   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   390   * This API can be used to read clock counter of only the caller CPU. It cannot be
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   391   * used for this activity towards other CPUs.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   392   * \return Counter value. 0 to 0x7FFFFFFF.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   393   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   394  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   395  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   396  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   397   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   398   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   399   * It cannot be used for this activity towards other CPUs.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   400   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   401   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   402   * reading the counter
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   403   * \return Status of sticky overflow bit.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   404   * \retval TRUE: Sticky overflow bit is set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   405   * \retval FALSE: Sticky overflow bit is reset
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   406   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   407  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   408  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   409  /** \brief API to read the instruction counter for the CPU which calls this API.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   410   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   411   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   412   * used for this activity towards other CPUs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   413   * \return Counter value. 0 to 0x7FFFFFFF.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   414   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   415  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   416  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   417  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   418   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   419   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   420   * It cannot be used for this activity towards other CPUs.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   421   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   422   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   423   * reading the counter
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   424   * \return Status of sticky overflow bit.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   425   * \retval TRUE: Sticky overflow bit is set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   426   * \retval FALSE: Sticky overflow bit is reset
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   427   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   428  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   429  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   430  /** \brief API to read the performance counter for the CPU which calls this API.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   431   * \param address Address
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   432   * \return counter value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   433   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   434  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   435  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   436  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   437   * This is generic function to get sticky overflow bit of any performance counters
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   438   * \param address Address
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   439   * \return Status
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   440   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   441  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   442  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   443  /** \brief Reset and start instruction, clock and multi counters
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   444   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   445   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   446   * \param mode Counter mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   447   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   448   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   449  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   450  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   451  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   452   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   453   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   454   * used for this activity towards other CPUs.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   455   * \param enable enable Command to enable or disable the performance counter.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   456   * TRUE: Enable the performance counter.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   457   * FALSE: Disable the performance counter
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   458   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   459   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   460  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   461  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   462  #if !((defined(__cplusplus)) && (defined(__TASKING__)))
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   463  /** \brief Stop instruction and clock counters, return their values
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   464   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   465   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   466   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   467   * \return Performance counter result
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   468   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   469  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   470  #endif
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   471  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   472  /** \brief API to update clock counter for the CPU which calls this API.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   473   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   474   * This API can be used to update clock counter of only the caller CPU. It cannot be
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   475   * used for this activity towards other CPUs.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   476   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   477   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   478   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   479  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   480  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   481  /** \brief API to update Instruction counter for the CPU which calls this API.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   482   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   483   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   484   * used for this activity towards other CPUs.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   485   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   486   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   487   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   488  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   489  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   490  /** \brief API to update performance counter for the CPU which calls this API.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   491   * This is generic function to update any of the performance counters
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   492   * \param address Address
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   493   * \param count Count
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   494   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   495   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   496  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   497  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   498  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   499  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   500  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   501   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   502  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   503  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   504  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   505  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   506  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   507  /** \brief API to acquire the mutex (binary semaphore).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   508   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   509   * This API can be used to acquire/get the mutex.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   510   * \param lock lock pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   511   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   512   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   513   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   514   *    IfxCpu_mutexLock resourceLock;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   515   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   516   *    if (flag){
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   517   *      // critical section
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   518   *      IfxCpu_releaseMutex(&resourceLock);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   519   *    }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   520   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   521   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   522   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   523  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   524  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   525  /** \brief API to unlock the mutex .
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   526   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   527   * This API can be used to unlock the previously acquired mutex
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   528   * \param lock lock pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   529   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   530   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   531   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   532   *    IfxCpu_mutexLock resourceLock;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   533   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   534   *    if (flag){
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   535   *      // critical section
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   536   *      IfxCpu_releaseMutex(&resourceLock);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   537   *    }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   538   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   539   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   540   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   541  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   542  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   543  /** \brief API to unlock the resource .
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   544   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   545   * This API can be used to unlock the previously acquired lock
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   546   * \param lock lock pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   547   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   548   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   549  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   550  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   551  /** \brief API to lock the resource in spin mode with the given timeout.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   552   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   553   * This API can be used to spin lock for the lock for the given timeout period.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   554   * \param lock lock pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   555   * \param timeoutCount loop counter value used for timeout to acquire lock
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   556   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   557   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   558   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   559   *    IfxCpu_spinLock resourceLock;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   560   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   561   *    if (flag){
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   562   *      // critical section
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   563   *      IfxCpu_resetSpinLock(&resourceLock);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   564   *    }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   565   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   566   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   567   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   568  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   569  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   570  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   571  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   572  /** \addtogroup IfxLld_Cpu_Std_Utility
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   573   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   574  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   575  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   576  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   577  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   578  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   579  /** \brief API to get random value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   580   * \param seed Pointer to seed value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   581   * \return random value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   582   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   583  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   584  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   585  /** \brief API to get random value with in the range
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   586   * \param seed Pointer to seed value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   587   * \param min minimum range value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   588   * \param max maximum range value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   589   * \return random value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   590   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   591  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   592  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   593  /** \brief This function waits till all the cores have set their corresponding bits in the event. This function along with
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   594   * IfxCpu_emitEvent() are used to achieve the synchronisation between the configured cores. By default
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   595   * "IFXCPU_CFG_ALLCORE_DONE" macro defined for all the cores. In case the user wants to check for
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   596   * synchronisation among the required cores, the macro can be redefined with the value accroing to the
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   597   * CORE_ID register.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   598   * The IfxCpu_emitEvent() is to be used in the Main functions of the Cores where the user wants to check for synchronisation.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   599   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   600   * e.g:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   601   * 1. Check for synchronisation between core 0 and core 5
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   602   * # define 0x41U
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   603   * 2. Check for synchronisation between core 0 to core 5
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   604   * # define 0x5FU
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   605   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   606   * Note:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   607   * Core id values read from CORE_ID register will be as shown below. The value indicates the position of the bit needs to be set while building the macro.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   608   * Core 0: 0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   609   * Core 1: 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   610   * Core 2: 2
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   611   * Core 3: 3
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   612   * Core 4: 4
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   613   * Core 5: 6
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   614   * \param event Synchronous Event
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   615   * \param timeoutMilliSec timeout in millisec
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   616   * \return Error condition
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   617   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   618   * The functions IfxCpu_waitEvent and IfxCpu_emitEvent are used to achieve synchronisation between all cores (i.e individual cores wait till all cores have reached the synchronisation point). The IfxCpu_waitEvent returns 1 incase a timeout occurs.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   619   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   620   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   621   * // Global variable. preferably located in  shared memory.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   622   * IfxCpu_syncEvent event;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   623   * boolean errorVal;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   624   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   625   * // Below code should be repeated in Each core
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   626   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   627   * // Upon reaching Synchonisation point
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   628   * IfxCpu_emitEvent(&event);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   629   * errorVal = IfxCpu_waitEvent(&event, timeoutMilliSec); // timeoutMilliSec is timeout value to wait
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   630   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   631   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   632   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   633   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   634  IFX_EXTERN boolean IfxCpu_waitEvent(IfxCpu_syncEvent *event, uint32 timeoutMilliSec);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   635  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   636  /** \brief This function sets a bit corresponding to the core in the event.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   637   * \param event Synchronous Event
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   638   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   639   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   640   * A coding example can be found in \ref IfxCpu_waitEvent
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   641   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   642   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   643  IFX_EXTERN void IfxCpu_emitEvent(IfxCpu_syncEvent *event);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   644  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   645  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   646  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   647  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   648  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   649  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   650  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   651  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   652  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   653      Ifx_CPU_ICR reg;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   654      reg.U = __mfcr(CPU_ICR);
	mfcr	d15,#65068
.L88:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   655      return reg.B.IE != 0;
	extr.u	d15,d15,#15,#1
.L89:
	ne	d15,d15,#0
.L90:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   655      return reg.B.IE != 0;      (inlined)
	j	.L2

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   656  }      (inlined)
.L2:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   656  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   657  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   658  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   659  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   660  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   661      boolean enabled;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   662      enabled = IfxCpu_areInterruptsEnabled();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   663      __disable();
	disable
.L130:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   664      __nop();
	nop
.L131:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   665      return enabled;      (inlined)
	j	.L3

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   666  }      (inlined)
.L3:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   110      return IfxCpu_disableInterrupts();      (inlined)
	j	.L4

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   111  }      (inlined)
.L4:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     2   * \file IfxStm.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     3   * \brief STM  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     4   * \ingroup IfxLld_Stm
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    44   * \defgroup IfxLld_Stm_Usage How to use the Stm driver?
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    45   * \ingroup IfxLld_Stm
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    46   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    47   * The Stm Standard driver provides APIs to initialize, configure and control the Stm.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    48   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    49   * In the following sections it will be described, how to integrate the driver into the application framework.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    50   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    51   * \section IfxLld_Stm_Preparation Preparation
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    52   * \subsection IfxLld_Stm_Include Include Files
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    53   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    54   * Include following header file into your C code:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    55   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    56   * #include <Stm/Std/IfxStm.h>
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    57   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    58   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    59   * \subsection IfxLld_Stm_Variables Variables
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    60   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    61   * Declare STM variables :
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    62   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    63   * Ifx_STM *stmSfr;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    64   * IfxStm_CompareConfig stmConfig;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    65   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    66   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    67   * \subsection IfxLld_Stm_Interrupt Interrupt Handler Installation
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    68   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    69   * See also \ref IfxLld_Cpu_Irq_Usage
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    70   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    71   * Define priorities for the Interrrupt handlers. This is normally done in the Ifx_IntPrioDef.h file:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    72   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    73   * // priorities are normally defined in Ifx_IntPrioDef.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    74   * #define IFX_INTPRIO_STM0_SR0  10
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    75   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    76   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    77   * Add the interrupt service routines to your C code. They have to call the Stm interrupt handlers:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    78   * please take care in choosing number of ticks, the below example code will raise an interrupt
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    79   * evry time the specified number of ticks have been elapsed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    80   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    81   * IFX_INTERRUPT(stm0Sr0ISR, 0, IFX_INTPRIO_STM0_SR0)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    82   * {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    83   *     IfxStm_clearCompareFlag(stmSfr, stmConfig.comparator);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    84   *     IfxStm_increaseCompare(stmSfr, stmConfig.comparator, stmConfig.ticks);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    85   * }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    86   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    87   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    88   * Finally install the interrupt handlers in your initialisation function:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    89   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    90   *     // install interrupt handlers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    91   *     IfxCpu_Irq_installInterruptHandler(&stm0Sr0ISR, IFX_INTPRIO_STM0_SR0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    92   *     IfxCpu_enableInterrupts();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    93   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    94   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    95   * \subsection IfxLld_Stm_Init Module Initialisation
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    96   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    97   * The STM module can be configured to generate an interrupt at every compare match of the selected comaparator with the desired compare value, the interrupt can further be routed to other comparator.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    98   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    99   * The module initialisation can be done as followed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   100   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   101   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   102   *     stmSfr = &MODULE_STM0;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   103   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   104   *     IfxStm_initCompareConfig(&stmConfig);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   105   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   106   *     // configure to generate interrupt every 10 us
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   107   *     sint32 ticks = IfxStm_getTicksFromMicroseconds(10);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   108   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   109   *     stmConfig.ticks = ticks;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   110   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   111   *     stmConfig.triggerPriority = IFX_INTPRIO_STM0_SR0;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   112   *     stmConfig.typeOfService = IfxSrc_Tos_cpu0;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   113   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   114   *     IfxStm_initCompare(stmSfr, &stmConfig);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   115   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   116   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   117   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   118   * Now the Stm shall generate interrupts regularly based on the configured time !
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   119   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   120   * \defgroup IfxLld_Stm_Std_Enumerations Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   121   * \ingroup IfxLld_Stm_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   122   * \defgroup IfxLld_Stm_Std_Structures Data Structures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   123   * \ingroup IfxLld_Stm_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   124   * \defgroup IfxLld_Stm_Std_Module Module Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   125   * \ingroup IfxLld_Stm_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   126   * \defgroup IfxLld_Stm_Std_Timer Timer Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   127   * \ingroup IfxLld_Stm_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   128   * \defgroup IfxLld_Stm_Std_Comparator Comparator Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   129   * \ingroup IfxLld_Stm_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   130   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   131  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   132  #ifndef IFXSTM_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   133  #define IFXSTM_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   134  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   135  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   136  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   137  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   138  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   139  #include "_Impl/IfxStm_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   140  #include "Scu/Std/IfxScuCcu.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   141  #include "Src/Std/IfxSrc.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   142  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   143  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   144  /*--------------------------------Enumerations--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   145  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   146  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   147  /** \addtogroup IfxLld_Stm_Std_Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   148   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   149  /** \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   150   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   151  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   152  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   153      IfxStm_Comparator_0 = 0,      /**< \brief Comparator Id 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   154      IfxStm_Comparator_1           /**< \brief Comparator Id 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   155  } IfxStm_Comparator;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   156  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   157  /** \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   158   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   159  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   160  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   161      IfxStm_ComparatorInterrupt_ir0 = 0,  /**< \brief Select STMIR0 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   162      IfxStm_ComparatorInterrupt_ir1 = 1   /**< \brief Select STMIR1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   163  } IfxStm_ComparatorInterrupt;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   164  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   165  /** \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   166   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   167  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   168  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   169      IfxStm_ComparatorOffset_0 = 0,      /**< \brief Comparator start bit position 0 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   170      IfxStm_ComparatorOffset_1,          /**< \brief Comparator start bit position 1 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   171      IfxStm_ComparatorOffset_2,          /**< \brief Comparator start bit position 2 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   172      IfxStm_ComparatorOffset_3,          /**< \brief Comparator start bit position 3 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   173      IfxStm_ComparatorOffset_4,          /**< \brief Comparator start bit position 4 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   174      IfxStm_ComparatorOffset_5,          /**< \brief Comparator start bit position 5 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   175      IfxStm_ComparatorOffset_6,          /**< \brief Comparator start bit position 6 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   176      IfxStm_ComparatorOffset_7,          /**< \brief Comparator start bit position 7 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   177      IfxStm_ComparatorOffset_8,          /**< \brief Comparator start bit position 8 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   178      IfxStm_ComparatorOffset_9,          /**< \brief Comparator start bit position 9 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   179      IfxStm_ComparatorOffset_10,         /**< \brief Comparator start bit position 10 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   180      IfxStm_ComparatorOffset_11,         /**< \brief Comparator start bit position 11 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   181      IfxStm_ComparatorOffset_12,         /**< \brief Comparator start bit position 12 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   182      IfxStm_ComparatorOffset_13,         /**< \brief Comparator start bit position 13 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   183      IfxStm_ComparatorOffset_14,         /**< \brief Comparator start bit position 14 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   184      IfxStm_ComparatorOffset_15,         /**< \brief Comparator start bit position 15 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   185      IfxStm_ComparatorOffset_16,         /**< \brief Comparator start bit position 16 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   186      IfxStm_ComparatorOffset_17,         /**< \brief Comparator start bit position 17 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   187      IfxStm_ComparatorOffset_18,         /**< \brief Comparator start bit position 18 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   188      IfxStm_ComparatorOffset_19,         /**< \brief Comparator start bit position 19 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   189      IfxStm_ComparatorOffset_20,         /**< \brief Comparator start bit position 20 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   190      IfxStm_ComparatorOffset_21,         /**< \brief Comparator start bit position 21 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   191      IfxStm_ComparatorOffset_22,         /**< \brief Comparator start bit position 22 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   192      IfxStm_ComparatorOffset_23,         /**< \brief Comparator start bit position 23 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   193      IfxStm_ComparatorOffset_24,         /**< \brief Comparator start bit position 24 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   194      IfxStm_ComparatorOffset_25,         /**< \brief Comparator start bit position 25 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   195      IfxStm_ComparatorOffset_26,         /**< \brief Comparator start bit position 26 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   196      IfxStm_ComparatorOffset_27,         /**< \brief Comparator start bit position 27 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   197      IfxStm_ComparatorOffset_28,         /**< \brief Comparator start bit position 28 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   198      IfxStm_ComparatorOffset_29,         /**< \brief Comparator start bit position 29 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   199      IfxStm_ComparatorOffset_30,         /**< \brief Comparator start bit position 30 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   200      IfxStm_ComparatorOffset_31          /**< \brief Comparator start bit position 31 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   201  } IfxStm_ComparatorOffset;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   202  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   203  /** \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   204   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   205  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   206  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   207      IfxStm_ComparatorSize_1Bit   = 0,   /**< \brief Size of compare value to compare with timer: 1 bit */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   208      IfxStm_ComparatorSize_2Bits  = 1,   /**< \brief Size of compare value to compare with timer: 2 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   209      IfxStm_ComparatorSize_3Bits  = 2,   /**< \brief Size of compare value to compare with timer: 3 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   210      IfxStm_ComparatorSize_4Bits  = 3,   /**< \brief Size of compare value to compare with timer: 4 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   211      IfxStm_ComparatorSize_5Bits  = 4,   /**< \brief Size of compare value to compare with timer: 5 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   212      IfxStm_ComparatorSize_6Bits  = 5,   /**< \brief Size of compare value to compare with timer: 6 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   213      IfxStm_ComparatorSize_7Bits  = 6,   /**< \brief Size of compare value to compare with timer: 7 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   214      IfxStm_ComparatorSize_8Bits  = 7,   /**< \brief Size of compare value to compare with timer: 8 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   215      IfxStm_ComparatorSize_9Bits  = 8,   /**< \brief Size of compare value to compare with timer: 9 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   216      IfxStm_ComparatorSize_10Bits = 9,   /**< \brief Size of compare value to compare with timer: 10 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   217      IfxStm_ComparatorSize_11Bits = 10,  /**< \brief Size of compare value to compare with timer: 11 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   218      IfxStm_ComparatorSize_12Bits = 11,  /**< \brief Size of compare value to compare with timer: 12 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   219      IfxStm_ComparatorSize_13Bits = 12,  /**< \brief Size of compare value to compare with timer: 13 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   220      IfxStm_ComparatorSize_14Bits = 13,  /**< \brief Size of compare value to compare with timer: 14 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   221      IfxStm_ComparatorSize_15Bits = 14,  /**< \brief Size of compare value to compare with timer: 15 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   222      IfxStm_ComparatorSize_16Bits = 15,  /**< \brief Size of compare value to compare with timer: 16 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   223      IfxStm_ComparatorSize_17Bits = 16,  /**< \brief Size of compare value to compare with timer: 17 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   224      IfxStm_ComparatorSize_18Bits = 17,  /**< \brief Size of compare value to compare with timer: 18 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   225      IfxStm_ComparatorSize_19Bits = 18,  /**< \brief Size of compare value to compare with timer: 19 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   226      IfxStm_ComparatorSize_20Bits = 19,  /**< \brief Size of compare value to compare with timer: 20 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   227      IfxStm_ComparatorSize_21Bits = 20,  /**< \brief Size of compare value to compare with timer: 21 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   228      IfxStm_ComparatorSize_22Bits = 21,  /**< \brief Size of compare value to compare with timer: 22 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   229      IfxStm_ComparatorSize_23Bits = 22,  /**< \brief Size of compare value to compare with timer: 23 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   230      IfxStm_ComparatorSize_24Bits = 23,  /**< \brief Size of compare value to compare with timer: 24 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   231      IfxStm_ComparatorSize_25Bits = 24,  /**< \brief Size of compare value to compare with timer: 25 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   232      IfxStm_ComparatorSize_26Bits = 25,  /**< \brief Size of compare value to compare with timer: 26 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   233      IfxStm_ComparatorSize_27Bits = 26,  /**< \brief Size of compare value to compare with timer: 27 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   234      IfxStm_ComparatorSize_28Bits = 27,  /**< \brief Size of compare value to compare with timer: 28 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   235      IfxStm_ComparatorSize_29Bits = 28,  /**< \brief Size of compare value to compare with timer: 29 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   236      IfxStm_ComparatorSize_30Bits = 29,  /**< \brief Size of compare value to compare with timer: 30 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   237      IfxStm_ComparatorSize_31Bits = 30,  /**< \brief Size of compare value to compare with timer: 31 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   238      IfxStm_ComparatorSize_32Bits = 31   /**< \brief Size of compare value to compare with timer: 32 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   239  } IfxStm_ComparatorSize;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   240  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   241  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   242   * Definition in Ifx_STM.CLC.B.EDIS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   243   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   244  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   245  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   246      IfxStm_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   247      IfxStm_SleepMode_disable = 1  /**< \brief disables sleep mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   248  } IfxStm_SleepMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   249  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   250  /** \brief OCDS Suspend Control (OCDS.SUS)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   251   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   252  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   253  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   254      IfxStm_SuspendMode_none = 0,  /**< \brief No suspend */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   255      IfxStm_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   256      IfxStm_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   257  } IfxStm_SuspendMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   258  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   259  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   260  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   261  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   262  /*-----------------------------Data Structures--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   263  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   264  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   265  /** \addtogroup IfxLld_Stm_Std_Structures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   266   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   267  /** \brief Comparator Configuration Structure
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   268   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   269  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   270  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   271      IfxStm_Comparator          comparator;                /**< \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2). */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   272      IfxStm_ComparatorInterrupt comparatorInterrupt;       /**< \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1). */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   273      IfxStm_ComparatorOffset    compareOffset;             /**< \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2). */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   274      IfxStm_ComparatorSize      compareSize;               /**< \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2). */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   275      uint32                     ticks;                     /**< \brief count for next comparison from current timer count. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   276      Ifx_Priority               triggerPriority;           /**< \brief Interrupt priority. Range = 0 .. 255. 0 = interrupt is disabled. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   277      IfxSrc_Tos                 typeOfService;             /**< \brief Type of service. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   278  } IfxStm_CompareConfig;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   279  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   280  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   281  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   282  /** \addtogroup IfxLld_Stm_Std_Module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   283   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   284  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   285  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   286  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   287  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   288  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   289  /** \brief Returns system timer value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   290   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   291   * \return system timer value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   292   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   293  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   294  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   295  /** \brief Returns the system timer frequency.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   296   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   297   * \return the system timer frequency in Hz.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   298   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   299  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   300  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   301  /** \brief Returns the module's suspend state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   302   * TRUE :if module is suspended.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   303   * FALSE:if module is not yet suspended.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   304   * \param stm Pointer to STM module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   305   * \return Suspend status (TRUE / FALSE)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   306   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   307  IFX_INLINE boolean IfxStm_isModuleSuspended(Ifx_STM *stm);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   308  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   309  /** \brief Configure the Module to Hard/Soft suspend mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   310   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   311   * \param stm Pointer to STM module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   312   * \param mode Module suspend mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   313   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   314   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   315  IFX_INLINE void IfxStm_setSuspendMode(Ifx_STM *stm, IfxStm_SuspendMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   316  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   317  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   318  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   319  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   320  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   321  /** \brief Disables the Stm module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   322   * \param stm pointer to STM registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   323   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   324   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   325  IFX_EXTERN void IfxStm_disableModule(Ifx_STM *stm);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   326  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   327  /** \brief enable suspend by debugger.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   328   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   329   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   330   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   331  IFX_EXTERN void IfxStm_enableOcdsSuspend(Ifx_STM *stm);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   332  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   333  /** \brief Returns the module index of the selected STM module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   334   * \param stm Pointer to STM module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   335   * \return STM module register address
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   336   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   337  IFX_EXTERN Ifx_STM *IfxStm_getAddress(IfxStm_Index stm);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   338  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   339  /** \brief API to get the resource index of the STM specified.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   340   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   341   * \return system timer module index.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   342   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   343  IFX_EXTERN IfxStm_Index IfxStm_getIndex(Ifx_STM *stm);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   344  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   345  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   346  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   347  /** \addtogroup IfxLld_Stm_Std_Timer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   348   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   349  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   350  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   351  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   352  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   353  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   354  /** \brief Returns the lower system timer value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   355   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   356   * \return the lower system timer value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   357   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   358  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   359  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   360  /** \brief Gets the TIM3 couter value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   361   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   362   * \return TIM3 counter value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   363   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   364  IFX_INLINE uint32 IfxStm_getOffset12Timer(Ifx_STM *stm);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   365  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   366  /** \brief Gets the TIM4 couter value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   367   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   368   * \return TIM4 counter value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   369   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   370  IFX_INLINE uint32 IfxStm_getOffset16Timer(Ifx_STM *stm);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   371  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   372  /** \brief Gets the TIM5 couter value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   373   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   374   * \return TIM5 counter value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   375   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   376  IFX_INLINE uint32 IfxStm_getOffset20Timer(Ifx_STM *stm);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   377  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   378  /** \brief Gets the TIM6 couter value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   379   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   380   * \return TIM6 counter value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   381   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   382  IFX_INLINE uint32 IfxStm_getOffset32Timer(Ifx_STM *stm);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   383  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   384  /** \brief Gets the TIM1 couter value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   385   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   386   * \return TIM1 counter value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   387   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   388  IFX_INLINE uint32 IfxStm_getOffset4Timer(Ifx_STM *stm);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   389  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   390  /** \brief Gets the TIM2 couter value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   391   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   392   * \return TIM2 counter value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   393   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   394  IFX_INLINE uint32 IfxStm_getOffset8Timer(Ifx_STM *stm);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   395  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   396  /** \brief Returns the timer value shifted right by offset.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   397   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   398   * \param offset offset value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   399   * \return the lower system timer value shifted by offset.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   400   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   401  IFX_INLINE uint32 IfxStm_getOffsetTimer(Ifx_STM *stm, uint8 offset);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   402  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   403  /** \brief Wait for requested time.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   404   * The macro waits in while loop for the specified time in system timer ticks.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   405   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   406   * \param ticks ticks Wait time in system timer ticks.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   407   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   408   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   409  IFX_INLINE void IfxStm_waitTicks(Ifx_STM *stm, uint32 ticks);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   410  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   411  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   412  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   413  /** \addtogroup IfxLld_Stm_Std_Comparator
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   414   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   415  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   416  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   417  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   418  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   419  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   420  /** \brief Returns the updated compare register value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   421   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   422   * \param comparator comparator selection comparator.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   423   * \return The compare value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   424   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   425  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   426  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   427  /** \brief Returns the number of ticks for the selected micro seconds based on the STM frequency.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   428   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   429   * \param microSeconds Number of micro seconds that need to be converted to ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   430   * \return ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   431   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   432  IFX_INLINE sint32 IfxStm_getTicksFromMicroseconds(Ifx_STM *stm, uint32 microSeconds);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   433  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   434  /** \brief Returns the number of ticks for the selected milli seconds based on the STM frequency.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   435   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   436   * \param milliSeconds Number of micro seconds that need to be converted to ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   437   * \return ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   438   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   439  IFX_INLINE sint32 IfxStm_getTicksFromMilliseconds(Ifx_STM *stm, uint32 milliSeconds);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   440  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   441  /** \brief Update the compare register value increased with given ticks.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   442   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   443   * \param comparator comparator selection comparator.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   444   * \param ticks count for next comparison from current timer count.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   445   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   446   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   447  IFX_INLINE void IfxStm_increaseCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   448  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   449  /** \brief Update the compare register value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   450   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   451   * \param comparator comparator selection comparator.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   452   * \param ticks count for next comparison.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   453   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   454   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   455  IFX_INLINE void IfxStm_updateCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   456  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   457  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   458  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   459  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   460  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   461  /** \brief Clear the compare interrupt flag.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   462   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   463   * \param comparator comparator selection comparator.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   464   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   465   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   466  IFX_EXTERN void IfxStm_clearCompareFlag(Ifx_STM *stm, IfxStm_Comparator comparator);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   467  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   468  /** \brief Disables the compare interrupt
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   469   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   470   * \param comparator comparator selection comparator.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   471   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   472   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   473  IFX_EXTERN void IfxStm_disableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   474  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   475  /** \brief Enables the compare interrupt .
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   476   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   477   * \param comparator comparator selection comparator.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   478   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   479   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   480  IFX_EXTERN void IfxStm_enableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   481  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   482  /** \brief get the interrupt source pointer for the comparator.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   483   * \param stm pointer to the STM registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   484   * \param comparator comparator selection comparator
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   485   * \return pointer to the interrupt source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   486   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   487  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxStm_getSrcPointer(Ifx_STM *stm, IfxStm_Comparator comparator);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   488  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   489  /** \brief Initialise stm compare register.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   490   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   491   * \param config pointer to configuration structure.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   492   * \return TRUE if Comparator successful otherwise FLASE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   493   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   494  IFX_EXTERN boolean IfxStm_initCompare(Ifx_STM *stm, const IfxStm_CompareConfig *config);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   495  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   496  /** \brief Initialise compare configuration with default values.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   497   * \param config pointer to configuration structure.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   498   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   499   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   500  IFX_EXTERN void IfxStm_initCompareConfig(IfxStm_CompareConfig *config);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   501  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   502  /** \brief Indicates if the compare interrupt flag is set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   503   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   504   * \param comparator comparator selection comparator.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   505   * \return TRUE if the comparator flag is set
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   506   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   507  IFX_EXTERN boolean IfxStm_isCompareFlagSet(Ifx_STM *stm, IfxStm_Comparator comparator);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   508  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   509  /** \brief Set the compare behavior
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   510   * \param stm pointer to System timer module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   511   * \param comparator comparator selection comparator
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   512   * \param offset Comparator start bit position
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   513   * \param size Size of compare value to compare with timer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   514   * \param interrupt Comparator Interrupt request source defined
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   515   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   516   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   517  IFX_EXTERN void IfxStm_setCompareControl(Ifx_STM *stm, IfxStm_Comparator comparator, IfxStm_ComparatorOffset offset, IfxStm_ComparatorSize size, IfxStm_ComparatorInterrupt interrupt);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   518  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   519  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   520  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   521  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   522  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   523  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   524  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   525  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   526   * \param stm pointer STM registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   527   * \param mode mode selection (enable/ disable)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   528   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   529   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   530  IFX_INLINE void IfxStm_setSleepMode(Ifx_STM *stm, IfxStm_SleepMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   531  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   532  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   533  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   534  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   535  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   536  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   537   * \param stm pointer to STM registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   538   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   539   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   540  IFX_EXTERN void IfxStm_resetModule(Ifx_STM *stm);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   541  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   542  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   543  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   544  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   545  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   546  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   547  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   548      uint64 result;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   549  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   550      result  = stm->TIM0.U;
	ld.w	d0,0xf0000010
	mov	d3,#0
	mov	d2,d0
.L92:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   551      result |= ((uint64)stm->CAP.U) << 32;
	ld.w	d1,0xf000002c
.L132:
	mov	d0,#0
.L133:
	or	d0,d2
.L93:
	or	d1,d3
.L134:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   553      return result;      (inlined)
	j	.L5

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   554  }      (inlined)
.L5:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	     2   * \file Bsp.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	     3   * \brief Board support package
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	     4   * \ingroup library_srvsw_sysse_bsp_bsp
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	     7   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	     8   * $Date: 2014-02-28 14:15:35 GMT$
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    44   * \defgroup library_srvsw_sysse_bsp_bsp Board support package
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    45   * This module implements the board support package
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    46   * \ingroup library_srvsw_sysse_bsp
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    47   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    48   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    49  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    50  #ifndef BSP_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    51  #define BSP_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    52  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    53  #include "Ifx_Cfg.h"                   /* Do not remove this include */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    54  #include "Cpu/Std/IfxCpu_Intrinsics.h" /* Do not remove this include */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    55  #include "_Utilities/Ifx_Assert.h"     /* Do not remove this include */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    56  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    57  #include "Cpu/Std/IfxCpu.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    58  #include "Port/Std/IfxPort.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    59  #include "Src/Std/IfxSrc.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    60  #include "Stm/Std/IfxStm.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    61  #include "Scu/Std/IfxScuCcu.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    62  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    63  #ifndef BSP_DEFAULT_TIMER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    64  /** Defined the default timer used */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    65  #define BSP_DEFAULT_TIMER (&MODULE_STM0)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    66  #endif
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    67  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    68  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    69  /*                           Function prototypes                              */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    70  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    71  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    72  /** \addtogroup library_srvsw_sysse_bsp_bsp
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    73   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    74  /** \name Interrupt APIs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    75   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    76  IFX_INLINE boolean areInterruptsEnabled(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    77  IFX_INLINE boolean disableInterrupts(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    78  IFX_INLINE void    enableInterrupts(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    79  IFX_INLINE void    restoreInterrupts(boolean enabled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    80  IFX_INLINE void    forceDisableInterrupts(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    81  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    82  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    83  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    84  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    85  /*                           Functions                                        */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    86  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    87  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    88  /** \brief Return the status of the global interrupts
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    89   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    90   * \retval TRUE if the global interrupts are enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    91   * \retval FALSE if the global interrupts are disabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    92   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    93   * \see restoreInterrupts(), disableInterrupts()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    94   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    95  IFX_INLINE boolean areInterruptsEnabled(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    96  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    97      return IfxCpu_areInterruptsEnabled();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    98  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    99  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   100  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   101  /** \brief Disable the global interrupts
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   102   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   103   * \retval TRUE if the global interrupts were enabled before the call to the function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   104   * \retval FALSE if the global interrupts are disabled before the call to the function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   105   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   106   * \see areInterruptsEnabled(), restoreInterrupts()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   107   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   108  IFX_INLINE boolean disableInterrupts(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   109  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   110      return IfxCpu_disableInterrupts();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   111  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   112  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   113  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   114  /** \brief Disable the global interrupts forcefully
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   115   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   116   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   117   * \see areInterruptsEnabled(), restoreInterrupts()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   118   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   119  IFX_INLINE void forceDisableInterrupts(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   120  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   121      IfxCpu_forceDisableInterrupts();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   122  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   123  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   124  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   125  /** \brief enable the global interrupts
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   126   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   127   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   128  IFX_INLINE void enableInterrupts(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   129  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   130      IfxCpu_enableInterrupts();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   131  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   132  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   133  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   134  /** \brief Restore the state of the global interrupts.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   135   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   136   * \param enabled if TRUE, re-enable the global interrupts, else do nothing.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   137   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   138   * \return None.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   139   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   140   * \see areInterruptsEnabled(), disableInterrupts()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   141   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   142  IFX_INLINE void restoreInterrupts(boolean enabled)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   143  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   144      IfxCpu_restoreInterrupts(enabled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   145  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   146  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   147  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   148  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   149  /*                           Macros                                           */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   150  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   151  #define TIMER_COUNT       (11)                                      /**< \internal \brief number of timer values defined */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   152  #define TIMER_INDEX_10NS  (0)                                       /**< \internal \brief Index of the time value 10ns*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   153  #define TIMER_INDEX_100NS (1)                                       /**< \internal \brief Index of the time value 100ns*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   154  #define TIMER_INDEX_1US   (2)                                       /**< \internal \brief Index of the time value 1us*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   155  #define TIMER_INDEX_10US  (3)                                       /**< \internal \brief Index of the time value 10us*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   156  #define TIMER_INDEX_100US (4)                                       /**< \internal \brief Index of the time value 100us*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   157  #define TIMER_INDEX_1MS   (5)                                       /**< \internal \brief Index of the time value 1ms*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   158  #define TIMER_INDEX_10MS  (6)                                       /**< \internal \brief Index of the time value 10ms*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   159  #define TIMER_INDEX_100MS (7)                                       /**< \internal \brief Index of the time value 100ms*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   160  #define TIMER_INDEX_1S    (8)                                       /**< \internal \brief Index of the time value 1s*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   161  #define TIMER_INDEX_10S   (9)                                       /**< \internal \brief Index of the time value 10s*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   162  #define TIMER_INDEX_100S  (10)                                      /**< \internal \brief Index of the time value 100s*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   163  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   164  /** \internal
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   165   *  Array containing the time constants. This variable should not be used in the application. TimeConst_0s, TimeConst_10ns, ...  should be used instead
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   166   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   167   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   168  IFX_EXTERN Ifx_TickTime TimeConst[TIMER_COUNT];
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   169  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   170  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   171  /*                           Function prototypes                              */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   172  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   173  /** \addtogroup library_srvsw_sysse_bsp_bsp
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   174   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   175  /** \name Time APIs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   176   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   177  IFX_INLINE Ifx_TickTime addTTime(Ifx_TickTime a, Ifx_TickTime b);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   178  IFX_INLINE Ifx_TickTime elapsed(Ifx_TickTime since);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   179  IFX_INLINE Ifx_TickTime getDeadLine(Ifx_TickTime timeout);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   180  IFX_INLINE Ifx_TickTime getTimeout(Ifx_TickTime deadline);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   181  IFX_EXTERN void         initTime(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   182  IFX_INLINE boolean      isDeadLine(Ifx_TickTime deadLine);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   183  IFX_INLINE Ifx_TickTime now(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   184  IFX_INLINE Ifx_TickTime nowWithoutCriticalSection(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   185  IFX_INLINE boolean      poll(volatile boolean *test, Ifx_TickTime timeout);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   186  IFX_INLINE Ifx_TickTime timingNoInterruptEnd(Ifx_TickTime since, boolean interruptEnabled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   187  IFX_INLINE Ifx_TickTime timingNoInterruptStart(boolean *interruptEnabled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   188  IFX_INLINE void         wait(Ifx_TickTime timeout);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   189  IFX_EXTERN void         waitPoll(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   190  IFX_EXTERN void         waitTime(Ifx_TickTime timeout);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   191  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   192  /** Prototype for wait() functions */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   193  typedef void (*WaitTimeFunction)(Ifx_TickTime timeout);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   194  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   195  #define TimeConst_0s    ((Ifx_TickTime)0)                           /**< \brief time constant equal to 1s */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   196  #define TimeConst_10ns  (TimeConst[TIMER_INDEX_10NS])               /**< \brief time constant equal to 10ns */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   197  #define TimeConst_100ns (TimeConst[TIMER_INDEX_100NS])              /**< \brief time constant equal to 100ns */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   198  #define TimeConst_1us   (TimeConst[TIMER_INDEX_1US])                /**< \brief time constant equal to 1us */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   199  #define TimeConst_10us  (TimeConst[TIMER_INDEX_10US])               /**< \brief time constant equal to 10us */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   200  #define TimeConst_100us (TimeConst[TIMER_INDEX_100US])              /**< \brief time constant equal to 100us */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   201  #define TimeConst_1ms   (TimeConst[TIMER_INDEX_1MS])                /**< \brief time constant equal to 1ms */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   202  #define TimeConst_10ms  (TimeConst[TIMER_INDEX_10MS])               /**< \brief time constant equal to 10ms */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   203  #define TimeConst_100ms (TimeConst[TIMER_INDEX_100MS])              /**< \brief time constant equal to 100ms */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   204  #define TimeConst_1s    (TimeConst[TIMER_INDEX_1S])                 /**< \brief time constant equal to 1s */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   205  #define TimeConst_10s   (TimeConst[TIMER_INDEX_10S])                /**< \brief time constant equal to 10s */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   206  #define TimeConst_100s  (TimeConst[TIMER_INDEX_100S])               /**< \brief time constant equal to 100s */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   207  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   208  /**\}*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   209  /**\}*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   210  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   211  /*                           Functions                                        */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   212  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   213  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   214  /** \brief Return system timer value (critical section).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   215   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   216   * The function IfxStm_get() is called in a critical section, disabling
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   217   * the interrupts. The system timer value is limited to TIME_INFINITE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   218   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   219   * \return Returns system timer value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   220   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   221  IFX_INLINE Ifx_TickTime now(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   222  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   223      Ifx_TickTime stmNow;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   224      boolean      interruptState;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   225  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   226      interruptState = disableInterrupts();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   227      stmNow         = (Ifx_TickTime)IfxStm_get(BSP_DEFAULT_TIMER) & TIME_INFINITE;
	movh.a	a2,#@his(.1.cnt)
	lea	a2,[a2]@los(.1.cnt)
	ld.d	e2,[a2]0
.L82:
	and	d4,d0,d2
	and	d5,d1,d3
.L83:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   938      if (enabled != FALSE)      (inlined)
	jeq	d15,#0,.L6
.L135:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   665  enableInterrupts(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   666  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   667      __enable();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   668  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   669  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   670  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   671  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   672  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   673      uint32 cpu_pmaVal;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   674      uint16 checkRestrictionMask;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   675      uint32 coreIndex   = IfxCpu_getCoreIndex();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   676      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   677  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   678      /*resolve the restrictions*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   679      /*In PMA0 Segment-C and Segment[7-CoreID] must have the same value */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   680      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xC);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   681  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   682      if ((segmentNumberMask & checkRestrictionMask) != 0)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   683      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   684          segmentNumberMask |= checkRestrictionMask;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   685      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   686  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   687      cpu_pmaVal = __mfcr(CPU_PMA0);                                                              /* Read the CPU_PMA0 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   688  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   689      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   690  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   691      /*The CPU_PMA registers are ENDINIT protected*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   692      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   693      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   694      /*Write to PMA0 register for selecting the cacheability for data cache*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   695      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   696      __mtcr(CPU_PMA0, cpu_pmaVal);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   697      __isync();      /* ISYNC instruction executed immediately following MTCR */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   698      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   699  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   700  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   701  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   702  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   703  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   704      uint32 cpu_pmaVal;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   705      uint16 checkRestrictionMask;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   706      uint32 coreIndex   = IfxCpu_getCoreIndex();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   707      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   708  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   709      /*resolve the restrictions*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   710      /*In PMA1 Segment-D and Segment[7-CoreID] must have the same value */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   711      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xD);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   712  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   713      if ((segmentNumberMask & checkRestrictionMask) != 0)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   714      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   715          segmentNumberMask |= checkRestrictionMask;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   716      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   717  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   718      cpu_pmaVal = __mfcr(CPU_PMA1);                                                              /* Read the CPU_PMA1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   719  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   720      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   721  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   722      /*The CPU_PMA registers are ENDINIT protected*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   723      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   724      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   725      /*Write to PMA1 register for selecting the cacheability for data cache*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   726      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   727      __mtcr(CPU_PMA1, cpu_pmaVal);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   728      __isync();      /* ISYNC instruction executed immediately following MTCR */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   729      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   730  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   731  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   732  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   733  IFX_INLINE void IfxCpu_forceDisableInterrupts(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   734  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   735      __disable();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   736      __nop();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   737  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   738  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   739  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   740  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   741  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   742      Ifx_CPU *module;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   743  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   744      if (cpu < IfxCpu_ResourceCpu_none)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   745      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   746          module = (Ifx_CPU *)IfxCpu_cfg_indexMap[cpu].module;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   747      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   748      else
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   749      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   750          module = NULL_PTR;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   751      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   752  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   753      return module;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   754  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   755  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   756  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   757  IFX_INLINE uint32 IfxCpu_getClockCounter(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   758  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   759      return IfxCpu_getPerformanceCounter(CPU_CCNT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   760  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   761  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   762  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   763  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   764  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   765      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_CCNT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   766  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   767  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   768  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   769  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   770  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   771      Ifx_CPU_CORE_ID reg;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   772      reg.U = __mfcr(CPU_CORE_ID);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   773      return (IfxCpu_Id)reg.B.CORE_ID;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   774  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   775  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   776  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   777  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   778  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   779      Ifx_CPU_CORE_ID reg;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   780      reg.U = __mfcr(CPU_CORE_ID);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   781      return (IfxCpu_ResourceCpu)reg.B.CORE_ID;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   782  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   783  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   784  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   785  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   786  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   787      return IfxCpu_getPerformanceCounter(CPU_ICNT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   788  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   789  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   790  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   791  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   792  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   793      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_ICNT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   794  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   795  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   796  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   797  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   798  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   799      Ifx_CPU_CCNT ccnt;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   800  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   801      if (address == CPU_CCNT)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   802      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   803          ccnt.U = __mfcr(CPU_CCNT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   804      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   805      else if (address == CPU_ICNT)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   806      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   807          ccnt.U = __mfcr(CPU_ICNT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   808      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   809      else if (address == CPU_M1CNT)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   810      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   811          ccnt.U = __mfcr(CPU_M1CNT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   812      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   813      else if (address == CPU_M2CNT)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   814      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   815          ccnt.U = __mfcr(CPU_M2CNT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   816      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   817      else if (address == CPU_M3CNT)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   818      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   819          ccnt.U = __mfcr(CPU_M3CNT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   820      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   821  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   822      return ccnt.B.CountValue;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   823  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   824  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   825  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   826  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   827  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   828      Ifx_CPU_CCNT ccnt;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   829  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   830      if (address == CPU_CCNT)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   831      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   832          ccnt.U = __mfcr(CPU_CCNT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   833      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   834      else if (address == CPU_ICNT)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   835      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   836          ccnt.U = __mfcr(CPU_ICNT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   837      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   838      else if (address == CPU_M1CNT)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   839      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   840          ccnt.U = __mfcr(CPU_M1CNT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   841      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   842      else if (address == CPU_M2CNT)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   843      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   844          ccnt.U = __mfcr(CPU_M2CNT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   845      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   846      else if (address == CPU_M3CNT)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   847      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   848          ccnt.U = __mfcr(CPU_M3CNT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   849      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   850  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   851      return ccnt.B.SOvf;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   852  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   853  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   854  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   855  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   856  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   857      uint32  k;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   858      uint32  nxt_cxi_val = 0;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   859      uint32 *prvCsa      = 0U;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   860      uint32 *nxtCsa      = csaBegin;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   861      uint32  numOfCsa    = (((uint32)csaEnd - (uint32)csaBegin) / 64U);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   862  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   863      for (k = 0; k < numOfCsa; k++)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   864      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   865          nxt_cxi_val = ((uint32)nxtCsa & (0XFU << 28)) >> 12 | ((uint32)nxtCsa & (0XFFFFU << 6)) >> 6;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   866  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   867          if (k == 0)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   868          {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   869              __mtcr(CPU_FCX, nxt_cxi_val);   /* store the new pcxi value to LCX */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   870          }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   871          else
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   872          {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   873              *prvCsa = nxt_cxi_val;  /* Store null pointer in last CSA (= very first time!) */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   874          }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   875  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   876          if (k == (numOfCsa - 3U))
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   877          {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   878              __mtcr(CPU_LCX, nxt_cxi_val);   /* Last but 2 context save area is pointed in LCX to know if there is CSA depletion */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   879          }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   880  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   881          prvCsa  = (uint32 *)nxtCsa;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   882          nxtCsa += 16;           /* next CSA */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   883      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   884  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   885      *prvCsa = 0;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   886  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   887  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   888  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   889  IFX_INLINE void IfxCpu_invalidateProgramCache(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   890  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   891      uint16 cpuWdtPassword = IfxScuWdt_getCpuWatchdogPassword();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   892      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   893          IfxScuWdt_clearCpuEndinit(cpuWdtPassword);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   894          Ifx_CPU_PCON1 pcon1;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   895          pcon1.U       = __mfcr(CPU_PCON1);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   896          pcon1.B.PCINV = 1;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   897          __mtcr(CPU_PCON1, pcon1.U);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   898          IfxScuWdt_setCpuEndinit(cpuWdtPassword);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   899      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   900  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   901  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   902  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   903  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   904  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   905      uint8 segment = (uint32)address >> 24;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   906      return ((segment == IFXCPU_CACHABLE_FLASH_SEGMENT) || (segment == IFXCPU_CACHABLE_LMU_SEGMENT)) ? TRUE : FALSE;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   907  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   908  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   909  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   910  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   911  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   912      Ifx_CPU_CCTRL cctrl;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   913      cctrl.U    = __mfcr(CPU_CCTRL);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   914      /*Disable the counters */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   915      cctrl.B.CE = 0;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   916      __mtcr(CPU_CCTRL, cctrl.U);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   917  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   918      /* reset the counters */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   919      __mtcr(CPU_CCNT, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   920      __mtcr(CPU_ICNT, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   921      __mtcr(CPU_M1CNT, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   922      __mtcr(CPU_M2CNT, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   923      __mtcr(CPU_M3CNT, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   924  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   925      /*Enable the counters, set the counter mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   926      cctrl.B.CE = 1;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   927      cctrl.B.CM = mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   928      __mtcr(CPU_CCTRL, cctrl.U);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   929  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   930  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   931  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   932  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   933  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   934      if (enabled != FALSE)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   935      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   936          __enable();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   937      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   938  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   939  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   940  
	enable

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   938      if (enabled != FALSE)      (inlined)
.L6:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   230      return stmNow;      (inlined)
	j	.L7

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   231  }      (inlined)
.L7:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    54  t(Ifx_DateTime *dt)
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    55  {
	movh.a	a2,#@his(TimeConst)
	lea	a2,[a2]@los(TimeConst)
	ld.d	e6,[a2]64
.L136:
	call	__ll_div64
.L87:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    56      sint32 seconds = (sint32)(now() / TimeConst_1s);
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    57  
	movh.a	a2,#@his(g_DateTimeOffset)
	lea	a2,[a2]@los(g_DateTimeOffset)
	ld.w	d15,[a2]
.L91:
	add	d2,d15
.L137:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    58      seconds     = seconds + g_DateTimeOffset;
	mov	d15,#3600
.L138:
	div	e0,d2,d15
.L139:
	st.w	[a15],d0
.L140:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    59      dt->hours   = seconds / 3600;
	mov	d15,#60
.L141:
	div	e0,d2,d15
.L142:
	st.w	[a15]4,d0
.L143:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    60      dt->minutes = seconds / 60;
	ld.w	d15,[a15]4
.L144:
	mov	d0,#60
.L145:
	div	e0,d15,d0
.L146:
	st.w	[a15]4,d1
.L147:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    61      dt->minutes = dt->minutes % 60;
	mov	d15,#60
.L148:
	div	e0,d2,d15
.L149:
	st.w	[a15]8,d1
.L150:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    62      dt->seconds = seconds % 60;
	ret
.L72:
	
__DateTime_get_function_end:
	.size	DateTime_get,__DateTime_get_function_end-DateTime_get
.L31:
	; End of function
	
	.sdecl	'.text.Ifx_DateTime.DateTime_set',code,cluster('DateTime_set')
	.sect	'.text.Ifx_DateTime.DateTime_set'
	.align	2
	
	.global	DateTime_set

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    63  }
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    64  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    65  
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    66  /** \brief Set the real time */
; Function DateTime_set
.L17:
DateTime_set:	.type	func
	mov.aa	a15,a4
.L40:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    45   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    46   * \ingroup IfxLld_Cpu_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    47   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    48   * \ingroup IfxLld_Cpu_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    49   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    50   * \ingroup IfxLld_Cpu_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    51   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    52   * \ingroup IfxLld_Cpu_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    53   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    54   * \ingroup IfxLld_Cpu_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    55   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    56   * \ingroup IfxLld_Cpu_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    57   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    58   * \ingroup IfxLld_Cpu_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    59   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    60   * \ingroup IfxLld_Cpu_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    61   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    62  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    63  #ifndef IFXCPU_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    64  #define IFXCPU_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    65  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    66  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    67  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    68  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    69  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    70  #include "_Impl/IfxCpu_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    71  #include "IfxSrc_reg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    72  #include "IfxScu_reg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    73  #include "IfxStm_reg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    74  #include "_Impl/IfxScu_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    75  #include "_Utilities/Ifx_Assert.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    76  #include "Scu/Std/IfxScuWdt.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    77  #include "Scu/Std/IfxScuCcu.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    78  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    79  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    80  /*-----------------------------------Macros-----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    81  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    82  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    83  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    84   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    85   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    86   * the CPU number.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    87   * Example usage:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    88   *  \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    89   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    90   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    91   *  \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    92   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    93  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    94  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    95  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    96   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    97   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    98   * the CPU number.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    99   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   100   *   Example usage:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   101   *   \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   102   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   103   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   104   *   \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   105   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   106  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   107  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   108  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   109  /*------------------------------Type Definitions------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   110  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   111  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   112  /** \brief Lock type Spin lock
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   113   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   114  typedef unsigned int IfxCpu_spinLock;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   115  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   116  /** \brief Lock type Mutex lock
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   117   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   118  typedef unsigned int IfxCpu_mutexLock;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   119  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   120  /** \brief Event used for synchronisation.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   121   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   122  typedef unsigned int IfxCpu_syncEvent;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   123  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   124  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   125  /*--------------------------------Enumerations--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   126  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   127  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   128  /** \addtogroup IfxLld_Cpu_Std_Enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   129   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   130  /** \brief Enumeration for the Cpu mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   131   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   132  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   133  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   134      IfxCpu_CoreMode_halt,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   135      IfxCpu_CoreMode_run,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   136      IfxCpu_CoreMode_idle,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   137      IfxCpu_CoreMode_sleep,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   138      IfxCpu_CoreMode_stby,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   139      IfxCpu_CoreMode_unknown
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   140  } IfxCpu_CoreMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   141  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   142  /** \brief Performance conunter modes
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   143   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   144  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   145  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   146      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   147      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   148  } IfxCpu_CounterMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   149  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   150  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   151  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   152  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   153  /*-----------------------------Data Structures--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   154  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   155  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   156  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   157   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   158  /** \brief counter
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   159   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   160  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   161  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   162      uint32  counter;        /**< \brief Counter value */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   163      boolean overlfow;       /**< \brief sticky overlfow */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   164  } IfxCpu_Counter;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   165  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   166  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   167  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   168  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   169   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   170  /** \brief Performance counter result
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   171   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   172  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   173  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   174      IfxCpu_Counter instruction;       /**< \brief Instruction counter */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   175      IfxCpu_Counter clock;             /**< \brief CPU clock counter */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   176      IfxCpu_Counter counter1;          /**< \brief Multi counter 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   177      IfxCpu_Counter counter2;          /**< \brief Multi counter 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   178      IfxCpu_Counter counter3;          /**< \brief Multi counter 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   179  } IfxCpu_Perf;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   180  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   181  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   182  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   183  /** \addtogroup IfxLld_Cpu_Std_Core
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   184   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   185  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   186  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   187  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   188  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   189  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   190  /** \brief API to get the address for CPU HW module register memory map
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   191   * \param cpu Resource index of the CPU
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   192   * \return CPU module register address
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   193   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   194  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   195  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   196  /** \brief API to get core id of the CPU of the caller.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   197   * Caution: Core id of the cpu's may not be continguous and shouldn't be used to index cpu.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   198   * Use IfxCpu_getCoreIndex() to get cpu no.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   199   * \return Resource index of the CPU.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   200   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   201  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   202  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   203  /** \brief API to get cpu index of the caller CPU.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   204   * Note: This api can be used whereever cpu no/index is needed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   205   * \return Resource index of the CPU.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   206   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   207  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   208  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   209  /** \brief API to initialize the context save area of the CPU where this is called.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   210   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   211   * This API can initialize the CSA of the host CPU where this API is called. This API
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   212   * shall not be used to initialize the CSA of another CPU
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   213   * \param csaBegin Pointer to start of context save area
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   214   * \param csaEnd Pointer to end of context save area
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   215   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   216   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   217  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   218  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   219  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   220   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   221   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   222  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   223  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   224  /** \brief Triggers Software Reset
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   225   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   226   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   227  IFX_INLINE void IfxCpu_triggerSwReset(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   228  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   229  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   230  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   231  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   232  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   233  /** \brief API to get current mode of CPU
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   234   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   235   * \return Current mode of the CPU
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   236   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   237  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   238  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   239  /** \brief API to get current mode of CPU
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   240   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   241   * \return Resource index of the CPU
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   242   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   243  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   244  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   245  /** \brief API to set mode of the CPU
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   246   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   247   * \param mode CPU mode to be set by this API
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   248   * \return Success status of the activity (setting the core mode).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   249   * \retval TRUE: If the activity successfully be performed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   250   * \retval FALSE: If the activity can't be performed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   251   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   252  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   253  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   254  /** \brief API to set the program counter for the CPU specified.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   255   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   256   * \param programCounter Program counter value to be set
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   257   * \return success status of the activity (setting program counter value).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   258   * \retval TRUE: If the activity successfully be performed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   259   * \retval FALSE: If the activity can't be performed
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   260   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   261  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   262  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   263  /** \brief API to set the program counter for the CPU specified and start the CPU
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   264   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   265   * \param programCounter Program counter value to start the CPU
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   266   * \return success status of the activity (setting program counter value).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   267   * \retval TRUE: If the activity successfully be performed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   268   * \retval FALSE: If the activity can't be performed
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   269   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   270  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   271  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   272  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   273  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   274  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   275   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   276  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   277  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   278  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   279  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   280  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   281  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   282   * This API provides the status of CPU where this API is called
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   283   * \return Status of global interrupt enable bit.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   284   * \retval TRUE: Global interrupts enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   285   * \retval FALSE: Global interrupts disabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   286   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   287  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   288  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   289  /** \brief API to disable global interrupt and return the previous status.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   290   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   291   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   292   * used for this activity towards other CPUs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   293   * \return Previous status of global interrupt enable bit.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   294   * \retval TRUE: Previously, global interrupts enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   295   * \retval FALSE: Previously, global interrupts disabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   296   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   297  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   298  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   299  /** \brief API to enable global interrupt.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   300   * This API simply enables the global interrupt.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   301   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   302   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   303  IFX_INLINE void IfxCpu_enableInterrupts(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   304  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   305  /** \brief Disable the Global Interrupt
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   306   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   307   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   308  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   309  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   310  /** \brief API to restore global interrupt with that of the passed parameter.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   311   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   312   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   313   * used for this activity towards other CPUs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   314   * \param enabled Previous status of the global interrupt enable bit
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   315   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   316   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   317  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   318  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   319  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   320  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   321  /** \addtogroup IfxLld_Cpu_Std_Cache
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   322   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   323  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   324  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   325  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   326  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   327  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   328  /** \brief API to enable/ disable the data cacheability for selected segments
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   329   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   330   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   331   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   332   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   333   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   334   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   335  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   336  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   337  /** \brief API to enable/ disable the instruction cacheability for selected segments
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   338   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   339   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   340   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   341   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   342   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   343   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   344  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   345  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   346  /** \brief API to invalidate the program cache
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   347   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   348   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   349  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   350  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   351  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   352   * \param address Address
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   353   * \return Status TRUE/FALSE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   354   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   355  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   356  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   357  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   358   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   359   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   360   * used for this activity towards other CPUs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   361   * \param enable Command to enable or bypass the data cache
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   362   * TRUE: Enable the data cache.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   363   * FALSE: Bypass the data cache.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   364   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   365   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   366  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   367  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   368  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   369   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   370   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   371   * used for this activity towards other CPUs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   372   * \param enable Command to enable or bypass the program cache.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   373   * TRUE: Enable the program cache.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   374   * FALSE: Bypass the program cache
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   375   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   376   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   377  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   378  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   379  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   380  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   381  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   382   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   383  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   384  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   385  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   386  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   387  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   388  /** \brief API to read the clock counter for the CPU which calls this API.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   389   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   390   * This API can be used to read clock counter of only the caller CPU. It cannot be
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   391   * used for this activity towards other CPUs.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   392   * \return Counter value. 0 to 0x7FFFFFFF.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   393   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   394  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   395  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   396  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   397   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   398   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   399   * It cannot be used for this activity towards other CPUs.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   400   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   401   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   402   * reading the counter
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   403   * \return Status of sticky overflow bit.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   404   * \retval TRUE: Sticky overflow bit is set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   405   * \retval FALSE: Sticky overflow bit is reset
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   406   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   407  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   408  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   409  /** \brief API to read the instruction counter for the CPU which calls this API.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   410   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   411   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   412   * used for this activity towards other CPUs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   413   * \return Counter value. 0 to 0x7FFFFFFF.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   414   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   415  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   416  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   417  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   418   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   419   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   420   * It cannot be used for this activity towards other CPUs.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   421   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   422   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   423   * reading the counter
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   424   * \return Status of sticky overflow bit.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   425   * \retval TRUE: Sticky overflow bit is set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   426   * \retval FALSE: Sticky overflow bit is reset
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   427   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   428  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   429  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   430  /** \brief API to read the performance counter for the CPU which calls this API.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   431   * \param address Address
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   432   * \return counter value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   433   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   434  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   435  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   436  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   437   * This is generic function to get sticky overflow bit of any performance counters
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   438   * \param address Address
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   439   * \return Status
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   440   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   441  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   442  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   443  /** \brief Reset and start instruction, clock and multi counters
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   444   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   445   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   446   * \param mode Counter mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   447   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   448   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   449  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   450  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   451  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   452   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   453   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   454   * used for this activity towards other CPUs.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   455   * \param enable enable Command to enable or disable the performance counter.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   456   * TRUE: Enable the performance counter.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   457   * FALSE: Disable the performance counter
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   458   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   459   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   460  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   461  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   462  #if !((defined(__cplusplus)) && (defined(__TASKING__)))
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   463  /** \brief Stop instruction and clock counters, return their values
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   464   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   465   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   466   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   467   * \return Performance counter result
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   468   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   469  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   470  #endif
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   471  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   472  /** \brief API to update clock counter for the CPU which calls this API.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   473   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   474   * This API can be used to update clock counter of only the caller CPU. It cannot be
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   475   * used for this activity towards other CPUs.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   476   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   477   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   478   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   479  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   480  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   481  /** \brief API to update Instruction counter for the CPU which calls this API.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   482   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   483   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   484   * used for this activity towards other CPUs.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   485   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   486   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   487   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   488  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   489  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   490  /** \brief API to update performance counter for the CPU which calls this API.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   491   * This is generic function to update any of the performance counters
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   492   * \param address Address
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   493   * \param count Count
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   494   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   495   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   496  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   497  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   498  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   499  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   500  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   501   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   502  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   503  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   504  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   505  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   506  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   507  /** \brief API to acquire the mutex (binary semaphore).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   508   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   509   * This API can be used to acquire/get the mutex.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   510   * \param lock lock pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   511   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   512   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   513   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   514   *    IfxCpu_mutexLock resourceLock;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   515   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   516   *    if (flag){
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   517   *      // critical section
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   518   *      IfxCpu_releaseMutex(&resourceLock);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   519   *    }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   520   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   521   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   522   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   523  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   524  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   525  /** \brief API to unlock the mutex .
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   526   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   527   * This API can be used to unlock the previously acquired mutex
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   528   * \param lock lock pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   529   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   530   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   531   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   532   *    IfxCpu_mutexLock resourceLock;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   533   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   534   *    if (flag){
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   535   *      // critical section
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   536   *      IfxCpu_releaseMutex(&resourceLock);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   537   *    }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   538   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   539   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   540   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   541  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   542  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   543  /** \brief API to unlock the resource .
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   544   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   545   * This API can be used to unlock the previously acquired lock
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   546   * \param lock lock pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   547   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   548   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   549  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   550  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   551  /** \brief API to lock the resource in spin mode with the given timeout.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   552   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   553   * This API can be used to spin lock for the lock for the given timeout period.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   554   * \param lock lock pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   555   * \param timeoutCount loop counter value used for timeout to acquire lock
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   556   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   557   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   558   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   559   *    IfxCpu_spinLock resourceLock;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   560   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   561   *    if (flag){
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   562   *      // critical section
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   563   *      IfxCpu_resetSpinLock(&resourceLock);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   564   *    }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   565   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   566   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   567   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   568  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   569  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   570  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   571  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   572  /** \addtogroup IfxLld_Cpu_Std_Utility
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   573   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   574  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   575  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   576  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   577  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   578  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   579  /** \brief API to get random value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   580   * \param seed Pointer to seed value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   581   * \return random value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   582   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   583  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   584  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   585  /** \brief API to get random value with in the range
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   586   * \param seed Pointer to seed value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   587   * \param min minimum range value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   588   * \param max maximum range value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   589   * \return random value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   590   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   591  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   592  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   593  /** \brief This function waits till all the cores have set their corresponding bits in the event. This function along with
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   594   * IfxCpu_emitEvent() are used to achieve the synchronisation between the configured cores. By default
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   595   * "IFXCPU_CFG_ALLCORE_DONE" macro defined for all the cores. In case the user wants to check for
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   596   * synchronisation among the required cores, the macro can be redefined with the value accroing to the
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   597   * CORE_ID register.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   598   * The IfxCpu_emitEvent() is to be used in the Main functions of the Cores where the user wants to check for synchronisation.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   599   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   600   * e.g:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   601   * 1. Check for synchronisation between core 0 and core 5
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   602   * # define 0x41U
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   603   * 2. Check for synchronisation between core 0 to core 5
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   604   * # define 0x5FU
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   605   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   606   * Note:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   607   * Core id values read from CORE_ID register will be as shown below. The value indicates the position of the bit needs to be set while building the macro.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   608   * Core 0: 0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   609   * Core 1: 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   610   * Core 2: 2
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   611   * Core 3: 3
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   612   * Core 4: 4
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   613   * Core 5: 6
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   614   * \param event Synchronous Event
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   615   * \param timeoutMilliSec timeout in millisec
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   616   * \return Error condition
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   617   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   618   * The functions IfxCpu_waitEvent and IfxCpu_emitEvent are used to achieve synchronisation between all cores (i.e individual cores wait till all cores have reached the synchronisation point). The IfxCpu_waitEvent returns 1 incase a timeout occurs.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   619   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   620   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   621   * // Global variable. preferably located in  shared memory.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   622   * IfxCpu_syncEvent event;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   623   * boolean errorVal;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   624   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   625   * // Below code should be repeated in Each core
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   626   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   627   * // Upon reaching Synchonisation point
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   628   * IfxCpu_emitEvent(&event);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   629   * errorVal = IfxCpu_waitEvent(&event, timeoutMilliSec); // timeoutMilliSec is timeout value to wait
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   630   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   631   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   632   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   633   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   634  IFX_EXTERN boolean IfxCpu_waitEvent(IfxCpu_syncEvent *event, uint32 timeoutMilliSec);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   635  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   636  /** \brief This function sets a bit corresponding to the core in the event.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   637   * \param event Synchronous Event
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   638   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   639   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   640   * A coding example can be found in \ref IfxCpu_waitEvent
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   641   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   642   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   643  IFX_EXTERN void IfxCpu_emitEvent(IfxCpu_syncEvent *event);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   644  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   645  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   646  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   647  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   648  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   649  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   650  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   651  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   652  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   653      Ifx_CPU_ICR reg;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   654      reg.U = __mfcr(CPU_ICR);
	mfcr	d15,#65068
.L96:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   655      return reg.B.IE != 0;
	extr.u	d15,d15,#15,#1
.L97:
	ne	d15,d15,#0
.L98:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   655      return reg.B.IE != 0;      (inlined)
	j	.L8

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   656  }      (inlined)
.L8:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   656  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   657  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   658  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   659  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   660  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   661      boolean enabled;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   662      enabled = IfxCpu_areInterruptsEnabled();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   663      __disable();
	disable
.L112:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   664      __nop();
	nop
.L113:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   665      return enabled;      (inlined)
	j	.L9

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   666  }      (inlined)
.L9:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   110      return IfxCpu_disableInterrupts();      (inlined)
	j	.L10

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   111  }      (inlined)
.L10:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     2   * \file IfxStm.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     3   * \brief STM  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     4   * \ingroup IfxLld_Stm
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    44   * \defgroup IfxLld_Stm_Usage How to use the Stm driver?
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    45   * \ingroup IfxLld_Stm
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    46   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    47   * The Stm Standard driver provides APIs to initialize, configure and control the Stm.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    48   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    49   * In the following sections it will be described, how to integrate the driver into the application framework.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    50   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    51   * \section IfxLld_Stm_Preparation Preparation
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    52   * \subsection IfxLld_Stm_Include Include Files
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    53   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    54   * Include following header file into your C code:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    55   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    56   * #include <Stm/Std/IfxStm.h>
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    57   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    58   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    59   * \subsection IfxLld_Stm_Variables Variables
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    60   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    61   * Declare STM variables :
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    62   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    63   * Ifx_STM *stmSfr;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    64   * IfxStm_CompareConfig stmConfig;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    65   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    66   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    67   * \subsection IfxLld_Stm_Interrupt Interrupt Handler Installation
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    68   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    69   * See also \ref IfxLld_Cpu_Irq_Usage
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    70   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    71   * Define priorities for the Interrrupt handlers. This is normally done in the Ifx_IntPrioDef.h file:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    72   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    73   * // priorities are normally defined in Ifx_IntPrioDef.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    74   * #define IFX_INTPRIO_STM0_SR0  10
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    75   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    76   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    77   * Add the interrupt service routines to your C code. They have to call the Stm interrupt handlers:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    78   * please take care in choosing number of ticks, the below example code will raise an interrupt
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    79   * evry time the specified number of ticks have been elapsed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    80   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    81   * IFX_INTERRUPT(stm0Sr0ISR, 0, IFX_INTPRIO_STM0_SR0)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    82   * {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    83   *     IfxStm_clearCompareFlag(stmSfr, stmConfig.comparator);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    84   *     IfxStm_increaseCompare(stmSfr, stmConfig.comparator, stmConfig.ticks);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    85   * }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    86   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    87   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    88   * Finally install the interrupt handlers in your initialisation function:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    89   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    90   *     // install interrupt handlers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    91   *     IfxCpu_Irq_installInterruptHandler(&stm0Sr0ISR, IFX_INTPRIO_STM0_SR0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    92   *     IfxCpu_enableInterrupts();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    93   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    94   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    95   * \subsection IfxLld_Stm_Init Module Initialisation
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    96   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    97   * The STM module can be configured to generate an interrupt at every compare match of the selected comaparator with the desired compare value, the interrupt can further be routed to other comparator.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    98   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    99   * The module initialisation can be done as followed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   100   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   101   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   102   *     stmSfr = &MODULE_STM0;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   103   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   104   *     IfxStm_initCompareConfig(&stmConfig);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   105   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   106   *     // configure to generate interrupt every 10 us
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   107   *     sint32 ticks = IfxStm_getTicksFromMicroseconds(10);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   108   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   109   *     stmConfig.ticks = ticks;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   110   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   111   *     stmConfig.triggerPriority = IFX_INTPRIO_STM0_SR0;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   112   *     stmConfig.typeOfService = IfxSrc_Tos_cpu0;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   113   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   114   *     IfxStm_initCompare(stmSfr, &stmConfig);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   115   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   116   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   117   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   118   * Now the Stm shall generate interrupts regularly based on the configured time !
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   119   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   120   * \defgroup IfxLld_Stm_Std_Enumerations Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   121   * \ingroup IfxLld_Stm_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   122   * \defgroup IfxLld_Stm_Std_Structures Data Structures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   123   * \ingroup IfxLld_Stm_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   124   * \defgroup IfxLld_Stm_Std_Module Module Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   125   * \ingroup IfxLld_Stm_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   126   * \defgroup IfxLld_Stm_Std_Timer Timer Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   127   * \ingroup IfxLld_Stm_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   128   * \defgroup IfxLld_Stm_Std_Comparator Comparator Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   129   * \ingroup IfxLld_Stm_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   130   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   131  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   132  #ifndef IFXSTM_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   133  #define IFXSTM_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   134  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   135  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   136  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   137  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   138  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   139  #include "_Impl/IfxStm_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   140  #include "Scu/Std/IfxScuCcu.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   141  #include "Src/Std/IfxSrc.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   142  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   143  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   144  /*--------------------------------Enumerations--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   145  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   146  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   147  /** \addtogroup IfxLld_Stm_Std_Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   148   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   149  /** \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   150   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   151  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   152  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   153      IfxStm_Comparator_0 = 0,      /**< \brief Comparator Id 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   154      IfxStm_Comparator_1           /**< \brief Comparator Id 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   155  } IfxStm_Comparator;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   156  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   157  /** \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   158   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   159  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   160  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   161      IfxStm_ComparatorInterrupt_ir0 = 0,  /**< \brief Select STMIR0 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   162      IfxStm_ComparatorInterrupt_ir1 = 1   /**< \brief Select STMIR1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   163  } IfxStm_ComparatorInterrupt;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   164  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   165  /** \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   166   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   167  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   168  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   169      IfxStm_ComparatorOffset_0 = 0,      /**< \brief Comparator start bit position 0 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   170      IfxStm_ComparatorOffset_1,          /**< \brief Comparator start bit position 1 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   171      IfxStm_ComparatorOffset_2,          /**< \brief Comparator start bit position 2 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   172      IfxStm_ComparatorOffset_3,          /**< \brief Comparator start bit position 3 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   173      IfxStm_ComparatorOffset_4,          /**< \brief Comparator start bit position 4 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   174      IfxStm_ComparatorOffset_5,          /**< \brief Comparator start bit position 5 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   175      IfxStm_ComparatorOffset_6,          /**< \brief Comparator start bit position 6 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   176      IfxStm_ComparatorOffset_7,          /**< \brief Comparator start bit position 7 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   177      IfxStm_ComparatorOffset_8,          /**< \brief Comparator start bit position 8 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   178      IfxStm_ComparatorOffset_9,          /**< \brief Comparator start bit position 9 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   179      IfxStm_ComparatorOffset_10,         /**< \brief Comparator start bit position 10 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   180      IfxStm_ComparatorOffset_11,         /**< \brief Comparator start bit position 11 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   181      IfxStm_ComparatorOffset_12,         /**< \brief Comparator start bit position 12 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   182      IfxStm_ComparatorOffset_13,         /**< \brief Comparator start bit position 13 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   183      IfxStm_ComparatorOffset_14,         /**< \brief Comparator start bit position 14 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   184      IfxStm_ComparatorOffset_15,         /**< \brief Comparator start bit position 15 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   185      IfxStm_ComparatorOffset_16,         /**< \brief Comparator start bit position 16 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   186      IfxStm_ComparatorOffset_17,         /**< \brief Comparator start bit position 17 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   187      IfxStm_ComparatorOffset_18,         /**< \brief Comparator start bit position 18 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   188      IfxStm_ComparatorOffset_19,         /**< \brief Comparator start bit position 19 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   189      IfxStm_ComparatorOffset_20,         /**< \brief Comparator start bit position 20 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   190      IfxStm_ComparatorOffset_21,         /**< \brief Comparator start bit position 21 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   191      IfxStm_ComparatorOffset_22,         /**< \brief Comparator start bit position 22 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   192      IfxStm_ComparatorOffset_23,         /**< \brief Comparator start bit position 23 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   193      IfxStm_ComparatorOffset_24,         /**< \brief Comparator start bit position 24 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   194      IfxStm_ComparatorOffset_25,         /**< \brief Comparator start bit position 25 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   195      IfxStm_ComparatorOffset_26,         /**< \brief Comparator start bit position 26 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   196      IfxStm_ComparatorOffset_27,         /**< \brief Comparator start bit position 27 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   197      IfxStm_ComparatorOffset_28,         /**< \brief Comparator start bit position 28 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   198      IfxStm_ComparatorOffset_29,         /**< \brief Comparator start bit position 29 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   199      IfxStm_ComparatorOffset_30,         /**< \brief Comparator start bit position 30 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   200      IfxStm_ComparatorOffset_31          /**< \brief Comparator start bit position 31 with 64 bit timer  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   201  } IfxStm_ComparatorOffset;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   202  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   203  /** \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   204   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   205  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   206  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   207      IfxStm_ComparatorSize_1Bit   = 0,   /**< \brief Size of compare value to compare with timer: 1 bit */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   208      IfxStm_ComparatorSize_2Bits  = 1,   /**< \brief Size of compare value to compare with timer: 2 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   209      IfxStm_ComparatorSize_3Bits  = 2,   /**< \brief Size of compare value to compare with timer: 3 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   210      IfxStm_ComparatorSize_4Bits  = 3,   /**< \brief Size of compare value to compare with timer: 4 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   211      IfxStm_ComparatorSize_5Bits  = 4,   /**< \brief Size of compare value to compare with timer: 5 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   212      IfxStm_ComparatorSize_6Bits  = 5,   /**< \brief Size of compare value to compare with timer: 6 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   213      IfxStm_ComparatorSize_7Bits  = 6,   /**< \brief Size of compare value to compare with timer: 7 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   214      IfxStm_ComparatorSize_8Bits  = 7,   /**< \brief Size of compare value to compare with timer: 8 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   215      IfxStm_ComparatorSize_9Bits  = 8,   /**< \brief Size of compare value to compare with timer: 9 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   216      IfxStm_ComparatorSize_10Bits = 9,   /**< \brief Size of compare value to compare with timer: 10 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   217      IfxStm_ComparatorSize_11Bits = 10,  /**< \brief Size of compare value to compare with timer: 11 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   218      IfxStm_ComparatorSize_12Bits = 11,  /**< \brief Size of compare value to compare with timer: 12 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   219      IfxStm_ComparatorSize_13Bits = 12,  /**< \brief Size of compare value to compare with timer: 13 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   220      IfxStm_ComparatorSize_14Bits = 13,  /**< \brief Size of compare value to compare with timer: 14 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   221      IfxStm_ComparatorSize_15Bits = 14,  /**< \brief Size of compare value to compare with timer: 15 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   222      IfxStm_ComparatorSize_16Bits = 15,  /**< \brief Size of compare value to compare with timer: 16 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   223      IfxStm_ComparatorSize_17Bits = 16,  /**< \brief Size of compare value to compare with timer: 17 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   224      IfxStm_ComparatorSize_18Bits = 17,  /**< \brief Size of compare value to compare with timer: 18 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   225      IfxStm_ComparatorSize_19Bits = 18,  /**< \brief Size of compare value to compare with timer: 19 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   226      IfxStm_ComparatorSize_20Bits = 19,  /**< \brief Size of compare value to compare with timer: 20 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   227      IfxStm_ComparatorSize_21Bits = 20,  /**< \brief Size of compare value to compare with timer: 21 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   228      IfxStm_ComparatorSize_22Bits = 21,  /**< \brief Size of compare value to compare with timer: 22 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   229      IfxStm_ComparatorSize_23Bits = 22,  /**< \brief Size of compare value to compare with timer: 23 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   230      IfxStm_ComparatorSize_24Bits = 23,  /**< \brief Size of compare value to compare with timer: 24 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   231      IfxStm_ComparatorSize_25Bits = 24,  /**< \brief Size of compare value to compare with timer: 25 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   232      IfxStm_ComparatorSize_26Bits = 25,  /**< \brief Size of compare value to compare with timer: 26 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   233      IfxStm_ComparatorSize_27Bits = 26,  /**< \brief Size of compare value to compare with timer: 27 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   234      IfxStm_ComparatorSize_28Bits = 27,  /**< \brief Size of compare value to compare with timer: 28 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   235      IfxStm_ComparatorSize_29Bits = 28,  /**< \brief Size of compare value to compare with timer: 29 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   236      IfxStm_ComparatorSize_30Bits = 29,  /**< \brief Size of compare value to compare with timer: 30 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   237      IfxStm_ComparatorSize_31Bits = 30,  /**< \brief Size of compare value to compare with timer: 31 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   238      IfxStm_ComparatorSize_32Bits = 31   /**< \brief Size of compare value to compare with timer: 32 bits */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   239  } IfxStm_ComparatorSize;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   240  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   241  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   242   * Definition in Ifx_STM.CLC.B.EDIS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   243   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   244  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   245  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   246      IfxStm_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   247      IfxStm_SleepMode_disable = 1  /**< \brief disables sleep mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   248  } IfxStm_SleepMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   249  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   250  /** \brief OCDS Suspend Control (OCDS.SUS)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   251   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   252  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   253  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   254      IfxStm_SuspendMode_none = 0,  /**< \brief No suspend */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   255      IfxStm_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   256      IfxStm_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   257  } IfxStm_SuspendMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   258  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   259  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   260  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   261  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   262  /*-----------------------------Data Structures--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   263  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   264  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   265  /** \addtogroup IfxLld_Stm_Std_Structures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   266   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   267  /** \brief Comparator Configuration Structure
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   268   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   269  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   270  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   271      IfxStm_Comparator          comparator;                /**< \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2). */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   272      IfxStm_ComparatorInterrupt comparatorInterrupt;       /**< \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1). */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   273      IfxStm_ComparatorOffset    compareOffset;             /**< \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2). */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   274      IfxStm_ComparatorSize      compareSize;               /**< \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2). */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   275      uint32                     ticks;                     /**< \brief count for next comparison from current timer count. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   276      Ifx_Priority               triggerPriority;           /**< \brief Interrupt priority. Range = 0 .. 255. 0 = interrupt is disabled. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   277      IfxSrc_Tos                 typeOfService;             /**< \brief Type of service. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   278  } IfxStm_CompareConfig;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   279  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   280  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   281  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   282  /** \addtogroup IfxLld_Stm_Std_Module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   283   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   284  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   285  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   286  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   287  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   288  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   289  /** \brief Returns system timer value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   290   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   291   * \return system timer value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   292   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   293  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   294  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   295  /** \brief Returns the system timer frequency.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   296   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   297   * \return the system timer frequency in Hz.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   298   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   299  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   300  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   301  /** \brief Returns the module's suspend state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   302   * TRUE :if module is suspended.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   303   * FALSE:if module is not yet suspended.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   304   * \param stm Pointer to STM module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   305   * \return Suspend status (TRUE / FALSE)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   306   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   307  IFX_INLINE boolean IfxStm_isModuleSuspended(Ifx_STM *stm);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   308  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   309  /** \brief Configure the Module to Hard/Soft suspend mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   310   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   311   * \param stm Pointer to STM module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   312   * \param mode Module suspend mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   313   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   314   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   315  IFX_INLINE void IfxStm_setSuspendMode(Ifx_STM *stm, IfxStm_SuspendMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   316  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   317  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   318  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   319  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   320  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   321  /** \brief Disables the Stm module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   322   * \param stm pointer to STM registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   323   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   324   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   325  IFX_EXTERN void IfxStm_disableModule(Ifx_STM *stm);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   326  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   327  /** \brief enable suspend by debugger.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   328   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   329   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   330   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   331  IFX_EXTERN void IfxStm_enableOcdsSuspend(Ifx_STM *stm);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   332  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   333  /** \brief Returns the module index of the selected STM module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   334   * \param stm Pointer to STM module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   335   * \return STM module register address
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   336   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   337  IFX_EXTERN Ifx_STM *IfxStm_getAddress(IfxStm_Index stm);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   338  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   339  /** \brief API to get the resource index of the STM specified.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   340   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   341   * \return system timer module index.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   342   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   343  IFX_EXTERN IfxStm_Index IfxStm_getIndex(Ifx_STM *stm);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   344  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   345  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   346  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   347  /** \addtogroup IfxLld_Stm_Std_Timer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   348   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   349  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   350  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   351  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   352  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   353  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   354  /** \brief Returns the lower system timer value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   355   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   356   * \return the lower system timer value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   357   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   358  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   359  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   360  /** \brief Gets the TIM3 couter value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   361   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   362   * \return TIM3 counter value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   363   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   364  IFX_INLINE uint32 IfxStm_getOffset12Timer(Ifx_STM *stm);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   365  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   366  /** \brief Gets the TIM4 couter value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   367   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   368   * \return TIM4 counter value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   369   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   370  IFX_INLINE uint32 IfxStm_getOffset16Timer(Ifx_STM *stm);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   371  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   372  /** \brief Gets the TIM5 couter value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   373   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   374   * \return TIM5 counter value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   375   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   376  IFX_INLINE uint32 IfxStm_getOffset20Timer(Ifx_STM *stm);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   377  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   378  /** \brief Gets the TIM6 couter value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   379   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   380   * \return TIM6 counter value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   381   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   382  IFX_INLINE uint32 IfxStm_getOffset32Timer(Ifx_STM *stm);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   383  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   384  /** \brief Gets the TIM1 couter value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   385   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   386   * \return TIM1 counter value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   387   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   388  IFX_INLINE uint32 IfxStm_getOffset4Timer(Ifx_STM *stm);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   389  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   390  /** \brief Gets the TIM2 couter value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   391   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   392   * \return TIM2 counter value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   393   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   394  IFX_INLINE uint32 IfxStm_getOffset8Timer(Ifx_STM *stm);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   395  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   396  /** \brief Returns the timer value shifted right by offset.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   397   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   398   * \param offset offset value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   399   * \return the lower system timer value shifted by offset.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   400   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   401  IFX_INLINE uint32 IfxStm_getOffsetTimer(Ifx_STM *stm, uint8 offset);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   402  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   403  /** \brief Wait for requested time.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   404   * The macro waits in while loop for the specified time in system timer ticks.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   405   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   406   * \param ticks ticks Wait time in system timer ticks.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   407   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   408   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   409  IFX_INLINE void IfxStm_waitTicks(Ifx_STM *stm, uint32 ticks);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   410  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   411  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   412  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   413  /** \addtogroup IfxLld_Stm_Std_Comparator
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   414   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   415  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   416  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   417  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   418  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   419  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   420  /** \brief Returns the updated compare register value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   421   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   422   * \param comparator comparator selection comparator.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   423   * \return The compare value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   424   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   425  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   426  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   427  /** \brief Returns the number of ticks for the selected micro seconds based on the STM frequency.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   428   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   429   * \param microSeconds Number of micro seconds that need to be converted to ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   430   * \return ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   431   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   432  IFX_INLINE sint32 IfxStm_getTicksFromMicroseconds(Ifx_STM *stm, uint32 microSeconds);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   433  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   434  /** \brief Returns the number of ticks for the selected milli seconds based on the STM frequency.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   435   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   436   * \param milliSeconds Number of micro seconds that need to be converted to ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   437   * \return ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   438   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   439  IFX_INLINE sint32 IfxStm_getTicksFromMilliseconds(Ifx_STM *stm, uint32 milliSeconds);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   440  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   441  /** \brief Update the compare register value increased with given ticks.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   442   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   443   * \param comparator comparator selection comparator.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   444   * \param ticks count for next comparison from current timer count.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   445   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   446   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   447  IFX_INLINE void IfxStm_increaseCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   448  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   449  /** \brief Update the compare register value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   450   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   451   * \param comparator comparator selection comparator.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   452   * \param ticks count for next comparison.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   453   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   454   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   455  IFX_INLINE void IfxStm_updateCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   456  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   457  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   458  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   459  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   460  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   461  /** \brief Clear the compare interrupt flag.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   462   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   463   * \param comparator comparator selection comparator.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   464   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   465   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   466  IFX_EXTERN void IfxStm_clearCompareFlag(Ifx_STM *stm, IfxStm_Comparator comparator);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   467  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   468  /** \brief Disables the compare interrupt
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   469   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   470   * \param comparator comparator selection comparator.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   471   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   472   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   473  IFX_EXTERN void IfxStm_disableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   474  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   475  /** \brief Enables the compare interrupt .
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   476   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   477   * \param comparator comparator selection comparator.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   478   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   479   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   480  IFX_EXTERN void IfxStm_enableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   481  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   482  /** \brief get the interrupt source pointer for the comparator.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   483   * \param stm pointer to the STM registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   484   * \param comparator comparator selection comparator
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   485   * \return pointer to the interrupt source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   486   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   487  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxStm_getSrcPointer(Ifx_STM *stm, IfxStm_Comparator comparator);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   488  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   489  /** \brief Initialise stm compare register.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   490   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   491   * \param config pointer to configuration structure.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   492   * \return TRUE if Comparator successful otherwise FLASE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   493   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   494  IFX_EXTERN boolean IfxStm_initCompare(Ifx_STM *stm, const IfxStm_CompareConfig *config);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   495  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   496  /** \brief Initialise compare configuration with default values.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   497   * \param config pointer to configuration structure.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   498   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   499   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   500  IFX_EXTERN void IfxStm_initCompareConfig(IfxStm_CompareConfig *config);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   501  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   502  /** \brief Indicates if the compare interrupt flag is set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   503   * \param stm pointer to System timer module registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   504   * \param comparator comparator selection comparator.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   505   * \return TRUE if the comparator flag is set
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   506   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   507  IFX_EXTERN boolean IfxStm_isCompareFlagSet(Ifx_STM *stm, IfxStm_Comparator comparator);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   508  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   509  /** \brief Set the compare behavior
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   510   * \param stm pointer to System timer module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   511   * \param comparator comparator selection comparator
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   512   * \param offset Comparator start bit position
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   513   * \param size Size of compare value to compare with timer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   514   * \param interrupt Comparator Interrupt request source defined
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   515   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   516   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   517  IFX_EXTERN void IfxStm_setCompareControl(Ifx_STM *stm, IfxStm_Comparator comparator, IfxStm_ComparatorOffset offset, IfxStm_ComparatorSize size, IfxStm_ComparatorInterrupt interrupt);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   518  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   519  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   520  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   521  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   522  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   523  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   524  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   525  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   526   * \param stm pointer STM registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   527   * \param mode mode selection (enable/ disable)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   528   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   529   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   530  IFX_INLINE void IfxStm_setSleepMode(Ifx_STM *stm, IfxStm_SleepMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   531  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   532  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   533  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   534  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   535  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   536  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   537   * \param stm pointer to STM registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   538   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   539   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   540  IFX_EXTERN void IfxStm_resetModule(Ifx_STM *stm);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   541  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   542  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   543  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   544  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   545  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   546  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   547  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   548      uint64 result;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   549  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   550      result  = stm->TIM0.U;
	ld.w	d0,0xf0000010
	mov	d3,#0
	mov	d2,d0
.L100:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   551      result |= ((uint64)stm->CAP.U) << 32;
	ld.w	d1,0xf000002c
.L114:
	mov	d0,#0
.L115:
	or	d0,d2
.L101:
	or	d1,d3
.L116:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   553      return result;      (inlined)
	j	.L11

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   554  }      (inlined)
.L11:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	     2   * \file Bsp.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	     3   * \brief Board support package
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	     4   * \ingroup library_srvsw_sysse_bsp_bsp
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	     7   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	     8   * $Date: 2014-02-28 14:15:35 GMT$
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    44   * \defgroup library_srvsw_sysse_bsp_bsp Board support package
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    45   * This module implements the board support package
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    46   * \ingroup library_srvsw_sysse_bsp
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    47   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    48   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    49  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    50  #ifndef BSP_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    51  #define BSP_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    52  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    53  #include "Ifx_Cfg.h"                   /* Do not remove this include */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    54  #include "Cpu/Std/IfxCpu_Intrinsics.h" /* Do not remove this include */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    55  #include "_Utilities/Ifx_Assert.h"     /* Do not remove this include */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    56  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    57  #include "Cpu/Std/IfxCpu.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    58  #include "Port/Std/IfxPort.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    59  #include "Src/Std/IfxSrc.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    60  #include "Stm/Std/IfxStm.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    61  #include "Scu/Std/IfxScuCcu.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    62  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    63  #ifndef BSP_DEFAULT_TIMER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    64  /** Defined the default timer used */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    65  #define BSP_DEFAULT_TIMER (&MODULE_STM0)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    66  #endif
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    67  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    68  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    69  /*                           Function prototypes                              */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    70  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    71  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    72  /** \addtogroup library_srvsw_sysse_bsp_bsp
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    73   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    74  /** \name Interrupt APIs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    75   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    76  IFX_INLINE boolean areInterruptsEnabled(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    77  IFX_INLINE boolean disableInterrupts(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    78  IFX_INLINE void    enableInterrupts(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    79  IFX_INLINE void    restoreInterrupts(boolean enabled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    80  IFX_INLINE void    forceDisableInterrupts(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    81  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    82  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    83  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    84  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    85  /*                           Functions                                        */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    86  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    87  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    88  /** \brief Return the status of the global interrupts
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    89   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    90   * \retval TRUE if the global interrupts are enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    91   * \retval FALSE if the global interrupts are disabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    92   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    93   * \see restoreInterrupts(), disableInterrupts()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    94   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    95  IFX_INLINE boolean areInterruptsEnabled(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    96  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    97      return IfxCpu_areInterruptsEnabled();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    98  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	    99  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   100  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   101  /** \brief Disable the global interrupts
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   102   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   103   * \retval TRUE if the global interrupts were enabled before the call to the function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   104   * \retval FALSE if the global interrupts are disabled before the call to the function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   105   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   106   * \see areInterruptsEnabled(), restoreInterrupts()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   107   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   108  IFX_INLINE boolean disableInterrupts(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   109  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   110      return IfxCpu_disableInterrupts();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   111  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   112  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   113  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   114  /** \brief Disable the global interrupts forcefully
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   115   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   116   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   117   * \see areInterruptsEnabled(), restoreInterrupts()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   118   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   119  IFX_INLINE void forceDisableInterrupts(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   120  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   121      IfxCpu_forceDisableInterrupts();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   122  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   123  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   124  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   125  /** \brief enable the global interrupts
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   126   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   127   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   128  IFX_INLINE void enableInterrupts(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   129  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   130      IfxCpu_enableInterrupts();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   131  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   132  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   133  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   134  /** \brief Restore the state of the global interrupts.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   135   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   136   * \param enabled if TRUE, re-enable the global interrupts, else do nothing.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   137   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   138   * \return None.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   139   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   140   * \see areInterruptsEnabled(), disableInterrupts()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   141   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   142  IFX_INLINE void restoreInterrupts(boolean enabled)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   143  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   144      IfxCpu_restoreInterrupts(enabled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   145  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   146  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   147  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   148  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   149  /*                           Macros                                           */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   150  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   151  #define TIMER_COUNT       (11)                                      /**< \internal \brief number of timer values defined */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   152  #define TIMER_INDEX_10NS  (0)                                       /**< \internal \brief Index of the time value 10ns*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   153  #define TIMER_INDEX_100NS (1)                                       /**< \internal \brief Index of the time value 100ns*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   154  #define TIMER_INDEX_1US   (2)                                       /**< \internal \brief Index of the time value 1us*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   155  #define TIMER_INDEX_10US  (3)                                       /**< \internal \brief Index of the time value 10us*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   156  #define TIMER_INDEX_100US (4)                                       /**< \internal \brief Index of the time value 100us*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   157  #define TIMER_INDEX_1MS   (5)                                       /**< \internal \brief Index of the time value 1ms*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   158  #define TIMER_INDEX_10MS  (6)                                       /**< \internal \brief Index of the time value 10ms*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   159  #define TIMER_INDEX_100MS (7)                                       /**< \internal \brief Index of the time value 100ms*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   160  #define TIMER_INDEX_1S    (8)                                       /**< \internal \brief Index of the time value 1s*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   161  #define TIMER_INDEX_10S   (9)                                       /**< \internal \brief Index of the time value 10s*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   162  #define TIMER_INDEX_100S  (10)                                      /**< \internal \brief Index of the time value 100s*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   163  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   164  /** \internal
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   165   *  Array containing the time constants. This variable should not be used in the application. TimeConst_0s, TimeConst_10ns, ...  should be used instead
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   166   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   167   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   168  IFX_EXTERN Ifx_TickTime TimeConst[TIMER_COUNT];
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   169  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   170  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   171  /*                           Function prototypes                              */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   172  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   173  /** \addtogroup library_srvsw_sysse_bsp_bsp
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   174   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   175  /** \name Time APIs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   176   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   177  IFX_INLINE Ifx_TickTime addTTime(Ifx_TickTime a, Ifx_TickTime b);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   178  IFX_INLINE Ifx_TickTime elapsed(Ifx_TickTime since);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   179  IFX_INLINE Ifx_TickTime getDeadLine(Ifx_TickTime timeout);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   180  IFX_INLINE Ifx_TickTime getTimeout(Ifx_TickTime deadline);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   181  IFX_EXTERN void         initTime(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   182  IFX_INLINE boolean      isDeadLine(Ifx_TickTime deadLine);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   183  IFX_INLINE Ifx_TickTime now(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   184  IFX_INLINE Ifx_TickTime nowWithoutCriticalSection(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   185  IFX_INLINE boolean      poll(volatile boolean *test, Ifx_TickTime timeout);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   186  IFX_INLINE Ifx_TickTime timingNoInterruptEnd(Ifx_TickTime since, boolean interruptEnabled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   187  IFX_INLINE Ifx_TickTime timingNoInterruptStart(boolean *interruptEnabled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   188  IFX_INLINE void         wait(Ifx_TickTime timeout);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   189  IFX_EXTERN void         waitPoll(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   190  IFX_EXTERN void         waitTime(Ifx_TickTime timeout);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   191  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   192  /** Prototype for wait() functions */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   193  typedef void (*WaitTimeFunction)(Ifx_TickTime timeout);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   194  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   195  #define TimeConst_0s    ((Ifx_TickTime)0)                           /**< \brief time constant equal to 1s */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   196  #define TimeConst_10ns  (TimeConst[TIMER_INDEX_10NS])               /**< \brief time constant equal to 10ns */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   197  #define TimeConst_100ns (TimeConst[TIMER_INDEX_100NS])              /**< \brief time constant equal to 100ns */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   198  #define TimeConst_1us   (TimeConst[TIMER_INDEX_1US])                /**< \brief time constant equal to 1us */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   199  #define TimeConst_10us  (TimeConst[TIMER_INDEX_10US])               /**< \brief time constant equal to 10us */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   200  #define TimeConst_100us (TimeConst[TIMER_INDEX_100US])              /**< \brief time constant equal to 100us */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   201  #define TimeConst_1ms   (TimeConst[TIMER_INDEX_1MS])                /**< \brief time constant equal to 1ms */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   202  #define TimeConst_10ms  (TimeConst[TIMER_INDEX_10MS])               /**< \brief time constant equal to 10ms */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   203  #define TimeConst_100ms (TimeConst[TIMER_INDEX_100MS])              /**< \brief time constant equal to 100ms */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   204  #define TimeConst_1s    (TimeConst[TIMER_INDEX_1S])                 /**< \brief time constant equal to 1s */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   205  #define TimeConst_10s   (TimeConst[TIMER_INDEX_10S])                /**< \brief time constant equal to 10s */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   206  #define TimeConst_100s  (TimeConst[TIMER_INDEX_100S])               /**< \brief time constant equal to 100s */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   207  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   208  /**\}*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   209  /**\}*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   210  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   211  /*                           Functions                                        */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   212  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   213  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   214  /** \brief Return system timer value (critical section).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   215   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   216   * The function IfxStm_get() is called in a critical section, disabling
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   217   * the interrupts. The system timer value is limited to TIME_INFINITE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   218   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   219   * \return Returns system timer value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   220   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   221  IFX_INLINE Ifx_TickTime now(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   222  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   223      Ifx_TickTime stmNow;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   224      boolean      interruptState;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   225  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   226      interruptState = disableInterrupts();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   227      stmNow         = (Ifx_TickTime)IfxStm_get(BSP_DEFAULT_TIMER) & TIME_INFINITE;
	movh.a	a2,#@his(.1.cnt)
	lea	a2,[a2]@los(.1.cnt)
	ld.d	e2,[a2]0
.L60:
	and	d4,d0,d2
	and	d5,d1,d3
.L61:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   938      if (enabled != FALSE)      (inlined)
	jeq	d15,#0,.L12
.L117:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   665  enableInterrupts(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   666  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   667      __enable();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   668  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   669  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   670  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   671  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   672  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   673      uint32 cpu_pmaVal;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   674      uint16 checkRestrictionMask;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   675      uint32 coreIndex   = IfxCpu_getCoreIndex();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   676      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   677  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   678      /*resolve the restrictions*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   679      /*In PMA0 Segment-C and Segment[7-CoreID] must have the same value */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   680      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xC);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   681  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   682      if ((segmentNumberMask & checkRestrictionMask) != 0)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   683      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   684          segmentNumberMask |= checkRestrictionMask;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   685      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   686  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   687      cpu_pmaVal = __mfcr(CPU_PMA0);                                                              /* Read the CPU_PMA0 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   688  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   689      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   690  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   691      /*The CPU_PMA registers are ENDINIT protected*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   692      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   693      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   694      /*Write to PMA0 register for selecting the cacheability for data cache*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   695      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   696      __mtcr(CPU_PMA0, cpu_pmaVal);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   697      __isync();      /* ISYNC instruction executed immediately following MTCR */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   698      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   699  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   700  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   701  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   702  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   703  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   704      uint32 cpu_pmaVal;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   705      uint16 checkRestrictionMask;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   706      uint32 coreIndex   = IfxCpu_getCoreIndex();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   707      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   708  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   709      /*resolve the restrictions*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   710      /*In PMA1 Segment-D and Segment[7-CoreID] must have the same value */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   711      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xD);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   712  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   713      if ((segmentNumberMask & checkRestrictionMask) != 0)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   714      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   715          segmentNumberMask |= checkRestrictionMask;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   716      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   717  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   718      cpu_pmaVal = __mfcr(CPU_PMA1);                                                              /* Read the CPU_PMA1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   719  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   720      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   721  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   722      /*The CPU_PMA registers are ENDINIT protected*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   723      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   724      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   725      /*Write to PMA1 register for selecting the cacheability for data cache*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   726      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   727      __mtcr(CPU_PMA1, cpu_pmaVal);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   728      __isync();      /* ISYNC instruction executed immediately following MTCR */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   729      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   730  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   731  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   732  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   733  IFX_INLINE void IfxCpu_forceDisableInterrupts(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   734  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   735      __disable();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   736      __nop();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   737  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   738  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   739  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   740  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   741  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   742      Ifx_CPU *module;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   743  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   744      if (cpu < IfxCpu_ResourceCpu_none)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   745      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   746          module = (Ifx_CPU *)IfxCpu_cfg_indexMap[cpu].module;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   747      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   748      else
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   749      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   750          module = NULL_PTR;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   751      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   752  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   753      return module;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   754  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   755  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   756  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   757  IFX_INLINE uint32 IfxCpu_getClockCounter(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   758  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   759      return IfxCpu_getPerformanceCounter(CPU_CCNT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   760  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   761  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   762  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   763  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   764  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   765      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_CCNT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   766  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   767  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   768  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   769  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   770  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   771      Ifx_CPU_CORE_ID reg;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   772      reg.U = __mfcr(CPU_CORE_ID);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   773      return (IfxCpu_Id)reg.B.CORE_ID;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   774  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   775  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   776  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   777  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   778  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   779      Ifx_CPU_CORE_ID reg;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   780      reg.U = __mfcr(CPU_CORE_ID);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   781      return (IfxCpu_ResourceCpu)reg.B.CORE_ID;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   782  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   783  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   784  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   785  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   786  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   787      return IfxCpu_getPerformanceCounter(CPU_ICNT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   788  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   789  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   790  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   791  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   792  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   793      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_ICNT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   794  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   795  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   796  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   797  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   798  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   799      Ifx_CPU_CCNT ccnt;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   800  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   801      if (address == CPU_CCNT)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   802      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   803          ccnt.U = __mfcr(CPU_CCNT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   804      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   805      else if (address == CPU_ICNT)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   806      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   807          ccnt.U = __mfcr(CPU_ICNT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   808      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   809      else if (address == CPU_M1CNT)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   810      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   811          ccnt.U = __mfcr(CPU_M1CNT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   812      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   813      else if (address == CPU_M2CNT)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   814      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   815          ccnt.U = __mfcr(CPU_M2CNT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   816      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   817      else if (address == CPU_M3CNT)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   818      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   819          ccnt.U = __mfcr(CPU_M3CNT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   820      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   821  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   822      return ccnt.B.CountValue;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   823  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   824  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   825  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   826  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   827  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   828      Ifx_CPU_CCNT ccnt;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   829  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   830      if (address == CPU_CCNT)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   831      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   832          ccnt.U = __mfcr(CPU_CCNT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   833      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   834      else if (address == CPU_ICNT)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   835      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   836          ccnt.U = __mfcr(CPU_ICNT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   837      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   838      else if (address == CPU_M1CNT)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   839      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   840          ccnt.U = __mfcr(CPU_M1CNT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   841      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   842      else if (address == CPU_M2CNT)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   843      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   844          ccnt.U = __mfcr(CPU_M2CNT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   845      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   846      else if (address == CPU_M3CNT)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   847      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   848          ccnt.U = __mfcr(CPU_M3CNT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   849      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   850  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   851      return ccnt.B.SOvf;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   852  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   853  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   854  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   855  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   856  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   857      uint32  k;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   858      uint32  nxt_cxi_val = 0;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   859      uint32 *prvCsa      = 0U;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   860      uint32 *nxtCsa      = csaBegin;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   861      uint32  numOfCsa    = (((uint32)csaEnd - (uint32)csaBegin) / 64U);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   862  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   863      for (k = 0; k < numOfCsa; k++)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   864      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   865          nxt_cxi_val = ((uint32)nxtCsa & (0XFU << 28)) >> 12 | ((uint32)nxtCsa & (0XFFFFU << 6)) >> 6;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   866  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   867          if (k == 0)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   868          {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   869              __mtcr(CPU_FCX, nxt_cxi_val);   /* store the new pcxi value to LCX */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   870          }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   871          else
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   872          {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   873              *prvCsa = nxt_cxi_val;  /* Store null pointer in last CSA (= very first time!) */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   874          }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   875  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   876          if (k == (numOfCsa - 3U))
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   877          {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   878              __mtcr(CPU_LCX, nxt_cxi_val);   /* Last but 2 context save area is pointed in LCX to know if there is CSA depletion */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   879          }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   880  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   881          prvCsa  = (uint32 *)nxtCsa;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   882          nxtCsa += 16;           /* next CSA */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   883      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   884  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   885      *prvCsa = 0;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   886  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   887  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   888  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   889  IFX_INLINE void IfxCpu_invalidateProgramCache(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   890  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   891      uint16 cpuWdtPassword = IfxScuWdt_getCpuWatchdogPassword();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   892      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   893          IfxScuWdt_clearCpuEndinit(cpuWdtPassword);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   894          Ifx_CPU_PCON1 pcon1;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   895          pcon1.U       = __mfcr(CPU_PCON1);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   896          pcon1.B.PCINV = 1;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   897          __mtcr(CPU_PCON1, pcon1.U);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   898          IfxScuWdt_setCpuEndinit(cpuWdtPassword);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   899      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   900  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   901  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   902  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   903  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   904  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   905      uint8 segment = (uint32)address >> 24;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   906      return ((segment == IFXCPU_CACHABLE_FLASH_SEGMENT) || (segment == IFXCPU_CACHABLE_LMU_SEGMENT)) ? TRUE : FALSE;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   907  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   908  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   909  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   910  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   911  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   912      Ifx_CPU_CCTRL cctrl;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   913      cctrl.U    = __mfcr(CPU_CCTRL);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   914      /*Disable the counters */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   915      cctrl.B.CE = 0;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   916      __mtcr(CPU_CCTRL, cctrl.U);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   917  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   918      /* reset the counters */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   919      __mtcr(CPU_CCNT, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   920      __mtcr(CPU_ICNT, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   921      __mtcr(CPU_M1CNT, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   922      __mtcr(CPU_M2CNT, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   923      __mtcr(CPU_M3CNT, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   924  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   925      /*Enable the counters, set the counter mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   926      cctrl.B.CE = 1;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   927      cctrl.B.CM = mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   928      __mtcr(CPU_CCTRL, cctrl.U);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   929  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   930  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   931  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   932  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   933  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   934      if (enabled != FALSE)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   935      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   936          __enable();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   937      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   938  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   939  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   940  
	enable

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   938      if (enabled != FALSE)      (inlined)
.L12:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   230      return stmNow;      (inlined)
	j	.L13

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\SysSe\Bsp\Bsp.h	   231  }      (inlined)
.L13:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    67  time */
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    68  void DateTime_set(Ifx_DateTime *dt)
	ld.w	d15,[a15]8
.L99:
	movh.a	a2,#@his(TimeConst)
	lea	a2,[a2]@los(TimeConst)
	ld.d	e6,[a2]64
.L118:
	call	__ll_div64
.L94:
	sub	d15,d2
.L119:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    69  {
; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    70      sint32 seconds = dt->seconds - ((sint32)(now() / TimeConst_1s));
	ld.w	d0,[a15]
.L120:
	mov	d1,#3600
.L121:
	madd	d0,d15,d0,d1
.L102:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    71  
	ld.w	d15,[a15]4
.L122:
	mov	d1,#60
.L123:
	madd	d15,d0,d15,d1
.L103:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    72      seconds          = seconds + (3600 * dt->hours);
	movh.a	a15,#@his(g_DateTimeOffset)
.L95:
	lea	a15,[a15]@los(g_DateTimeOffset)
.L124:
	st.w	[a15],d15
.L125:

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    73      seconds          = seconds + (60 * dt->minutes);
	ret
.L34:
	
__DateTime_set_function_end:
	.size	DateTime_set,__DateTime_set_function_end-DateTime_set
.L26:
	; End of function
	
	.sdecl	'.bss.Ifx_DateTime.g_DateTimeOffset',data,cluster('g_DateTimeOffset')
	.sect	'.bss.Ifx_DateTime.g_DateTimeOffset'
	.global	g_DateTimeOffset
	.align	2
g_DateTimeOffset:	.type	object
	.size	g_DateTimeOffset,4
	.space	4
	.calls	'DateTime_get','__ll_div64'
	.calls	'DateTime_set','__ll_div64'
	.calls	'DateTime_get','',0
	.extern	TimeConst
	.extern	__ll_div64
	.calls	'DateTime_set','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L19:
	.word	81736
	.half	3
	.word	.L20
	.byte	4
.L18:
	.byte	1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time\\Ifx_DateTime.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L21
	.byte	2,1,1,3
	.word	174
	.byte	4
	.byte	'Ifx__jump_and_link',0,3,1,61,17,1,1,5
	.byte	'fun',0,1,61,43
	.word	177
	.byte	6,0,7
	.byte	'__fract',0,4,128,1,7
	.byte	'float',0,4,4,8
	.byte	'Ifx__float_to_fract',0,3,1,152,2,18
	.word	222
	.byte	1,1,5
	.byte	'a',0,1,152,2,44
	.word	234
	.byte	6,0,4
	.byte	'Ifx__stopPerfCounters',0,3,1,172,2,17,1,1,6,0
.L62:
	.byte	7
	.byte	'unsigned long long int',0,8,7,9
	.byte	'void',0,3
	.word	346
	.byte	8
	.byte	'__ld64',0,3,2,135,1,19
	.word	320
	.byte	1,1,5
	.byte	'addr',0,2,135,1,32
	.word	352
	.byte	6,0,4
	.byte	'__st64',0,3,2,143,1,17,1,1,5
	.byte	'addr',0,2,143,1,30
	.word	352
	.byte	5
	.byte	'value',0,2,143,1,43
	.word	320
	.byte	6,0,7
	.byte	'unsigned int',0,4,7,7
	.byte	'int',0,4,5,7
	.byte	'unsigned int',0,4,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,4,241,8,16,4,11
	.byte	'ENDINIT',0,4
	.word	461
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	461
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	461
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	461
	.byte	16,0,2,35,0,0,12,4,247,14,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	477
	.byte	4,2,35,0,0
.L44:
	.byte	7
	.byte	'unsigned char',0,1,8,7
	.byte	'unsigned short int',0,2,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,4,250,8,16,4,11
	.byte	'reserved_0',0,1
	.word	613
	.byte	2,6,2,35,0,11
	.byte	'IR0',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	613
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	613
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	613
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	613
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	630
	.byte	16,0,2,35,2,0,12,4,255,14,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	652
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,4,137,9,16,4,11
	.byte	'AE',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	613
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	613
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	613
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	613
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	630
	.byte	16,0,2,35,2,0,12,4,135,15,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	896
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU',0,4,175,15,25,12,13
	.byte	'CON0',0
	.word	573
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	856
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	1087
	.byte	4,2,35,8,0,14
	.word	1127
	.byte	3
	.word	1190
	.byte	4
	.byte	'IfxScuWdt_clearCpuEndinitInline',0,3,3,181,3,17,1,1,5
	.byte	'watchdog',0,3,181,3,65
	.word	1195
	.byte	5
	.byte	'password',0,3,181,3,82
	.word	630
	.byte	6,0,4
	.byte	'IfxScuWdt_setCpuEndinitInline',0,3,3,140,4,17,1,1,5
	.byte	'watchdog',0,3,140,4,63
	.word	1195
	.byte	5
	.byte	'password',0,3,140,4,80
	.word	630
	.byte	6,0,8
	.byte	'IfxScuWdt_getCpuWatchdogPasswordInline',0,3,3,227,3,19
	.word	630
	.byte	1,1,5
	.byte	'watchdog',0,3,227,3,74
	.word	1195
	.byte	6,0,10
	.byte	'_Ifx_P_OUT_Bits',0,6,143,3,16,4,11
	.byte	'P0',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	613
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	613
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	613
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	613
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	613
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	613
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	613
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	613
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	613
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	613
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	630
	.byte	16,0,2,35,2,0,12,6,181,5,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1425
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMR_Bits',0,6,169,2,16,4,11
	.byte	'PS0',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	613
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	613
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	613
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	613
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	613
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	613
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	613
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	613
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	613
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	613
	.byte	1,0,2,35,1,11
	.byte	'PCL0',0,1
	.word	613
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	613
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	613
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	613
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	613
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	613
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	613
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	613
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	613
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	613
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	613
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	613
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	613
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	613
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	613
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	613
	.byte	1,0,2,35,3,0,12,6,133,5,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1741
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ID_Bits',0,6,110,16,4,11
	.byte	'MODREV',0,1
	.word	613
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	613
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	630
	.byte	16,0,2,35,2,0,12,6,148,4,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2312
	.byte	4,2,35,0,0,15,4
	.word	613
	.byte	16,3,0,10
	.byte	'_Ifx_P_IOCR0_Bits',0,6,140,1,16,4,11
	.byte	'reserved_0',0,1
	.word	613
	.byte	3,5,2,35,0,11
	.byte	'PC0',0,1
	.word	613
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	613
	.byte	3,5,2,35,1,11
	.byte	'PC1',0,1
	.word	613
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	613
	.byte	3,5,2,35,2,11
	.byte	'PC2',0,1
	.word	613
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	613
	.byte	3,5,2,35,3,11
	.byte	'PC3',0,1
	.word	613
	.byte	5,0,2,35,3,0,12,6,164,4,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2440
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR4_Bits',0,6,166,1,16,4,11
	.byte	'reserved_0',0,1
	.word	613
	.byte	3,5,2,35,0,11
	.byte	'PC4',0,1
	.word	613
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	613
	.byte	3,5,2,35,1,11
	.byte	'PC5',0,1
	.word	613
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	613
	.byte	3,5,2,35,2,11
	.byte	'PC6',0,1
	.word	613
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	613
	.byte	3,5,2,35,3,11
	.byte	'PC7',0,1
	.word	613
	.byte	5,0,2,35,3,0,12,6,180,4,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2655
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR8_Bits',0,6,179,1,16,4,11
	.byte	'reserved_0',0,1
	.word	613
	.byte	3,5,2,35,0,11
	.byte	'PC8',0,1
	.word	613
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	613
	.byte	3,5,2,35,1,11
	.byte	'PC9',0,1
	.word	613
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	613
	.byte	3,5,2,35,2,11
	.byte	'PC10',0,1
	.word	613
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	613
	.byte	3,5,2,35,3,11
	.byte	'PC11',0,1
	.word	613
	.byte	5,0,2,35,3,0,12,6,188,4,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2870
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR12_Bits',0,6,153,1,16,4,11
	.byte	'reserved_0',0,1
	.word	613
	.byte	3,5,2,35,0,11
	.byte	'PC12',0,1
	.word	613
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	613
	.byte	3,5,2,35,1,11
	.byte	'PC13',0,1
	.word	613
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	613
	.byte	3,5,2,35,2,11
	.byte	'PC14',0,1
	.word	613
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	613
	.byte	3,5,2,35,3,11
	.byte	'PC15',0,1
	.word	613
	.byte	5,0,2,35,3,0,12,6,172,4,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3087
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IN_Bits',0,6,118,16,4,11
	.byte	'P0',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	613
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	613
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	613
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	613
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	613
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	613
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	613
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	613
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	613
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	613
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	630
	.byte	16,0,2,35,2,0,12,6,156,4,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3307
	.byte	4,2,35,0,0,15,24
	.word	613
	.byte	16,23,0,10
	.byte	'_Ifx_P_PDR0_Bits',0,6,205,3,16,4,11
	.byte	'PD0',0,1
	.word	613
	.byte	3,5,2,35,0,11
	.byte	'PL0',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'PD1',0,1
	.word	613
	.byte	3,1,2,35,0,11
	.byte	'PL1',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'PD2',0,1
	.word	613
	.byte	3,5,2,35,1,11
	.byte	'PL2',0,1
	.word	613
	.byte	1,4,2,35,1,11
	.byte	'PD3',0,1
	.word	613
	.byte	3,1,2,35,1,11
	.byte	'PL3',0,1
	.word	613
	.byte	1,0,2,35,1,11
	.byte	'PD4',0,1
	.word	613
	.byte	3,5,2,35,2,11
	.byte	'PL4',0,1
	.word	613
	.byte	1,4,2,35,2,11
	.byte	'PD5',0,1
	.word	613
	.byte	3,1,2,35,2,11
	.byte	'PL5',0,1
	.word	613
	.byte	1,0,2,35,2,11
	.byte	'PD6',0,1
	.word	613
	.byte	3,5,2,35,3,11
	.byte	'PL6',0,1
	.word	613
	.byte	1,4,2,35,3,11
	.byte	'PD7',0,1
	.word	613
	.byte	3,1,2,35,3,11
	.byte	'PL7',0,1
	.word	613
	.byte	1,0,2,35,3,0,12,6,205,5,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3630
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PDR1_Bits',0,6,226,3,16,4,11
	.byte	'PD8',0,1
	.word	613
	.byte	3,5,2,35,0,11
	.byte	'PL8',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'PD9',0,1
	.word	613
	.byte	3,1,2,35,0,11
	.byte	'PL9',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'PD10',0,1
	.word	613
	.byte	3,5,2,35,1,11
	.byte	'PL10',0,1
	.word	613
	.byte	1,4,2,35,1,11
	.byte	'PD11',0,1
	.word	613
	.byte	3,1,2,35,1,11
	.byte	'PL11',0,1
	.word	613
	.byte	1,0,2,35,1,11
	.byte	'PD12',0,1
	.word	613
	.byte	3,5,2,35,2,11
	.byte	'PL12',0,1
	.word	613
	.byte	1,4,2,35,2,11
	.byte	'PD13',0,1
	.word	613
	.byte	3,1,2,35,2,11
	.byte	'PL13',0,1
	.word	613
	.byte	1,0,2,35,2,11
	.byte	'PD14',0,1
	.word	613
	.byte	3,5,2,35,3,11
	.byte	'PL14',0,1
	.word	613
	.byte	1,4,2,35,3,11
	.byte	'PD15',0,1
	.word	613
	.byte	3,1,2,35,3,11
	.byte	'PL15',0,1
	.word	613
	.byte	1,0,2,35,3,0,12,6,213,5,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3934
	.byte	4,2,35,0,0,15,8
	.word	613
	.byte	16,7,0,10
	.byte	'_Ifx_P_ESR_Bits',0,6,88,16,4,11
	.byte	'EN0',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	613
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	613
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	613
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	613
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	613
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	613
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	613
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	613
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	613
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	613
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	630
	.byte	16,0,2,35,2,0,12,6,140,4,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4259
	.byte	4,2,35,0,0,15,12
	.word	613
	.byte	16,11,0,10
	.byte	'_Ifx_P_PDISC_Bits',0,6,183,3,16,4,11
	.byte	'PDIS0',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'PDIS2',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'PDIS3',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'PDIS4',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'PDIS5',0,1
	.word	613
	.byte	1,2,2,35,0,11
	.byte	'PDIS6',0,1
	.word	613
	.byte	1,1,2,35,0,11
	.byte	'PDIS7',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'PDIS8',0,1
	.word	613
	.byte	1,7,2,35,1,11
	.byte	'PDIS9',0,1
	.word	613
	.byte	1,6,2,35,1,11
	.byte	'PDIS10',0,1
	.word	613
	.byte	1,5,2,35,1,11
	.byte	'PDIS11',0,1
	.word	613
	.byte	1,4,2,35,1,11
	.byte	'PDIS12',0,1
	.word	613
	.byte	1,3,2,35,1,11
	.byte	'PDIS13',0,1
	.word	613
	.byte	1,2,2,35,1,11
	.byte	'PDIS14',0,1
	.word	613
	.byte	1,1,2,35,1,11
	.byte	'PDIS15',0,1
	.word	613
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	630
	.byte	16,0,2,35,2,0,12,6,197,5,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4599
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PCSR_Bits',0,6,165,3,16,4,11
	.byte	'SEL0',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'SEL1',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'SEL2',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'SEL3',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'SEL4',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'SEL5',0,1
	.word	613
	.byte	1,2,2,35,0,11
	.byte	'SEL6',0,1
	.word	613
	.byte	1,1,2,35,0,11
	.byte	'SEL7',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	613
	.byte	2,6,2,35,1,11
	.byte	'SEL10',0,1
	.word	613
	.byte	1,5,2,35,1,11
	.byte	'SEL11',0,1
	.word	613
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	438
	.byte	19,1,2,35,0,11
	.byte	'LCK',0,1
	.word	613
	.byte	1,0,2,35,3,0,12,6,189,5,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4965
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR0_Bits',0,6,206,2,16,4,11
	.byte	'PS0',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	438
	.byte	28,0,2,35,0,0,12,6,149,5,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5251
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR4_Bits',0,6,227,2,16,4,11
	.byte	'reserved_0',0,1
	.word	613
	.byte	4,4,2,35,0,11
	.byte	'PS4',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	613
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	613
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	438
	.byte	24,0,2,35,0,0,12,6,165,5,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5398
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR8_Bits',0,6,238,2,16,4,11
	.byte	'reserved_0',0,1
	.word	613
	.byte	8,0,2,35,0,11
	.byte	'PS8',0,1
	.word	613
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	613
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	613
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	613
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	438
	.byte	20,0,2,35,0,0,12,6,173,5,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5567
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR12_Bits',0,6,216,2,16,4,11
	.byte	'reserved_0',0,2
	.word	630
	.byte	12,4,2,35,0,11
	.byte	'PS12',0,1
	.word	613
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	613
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	613
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	613
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	630
	.byte	16,0,2,35,2,0,12,6,157,5,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5739
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR0_Bits',0,6,232,1,16,4,11
	.byte	'reserved_0',0,2
	.word	630
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	613
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	613
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	613
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	613
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	630
	.byte	12,0,2,35,2,0,12,6,229,4,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5914
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR4_Bits',0,6,253,1,16,4,11
	.byte	'reserved_0',0,4
	.word	438
	.byte	20,12,2,35,0,11
	.byte	'PCL4',0,1
	.word	613
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	613
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	613
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	613
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	613
	.byte	8,0,2,35,3,0,12,6,245,4,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6088
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR8_Bits',0,6,136,2,16,4,11
	.byte	'reserved_0',0,4
	.word	438
	.byte	24,8,2,35,0,11
	.byte	'PCL8',0,1
	.word	613
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	613
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	613
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	613
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	613
	.byte	4,0,2,35,3,0,12,6,253,4,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6262
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR12_Bits',0,6,243,1,16,4,11
	.byte	'reserved_0',0,4
	.word	438
	.byte	28,4,2,35,0,11
	.byte	'PCL12',0,1
	.word	613
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	613
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	613
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	613
	.byte	1,0,2,35,3,0,12,6,237,4,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6438
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR_Bits',0,6,249,2,16,4,11
	.byte	'PS0',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	613
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	613
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	613
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	613
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	613
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	613
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	613
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	613
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	613
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	613
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	630
	.byte	16,0,2,35,2,0,12,6,141,5,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6594
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR_Bits',0,6,147,2,16,4,11
	.byte	'reserved_0',0,2
	.word	630
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	613
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	613
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	613
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	613
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	613
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	613
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	613
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	613
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	613
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	613
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	613
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	613
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	613
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	613
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	613
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	613
	.byte	1,0,2,35,3,0,12,6,221,4,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6927
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR0_Bits',0,6,192,1,16,4,11
	.byte	'reserved_0',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	438
	.byte	30,0,2,35,0,0,12,6,196,4,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7275
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR1_Bits',0,6,200,1,16,4,11
	.byte	'reserved_0',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	438
	.byte	30,0,2,35,0,0,10
	.byte	'_Ifx_P_LPCR1_P21_Bits',0,6,208,1,16,4,11
	.byte	'RDIS_CTRL',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'RX_DIS',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'TERM',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'LRXTERM',0,1
	.word	613
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	438
	.byte	24,0,2,35,0,0,12,6,204,4,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7399
	.byte	4,2,35,0,13
	.byte	'B_P21',0
	.word	7483
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR2_Bits',0,6,218,1,16,4,11
	.byte	'reserved_0',0,1
	.word	613
	.byte	8,0,2,35,0,11
	.byte	'LVDSR',0,1
	.word	613
	.byte	1,7,2,35,1,11
	.byte	'LVDSRL',0,1
	.word	613
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	613
	.byte	2,4,2,35,1,11
	.byte	'TDIS_CTRL',0,1
	.word	613
	.byte	1,3,2,35,1,11
	.byte	'TX_DIS',0,1
	.word	613
	.byte	1,2,2,35,1,11
	.byte	'TX_PD',0,1
	.word	613
	.byte	1,1,2,35,1,11
	.byte	'TX_PWDPD',0,1
	.word	613
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	630
	.byte	16,0,2,35,2,0,12,6,213,4,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7663
	.byte	4,2,35,0,0,15,76
	.word	613
	.byte	16,75,0,10
	.byte	'_Ifx_P_ACCEN1_Bits',0,6,82,16,4,11
	.byte	'reserved_0',0,4
	.word	438
	.byte	32,0,2,35,0,0,12,6,132,4,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7916
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ACCEN0_Bits',0,6,45,16,4,11
	.byte	'EN0',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	613
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	613
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	613
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	613
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	613
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	613
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	613
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	613
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	613
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	613
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	613
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	613
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	613
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	613
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	613
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	613
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	613
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	613
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	613
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	613
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	613
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	613
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	613
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	613
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	613
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	613
	.byte	1,0,2,35,3,0,12,6,252,3,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8003
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P',0,6,229,5,25,128,2,13
	.byte	'OUT',0
	.word	1701
	.byte	4,2,35,0,13
	.byte	'OMR',0
	.word	2272
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	2391
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2431
	.byte	4,2,35,12,13
	.byte	'IOCR0',0
	.word	2615
	.byte	4,2,35,16,13
	.byte	'IOCR4',0
	.word	2830
	.byte	4,2,35,20,13
	.byte	'IOCR8',0
	.word	3047
	.byte	4,2,35,24,13
	.byte	'IOCR12',0
	.word	3267
	.byte	4,2,35,28,13
	.byte	'reserved_20',0
	.word	2431
	.byte	4,2,35,32,13
	.byte	'IN',0
	.word	3581
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	3621
	.byte	24,2,35,40,13
	.byte	'PDR0',0
	.word	3894
	.byte	4,2,35,64,13
	.byte	'PDR1',0
	.word	4210
	.byte	4,2,35,68,13
	.byte	'reserved_48',0
	.word	4250
	.byte	8,2,35,72,13
	.byte	'ESR',0
	.word	4550
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	4590
	.byte	12,2,35,84,13
	.byte	'PDISC',0
	.word	4925
	.byte	4,2,35,96,13
	.byte	'PCSR',0
	.word	5211
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	4250
	.byte	8,2,35,104,13
	.byte	'OMSR0',0
	.word	5358
	.byte	4,2,35,112,13
	.byte	'OMSR4',0
	.word	5527
	.byte	4,2,35,116,13
	.byte	'OMSR8',0
	.word	5699
	.byte	4,2,35,120,13
	.byte	'OMSR12',0
	.word	5874
	.byte	4,2,35,124,13
	.byte	'OMCR0',0
	.word	6048
	.byte	4,3,35,128,1,13
	.byte	'OMCR4',0
	.word	6222
	.byte	4,3,35,132,1,13
	.byte	'OMCR8',0
	.word	6398
	.byte	4,3,35,136,1,13
	.byte	'OMCR12',0
	.word	6554
	.byte	4,3,35,140,1,13
	.byte	'OMSR',0
	.word	6887
	.byte	4,3,35,144,1,13
	.byte	'OMCR',0
	.word	7235
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	4250
	.byte	8,3,35,152,1,13
	.byte	'LPCR0',0
	.word	7359
	.byte	4,3,35,160,1,13
	.byte	'LPCR1',0
	.word	7608
	.byte	4,3,35,164,1,13
	.byte	'LPCR2',0
	.word	7867
	.byte	4,3,35,168,1,13
	.byte	'reserved_A4',0
	.word	7907
	.byte	76,3,35,172,1,13
	.byte	'ACCEN1',0
	.word	7963
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	8530
	.byte	4,3,35,252,1,0,14
	.word	8570
	.byte	3
	.word	9173
	.byte	17,5,172,1,9,4,18
	.byte	'IfxPort_State_notChanged',0,0,18
	.byte	'IfxPort_State_high',0,1,18
	.byte	'IfxPort_State_low',0,128,128,4,18
	.byte	'IfxPort_State_toggled',0,129,128,4,0,4
	.byte	'IfxPort_setPinState',0,3,5,208,4,17,1,1,5
	.byte	'port',0,5,208,4,44
	.word	9178
	.byte	5
	.byte	'pinIndex',0,5,208,4,56
	.word	613
	.byte	5
	.byte	'action',0,5,208,4,80
	.word	9183
	.byte	6,0,8
	.byte	'IfxScuCcu_getStmFrequency',0,3,7,226,8,20
	.word	234
	.byte	1,1,6,0,17,9,156,1,9,1,18
	.byte	'IfxCpu_ResourceCpu_0',0,0,18
	.byte	'IfxCpu_ResourceCpu_1',0,1,18
	.byte	'IfxCpu_ResourceCpu_none',0,2,0,8
	.byte	'IfxCpu_getCoreIndex',0,3,8,141,6,31
	.word	9404
	.byte	1,1,6,0
.L51:
	.byte	8
	.byte	'IfxCpu_areInterruptsEnabled',0,3,8,139,5,20
	.word	613
	.byte	1,1
.L52:
	.byte	6,0
.L48:
	.byte	8
	.byte	'IfxCpu_disableInterrupts',0,3,8,147,5,20
	.word	613
	.byte	1,1
.L49:
	.byte	19,6,0,0,4
	.byte	'IfxCpu_enableInterrupts',0,3,8,157,5,17,1,1,6,0,4
	.byte	'IfxCpu_forceDisableInterrupts',0,3,8,225,5,17,1,1,6,0
.L68:
	.byte	4
	.byte	'IfxCpu_restoreInterrupts',0,3,8,168,7,17,1,1
.L69:
	.byte	5
	.byte	'enabled',0,8,168,7,50
	.word	613
.L71:
	.byte	6,0,7
	.byte	'unsigned long int',0,4,7,8
	.byte	'IfxCpu_getPerformanceCounter',0,3,8,161,6,19
	.word	9726
	.byte	1,1,5
	.byte	'address',0,8,161,6,55
	.word	630
	.byte	6,0,8
	.byte	'IfxCpu_getPerformanceCounterStickyOverflow',0,3,8,190,6,20
	.word	613
	.byte	1,1,5
	.byte	'address',0,8,190,6,70
	.word	630
	.byte	6,0,4
	.byte	'IfxCpu_updatePerformanceCounter',0,3,8,172,8,17,1,1,5
	.byte	'address',0,8,172,8,56
	.word	9726
	.byte	5
	.byte	'count',0,8,172,8,72
	.word	9726
	.byte	19,6,0,0,10
	.byte	'_Ifx_SRC_SRCR_Bits',0,11,45,16,4,11
	.byte	'SRPN',0,1
	.word	613
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	613
	.byte	2,6,2,35,1,11
	.byte	'SRE',0,1
	.word	613
	.byte	1,5,2,35,1,11
	.byte	'TOS',0,1
	.word	613
	.byte	2,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	613
	.byte	3,0,2,35,1,11
	.byte	'ECC',0,1
	.word	613
	.byte	6,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	613
	.byte	2,0,2,35,2,11
	.byte	'SRR',0,1
	.word	613
	.byte	1,7,2,35,3,11
	.byte	'CLRR',0,1
	.word	613
	.byte	1,6,2,35,3,11
	.byte	'SETR',0,1
	.word	613
	.byte	1,5,2,35,3,11
	.byte	'IOV',0,1
	.word	613
	.byte	1,4,2,35,3,11
	.byte	'IOVCLR',0,1
	.word	613
	.byte	1,3,2,35,3,11
	.byte	'SWS',0,1
	.word	613
	.byte	1,2,2,35,3,11
	.byte	'SWSCLR',0,1
	.word	613
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	613
	.byte	1,0,2,35,3,0,12,11,70,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	9957
	.byte	4,2,35,0,0,14
	.word	10247
	.byte	3
	.word	10286
	.byte	4
	.byte	'IfxSrc_clearRequest',0,3,10,250,1,17,1,1,5
	.byte	'src',0,10,250,1,60
	.word	10291
	.byte	6,0,10
	.byte	'_Ifx_STM_CLC_Bits',0,13,100,16,4,11
	.byte	'DISR',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	438
	.byte	28,0,2,35,0,0,12,13,149,2,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10339
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_ID_Bits',0,13,142,1,16,4,11
	.byte	'MODREV',0,1
	.word	613
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	613
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	630
	.byte	16,0,2,35,2,0,12,13,181,2,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10495
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM0_Bits',0,13,192,1,16,4,11
	.byte	'STM31_0',0,4
	.word	438
	.byte	32,0,2,35,0,0,12,13,229,2,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10617
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM1_Bits',0,13,204,1,16,4,11
	.byte	'STM35_4',0,4
	.word	438
	.byte	32,0,2,35,0,0,12,13,245,2,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10702
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM2_Bits',0,13,210,1,16,4,11
	.byte	'STM39_8',0,4
	.word	438
	.byte	32,0,2,35,0,0,12,13,253,2,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10787
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM3_Bits',0,13,216,1,16,4,11
	.byte	'STM43_12',0,4
	.word	438
	.byte	32,0,2,35,0,0,12,13,133,3,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10872
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM4_Bits',0,13,222,1,16,4,11
	.byte	'STM47_16',0,4
	.word	438
	.byte	32,0,2,35,0,0,12,13,141,3,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10958
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM5_Bits',0,13,228,1,16,4,11
	.byte	'STM51_20',0,4
	.word	438
	.byte	32,0,2,35,0,0,12,13,149,3,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11044
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM6_Bits',0,13,234,1,16,4,11
	.byte	'STM63_32',0,4
	.word	438
	.byte	32,0,2,35,0,0,12,13,157,3,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11130
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_CAP_Bits',0,13,88,16,4,11
	.byte	'STMCAP63_32',0,4
	.word	438
	.byte	32,0,2,35,0,0,12,13,133,2,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11216
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_CMP_Bits',0,13,123,16,4,11
	.byte	'CMPVAL',0,4
	.word	438
	.byte	32,0,2,35,0,0,12,13,165,2,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11303
	.byte	4,2,35,0,0,15,8
	.word	11345
	.byte	16,1,0,10
	.byte	'_Ifx_STM_CMCON_Bits',0,13,110,16,4,11
	.byte	'MSIZE0',0,1
	.word	613
	.byte	5,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	613
	.byte	3,0,2,35,0,11
	.byte	'MSTART0',0,1
	.word	613
	.byte	5,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	613
	.byte	3,0,2,35,1,11
	.byte	'MSIZE1',0,1
	.word	613
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	613
	.byte	3,0,2,35,2,11
	.byte	'MSTART1',0,1
	.word	613
	.byte	5,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	613
	.byte	3,0,2,35,3,0,12,13,157,2,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11394
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_ICR_Bits',0,13,129,1,16,4,11
	.byte	'CMP0EN',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'CMP0IR',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'CMP0OS',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'CMP1EN',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'CMP1IR',0,1
	.word	613
	.byte	1,2,2,35,0,11
	.byte	'CMP1OS',0,1
	.word	613
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	438
	.byte	25,0,2,35,0,0,12,13,173,2,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11625
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_ISCR_Bits',0,13,150,1,16,4,11
	.byte	'CMP0IRR',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'CMP0IRS',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'CMP1IRR',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'CMP1IRS',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	438
	.byte	28,0,2,35,0,0,12,13,189,2,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11842
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM0SV_Bits',0,13,198,1,16,4,11
	.byte	'STM31_0',0,4
	.word	438
	.byte	32,0,2,35,0,0,12,13,237,2,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12006
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_CAPSV_Bits',0,13,94,16,4,11
	.byte	'STMCAP63_32',0,4
	.word	438
	.byte	32,0,2,35,0,0,12,13,141,2,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12093
	.byte	4,2,35,0,0,15,144,1
	.word	613
	.byte	16,143,1,0,10
	.byte	'_Ifx_STM_OCS_Bits',0,13,182,1,16,4,11
	.byte	'reserved_0',0,4
	.word	438
	.byte	24,8,2,35,0,11
	.byte	'SUS',0,1
	.word	613
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	613
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	613
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	613
	.byte	2,0,2,35,3,0,12,13,221,2,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12193
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,13,175,1,16,4,11
	.byte	'CLR',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	438
	.byte	31,0,2,35,0,0,12,13,213,2,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12353
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_KRST1_Bits',0,13,168,1,16,4,11
	.byte	'RST',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	438
	.byte	31,0,2,35,0,0,12,13,205,2,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12459
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_KRST0_Bits',0,13,160,1,16,4,11
	.byte	'RST',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	438
	.byte	30,0,2,35,0,0,12,13,197,2,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12563
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_ACCEN1_Bits',0,13,82,16,4,11
	.byte	'reserved_0',0,4
	.word	438
	.byte	32,0,2,35,0,0,12,13,253,1,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12686
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_ACCEN0_Bits',0,13,45,16,4,11
	.byte	'EN0',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	613
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	613
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	613
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	613
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	613
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	613
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	613
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	613
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	613
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	613
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	613
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	613
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	613
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	613
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	613
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	613
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	613
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	613
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	613
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	613
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	613
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	613
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	613
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	613
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	613
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	613
	.byte	1,0,2,35,3,0,12,13,245,1,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12775
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM',0,13,173,3,25,128,2,13
	.byte	'CLC',0
	.word	10455
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	2431
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	10577
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2431
	.byte	4,2,35,12,13
	.byte	'TIM0',0
	.word	10662
	.byte	4,2,35,16,13
	.byte	'TIM1',0
	.word	10747
	.byte	4,2,35,20,13
	.byte	'TIM2',0
	.word	10832
	.byte	4,2,35,24,13
	.byte	'TIM3',0
	.word	10918
	.byte	4,2,35,28,13
	.byte	'TIM4',0
	.word	11004
	.byte	4,2,35,32,13
	.byte	'TIM5',0
	.word	11090
	.byte	4,2,35,36,13
	.byte	'TIM6',0
	.word	11176
	.byte	4,2,35,40,13
	.byte	'CAP',0
	.word	11263
	.byte	4,2,35,44,13
	.byte	'CMP',0
	.word	11385
	.byte	8,2,35,48,13
	.byte	'CMCON',0
	.word	11585
	.byte	4,2,35,56,13
	.byte	'ICR',0
	.word	11802
	.byte	4,2,35,60,13
	.byte	'ISCR',0
	.word	11966
	.byte	4,2,35,64,13
	.byte	'reserved_44',0
	.word	4590
	.byte	12,2,35,68,13
	.byte	'TIM0SV',0
	.word	12053
	.byte	4,2,35,80,13
	.byte	'CAPSV',0
	.word	12142
	.byte	4,2,35,84,13
	.byte	'reserved_58',0
	.word	12182
	.byte	144,1,2,35,88,13
	.byte	'OCS',0
	.word	12313
	.byte	4,3,35,232,1,13
	.byte	'KRSTCLR',0
	.word	12419
	.byte	4,3,35,236,1,13
	.byte	'KRST1',0
	.word	12523
	.byte	4,3,35,240,1,13
	.byte	'KRST0',0
	.word	12646
	.byte	4,3,35,244,1,13
	.byte	'ACCEN1',0
	.word	12735
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	13304
	.byte	4,3,35,252,1,0,14
	.word	13344
	.byte	3
	.word	13764
.L55:
	.byte	8
	.byte	'IfxStm_get',0,3,12,162,4,19
	.word	320
	.byte	1,1
.L56:
	.byte	5
	.byte	'stm',0,12,162,4,39
	.word	13769
.L58:
	.byte	6,0,8
	.byte	'IfxStm_getFrequency',0,3,12,179,4,20
	.word	234
	.byte	1,1,5
	.byte	'stm',0,12,179,4,49
	.word	13769
	.byte	19,6,6,0,0,8
	.byte	'IfxStm_getLower',0,3,12,190,4,19
	.word	9726
	.byte	1,1,5
	.byte	'stm',0,12,190,4,44
	.word	13769
	.byte	6,0
.L46:
	.byte	8
	.byte	'disableInterrupts',0,3,14,108,20
	.word	613
	.byte	1,1
.L47:
	.byte	19,6,0,0
.L64:
	.byte	4
	.byte	'restoreInterrupts',0,3,14,142,1,17,1,1
.L65:
	.byte	5
	.byte	'enabled',0,14,142,1,43
	.word	613
.L67:
	.byte	19,6,0,0
.L42:
	.byte	7
	.byte	'long long int',0,8,5,8
	.byte	'getDeadLine',0,3,14,164,2,25
	.word	13985
	.byte	1,1,5
	.byte	'timeout',0,14,164,2,50
	.word	13985
	.byte	19,6,0,0,8
	.byte	'isDeadLine',0,3,14,211,2,20
	.word	613
	.byte	1,1,5
	.byte	'deadLine',0,14,211,2,44
	.word	13985
	.byte	19,6,0,0
.L39:
	.byte	8
	.byte	'now',0,3,14,221,1,25
	.word	13985
	.byte	1,1
.L41:
	.byte	19,6,6,6,0,0,8
	.byte	'nowWithoutCriticalSection',0,3,14,240,1,25
	.word	13985
	.byte	1,1,19,6,0,0,20
	.word	454
	.byte	21
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,22
	.word	14156
	.byte	0,14
	.word	438
	.byte	3
	.word	438
	.byte	23
	.byte	'__cmpswapw',0
	.word	14198
	.byte	1,1,1,1,24
	.byte	'p',0
	.word	14203
	.byte	24
	.byte	'value',0
	.word	438
	.byte	24
	.byte	'compare',0
	.word	438
	.byte	0,14
	.word	454
	.byte	23
	.byte	'__mfcr',0
	.word	14260
	.byte	1,1,1,1,22
	.word	454
	.byte	0,25
	.byte	'__nop',0,1,1,1,1,25
	.byte	'__disable',0,1,1,1,1,25
	.byte	'__enable',0,1,1,1,1
.L37:
	.byte	7
	.byte	'long int',0,4,5,26,15,51,9,12,13
	.byte	'hours',0
	.word	14327
	.byte	4,2,35,0,13
	.byte	'minutes',0
	.word	14327
	.byte	4,2,35,4,13
	.byte	'seconds',0
	.word	14327
	.byte	4,2,35,8,0
.L35:
	.byte	3
	.word	14339
	.byte	10
	.byte	'_Ifx_CPU_ICR_Bits',0,16,246,2,16,4,11
	.byte	'CCPN',0,4
	.word	461
	.byte	10,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	461
	.byte	5,17,2,35,0,11
	.byte	'IE',0,4
	.word	461
	.byte	1,16,2,35,0,11
	.byte	'PIPN',0,4
	.word	461
	.byte	10,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	461
	.byte	6,0,2,35,0,0
.L53:
	.byte	12,16,223,7,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14399
	.byte	4,2,35,0,0,27
	.word	182
	.byte	28
	.word	208
	.byte	6,0,27
	.word	243
	.byte	28
	.word	275
	.byte	6,0,27
	.word	288
	.byte	6,0,27
	.word	357
	.byte	28
	.word	376
	.byte	6,0,27
	.word	392
	.byte	28
	.word	407
	.byte	28
	.word	421
	.byte	6,0,27
	.word	1200
	.byte	28
	.word	1240
	.byte	28
	.word	1258
	.byte	6,0,27
	.word	1278
	.byte	28
	.word	1316
	.byte	28
	.word	1334
	.byte	6,0,27
	.word	1354
	.byte	28
	.word	1405
	.byte	6,0,27
	.word	9286
	.byte	28
	.word	9314
	.byte	28
	.word	9328
	.byte	28
	.word	9346
	.byte	6,0,27
	.word	9364
	.byte	6,0,27
	.word	9483
	.byte	6,0,27
	.word	9517
	.byte	6,0,27
	.word	9559
	.byte	19,29
	.word	9517
	.byte	30
	.word	9557
	.byte	0,6,0,0,27
	.word	9600
	.byte	6,0,27
	.word	9634
	.byte	6,0,27
	.word	9674
	.byte	28
	.word	9707
	.byte	6,0,27
	.word	9747
	.byte	28
	.word	9788
	.byte	6,0,27
	.word	9807
	.byte	28
	.word	9862
	.byte	6,0,27
	.word	9881
	.byte	28
	.word	9921
	.byte	28
	.word	9938
	.byte	19,6,0,0,27
	.word	10296
	.byte	28
	.word	10324
	.byte	6,0,27
	.word	13774
	.byte	28
	.word	13797
	.byte	6,0,27
	.word	13812
	.byte	28
	.word	13844
	.byte	19,19,29
	.word	9364
	.byte	30
	.word	9402
	.byte	0,0,6,0,0,27
	.word	13862
	.byte	28
	.word	13890
	.byte	6,0,27
	.word	13905
	.byte	19,29
	.word	9559
	.byte	31
	.word	9596
	.byte	29
	.word	9517
	.byte	30
	.word	9557
	.byte	0,30
	.word	9597
	.byte	0,0,6,0,0,27
	.word	13938
	.byte	28
	.word	13964
	.byte	19,29
	.word	9674
	.byte	28
	.word	9707
	.byte	30
	.word	9724
	.byte	0,6,0,0,27
	.word	14002
	.byte	28
	.word	14026
	.byte	19,29
	.word	14092
	.byte	31
	.word	14108
	.byte	29
	.word	13905
	.byte	31
	.word	13934
	.byte	29
	.word	9559
	.byte	31
	.word	9596
	.byte	29
	.word	9517
	.byte	30
	.word	9557
	.byte	0,30
	.word	9597
	.byte	0,0,30
	.word	13935
	.byte	0,0,30
	.word	14109
	.byte	29
	.word	13938
	.byte	28
	.word	13964
	.byte	31
	.word	13981
	.byte	29
	.word	9674
	.byte	28
	.word	9707
	.byte	30
	.word	9724
	.byte	0,30
	.word	13982
	.byte	0,0,30
	.word	14110
	.byte	29
	.word	13774
	.byte	28
	.word	13797
	.byte	30
	.word	13810
	.byte	0,30
	.word	14111
	.byte	0,0,6,0,0,27
	.word	14047
	.byte	28
	.word	14070
	.byte	19,29
	.word	14092
	.byte	31
	.word	14108
	.byte	29
	.word	13905
	.byte	31
	.word	13934
	.byte	29
	.word	9559
	.byte	31
	.word	9596
	.byte	29
	.word	9517
	.byte	30
	.word	9557
	.byte	0,30
	.word	9597
	.byte	0,0,30
	.word	13935
	.byte	0,0,30
	.word	14109
	.byte	29
	.word	13938
	.byte	28
	.word	13964
	.byte	31
	.word	13981
	.byte	29
	.word	9674
	.byte	28
	.word	9707
	.byte	30
	.word	9724
	.byte	0,30
	.word	13982
	.byte	0,0,30
	.word	14110
	.byte	29
	.word	13774
	.byte	28
	.word	13797
	.byte	30
	.word	13810
	.byte	0,30
	.word	14111
	.byte	0,0,6,0,0,27
	.word	14092
	.byte	19,29
	.word	13905
	.byte	31
	.word	13934
	.byte	29
	.word	9559
	.byte	31
	.word	9596
	.byte	29
	.word	9517
	.byte	30
	.word	9557
	.byte	0,30
	.word	9597
	.byte	0,0,30
	.word	13935
	.byte	0,0,6,29
	.word	13938
	.byte	28
	.word	13964
	.byte	31
	.word	13981
	.byte	29
	.word	9674
	.byte	28
	.word	9707
	.byte	30
	.word	9724
	.byte	0,30
	.word	13982
	.byte	0,0,6,29
	.word	13774
	.byte	28
	.word	13797
	.byte	30
	.word	13810
	.byte	0,6,0,0,27
	.word	14114
	.byte	19,29
	.word	13774
	.byte	28
	.word	13797
	.byte	30
	.word	13810
	.byte	0,6,0,0,7
	.byte	'short int',0,2,5,32
	.byte	'__wchar_t',0,17,1,1
	.word	15339
	.byte	32
	.byte	'__size_t',0,17,1,1
	.word	438
	.byte	32
	.byte	'__ptrdiff_t',0,17,1,1
	.word	454
	.byte	33,1,3
	.word	15407
	.byte	32
	.byte	'__codeptr',0,17,1,1
	.word	15409
	.byte	32
	.byte	'boolean',0,18,101,29
	.word	613
	.byte	32
	.byte	'uint8',0,18,105,29
	.word	613
	.byte	32
	.byte	'uint16',0,18,109,29
	.word	630
	.byte	32
	.byte	'uint32',0,18,113,29
	.word	9726
	.byte	32
	.byte	'uint64',0,18,118,29
	.word	320
	.byte	32
	.byte	'sint16',0,18,126,29
	.word	15339
	.byte	32
	.byte	'sint32',0,18,131,1,29
	.word	14327
	.byte	32
	.byte	'sint64',0,18,138,1,29
	.word	13985
	.byte	32
	.byte	'float32',0,18,167,1,29
	.word	234
	.byte	32
	.byte	'pvoid',0,19,57,28
	.word	352
	.byte	32
	.byte	'Ifx_TickTime',0,19,79,28
	.word	13985
	.byte	32
	.byte	'Ifx_Priority',0,19,103,16
	.word	630
	.byte	17,19,130,1,9,1,18
	.byte	'Ifx_RxSel_a',0,0,18
	.byte	'Ifx_RxSel_b',0,1,18
	.byte	'Ifx_RxSel_c',0,2,18
	.byte	'Ifx_RxSel_d',0,3,18
	.byte	'Ifx_RxSel_e',0,4,18
	.byte	'Ifx_RxSel_f',0,5,18
	.byte	'Ifx_RxSel_g',0,6,18
	.byte	'Ifx_RxSel_h',0,7,0,32
	.byte	'Ifx_RxSel',0,19,140,1,3
	.word	15627
	.byte	32
	.byte	'Ifx_DateTime',0,15,56,3
	.word	14339
	.byte	10
	.byte	'_Ifx_CPU_A_Bits',0,16,45,16,4,11
	.byte	'ADDR',0,4
	.word	461
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_A_Bits',0,16,48,3
	.word	15786
	.byte	10
	.byte	'_Ifx_CPU_BIV_Bits',0,16,51,16,4,11
	.byte	'VSS',0,4
	.word	461
	.byte	1,31,2,35,0,11
	.byte	'BIV',0,4
	.word	461
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_BIV_Bits',0,16,55,3
	.word	15847
	.byte	10
	.byte	'_Ifx_CPU_BTV_Bits',0,16,58,16,4,11
	.byte	'reserved_0',0,4
	.word	461
	.byte	1,31,2,35,0,11
	.byte	'BTV',0,4
	.word	461
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_BTV_Bits',0,16,62,3
	.word	15926
	.byte	10
	.byte	'_Ifx_CPU_CCNT_Bits',0,16,65,16,4,11
	.byte	'CountValue',0,4
	.word	461
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	461
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_CCNT_Bits',0,16,69,3
	.word	16012
	.byte	10
	.byte	'_Ifx_CPU_CCTRL_Bits',0,16,72,16,4,11
	.byte	'CM',0,4
	.word	461
	.byte	1,31,2,35,0,11
	.byte	'CE',0,4
	.word	461
	.byte	1,30,2,35,0,11
	.byte	'M1',0,4
	.word	461
	.byte	3,27,2,35,0,11
	.byte	'M2',0,4
	.word	461
	.byte	3,24,2,35,0,11
	.byte	'M3',0,4
	.word	461
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	461
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_CPU_CCTRL_Bits',0,16,80,3
	.word	16101
	.byte	10
	.byte	'_Ifx_CPU_COMPAT_Bits',0,16,83,16,4,11
	.byte	'reserved_0',0,4
	.word	461
	.byte	3,29,2,35,0,11
	.byte	'RM',0,4
	.word	461
	.byte	1,28,2,35,0,11
	.byte	'SP',0,4
	.word	461
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	461
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_COMPAT_Bits',0,16,89,3
	.word	16247
	.byte	10
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,16,92,16,4,11
	.byte	'CORE_ID',0,4
	.word	461
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	461
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_CORE_ID_Bits',0,16,96,3
	.word	16374
	.byte	10
	.byte	'_Ifx_CPU_CPR_L_Bits',0,16,99,16,4,11
	.byte	'reserved_0',0,4
	.word	461
	.byte	3,29,2,35,0,11
	.byte	'LOWBND',0,4
	.word	461
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_L_Bits',0,16,103,3
	.word	16472
	.byte	10
	.byte	'_Ifx_CPU_CPR_U_Bits',0,16,106,16,4,11
	.byte	'reserved_0',0,4
	.word	461
	.byte	3,29,2,35,0,11
	.byte	'UPPBND',0,4
	.word	461
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_U_Bits',0,16,110,3
	.word	16565
	.byte	10
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,16,113,16,4,11
	.byte	'MODREV',0,4
	.word	461
	.byte	8,24,2,35,0,11
	.byte	'MOD_32B',0,4
	.word	461
	.byte	8,16,2,35,0,11
	.byte	'MOD',0,4
	.word	461
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPU_ID_Bits',0,16,118,3
	.word	16658
	.byte	10
	.byte	'_Ifx_CPU_CPXE_Bits',0,16,121,16,4,11
	.byte	'XE',0,4
	.word	461
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	461
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPXE_Bits',0,16,125,3
	.word	16765
	.byte	10
	.byte	'_Ifx_CPU_CREVT_Bits',0,16,128,1,16,4,11
	.byte	'EVTA',0,4
	.word	461
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	461
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	461
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	461
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	461
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	461
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_CREVT_Bits',0,16,136,1,3
	.word	16852
	.byte	10
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,16,139,1,16,4,11
	.byte	'CID',0,4
	.word	461
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	461
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_CUS_ID_Bits',0,16,143,1,3
	.word	17006
	.byte	10
	.byte	'_Ifx_CPU_D_Bits',0,16,146,1,16,4,11
	.byte	'DATA',0,4
	.word	461
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_D_Bits',0,16,149,1,3
	.word	17100
	.byte	10
	.byte	'_Ifx_CPU_DATR_Bits',0,16,152,1,16,4,11
	.byte	'reserved_0',0,4
	.word	461
	.byte	3,29,2,35,0,11
	.byte	'SBE',0,4
	.word	461
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	461
	.byte	5,23,2,35,0,11
	.byte	'CWE',0,4
	.word	461
	.byte	1,22,2,35,0,11
	.byte	'CFE',0,4
	.word	461
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	461
	.byte	3,18,2,35,0,11
	.byte	'SOE',0,4
	.word	461
	.byte	1,17,2,35,0,11
	.byte	'SME',0,4
	.word	461
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	461
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_DATR_Bits',0,16,163,1,3
	.word	17163
	.byte	10
	.byte	'_Ifx_CPU_DBGSR_Bits',0,16,166,1,16,4,11
	.byte	'DE',0,4
	.word	461
	.byte	1,31,2,35,0,11
	.byte	'HALT',0,4
	.word	461
	.byte	2,29,2,35,0,11
	.byte	'SIH',0,4
	.word	461
	.byte	1,28,2,35,0,11
	.byte	'SUSP',0,4
	.word	461
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	461
	.byte	1,26,2,35,0,11
	.byte	'PREVSUSP',0,4
	.word	461
	.byte	1,25,2,35,0,11
	.byte	'PEVT',0,4
	.word	461
	.byte	1,24,2,35,0,11
	.byte	'EVTSRC',0,4
	.word	461
	.byte	5,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	461
	.byte	19,0,2,35,0,0,32
	.byte	'Ifx_CPU_DBGSR_Bits',0,16,177,1,3
	.word	17381
	.byte	10
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,16,180,1,16,4,11
	.byte	'DTA',0,4
	.word	461
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	461
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_DBGTCR_Bits',0,16,184,1,3
	.word	17596
	.byte	10
	.byte	'_Ifx_CPU_DCON0_Bits',0,16,187,1,16,4,11
	.byte	'reserved_0',0,4
	.word	461
	.byte	1,31,2,35,0,11
	.byte	'DCBYP',0,4
	.word	461
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	461
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_CPU_DCON0_Bits',0,16,192,1,3
	.word	17690
	.byte	10
	.byte	'_Ifx_CPU_DCON2_Bits',0,16,195,1,16,4,11
	.byte	'DCACHE_SZE',0,4
	.word	461
	.byte	16,16,2,35,0,11
	.byte	'DSCRATCH_SZE',0,4
	.word	461
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_DCON2_Bits',0,16,199,1,3
	.word	17806
	.byte	10
	.byte	'_Ifx_CPU_DCX_Bits',0,16,202,1,16,4,11
	.byte	'reserved_0',0,4
	.word	461
	.byte	6,26,2,35,0,11
	.byte	'DCXValue',0,4
	.word	461
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_CPU_DCX_Bits',0,16,206,1,3
	.word	17907
	.byte	10
	.byte	'_Ifx_CPU_DEADD_Bits',0,16,209,1,16,4,11
	.byte	'ERROR_ADDRESS',0,4
	.word	461
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_DEADD_Bits',0,16,212,1,3
	.word	18000
	.byte	10
	.byte	'_Ifx_CPU_DIEAR_Bits',0,16,215,1,16,4,11
	.byte	'TA',0,4
	.word	461
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_DIEAR_Bits',0,16,218,1,3
	.word	18080
	.byte	10
	.byte	'_Ifx_CPU_DIETR_Bits',0,16,221,1,16,4,11
	.byte	'IED',0,4
	.word	461
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	461
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	461
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	461
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	461
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	461
	.byte	6,21,2,35,0,11
	.byte	'IE_DUAL',0,4
	.word	461
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	461
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	461
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	461
	.byte	18,0,2,35,0,0,32
	.byte	'Ifx_CPU_DIETR_Bits',0,16,233,1,3
	.word	18149
	.byte	10
	.byte	'_Ifx_CPU_DMS_Bits',0,16,236,1,16,4,11
	.byte	'reserved_0',0,4
	.word	461
	.byte	1,31,2,35,0,11
	.byte	'DMSValue',0,4
	.word	461
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_DMS_Bits',0,16,240,1,3
	.word	18378
	.byte	10
	.byte	'_Ifx_CPU_DPR_L_Bits',0,16,243,1,16,4,11
	.byte	'reserved_0',0,4
	.word	461
	.byte	3,29,2,35,0,11
	.byte	'LOWBND',0,4
	.word	461
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_L_Bits',0,16,247,1,3
	.word	18471
	.byte	10
	.byte	'_Ifx_CPU_DPR_U_Bits',0,16,250,1,16,4,11
	.byte	'reserved_0',0,4
	.word	461
	.byte	3,29,2,35,0,11
	.byte	'UPPBND',0,4
	.word	461
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_U_Bits',0,16,254,1,3
	.word	18566
	.byte	10
	.byte	'_Ifx_CPU_DPRE_Bits',0,16,129,2,16,4,11
	.byte	'RE',0,4
	.word	461
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	461
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPRE_Bits',0,16,133,2,3
	.word	18661
	.byte	10
	.byte	'_Ifx_CPU_DPWE_Bits',0,16,136,2,16,4,11
	.byte	'WE',0,4
	.word	461
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	461
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPWE_Bits',0,16,140,2,3
	.word	18751
	.byte	10
	.byte	'_Ifx_CPU_DSTR_Bits',0,16,143,2,16,4,11
	.byte	'SRE',0,4
	.word	461
	.byte	1,31,2,35,0,11
	.byte	'GAE',0,4
	.word	461
	.byte	1,30,2,35,0,11
	.byte	'LBE',0,4
	.word	461
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	461
	.byte	3,26,2,35,0,11
	.byte	'CRE',0,4
	.word	461
	.byte	1,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	461
	.byte	7,18,2,35,0,11
	.byte	'DTME',0,4
	.word	461
	.byte	1,17,2,35,0,11
	.byte	'LOE',0,4
	.word	461
	.byte	1,16,2,35,0,11
	.byte	'SDE',0,4
	.word	461
	.byte	1,15,2,35,0,11
	.byte	'SCE',0,4
	.word	461
	.byte	1,14,2,35,0,11
	.byte	'CAC',0,4
	.word	461
	.byte	1,13,2,35,0,11
	.byte	'MPE',0,4
	.word	461
	.byte	1,12,2,35,0,11
	.byte	'CLE',0,4
	.word	461
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	461
	.byte	3,8,2,35,0,11
	.byte	'ALN',0,4
	.word	461
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	461
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_CPU_DSTR_Bits',0,16,161,2,3
	.word	18841
	.byte	10
	.byte	'_Ifx_CPU_EXEVT_Bits',0,16,164,2,16,4,11
	.byte	'EVTA',0,4
	.word	461
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	461
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	461
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	461
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	461
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	461
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_EXEVT_Bits',0,16,172,2,3
	.word	19165
	.byte	10
	.byte	'_Ifx_CPU_FCX_Bits',0,16,175,2,16,4,11
	.byte	'FCXO',0,4
	.word	461
	.byte	16,16,2,35,0,11
	.byte	'FCXS',0,4
	.word	461
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	461
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_CPU_FCX_Bits',0,16,180,2,3
	.word	19319
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,16,183,2,16,4,11
	.byte	'TST',0,4
	.word	461
	.byte	1,31,2,35,0,11
	.byte	'TCL',0,4
	.word	461
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	461
	.byte	6,24,2,35,0,11
	.byte	'RM',0,4
	.word	461
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	461
	.byte	8,14,2,35,0,11
	.byte	'FXE',0,4
	.word	461
	.byte	1,13,2,35,0,11
	.byte	'FUE',0,4
	.word	461
	.byte	1,12,2,35,0,11
	.byte	'FZE',0,4
	.word	461
	.byte	1,11,2,35,0,11
	.byte	'FVE',0,4
	.word	461
	.byte	1,10,2,35,0,11
	.byte	'FIE',0,4
	.word	461
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	461
	.byte	3,6,2,35,0,11
	.byte	'FX',0,4
	.word	461
	.byte	1,5,2,35,0,11
	.byte	'FU',0,4
	.word	461
	.byte	1,4,2,35,0,11
	.byte	'FZ',0,4
	.word	461
	.byte	1,3,2,35,0,11
	.byte	'FV',0,4
	.word	461
	.byte	1,2,2,35,0,11
	.byte	'FI',0,4
	.word	461
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	461
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,16,202,2,3
	.word	19425
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,16,205,2,16,4,11
	.byte	'OPC',0,4
	.word	461
	.byte	8,24,2,35,0,11
	.byte	'FMT',0,4
	.word	461
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	461
	.byte	7,16,2,35,0,11
	.byte	'DREG',0,4
	.word	461
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	461
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,16,212,2,3
	.word	19774
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,16,215,2,16,4,11
	.byte	'PC',0,4
	.word	461
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,16,218,2,3
	.word	19934
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,16,221,2,16,4,11
	.byte	'SRC1',0,4
	.word	461
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,16,224,2,3
	.word	20015
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,16,227,2,16,4,11
	.byte	'SRC2',0,4
	.word	461
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,16,230,2,3
	.word	20102
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,16,233,2,16,4,11
	.byte	'SRC3',0,4
	.word	461
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,16,236,2,3
	.word	20189
	.byte	10
	.byte	'_Ifx_CPU_ICNT_Bits',0,16,239,2,16,4,11
	.byte	'CountValue',0,4
	.word	461
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	461
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_ICNT_Bits',0,16,243,2,3
	.word	20276
	.byte	32
	.byte	'Ifx_CPU_ICR_Bits',0,16,253,2,3
	.word	14399
	.byte	10
	.byte	'_Ifx_CPU_ISP_Bits',0,16,128,3,16,4,11
	.byte	'ISP',0,4
	.word	461
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_ISP_Bits',0,16,131,3,3
	.word	20393
	.byte	10
	.byte	'_Ifx_CPU_LCX_Bits',0,16,134,3,16,4,11
	.byte	'LCXO',0,4
	.word	461
	.byte	16,16,2,35,0,11
	.byte	'LCXS',0,4
	.word	461
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	461
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_CPU_LCX_Bits',0,16,139,3,3
	.word	20459
	.byte	10
	.byte	'_Ifx_CPU_M1CNT_Bits',0,16,142,3,16,4,11
	.byte	'CountValue',0,4
	.word	461
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	461
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_M1CNT_Bits',0,16,146,3,3
	.word	20565
	.byte	10
	.byte	'_Ifx_CPU_M2CNT_Bits',0,16,149,3,16,4,11
	.byte	'CountValue',0,4
	.word	461
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	461
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_M2CNT_Bits',0,16,153,3,3
	.word	20658
	.byte	10
	.byte	'_Ifx_CPU_M3CNT_Bits',0,16,156,3,16,4,11
	.byte	'CountValue',0,4
	.word	461
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	461
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_M3CNT_Bits',0,16,160,3,3
	.word	20751
	.byte	10
	.byte	'_Ifx_CPU_PC_Bits',0,16,163,3,16,4,11
	.byte	'reserved_0',0,4
	.word	461
	.byte	1,31,2,35,0,11
	.byte	'PC',0,4
	.word	461
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_PC_Bits',0,16,167,3,3
	.word	20844
	.byte	10
	.byte	'_Ifx_CPU_PCON0_Bits',0,16,170,3,16,4,11
	.byte	'reserved_0',0,4
	.word	461
	.byte	1,31,2,35,0,11
	.byte	'PCBYP',0,4
	.word	461
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	461
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCON0_Bits',0,16,175,3,3
	.word	20929
	.byte	10
	.byte	'_Ifx_CPU_PCON1_Bits',0,16,178,3,16,4,11
	.byte	'PCINV',0,4
	.word	461
	.byte	1,31,2,35,0,11
	.byte	'PBINV',0,4
	.word	461
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	461
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCON1_Bits',0,16,183,3,3
	.word	21045
	.byte	10
	.byte	'_Ifx_CPU_PCON2_Bits',0,16,186,3,16,4,11
	.byte	'PCACHE_SZE',0,4
	.word	461
	.byte	16,16,2,35,0,11
	.byte	'PSCRATCH_SZE',0,4
	.word	461
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCON2_Bits',0,16,190,3,3
	.word	21156
	.byte	10
	.byte	'_Ifx_CPU_PCXI_Bits',0,16,193,3,16,4,11
	.byte	'PCXO',0,4
	.word	461
	.byte	16,16,2,35,0,11
	.byte	'PCXS',0,4
	.word	461
	.byte	4,12,2,35,0,11
	.byte	'UL',0,4
	.word	461
	.byte	1,11,2,35,0,11
	.byte	'PIE',0,4
	.word	461
	.byte	1,10,2,35,0,11
	.byte	'PCPN',0,4
	.word	461
	.byte	10,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCXI_Bits',0,16,200,3,3
	.word	21257
	.byte	10
	.byte	'_Ifx_CPU_PIEAR_Bits',0,16,203,3,16,4,11
	.byte	'TA',0,4
	.word	461
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_PIEAR_Bits',0,16,206,3,3
	.word	21387
	.byte	10
	.byte	'_Ifx_CPU_PIETR_Bits',0,16,209,3,16,4,11
	.byte	'IED',0,4
	.word	461
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	461
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	461
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	461
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	461
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	461
	.byte	6,21,2,35,0,11
	.byte	'IE_DUAL',0,4
	.word	461
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	461
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	461
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	461
	.byte	18,0,2,35,0,0,32
	.byte	'Ifx_CPU_PIETR_Bits',0,16,221,3,3
	.word	21456
	.byte	10
	.byte	'_Ifx_CPU_PMA0_Bits',0,16,224,3,16,4,11
	.byte	'reserved_0',0,4
	.word	461
	.byte	13,19,2,35,0,11
	.byte	'DAC',0,4
	.word	461
	.byte	3,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	461
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PMA0_Bits',0,16,229,3,3
	.word	21685
	.byte	10
	.byte	'_Ifx_CPU_PMA1_Bits',0,16,232,3,16,4,11
	.byte	'reserved_0',0,4
	.word	461
	.byte	14,18,2,35,0,11
	.byte	'CAC',0,4
	.word	461
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	461
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PMA1_Bits',0,16,237,3,3
	.word	21798
	.byte	10
	.byte	'_Ifx_CPU_PMA2_Bits',0,16,240,3,16,4,11
	.byte	'PSI',0,4
	.word	461
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	461
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PMA2_Bits',0,16,244,3,3
	.word	21911
	.byte	10
	.byte	'_Ifx_CPU_PSTR_Bits',0,16,247,3,16,4,11
	.byte	'FRE',0,4
	.word	461
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	461
	.byte	1,30,2,35,0,11
	.byte	'FBE',0,4
	.word	461
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	461
	.byte	9,20,2,35,0,11
	.byte	'FPE',0,4
	.word	461
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	461
	.byte	1,18,2,35,0,11
	.byte	'FME',0,4
	.word	461
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	461
	.byte	17,0,2,35,0,0,32
	.byte	'Ifx_CPU_PSTR_Bits',0,16,129,4,3
	.word	22002
	.byte	10
	.byte	'_Ifx_CPU_PSW_Bits',0,16,132,4,16,4,11
	.byte	'CDC',0,4
	.word	461
	.byte	7,25,2,35,0,11
	.byte	'CDE',0,4
	.word	461
	.byte	1,24,2,35,0,11
	.byte	'GW',0,4
	.word	461
	.byte	1,23,2,35,0,11
	.byte	'IS',0,4
	.word	461
	.byte	1,22,2,35,0,11
	.byte	'IO',0,4
	.word	461
	.byte	2,20,2,35,0,11
	.byte	'PRS',0,4
	.word	461
	.byte	2,18,2,35,0,11
	.byte	'S',0,4
	.word	461
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	461
	.byte	12,5,2,35,0,11
	.byte	'SAV',0,4
	.word	461
	.byte	1,4,2,35,0,11
	.byte	'AV',0,4
	.word	461
	.byte	1,3,2,35,0,11
	.byte	'SV',0,4
	.word	461
	.byte	1,2,2,35,0,11
	.byte	'V',0,4
	.word	461
	.byte	1,1,2,35,0,11
	.byte	'C',0,4
	.word	461
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_PSW_Bits',0,16,147,4,3
	.word	22205
	.byte	10
	.byte	'_Ifx_CPU_SEGEN_Bits',0,16,150,4,16,4,11
	.byte	'ADFLIP',0,4
	.word	461
	.byte	8,24,2,35,0,11
	.byte	'ADTYPE',0,4
	.word	461
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	461
	.byte	21,1,2,35,0,11
	.byte	'AE',0,4
	.word	461
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_SEGEN_Bits',0,16,156,4,3
	.word	22448
	.byte	10
	.byte	'_Ifx_CPU_SMACON_Bits',0,16,159,4,16,4,11
	.byte	'PC',0,4
	.word	461
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	461
	.byte	1,30,2,35,0,11
	.byte	'PT',0,4
	.word	461
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	461
	.byte	5,24,2,35,0,11
	.byte	'DC',0,4
	.word	461
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	461
	.byte	1,22,2,35,0,11
	.byte	'DT',0,4
	.word	461
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	461
	.byte	13,8,2,35,0,11
	.byte	'IODT',0,4
	.word	461
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	461
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_CPU_SMACON_Bits',0,16,171,4,3
	.word	22576
	.byte	10
	.byte	'_Ifx_CPU_SPROT_ACCENA_Bits',0,16,174,4,16,4,11
	.byte	'EN',0,4
	.word	438
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_ACCENA_Bits',0,16,177,4,3
	.word	22817
	.byte	10
	.byte	'_Ifx_CPU_SPROT_ACCENB_Bits',0,16,180,4,16,4,11
	.byte	'reserved_0',0,4
	.word	438
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_ACCENB_Bits',0,16,183,4,3
	.word	22900
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,16,186,4,16,4,11
	.byte	'EN',0,4
	.word	438
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,16,189,4,3
	.word	22991
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,16,192,4,16,4,11
	.byte	'reserved_0',0,4
	.word	438
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,16,195,4,3
	.word	23082
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_LA_Bits',0,16,198,4,16,4,11
	.byte	'reserved_0',0,1
	.word	613
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	438
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_LA_Bits',0,16,202,4,3
	.word	23181
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_UA_Bits',0,16,205,4,16,4,11
	.byte	'reserved_0',0,1
	.word	613
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	438
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_UA_Bits',0,16,209,4,3
	.word	23288
	.byte	10
	.byte	'_Ifx_CPU_SWEVT_Bits',0,16,212,4,16,4,11
	.byte	'EVTA',0,4
	.word	461
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	461
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	461
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	461
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	461
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	461
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_SWEVT_Bits',0,16,220,4,3
	.word	23395
	.byte	10
	.byte	'_Ifx_CPU_SYSCON_Bits',0,16,223,4,16,4,11
	.byte	'FCDSF',0,4
	.word	461
	.byte	1,31,2,35,0,11
	.byte	'PROTEN',0,4
	.word	461
	.byte	1,30,2,35,0,11
	.byte	'TPROTEN',0,4
	.word	461
	.byte	1,29,2,35,0,11
	.byte	'IS',0,4
	.word	461
	.byte	1,28,2,35,0,11
	.byte	'IT',0,4
	.word	461
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	461
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_SYSCON_Bits',0,16,231,4,3
	.word	23549
	.byte	10
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,16,234,4,16,4,11
	.byte	'ASI',0,4
	.word	461
	.byte	5,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	461
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,16,238,4,3
	.word	23710
	.byte	10
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,16,241,4,16,4,11
	.byte	'TEXP0',0,4
	.word	461
	.byte	1,31,2,35,0,11
	.byte	'TEXP1',0,4
	.word	461
	.byte	1,30,2,35,0,11
	.byte	'TEXP2',0,4
	.word	461
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	461
	.byte	13,16,2,35,0,11
	.byte	'TTRAP',0,4
	.word	461
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	461
	.byte	15,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_CON_Bits',0,16,249,4,3
	.word	23808
	.byte	10
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,16,252,4,16,4,11
	.byte	'Timer',0,4
	.word	461
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,16,255,4,3
	.word	23980
	.byte	10
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,16,130,5,16,4,11
	.byte	'ADDR',0,4
	.word	461
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_TR_ADR_Bits',0,16,133,5,3
	.word	24060
	.byte	10
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,16,136,5,16,4,11
	.byte	'EVTA',0,4
	.word	461
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	461
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	461
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	461
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	461
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	461
	.byte	4,20,2,35,0,11
	.byte	'TYP',0,4
	.word	461
	.byte	1,19,2,35,0,11
	.byte	'RNG',0,4
	.word	461
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	461
	.byte	1,17,2,35,0,11
	.byte	'ASI_EN',0,4
	.word	461
	.byte	1,16,2,35,0,11
	.byte	'ASI',0,4
	.word	461
	.byte	5,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	461
	.byte	6,5,2,35,0,11
	.byte	'AST',0,4
	.word	461
	.byte	1,4,2,35,0,11
	.byte	'ALD',0,4
	.word	461
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	461
	.byte	3,0,2,35,0,0,32
	.byte	'Ifx_CPU_TR_EVT_Bits',0,16,153,5,3
	.word	24133
	.byte	10
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,16,156,5,16,4,11
	.byte	'T0',0,4
	.word	461
	.byte	1,31,2,35,0,11
	.byte	'T1',0,4
	.word	461
	.byte	1,30,2,35,0,11
	.byte	'T2',0,4
	.word	461
	.byte	1,29,2,35,0,11
	.byte	'T3',0,4
	.word	461
	.byte	1,28,2,35,0,11
	.byte	'T4',0,4
	.word	461
	.byte	1,27,2,35,0,11
	.byte	'T5',0,4
	.word	461
	.byte	1,26,2,35,0,11
	.byte	'T6',0,4
	.word	461
	.byte	1,25,2,35,0,11
	.byte	'T7',0,4
	.word	461
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	461
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,16,167,5,3
	.word	24451
	.byte	12,16,175,5,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15786
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_A',0,16,180,5,3
	.word	24646
	.byte	12,16,183,5,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15847
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_BIV',0,16,188,5,3
	.word	24705
	.byte	12,16,191,5,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15926
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_BTV',0,16,196,5,3
	.word	24766
	.byte	12,16,199,5,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16012
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CCNT',0,16,204,5,3
	.word	24827
	.byte	12,16,207,5,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16101
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CCTRL',0,16,212,5,3
	.word	24889
	.byte	12,16,215,5,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16247
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_COMPAT',0,16,220,5,3
	.word	24952
	.byte	12,16,223,5,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16374
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CORE_ID',0,16,228,5,3
	.word	25016
	.byte	12,16,231,5,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16472
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_L',0,16,236,5,3
	.word	25081
	.byte	12,16,239,5,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16565
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_U',0,16,244,5,3
	.word	25144
	.byte	12,16,247,5,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16658
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPU_ID',0,16,252,5,3
	.word	25207
	.byte	12,16,255,5,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16765
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPXE',0,16,132,6,3
	.word	25271
	.byte	12,16,135,6,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16852
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CREVT',0,16,140,6,3
	.word	25333
	.byte	12,16,143,6,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17006
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CUS_ID',0,16,148,6,3
	.word	25396
	.byte	12,16,151,6,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17100
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_D',0,16,156,6,3
	.word	25460
	.byte	12,16,159,6,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17163
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DATR',0,16,164,6,3
	.word	25519
	.byte	12,16,167,6,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17381
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DBGSR',0,16,172,6,3
	.word	25581
	.byte	12,16,175,6,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17596
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DBGTCR',0,16,180,6,3
	.word	25644
	.byte	12,16,183,6,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17690
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DCON0',0,16,188,6,3
	.word	25708
	.byte	12,16,191,6,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17806
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DCON2',0,16,196,6,3
	.word	25771
	.byte	12,16,199,6,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17907
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DCX',0,16,204,6,3
	.word	25834
	.byte	12,16,207,6,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18000
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DEADD',0,16,212,6,3
	.word	25895
	.byte	12,16,215,6,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18080
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DIEAR',0,16,220,6,3
	.word	25958
	.byte	12,16,223,6,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18149
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DIETR',0,16,228,6,3
	.word	26021
	.byte	12,16,231,6,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18378
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DMS',0,16,236,6,3
	.word	26084
	.byte	12,16,239,6,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18471
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_L',0,16,244,6,3
	.word	26145
	.byte	12,16,247,6,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18566
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_U',0,16,252,6,3
	.word	26208
	.byte	12,16,255,6,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18661
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPRE',0,16,132,7,3
	.word	26271
	.byte	12,16,135,7,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18751
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPWE',0,16,140,7,3
	.word	26333
	.byte	12,16,143,7,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18841
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DSTR',0,16,148,7,3
	.word	26395
	.byte	12,16,151,7,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19165
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_EXEVT',0,16,156,7,3
	.word	26457
	.byte	12,16,159,7,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19319
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FCX',0,16,164,7,3
	.word	26520
	.byte	12,16,167,7,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19425
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,16,172,7,3
	.word	26581
	.byte	12,16,175,7,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19774
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,16,180,7,3
	.word	26651
	.byte	12,16,183,7,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19934
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,16,188,7,3
	.word	26721
	.byte	12,16,191,7,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20015
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,16,196,7,3
	.word	26790
	.byte	12,16,199,7,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20102
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,16,204,7,3
	.word	26861
	.byte	12,16,207,7,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20189
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,16,212,7,3
	.word	26932
	.byte	12,16,215,7,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20276
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_ICNT',0,16,220,7,3
	.word	27003
	.byte	32
	.byte	'Ifx_CPU_ICR',0,16,228,7,3
	.word	14516
	.byte	12,16,231,7,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20393
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_ISP',0,16,236,7,3
	.word	27086
	.byte	12,16,239,7,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20459
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_LCX',0,16,244,7,3
	.word	27147
	.byte	12,16,247,7,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20565
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_M1CNT',0,16,252,7,3
	.word	27208
	.byte	12,16,255,7,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20658
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_M2CNT',0,16,132,8,3
	.word	27271
	.byte	12,16,135,8,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20751
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_M3CNT',0,16,140,8,3
	.word	27334
	.byte	12,16,143,8,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20844
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PC',0,16,148,8,3
	.word	27397
	.byte	12,16,151,8,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20929
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCON0',0,16,156,8,3
	.word	27457
	.byte	12,16,159,8,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21045
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCON1',0,16,164,8,3
	.word	27520
	.byte	12,16,167,8,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21156
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCON2',0,16,172,8,3
	.word	27583
	.byte	12,16,175,8,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21257
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCXI',0,16,180,8,3
	.word	27646
	.byte	12,16,183,8,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21387
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PIEAR',0,16,188,8,3
	.word	27708
	.byte	12,16,191,8,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21456
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PIETR',0,16,196,8,3
	.word	27771
	.byte	12,16,199,8,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21685
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PMA0',0,16,204,8,3
	.word	27834
	.byte	12,16,207,8,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21798
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PMA1',0,16,212,8,3
	.word	27896
	.byte	12,16,215,8,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21911
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PMA2',0,16,220,8,3
	.word	27958
	.byte	12,16,223,8,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22002
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PSTR',0,16,228,8,3
	.word	28020
	.byte	12,16,231,8,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22205
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PSW',0,16,236,8,3
	.word	28082
	.byte	12,16,239,8,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22448
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SEGEN',0,16,244,8,3
	.word	28143
	.byte	12,16,247,8,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22576
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SMACON',0,16,252,8,3
	.word	28206
	.byte	12,16,255,8,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22817
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_ACCENA',0,16,132,9,3
	.word	28270
	.byte	12,16,135,9,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22900
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_ACCENB',0,16,140,9,3
	.word	28340
	.byte	12,16,143,9,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22991
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA',0,16,148,9,3
	.word	28410
	.byte	12,16,151,9,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23082
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB',0,16,156,9,3
	.word	28484
	.byte	12,16,159,9,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23181
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_LA',0,16,164,9,3
	.word	28558
	.byte	12,16,167,9,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23288
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_UA',0,16,172,9,3
	.word	28628
	.byte	12,16,175,9,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23395
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SWEVT',0,16,180,9,3
	.word	28698
	.byte	12,16,183,9,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23549
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SYSCON',0,16,188,9,3
	.word	28761
	.byte	12,16,191,9,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23710
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TASK_ASI',0,16,196,9,3
	.word	28825
	.byte	12,16,199,9,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23808
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_CON',0,16,204,9,3
	.word	28891
	.byte	12,16,207,9,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23980
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_TIMER',0,16,212,9,3
	.word	28956
	.byte	12,16,215,9,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24060
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TR_ADR',0,16,220,9,3
	.word	29023
	.byte	12,16,223,9,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24133
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TR_EVT',0,16,228,9,3
	.word	29087
	.byte	12,16,231,9,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24451
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TRIG_ACC',0,16,236,9,3
	.word	29151
	.byte	10
	.byte	'_Ifx_CPU_CPR',0,16,247,9,25,8,13
	.byte	'L',0
	.word	25081
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	25144
	.byte	4,2,35,4,0,14
	.word	29217
	.byte	32
	.byte	'Ifx_CPU_CPR',0,16,251,9,3
	.word	29259
	.byte	10
	.byte	'_Ifx_CPU_DPR',0,16,254,9,25,8,13
	.byte	'L',0
	.word	26145
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	26208
	.byte	4,2,35,4,0,14
	.word	29285
	.byte	32
	.byte	'Ifx_CPU_DPR',0,16,130,10,3
	.word	29327
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN',0,16,133,10,25,16,13
	.byte	'LA',0
	.word	28558
	.byte	4,2,35,0,13
	.byte	'UA',0
	.word	28628
	.byte	4,2,35,4,13
	.byte	'ACCENA',0
	.word	28410
	.byte	4,2,35,8,13
	.byte	'ACCENB',0
	.word	28484
	.byte	4,2,35,12,0,14
	.word	29353
	.byte	32
	.byte	'Ifx_CPU_SPROT_RGN',0,16,139,10,3
	.word	29435
	.byte	15,12
	.word	28956
	.byte	16,2,0,10
	.byte	'_Ifx_CPU_TPS',0,16,142,10,25,16,13
	.byte	'CON',0
	.word	28891
	.byte	4,2,35,0,13
	.byte	'TIMER',0
	.word	29467
	.byte	12,2,35,4,0,14
	.word	29476
	.byte	32
	.byte	'Ifx_CPU_TPS',0,16,146,10,3
	.word	29524
	.byte	10
	.byte	'_Ifx_CPU_TR',0,16,149,10,25,8,13
	.byte	'EVT',0
	.word	29087
	.byte	4,2,35,0,13
	.byte	'ADR',0
	.word	29023
	.byte	4,2,35,4,0,14
	.word	29550
	.byte	32
	.byte	'Ifx_CPU_TR',0,16,153,10,3
	.word	29595
	.byte	15,176,32
	.word	613
	.byte	16,175,32,0,15,208,223,1
	.word	613
	.byte	16,207,223,1,0,15,248,1
	.word	613
	.byte	16,247,1,0,15,244,29
	.word	613
	.byte	16,243,29,0,15,188,3
	.word	613
	.byte	16,187,3,0,15,232,3
	.word	613
	.byte	16,231,3,0,15,252,23
	.word	613
	.byte	16,251,23,0,15,228,63
	.word	613
	.byte	16,227,63,0,15,128,1
	.word	29285
	.byte	16,15,0,14
	.word	29710
	.byte	15,128,31
	.word	613
	.byte	16,255,30,0,15,64
	.word	29217
	.byte	16,7,0,14
	.word	29736
	.byte	15,192,31
	.word	613
	.byte	16,191,31,0,15,16
	.word	25271
	.byte	16,3,0,15,16
	.word	26271
	.byte	16,3,0,15,16
	.word	26333
	.byte	16,3,0,15,208,7
	.word	613
	.byte	16,207,7,0,14
	.word	29476
	.byte	15,240,23
	.word	613
	.byte	16,239,23,0,15,64
	.word	29550
	.byte	16,7,0,14
	.word	29815
	.byte	15,192,23
	.word	613
	.byte	16,191,23,0,15,232,1
	.word	613
	.byte	16,231,1,0,15,28
	.word	613
	.byte	16,27,0,15,180,1
	.word	613
	.byte	16,179,1,0,15,16
	.word	613
	.byte	16,15,0,15,172,1
	.word	613
	.byte	16,171,1,0,15,64
	.word	25460
	.byte	16,15,0,15,64
	.word	613
	.byte	16,63,0,15,64
	.word	24646
	.byte	16,15,0,10
	.byte	'_Ifx_CPU',0,16,166,10,25,128,128,4,13
	.byte	'reserved_0',0
	.word	29620
	.byte	176,32,2,35,0,13
	.byte	'SEGEN',0
	.word	28143
	.byte	4,3,35,176,32,13
	.byte	'reserved_1034',0
	.word	29631
	.byte	208,223,1,3,35,180,32,13
	.byte	'TASK_ASI',0
	.word	28825
	.byte	4,4,35,132,128,2,13
	.byte	'reserved_8008',0
	.word	29644
	.byte	248,1,4,35,136,128,2,13
	.byte	'PMA0',0
	.word	27834
	.byte	4,4,35,128,130,2,13
	.byte	'PMA1',0
	.word	27896
	.byte	4,4,35,132,130,2,13
	.byte	'PMA2',0
	.word	27958
	.byte	4,4,35,136,130,2,13
	.byte	'reserved_810C',0
	.word	29655
	.byte	244,29,4,35,140,130,2,13
	.byte	'DCON2',0
	.word	25771
	.byte	4,4,35,128,160,2,13
	.byte	'reserved_9004',0
	.word	4250
	.byte	8,4,35,132,160,2,13
	.byte	'SMACON',0
	.word	28206
	.byte	4,4,35,140,160,2,13
	.byte	'DSTR',0
	.word	26395
	.byte	4,4,35,144,160,2,13
	.byte	'reserved_9014',0
	.word	2431
	.byte	4,4,35,148,160,2,13
	.byte	'DATR',0
	.word	25519
	.byte	4,4,35,152,160,2,13
	.byte	'DEADD',0
	.word	25895
	.byte	4,4,35,156,160,2,13
	.byte	'DIEAR',0
	.word	25958
	.byte	4,4,35,160,160,2,13
	.byte	'DIETR',0
	.word	26021
	.byte	4,4,35,164,160,2,13
	.byte	'reserved_9028',0
	.word	3621
	.byte	24,4,35,168,160,2,13
	.byte	'DCON0',0
	.word	25708
	.byte	4,4,35,192,160,2,13
	.byte	'reserved_9044',0
	.word	29666
	.byte	188,3,4,35,196,160,2,13
	.byte	'PSTR',0
	.word	28020
	.byte	4,4,35,128,164,2,13
	.byte	'PCON1',0
	.word	27520
	.byte	4,4,35,132,164,2,13
	.byte	'PCON2',0
	.word	27583
	.byte	4,4,35,136,164,2,13
	.byte	'PCON0',0
	.word	27457
	.byte	4,4,35,140,164,2,13
	.byte	'PIEAR',0
	.word	27708
	.byte	4,4,35,144,164,2,13
	.byte	'PIETR',0
	.word	27771
	.byte	4,4,35,148,164,2,13
	.byte	'reserved_9218',0
	.word	29677
	.byte	232,3,4,35,152,164,2,13
	.byte	'COMPAT',0
	.word	24952
	.byte	4,4,35,128,168,2,13
	.byte	'reserved_9404',0
	.word	29688
	.byte	252,23,4,35,132,168,2,13
	.byte	'FPU_TRAP_CON',0
	.word	26581
	.byte	4,4,35,128,192,2,13
	.byte	'FPU_TRAP_PC',0
	.word	26721
	.byte	4,4,35,132,192,2,13
	.byte	'FPU_TRAP_OPC',0
	.word	26651
	.byte	4,4,35,136,192,2,13
	.byte	'reserved_A00C',0
	.word	2431
	.byte	4,4,35,140,192,2,13
	.byte	'FPU_TRAP_SRC1',0
	.word	26790
	.byte	4,4,35,144,192,2,13
	.byte	'FPU_TRAP_SRC2',0
	.word	26861
	.byte	4,4,35,148,192,2,13
	.byte	'FPU_TRAP_SRC3',0
	.word	26932
	.byte	4,4,35,152,192,2,13
	.byte	'reserved_A01C',0
	.word	29699
	.byte	228,63,4,35,156,192,2,13
	.byte	'DPR',0
	.word	29720
	.byte	128,1,4,35,128,128,3,13
	.byte	'reserved_C080',0
	.word	29725
	.byte	128,31,4,35,128,129,3,13
	.byte	'CPR',0
	.word	29745
	.byte	64,4,35,128,160,3,13
	.byte	'reserved_D040',0
	.word	29750
	.byte	192,31,4,35,192,160,3,13
	.byte	'CPXE',0
	.word	29761
	.byte	16,4,35,128,192,3,13
	.byte	'DPRE',0
	.word	29770
	.byte	16,4,35,144,192,3,13
	.byte	'DPWE',0
	.word	29779
	.byte	16,4,35,160,192,3,13
	.byte	'reserved_E030',0
	.word	29788
	.byte	208,7,4,35,176,192,3,13
	.byte	'TPS',0
	.word	29799
	.byte	16,4,35,128,200,3,13
	.byte	'reserved_E410',0
	.word	29804
	.byte	240,23,4,35,144,200,3,13
	.byte	'TR',0
	.word	29824
	.byte	64,4,35,128,224,3,13
	.byte	'reserved_F040',0
	.word	29829
	.byte	192,23,4,35,192,224,3,13
	.byte	'CCTRL',0
	.word	24889
	.byte	4,4,35,128,248,3,13
	.byte	'CCNT',0
	.word	24827
	.byte	4,4,35,132,248,3,13
	.byte	'ICNT',0
	.word	27003
	.byte	4,4,35,136,248,3,13
	.byte	'M1CNT',0
	.word	27208
	.byte	4,4,35,140,248,3,13
	.byte	'M2CNT',0
	.word	27271
	.byte	4,4,35,144,248,3,13
	.byte	'M3CNT',0
	.word	27334
	.byte	4,4,35,148,248,3,13
	.byte	'reserved_FC18',0
	.word	29840
	.byte	232,1,4,35,152,248,3,13
	.byte	'DBGSR',0
	.word	25581
	.byte	4,4,35,128,250,3,13
	.byte	'reserved_FD04',0
	.word	2431
	.byte	4,4,35,132,250,3,13
	.byte	'EXEVT',0
	.word	26457
	.byte	4,4,35,136,250,3,13
	.byte	'CREVT',0
	.word	25333
	.byte	4,4,35,140,250,3,13
	.byte	'SWEVT',0
	.word	28698
	.byte	4,4,35,144,250,3,13
	.byte	'reserved_FD14',0
	.word	29851
	.byte	28,4,35,148,250,3,13
	.byte	'TRIG_ACC',0
	.word	29151
	.byte	4,4,35,176,250,3,13
	.byte	'reserved_FD34',0
	.word	4590
	.byte	12,4,35,180,250,3,13
	.byte	'DMS',0
	.word	26084
	.byte	4,4,35,192,250,3,13
	.byte	'DCX',0
	.word	25834
	.byte	4,4,35,196,250,3,13
	.byte	'DBGTCR',0
	.word	25644
	.byte	4,4,35,200,250,3,13
	.byte	'reserved_FD4C',0
	.word	29860
	.byte	180,1,4,35,204,250,3,13
	.byte	'PCXI',0
	.word	27646
	.byte	4,4,35,128,252,3,13
	.byte	'PSW',0
	.word	28082
	.byte	4,4,35,132,252,3,13
	.byte	'PC',0
	.word	27397
	.byte	4,4,35,136,252,3,13
	.byte	'reserved_FE0C',0
	.word	4250
	.byte	8,4,35,140,252,3,13
	.byte	'SYSCON',0
	.word	28761
	.byte	4,4,35,148,252,3,13
	.byte	'CPU_ID',0
	.word	25207
	.byte	4,4,35,152,252,3,13
	.byte	'CORE_ID',0
	.word	25016
	.byte	4,4,35,156,252,3,13
	.byte	'BIV',0
	.word	24705
	.byte	4,4,35,160,252,3,13
	.byte	'BTV',0
	.word	24766
	.byte	4,4,35,164,252,3,13
	.byte	'ISP',0
	.word	27086
	.byte	4,4,35,168,252,3,13
	.byte	'ICR',0
	.word	14516
	.byte	4,4,35,172,252,3,13
	.byte	'reserved_FE30',0
	.word	4250
	.byte	8,4,35,176,252,3,13
	.byte	'FCX',0
	.word	26520
	.byte	4,4,35,184,252,3,13
	.byte	'LCX',0
	.word	27147
	.byte	4,4,35,188,252,3,13
	.byte	'reserved_FE40',0
	.word	29871
	.byte	16,4,35,192,252,3,13
	.byte	'CUS_ID',0
	.word	25396
	.byte	4,4,35,208,252,3,13
	.byte	'reserved_FE54',0
	.word	29880
	.byte	172,1,4,35,212,252,3,13
	.byte	'D',0
	.word	29891
	.byte	64,4,35,128,254,3,13
	.byte	'reserved_FF40',0
	.word	29900
	.byte	64,4,35,192,254,3,13
	.byte	'A',0
	.word	29909
	.byte	64,4,35,128,255,3,13
	.byte	'reserved_FFC0',0
	.word	29900
	.byte	64,4,35,192,255,3,0,14
	.word	29918
	.byte	32
	.byte	'Ifx_CPU',0,16,130,11,3
	.word	31709
	.byte	17,9,127,9,1,18
	.byte	'IfxCpu_Id_0',0,0,18
	.byte	'IfxCpu_Id_1',0,1,18
	.byte	'IfxCpu_Id_none',0,2,0,32
	.byte	'IfxCpu_Id',0,9,132,1,3
	.word	31731
	.byte	32
	.byte	'IfxCpu_ResourceCpu',0,9,161,1,3
	.word	9404
	.byte	32
	.byte	'Ifx_SRC_SRCR_Bits',0,11,62,3
	.word	9957
	.byte	32
	.byte	'Ifx_SRC_SRCR',0,11,75,3
	.word	10247
	.byte	10
	.byte	'_Ifx_SRC_AGBT',0,11,86,25,4,13
	.byte	'SR',0
	.word	10247
	.byte	4,2,35,0,0,14
	.word	31876
	.byte	32
	.byte	'Ifx_SRC_AGBT',0,11,89,3
	.word	31908
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN',0,11,92,25,12,13
	.byte	'TX',0
	.word	10247
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	10247
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	10247
	.byte	4,2,35,8,0,14
	.word	31934
	.byte	32
	.byte	'Ifx_SRC_ASCLIN',0,11,97,3
	.word	31993
	.byte	10
	.byte	'_Ifx_SRC_BCUSPB',0,11,100,25,4,13
	.byte	'SBSRC',0
	.word	10247
	.byte	4,2,35,0,0,14
	.word	32021
	.byte	32
	.byte	'Ifx_SRC_BCUSPB',0,11,103,3
	.word	32058
	.byte	15,64
	.word	10247
	.byte	16,15,0,10
	.byte	'_Ifx_SRC_CAN',0,11,106,25,64,13
	.byte	'INT',0
	.word	32086
	.byte	64,2,35,0,0,14
	.word	32095
	.byte	32
	.byte	'Ifx_SRC_CAN',0,11,109,3
	.word	32127
	.byte	10
	.byte	'_Ifx_SRC_CCU6',0,11,112,25,16,13
	.byte	'SR0',0
	.word	10247
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	10247
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	10247
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	10247
	.byte	4,2,35,12,0,14
	.word	32152
	.byte	32
	.byte	'Ifx_SRC_CCU6',0,11,118,3
	.word	32224
	.byte	15,8
	.word	10247
	.byte	16,1,0,10
	.byte	'_Ifx_SRC_CERBERUS',0,11,121,25,8,13
	.byte	'SR',0
	.word	32250
	.byte	8,2,35,0,0,14
	.word	32259
	.byte	32
	.byte	'Ifx_SRC_CERBERUS',0,11,124,3
	.word	32295
	.byte	10
	.byte	'_Ifx_SRC_CIF',0,11,127,25,16,13
	.byte	'MI',0
	.word	10247
	.byte	4,2,35,0,13
	.byte	'MIEP',0
	.word	10247
	.byte	4,2,35,4,13
	.byte	'ISP',0
	.word	10247
	.byte	4,2,35,8,13
	.byte	'MJPEG',0
	.word	10247
	.byte	4,2,35,12,0,14
	.word	32325
	.byte	32
	.byte	'Ifx_SRC_CIF',0,11,133,1,3
	.word	32398
	.byte	10
	.byte	'_Ifx_SRC_CPU',0,11,136,1,25,4,13
	.byte	'SBSRC',0
	.word	10247
	.byte	4,2,35,0,0,14
	.word	32424
	.byte	32
	.byte	'Ifx_SRC_CPU',0,11,139,1,3
	.word	32459
	.byte	15,192,1
	.word	10247
	.byte	16,47,0,10
	.byte	'_Ifx_SRC_DMA',0,11,142,1,25,208,1,13
	.byte	'ERR',0
	.word	10247
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	4590
	.byte	12,2,35,4,13
	.byte	'CH',0
	.word	32485
	.byte	192,1,2,35,16,0,14
	.word	32495
	.byte	32
	.byte	'Ifx_SRC_DMA',0,11,147,1,3
	.word	32562
	.byte	10
	.byte	'_Ifx_SRC_DSADC',0,11,150,1,25,8,13
	.byte	'SRM',0
	.word	10247
	.byte	4,2,35,0,13
	.byte	'SRA',0
	.word	10247
	.byte	4,2,35,4,0,14
	.word	32588
	.byte	32
	.byte	'Ifx_SRC_DSADC',0,11,154,1,3
	.word	32636
	.byte	10
	.byte	'_Ifx_SRC_EMEM',0,11,157,1,25,4,13
	.byte	'SR',0
	.word	10247
	.byte	4,2,35,0,0,14
	.word	32664
	.byte	32
	.byte	'Ifx_SRC_EMEM',0,11,160,1,3
	.word	32697
	.byte	15,40
	.word	613
	.byte	16,39,0,10
	.byte	'_Ifx_SRC_ERAY',0,11,163,1,25,80,13
	.byte	'INT',0
	.word	32250
	.byte	8,2,35,0,13
	.byte	'TINT',0
	.word	32250
	.byte	8,2,35,8,13
	.byte	'NDAT',0
	.word	32250
	.byte	8,2,35,16,13
	.byte	'MBSC',0
	.word	32250
	.byte	8,2,35,24,13
	.byte	'OBUSY',0
	.word	10247
	.byte	4,2,35,32,13
	.byte	'IBUSY',0
	.word	10247
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	32724
	.byte	40,2,35,40,0,14
	.word	32733
	.byte	32
	.byte	'Ifx_SRC_ERAY',0,11,172,1,3
	.word	32860
	.byte	10
	.byte	'_Ifx_SRC_ETH',0,11,175,1,25,4,13
	.byte	'SR',0
	.word	10247
	.byte	4,2,35,0,0,14
	.word	32887
	.byte	32
	.byte	'Ifx_SRC_ETH',0,11,178,1,3
	.word	32919
	.byte	10
	.byte	'_Ifx_SRC_FCE',0,11,181,1,25,4,13
	.byte	'SR',0
	.word	10247
	.byte	4,2,35,0,0,14
	.word	32945
	.byte	32
	.byte	'Ifx_SRC_FCE',0,11,184,1,3
	.word	32977
	.byte	10
	.byte	'_Ifx_SRC_FFT',0,11,187,1,25,12,13
	.byte	'DONE',0
	.word	10247
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	10247
	.byte	4,2,35,4,13
	.byte	'RFS',0
	.word	10247
	.byte	4,2,35,8,0,14
	.word	33003
	.byte	32
	.byte	'Ifx_SRC_FFT',0,11,192,1,3
	.word	33063
	.byte	10
	.byte	'_Ifx_SRC_GPSR',0,11,195,1,25,32,13
	.byte	'SR0',0
	.word	10247
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	10247
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	10247
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	10247
	.byte	4,2,35,12,13
	.byte	'reserved_10',0
	.word	29871
	.byte	16,2,35,16,0,14
	.word	33089
	.byte	32
	.byte	'Ifx_SRC_GPSR',0,11,202,1,3
	.word	33183
	.byte	10
	.byte	'_Ifx_SRC_GPT12',0,11,205,1,25,48,13
	.byte	'CIRQ',0
	.word	10247
	.byte	4,2,35,0,13
	.byte	'T2',0
	.word	10247
	.byte	4,2,35,4,13
	.byte	'T3',0
	.word	10247
	.byte	4,2,35,8,13
	.byte	'T4',0
	.word	10247
	.byte	4,2,35,12,13
	.byte	'T5',0
	.word	10247
	.byte	4,2,35,16,13
	.byte	'T6',0
	.word	10247
	.byte	4,2,35,20,13
	.byte	'reserved_18',0
	.word	3621
	.byte	24,2,35,24,0,14
	.word	33210
	.byte	32
	.byte	'Ifx_SRC_GPT12',0,11,214,1,3
	.word	33327
	.byte	15,12
	.word	10247
	.byte	16,2,0,15,32
	.word	10247
	.byte	16,7,0,15,32
	.word	33364
	.byte	16,0,0,15,88
	.word	613
	.byte	16,87,0,15,108
	.word	10247
	.byte	16,26,0,15,96
	.word	613
	.byte	16,95,0,15,96
	.word	33364
	.byte	16,2,0,15,160,3
	.word	613
	.byte	16,159,3,0,15,64
	.word	33364
	.byte	16,1,0,15,192,3
	.word	613
	.byte	16,191,3,0,15,16
	.word	10247
	.byte	16,3,0,15,64
	.word	33449
	.byte	16,3,0,15,192,2
	.word	613
	.byte	16,191,2,0,15,52
	.word	613
	.byte	16,51,0,10
	.byte	'_Ifx_SRC_GTM',0,11,217,1,25,204,18,13
	.byte	'AEIIRQ',0
	.word	10247
	.byte	4,2,35,0,13
	.byte	'ARUIRQ',0
	.word	33355
	.byte	12,2,35,4,13
	.byte	'reserved_10',0
	.word	2431
	.byte	4,2,35,16,13
	.byte	'BRCIRQ',0
	.word	10247
	.byte	4,2,35,20,13
	.byte	'CMPIRQ',0
	.word	10247
	.byte	4,2,35,24,13
	.byte	'SPEIRQ',0
	.word	32250
	.byte	8,2,35,28,13
	.byte	'reserved_24',0
	.word	4250
	.byte	8,2,35,36,13
	.byte	'PSM',0
	.word	33373
	.byte	32,2,35,44,13
	.byte	'reserved_4C',0
	.word	33382
	.byte	88,2,35,76,13
	.byte	'DPLL',0
	.word	33391
	.byte	108,3,35,164,1,13
	.byte	'reserved_110',0
	.word	33400
	.byte	96,3,35,144,2,13
	.byte	'ERR',0
	.word	10247
	.byte	4,3,35,240,2,13
	.byte	'reserved_174',0
	.word	4590
	.byte	12,3,35,244,2,13
	.byte	'TIM',0
	.word	33409
	.byte	96,3,35,128,3,13
	.byte	'reserved_1E0',0
	.word	33418
	.byte	160,3,3,35,224,3,13
	.byte	'MCS',0
	.word	33409
	.byte	96,3,35,128,7,13
	.byte	'reserved_3E0',0
	.word	33418
	.byte	160,3,3,35,224,7,13
	.byte	'TOM',0
	.word	33429
	.byte	64,3,35,128,11,13
	.byte	'reserved_5C0',0
	.word	33438
	.byte	192,3,3,35,192,11,13
	.byte	'ATOM',0
	.word	33458
	.byte	64,3,35,128,15,13
	.byte	'reserved_7C0',0
	.word	33467
	.byte	192,2,3,35,192,15,13
	.byte	'MCSW0',0
	.word	33355
	.byte	12,3,35,128,18,13
	.byte	'reserved_90C',0
	.word	33478
	.byte	52,3,35,140,18,13
	.byte	'MCSW1',0
	.word	33355
	.byte	12,3,35,192,18,0,14
	.word	33487
	.byte	32
	.byte	'Ifx_SRC_GTM',0,11,243,1,3
	.word	33947
	.byte	10
	.byte	'_Ifx_SRC_HSCT',0,11,246,1,25,4,13
	.byte	'SR',0
	.word	10247
	.byte	4,2,35,0,0,14
	.word	33973
	.byte	32
	.byte	'Ifx_SRC_HSCT',0,11,249,1,3
	.word	34006
	.byte	10
	.byte	'_Ifx_SRC_HSSL',0,11,252,1,25,16,13
	.byte	'COK',0
	.word	10247
	.byte	4,2,35,0,13
	.byte	'RDI',0
	.word	10247
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	10247
	.byte	4,2,35,8,13
	.byte	'TRG',0
	.word	10247
	.byte	4,2,35,12,0,14
	.word	34033
	.byte	32
	.byte	'Ifx_SRC_HSSL',0,11,130,2,3
	.word	34106
	.byte	15,56
	.word	613
	.byte	16,55,0,10
	.byte	'_Ifx_SRC_I2C',0,11,133,2,25,80,13
	.byte	'BREQ',0
	.word	10247
	.byte	4,2,35,0,13
	.byte	'LBREQ',0
	.word	10247
	.byte	4,2,35,4,13
	.byte	'SREQ',0
	.word	10247
	.byte	4,2,35,8,13
	.byte	'LSREQ',0
	.word	10247
	.byte	4,2,35,12,13
	.byte	'ERR',0
	.word	10247
	.byte	4,2,35,16,13
	.byte	'P',0
	.word	10247
	.byte	4,2,35,20,13
	.byte	'reserved_18',0
	.word	34133
	.byte	56,2,35,24,0,14
	.word	34142
	.byte	32
	.byte	'Ifx_SRC_I2C',0,11,142,2,3
	.word	34265
	.byte	10
	.byte	'_Ifx_SRC_LMU',0,11,145,2,25,4,13
	.byte	'SR',0
	.word	10247
	.byte	4,2,35,0,0,14
	.word	34291
	.byte	32
	.byte	'Ifx_SRC_LMU',0,11,148,2,3
	.word	34323
	.byte	10
	.byte	'_Ifx_SRC_MSC',0,11,151,2,25,20,13
	.byte	'SR0',0
	.word	10247
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	10247
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	10247
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	10247
	.byte	4,2,35,12,13
	.byte	'SR4',0
	.word	10247
	.byte	4,2,35,16,0,14
	.word	34349
	.byte	32
	.byte	'Ifx_SRC_MSC',0,11,158,2,3
	.word	34434
	.byte	10
	.byte	'_Ifx_SRC_PMU',0,11,161,2,25,4,13
	.byte	'SR',0
	.word	10247
	.byte	4,2,35,0,0,14
	.word	34460
	.byte	32
	.byte	'Ifx_SRC_PMU',0,11,164,2,3
	.word	34492
	.byte	10
	.byte	'_Ifx_SRC_PSI5',0,11,167,2,25,32,13
	.byte	'SR',0
	.word	33364
	.byte	32,2,35,0,0,14
	.word	34518
	.byte	32
	.byte	'Ifx_SRC_PSI5',0,11,170,2,3
	.word	34551
	.byte	10
	.byte	'_Ifx_SRC_PSI5S',0,11,173,2,25,32,13
	.byte	'SR',0
	.word	33364
	.byte	32,2,35,0,0,14
	.word	34578
	.byte	32
	.byte	'Ifx_SRC_PSI5S',0,11,176,2,3
	.word	34612
	.byte	10
	.byte	'_Ifx_SRC_QSPI',0,11,179,2,25,24,13
	.byte	'TX',0
	.word	10247
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	10247
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	10247
	.byte	4,2,35,8,13
	.byte	'PT',0
	.word	10247
	.byte	4,2,35,12,13
	.byte	'HC',0
	.word	10247
	.byte	4,2,35,16,13
	.byte	'U',0
	.word	10247
	.byte	4,2,35,20,0,14
	.word	34640
	.byte	32
	.byte	'Ifx_SRC_QSPI',0,11,187,2,3
	.word	34733
	.byte	10
	.byte	'_Ifx_SRC_SCR',0,11,190,2,25,4,13
	.byte	'SR',0
	.word	10247
	.byte	4,2,35,0,0,14
	.word	34760
	.byte	32
	.byte	'Ifx_SRC_SCR',0,11,193,2,3
	.word	34792
	.byte	10
	.byte	'_Ifx_SRC_SCU',0,11,196,2,25,20,13
	.byte	'DTS',0
	.word	10247
	.byte	4,2,35,0,13
	.byte	'ERU',0
	.word	33449
	.byte	16,2,35,4,0,14
	.word	34818
	.byte	32
	.byte	'Ifx_SRC_SCU',0,11,200,2,3
	.word	34864
	.byte	15,24
	.word	10247
	.byte	16,5,0,10
	.byte	'_Ifx_SRC_SENT',0,11,203,2,25,24,13
	.byte	'SR',0
	.word	34890
	.byte	24,2,35,0,0,14
	.word	34899
	.byte	32
	.byte	'Ifx_SRC_SENT',0,11,206,2,3
	.word	34932
	.byte	10
	.byte	'_Ifx_SRC_SMU',0,11,209,2,25,12,13
	.byte	'SR',0
	.word	33355
	.byte	12,2,35,0,0,14
	.word	34959
	.byte	32
	.byte	'Ifx_SRC_SMU',0,11,212,2,3
	.word	34991
	.byte	10
	.byte	'_Ifx_SRC_STM',0,11,215,2,25,8,13
	.byte	'SR0',0
	.word	10247
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	10247
	.byte	4,2,35,4,0,14
	.word	35017
	.byte	32
	.byte	'Ifx_SRC_STM',0,11,219,2,3
	.word	35063
	.byte	10
	.byte	'_Ifx_SRC_VADCCG',0,11,222,2,25,16,13
	.byte	'SR0',0
	.word	10247
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	10247
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	10247
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	10247
	.byte	4,2,35,12,0,14
	.word	35089
	.byte	32
	.byte	'Ifx_SRC_VADCCG',0,11,228,2,3
	.word	35164
	.byte	10
	.byte	'_Ifx_SRC_VADCG',0,11,231,2,25,16,13
	.byte	'SR0',0
	.word	10247
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	10247
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	10247
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	10247
	.byte	4,2,35,12,0,14
	.word	35193
	.byte	32
	.byte	'Ifx_SRC_VADCG',0,11,237,2,3
	.word	35267
	.byte	10
	.byte	'_Ifx_SRC_XBAR',0,11,240,2,25,4,13
	.byte	'SRC',0
	.word	10247
	.byte	4,2,35,0,0,14
	.word	35295
	.byte	32
	.byte	'Ifx_SRC_XBAR',0,11,243,2,3
	.word	35329
	.byte	15,4
	.word	31876
	.byte	16,0,0,14
	.word	35356
	.byte	10
	.byte	'_Ifx_SRC_GAGBT',0,11,128,3,25,4,13
	.byte	'AGBT',0
	.word	35365
	.byte	4,2,35,0,0,14
	.word	35370
	.byte	32
	.byte	'Ifx_SRC_GAGBT',0,11,131,3,3
	.word	35406
	.byte	15,48
	.word	31934
	.byte	16,3,0,14
	.word	35434
	.byte	10
	.byte	'_Ifx_SRC_GASCLIN',0,11,134,3,25,48,13
	.byte	'ASCLIN',0
	.word	35443
	.byte	48,2,35,0,0,14
	.word	35448
	.byte	32
	.byte	'Ifx_SRC_GASCLIN',0,11,137,3,3
	.word	35488
	.byte	14
	.word	32021
	.byte	10
	.byte	'_Ifx_SRC_GBCU',0,11,140,3,25,4,13
	.byte	'SPB',0
	.word	35518
	.byte	4,2,35,0,0,14
	.word	35523
	.byte	32
	.byte	'Ifx_SRC_GBCU',0,11,143,3,3
	.word	35557
	.byte	15,64
	.word	32095
	.byte	16,0,0,14
	.word	35584
	.byte	10
	.byte	'_Ifx_SRC_GCAN',0,11,146,3,25,64,13
	.byte	'CAN',0
	.word	35593
	.byte	64,2,35,0,0,14
	.word	35598
	.byte	32
	.byte	'Ifx_SRC_GCAN',0,11,149,3,3
	.word	35632
	.byte	15,32
	.word	32152
	.byte	16,1,0,14
	.word	35659
	.byte	10
	.byte	'_Ifx_SRC_GCCU6',0,11,152,3,25,32,13
	.byte	'CCU6',0
	.word	35668
	.byte	32,2,35,0,0,14
	.word	35673
	.byte	32
	.byte	'Ifx_SRC_GCCU6',0,11,155,3,3
	.word	35709
	.byte	14
	.word	32259
	.byte	10
	.byte	'_Ifx_SRC_GCERBERUS',0,11,158,3,25,8,13
	.byte	'CERBERUS',0
	.word	35737
	.byte	8,2,35,0,0,14
	.word	35742
	.byte	32
	.byte	'Ifx_SRC_GCERBERUS',0,11,161,3,3
	.word	35786
	.byte	15,16
	.word	32325
	.byte	16,0,0,14
	.word	35818
	.byte	10
	.byte	'_Ifx_SRC_GCIF',0,11,164,3,25,16,13
	.byte	'CIF',0
	.word	35827
	.byte	16,2,35,0,0,14
	.word	35832
	.byte	32
	.byte	'Ifx_SRC_GCIF',0,11,167,3,3
	.word	35866
	.byte	15,8
	.word	32424
	.byte	16,1,0,14
	.word	35893
	.byte	10
	.byte	'_Ifx_SRC_GCPU',0,11,170,3,25,8,13
	.byte	'CPU',0
	.word	35902
	.byte	8,2,35,0,0,14
	.word	35907
	.byte	32
	.byte	'Ifx_SRC_GCPU',0,11,173,3,3
	.word	35941
	.byte	15,208,1
	.word	32495
	.byte	16,0,0,14
	.word	35968
	.byte	10
	.byte	'_Ifx_SRC_GDMA',0,11,176,3,25,208,1,13
	.byte	'DMA',0
	.word	35978
	.byte	208,1,2,35,0,0,14
	.word	35983
	.byte	32
	.byte	'Ifx_SRC_GDMA',0,11,179,3,3
	.word	36019
	.byte	14
	.word	32588
	.byte	14
	.word	32588
	.byte	14
	.word	32588
	.byte	10
	.byte	'_Ifx_SRC_GDSADC',0,11,182,3,25,32,13
	.byte	'DSADC0',0
	.word	36046
	.byte	8,2,35,0,13
	.byte	'reserved_8',0
	.word	4250
	.byte	8,2,35,8,13
	.byte	'DSADC2',0
	.word	36051
	.byte	8,2,35,16,13
	.byte	'DSADC3',0
	.word	36056
	.byte	8,2,35,24,0,14
	.word	36061
	.byte	32
	.byte	'Ifx_SRC_GDSADC',0,11,188,3,3
	.word	36152
	.byte	15,4
	.word	32664
	.byte	16,0,0,14
	.word	36181
	.byte	10
	.byte	'_Ifx_SRC_GEMEM',0,11,191,3,25,4,13
	.byte	'EMEM',0
	.word	36190
	.byte	4,2,35,0,0,14
	.word	36195
	.byte	32
	.byte	'Ifx_SRC_GEMEM',0,11,194,3,3
	.word	36231
	.byte	15,80
	.word	32733
	.byte	16,0,0,14
	.word	36259
	.byte	10
	.byte	'_Ifx_SRC_GERAY',0,11,197,3,25,80,13
	.byte	'ERAY',0
	.word	36268
	.byte	80,2,35,0,0,14
	.word	36273
	.byte	32
	.byte	'Ifx_SRC_GERAY',0,11,200,3,3
	.word	36309
	.byte	15,4
	.word	32887
	.byte	16,0,0,14
	.word	36337
	.byte	10
	.byte	'_Ifx_SRC_GETH',0,11,203,3,25,4,13
	.byte	'ETH',0
	.word	36346
	.byte	4,2,35,0,0,14
	.word	36351
	.byte	32
	.byte	'Ifx_SRC_GETH',0,11,206,3,3
	.word	36385
	.byte	15,4
	.word	32945
	.byte	16,0,0,14
	.word	36412
	.byte	10
	.byte	'_Ifx_SRC_GFCE',0,11,209,3,25,4,13
	.byte	'FCE',0
	.word	36421
	.byte	4,2,35,0,0,14
	.word	36426
	.byte	32
	.byte	'Ifx_SRC_GFCE',0,11,212,3,3
	.word	36460
	.byte	15,12
	.word	33003
	.byte	16,0,0,14
	.word	36487
	.byte	10
	.byte	'_Ifx_SRC_GFFT',0,11,215,3,25,12,13
	.byte	'FFT',0
	.word	36496
	.byte	12,2,35,0,0,14
	.word	36501
	.byte	32
	.byte	'Ifx_SRC_GFFT',0,11,218,3,3
	.word	36535
	.byte	15,64
	.word	33089
	.byte	16,1,0,14
	.word	36562
	.byte	10
	.byte	'_Ifx_SRC_GGPSR',0,11,221,3,25,64,13
	.byte	'GPSR',0
	.word	36571
	.byte	64,2,35,0,0,14
	.word	36576
	.byte	32
	.byte	'Ifx_SRC_GGPSR',0,11,224,3,3
	.word	36612
	.byte	15,48
	.word	33210
	.byte	16,0,0,14
	.word	36640
	.byte	10
	.byte	'_Ifx_SRC_GGPT12',0,11,227,3,25,48,13
	.byte	'GPT12',0
	.word	36649
	.byte	48,2,35,0,0,14
	.word	36654
	.byte	32
	.byte	'Ifx_SRC_GGPT12',0,11,230,3,3
	.word	36692
	.byte	15,204,18
	.word	33487
	.byte	16,0,0,14
	.word	36721
	.byte	10
	.byte	'_Ifx_SRC_GGTM',0,11,233,3,25,204,18,13
	.byte	'GTM',0
	.word	36731
	.byte	204,18,2,35,0,0,14
	.word	36736
	.byte	32
	.byte	'Ifx_SRC_GGTM',0,11,236,3,3
	.word	36772
	.byte	15,4
	.word	33973
	.byte	16,0,0,14
	.word	36799
	.byte	10
	.byte	'_Ifx_SRC_GHSCT',0,11,239,3,25,4,13
	.byte	'HSCT',0
	.word	36808
	.byte	4,2,35,0,0,14
	.word	36813
	.byte	32
	.byte	'Ifx_SRC_GHSCT',0,11,242,3,3
	.word	36849
	.byte	15,64
	.word	34033
	.byte	16,3,0,14
	.word	36877
	.byte	10
	.byte	'_Ifx_SRC_GHSSL',0,11,245,3,25,68,13
	.byte	'HSSL',0
	.word	36886
	.byte	64,2,35,0,13
	.byte	'EXI',0
	.word	10247
	.byte	4,2,35,64,0,14
	.word	36891
	.byte	32
	.byte	'Ifx_SRC_GHSSL',0,11,249,3,3
	.word	36940
	.byte	15,80
	.word	34142
	.byte	16,0,0,14
	.word	36968
	.byte	10
	.byte	'_Ifx_SRC_GI2C',0,11,252,3,25,80,13
	.byte	'I2C',0
	.word	36977
	.byte	80,2,35,0,0,14
	.word	36982
	.byte	32
	.byte	'Ifx_SRC_GI2C',0,11,255,3,3
	.word	37016
	.byte	15,4
	.word	34291
	.byte	16,0,0,14
	.word	37043
	.byte	10
	.byte	'_Ifx_SRC_GLMU',0,11,130,4,25,4,13
	.byte	'LMU',0
	.word	37052
	.byte	4,2,35,0,0,14
	.word	37057
	.byte	32
	.byte	'Ifx_SRC_GLMU',0,11,133,4,3
	.word	37091
	.byte	15,40
	.word	34349
	.byte	16,1,0,14
	.word	37118
	.byte	10
	.byte	'_Ifx_SRC_GMSC',0,11,136,4,25,40,13
	.byte	'MSC',0
	.word	37127
	.byte	40,2,35,0,0,14
	.word	37132
	.byte	32
	.byte	'Ifx_SRC_GMSC',0,11,139,4,3
	.word	37166
	.byte	15,8
	.word	34460
	.byte	16,1,0,14
	.word	37193
	.byte	10
	.byte	'_Ifx_SRC_GPMU',0,11,142,4,25,8,13
	.byte	'PMU',0
	.word	37202
	.byte	8,2,35,0,0,14
	.word	37207
	.byte	32
	.byte	'Ifx_SRC_GPMU',0,11,145,4,3
	.word	37241
	.byte	15,32
	.word	34518
	.byte	16,0,0,14
	.word	37268
	.byte	10
	.byte	'_Ifx_SRC_GPSI5',0,11,148,4,25,32,13
	.byte	'PSI5',0
	.word	37277
	.byte	32,2,35,0,0,14
	.word	37282
	.byte	32
	.byte	'Ifx_SRC_GPSI5',0,11,151,4,3
	.word	37318
	.byte	15,32
	.word	34578
	.byte	16,0,0,14
	.word	37346
	.byte	10
	.byte	'_Ifx_SRC_GPSI5S',0,11,154,4,25,32,13
	.byte	'PSI5S',0
	.word	37355
	.byte	32,2,35,0,0,14
	.word	37360
	.byte	32
	.byte	'Ifx_SRC_GPSI5S',0,11,157,4,3
	.word	37398
	.byte	15,96
	.word	34640
	.byte	16,3,0,14
	.word	37427
	.byte	10
	.byte	'_Ifx_SRC_GQSPI',0,11,160,4,25,96,13
	.byte	'QSPI',0
	.word	37436
	.byte	96,2,35,0,0,14
	.word	37441
	.byte	32
	.byte	'Ifx_SRC_GQSPI',0,11,163,4,3
	.word	37477
	.byte	15,4
	.word	34760
	.byte	16,0,0,14
	.word	37505
	.byte	10
	.byte	'_Ifx_SRC_GSCR',0,11,166,4,25,4,13
	.byte	'SCR',0
	.word	37514
	.byte	4,2,35,0,0,14
	.word	37519
	.byte	32
	.byte	'Ifx_SRC_GSCR',0,11,169,4,3
	.word	37553
	.byte	14
	.word	34818
	.byte	10
	.byte	'_Ifx_SRC_GSCU',0,11,172,4,25,20,13
	.byte	'SCU',0
	.word	37580
	.byte	20,2,35,0,0,14
	.word	37585
	.byte	32
	.byte	'Ifx_SRC_GSCU',0,11,175,4,3
	.word	37619
	.byte	15,24
	.word	34899
	.byte	16,0,0,14
	.word	37646
	.byte	10
	.byte	'_Ifx_SRC_GSENT',0,11,178,4,25,24,13
	.byte	'SENT',0
	.word	37655
	.byte	24,2,35,0,0,14
	.word	37660
	.byte	32
	.byte	'Ifx_SRC_GSENT',0,11,181,4,3
	.word	37696
	.byte	15,12
	.word	34959
	.byte	16,0,0,14
	.word	37724
	.byte	10
	.byte	'_Ifx_SRC_GSMU',0,11,184,4,25,12,13
	.byte	'SMU',0
	.word	37733
	.byte	12,2,35,0,0,14
	.word	37738
	.byte	32
	.byte	'Ifx_SRC_GSMU',0,11,187,4,3
	.word	37772
	.byte	15,16
	.word	35017
	.byte	16,1,0,14
	.word	37799
	.byte	10
	.byte	'_Ifx_SRC_GSTM',0,11,190,4,25,16,13
	.byte	'STM',0
	.word	37808
	.byte	16,2,35,0,0,14
	.word	37813
	.byte	32
	.byte	'Ifx_SRC_GSTM',0,11,193,4,3
	.word	37847
	.byte	15,64
	.word	35193
	.byte	16,3,0,14
	.word	37874
	.byte	15,224,1
	.word	613
	.byte	16,223,1,0,15,32
	.word	35089
	.byte	16,1,0,14
	.word	37899
	.byte	10
	.byte	'_Ifx_SRC_GVADC',0,11,196,4,25,192,2,13
	.byte	'G',0
	.word	37883
	.byte	64,2,35,0,13
	.byte	'reserved_40',0
	.word	37888
	.byte	224,1,2,35,64,13
	.byte	'CG',0
	.word	37908
	.byte	32,3,35,160,2,0,14
	.word	37913
	.byte	32
	.byte	'Ifx_SRC_GVADC',0,11,201,4,3
	.word	37982
	.byte	14
	.word	35295
	.byte	10
	.byte	'_Ifx_SRC_GXBAR',0,11,204,4,25,4,13
	.byte	'XBAR',0
	.word	38010
	.byte	4,2,35,0,0,14
	.word	38015
	.byte	32
	.byte	'Ifx_SRC_GXBAR',0,11,207,4,3
	.word	38051
	.byte	10
	.byte	'_Ifx_SCU_ACCEN0_Bits',0,4,45,16,4,11
	.byte	'EN0',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	613
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	613
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	613
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	613
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	613
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	613
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	613
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	613
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	613
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	613
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	613
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	613
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	613
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	613
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	613
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	613
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	613
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	613
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	613
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	613
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	613
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	613
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	613
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	613
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	613
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_ACCEN0_Bits',0,4,79,3
	.word	38079
	.byte	10
	.byte	'_Ifx_SCU_ACCEN1_Bits',0,4,82,16,4,11
	.byte	'reserved_0',0,4
	.word	438
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN1_Bits',0,4,85,3
	.word	38636
	.byte	10
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,4,88,16,4,11
	.byte	'STM0DIS',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'STM1DIS',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'STM2DIS',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	438
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,4,94,3
	.word	38713
	.byte	10
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,4,97,16,4,11
	.byte	'BAUD1DIV',0,1
	.word	613
	.byte	4,4,2,35,0,11
	.byte	'BAUD2DIV',0,1
	.word	613
	.byte	4,0,2,35,0,11
	.byte	'SRIDIV',0,1
	.word	613
	.byte	4,4,2,35,1,11
	.byte	'LPDIV',0,1
	.word	613
	.byte	4,0,2,35,1,11
	.byte	'SPBDIV',0,1
	.word	613
	.byte	4,4,2,35,2,11
	.byte	'FSI2DIV',0,1
	.word	613
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	613
	.byte	2,0,2,35,2,11
	.byte	'FSIDIV',0,1
	.word	613
	.byte	2,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	613
	.byte	2,4,2,35,3,11
	.byte	'CLKSEL',0,1
	.word	613
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	613
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON0_Bits',0,4,111,3
	.word	38849
	.byte	10
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,4,114,16,4,11
	.byte	'CANDIV',0,1
	.word	613
	.byte	4,4,2,35,0,11
	.byte	'ERAYDIV',0,1
	.word	613
	.byte	4,0,2,35,0,11
	.byte	'STMDIV',0,1
	.word	613
	.byte	4,4,2,35,1,11
	.byte	'GTMDIV',0,1
	.word	613
	.byte	4,0,2,35,1,11
	.byte	'ETHDIV',0,1
	.word	613
	.byte	4,4,2,35,2,11
	.byte	'ASCLINFDIV',0,1
	.word	613
	.byte	4,0,2,35,2,11
	.byte	'ASCLINSDIV',0,1
	.word	613
	.byte	4,4,2,35,3,11
	.byte	'INSEL',0,1
	.word	613
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	613
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON1_Bits',0,4,126,3
	.word	39129
	.byte	10
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,4,129,1,16,4,11
	.byte	'BBBDIV',0,1
	.word	613
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	438
	.byte	26,2,2,35,0,11
	.byte	'UP',0,1
	.word	613
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON2_Bits',0,4,135,1,3
	.word	39367
	.byte	10
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,4,138,1,16,4,11
	.byte	'PLLDIV',0,1
	.word	613
	.byte	6,2,2,35,0,11
	.byte	'PLLSEL',0,1
	.word	613
	.byte	2,0,2,35,0,11
	.byte	'PLLERAYDIV',0,1
	.word	613
	.byte	6,2,2,35,1,11
	.byte	'PLLERAYSEL',0,1
	.word	613
	.byte	2,0,2,35,1,11
	.byte	'SRIDIV',0,1
	.word	613
	.byte	6,2,2,35,2,11
	.byte	'SRISEL',0,1
	.word	613
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	613
	.byte	5,3,2,35,3,11
	.byte	'SLCK',0,1
	.word	613
	.byte	1,2,2,35,3,11
	.byte	'UP',0,1
	.word	613
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON3_Bits',0,4,150,1,3
	.word	39495
	.byte	10
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,4,153,1,16,4,11
	.byte	'SPBDIV',0,1
	.word	613
	.byte	6,2,2,35,0,11
	.byte	'SPBSEL',0,1
	.word	613
	.byte	2,0,2,35,0,11
	.byte	'GTMDIV',0,1
	.word	613
	.byte	6,2,2,35,1,11
	.byte	'GTMSEL',0,1
	.word	613
	.byte	2,0,2,35,1,11
	.byte	'STMDIV',0,1
	.word	613
	.byte	6,2,2,35,2,11
	.byte	'STMSEL',0,1
	.word	613
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	613
	.byte	5,3,2,35,3,11
	.byte	'SLCK',0,1
	.word	613
	.byte	1,2,2,35,3,11
	.byte	'UP',0,1
	.word	613
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON4_Bits',0,4,165,1,3
	.word	39738
	.byte	10
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,4,168,1,16,4,11
	.byte	'MAXDIV',0,1
	.word	613
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	438
	.byte	26,2,2,35,0,11
	.byte	'UP',0,1
	.word	613
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON5_Bits',0,4,174,1,3
	.word	39973
	.byte	10
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,4,177,1,16,4,11
	.byte	'CPU0DIV',0,1
	.word	613
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	438
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON6_Bits',0,4,181,1,3
	.word	40101
	.byte	10
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,4,184,1,16,4,11
	.byte	'CPU1DIV',0,1
	.word	613
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	438
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON7_Bits',0,4,188,1,3
	.word	40201
	.byte	10
	.byte	'_Ifx_SCU_CHIPID_Bits',0,4,191,1,16,4,11
	.byte	'CHREV',0,1
	.word	613
	.byte	6,2,2,35,0,11
	.byte	'CHTEC',0,1
	.word	613
	.byte	2,0,2,35,0,11
	.byte	'CHID',0,1
	.word	613
	.byte	8,0,2,35,1,11
	.byte	'EEA',0,1
	.word	613
	.byte	1,7,2,35,2,11
	.byte	'UCODE',0,1
	.word	613
	.byte	7,0,2,35,2,11
	.byte	'FSIZE',0,1
	.word	613
	.byte	4,4,2,35,3,11
	.byte	'SP',0,1
	.word	613
	.byte	2,2,2,35,3,11
	.byte	'SEC',0,1
	.word	613
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CHIPID_Bits',0,4,202,1,3
	.word	40301
	.byte	10
	.byte	'_Ifx_SCU_DTSCON_Bits',0,4,205,1,16,4,11
	.byte	'PWD',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'START',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	613
	.byte	2,4,2,35,0,11
	.byte	'CAL',0,4
	.word	438
	.byte	20,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	613
	.byte	7,1,2,35,3,11
	.byte	'SLCK',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_DTSCON_Bits',0,4,213,1,3
	.word	40509
	.byte	10
	.byte	'_Ifx_SCU_DTSLIM_Bits',0,4,216,1,16,4,11
	.byte	'LOWER',0,2
	.word	630
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	613
	.byte	5,1,2,35,1,11
	.byte	'LLU',0,1
	.word	613
	.byte	1,0,2,35,1,11
	.byte	'UPPER',0,2
	.word	630
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	613
	.byte	4,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	613
	.byte	1,1,2,35,3,11
	.byte	'UOF',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_DTSLIM_Bits',0,4,225,1,3
	.word	40674
	.byte	10
	.byte	'_Ifx_SCU_DTSSTAT_Bits',0,4,228,1,16,4,11
	.byte	'RESULT',0,2
	.word	630
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	613
	.byte	4,2,2,35,1,11
	.byte	'RDY',0,1
	.word	613
	.byte	1,1,2,35,1,11
	.byte	'BUSY',0,1
	.word	613
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	630
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_DTSSTAT_Bits',0,4,235,1,3
	.word	40857
	.byte	10
	.byte	'_Ifx_SCU_EICR_Bits',0,4,238,1,16,4,11
	.byte	'reserved_0',0,1
	.word	613
	.byte	4,4,2,35,0,11
	.byte	'EXIS0',0,1
	.word	613
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'FEN0',0,1
	.word	613
	.byte	1,7,2,35,1,11
	.byte	'REN0',0,1
	.word	613
	.byte	1,6,2,35,1,11
	.byte	'LDEN0',0,1
	.word	613
	.byte	1,5,2,35,1,11
	.byte	'EIEN0',0,1
	.word	613
	.byte	1,4,2,35,1,11
	.byte	'INP0',0,1
	.word	613
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	438
	.byte	5,12,2,35,0,11
	.byte	'EXIS1',0,1
	.word	613
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	613
	.byte	1,0,2,35,2,11
	.byte	'FEN1',0,1
	.word	613
	.byte	1,7,2,35,3,11
	.byte	'REN1',0,1
	.word	613
	.byte	1,6,2,35,3,11
	.byte	'LDEN1',0,1
	.word	613
	.byte	1,5,2,35,3,11
	.byte	'EIEN1',0,1
	.word	613
	.byte	1,4,2,35,3,11
	.byte	'INP1',0,1
	.word	613
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EICR_Bits',0,4,129,2,3
	.word	41011
	.byte	10
	.byte	'_Ifx_SCU_EIFR_Bits',0,4,132,2,16,4,11
	.byte	'INTF0',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'INTF1',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'INTF2',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'INTF3',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'INTF4',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'INTF5',0,1
	.word	613
	.byte	1,2,2,35,0,11
	.byte	'INTF6',0,1
	.word	613
	.byte	1,1,2,35,0,11
	.byte	'INTF7',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	438
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_EIFR_Bits',0,4,143,2,3
	.word	41375
	.byte	10
	.byte	'_Ifx_SCU_EMSR_Bits',0,4,146,2,16,4,11
	.byte	'POL',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'MODE',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'ENON',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'PSEL',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	630
	.byte	12,0,2,35,0,11
	.byte	'EMSF',0,1
	.word	613
	.byte	1,7,2,35,2,11
	.byte	'SEMSF',0,1
	.word	613
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	613
	.byte	6,0,2,35,2,11
	.byte	'EMSFM',0,1
	.word	613
	.byte	2,6,2,35,3,11
	.byte	'SEMSFM',0,1
	.word	613
	.byte	2,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	613
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_EMSR_Bits',0,4,159,2,3
	.word	41586
	.byte	10
	.byte	'_Ifx_SCU_ESRCFG_Bits',0,4,162,2,16,4,11
	.byte	'reserved_0',0,1
	.word	613
	.byte	7,1,2,35,0,11
	.byte	'EDCON',0,2
	.word	630
	.byte	2,7,2,35,0,11
	.byte	'reserved_9',0,4
	.word	438
	.byte	23,0,2,35,0,0,32
	.byte	'Ifx_SCU_ESRCFG_Bits',0,4,167,2,3
	.word	41838
	.byte	10
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,4,170,2,16,4,11
	.byte	'ARI',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'ARC',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	438
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_ESROCFG_Bits',0,4,175,2,3
	.word	41956
	.byte	10
	.byte	'_Ifx_SCU_EVR13CON_Bits',0,4,178,2,16,4,11
	.byte	'reserved_0',0,4
	.word	438
	.byte	28,4,2,35,0,11
	.byte	'EVR13OFF',0,1
	.word	613
	.byte	1,3,2,35,3,11
	.byte	'BPEVR13OFF',0,1
	.word	613
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	613
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVR13CON_Bits',0,4,185,2,3
	.word	42067
	.byte	10
	.byte	'_Ifx_SCU_EVR33CON_Bits',0,4,188,2,16,4,11
	.byte	'reserved_0',0,4
	.word	438
	.byte	28,4,2,35,0,11
	.byte	'EVR33OFF',0,1
	.word	613
	.byte	1,3,2,35,3,11
	.byte	'BPEVR33OFF',0,1
	.word	613
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	613
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVR33CON_Bits',0,4,195,2,3
	.word	42230
	.byte	10
	.byte	'_Ifx_SCU_EVRADCSTAT_Bits',0,4,198,2,16,4,11
	.byte	'ADC13V',0,1
	.word	613
	.byte	8,0,2,35,0,11
	.byte	'ADC33V',0,1
	.word	613
	.byte	8,0,2,35,1,11
	.byte	'ADCSWDV',0,1
	.word	613
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	613
	.byte	7,1,2,35,3,11
	.byte	'VAL',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRADCSTAT_Bits',0,4,205,2,3
	.word	42393
	.byte	10
	.byte	'_Ifx_SCU_EVRDVSTAT_Bits',0,4,208,2,16,4,11
	.byte	'DVS13TRIM',0,1
	.word	613
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	613
	.byte	8,0,2,35,1,11
	.byte	'DVS33TRIM',0,1
	.word	613
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	613
	.byte	7,1,2,35,3,11
	.byte	'VAL',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRDVSTAT_Bits',0,4,215,2,3
	.word	42551
	.byte	10
	.byte	'_Ifx_SCU_EVRMONCTRL_Bits',0,4,218,2,16,4,11
	.byte	'EVR13OVMOD',0,1
	.word	613
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	613
	.byte	2,4,2,35,0,11
	.byte	'EVR13UVMOD',0,1
	.word	613
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	613
	.byte	2,0,2,35,0,11
	.byte	'EVR33OVMOD',0,1
	.word	613
	.byte	2,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	613
	.byte	2,4,2,35,1,11
	.byte	'EVR33UVMOD',0,1
	.word	613
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	613
	.byte	2,0,2,35,1,11
	.byte	'SWDOVMOD',0,1
	.word	613
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	613
	.byte	2,4,2,35,2,11
	.byte	'SWDUVMOD',0,1
	.word	613
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	630
	.byte	10,0,2,35,2,0,32
	.byte	'Ifx_SCU_EVRMONCTRL_Bits',0,4,232,2,3
	.word	42716
	.byte	10
	.byte	'_Ifx_SCU_EVROSCCTRL_Bits',0,4,235,2,16,4,11
	.byte	'OSCTRIM',0,2
	.word	630
	.byte	10,6,2,35,0,11
	.byte	'OSCPTAT',0,1
	.word	613
	.byte	6,0,2,35,1,11
	.byte	'OSCANASEL',0,1
	.word	613
	.byte	4,4,2,35,2,11
	.byte	'HPBGTRIM',0,2
	.word	630
	.byte	7,5,2,35,2,11
	.byte	'HPBGCLKEN',0,1
	.word	613
	.byte	1,4,2,35,3,11
	.byte	'OSC3V3',0,1
	.word	613
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	613
	.byte	2,1,2,35,3,11
	.byte	'LCK',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVROSCCTRL_Bits',0,4,245,2,3
	.word	43045
	.byte	10
	.byte	'_Ifx_SCU_EVROVMON_Bits',0,4,248,2,16,4,11
	.byte	'EVR13OVVAL',0,1
	.word	613
	.byte	8,0,2,35,0,11
	.byte	'EVR33OVVAL',0,1
	.word	613
	.byte	8,0,2,35,1,11
	.byte	'SWDOVVAL',0,1
	.word	613
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	613
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVROVMON_Bits',0,4,255,2,3
	.word	43266
	.byte	10
	.byte	'_Ifx_SCU_EVRRSTCON_Bits',0,4,130,3,16,4,11
	.byte	'RST13TRIM',0,1
	.word	613
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	438
	.byte	16,8,2,35,0,11
	.byte	'RST13OFF',0,1
	.word	613
	.byte	1,7,2,35,3,11
	.byte	'BPRST13OFF',0,1
	.word	613
	.byte	1,6,2,35,3,11
	.byte	'RST33OFF',0,1
	.word	613
	.byte	1,5,2,35,3,11
	.byte	'BPRST33OFF',0,1
	.word	613
	.byte	1,4,2,35,3,11
	.byte	'RSTSWDOFF',0,1
	.word	613
	.byte	1,3,2,35,3,11
	.byte	'BPRSTSWDOFF',0,1
	.word	613
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	613
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRRSTCON_Bits',0,4,142,3,3
	.word	43429
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF1_Bits',0,4,145,3,16,4,11
	.byte	'SD5P',0,1
	.word	613
	.byte	8,0,2,35,0,11
	.byte	'SD5I',0,1
	.word	613
	.byte	8,0,2,35,1,11
	.byte	'SD5D',0,1
	.word	613
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	613
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF1_Bits',0,4,152,3,3
	.word	43701
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF2_Bits',0,4,155,3,16,4,11
	.byte	'SD33P',0,1
	.word	613
	.byte	8,0,2,35,0,11
	.byte	'SD33I',0,1
	.word	613
	.byte	8,0,2,35,1,11
	.byte	'SD33D',0,1
	.word	613
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	613
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF2_Bits',0,4,162,3,3
	.word	43854
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF3_Bits',0,4,165,3,16,4,11
	.byte	'CT5REG0',0,1
	.word	613
	.byte	8,0,2,35,0,11
	.byte	'CT5REG1',0,1
	.word	613
	.byte	8,0,2,35,1,11
	.byte	'CT5REG2',0,1
	.word	613
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	613
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF3_Bits',0,4,172,3,3
	.word	44010
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF4_Bits',0,4,175,3,16,4,11
	.byte	'CT5REG3',0,1
	.word	613
	.byte	8,0,2,35,0,11
	.byte	'CT5REG4',0,1
	.word	613
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	630
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF4_Bits',0,4,181,3,3
	.word	44172
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF5_Bits',0,4,184,3,16,4,11
	.byte	'CT33REG0',0,1
	.word	613
	.byte	8,0,2,35,0,11
	.byte	'CT33REG1',0,1
	.word	613
	.byte	8,0,2,35,1,11
	.byte	'CT33REG2',0,1
	.word	613
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	613
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF5_Bits',0,4,191,3,3
	.word	44315
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF6_Bits',0,4,194,3,16,4,11
	.byte	'CT33REG3',0,1
	.word	613
	.byte	8,0,2,35,0,11
	.byte	'CT33REG4',0,1
	.word	613
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	630
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF6_Bits',0,4,200,3,3
	.word	44480
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL1_Bits',0,4,203,3,16,4,11
	.byte	'SDFREQSPRD',0,2
	.word	630
	.byte	16,0,2,35,0,11
	.byte	'SDFREQ',0,1
	.word	613
	.byte	8,0,2,35,2,11
	.byte	'SDSTEP',0,1
	.word	613
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	613
	.byte	2,2,2,35,3,11
	.byte	'SDSAMPLE',0,1
	.word	613
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCTRL1_Bits',0,4,211,3,3
	.word	44625
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL2_Bits',0,4,214,3,16,4,11
	.byte	'DRVP',0,1
	.word	613
	.byte	8,0,2,35,0,11
	.byte	'SDMINMAXDC',0,1
	.word	613
	.byte	8,0,2,35,1,11
	.byte	'DRVN',0,1
	.word	613
	.byte	8,0,2,35,2,11
	.byte	'SDLUT',0,1
	.word	613
	.byte	6,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	613
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCTRL2_Bits',0,4,222,3,3
	.word	44806
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL3_Bits',0,4,225,3,16,4,11
	.byte	'SDPWMPRE',0,1
	.word	613
	.byte	8,0,2,35,0,11
	.byte	'SDPID',0,1
	.word	613
	.byte	8,0,2,35,1,11
	.byte	'SDVOKLVL',0,1
	.word	613
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	613
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCTRL3_Bits',0,4,232,3,3
	.word	44980
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL4_Bits',0,4,235,3,16,4,11
	.byte	'reserved_0',0,1
	.word	613
	.byte	8,0,2,35,0,11
	.byte	'SYNCDIV',0,1
	.word	613
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	438
	.byte	20,1,2,35,0,11
	.byte	'LCK',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCTRL4_Bits',0,4,241,3,3
	.word	45140
	.byte	10
	.byte	'_Ifx_SCU_EVRSTAT_Bits',0,4,244,3,16,4,11
	.byte	'EVR13',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'OV13',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'EVR33',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'OV33',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'OVSWD',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'UV13',0,1
	.word	613
	.byte	1,2,2,35,0,11
	.byte	'UV33',0,1
	.word	613
	.byte	1,1,2,35,0,11
	.byte	'UVSWD',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'EXTPASS13',0,1
	.word	613
	.byte	1,7,2,35,1,11
	.byte	'EXTPASS33',0,1
	.word	613
	.byte	1,6,2,35,1,11
	.byte	'BGPROK',0,1
	.word	613
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	438
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSTAT_Bits',0,4,130,4,3
	.word	45284
	.byte	10
	.byte	'_Ifx_SCU_EVRTRIM_Bits',0,4,133,4,16,4,11
	.byte	'EVR13TRIM',0,1
	.word	613
	.byte	8,0,2,35,0,11
	.byte	'SDVOUTSEL',0,1
	.word	613
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	630
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRTRIM_Bits',0,4,139,4,3
	.word	45558
	.byte	10
	.byte	'_Ifx_SCU_EVRUVMON_Bits',0,4,142,4,16,4,11
	.byte	'EVR13UVVAL',0,1
	.word	613
	.byte	8,0,2,35,0,11
	.byte	'EVR33UVVAL',0,1
	.word	613
	.byte	8,0,2,35,1,11
	.byte	'SWDUVVAL',0,1
	.word	613
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	613
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRUVMON_Bits',0,4,149,4,3
	.word	45697
	.byte	10
	.byte	'_Ifx_SCU_EXTCON_Bits',0,4,152,4,16,4,11
	.byte	'EN0',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'SEL0',0,1
	.word	613
	.byte	4,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	630
	.byte	10,0,2,35,0,11
	.byte	'EN1',0,1
	.word	613
	.byte	1,7,2,35,2,11
	.byte	'NSEL',0,1
	.word	613
	.byte	1,6,2,35,2,11
	.byte	'SEL1',0,1
	.word	613
	.byte	4,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	613
	.byte	2,0,2,35,2,11
	.byte	'DIV1',0,1
	.word	613
	.byte	8,0,2,35,3,0,32
	.byte	'Ifx_SCU_EXTCON_Bits',0,4,163,4,3
	.word	45860
	.byte	10
	.byte	'_Ifx_SCU_FDR_Bits',0,4,166,4,16,4,11
	.byte	'STEP',0,2
	.word	630
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	613
	.byte	4,2,2,35,1,11
	.byte	'DM',0,1
	.word	613
	.byte	2,0,2,35,1,11
	.byte	'RESULT',0,2
	.word	630
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	613
	.byte	5,1,2,35,3,11
	.byte	'DISCLK',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_FDR_Bits',0,4,174,4,3
	.word	46078
	.byte	10
	.byte	'_Ifx_SCU_FMR_Bits',0,4,177,4,16,4,11
	.byte	'FS0',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'FS1',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'FS2',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'FS3',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'FS4',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'FS5',0,1
	.word	613
	.byte	1,2,2,35,0,11
	.byte	'FS6',0,1
	.word	613
	.byte	1,1,2,35,0,11
	.byte	'FS7',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	613
	.byte	8,0,2,35,1,11
	.byte	'FC0',0,1
	.word	613
	.byte	1,7,2,35,2,11
	.byte	'FC1',0,1
	.word	613
	.byte	1,6,2,35,2,11
	.byte	'FC2',0,1
	.word	613
	.byte	1,5,2,35,2,11
	.byte	'FC3',0,1
	.word	613
	.byte	1,4,2,35,2,11
	.byte	'FC4',0,1
	.word	613
	.byte	1,3,2,35,2,11
	.byte	'FC5',0,1
	.word	613
	.byte	1,2,2,35,2,11
	.byte	'FC6',0,1
	.word	613
	.byte	1,1,2,35,2,11
	.byte	'FC7',0,1
	.word	613
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	613
	.byte	8,0,2,35,3,0,32
	.byte	'Ifx_SCU_FMR_Bits',0,4,197,4,3
	.word	46241
	.byte	10
	.byte	'_Ifx_SCU_ID_Bits',0,4,200,4,16,4,11
	.byte	'MODREV',0,1
	.word	613
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	613
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	630
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_ID_Bits',0,4,205,4,3
	.word	46577
	.byte	10
	.byte	'_Ifx_SCU_IGCR_Bits',0,4,208,4,16,4,11
	.byte	'IPEN00',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'IPEN01',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'IPEN02',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'IPEN03',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'IPEN04',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'IPEN05',0,1
	.word	613
	.byte	1,2,2,35,0,11
	.byte	'IPEN06',0,1
	.word	613
	.byte	1,1,2,35,0,11
	.byte	'IPEN07',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	613
	.byte	5,3,2,35,1,11
	.byte	'GEEN0',0,1
	.word	613
	.byte	1,2,2,35,1,11
	.byte	'IGP0',0,1
	.word	613
	.byte	2,0,2,35,1,11
	.byte	'IPEN10',0,1
	.word	613
	.byte	1,7,2,35,2,11
	.byte	'IPEN11',0,1
	.word	613
	.byte	1,6,2,35,2,11
	.byte	'IPEN12',0,1
	.word	613
	.byte	1,5,2,35,2,11
	.byte	'IPEN13',0,1
	.word	613
	.byte	1,4,2,35,2,11
	.byte	'IPEN14',0,1
	.word	613
	.byte	1,3,2,35,2,11
	.byte	'IPEN15',0,1
	.word	613
	.byte	1,2,2,35,2,11
	.byte	'IPEN16',0,1
	.word	613
	.byte	1,1,2,35,2,11
	.byte	'IPEN17',0,1
	.word	613
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	613
	.byte	5,3,2,35,3,11
	.byte	'GEEN1',0,1
	.word	613
	.byte	1,2,2,35,3,11
	.byte	'IGP1',0,1
	.word	613
	.byte	2,0,2,35,3,0,32
	.byte	'Ifx_SCU_IGCR_Bits',0,4,232,4,3
	.word	46684
	.byte	10
	.byte	'_Ifx_SCU_IN_Bits',0,4,235,4,16,4,11
	.byte	'P0',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	438
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_IN_Bits',0,4,240,4,3
	.word	47136
	.byte	10
	.byte	'_Ifx_SCU_IOCR_Bits',0,4,243,4,16,4,11
	.byte	'reserved_0',0,1
	.word	613
	.byte	4,4,2,35,0,11
	.byte	'PC0',0,1
	.word	613
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	613
	.byte	4,4,2,35,1,11
	.byte	'PC1',0,1
	.word	613
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	630
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_IOCR_Bits',0,4,250,4,3
	.word	47235
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,4,253,4,16,4,11
	.byte	'LBISTREQ',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'LBISTREQP',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'PATTERNS',0,2
	.word	630
	.byte	14,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	630
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,4,131,5,3
	.word	47385
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,4,134,5,16,4,11
	.byte	'SEED',0,4
	.word	438
	.byte	23,9,2,35,0,11
	.byte	'reserved_23',0,1
	.word	613
	.byte	1,0,2,35,2,11
	.byte	'SPLITSH',0,1
	.word	613
	.byte	3,5,2,35,3,11
	.byte	'BODY',0,1
	.word	613
	.byte	1,4,2,35,3,11
	.byte	'LBISTFREQU',0,1
	.word	613
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,4,141,5,3
	.word	47534
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,4,144,5,16,4,11
	.byte	'SIGNATURE',0,4
	.word	438
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	613
	.byte	7,1,2,35,3,11
	.byte	'LBISTDONE',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,4,149,5,3
	.word	47695
	.byte	10
	.byte	'_Ifx_SCU_LCLCON_Bits',0,4,152,5,16,4,11
	.byte	'reserved_0',0,2
	.word	630
	.byte	16,0,2,35,0,11
	.byte	'LS',0,1
	.word	613
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	630
	.byte	14,1,2,35,2,11
	.byte	'LSEN',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_LCLCON_Bits',0,4,158,5,3
	.word	47825
	.byte	10
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,4,161,5,16,4,11
	.byte	'LCLT0',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'LCLT1',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	438
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_LCLTEST_Bits',0,4,166,5,3
	.word	47957
	.byte	10
	.byte	'_Ifx_SCU_MANID_Bits',0,4,169,5,16,4,11
	.byte	'DEPT',0,1
	.word	613
	.byte	5,3,2,35,0,11
	.byte	'MANUF',0,2
	.word	630
	.byte	11,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	630
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_MANID_Bits',0,4,174,5,3
	.word	48072
	.byte	10
	.byte	'_Ifx_SCU_OMR_Bits',0,4,177,5,16,4,11
	.byte	'PS0',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	630
	.byte	14,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	613
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	613
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	630
	.byte	14,0,2,35,2,0,32
	.byte	'Ifx_SCU_OMR_Bits',0,4,185,5,3
	.word	48183
	.byte	10
	.byte	'_Ifx_SCU_OSCCON_Bits',0,4,188,5,16,4,11
	.byte	'reserved_0',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'PLLLV',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'OSCRES',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'GAINSEL',0,1
	.word	613
	.byte	2,3,2,35,0,11
	.byte	'MODE',0,1
	.word	613
	.byte	2,1,2,35,0,11
	.byte	'SHBY',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'PLLHV',0,1
	.word	613
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	613
	.byte	1,6,2,35,1,11
	.byte	'X1D',0,1
	.word	613
	.byte	1,5,2,35,1,11
	.byte	'X1DEN',0,1
	.word	613
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	613
	.byte	4,0,2,35,1,11
	.byte	'OSCVAL',0,1
	.word	613
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	613
	.byte	2,1,2,35,2,11
	.byte	'APREN',0,1
	.word	613
	.byte	1,0,2,35,2,11
	.byte	'CAP0EN',0,1
	.word	613
	.byte	1,7,2,35,3,11
	.byte	'CAP1EN',0,1
	.word	613
	.byte	1,6,2,35,3,11
	.byte	'CAP2EN',0,1
	.word	613
	.byte	1,5,2,35,3,11
	.byte	'CAP3EN',0,1
	.word	613
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	613
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_OSCCON_Bits',0,4,209,5,3
	.word	48341
	.byte	10
	.byte	'_Ifx_SCU_OUT_Bits',0,4,212,5,16,4,11
	.byte	'P0',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	438
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_OUT_Bits',0,4,217,5,3
	.word	48753
	.byte	10
	.byte	'_Ifx_SCU_OVCCON_Bits',0,4,220,5,16,4,11
	.byte	'CSEL0',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'CSEL1',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'CSEL2',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	630
	.byte	13,0,2,35,0,11
	.byte	'OVSTRT',0,1
	.word	613
	.byte	1,7,2,35,2,11
	.byte	'OVSTP',0,1
	.word	613
	.byte	1,6,2,35,2,11
	.byte	'DCINVAL',0,1
	.word	613
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	613
	.byte	5,0,2,35,2,11
	.byte	'OVCONF',0,1
	.word	613
	.byte	1,7,2,35,3,11
	.byte	'POVCONF',0,1
	.word	613
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	613
	.byte	6,0,2,35,3,0,32
	.byte	'Ifx_SCU_OVCCON_Bits',0,4,233,5,3
	.word	48854
	.byte	10
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,4,236,5,16,4,11
	.byte	'OVEN0',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'OVEN1',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'OVEN2',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	438
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,4,242,5,3
	.word	49121
	.byte	10
	.byte	'_Ifx_SCU_PDISC_Bits',0,4,245,5,16,4,11
	.byte	'PDIS0',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	438
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_PDISC_Bits',0,4,250,5,3
	.word	49257
	.byte	10
	.byte	'_Ifx_SCU_PDR_Bits',0,4,253,5,16,4,11
	.byte	'PD0',0,1
	.word	613
	.byte	3,5,2,35,0,11
	.byte	'PL0',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'PD1',0,1
	.word	613
	.byte	3,1,2,35,0,11
	.byte	'PL1',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	438
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_PDR_Bits',0,4,132,6,3
	.word	49368
	.byte	10
	.byte	'_Ifx_SCU_PDRR_Bits',0,4,135,6,16,4,11
	.byte	'PDR0',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'PDR1',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'PDR2',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'PDR3',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'PDR4',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'PDR5',0,1
	.word	613
	.byte	1,2,2,35,0,11
	.byte	'PDR6',0,1
	.word	613
	.byte	1,1,2,35,0,11
	.byte	'PDR7',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	438
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_PDRR_Bits',0,4,146,6,3
	.word	49501
	.byte	10
	.byte	'_Ifx_SCU_PLLCON0_Bits',0,4,149,6,16,4,11
	.byte	'VCOBYP',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'VCOPWD',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'MODEN',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'SETFINDIS',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'CLRFINDIS',0,1
	.word	613
	.byte	1,2,2,35,0,11
	.byte	'OSCDISCDIS',0,1
	.word	613
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	630
	.byte	2,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	613
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	613
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	613
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	613
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	613
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	613
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	613
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_PLLCON0_Bits',0,4,166,6,3
	.word	49704
	.byte	10
	.byte	'_Ifx_SCU_PLLCON1_Bits',0,4,169,6,16,4,11
	.byte	'K2DIV',0,1
	.word	613
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	613
	.byte	7,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	613
	.byte	1,0,2,35,1,11
	.byte	'K1DIV',0,1
	.word	613
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	630
	.byte	9,0,2,35,2,0,32
	.byte	'Ifx_SCU_PLLCON1_Bits',0,4,177,6,3
	.word	50060
	.byte	10
	.byte	'_Ifx_SCU_PLLCON2_Bits',0,4,180,6,16,4,11
	.byte	'MODCFG',0,2
	.word	630
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	630
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_PLLCON2_Bits',0,4,184,6,3
	.word	50238
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYCON0_Bits',0,4,187,6,16,4,11
	.byte	'VCOBYP',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'VCOPWD',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	613
	.byte	2,4,2,35,0,11
	.byte	'SETFINDIS',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'CLRFINDIS',0,1
	.word	613
	.byte	1,2,2,35,0,11
	.byte	'OSCDISCDIS',0,1
	.word	613
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	630
	.byte	2,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	613
	.byte	5,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	613
	.byte	2,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	613
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	613
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	613
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	613
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	613
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	613
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_PLLERAYCON0_Bits',0,4,204,6,3
	.word	50338
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYCON1_Bits',0,4,207,6,16,4,11
	.byte	'K2DIV',0,1
	.word	613
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	613
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	613
	.byte	4,0,2,35,1,11
	.byte	'K1DIV',0,1
	.word	613
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	630
	.byte	9,0,2,35,2,0,32
	.byte	'Ifx_SCU_PLLERAYCON1_Bits',0,4,215,6,3
	.word	50708
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYSTAT_Bits',0,4,218,6,16,4,11
	.byte	'VCOBYST',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'VCOLOCK',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'FINDIS',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'K1RDY',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	613
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	438
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_PLLERAYSTAT_Bits',0,4,227,6,3
	.word	50894
	.byte	10
	.byte	'_Ifx_SCU_PLLSTAT_Bits',0,4,230,6,16,4,11
	.byte	'VCOBYST',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'VCOLOCK',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'FINDIS',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'K1RDY',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	613
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	613
	.byte	1,1,2,35,0,11
	.byte	'MODRUN',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	438
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_PLLSTAT_Bits',0,4,241,6,3
	.word	51092
	.byte	10
	.byte	'_Ifx_SCU_PMCSR_Bits',0,4,244,6,16,4,11
	.byte	'REQSLP',0,1
	.word	613
	.byte	2,6,2,35,0,11
	.byte	'SMUSLP',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	613
	.byte	5,0,2,35,0,11
	.byte	'PMST',0,1
	.word	613
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	438
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR_Bits',0,4,251,6,3
	.word	51325
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR0_Bits',0,4,254,6,16,4,11
	.byte	'reserved_0',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'ESR1WKEN',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'PINAWKEN',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'PINBWKEN',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'ESR0DFEN',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'ESR0EDCON',0,1
	.word	613
	.byte	2,1,2,35,0,11
	.byte	'ESR1DFEN',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'ESR1EDCON',0,1
	.word	613
	.byte	2,6,2,35,1,11
	.byte	'PINADFEN',0,1
	.word	613
	.byte	1,5,2,35,1,11
	.byte	'PINAEDCON',0,1
	.word	613
	.byte	2,3,2,35,1,11
	.byte	'PINBDFEN',0,1
	.word	613
	.byte	1,2,2,35,1,11
	.byte	'PINBEDCON',0,1
	.word	613
	.byte	2,0,2,35,1,11
	.byte	'SCREN',0,1
	.word	613
	.byte	1,7,2,35,2,11
	.byte	'STBYRAMSEL',0,1
	.word	613
	.byte	2,5,2,35,2,11
	.byte	'SCRCLKSEL',0,1
	.word	613
	.byte	1,4,2,35,2,11
	.byte	'SCRWKEN',0,1
	.word	613
	.byte	1,3,2,35,2,11
	.byte	'TRISTEN',0,1
	.word	613
	.byte	1,2,2,35,2,11
	.byte	'TRISTREQ',0,1
	.word	613
	.byte	1,1,2,35,2,11
	.byte	'PORSTDF',0,1
	.word	613
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	613
	.byte	1,7,2,35,3,11
	.byte	'DCDCSYNC',0,1
	.word	613
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	613
	.byte	3,3,2,35,3,11
	.byte	'ESR0TRIST',0,1
	.word	613
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	613
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMSWCR0_Bits',0,4,153,7,3
	.word	51477
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,4,156,7,16,4,11
	.byte	'SCRSTEN',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'SCRSTREQ',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	613
	.byte	6,0,2,35,0,11
	.byte	'CPUIDLSEL',0,1
	.word	613
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	613
	.byte	1,4,2,35,1,11
	.byte	'IRADIS',0,1
	.word	613
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	613
	.byte	3,0,2,35,1,11
	.byte	'SCRCFG',0,1
	.word	613
	.byte	8,0,2,35,2,11
	.byte	'CPUSEL',0,1
	.word	613
	.byte	3,5,2,35,3,11
	.byte	'STBYEVEN',0,1
	.word	613
	.byte	1,4,2,35,3,11
	.byte	'STBYEV',0,1
	.word	613
	.byte	3,1,2,35,3,11
	.byte	'LCK',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,4,170,7,3
	.word	52044
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR2_Bits',0,4,173,7,16,4,11
	.byte	'SCRINT',0,1
	.word	613
	.byte	8,0,2,35,0,11
	.byte	'BUSY',0,1
	.word	613
	.byte	1,7,2,35,1,11
	.byte	'SCRECC',0,1
	.word	613
	.byte	1,6,2,35,1,11
	.byte	'SCRWDT',0,1
	.word	613
	.byte	1,5,2,35,1,11
	.byte	'SCRRST',0,1
	.word	613
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	613
	.byte	4,0,2,35,1,11
	.byte	'TCINT',0,1
	.word	613
	.byte	8,0,2,35,2,11
	.byte	'TCINTREQ',0,1
	.word	613
	.byte	1,7,2,35,3,11
	.byte	'SMURST',0,1
	.word	613
	.byte	1,6,2,35,3,11
	.byte	'RST',0,1
	.word	613
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	613
	.byte	4,1,2,35,3,11
	.byte	'LCK',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMSWCR2_Bits',0,4,187,7,3
	.word	52338
	.byte	10
	.byte	'_Ifx_SCU_PMSWSTAT_Bits',0,4,190,7,16,4,11
	.byte	'reserved_0',0,1
	.word	613
	.byte	2,6,2,35,0,11
	.byte	'ESR1WKP',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'ESR1OVRUN',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'PINAWKP',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'PINAOVRUN',0,1
	.word	613
	.byte	1,2,2,35,0,11
	.byte	'PINBWKP',0,1
	.word	613
	.byte	1,1,2,35,0,11
	.byte	'PINBOVRUN',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	613
	.byte	1,7,2,35,1,11
	.byte	'PORSTDF',0,1
	.word	613
	.byte	1,6,2,35,1,11
	.byte	'HWCFGEVR',0,1
	.word	613
	.byte	3,3,2,35,1,11
	.byte	'STBYRAM',0,1
	.word	613
	.byte	2,1,2,35,1,11
	.byte	'TRIST',0,1
	.word	613
	.byte	1,0,2,35,1,11
	.byte	'SCRST',0,1
	.word	613
	.byte	1,7,2,35,2,11
	.byte	'SCRWKP',0,1
	.word	613
	.byte	1,6,2,35,2,11
	.byte	'SCR',0,1
	.word	613
	.byte	1,5,2,35,2,11
	.byte	'SCRWKEN',0,1
	.word	613
	.byte	1,4,2,35,2,11
	.byte	'ESR1WKEN',0,1
	.word	613
	.byte	1,3,2,35,2,11
	.byte	'PINAWKEN',0,1
	.word	613
	.byte	1,2,2,35,2,11
	.byte	'PINBWKEN',0,1
	.word	613
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	630
	.byte	4,5,2,35,2,11
	.byte	'ESR0TRIST',0,1
	.word	613
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	613
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMSWSTAT_Bits',0,4,214,7,3
	.word	52616
	.byte	10
	.byte	'_Ifx_SCU_PMSWSTATCLR_Bits',0,4,217,7,16,4,11
	.byte	'reserved_0',0,1
	.word	613
	.byte	2,6,2,35,0,11
	.byte	'ESR1WKPCLR',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'ESR1OVRUNCLR',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'PINAWKPCLR',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'PINAOVRUNCLR',0,1
	.word	613
	.byte	1,2,2,35,0,11
	.byte	'PINBWKPCLR',0,1
	.word	613
	.byte	1,1,2,35,0,11
	.byte	'PINBOVRUNCLR',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	613
	.byte	8,0,2,35,1,11
	.byte	'SCRSTCLR',0,1
	.word	613
	.byte	1,7,2,35,2,11
	.byte	'SCRWKPCLR',0,1
	.word	613
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	630
	.byte	14,0,2,35,2,0,32
	.byte	'Ifx_SCU_PMSWSTATCLR_Bits',0,4,230,7,3
	.word	53112
	.byte	10
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,4,233,7,16,4,11
	.byte	'reserved_0',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'CLRC',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	630
	.byte	10,4,2,35,0,11
	.byte	'CSS0',0,1
	.word	613
	.byte	1,3,2,35,1,11
	.byte	'CSS1',0,1
	.word	613
	.byte	1,2,2,35,1,11
	.byte	'CSS2',0,1
	.word	613
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	613
	.byte	1,0,2,35,1,11
	.byte	'USRINFO',0,2
	.word	630
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_RSTCON2_Bits',0,4,243,7,3
	.word	53425
	.byte	10
	.byte	'_Ifx_SCU_RSTCON_Bits',0,4,246,7,16,4,11
	.byte	'ESR0',0,1
	.word	613
	.byte	2,6,2,35,0,11
	.byte	'ESR1',0,1
	.word	613
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	613
	.byte	2,2,2,35,0,11
	.byte	'SMU',0,1
	.word	613
	.byte	2,0,2,35,0,11
	.byte	'SW',0,1
	.word	613
	.byte	2,6,2,35,1,11
	.byte	'STM0',0,1
	.word	613
	.byte	2,4,2,35,1,11
	.byte	'STM1',0,1
	.word	613
	.byte	2,2,2,35,1,11
	.byte	'STM2',0,1
	.word	613
	.byte	2,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	630
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_RSTCON_Bits',0,4,129,8,3
	.word	53634
	.byte	10
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,4,132,8,16,4,11
	.byte	'ESR0',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'ESR1',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'SMU',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'SW',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'STM0',0,1
	.word	613
	.byte	1,2,2,35,0,11
	.byte	'STM1',0,1
	.word	613
	.byte	1,1,2,35,0,11
	.byte	'STM2',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	613
	.byte	8,0,2,35,1,11
	.byte	'PORST',0,1
	.word	613
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	613
	.byte	1,6,2,35,2,11
	.byte	'CB0',0,1
	.word	613
	.byte	1,5,2,35,2,11
	.byte	'CB1',0,1
	.word	613
	.byte	1,4,2,35,2,11
	.byte	'CB3',0,1
	.word	613
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	613
	.byte	2,1,2,35,2,11
	.byte	'EVR13',0,1
	.word	613
	.byte	1,0,2,35,2,11
	.byte	'EVR33',0,1
	.word	613
	.byte	1,7,2,35,3,11
	.byte	'SWD',0,1
	.word	613
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	613
	.byte	2,4,2,35,3,11
	.byte	'STBYR',0,1
	.word	613
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	613
	.byte	3,0,2,35,3,0,32
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,4,155,8,3
	.word	53845
	.byte	10
	.byte	'_Ifx_SCU_SAFECON_Bits',0,4,158,8,16,4,11
	.byte	'HBT',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	438
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_SCU_SAFECON_Bits',0,4,162,8,3
	.word	54277
	.byte	10
	.byte	'_Ifx_SCU_STSTAT_Bits',0,4,165,8,16,4,11
	.byte	'HWCFG',0,1
	.word	613
	.byte	8,0,2,35,0,11
	.byte	'FTM',0,1
	.word	613
	.byte	7,1,2,35,1,11
	.byte	'MODE',0,1
	.word	613
	.byte	1,0,2,35,1,11
	.byte	'FCBAE',0,1
	.word	613
	.byte	1,7,2,35,2,11
	.byte	'LUDIS',0,1
	.word	613
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	613
	.byte	1,5,2,35,2,11
	.byte	'TRSTL',0,1
	.word	613
	.byte	1,4,2,35,2,11
	.byte	'SPDEN',0,1
	.word	613
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	613
	.byte	3,0,2,35,2,11
	.byte	'RAMINT',0,1
	.word	613
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	613
	.byte	7,0,2,35,3,0,32
	.byte	'Ifx_SCU_STSTAT_Bits',0,4,178,8,3
	.word	54373
	.byte	10
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,4,181,8,16,4,11
	.byte	'reserved_0',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'SWRSTREQ',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	438
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,4,186,8,3
	.word	54633
	.byte	10
	.byte	'_Ifx_SCU_SYSCON_Bits',0,4,189,8,16,4,11
	.byte	'CCTRIG0',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'RAMINTM',0,1
	.word	613
	.byte	2,4,2,35,0,11
	.byte	'SETLUDIS',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	613
	.byte	3,0,2,35,0,11
	.byte	'DATM',0,1
	.word	613
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,4
	.word	438
	.byte	23,0,2,35,0,0,32
	.byte	'Ifx_SCU_SYSCON_Bits',0,4,198,8,3
	.word	54758
	.byte	10
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,4,201,8,16,4,11
	.byte	'ESR0T',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	438
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,4,208,8,3
	.word	54955
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS_Bits',0,4,211,8,16,4,11
	.byte	'ESR0T',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	438
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPDIS_Bits',0,4,218,8,3
	.word	55108
	.byte	10
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,4,221,8,16,4,11
	.byte	'ESR0T',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	438
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSET_Bits',0,4,228,8,3
	.word	55261
	.byte	10
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,4,231,8,16,4,11
	.byte	'ESR0T',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	438
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,4,238,8,3
	.word	55414
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,4,247,8,3
	.word	477
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,4,134,9,3
	.word	652
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,4,150,9,3
	.word	896
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,4,153,9,16,4,11
	.byte	'ENDINIT',0,4
	.word	461
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	461
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	461
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	461
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,4,159,9,3
	.word	55669
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,4,162,9,16,4,11
	.byte	'CLRIRF',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	613
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	613
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	613
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	613
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	630
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,4,175,9,3
	.word	55795
	.byte	10
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,4,178,9,16,4,11
	.byte	'AE',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	613
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	613
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	613
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	613
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	630
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,4,191,9,3
	.word	56047
	.byte	12,4,199,9,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38079
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN0',0,4,204,9,3
	.word	56266
	.byte	12,4,207,9,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38636
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN1',0,4,212,9,3
	.word	56330
	.byte	12,4,215,9,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38713
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ARSTDIS',0,4,220,9,3
	.word	56394
	.byte	12,4,223,9,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38849
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON0',0,4,228,9,3
	.word	56459
	.byte	12,4,231,9,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39129
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON1',0,4,236,9,3
	.word	56524
	.byte	12,4,239,9,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39367
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON2',0,4,244,9,3
	.word	56589
	.byte	12,4,247,9,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39495
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON3',0,4,252,9,3
	.word	56654
	.byte	12,4,255,9,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39738
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON4',0,4,132,10,3
	.word	56719
	.byte	12,4,135,10,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39973
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON5',0,4,140,10,3
	.word	56784
	.byte	12,4,143,10,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40101
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON6',0,4,148,10,3
	.word	56849
	.byte	12,4,151,10,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40201
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON7',0,4,156,10,3
	.word	56914
	.byte	12,4,159,10,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40301
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CHIPID',0,4,164,10,3
	.word	56979
	.byte	12,4,167,10,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40509
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_DTSCON',0,4,172,10,3
	.word	57043
	.byte	12,4,175,10,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40674
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_DTSLIM',0,4,180,10,3
	.word	57107
	.byte	12,4,183,10,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40857
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_DTSSTAT',0,4,188,10,3
	.word	57171
	.byte	12,4,191,10,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41011
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EICR',0,4,196,10,3
	.word	57236
	.byte	12,4,199,10,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41375
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EIFR',0,4,204,10,3
	.word	57298
	.byte	12,4,207,10,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41586
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EMSR',0,4,212,10,3
	.word	57360
	.byte	12,4,215,10,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41838
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ESRCFG',0,4,220,10,3
	.word	57422
	.byte	12,4,223,10,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41956
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ESROCFG',0,4,228,10,3
	.word	57486
	.byte	12,4,231,10,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42067
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVR13CON',0,4,236,10,3
	.word	57551
	.byte	12,4,239,10,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42230
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVR33CON',0,4,244,10,3
	.word	57617
	.byte	12,4,247,10,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42393
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRADCSTAT',0,4,252,10,3
	.word	57683
	.byte	12,4,255,10,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42551
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRDVSTAT',0,4,132,11,3
	.word	57751
	.byte	12,4,135,11,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42716
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRMONCTRL',0,4,140,11,3
	.word	57818
	.byte	12,4,143,11,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43045
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVROSCCTRL',0,4,148,11,3
	.word	57886
	.byte	12,4,151,11,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43266
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVROVMON',0,4,156,11,3
	.word	57954
	.byte	12,4,159,11,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43429
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRRSTCON',0,4,164,11,3
	.word	58020
	.byte	12,4,167,11,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43701
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF1',0,4,172,11,3
	.word	58087
	.byte	12,4,175,11,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43854
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF2',0,4,180,11,3
	.word	58156
	.byte	12,4,183,11,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44010
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF3',0,4,188,11,3
	.word	58225
	.byte	12,4,191,11,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44172
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF4',0,4,196,11,3
	.word	58294
	.byte	12,4,199,11,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44315
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF5',0,4,204,11,3
	.word	58363
	.byte	12,4,207,11,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44480
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF6',0,4,212,11,3
	.word	58432
	.byte	12,4,215,11,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44625
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCTRL1',0,4,220,11,3
	.word	58501
	.byte	12,4,223,11,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44806
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCTRL2',0,4,228,11,3
	.word	58569
	.byte	12,4,231,11,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44980
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCTRL3',0,4,236,11,3
	.word	58637
	.byte	12,4,239,11,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45140
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCTRL4',0,4,244,11,3
	.word	58705
	.byte	12,4,247,11,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45284
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSTAT',0,4,252,11,3
	.word	58773
	.byte	12,4,255,11,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45558
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRTRIM',0,4,132,12,3
	.word	58838
	.byte	12,4,135,12,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45697
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRUVMON',0,4,140,12,3
	.word	58903
	.byte	12,4,143,12,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45860
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EXTCON',0,4,148,12,3
	.word	58969
	.byte	12,4,151,12,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46078
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_FDR',0,4,156,12,3
	.word	59033
	.byte	12,4,159,12,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46241
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_FMR',0,4,164,12,3
	.word	59094
	.byte	12,4,167,12,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46577
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ID',0,4,172,12,3
	.word	59155
	.byte	12,4,175,12,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46684
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_IGCR',0,4,180,12,3
	.word	59215
	.byte	12,4,183,12,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47136
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_IN',0,4,188,12,3
	.word	59277
	.byte	12,4,191,12,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47235
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_IOCR',0,4,196,12,3
	.word	59337
	.byte	12,4,199,12,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47385
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL0',0,4,204,12,3
	.word	59399
	.byte	12,4,207,12,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47534
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL1',0,4,212,12,3
	.word	59467
	.byte	12,4,215,12,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47695
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL2',0,4,220,12,3
	.word	59535
	.byte	12,4,223,12,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47825
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LCLCON',0,4,228,12,3
	.word	59603
	.byte	12,4,231,12,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47957
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LCLTEST',0,4,236,12,3
	.word	59667
	.byte	12,4,239,12,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48072
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_MANID',0,4,244,12,3
	.word	59732
	.byte	12,4,247,12,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48183
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OMR',0,4,252,12,3
	.word	59795
	.byte	12,4,255,12,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48341
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OSCCON',0,4,132,13,3
	.word	59856
	.byte	12,4,135,13,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48753
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OUT',0,4,140,13,3
	.word	59920
	.byte	12,4,143,13,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48854
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OVCCON',0,4,148,13,3
	.word	59981
	.byte	12,4,151,13,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49121
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OVCENABLE',0,4,156,13,3
	.word	60045
	.byte	12,4,159,13,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49257
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PDISC',0,4,164,13,3
	.word	60112
	.byte	12,4,167,13,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49368
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PDR',0,4,172,13,3
	.word	60175
	.byte	12,4,175,13,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49501
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PDRR',0,4,180,13,3
	.word	60236
	.byte	12,4,183,13,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49704
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLCON0',0,4,188,13,3
	.word	60298
	.byte	12,4,191,13,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50060
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLCON1',0,4,196,13,3
	.word	60363
	.byte	12,4,199,13,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50238
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLCON2',0,4,204,13,3
	.word	60428
	.byte	12,4,207,13,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50338
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLERAYCON0',0,4,212,13,3
	.word	60493
	.byte	12,4,215,13,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50708
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLERAYCON1',0,4,220,13,3
	.word	60562
	.byte	12,4,223,13,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50894
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLERAYSTAT',0,4,228,13,3
	.word	60631
	.byte	12,4,231,13,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51092
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLSTAT',0,4,236,13,3
	.word	60700
	.byte	12,4,239,13,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51325
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR',0,4,244,13,3
	.word	60765
	.byte	12,4,247,13,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51477
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWCR0',0,4,252,13,3
	.word	60828
	.byte	12,4,255,13,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52044
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWCR1',0,4,132,14,3
	.word	60893
	.byte	12,4,135,14,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52338
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWCR2',0,4,140,14,3
	.word	60958
	.byte	12,4,143,14,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52616
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWSTAT',0,4,148,14,3
	.word	61023
	.byte	12,4,151,14,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53112
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWSTATCLR',0,4,156,14,3
	.word	61089
	.byte	12,4,159,14,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53634
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_RSTCON',0,4,164,14,3
	.word	61158
	.byte	12,4,167,14,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53425
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_RSTCON2',0,4,172,14,3
	.word	61222
	.byte	12,4,175,14,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53845
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_RSTSTAT',0,4,180,14,3
	.word	61287
	.byte	12,4,183,14,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54277
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SAFECON',0,4,188,14,3
	.word	61352
	.byte	12,4,191,14,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54373
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STSTAT',0,4,196,14,3
	.word	61417
	.byte	12,4,199,14,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54633
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SWRSTCON',0,4,204,14,3
	.word	61481
	.byte	12,4,207,14,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54758
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SYSCON',0,4,212,14,3
	.word	61547
	.byte	12,4,215,14,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54955
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPCLR',0,4,220,14,3
	.word	61611
	.byte	12,4,223,14,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55108
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPDIS',0,4,228,14,3
	.word	61676
	.byte	12,4,231,14,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55261
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSET',0,4,236,14,3
	.word	61741
	.byte	12,4,239,14,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55414
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSTAT',0,4,244,14,3
	.word	61806
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON0',0,4,252,14,3
	.word	573
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON1',0,4,132,15,3
	.word	856
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_SR',0,4,140,15,3
	.word	1087
	.byte	12,4,143,15,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55669
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_CON0',0,4,148,15,3
	.word	61957
	.byte	12,4,151,15,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55795
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_CON1',0,4,156,15,3
	.word	62024
	.byte	12,4,159,15,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56047
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_SR',0,4,164,15,3
	.word	62091
	.byte	14
	.word	1127
	.byte	32
	.byte	'Ifx_SCU_WDTCPU',0,4,180,15,3
	.word	62156
	.byte	10
	.byte	'_Ifx_SCU_WDTS',0,4,183,15,25,12,13
	.byte	'CON0',0
	.word	61957
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	62024
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	62091
	.byte	4,2,35,8,0,14
	.word	62185
	.byte	32
	.byte	'Ifx_SCU_WDTS',0,4,188,15,3
	.word	62246
	.byte	15,8
	.word	57422
	.byte	16,1,0,15,20
	.word	613
	.byte	16,19,0,15,8
	.word	60765
	.byte	16,1,0,14
	.word	62185
	.byte	15,24
	.word	1127
	.byte	16,1,0,14
	.word	62305
	.byte	15,16
	.word	57236
	.byte	16,3,0,15,16
	.word	59215
	.byte	16,3,0,15,180,3
	.word	613
	.byte	16,179,3,0,10
	.byte	'_Ifx_SCU',0,4,201,15,25,128,8,13
	.byte	'reserved_0',0
	.word	4250
	.byte	8,2,35,0,13
	.byte	'ID',0
	.word	59155
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2431
	.byte	4,2,35,12,13
	.byte	'OSCCON',0
	.word	59856
	.byte	4,2,35,16,13
	.byte	'PLLSTAT',0
	.word	60700
	.byte	4,2,35,20,13
	.byte	'PLLCON0',0
	.word	60298
	.byte	4,2,35,24,13
	.byte	'PLLCON1',0
	.word	60363
	.byte	4,2,35,28,13
	.byte	'PLLCON2',0
	.word	60428
	.byte	4,2,35,32,13
	.byte	'PLLERAYSTAT',0
	.word	60631
	.byte	4,2,35,36,13
	.byte	'PLLERAYCON0',0
	.word	60493
	.byte	4,2,35,40,13
	.byte	'PLLERAYCON1',0
	.word	60562
	.byte	4,2,35,44,13
	.byte	'CCUCON0',0
	.word	56459
	.byte	4,2,35,48,13
	.byte	'CCUCON1',0
	.word	56524
	.byte	4,2,35,52,13
	.byte	'FDR',0
	.word	59033
	.byte	4,2,35,56,13
	.byte	'EXTCON',0
	.word	58969
	.byte	4,2,35,60,13
	.byte	'CCUCON2',0
	.word	56589
	.byte	4,2,35,64,13
	.byte	'CCUCON3',0
	.word	56654
	.byte	4,2,35,68,13
	.byte	'CCUCON4',0
	.word	56719
	.byte	4,2,35,72,13
	.byte	'CCUCON5',0
	.word	56784
	.byte	4,2,35,76,13
	.byte	'RSTSTAT',0
	.word	61287
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	2431
	.byte	4,2,35,84,13
	.byte	'RSTCON',0
	.word	61158
	.byte	4,2,35,88,13
	.byte	'ARSTDIS',0
	.word	56394
	.byte	4,2,35,92,13
	.byte	'SWRSTCON',0
	.word	61481
	.byte	4,2,35,96,13
	.byte	'RSTCON2',0
	.word	61222
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	2431
	.byte	4,2,35,104,13
	.byte	'EVRRSTCON',0
	.word	58020
	.byte	4,2,35,108,13
	.byte	'ESRCFG',0
	.word	62273
	.byte	8,2,35,112,13
	.byte	'ESROCFG',0
	.word	57486
	.byte	4,2,35,120,13
	.byte	'SYSCON',0
	.word	61547
	.byte	4,2,35,124,13
	.byte	'CCUCON6',0
	.word	56849
	.byte	4,3,35,128,1,13
	.byte	'CCUCON7',0
	.word	56914
	.byte	4,3,35,132,1,13
	.byte	'reserved_88',0
	.word	62282
	.byte	20,3,35,136,1,13
	.byte	'PDR',0
	.word	60175
	.byte	4,3,35,156,1,13
	.byte	'IOCR',0
	.word	59337
	.byte	4,3,35,160,1,13
	.byte	'OUT',0
	.word	59920
	.byte	4,3,35,164,1,13
	.byte	'OMR',0
	.word	59795
	.byte	4,3,35,168,1,13
	.byte	'IN',0
	.word	59277
	.byte	4,3,35,172,1,13
	.byte	'EVRSTAT',0
	.word	58773
	.byte	4,3,35,176,1,13
	.byte	'EVRDVSTAT',0
	.word	57751
	.byte	4,3,35,180,1,13
	.byte	'EVR13CON',0
	.word	57551
	.byte	4,3,35,184,1,13
	.byte	'EVR33CON',0
	.word	57617
	.byte	4,3,35,188,1,13
	.byte	'STSTAT',0
	.word	61417
	.byte	4,3,35,192,1,13
	.byte	'reserved_C4',0
	.word	2431
	.byte	4,3,35,196,1,13
	.byte	'PMSWCR0',0
	.word	60828
	.byte	4,3,35,200,1,13
	.byte	'PMSWSTAT',0
	.word	61023
	.byte	4,3,35,204,1,13
	.byte	'PMSWSTATCLR',0
	.word	61089
	.byte	4,3,35,208,1,13
	.byte	'PMCSR',0
	.word	62291
	.byte	8,3,35,212,1,13
	.byte	'reserved_DC',0
	.word	2431
	.byte	4,3,35,220,1,13
	.byte	'DTSSTAT',0
	.word	57171
	.byte	4,3,35,224,1,13
	.byte	'DTSCON',0
	.word	57043
	.byte	4,3,35,228,1,13
	.byte	'PMSWCR1',0
	.word	60893
	.byte	4,3,35,232,1,13
	.byte	'PMSWCR2',0
	.word	60958
	.byte	4,3,35,236,1,13
	.byte	'WDTS',0
	.word	62300
	.byte	12,3,35,240,1,13
	.byte	'EMSR',0
	.word	57360
	.byte	4,3,35,252,1,13
	.byte	'WDTCPU',0
	.word	62314
	.byte	24,3,35,128,2,13
	.byte	'reserved_118',0
	.word	4590
	.byte	12,3,35,152,2,13
	.byte	'TRAPSTAT',0
	.word	61806
	.byte	4,3,35,164,2,13
	.byte	'TRAPSET',0
	.word	61741
	.byte	4,3,35,168,2,13
	.byte	'TRAPCLR',0
	.word	61611
	.byte	4,3,35,172,2,13
	.byte	'TRAPDIS',0
	.word	61676
	.byte	4,3,35,176,2,13
	.byte	'reserved_134',0
	.word	2431
	.byte	4,3,35,180,2,13
	.byte	'LCLCON1',0
	.word	59603
	.byte	4,3,35,184,2,13
	.byte	'LCLTEST',0
	.word	59667
	.byte	4,3,35,188,2,13
	.byte	'CHIPID',0
	.word	56979
	.byte	4,3,35,192,2,13
	.byte	'MANID',0
	.word	59732
	.byte	4,3,35,196,2,13
	.byte	'reserved_148',0
	.word	4250
	.byte	8,3,35,200,2,13
	.byte	'SAFECON',0
	.word	61352
	.byte	4,3,35,208,2,13
	.byte	'reserved_154',0
	.word	29871
	.byte	16,3,35,212,2,13
	.byte	'LBISTCTRL0',0
	.word	59399
	.byte	4,3,35,228,2,13
	.byte	'LBISTCTRL1',0
	.word	59467
	.byte	4,3,35,232,2,13
	.byte	'LBISTCTRL2',0
	.word	59535
	.byte	4,3,35,236,2,13
	.byte	'reserved_170',0
	.word	29851
	.byte	28,3,35,240,2,13
	.byte	'PDISC',0
	.word	60112
	.byte	4,3,35,140,3,13
	.byte	'reserved_190',0
	.word	4250
	.byte	8,3,35,144,3,13
	.byte	'EVRTRIM',0
	.word	58838
	.byte	4,3,35,152,3,13
	.byte	'EVRADCSTAT',0
	.word	57683
	.byte	4,3,35,156,3,13
	.byte	'EVRUVMON',0
	.word	58903
	.byte	4,3,35,160,3,13
	.byte	'EVROVMON',0
	.word	57954
	.byte	4,3,35,164,3,13
	.byte	'EVRMONCTRL',0
	.word	57818
	.byte	4,3,35,168,3,13
	.byte	'reserved_1AC',0
	.word	2431
	.byte	4,3,35,172,3,13
	.byte	'EVRSDCTRL1',0
	.word	58501
	.byte	4,3,35,176,3,13
	.byte	'EVRSDCTRL2',0
	.word	58569
	.byte	4,3,35,180,3,13
	.byte	'EVRSDCTRL3',0
	.word	58637
	.byte	4,3,35,184,3,13
	.byte	'EVRSDCTRL4',0
	.word	58705
	.byte	4,3,35,188,3,13
	.byte	'EVRSDCOEFF1',0
	.word	58087
	.byte	4,3,35,192,3,13
	.byte	'EVRSDCOEFF2',0
	.word	58156
	.byte	4,3,35,196,3,13
	.byte	'EVRSDCOEFF3',0
	.word	58225
	.byte	4,3,35,200,3,13
	.byte	'EVRSDCOEFF4',0
	.word	58294
	.byte	4,3,35,204,3,13
	.byte	'EVRSDCOEFF5',0
	.word	58363
	.byte	4,3,35,208,3,13
	.byte	'EVRSDCOEFF6',0
	.word	58432
	.byte	4,3,35,212,3,13
	.byte	'EVROSCCTRL',0
	.word	57886
	.byte	4,3,35,216,3,13
	.byte	'reserved_1DC',0
	.word	2431
	.byte	4,3,35,220,3,13
	.byte	'OVCENABLE',0
	.word	60045
	.byte	4,3,35,224,3,13
	.byte	'OVCCON',0
	.word	59981
	.byte	4,3,35,228,3,13
	.byte	'reserved_1E8',0
	.word	32724
	.byte	40,3,35,232,3,13
	.byte	'EICR',0
	.word	62319
	.byte	16,3,35,144,4,13
	.byte	'EIFR',0
	.word	57298
	.byte	4,3,35,160,4,13
	.byte	'FMR',0
	.word	59094
	.byte	4,3,35,164,4,13
	.byte	'PDRR',0
	.word	60236
	.byte	4,3,35,168,4,13
	.byte	'IGCR',0
	.word	62328
	.byte	16,3,35,172,4,13
	.byte	'reserved_23C',0
	.word	2431
	.byte	4,3,35,188,4,13
	.byte	'DTSLIM',0
	.word	57107
	.byte	4,3,35,192,4,13
	.byte	'reserved_244',0
	.word	62337
	.byte	180,3,3,35,196,4,13
	.byte	'ACCEN1',0
	.word	56330
	.byte	4,3,35,248,7,13
	.byte	'ACCEN0',0
	.word	56266
	.byte	4,3,35,252,7,0,14
	.word	62348
	.byte	32
	.byte	'Ifx_SCU',0,4,181,16,3
	.word	64338
	.byte	32
	.byte	'Ifx_STM_ACCEN0_Bits',0,13,79,3
	.word	12775
	.byte	32
	.byte	'Ifx_STM_ACCEN1_Bits',0,13,85,3
	.word	12686
	.byte	32
	.byte	'Ifx_STM_CAP_Bits',0,13,91,3
	.word	11216
	.byte	32
	.byte	'Ifx_STM_CAPSV_Bits',0,13,97,3
	.word	12093
	.byte	32
	.byte	'Ifx_STM_CLC_Bits',0,13,107,3
	.word	10339
	.byte	32
	.byte	'Ifx_STM_CMCON_Bits',0,13,120,3
	.word	11394
	.byte	32
	.byte	'Ifx_STM_CMP_Bits',0,13,126,3
	.word	11303
	.byte	32
	.byte	'Ifx_STM_ICR_Bits',0,13,139,1,3
	.word	11625
	.byte	32
	.byte	'Ifx_STM_ID_Bits',0,13,147,1,3
	.word	10495
	.byte	32
	.byte	'Ifx_STM_ISCR_Bits',0,13,157,1,3
	.word	11842
	.byte	32
	.byte	'Ifx_STM_KRST0_Bits',0,13,165,1,3
	.word	12563
	.byte	32
	.byte	'Ifx_STM_KRST1_Bits',0,13,172,1,3
	.word	12459
	.byte	32
	.byte	'Ifx_STM_KRSTCLR_Bits',0,13,179,1,3
	.word	12353
	.byte	32
	.byte	'Ifx_STM_OCS_Bits',0,13,189,1,3
	.word	12193
	.byte	32
	.byte	'Ifx_STM_TIM0_Bits',0,13,195,1,3
	.word	10617
	.byte	32
	.byte	'Ifx_STM_TIM0SV_Bits',0,13,201,1,3
	.word	12006
	.byte	32
	.byte	'Ifx_STM_TIM1_Bits',0,13,207,1,3
	.word	10702
	.byte	32
	.byte	'Ifx_STM_TIM2_Bits',0,13,213,1,3
	.word	10787
	.byte	32
	.byte	'Ifx_STM_TIM3_Bits',0,13,219,1,3
	.word	10872
	.byte	32
	.byte	'Ifx_STM_TIM4_Bits',0,13,225,1,3
	.word	10958
	.byte	32
	.byte	'Ifx_STM_TIM5_Bits',0,13,231,1,3
	.word	11044
	.byte	32
	.byte	'Ifx_STM_TIM6_Bits',0,13,237,1,3
	.word	11130
	.byte	32
	.byte	'Ifx_STM_ACCEN0',0,13,250,1,3
	.word	13304
	.byte	32
	.byte	'Ifx_STM_ACCEN1',0,13,130,2,3
	.word	12735
	.byte	32
	.byte	'Ifx_STM_CAP',0,13,138,2,3
	.word	11263
	.byte	32
	.byte	'Ifx_STM_CAPSV',0,13,146,2,3
	.word	12142
	.byte	32
	.byte	'Ifx_STM_CLC',0,13,154,2,3
	.word	10455
	.byte	32
	.byte	'Ifx_STM_CMCON',0,13,162,2,3
	.word	11585
	.byte	32
	.byte	'Ifx_STM_CMP',0,13,170,2,3
	.word	11345
	.byte	32
	.byte	'Ifx_STM_ICR',0,13,178,2,3
	.word	11802
	.byte	32
	.byte	'Ifx_STM_ID',0,13,186,2,3
	.word	10577
	.byte	32
	.byte	'Ifx_STM_ISCR',0,13,194,2,3
	.word	11966
	.byte	32
	.byte	'Ifx_STM_KRST0',0,13,202,2,3
	.word	12646
	.byte	32
	.byte	'Ifx_STM_KRST1',0,13,210,2,3
	.word	12523
	.byte	32
	.byte	'Ifx_STM_KRSTCLR',0,13,218,2,3
	.word	12419
	.byte	32
	.byte	'Ifx_STM_OCS',0,13,226,2,3
	.word	12313
	.byte	32
	.byte	'Ifx_STM_TIM0',0,13,234,2,3
	.word	10662
	.byte	32
	.byte	'Ifx_STM_TIM0SV',0,13,242,2,3
	.word	12053
	.byte	32
	.byte	'Ifx_STM_TIM1',0,13,250,2,3
	.word	10747
	.byte	32
	.byte	'Ifx_STM_TIM2',0,13,130,3,3
	.word	10832
	.byte	32
	.byte	'Ifx_STM_TIM3',0,13,138,3,3
	.word	10918
	.byte	32
	.byte	'Ifx_STM_TIM4',0,13,146,3,3
	.word	11004
	.byte	32
	.byte	'Ifx_STM_TIM5',0,13,154,3,3
	.word	11090
	.byte	32
	.byte	'Ifx_STM_TIM6',0,13,162,3,3
	.word	11176
	.byte	14
	.word	13344
	.byte	32
	.byte	'Ifx_STM',0,13,201,3,3
	.word	65443
	.byte	17,20,240,10,9,1,18
	.byte	'IfxScu_CCUCON0_CLKSEL_fBack',0,0,18
	.byte	'IfxScu_CCUCON0_CLKSEL_fPll',0,1,0,32
	.byte	'IfxScu_CCUCON0_CLKSEL',0,20,244,10,3
	.word	65465
	.byte	17,20,254,10,9,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,18
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,32
	.byte	'IfxScu_WDTCON1_IR',0,20,131,11,3
	.word	65562
	.byte	10
	.byte	'_Ifx_FLASH_ACCEN0_Bits',0,21,45,16,4,11
	.byte	'EN0',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	613
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	613
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	613
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	613
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	613
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	613
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	613
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	613
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	613
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	613
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	613
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	613
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	613
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	613
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	613
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	613
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	613
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	613
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	613
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	613
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	613
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	613
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	613
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	613
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	613
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_ACCEN0_Bits',0,21,79,3
	.word	65684
	.byte	10
	.byte	'_Ifx_FLASH_ACCEN1_Bits',0,21,82,16,4,11
	.byte	'reserved_0',0,4
	.word	438
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_FLASH_ACCEN1_Bits',0,21,85,3
	.word	66245
	.byte	10
	.byte	'_Ifx_FLASH_CBAB_CFG_Bits',0,21,88,16,4,11
	.byte	'SEL',0,1
	.word	613
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	613
	.byte	2,0,2,35,0,11
	.byte	'CLR',0,1
	.word	613
	.byte	1,7,2,35,1,11
	.byte	'DIS',0,1
	.word	613
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	438
	.byte	22,0,2,35,0,0,32
	.byte	'Ifx_FLASH_CBAB_CFG_Bits',0,21,95,3
	.word	66326
	.byte	10
	.byte	'_Ifx_FLASH_CBAB_STAT_Bits',0,21,98,16,4,11
	.byte	'VLD0',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'VLD1',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'VLD2',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'VLD3',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'VLD4',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'VLD5',0,1
	.word	613
	.byte	1,2,2,35,0,11
	.byte	'VLD6',0,1
	.word	613
	.byte	1,1,2,35,0,11
	.byte	'VLD7',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'VLD8',0,1
	.word	613
	.byte	1,7,2,35,1,11
	.byte	'VLD9',0,1
	.word	613
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	438
	.byte	22,0,2,35,0,0,32
	.byte	'Ifx_FLASH_CBAB_STAT_Bits',0,21,111,3
	.word	66479
	.byte	10
	.byte	'_Ifx_FLASH_CBAB_TOP_Bits',0,21,114,16,4,11
	.byte	'reserved_0',0,1
	.word	613
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	438
	.byte	19,8,2,35,0,11
	.byte	'ERR',0,1
	.word	613
	.byte	6,2,2,35,3,11
	.byte	'VLD',0,1
	.word	613
	.byte	1,1,2,35,3,11
	.byte	'CLR',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_CBAB_TOP_Bits',0,21,121,3
	.word	66727
	.byte	10
	.byte	'_Ifx_FLASH_COMM0_Bits',0,21,124,16,4,11
	.byte	'STATUS',0,1
	.word	613
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	438
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_FLASH_COMM0_Bits',0,21,128,1,3
	.word	66873
	.byte	10
	.byte	'_Ifx_FLASH_COMM1_Bits',0,21,131,1,16,4,11
	.byte	'STATUS',0,1
	.word	613
	.byte	8,0,2,35,0,11
	.byte	'DATA',0,1
	.word	613
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	630
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_COMM1_Bits',0,21,136,1,3
	.word	66971
	.byte	10
	.byte	'_Ifx_FLASH_COMM2_Bits',0,21,139,1,16,4,11
	.byte	'STATUS',0,1
	.word	613
	.byte	8,0,2,35,0,11
	.byte	'DATA',0,1
	.word	613
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	630
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_COMM2_Bits',0,21,144,1,3
	.word	67087
	.byte	10
	.byte	'_Ifx_FLASH_ECCRD_Bits',0,21,147,1,16,4,11
	.byte	'RCODE',0,4
	.word	438
	.byte	22,10,2,35,0,11
	.byte	'reserved_22',0,2
	.word	630
	.byte	8,2,2,35,2,11
	.byte	'EDCERRINJ',0,1
	.word	613
	.byte	1,1,2,35,3,11
	.byte	'ECCORDIS',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_ECCRD_Bits',0,21,153,1,3
	.word	67203
	.byte	10
	.byte	'_Ifx_FLASH_ECCRP_Bits',0,21,156,1,16,4,11
	.byte	'RCODE',0,4
	.word	438
	.byte	22,10,2,35,0,11
	.byte	'reserved_22',0,2
	.word	630
	.byte	8,2,2,35,2,11
	.byte	'EDCERRINJ',0,1
	.word	613
	.byte	1,1,2,35,3,11
	.byte	'ECCORDIS',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_ECCRP_Bits',0,21,162,1,3
	.word	67343
	.byte	10
	.byte	'_Ifx_FLASH_ECCW_Bits',0,21,165,1,16,4,11
	.byte	'WCODE',0,4
	.word	438
	.byte	22,10,2,35,0,11
	.byte	'reserved_22',0,2
	.word	630
	.byte	8,2,2,35,2,11
	.byte	'DECENCDIS',0,1
	.word	613
	.byte	1,1,2,35,3,11
	.byte	'PECENCDIS',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_ECCW_Bits',0,21,171,1,3
	.word	67483
	.byte	10
	.byte	'_Ifx_FLASH_FCON_Bits',0,21,174,1,16,4,11
	.byte	'WSPFLASH',0,1
	.word	613
	.byte	4,4,2,35,0,11
	.byte	'WSECPF',0,1
	.word	613
	.byte	2,2,2,35,0,11
	.byte	'WSDFLASH',0,2
	.word	630
	.byte	6,4,2,35,0,11
	.byte	'WSECDF',0,1
	.word	613
	.byte	3,1,2,35,1,11
	.byte	'IDLE',0,1
	.word	613
	.byte	1,0,2,35,1,11
	.byte	'ESLDIS',0,1
	.word	613
	.byte	1,7,2,35,2,11
	.byte	'SLEEP',0,1
	.word	613
	.byte	1,6,2,35,2,11
	.byte	'NSAFECC',0,1
	.word	613
	.byte	1,5,2,35,2,11
	.byte	'STALL',0,1
	.word	613
	.byte	1,4,2,35,2,11
	.byte	'RES21',0,1
	.word	613
	.byte	2,2,2,35,2,11
	.byte	'RES23',0,1
	.word	613
	.byte	2,0,2,35,2,11
	.byte	'VOPERM',0,1
	.word	613
	.byte	1,7,2,35,3,11
	.byte	'SQERM',0,1
	.word	613
	.byte	1,6,2,35,3,11
	.byte	'PROERM',0,1
	.word	613
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	613
	.byte	3,2,2,35,3,11
	.byte	'PR5V',0,1
	.word	613
	.byte	1,1,2,35,3,11
	.byte	'EOBM',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_FCON_Bits',0,21,193,1,3
	.word	67622
	.byte	10
	.byte	'_Ifx_FLASH_FPRO_Bits',0,21,196,1,16,4,11
	.byte	'PROINP',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'PRODISP',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'PROIND',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'PRODISD',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'PROINHSMCOTP',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'RES5',0,1
	.word	613
	.byte	1,2,2,35,0,11
	.byte	'PROINOTP',0,1
	.word	613
	.byte	1,1,2,35,0,11
	.byte	'RES7',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'PROINDBG',0,1
	.word	613
	.byte	1,7,2,35,1,11
	.byte	'PRODISDBG',0,1
	.word	613
	.byte	1,6,2,35,1,11
	.byte	'PROINHSM',0,1
	.word	613
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	613
	.byte	5,0,2,35,1,11
	.byte	'DCFP',0,1
	.word	613
	.byte	1,7,2,35,2,11
	.byte	'DDFP',0,1
	.word	613
	.byte	1,6,2,35,2,11
	.byte	'DDFPX',0,1
	.word	613
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	613
	.byte	1,4,2,35,2,11
	.byte	'DDFD',0,1
	.word	613
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	613
	.byte	1,2,2,35,2,11
	.byte	'ENPE',0,1
	.word	613
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	613
	.byte	8,0,2,35,3,0,32
	.byte	'Ifx_FLASH_FPRO_Bits',0,21,218,1,3
	.word	67984
	.byte	10
	.byte	'_Ifx_FLASH_FSR_Bits',0,21,221,1,16,4,11
	.byte	'FABUSY',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'D0BUSY',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'RES1',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'P0BUSY',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'P1BUSY',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'RES5',0,1
	.word	613
	.byte	1,2,2,35,0,11
	.byte	'RES6',0,1
	.word	613
	.byte	1,1,2,35,0,11
	.byte	'PROG',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'ERASE',0,1
	.word	613
	.byte	1,7,2,35,1,11
	.byte	'PFPAGE',0,1
	.word	613
	.byte	1,6,2,35,1,11
	.byte	'DFPAGE',0,1
	.word	613
	.byte	1,5,2,35,1,11
	.byte	'OPER',0,1
	.word	613
	.byte	1,4,2,35,1,11
	.byte	'SQER',0,1
	.word	613
	.byte	1,3,2,35,1,11
	.byte	'PROER',0,1
	.word	613
	.byte	1,2,2,35,1,11
	.byte	'PFSBER',0,1
	.word	613
	.byte	1,1,2,35,1,11
	.byte	'PFDBER',0,1
	.word	613
	.byte	1,0,2,35,1,11
	.byte	'PFMBER',0,1
	.word	613
	.byte	1,7,2,35,2,11
	.byte	'RES17',0,1
	.word	613
	.byte	1,6,2,35,2,11
	.byte	'DFSBER',0,1
	.word	613
	.byte	1,5,2,35,2,11
	.byte	'DFDBER',0,1
	.word	613
	.byte	1,4,2,35,2,11
	.byte	'DFTBER',0,1
	.word	613
	.byte	1,3,2,35,2,11
	.byte	'DFMBER',0,1
	.word	613
	.byte	1,2,2,35,2,11
	.byte	'SRIADDERR',0,1
	.word	613
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	630
	.byte	2,7,2,35,2,11
	.byte	'PVER',0,1
	.word	613
	.byte	1,6,2,35,3,11
	.byte	'EVER',0,1
	.word	613
	.byte	1,5,2,35,3,11
	.byte	'SPND',0,1
	.word	613
	.byte	1,4,2,35,3,11
	.byte	'SLM',0,1
	.word	613
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	613
	.byte	1,2,2,35,3,11
	.byte	'ORIER',0,1
	.word	613
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_FSR_Bits',0,21,254,1,3
	.word	68425
	.byte	10
	.byte	'_Ifx_FLASH_ID_Bits',0,21,129,2,16,4,11
	.byte	'MODREV',0,1
	.word	613
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	613
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	630
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_ID_Bits',0,21,134,2,3
	.word	69031
	.byte	10
	.byte	'_Ifx_FLASH_MARD_Bits',0,21,137,2,16,4,11
	.byte	'HMARGIN',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'SELD0',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'SPND',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'SPNDERR',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,2
	.word	630
	.byte	10,1,2,35,0,11
	.byte	'TRAPDIS',0,1
	.word	613
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	630
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_MARD_Bits',0,21,147,2,3
	.word	69142
	.byte	10
	.byte	'_Ifx_FLASH_MARP_Bits',0,21,150,2,16,4,11
	.byte	'SELP0',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'SELP1',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'RES2',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'RES3',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	630
	.byte	11,1,2,35,0,11
	.byte	'TRAPDIS',0,1
	.word	613
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	630
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_MARP_Bits',0,21,159,2,3
	.word	69356
	.byte	10
	.byte	'_Ifx_FLASH_PROCOND_Bits',0,21,162,2,16,4,11
	.byte	'L',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'NSAFECC',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'RAMIN',0,1
	.word	613
	.byte	2,4,2,35,0,11
	.byte	'RAMINSEL',0,1
	.word	613
	.byte	4,0,2,35,0,11
	.byte	'OSCCFG',0,1
	.word	613
	.byte	1,7,2,35,1,11
	.byte	'MODE',0,1
	.word	613
	.byte	2,5,2,35,1,11
	.byte	'APREN',0,1
	.word	613
	.byte	1,4,2,35,1,11
	.byte	'CAP0EN',0,1
	.word	613
	.byte	1,3,2,35,1,11
	.byte	'CAP1EN',0,1
	.word	613
	.byte	1,2,2,35,1,11
	.byte	'CAP2EN',0,1
	.word	613
	.byte	1,1,2,35,1,11
	.byte	'CAP3EN',0,1
	.word	613
	.byte	1,0,2,35,1,11
	.byte	'ESR0CNT',0,2
	.word	630
	.byte	12,4,2,35,2,11
	.byte	'RES29',0,1
	.word	613
	.byte	2,2,2,35,3,11
	.byte	'RES30',0,1
	.word	613
	.byte	1,1,2,35,3,11
	.byte	'RPRO',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_PROCOND_Bits',0,21,179,2,3
	.word	69543
	.byte	10
	.byte	'_Ifx_FLASH_PROCONDBG_Bits',0,21,182,2,16,4,11
	.byte	'OCDSDIS',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'DBGIFLCK',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'EDM',0,1
	.word	613
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	438
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONDBG_Bits',0,21,188,2,3
	.word	69867
	.byte	10
	.byte	'_Ifx_FLASH_PROCONHSM_Bits',0,21,191,2,16,4,11
	.byte	'HSMDBGDIS',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'DBGIFLCK',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'TSTIFLCK',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'HSMTSTDIS',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'RES15',0,2
	.word	630
	.byte	12,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	630
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_PROCONHSM_Bits',0,21,199,2,3
	.word	70010
	.byte	10
	.byte	'_Ifx_FLASH_PROCONHSMCOTP_Bits',0,21,202,2,16,4,11
	.byte	'HSMBOOTEN',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'SSWWAIT',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'HSMDX',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'HSM6X',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'HSM16X',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'HSM17X',0,1
	.word	613
	.byte	1,2,2,35,0,11
	.byte	'S6ROM',0,1
	.word	613
	.byte	1,1,2,35,0,11
	.byte	'HSMENPINS',0,2
	.word	630
	.byte	2,7,2,35,0,11
	.byte	'HSMENRES',0,1
	.word	613
	.byte	2,5,2,35,1,11
	.byte	'DESTDBG',0,1
	.word	613
	.byte	2,3,2,35,1,11
	.byte	'BLKFLAN',0,1
	.word	613
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	613
	.byte	2,0,2,35,1,11
	.byte	'S16ROM',0,1
	.word	613
	.byte	1,7,2,35,2,11
	.byte	'S17ROM',0,1
	.word	613
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	630
	.byte	14,0,2,35,2,0,32
	.byte	'Ifx_FLASH_PROCONHSMCOTP_Bits',0,21,219,2,3
	.word	70199
	.byte	10
	.byte	'_Ifx_FLASH_PROCONOTP_Bits',0,21,222,2,16,4,11
	.byte	'S0ROM',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'S1ROM',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'S2ROM',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'S3ROM',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'S4ROM',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'S5ROM',0,1
	.word	613
	.byte	1,2,2,35,0,11
	.byte	'S6ROM',0,1
	.word	613
	.byte	1,1,2,35,0,11
	.byte	'S7ROM',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'S8ROM',0,1
	.word	613
	.byte	1,7,2,35,1,11
	.byte	'S9ROM',0,1
	.word	613
	.byte	1,6,2,35,1,11
	.byte	'S10ROM',0,1
	.word	613
	.byte	1,5,2,35,1,11
	.byte	'S11ROM',0,1
	.word	613
	.byte	1,4,2,35,1,11
	.byte	'S12ROM',0,1
	.word	613
	.byte	1,3,2,35,1,11
	.byte	'S13ROM',0,1
	.word	613
	.byte	1,2,2,35,1,11
	.byte	'S14ROM',0,1
	.word	613
	.byte	1,1,2,35,1,11
	.byte	'S15ROM',0,1
	.word	613
	.byte	1,0,2,35,1,11
	.byte	'S16ROM',0,1
	.word	613
	.byte	1,7,2,35,2,11
	.byte	'S17ROM',0,1
	.word	613
	.byte	1,6,2,35,2,11
	.byte	'S18ROM',0,1
	.word	613
	.byte	1,5,2,35,2,11
	.byte	'S19ROM',0,1
	.word	613
	.byte	1,4,2,35,2,11
	.byte	'S20ROM',0,1
	.word	613
	.byte	1,3,2,35,2,11
	.byte	'S21ROM',0,1
	.word	613
	.byte	1,2,2,35,2,11
	.byte	'S22ROM',0,1
	.word	613
	.byte	1,1,2,35,2,11
	.byte	'S23ROM',0,1
	.word	613
	.byte	1,0,2,35,2,11
	.byte	'S24ROM',0,1
	.word	613
	.byte	1,7,2,35,3,11
	.byte	'S25ROM',0,1
	.word	613
	.byte	1,6,2,35,3,11
	.byte	'S26ROM',0,1
	.word	613
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	613
	.byte	2,3,2,35,3,11
	.byte	'BML',0,1
	.word	613
	.byte	2,1,2,35,3,11
	.byte	'TP',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_PROCONOTP_Bits',0,21,254,2,3
	.word	70562
	.byte	10
	.byte	'_Ifx_FLASH_PROCONP_Bits',0,21,129,3,16,4,11
	.byte	'S0L',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'S1L',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'S2L',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'S3L',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'S4L',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'S5L',0,1
	.word	613
	.byte	1,2,2,35,0,11
	.byte	'S6L',0,1
	.word	613
	.byte	1,1,2,35,0,11
	.byte	'S7L',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'S8L',0,1
	.word	613
	.byte	1,7,2,35,1,11
	.byte	'S9L',0,1
	.word	613
	.byte	1,6,2,35,1,11
	.byte	'S10L',0,1
	.word	613
	.byte	1,5,2,35,1,11
	.byte	'S11L',0,1
	.word	613
	.byte	1,4,2,35,1,11
	.byte	'S12L',0,1
	.word	613
	.byte	1,3,2,35,1,11
	.byte	'S13L',0,1
	.word	613
	.byte	1,2,2,35,1,11
	.byte	'S14L',0,1
	.word	613
	.byte	1,1,2,35,1,11
	.byte	'S15L',0,1
	.word	613
	.byte	1,0,2,35,1,11
	.byte	'S16L',0,1
	.word	613
	.byte	1,7,2,35,2,11
	.byte	'S17L',0,1
	.word	613
	.byte	1,6,2,35,2,11
	.byte	'S18L',0,1
	.word	613
	.byte	1,5,2,35,2,11
	.byte	'S19L',0,1
	.word	613
	.byte	1,4,2,35,2,11
	.byte	'S20L',0,1
	.word	613
	.byte	1,3,2,35,2,11
	.byte	'S21L',0,1
	.word	613
	.byte	1,2,2,35,2,11
	.byte	'S22L',0,1
	.word	613
	.byte	1,1,2,35,2,11
	.byte	'S23L',0,1
	.word	613
	.byte	1,0,2,35,2,11
	.byte	'S24L',0,1
	.word	613
	.byte	1,7,2,35,3,11
	.byte	'S25L',0,1
	.word	613
	.byte	1,6,2,35,3,11
	.byte	'S26L',0,1
	.word	613
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	613
	.byte	4,1,2,35,3,11
	.byte	'RPRO',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_PROCONP_Bits',0,21,160,3,3
	.word	71157
	.byte	10
	.byte	'_Ifx_FLASH_PROCONWOP_Bits',0,21,163,3,16,4,11
	.byte	'S0WOP',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'S1WOP',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'S2WOP',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'S3WOP',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'S4WOP',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'S5WOP',0,1
	.word	613
	.byte	1,2,2,35,0,11
	.byte	'S6WOP',0,1
	.word	613
	.byte	1,1,2,35,0,11
	.byte	'S7WOP',0,1
	.word	613
	.byte	1,0,2,35,0,11
	.byte	'S8WOP',0,1
	.word	613
	.byte	1,7,2,35,1,11
	.byte	'S9WOP',0,1
	.word	613
	.byte	1,6,2,35,1,11
	.byte	'S10WOP',0,1
	.word	613
	.byte	1,5,2,35,1,11
	.byte	'S11WOP',0,1
	.word	613
	.byte	1,4,2,35,1,11
	.byte	'S12WOP',0,1
	.word	613
	.byte	1,3,2,35,1,11
	.byte	'S13WOP',0,1
	.word	613
	.byte	1,2,2,35,1,11
	.byte	'S14WOP',0,1
	.word	613
	.byte	1,1,2,35,1,11
	.byte	'S15WOP',0,1
	.word	613
	.byte	1,0,2,35,1,11
	.byte	'S16WOP',0,1
	.word	613
	.byte	1,7,2,35,2,11
	.byte	'S17WOP',0,1
	.word	613
	.byte	1,6,2,35,2,11
	.byte	'S18WOP',0,1
	.word	613
	.byte	1,5,2,35,2,11
	.byte	'S19WOP',0,1
	.word	613
	.byte	1,4,2,35,2,11
	.byte	'S20WOP',0,1
	.word	613
	.byte	1,3,2,35,2,11
	.byte	'S21WOP',0,1
	.word	613
	.byte	1,2,2,35,2,11
	.byte	'S22WOP',0,1
	.word	613
	.byte	1,1,2,35,2,11
	.byte	'S23WOP',0,1
	.word	613
	.byte	1,0,2,35,2,11
	.byte	'S24WOP',0,1
	.word	613
	.byte	1,7,2,35,3,11
	.byte	'S25WOP',0,1
	.word	613
	.byte	1,6,2,35,3,11
	.byte	'S26WOP',0,1
	.word	613
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	613
	.byte	4,1,2,35,3,11
	.byte	'DATM',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_PROCONWOP_Bits',0,21,194,3,3
	.word	71681
	.byte	10
	.byte	'_Ifx_FLASH_RDB_CFG0_Bits',0,21,197,3,16,4,11
	.byte	'TAG',0,1
	.word	613
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	438
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG0_Bits',0,21,201,3,3
	.word	72263
	.byte	10
	.byte	'_Ifx_FLASH_RDB_CFG1_Bits',0,21,204,3,16,4,11
	.byte	'TAG',0,1
	.word	613
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	438
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG1_Bits',0,21,208,3,3
	.word	72365
	.byte	10
	.byte	'_Ifx_FLASH_RDB_CFG2_Bits',0,21,211,3,16,4,11
	.byte	'TAG',0,1
	.word	613
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	438
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG2_Bits',0,21,215,3,3
	.word	72467
	.byte	10
	.byte	'_Ifx_FLASH_RRAD_Bits',0,21,218,3,16,4,11
	.byte	'reserved_0',0,1
	.word	613
	.byte	3,5,2,35,0,11
	.byte	'ADD',0,4
	.word	438
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RRAD_Bits',0,21,222,3,3
	.word	72569
	.byte	10
	.byte	'_Ifx_FLASH_RRCT_Bits',0,21,225,3,16,4,11
	.byte	'STRT',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'STP',0,1
	.word	613
	.byte	1,6,2,35,0,11
	.byte	'BUSY',0,1
	.word	613
	.byte	1,5,2,35,0,11
	.byte	'DONE',0,1
	.word	613
	.byte	1,4,2,35,0,11
	.byte	'ERR',0,1
	.word	613
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	613
	.byte	3,0,2,35,0,11
	.byte	'EOBM',0,1
	.word	613
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	613
	.byte	7,0,2,35,1,11
	.byte	'CNT',0,2
	.word	630
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_RRCT_Bits',0,21,236,3,3
	.word	72663
	.byte	10
	.byte	'_Ifx_FLASH_RRD0_Bits',0,21,239,3,16,4,11
	.byte	'DATA',0,4
	.word	438
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RRD0_Bits',0,21,242,3,3
	.word	72873
	.byte	10
	.byte	'_Ifx_FLASH_RRD1_Bits',0,21,245,3,16,4,11
	.byte	'DATA',0,4
	.word	438
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RRD1_Bits',0,21,248,3,3
	.word	72946
	.byte	10
	.byte	'_Ifx_FLASH_UBAB_CFG_Bits',0,21,251,3,16,4,11
	.byte	'SEL',0,1
	.word	613
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	613
	.byte	2,0,2,35,0,11
	.byte	'CLR',0,1
	.word	613
	.byte	1,7,2,35,1,11
	.byte	'DIS',0,1
	.word	613
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	438
	.byte	22,0,2,35,0,0,32
	.byte	'Ifx_FLASH_UBAB_CFG_Bits',0,21,130,4,3
	.word	73019
	.byte	10
	.byte	'_Ifx_FLASH_UBAB_STAT_Bits',0,21,133,4,16,4,11
	.byte	'VLD0',0,1
	.word	613
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	438
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_FLASH_UBAB_STAT_Bits',0,21,137,4,3
	.word	73174
	.byte	10
	.byte	'_Ifx_FLASH_UBAB_TOP_Bits',0,21,140,4,16,4,11
	.byte	'reserved_0',0,1
	.word	613
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	438
	.byte	19,8,2,35,0,11
	.byte	'ERR',0,1
	.word	613
	.byte	6,2,2,35,3,11
	.byte	'VLD',0,1
	.word	613
	.byte	1,1,2,35,3,11
	.byte	'CLR',0,1
	.word	613
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_UBAB_TOP_Bits',0,21,147,4,3
	.word	73279
	.byte	12,21,155,4,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65684
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ACCEN0',0,21,160,4,3
	.word	73427
	.byte	12,21,163,4,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66245
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ACCEN1',0,21,168,4,3
	.word	73493
	.byte	12,21,171,4,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66326
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_CBAB_CFG',0,21,176,4,3
	.word	73559
	.byte	12,21,179,4,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66479
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_CBAB_STAT',0,21,184,4,3
	.word	73627
	.byte	12,21,187,4,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66727
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_CBAB_TOP',0,21,192,4,3
	.word	73696
	.byte	12,21,195,4,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66873
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_COMM0',0,21,200,4,3
	.word	73764
	.byte	12,21,203,4,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66971
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_COMM1',0,21,208,4,3
	.word	73829
	.byte	12,21,211,4,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67087
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_COMM2',0,21,216,4,3
	.word	73894
	.byte	12,21,219,4,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67203
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ECCRD',0,21,224,4,3
	.word	73959
	.byte	12,21,227,4,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67343
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ECCRP',0,21,232,4,3
	.word	74024
	.byte	12,21,235,4,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67483
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ECCW',0,21,240,4,3
	.word	74089
	.byte	12,21,243,4,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67622
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_FCON',0,21,248,4,3
	.word	74153
	.byte	12,21,251,4,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67984
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_FPRO',0,21,128,5,3
	.word	74217
	.byte	12,21,131,5,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68425
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_FSR',0,21,136,5,3
	.word	74281
	.byte	12,21,139,5,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69031
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ID',0,21,144,5,3
	.word	74344
	.byte	12,21,147,5,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69142
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_MARD',0,21,152,5,3
	.word	74406
	.byte	12,21,155,5,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69356
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_MARP',0,21,160,5,3
	.word	74470
	.byte	12,21,163,5,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69543
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCOND',0,21,168,5,3
	.word	74534
	.byte	12,21,171,5,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69867
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONDBG',0,21,176,5,3
	.word	74601
	.byte	12,21,179,5,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70010
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONHSM',0,21,184,5,3
	.word	74670
	.byte	12,21,187,5,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70199
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONHSMCOTP',0,21,192,5,3
	.word	74739
	.byte	12,21,195,5,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70562
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONOTP',0,21,200,5,3
	.word	74812
	.byte	12,21,203,5,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71157
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONP',0,21,208,5,3
	.word	74881
	.byte	12,21,211,5,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71681
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONWOP',0,21,216,5,3
	.word	74948
	.byte	12,21,219,5,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72263
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG0',0,21,224,5,3
	.word	75017
	.byte	12,21,227,5,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72365
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG1',0,21,232,5,3
	.word	75085
	.byte	12,21,235,5,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72467
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG2',0,21,240,5,3
	.word	75153
	.byte	12,21,243,5,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72569
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RRAD',0,21,248,5,3
	.word	75221
	.byte	12,21,251,5,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72663
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RRCT',0,21,128,6,3
	.word	75285
	.byte	12,21,131,6,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72873
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RRD0',0,21,136,6,3
	.word	75349
	.byte	12,21,139,6,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72946
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RRD1',0,21,144,6,3
	.word	75413
	.byte	12,21,147,6,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	73019
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_UBAB_CFG',0,21,152,6,3
	.word	75477
	.byte	12,21,155,6,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	73174
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_UBAB_STAT',0,21,160,6,3
	.word	75545
	.byte	12,21,163,6,9,4,13
	.byte	'U',0
	.word	438
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	454
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	73279
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_UBAB_TOP',0,21,168,6,3
	.word	75614
	.byte	10
	.byte	'_Ifx_FLASH_CBAB',0,21,179,6,25,12,13
	.byte	'CFG',0
	.word	73559
	.byte	4,2,35,0,13
	.byte	'STAT',0
	.word	73627
	.byte	4,2,35,4,13
	.byte	'TOP',0
	.word	73696
	.byte	4,2,35,8,0,14
	.word	75682
	.byte	32
	.byte	'Ifx_FLASH_CBAB',0,21,184,6,3
	.word	75745
	.byte	10
	.byte	'_Ifx_FLASH_RDB',0,21,187,6,25,12,13
	.byte	'CFG0',0
	.word	75017
	.byte	4,2,35,0,13
	.byte	'CFG1',0
	.word	75085
	.byte	4,2,35,4,13
	.byte	'CFG2',0
	.word	75153
	.byte	4,2,35,8,0,14
	.word	75774
	.byte	32
	.byte	'Ifx_FLASH_RDB',0,21,192,6,3
	.word	75838
	.byte	10
	.byte	'_Ifx_FLASH_UBAB',0,21,195,6,25,12,13
	.byte	'CFG',0
	.word	75477
	.byte	4,2,35,0,13
	.byte	'STAT',0
	.word	75545
	.byte	4,2,35,4,13
	.byte	'TOP',0
	.word	75614
	.byte	4,2,35,8,0,14
	.word	75866
	.byte	32
	.byte	'Ifx_FLASH_UBAB',0,21,200,6,3
	.word	75929
	.byte	32
	.byte	'Ifx_P_ACCEN0_Bits',0,6,79,3
	.word	8003
	.byte	32
	.byte	'Ifx_P_ACCEN1_Bits',0,6,85,3
	.word	7916
	.byte	32
	.byte	'Ifx_P_ESR_Bits',0,6,107,3
	.word	4259
	.byte	32
	.byte	'Ifx_P_ID_Bits',0,6,115,3
	.word	2312
	.byte	32
	.byte	'Ifx_P_IN_Bits',0,6,137,1,3
	.word	3307
	.byte	32
	.byte	'Ifx_P_IOCR0_Bits',0,6,150,1,3
	.word	2440
	.byte	32
	.byte	'Ifx_P_IOCR12_Bits',0,6,163,1,3
	.word	3087
	.byte	32
	.byte	'Ifx_P_IOCR4_Bits',0,6,176,1,3
	.word	2655
	.byte	32
	.byte	'Ifx_P_IOCR8_Bits',0,6,189,1,3
	.word	2870
	.byte	32
	.byte	'Ifx_P_LPCR0_Bits',0,6,197,1,3
	.word	7275
	.byte	32
	.byte	'Ifx_P_LPCR1_Bits',0,6,205,1,3
	.word	7399
	.byte	32
	.byte	'Ifx_P_LPCR1_P21_Bits',0,6,215,1,3
	.word	7483
	.byte	32
	.byte	'Ifx_P_LPCR2_Bits',0,6,229,1,3
	.word	7663
	.byte	32
	.byte	'Ifx_P_OMCR0_Bits',0,6,240,1,3
	.word	5914
	.byte	32
	.byte	'Ifx_P_OMCR12_Bits',0,6,250,1,3
	.word	6438
	.byte	32
	.byte	'Ifx_P_OMCR4_Bits',0,6,133,2,3
	.word	6088
	.byte	32
	.byte	'Ifx_P_OMCR8_Bits',0,6,144,2,3
	.word	6262
	.byte	32
	.byte	'Ifx_P_OMCR_Bits',0,6,166,2,3
	.word	6927
	.byte	32
	.byte	'Ifx_P_OMR_Bits',0,6,203,2,3
	.word	1741
	.byte	32
	.byte	'Ifx_P_OMSR0_Bits',0,6,213,2,3
	.word	5251
	.byte	32
	.byte	'Ifx_P_OMSR12_Bits',0,6,224,2,3
	.word	5739
	.byte	32
	.byte	'Ifx_P_OMSR4_Bits',0,6,235,2,3
	.word	5398
	.byte	32
	.byte	'Ifx_P_OMSR8_Bits',0,6,246,2,3
	.word	5567
	.byte	32
	.byte	'Ifx_P_OMSR_Bits',0,6,140,3,3
	.word	6594
	.byte	32
	.byte	'Ifx_P_OUT_Bits',0,6,162,3,3
	.word	1425
	.byte	32
	.byte	'Ifx_P_PCSR_Bits',0,6,180,3,3
	.word	4965
	.byte	32
	.byte	'Ifx_P_PDISC_Bits',0,6,202,3,3
	.word	4599
	.byte	32
	.byte	'Ifx_P_PDR0_Bits',0,6,223,3,3
	.word	3630
	.byte	32
	.byte	'Ifx_P_PDR1_Bits',0,6,244,3,3
	.word	3934
	.byte	32
	.byte	'Ifx_P_ACCEN0',0,6,129,4,3
	.word	8530
	.byte	32
	.byte	'Ifx_P_ACCEN1',0,6,137,4,3
	.word	7963
	.byte	32
	.byte	'Ifx_P_ESR',0,6,145,4,3
	.word	4550
	.byte	32
	.byte	'Ifx_P_ID',0,6,153,4,3
	.word	2391
	.byte	32
	.byte	'Ifx_P_IN',0,6,161,4,3
	.word	3581
	.byte	32
	.byte	'Ifx_P_IOCR0',0,6,169,4,3
	.word	2615
	.byte	32
	.byte	'Ifx_P_IOCR12',0,6,177,4,3
	.word	3267
	.byte	32
	.byte	'Ifx_P_IOCR4',0,6,185,4,3
	.word	2830
	.byte	32
	.byte	'Ifx_P_IOCR8',0,6,193,4,3
	.word	3047
	.byte	32
	.byte	'Ifx_P_LPCR0',0,6,201,4,3
	.word	7359
	.byte	32
	.byte	'Ifx_P_LPCR1',0,6,210,4,3
	.word	7608
	.byte	32
	.byte	'Ifx_P_LPCR2',0,6,218,4,3
	.word	7867
	.byte	32
	.byte	'Ifx_P_OMCR',0,6,226,4,3
	.word	7235
	.byte	32
	.byte	'Ifx_P_OMCR0',0,6,234,4,3
	.word	6048
	.byte	32
	.byte	'Ifx_P_OMCR12',0,6,242,4,3
	.word	6554
	.byte	32
	.byte	'Ifx_P_OMCR4',0,6,250,4,3
	.word	6222
	.byte	32
	.byte	'Ifx_P_OMCR8',0,6,130,5,3
	.word	6398
	.byte	32
	.byte	'Ifx_P_OMR',0,6,138,5,3
	.word	2272
	.byte	32
	.byte	'Ifx_P_OMSR',0,6,146,5,3
	.word	6887
	.byte	32
	.byte	'Ifx_P_OMSR0',0,6,154,5,3
	.word	5358
	.byte	32
	.byte	'Ifx_P_OMSR12',0,6,162,5,3
	.word	5874
	.byte	32
	.byte	'Ifx_P_OMSR4',0,6,170,5,3
	.word	5527
	.byte	32
	.byte	'Ifx_P_OMSR8',0,6,178,5,3
	.word	5699
	.byte	32
	.byte	'Ifx_P_OUT',0,6,186,5,3
	.word	1701
	.byte	32
	.byte	'Ifx_P_PCSR',0,6,194,5,3
	.word	5211
	.byte	32
	.byte	'Ifx_P_PDISC',0,6,202,5,3
	.word	4925
	.byte	32
	.byte	'Ifx_P_PDR0',0,6,210,5,3
	.word	3894
	.byte	32
	.byte	'Ifx_P_PDR1',0,6,218,5,3
	.word	4210
	.byte	14
	.word	8570
	.byte	32
	.byte	'Ifx_P',0,6,139,6,3
	.word	77276
	.byte	17,5,83,9,1,18
	.byte	'IfxPort_InputMode_undefined',0,127,18
	.byte	'IfxPort_InputMode_noPullDevice',0,0,18
	.byte	'IfxPort_InputMode_pullDown',0,8,18
	.byte	'IfxPort_InputMode_pullUp',0,16,0,32
	.byte	'IfxPort_InputMode',0,5,89,3
	.word	77296
	.byte	17,5,120,9,1,18
	.byte	'IfxPort_OutputIdx_general',0,128,1,18
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,18
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,18
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,18
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,18
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,18
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,18
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,32
	.byte	'IfxPort_OutputIdx',0,5,130,1,3
	.word	77447
	.byte	17,5,134,1,9,1,18
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,18
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,32
	.byte	'IfxPort_OutputMode',0,5,138,1,3
	.word	77691
	.byte	17,5,144,1,9,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,18
	.byte	'IfxPort_PadDriver_lvdsSpeed1',0,4,18
	.byte	'IfxPort_PadDriver_lvdsSpeed2',0,5,18
	.byte	'IfxPort_PadDriver_lvdsSpeed3',0,6,18
	.byte	'IfxPort_PadDriver_lvdsSpeed4',0,7,18
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,18
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,18
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,18
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,0,32
	.byte	'IfxPort_PadDriver',0,5,158,1,3
	.word	77789
	.byte	32
	.byte	'IfxPort_State',0,5,178,1,3
	.word	9183
	.byte	26,5,190,1,9,8,13
	.byte	'port',0
	.word	9178
	.byte	4,2,35,0,13
	.byte	'pinIndex',0
	.word	613
	.byte	1,2,35,4,0,32
	.byte	'IfxPort_Pin',0,5,194,1,3
	.word	78254
	.byte	32
	.byte	'IfxScuCcu_PllStepsFunctionHook',0,7,148,1,16
	.word	177
	.byte	26,7,212,5,9,8,13
	.byte	'value',0
	.word	9726
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	9726
	.byte	4,2,35,4,0,32
	.byte	'IfxScuCcu_CcuconRegConfig',0,7,216,5,3
	.word	78354
	.byte	26,7,221,5,9,8,13
	.byte	'pDivider',0
	.word	613
	.byte	1,2,35,0,13
	.byte	'nDivider',0
	.word	613
	.byte	1,2,35,1,13
	.byte	'k2Initial',0
	.word	613
	.byte	1,2,35,2,13
	.byte	'waitTime',0
	.word	234
	.byte	4,2,35,4,0,32
	.byte	'IfxScuCcu_InitialStepConfig',0,7,227,5,3
	.word	78425
	.byte	26,7,231,5,9,12,13
	.byte	'k2Step',0
	.word	613
	.byte	1,2,35,0,13
	.byte	'waitTime',0
	.word	234
	.byte	4,2,35,2,13
	.byte	'hookFunction',0
	.word	78314
	.byte	4,2,35,8,0,32
	.byte	'IfxScuCcu_PllStepsConfig',0,7,236,5,3
	.word	78542
	.byte	3
	.word	174
	.byte	26,7,244,5,9,48,13
	.byte	'ccucon0',0
	.word	78354
	.byte	8,2,35,0,13
	.byte	'ccucon1',0
	.word	78354
	.byte	8,2,35,8,13
	.byte	'ccucon2',0
	.word	78354
	.byte	8,2,35,16,13
	.byte	'ccucon5',0
	.word	78354
	.byte	8,2,35,24,13
	.byte	'ccucon6',0
	.word	78354
	.byte	8,2,35,32,13
	.byte	'ccucon7',0
	.word	78354
	.byte	8,2,35,40,0,32
	.byte	'IfxScuCcu_ClockDistributionConfig',0,7,252,5,3
	.word	78644
	.byte	26,7,128,6,9,8,13
	.byte	'value',0
	.word	9726
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	9726
	.byte	4,2,35,4,0,32
	.byte	'IfxScuCcu_FlashWaitstateConfig',0,7,132,6,3
	.word	78796
	.byte	3
	.word	78542
	.byte	26,7,137,6,9,16,13
	.byte	'numOfPllDividerSteps',0
	.word	613
	.byte	1,2,35,0,13
	.byte	'pllDividerStep',0
	.word	78872
	.byte	4,2,35,4,13
	.byte	'pllInitialStep',0
	.word	78425
	.byte	8,2,35,8,0,32
	.byte	'IfxScuCcu_SysPllConfig',0,7,142,6,3
	.word	78877
	.byte	17,8,144,1,9,1,18
	.byte	'IfxCpu_CounterMode_normal',0,0,18
	.byte	'IfxCpu_CounterMode_task',0,1,0,32
	.byte	'IfxCpu_CounterMode',0,8,148,1,3
	.word	78994
	.byte	26,8,160,1,9,6,13
	.byte	'counter',0
	.word	9726
	.byte	4,2,35,0,13
	.byte	'overlfow',0
	.word	613
	.byte	1,2,35,4,0,32
	.byte	'IfxCpu_Counter',0,8,164,1,3
	.word	79083
	.byte	26,8,172,1,9,32,13
	.byte	'instruction',0
	.word	79083
	.byte	6,2,35,0,13
	.byte	'clock',0
	.word	79083
	.byte	6,2,35,6,13
	.byte	'counter1',0
	.word	79083
	.byte	6,2,35,12,13
	.byte	'counter2',0
	.word	79083
	.byte	6,2,35,18,13
	.byte	'counter3',0
	.word	79083
	.byte	6,2,35,24,0,32
	.byte	'IfxCpu_Perf',0,8,179,1,3
	.word	79149
	.byte	17,22,69,9,1,18
	.byte	'IfxSrc_Tos_cpu0',0,0,18
	.byte	'IfxSrc_Tos_cpu1',0,1,18
	.byte	'IfxSrc_Tos_dma',0,3,0,32
	.byte	'IfxSrc_Tos',0,22,74,3
	.word	79267
	.byte	17,12,151,1,9,1,18
	.byte	'IfxStm_Comparator_0',0,0,18
	.byte	'IfxStm_Comparator_1',0,1,0,32
	.byte	'IfxStm_Comparator',0,12,155,1,3
	.word	79345
	.byte	17,12,159,1,9,1,18
	.byte	'IfxStm_ComparatorInterrupt_ir0',0,0,18
	.byte	'IfxStm_ComparatorInterrupt_ir1',0,1,0,32
	.byte	'IfxStm_ComparatorInterrupt',0,12,163,1,3
	.word	79423
	.byte	17,12,167,1,9,1,18
	.byte	'IfxStm_ComparatorOffset_0',0,0,18
	.byte	'IfxStm_ComparatorOffset_1',0,1,18
	.byte	'IfxStm_ComparatorOffset_2',0,2,18
	.byte	'IfxStm_ComparatorOffset_3',0,3,18
	.byte	'IfxStm_ComparatorOffset_4',0,4,18
	.byte	'IfxStm_ComparatorOffset_5',0,5,18
	.byte	'IfxStm_ComparatorOffset_6',0,6,18
	.byte	'IfxStm_ComparatorOffset_7',0,7,18
	.byte	'IfxStm_ComparatorOffset_8',0,8,18
	.byte	'IfxStm_ComparatorOffset_9',0,9,18
	.byte	'IfxStm_ComparatorOffset_10',0,10,18
	.byte	'IfxStm_ComparatorOffset_11',0,11,18
	.byte	'IfxStm_ComparatorOffset_12',0,12,18
	.byte	'IfxStm_ComparatorOffset_13',0,13,18
	.byte	'IfxStm_ComparatorOffset_14',0,14,18
	.byte	'IfxStm_ComparatorOffset_15',0,15,18
	.byte	'IfxStm_ComparatorOffset_16',0,16,18
	.byte	'IfxStm_ComparatorOffset_17',0,17,18
	.byte	'IfxStm_ComparatorOffset_18',0,18,18
	.byte	'IfxStm_ComparatorOffset_19',0,19,18
	.byte	'IfxStm_ComparatorOffset_20',0,20,18
	.byte	'IfxStm_ComparatorOffset_21',0,21,18
	.byte	'IfxStm_ComparatorOffset_22',0,22,18
	.byte	'IfxStm_ComparatorOffset_23',0,23,18
	.byte	'IfxStm_ComparatorOffset_24',0,24,18
	.byte	'IfxStm_ComparatorOffset_25',0,25,18
	.byte	'IfxStm_ComparatorOffset_26',0,26,18
	.byte	'IfxStm_ComparatorOffset_27',0,27,18
	.byte	'IfxStm_ComparatorOffset_28',0,28,18
	.byte	'IfxStm_ComparatorOffset_29',0,29,18
	.byte	'IfxStm_ComparatorOffset_30',0,30,18
	.byte	'IfxStm_ComparatorOffset_31',0,31,0,32
	.byte	'IfxStm_ComparatorOffset',0,12,201,1,3
	.word	79532
	.byte	17,12,205,1,9,1,18
	.byte	'IfxStm_ComparatorSize_1Bit',0,0,18
	.byte	'IfxStm_ComparatorSize_2Bits',0,1,18
	.byte	'IfxStm_ComparatorSize_3Bits',0,2,18
	.byte	'IfxStm_ComparatorSize_4Bits',0,3,18
	.byte	'IfxStm_ComparatorSize_5Bits',0,4,18
	.byte	'IfxStm_ComparatorSize_6Bits',0,5,18
	.byte	'IfxStm_ComparatorSize_7Bits',0,6,18
	.byte	'IfxStm_ComparatorSize_8Bits',0,7,18
	.byte	'IfxStm_ComparatorSize_9Bits',0,8,18
	.byte	'IfxStm_ComparatorSize_10Bits',0,9,18
	.byte	'IfxStm_ComparatorSize_11Bits',0,10,18
	.byte	'IfxStm_ComparatorSize_12Bits',0,11,18
	.byte	'IfxStm_ComparatorSize_13Bits',0,12,18
	.byte	'IfxStm_ComparatorSize_14Bits',0,13,18
	.byte	'IfxStm_ComparatorSize_15Bits',0,14,18
	.byte	'IfxStm_ComparatorSize_16Bits',0,15,18
	.byte	'IfxStm_ComparatorSize_17Bits',0,16,18
	.byte	'IfxStm_ComparatorSize_18Bits',0,17,18
	.byte	'IfxStm_ComparatorSize_19Bits',0,18,18
	.byte	'IfxStm_ComparatorSize_20Bits',0,19,18
	.byte	'IfxStm_ComparatorSize_21Bits',0,20,18
	.byte	'IfxStm_ComparatorSize_22Bits',0,21,18
	.byte	'IfxStm_ComparatorSize_23Bits',0,22,18
	.byte	'IfxStm_ComparatorSize_24Bits',0,23,18
	.byte	'IfxStm_ComparatorSize_25Bits',0,24,18
	.byte	'IfxStm_ComparatorSize_26Bits',0,25,18
	.byte	'IfxStm_ComparatorSize_27Bits',0,26,18
	.byte	'IfxStm_ComparatorSize_28Bits',0,27,18
	.byte	'IfxStm_ComparatorSize_29Bits',0,28,18
	.byte	'IfxStm_ComparatorSize_30Bits',0,29,18
	.byte	'IfxStm_ComparatorSize_31Bits',0,30,18
	.byte	'IfxStm_ComparatorSize_32Bits',0,31,0,32
	.byte	'IfxStm_ComparatorSize',0,12,239,1,3
	.word	80490
	.byte	17,12,244,1,9,1,18
	.byte	'IfxStm_SleepMode_enable',0,0,18
	.byte	'IfxStm_SleepMode_disable',0,1,0,32
	.byte	'IfxStm_SleepMode',0,12,248,1,3
	.word	81510
	.byte	17,12,252,1,9,1,18
	.byte	'IfxStm_SuspendMode_none',0,0,18
	.byte	'IfxStm_SuspendMode_hard',0,1,18
	.byte	'IfxStm_SuspendMode_soft',0,2,0,32
	.byte	'IfxStm_SuspendMode',0,12,129,2,3
	.word	81596
	.byte	15,88
	.word	13985
	.byte	16,10,0,34
	.byte	'TimeConst',0,14,168,1,25
	.word	81709
	.byte	1,1,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L20:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,39,12,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,36,0,3,8,11,15,62
	.byte	15,0,0,8,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,9,59,0,3,8,0,0,10,19,1,3,8,58,15,59,15
	.byte	57,15,11,15,0,0,11,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,12,23,1,58,15,59,15,57,15,11,15,0,0,13,13
	.byte	0,3,8,73,19,11,15,56,9,0,0,14,53,0,73,19,0,0,15,1,1,11,15,73,19,0,0,16,33,0,47,15,0,0,17,4,1,58,15,59
	.byte	15,57,15,11,15,0,0,18,40,0,3,8,28,13,0,0,19,11,1,0,0,20,38,0,73,19,0,0,21,46,1,3,8,54,15,39,12,63,12,60
	.byte	12,0,0,22,5,0,73,19,0,0,23,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,24,5,0,3,8,73,19,0,0,25,46,0,3,8
	.byte	54,15,39,12,63,12,60,12,0,0,26,19,1,58,15,59,15,57,15,11,15,0,0,27,46,1,49,19,0,0,28,5,0,49,19,0,0,29
	.byte	29,1,49,19,0,0,30,11,0,49,19,0,0,31,11,1,49,19,0,0,32,22,0,3,8,58,15,59,15,57,15,73,19,0,0,33,21,0,54
	.byte	15,0,0,34,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L21:
	.word	.L105-.L104
.L104:
	.half	3
	.word	.L107-.L106
.L106:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std',0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu_Intrinsics.h',0,1,0,0
	.byte	'IfxScuWdt.h',0,2,0,0
	.byte	'IfxScu_regdef.h',0,3,0,0
	.byte	'IfxPort.h',0,4,0,0
	.byte	'IfxPort_regdef.h',0,3,0,0
	.byte	'IfxScuCcu.h',0,2,0,0
	.byte	'IfxCpu.h',0,1,0,0
	.byte	'IfxCpu_cfg.h',0,5,0,0
	.byte	'IfxSrc.h',0,6,0,0
	.byte	'IfxSrc_regdef.h',0,3,0,0
	.byte	'IfxStm.h',0,7,0,0
	.byte	'IfxStm_regdef.h',0,3,0,0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Bsp\\Bsp.h',0
	.byte	0,0,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time\\Ifx_DateTime.h',0,0,0,0
	.byte	'IfxCpu_regdef.h',0,3,0,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time\\Ifx_DateTime.c',0,0,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Ifx_Types.h',0,1,0,0
	.byte	'IfxScu_cfg.h',0,5,0,0
	.byte	'IfxFlash_regdef.h',0,3,0,0
	.byte	'IfxSrc_cfg.h',0,5,0,0,0
.L107:
.L105:
	.sdecl	'.debug_info',debug,cluster('DateTime_set')
	.sect	'.debug_info'
.L22:
	.word	605
	.half	3
	.word	.L23
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time\\Ifx_DateTime.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L25,.L24
	.byte	2
	.word	.L18
	.byte	3
	.byte	'DateTime_set',0,1,66,6,1,1,1
	.word	.L17,.L34,.L16
	.byte	4
	.byte	'dt',0,1,66,33
	.word	.L35,.L36
	.byte	5
	.word	.L17,.L34
	.byte	6
	.byte	'seconds',0,1,68,12
	.word	.L37,.L38
	.byte	7
	.word	.L39,.L40,.L13
	.byte	8
	.word	.L41,.L40,.L13
	.byte	6
	.byte	'stmNow',0,2,223,1,18
	.word	.L42,.L43
	.byte	6
	.byte	'interruptState',0,2,224,1,18
	.word	.L44,.L45
	.byte	7
	.word	.L46,.L40,.L10
	.byte	8
	.word	.L47,.L40,.L10
	.byte	7
	.word	.L48,.L40,.L9
	.byte	8
	.word	.L49,.L40,.L9
	.byte	6
	.byte	'enabled',0,3,149,5,13
	.word	.L44,.L50
	.byte	7
	.word	.L51,.L40,.L8
	.byte	8
	.word	.L52,.L40,.L8
	.byte	6
	.byte	'reg',0,3,141,5,17
	.word	.L53,.L54
	.byte	0,0,0,0,0,0,7
	.word	.L55,.L10,.L11
	.byte	9
	.word	.L56,.L57
	.byte	10
	.word	.L58,.L59
	.byte	6
	.byte	'result',0,4,164,4,12
	.word	.L62,.L63
	.byte	0,0,7
	.word	.L55,.L60,.L61
	.byte	9
	.word	.L56,.L57
	.byte	0,7
	.word	.L64,.L61,.L12
	.byte	9
	.word	.L65,.L66
	.byte	8
	.word	.L67,.L61,.L12
	.byte	7
	.word	.L68,.L61,.L12
	.byte	9
	.word	.L69,.L70
	.byte	11
	.word	.L71,.L61,.L12
	.byte	0,0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('DateTime_set')
	.sect	'.debug_abbrev'
.L23:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,11,1,49,16,17,1,18,1,0,0,9,5,0,49,16,2
	.byte	6,0,0,10,11,1,49,16,85,6,0,0,11,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('DateTime_set')
	.sect	'.debug_line'
.L24:
	.word	.L109-.L108
.L108:
	.half	3
	.word	.L111-.L110
.L110:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std',0,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time\\Ifx_DateTime.c',0,0,0,0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Bsp\\Bsp.h',0
	.byte	0,0,0
	.byte	'IfxCpu.h',0,1,0,0
	.byte	'IfxStm.h',0,2,0,0,0
.L111:
	.byte	5,6,7,0,5,2
	.word	.L17
	.byte	3,193,0,1,4,3,5,19,9
	.half	.L40-.L17
	.byte	3,204,4,1,5,17,9
	.half	.L96-.L40
	.byte	3,1,1,5,21,9
	.half	.L97-.L96
	.byte	1,5,5,9
	.half	.L98-.L97
	.byte	1,5,14,9
	.half	.L8-.L98
	.byte	3,8,1,5,10,9
	.half	.L112-.L8
	.byte	3,1,1,5,5,9
	.half	.L113-.L112
	.byte	3,1,1,4,2,9
	.half	.L9-.L113
	.byte	3,213,123,1,4,4,5,24,9
	.half	.L10-.L9
	.byte	3,184,3,1,5,32,9
	.half	.L100-.L10
	.byte	3,1,1,5,36,9
	.half	.L114-.L100
	.byte	1,5,12,9
	.half	.L115-.L114
	.byte	1,5,5,9
	.half	.L116-.L115
	.byte	3,2,1,4,2,5,68,9
	.half	.L11-.L116
	.byte	3,186,125,1,5,66,9
	.half	.L60-.L11
	.byte	1,4,3,5,5,9
	.half	.L61-.L60
	.byte	3,199,5,1,5,17,7,9
	.half	.L117-.L61
	.byte	3,2,1,4,2,5,5,9
	.half	.L12-.L117
	.byte	3,186,122,1,4,1,5,24,9
	.half	.L13-.L12
	.byte	3,222,126,1,5,54,9
	.half	.L99-.L13
	.byte	1,5,52,9
	.half	.L118-.L99
	.byte	1,5,34,9
	.half	.L94-.L118
	.byte	1,5,44,9
	.half	.L119-.L94
	.byte	3,2,1,5,35,9
	.half	.L120-.L119
	.byte	1,5,32,9
	.half	.L121-.L120
	.byte	1,5,42,9
	.half	.L102-.L121
	.byte	3,1,1,5,35,9
	.half	.L122-.L102
	.byte	1,5,32,9
	.half	.L123-.L122
	.byte	1,5,5,9
	.half	.L103-.L123
	.byte	3,1,1,5,22,9
	.half	.L124-.L103
	.byte	1,5,1,9
	.half	.L125-.L124
	.byte	3,1,1,7,9
	.half	.L26-.L125
	.byte	0,1,1
.L109:
	.sdecl	'.debug_ranges',debug,cluster('DateTime_set')
	.sect	'.debug_ranges'
.L25:
	.word	-1,.L17,0,.L26-.L17,0,0
.L59:
	.word	-1,.L17,.L10-.L17,.L11-.L17,.L60-.L17,.L61-.L17,0,0
	.sdecl	'.debug_info',debug,cluster('DateTime_get')
	.sect	'.debug_info'
.L27:
	.word	605
	.half	3
	.word	.L28
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time\\Ifx_DateTime.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L30,.L29
	.byte	2
	.word	.L18
	.byte	3
	.byte	'DateTime_get',0,1,53,6,1,1,1
	.word	.L15,.L72,.L14
	.byte	4
	.byte	'dt',0,1,53,33
	.word	.L35,.L73
	.byte	5
	.word	.L15,.L72
	.byte	6
	.byte	'seconds',0,1,55,12
	.word	.L37,.L74
	.byte	7
	.word	.L39,.L75,.L7
	.byte	8
	.word	.L41,.L75,.L7
	.byte	6
	.byte	'stmNow',0,2,223,1,18
	.word	.L42,.L76
	.byte	6
	.byte	'interruptState',0,2,224,1,18
	.word	.L44,.L77
	.byte	7
	.word	.L46,.L75,.L4
	.byte	8
	.word	.L47,.L75,.L4
	.byte	7
	.word	.L48,.L75,.L3
	.byte	8
	.word	.L49,.L75,.L3
	.byte	6
	.byte	'enabled',0,3,149,5,13
	.word	.L44,.L78
	.byte	7
	.word	.L51,.L75,.L2
	.byte	8
	.word	.L52,.L75,.L2
	.byte	6
	.byte	'reg',0,3,141,5,17
	.word	.L53,.L79
	.byte	0,0,0,0,0,0,7
	.word	.L55,.L4,.L5
	.byte	9
	.word	.L56,.L80
	.byte	10
	.word	.L58,.L81
	.byte	6
	.byte	'result',0,4,164,4,12
	.word	.L62,.L84
	.byte	0,0,7
	.word	.L55,.L82,.L83
	.byte	9
	.word	.L56,.L80
	.byte	0,7
	.word	.L64,.L83,.L6
	.byte	9
	.word	.L65,.L85
	.byte	8
	.word	.L67,.L83,.L6
	.byte	7
	.word	.L68,.L83,.L6
	.byte	9
	.word	.L69,.L86
	.byte	11
	.word	.L71,.L83,.L6
	.byte	0,0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('DateTime_get')
	.sect	'.debug_abbrev'
.L28:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,11,1,49,16,17,1,18,1,0,0,9,5,0,49,16,2
	.byte	6,0,0,10,11,1,49,16,85,6,0,0,11,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('DateTime_get')
	.sect	'.debug_line'
.L29:
	.word	.L127-.L126
.L126:
	.half	3
	.word	.L129-.L128
.L128:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std',0,0
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time\\Ifx_DateTime.c',0,0,0,0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Bsp\\Bsp.h',0
	.byte	0,0,0
	.byte	'IfxCpu.h',0,1,0,0
	.byte	'IfxStm.h',0,2,0,0,0
.L129:
	.byte	5,6,7,0,5,2
	.word	.L15
	.byte	3,52,1,4,3,5,19,9
	.half	.L75-.L15
	.byte	3,217,4,1,5,17,9
	.half	.L88-.L75
	.byte	3,1,1,5,21,9
	.half	.L89-.L88
	.byte	1,5,5,9
	.half	.L90-.L89
	.byte	1,5,14,9
	.half	.L2-.L90
	.byte	3,8,1,5,10,9
	.half	.L130-.L2
	.byte	3,1,1,5,5,9
	.half	.L131-.L130
	.byte	3,1,1,4,2,9
	.half	.L3-.L131
	.byte	3,213,123,1,4,4,5,24,9
	.half	.L4-.L3
	.byte	3,184,3,1,5,32,9
	.half	.L92-.L4
	.byte	3,1,1,5,36,9
	.half	.L132-.L92
	.byte	1,5,12,9
	.half	.L133-.L132
	.byte	1,5,5,9
	.half	.L134-.L133
	.byte	3,2,1,4,2,5,68,9
	.half	.L5-.L134
	.byte	3,186,125,1,5,66,9
	.half	.L82-.L5
	.byte	1,4,3,5,5,9
	.half	.L83-.L82
	.byte	3,199,5,1,5,17,7,9
	.half	.L135-.L83
	.byte	3,2,1,4,2,5,5,9
	.half	.L6-.L135
	.byte	3,186,122,1,4,1,5,39,9
	.half	.L7-.L6
	.byte	3,209,126,1,5,37,9
	.half	.L136-.L7
	.byte	1,5,29,9
	.half	.L87-.L136
	.byte	3,2,1,5,27,9
	.half	.L91-.L87
	.byte	1,5,29,9
	.half	.L137-.L91
	.byte	3,1,1,5,27,9
	.half	.L138-.L137
	.byte	1,5,17,9
	.half	.L139-.L138
	.byte	1,5,29,9
	.half	.L140-.L139
	.byte	3,1,1,5,27,9
	.half	.L141-.L140
	.byte	1,5,17,9
	.half	.L142-.L141
	.byte	1,5,21,9
	.half	.L143-.L142
	.byte	3,1,1,5,33,9
	.half	.L144-.L143
	.byte	1,5,31,9
	.half	.L145-.L144
	.byte	1,5,17,9
	.half	.L146-.L145
	.byte	1,5,29,9
	.half	.L147-.L146
	.byte	3,1,1,5,27,9
	.half	.L148-.L147
	.byte	1,5,17,9
	.half	.L149-.L148
	.byte	1,5,1,9
	.half	.L150-.L149
	.byte	3,1,1,7,9
	.half	.L31-.L150
	.byte	0,1,1
.L127:
	.sdecl	'.debug_ranges',debug,cluster('DateTime_get')
	.sect	'.debug_ranges'
.L30:
	.word	-1,.L15,0,.L31-.L15,0,0
.L81:
	.word	-1,.L15,.L4-.L15,.L5-.L15,.L82-.L15,.L83-.L15,0,0
	.sdecl	'.debug_info',debug,cluster('g_DateTimeOffset')
	.sect	'.debug_info'
.L32:
	.word	204
	.half	3
	.word	.L33
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time\\Ifx_DateTime.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1,2
	.word	.L18
	.byte	3
	.byte	'g_DateTimeOffset',0,17,49,8
	.word	.L37
	.byte	1,5,3
	.word	g_DateTimeOffset
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('g_DateTimeOffset')
	.sect	'.debug_abbrev'
.L33:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_loc',debug,cluster('DateTime_get')
	.sect	'.debug_loc'
.L14:
	.word	-1,.L15,0,.L72-.L15
	.half	2
	.byte	138,0
	.word	0,0
.L73:
	.word	-1,.L15,0,.L87-.L15
	.half	1
	.byte	100
	.word	.L75-.L15,.L72-.L15
	.half	1
	.byte	111
	.word	0,0
.L85:
	.word	0,0
.L78:
	.word	0,0
.L86:
	.word	0,0
.L77:
	.word	-1,.L15,.L90-.L15,.L91-.L15
	.half	1
	.byte	95
	.word	0,0
.L79:
	.word	-1,.L15,.L88-.L15,.L89-.L15
	.half	1
	.byte	95
	.word	0,0
.L84:
	.word	-1,.L15,.L92-.L15,.L93-.L15
	.half	2
	.byte	144,33
	.word	.L93-.L15,.L87-.L15
	.half	2
	.byte	144,32
	.word	0,0
.L74:
	.word	-1,.L15,.L91-.L15,.L72-.L15
	.half	1
	.byte	82
	.word	0,0
.L80:
	.word	0,0
.L76:
	.word	-1,.L15,.L83-.L15,.L87-.L15
	.half	2
	.byte	144,34
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('DateTime_set')
	.sect	'.debug_loc'
.L16:
	.word	-1,.L17,0,.L34-.L17
	.half	2
	.byte	138,0
	.word	0,0
.L36:
	.word	-1,.L17,0,.L94-.L17
	.half	1
	.byte	100
	.word	.L40-.L17,.L95-.L17
	.half	1
	.byte	111
	.word	0,0
.L66:
	.word	0,0
.L50:
	.word	0,0
.L70:
	.word	0,0
.L45:
	.word	-1,.L17,.L98-.L17,.L99-.L17
	.half	1
	.byte	95
	.word	0,0
.L54:
	.word	-1,.L17,.L96-.L17,.L97-.L17
	.half	1
	.byte	95
	.word	0,0
.L63:
	.word	-1,.L17,.L100-.L17,.L101-.L17
	.half	2
	.byte	144,33
	.word	.L101-.L17,.L94-.L17
	.half	2
	.byte	144,32
	.word	0,0
.L38:
	.word	-1,.L17,.L94-.L17,.L102-.L17
	.half	1
	.byte	95
	.word	.L102-.L17,.L103-.L17
	.half	5
	.byte	144,32,157,32,0
	.word	.L103-.L17,.L34-.L17
	.half	1
	.byte	95
	.word	0,0
.L57:
	.word	0,0
.L43:
	.word	-1,.L17,.L61-.L17,.L94-.L17
	.half	2
	.byte	144,34
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L151:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('DateTime_get')
	.sect	'.debug_frame'
	.word	12
	.word	.L151,.L15,.L72-.L15
	.sdecl	'.debug_frame',debug,cluster('DateTime_set')
	.sect	'.debug_frame'
	.word	12
	.word	.L151,.L17,.L34-.L17

; ..\Libraries\BaseSw\Service\CpuGeneric\SysSe\Time\Ifx_DateTime.c	    74      g_DateTimeOffset = seconds;
	; Module end
