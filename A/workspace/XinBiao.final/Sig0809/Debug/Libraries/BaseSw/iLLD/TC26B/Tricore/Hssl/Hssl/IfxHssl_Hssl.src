	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 99277908"
	.compiler_invocation	"ctc --dep-file=Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\.IfxHssl_Hssl.o.d --fp-model=c,f,l,n,r,S,T,z -D__CPU__=tc26x -D__CPU_TC26X__ --core=tc1.6.x --iso=99 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\CODE -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Build -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\DataHandling -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\InternalMux -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Asc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Lin -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Spi -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Icu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmBc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmHl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Timer -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TimerWithTrigger -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TPwm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Cam -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Irq -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Dma -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Rdc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Dts -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Eray -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Phy_Pef7071 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Crc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Fft -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\IncrEnc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Pwm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Timer -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim\\In -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Pwm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Trig -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\I2c -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Driver -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Msc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Can -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Io -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Psi5 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Psi5s -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiMaster -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiSlave -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Src -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Adc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Platform -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Platform\\Tricore -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Platform\\Tricore\\Compilers -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Sfr -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Sfr\\TC26B -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Service -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Service\\CpuGeneric -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\seekfree_libraries -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\seekfree_libraries\\common -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\seekfree_peripheral -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\USER -g2 -wW557 --make-target=Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.o -t0 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O0 --default-a1-size=0 --default-a0-size=0 --source --align=0 --switch=auto --error-limit=42 -o Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.src ..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c"
	.compiler_name		"ctc"
	;source	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c'

	
$TC16X
	
	.sdecl	'.text.IfxHssl_Hssl.IfxHssl_Hssl_checkErrors',code,cluster('IfxHssl_Hssl_checkErrors')
	.sect	'.text.IfxHssl_Hssl.IfxHssl_Hssl_checkErrors'
	.align	2
	
	.global	IfxHssl_Hssl_checkErrors

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	     1  /**
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	     2   * \file IfxHssl_Hssl.c
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	     3   * \brief HSSL HSSL details
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	     4   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	     5   * \version iLLD_1_0_1_11_0
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	     6   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	     7   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	     8   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	     9   *                                 IMPORTANT NOTICE
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    10   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    11   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    12   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    13   * the company in which ordinary course of business you are acting and (ii) 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    14   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    15   * terms of use are agreed, use of this file is subject to following:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    16  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    17  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    19  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    20   * Permission is hereby granted, free of charge, to any person or 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    21   * organization obtaining a copy of the software and accompanying 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    22   * documentation covered by this license (the "Software") to use, reproduce,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    23   * display, distribute, execute, and transmit the Software, and to prepare
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    24   * derivative works of the Software, and to permit third-parties to whom the 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    25   * Software is furnished to do so, all subject to the following:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    26  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    27   * The copyright notices in the Software and this entire statement, including
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    28   * the above license grant, this restriction and the following disclaimer, must
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    29   * be included in all copies of the Software, in whole or in part, and all
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    30   * derivative works of the Software, unless such copies or derivative works are
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    31   * solely in the form of machine-executable object code generated by a source
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    32   * language processor.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    33  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    40   * DEALINGS IN THE SOFTWARE.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    41  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    42   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    43   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    44   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    45  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    46  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    47  /*----------------------------------Includes----------------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    48  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    49  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    50  #include "IfxHssl_Hssl.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    51  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    52  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    53  /*-------------------------Function Implementations---------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    54  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    55  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    56  void IfxHssl_Hssl_checkErrors(IfxHssl_Hssl *hssl)
; Function IfxHssl_Hssl_checkErrors
.L97:
IfxHssl_Hssl_checkErrors:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    57  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    58      Ifx_HSSL *hsslSFR = hssl->hssl; /* pointer to HSSL registers */
	ld.a	a15,[a4]
.L346:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    59  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    60      /* store the errors in the structure */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    61      if (hsslSFR->MFLAGS.B.NACK != 0)
	ld.bu	d15,[a15]24
	and	d15,#15
.L741:
	jeq	d15,#0,.L2
.L742:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    62      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    63          hssl->errorFlags.notAcknowledgeError = 1;
	ld.bu	d15,[a4]4
.L743:
	or	d15,#1
	st.b	[a4]4,d15
.L2:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    64      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    65  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    66      if (hsslSFR->MFLAGS.B.TTE != 0)
	ld.bu	d15,[a15]24
	extr.u	d15,d15,#4,#4
.L744:
	jeq	d15,#0,.L3
.L745:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    67      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    68          hssl->errorFlags.transactionTagError = 1;
	ld.bu	d15,[a4]4
.L746:
	or	d15,#2
	st.b	[a4]4,d15
.L3:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    69      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    70  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    71      if (hsslSFR->MFLAGS.B.TIMEOUT != 0)
	ld.bu	d15,[a15]25
	and	d15,#15
.L747:
	jeq	d15,#0,.L4
.L748:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    72      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    73          hssl->errorFlags.timeoutError = 1;
	ld.bu	d15,[a4]4
.L749:
	or	d15,#4
	st.b	[a4]4,d15
.L4:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    74      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    75  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    76      if (hsslSFR->MFLAGS.B.UNEXPECTED != 0)
	ld.bu	d15,[a15]25
	extr.u	d15,d15,#4,#4
.L750:
	jeq	d15,#0,.L5
.L751:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    77      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    78          hssl->errorFlags.unexpectedError = 1;
	ld.bu	d15,[a4]4
.L752:
	or	d15,#8
	st.b	[a4]4,d15
.L5:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    79      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    80  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    81      if (hsslSFR->MFLAGS.B.MAV != 0)
	ld.bu	d15,[a15]26
.L753:
	jz.t	d15:5,.L6
.L754:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    82      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    83          hssl->errorFlags.memoryAccessViolation = 1;
	ld.bu	d15,[a4]4
.L755:
	or	d15,#16
	st.b	[a4]4,d15
.L6:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    84      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    85  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    86      if (hsslSFR->MFLAGS.B.SRIE != 0)
	ld.bu	d15,[a15]26
.L756:
	jz.t	d15:6,.L7
.L757:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    87      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    88          hssl->errorFlags.busAccessError = 1;
	ld.bu	d15,[a4]4
.L758:
	or	d15,#32
	st.b	[a4]4,d15
.L7:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    89      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    90  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    91      if (hsslSFR->MFLAGS.B.PIE1 != 0)
	ld.bu	d15,[a15]26
.L759:
	jz.t	d15:7,.L8
.L760:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    92      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    93          hssl->errorFlags.channelNumberCodeError = 1;
	ld.bu	d15,[a4]4
.L761:
	or	d15,#64
	st.b	[a4]4,d15
.L8:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    94      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    95  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    96      if (hsslSFR->MFLAGS.B.PIE2 != 0)
	ld.bu	d15,[a15]27
.L762:
	jz.t	d15:0,.L9
.L763:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    97      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    98          hssl->errorFlags.dataLengthError = 1;
	ld.bu	d15,[a4]4
.L764:
	or	d15,#128
	st.b	[a4]4,d15
.L9:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    99      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   100  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   101      if (hsslSFR->MFLAGS.B.CRCE != 0)
	ld.bu	d15,[a15]27
.L765:
	jz.t	d15:1,.L10
.L766:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   102      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   103          hssl->errorFlags.crcError = 1;
	ld.bu	d15,[a4]5
.L767:
	or	d15,#1
	st.b	[a4]5,d15
.L10:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   104      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   105  }
	ret
.L312:
	
__IfxHssl_Hssl_checkErrors_function_end:
	.size	IfxHssl_Hssl_checkErrors,__IfxHssl_Hssl_checkErrors_function_end-IfxHssl_Hssl_checkErrors
.L191:
	; End of function
	
	.sdecl	'.text.IfxHssl_Hssl.IfxHssl_Hssl_clearErrorFlags',code,cluster('IfxHssl_Hssl_clearErrorFlags')
	.sect	'.text.IfxHssl_Hssl.IfxHssl_Hssl_clearErrorFlags'
	.align	2
	
	.global	IfxHssl_Hssl_clearErrorFlags

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   106  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   107  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   108  void IfxHssl_Hssl_clearErrorFlags(IfxHssl_Hssl *hssl)
; Function IfxHssl_Hssl_clearErrorFlags
.L99:
IfxHssl_Hssl_clearErrorFlags:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   109  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   110      hssl->errorFlags.notAcknowledgeError    = 0;
	ld.bu	d15,[a4]4
.L772:
	insert	d15,d15,#0,#0,#1
	st.b	[a4]4,d15
.L773:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   111      hssl->errorFlags.transactionTagError    = 0;
	ld.bu	d15,[a4]4
.L774:
	insert	d15,d15,#0,#1,#1
	st.b	[a4]4,d15
.L775:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   112      hssl->errorFlags.timeoutError           = 0;
	ld.bu	d15,[a4]4
.L776:
	insert	d15,d15,#0,#2,#1
	st.b	[a4]4,d15
.L777:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   113      hssl->errorFlags.unexpectedError        = 0;
	ld.bu	d15,[a4]4
.L778:
	insert	d15,d15,#0,#3,#1
	st.b	[a4]4,d15
.L779:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   114      hssl->errorFlags.memoryAccessViolation  = 0;
	ld.bu	d15,[a4]4
.L780:
	insert	d15,d15,#0,#4,#1
	st.b	[a4]4,d15
.L781:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   115      hssl->errorFlags.busAccessError         = 0;
	ld.bu	d15,[a4]4
.L782:
	insert	d15,d15,#0,#5,#1
	st.b	[a4]4,d15
.L783:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   116      hssl->errorFlags.channelNumberCodeError = 0;
	ld.bu	d15,[a4]4
.L784:
	insert	d15,d15,#0,#6,#1
	st.b	[a4]4,d15
.L785:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   117      hssl->errorFlags.dataLengthError        = 0;
	ld.bu	d15,[a4]4
.L786:
	insert	d15,d15,#0,#7,#1
	st.b	[a4]4,d15
.L787:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   118      hssl->errorFlags.crcError               = 0;
	ld.bu	d15,[a4]5
.L788:
	insert	d15,d15,#0,#0,#1
	st.b	[a4]5,d15
.L789:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   119  }
	ret
.L315:
	
__IfxHssl_Hssl_clearErrorFlags_function_end:
	.size	IfxHssl_Hssl_clearErrorFlags,__IfxHssl_Hssl_clearErrorFlags_function_end-IfxHssl_Hssl_clearErrorFlags
.L196:
	; End of function
	
	.sdecl	'.text.IfxHssl_Hssl.IfxHssl_Hssl_delay',code,cluster('IfxHssl_Hssl_delay')
	.sect	'.text.IfxHssl_Hssl.IfxHssl_Hssl_delay'
	.align	2
	
	.global	IfxHssl_Hssl_delay

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   120  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   121  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   122  void IfxHssl_Hssl_delay(IfxHssl_Hsct *hsct)
; Function IfxHssl_Hssl_delay
.L101:
IfxHssl_Hssl_delay:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   123  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   124      uint32 i;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   125      IFX_UNUSED_PARAMETER(hsct);
	jz.a	a4,.L11
.L11:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   126  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   127      for (i = 0; i < 8000; i++)
	mov	d15,#0
.L347:
	j	.L12
.L13:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   128      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   129          __nop();
	nop
.L794:
	add	d15,#1
.L12:
	mov	d0,#8000
.L795:
	jlt.u	d15,d0,.L13
.L796:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   130      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   131  }
	ret
.L317:
	
__IfxHssl_Hssl_delay_function_end:
	.size	IfxHssl_Hssl_delay,__IfxHssl_Hssl_delay_function_end-IfxHssl_Hssl_delay
.L201:
	; End of function
	
	.sdecl	'.text.IfxHssl_Hssl.IfxHssl_Hssl_initChannel',code,cluster('IfxHssl_Hssl_initChannel')
	.sect	'.text.IfxHssl_Hssl.IfxHssl_Hssl_initChannel'
	.align	2
	
	.global	IfxHssl_Hssl_initChannel

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   132  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   133  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   134  void IfxHssl_Hssl_initChannel(IfxHssl_Hssl_Channel *channel, const IfxHssl_Hssl_ChannelConfig *channelConfig)
; Function IfxHssl_Hssl_initChannel
.L103:
IfxHssl_Hssl_initChannel:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   135  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   136      channel->hssl                = channelConfig->hssl;                /* adding HSSL register pointer to channel handle */
	ld.a	a15,[a5]
.L618:
	st.a	[a4],a15
.L619:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   137      channel->hsct                = channelConfig->hsct;                /* adding HSCT register pointer to channel handle */
	ld.a	a15,[a5]4
.L620:
	st.a	[a4]4,a15
.L621:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   138  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   139      channel->channelId           = channelConfig->channelId;           /* adding channel id to channel handle */
	ld.bu	d15,[a5]8
.L622:
	st.b	[a4]8,d15
.L623:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   140      channel->currentFrameRequest = IfxHssl_Hssl_FrameRequest_noAction; /* default request, no action */
	mov	d15,#5
.L624:
	st.b	[a4]9,d15
.L625:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   141  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   142      channel->streamingModeOn     = FALSE;                              /* command mode (used in waitAcknowledge function) */
	mov	d15,#0
.L626:
	st.b	[a4]12,d15
.L627:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   143      channel->streamingMode       = channelConfig->streamingMode;       /* adding streaming mode to channel handle */
	ld.bu	d15,[a5]9
.L628:
	st.b	[a4]10,d15
.L629:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   144      channel->loopBack            = channelConfig->loopBack;            /* adding loopback selection to channel handle */
	ld.bu	d15,[a5]10
.L630:
	st.b	[a4]11,d15
.L631:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   145  }
	ret
.L266:
	
__IfxHssl_Hssl_initChannel_function_end:
	.size	IfxHssl_Hssl_initChannel,__IfxHssl_Hssl_initChannel_function_end-IfxHssl_Hssl_initChannel
.L156:
	; End of function
	
	.sdecl	'.text.IfxHssl_Hssl.IfxHssl_Hssl_initChannelConfig',code,cluster('IfxHssl_Hssl_initChannelConfig')
	.sect	'.text.IfxHssl_Hssl.IfxHssl_Hssl_initChannelConfig'
	.align	2
	
	.global	IfxHssl_Hssl_initChannelConfig

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   146  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   147  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   148  void IfxHssl_Hssl_initChannelConfig(IfxHssl_Hssl_ChannelConfig *channelConfig, IfxHssl_Hssl *hssl, IfxHssl_Hsct *hsct)
; Function IfxHssl_Hssl_initChannelConfig
.L105:
IfxHssl_Hssl_initChannelConfig:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   149  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   150      channelConfig->hssl          = hssl->hssl;
	ld.a	a15,[a5]
.L636:
	st.a	[a4],a15
.L637:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   151      channelConfig->hsct          = hsct->hsct;
	ld.a	a15,[a6]
.L638:
	st.a	[a4]4,a15
.L639:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   152  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   153      channelConfig->channelId     = IfxHssl_ChannelId_0;          /* default channel 0 */
	mov	d15,#0
.L640:
	st.b	[a4]8,d15
.L641:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   154      channelConfig->streamingMode = IfxHssl_StreamingMode_single; /* default streaming mode continuous */
	mov	d15,#1
.L642:
	st.b	[a4]9,d15
.L643:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   155      channelConfig->loopBack      = hsct->loopBack;
	ld.bu	d15,[a6]4
.L644:
	st.b	[a4]10,d15
.L645:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   156      hssl->loopBack               = hsct->loopBack;               /* copy to hssl handle, used in trasfer apis */
	ld.bu	d15,[a6]4
.L646:
	st.b	[a5]6,d15
.L647:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   157  }
	ret
.L271:
	
__IfxHssl_Hssl_initChannelConfig_function_end:
	.size	IfxHssl_Hssl_initChannelConfig,__IfxHssl_Hssl_initChannelConfig_function_end-IfxHssl_Hssl_initChannelConfig
.L161:
	; End of function
	
	.sdecl	'.text.IfxHssl_Hssl.IfxHssl_Hssl_initHsctModule',code,cluster('IfxHssl_Hssl_initHsctModule')
	.sect	'.text.IfxHssl_Hssl.IfxHssl_Hssl_initHsctModule'
	.align	2
	
	.global	IfxHssl_Hssl_initHsctModule

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   158  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   159  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   160  void IfxHssl_Hssl_initHsctModule(IfxHssl_Hsct *hsct, const IfxHssl_Hsct_Config *config)
; Function IfxHssl_Hssl_initHsctModule
.L107:
IfxHssl_Hssl_initHsctModule:	.type	func
	mov.aa	a15,a5
.L349:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   161  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   162      Ifx_HSCT *hsctSFR = config->hsct;   /* pointer to HSCT registers */
	ld.a	a12,[a15]
.L350:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   163  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   164      hsct->hsct     = hsctSFR;           /* adding HSCT register pointer to module handle */
	st.a	[a4],a12
.L465:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   165      hsct->loopBack = config->loopBack;  /* adding loopback selection to module handle */
	ld.bu	d15,[a15]6
.L466:
	st.b	[a4]4,d15
.L467:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   166  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   167  #ifndef IFXHSSL_HSCT_DISABLE_PINCONFIG
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   168      /* Pad initialisiation */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   169      IfxPort_setPinModeInput(&MODULE_P21, 2, IfxPort_InputMode_noPullDevice);                          /* RXDN */
	movh.a	a4,#61444
.L348:
	lea	a4,[a4]@los(0xf003c100)
.L468:
	mov	d4,#2
.L469:
	mov	d5,#0
.L220:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    45   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    46   * \defgroup IfxLld_Port_Std_Enum Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    47   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    48   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    49   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    50   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    51   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    52   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    53   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    54   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    55  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    56  #ifndef IFXPORT_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    57  #define IFXPORT_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    58  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    59  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    60  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    61  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    62  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    63  #include "_Impl/IfxPort_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    64  #include "Scu/Std/IfxScuWdt.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    65  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    66  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    67  /*--------------------------------Enumerations--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    68  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    69  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    70  /** \addtogroup IfxLld_Port_Std_Enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    71   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    72  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    73   * HSCT module.declared in MODULE_PORTx.LPCRx
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    74   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    76  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    77      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    78      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    79  } IfxPort_ControlledBy;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    80  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    81  /** \brief Ifx_P output modification modes definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    82   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    83  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    84  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    85      IfxPort_InputMode_undefined    = -1,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    86      IfxPort_InputMode_noPullDevice = 0 << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    87          IfxPort_InputMode_pullDown = 1U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    88          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    89  } IfxPort_InputMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    90  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    91  /** \brief Ifx_P input / output mode definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    92   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    93   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    94   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    95  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    96  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    97      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    98      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    99      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   100      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   101      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   102      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   103      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   104      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   105      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   106      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   107      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   108      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   109      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   110      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   111      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   112      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   113      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   114      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   115      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   116  } IfxPort_Mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   117  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   118  /** \brief Pin output alternate index
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   119   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   120  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   121  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   122      IfxPort_OutputIdx_general  = 0x10U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   123          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   124          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   125          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   126          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   127          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   128          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   129          IfxPort_OutputIdx_alt7 = 0x17U << 3
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   130  } IfxPort_OutputIdx;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   131  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   132  /** \brief Pin output mode definition
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   133   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   134  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   135  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   136      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   137          IfxPort_OutputMode_openDrain = 0x18U << 3
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_OutputMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   139  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   140  /** \brief Pad driver mode definition (strength and slew rate).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   141   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   142   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   143   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   144  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   145  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   146      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   147      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   148      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   149      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   150      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   151      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   152      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   153      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   154      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   155      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   156      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   157      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_PadDriver;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   159  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   160  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   161   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   162  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   163  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   164      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   165      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   166  } IfxPort_PadSupply;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   167  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   168  /** \brief Ifx_P output modification modes definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   169   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   170   * \see Ifx_P.OMR, IfxPort_setPinState()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   171   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   172  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   173  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   174      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   175      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   176      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   177      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   178  } IfxPort_State;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   179  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   180  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   181  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   182  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   183  /*-----------------------------Data Structures--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   184  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   185  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   186  /** \addtogroup IfxLld_Port_Std_DataStructures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   187   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   188  /** \brief Defines a pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   189   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   190  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   191  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   192      Ifx_P *port;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   193      uint8  pinIndex;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   194  } IfxPort_Pin;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   195  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   196  /** \brief To configure pins
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   197   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   198  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   199  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   200      Ifx_P            *port;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   201      uint8             pinIndex;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   202      IfxPort_OutputIdx mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   203      IfxPort_PadDriver padDriver;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   204  } IfxPort_Pin_Config;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   205  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   206  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   207  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   208  /** \addtogroup IfxLld_Port_Std_SinglePin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   209   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   210  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   211  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   212  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   213  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   214  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   215  /** \brief Return the port state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   216   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   217   * \param pinIndex Specifies the pin for which the state should be returned.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   218   * \return Returns TRUE the pin is high; FALSE the pin is low
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   219   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   220   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   221   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   222   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   223   *      // ...
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   224   *    }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   225   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   226   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   227   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   228  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   229  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   230  /** \brief Set the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   231   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   232   * \param pinIndex Specifies the pin to be set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   233   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   234   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   235   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   236   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   237   * IfxPort_setPinHigh(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   238   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   239   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   240   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   241   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   242   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   243  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   244  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   245  /** \brief Reset the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   246   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   247   * \param pinIndex Specifies the pin to be reset.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   248   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   249   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   250   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   251   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   252   * IfxPort_setPinLow(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   253   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   254   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   255   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   256   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   257   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   258  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   259  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   260  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   261   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   262   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   263   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   264   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   265   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   266   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   267   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   268   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   269   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   270   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   271   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   272  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   273  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   274  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   275   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   276   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   277   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   278   * \param index Specifies the alternate (or general purpose) output channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   279   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   280   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   281   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   282   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   283   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   284   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   285   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   286   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   287  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   288  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   289  /** \brief Set / Resets / Toggle the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   290   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   291   * \param pinIndex Specifies the pin to modify.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   292   * \param action Specifies the action: set, reset, toggle.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   293   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   294   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   295   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   296   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   297   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   298   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   299   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   300   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   301   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   302   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   303  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   304  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   305  /** \brief Toggle the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin to be toggled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   308   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   309   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   311   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   312   * IfxPort_togglePin(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   313   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   314   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   315   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   316   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   317   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   318  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   319  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   320  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   321  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   322  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   323  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   324  /** \brief Disable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   325   * This function disables the emergency stop function. A check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   326   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   327   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   328   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   329   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   330   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   331   * /code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   332   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   333   *     {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   334   *         // failed to disable emergency stop for P33.0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   335   *     }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   336   * /endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   337   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   338   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   339   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   340   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   341  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   342  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   343  /** \brief Enable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   344   * This function enables the emergency stop function. A check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   345   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   346   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   347   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   348   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   350   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   351   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   352   *       // failed to enable emergency stop for P33.0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   353   *     }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   354   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   355   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   356   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   357   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   358   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   359  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   360  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   361  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   362   * Also Configures the P40/P41 Port for digital functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   363   * which bydefault support analog functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   364   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   365   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   366   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   367   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   368   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   369   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   370   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   371   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   372   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   373   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   374   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   375  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   376  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   377  /** \brief Configure the pad driver mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   378   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   379   * \param pinIndex Specifies the pin for which the mode will be set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   380   * \param padDriver Specifies the driver mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   381   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   382   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   383   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   384   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   385   * // enable strong 3.3V driver
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   386   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   387   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   388   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   389   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   390  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   391  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   392  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   393  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   394  /** \addtogroup IfxLld_Port_Std_PortGroup
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   395   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   397  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   398  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   399  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   400  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   401  /** \brief Return the port group state
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   402   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   403   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   404   * \param mask selects the pins which should be read (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   405   * \return Returns the selected pin values
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   406   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   407   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   408   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   409   * // read the current value of P33[7:0]
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   410   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   411   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   412   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   413   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   414  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   415  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   416  /** \brief Set the port group state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   417   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   418   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   419   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   420   * \param data specifies the value which should be set
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   421   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   422   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   423   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   424   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   425   * // configure P33.[7:0] as GPIO outputs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   426   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   427   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   428   * // set initial value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   429   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   430   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   431   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   432   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   433  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   434  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   435  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   436  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   437  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   438  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   439  /** \brief Returns the module address of the selected Port module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   440   * \param port Pointer to PORT module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   441   * \return PORT module register address
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   442   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   443  IFX_EXTERN Ifx_P *IfxPort_getAddress(IfxPort_Index port);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   444  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   445  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   446   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   447   * \return port index of IfxModule_IndexMap. return -1 in case of unknown port index.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   448   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   449  IFX_EXTERN IfxPort_Index IfxPort_getIndex(Ifx_P *port);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   450  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   451  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   452   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   453   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   454   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   455   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   456   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   457   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   458   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   459   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   460   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   461   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   462   *  \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   463   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   464   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   465  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   466  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   467  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   468   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   469   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   470   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   471   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   472   * \param index Specifies the alternate (or general purpose) output channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   473   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   474   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   475   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   476   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   477   * // configure P33.[7:0] as GPIO outputs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   478   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   479   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   480   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   481   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   482  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   483  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   484  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   485   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   486   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   487   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   488   * \param padDriver Specifies the pad driver strength.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   489   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   490   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   491   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   492   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   493   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   494   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   495   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   496   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   497   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   498  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   499  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   500  /** \brief set LVDSH mode (configured for Port21)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   501   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   502   * \param pinIndex specifies pin  to be modified
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   503   * \param mode specifes the mode of pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   504   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   505   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   506   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   508  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   509  /** \brief set LVDSM mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   510   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   511   * \param pinIndex specifies pin to be modified
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   512   * \param lvdsPadDriver select speed grade of LVDS Pad
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   513   * \param padSupply select the PAD supply (5/3.3V)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   514   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   515   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   516  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   517  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   518  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   519  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   521  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   523  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   524  /** \brief Disable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   525   * This function disables the emergency stop function. No check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   526   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   527   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   528   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   529   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   530   * \see IfxPort_disableEmergencyStop()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   531   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   532   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   533  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   534  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   535  /** \brief Enable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   536   * This function enables the emergency stop function. No check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   537   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   538   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   539   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   540   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   541   * \see IfxPort_enableEmergencyStop()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   542   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   543   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   544  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   545  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   546  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   547  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   548  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   549  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   550  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   551  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   552      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   553  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   554  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   555  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   556  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   557  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   558      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   559  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   560  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   561  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   562  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   563  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   564      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   565  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   566  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   567  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   568  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   569  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   570      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   571  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   572  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   573  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   574  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   575  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   576      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   577  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   578  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   579  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   580  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   581  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   582      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
	call	IfxPort_setPinMode
.L221:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   170  fxPort_InputMode_noPullDevice);                          /* RXDP */
	movh.a	a4,#61444
	lea	a4,[a4]@los(0xf003c100)
.L470:
	mov	d4,#3
.L471:
	mov	d5,#0
.L229:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    45   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    46   * \defgroup IfxLld_Port_Std_Enum Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    47   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    48   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    49   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    50   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    51   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    52   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    53   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    54   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    55  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    56  #ifndef IFXPORT_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    57  #define IFXPORT_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    58  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    59  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    60  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    61  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    62  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    63  #include "_Impl/IfxPort_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    64  #include "Scu/Std/IfxScuWdt.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    65  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    66  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    67  /*--------------------------------Enumerations--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    68  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    69  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    70  /** \addtogroup IfxLld_Port_Std_Enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    71   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    72  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    73   * HSCT module.declared in MODULE_PORTx.LPCRx
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    74   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    76  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    77      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    78      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    79  } IfxPort_ControlledBy;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    80  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    81  /** \brief Ifx_P output modification modes definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    82   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    83  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    84  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    85      IfxPort_InputMode_undefined    = -1,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    86      IfxPort_InputMode_noPullDevice = 0 << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    87          IfxPort_InputMode_pullDown = 1U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    88          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    89  } IfxPort_InputMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    90  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    91  /** \brief Ifx_P input / output mode definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    92   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    93   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    94   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    95  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    96  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    97      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    98      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    99      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   100      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   101      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   102      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   103      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   104      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   105      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   106      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   107      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   108      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   109      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   110      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   111      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   112      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   113      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   114      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   115      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   116  } IfxPort_Mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   117  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   118  /** \brief Pin output alternate index
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   119   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   120  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   121  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   122      IfxPort_OutputIdx_general  = 0x10U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   123          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   124          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   125          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   126          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   127          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   128          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   129          IfxPort_OutputIdx_alt7 = 0x17U << 3
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   130  } IfxPort_OutputIdx;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   131  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   132  /** \brief Pin output mode definition
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   133   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   134  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   135  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   136      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   137          IfxPort_OutputMode_openDrain = 0x18U << 3
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_OutputMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   139  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   140  /** \brief Pad driver mode definition (strength and slew rate).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   141   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   142   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   143   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   144  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   145  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   146      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   147      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   148      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   149      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   150      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   151      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   152      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   153      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   154      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   155      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   156      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   157      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_PadDriver;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   159  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   160  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   161   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   162  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   163  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   164      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   165      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   166  } IfxPort_PadSupply;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   167  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   168  /** \brief Ifx_P output modification modes definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   169   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   170   * \see Ifx_P.OMR, IfxPort_setPinState()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   171   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   172  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   173  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   174      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   175      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   176      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   177      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   178  } IfxPort_State;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   179  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   180  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   181  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   182  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   183  /*-----------------------------Data Structures--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   184  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   185  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   186  /** \addtogroup IfxLld_Port_Std_DataStructures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   187   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   188  /** \brief Defines a pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   189   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   190  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   191  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   192      Ifx_P *port;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   193      uint8  pinIndex;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   194  } IfxPort_Pin;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   195  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   196  /** \brief To configure pins
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   197   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   198  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   199  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   200      Ifx_P            *port;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   201      uint8             pinIndex;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   202      IfxPort_OutputIdx mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   203      IfxPort_PadDriver padDriver;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   204  } IfxPort_Pin_Config;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   205  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   206  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   207  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   208  /** \addtogroup IfxLld_Port_Std_SinglePin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   209   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   210  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   211  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   212  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   213  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   214  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   215  /** \brief Return the port state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   216   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   217   * \param pinIndex Specifies the pin for which the state should be returned.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   218   * \return Returns TRUE the pin is high; FALSE the pin is low
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   219   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   220   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   221   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   222   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   223   *      // ...
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   224   *    }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   225   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   226   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   227   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   228  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   229  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   230  /** \brief Set the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   231   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   232   * \param pinIndex Specifies the pin to be set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   233   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   234   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   235   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   236   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   237   * IfxPort_setPinHigh(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   238   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   239   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   240   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   241   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   242   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   243  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   244  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   245  /** \brief Reset the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   246   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   247   * \param pinIndex Specifies the pin to be reset.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   248   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   249   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   250   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   251   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   252   * IfxPort_setPinLow(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   253   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   254   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   255   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   256   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   257   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   258  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   259  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   260  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   261   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   262   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   263   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   264   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   265   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   266   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   267   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   268   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   269   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   270   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   271   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   272  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   273  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   274  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   275   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   276   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   277   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   278   * \param index Specifies the alternate (or general purpose) output channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   279   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   280   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   281   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   282   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   283   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   284   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   285   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   286   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   287  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   288  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   289  /** \brief Set / Resets / Toggle the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   290   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   291   * \param pinIndex Specifies the pin to modify.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   292   * \param action Specifies the action: set, reset, toggle.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   293   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   294   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   295   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   296   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   297   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   298   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   299   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   300   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   301   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   302   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   303  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   304  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   305  /** \brief Toggle the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin to be toggled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   308   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   309   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   311   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   312   * IfxPort_togglePin(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   313   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   314   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   315   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   316   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   317   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   318  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   319  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   320  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   321  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   322  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   323  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   324  /** \brief Disable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   325   * This function disables the emergency stop function. A check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   326   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   327   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   328   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   329   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   330   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   331   * /code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   332   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   333   *     {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   334   *         // failed to disable emergency stop for P33.0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   335   *     }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   336   * /endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   337   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   338   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   339   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   340   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   341  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   342  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   343  /** \brief Enable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   344   * This function enables the emergency stop function. A check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   345   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   346   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   347   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   348   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   350   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   351   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   352   *       // failed to enable emergency stop for P33.0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   353   *     }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   354   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   355   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   356   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   357   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   358   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   359  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   360  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   361  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   362   * Also Configures the P40/P41 Port for digital functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   363   * which bydefault support analog functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   364   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   365   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   366   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   367   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   368   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   369   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   370   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   371   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   372   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   373   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   374   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   375  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   376  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   377  /** \brief Configure the pad driver mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   378   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   379   * \param pinIndex Specifies the pin for which the mode will be set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   380   * \param padDriver Specifies the driver mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   381   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   382   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   383   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   384   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   385   * // enable strong 3.3V driver
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   386   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   387   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   388   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   389   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   390  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   391  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   392  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   393  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   394  /** \addtogroup IfxLld_Port_Std_PortGroup
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   395   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   397  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   398  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   399  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   400  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   401  /** \brief Return the port group state
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   402   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   403   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   404   * \param mask selects the pins which should be read (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   405   * \return Returns the selected pin values
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   406   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   407   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   408   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   409   * // read the current value of P33[7:0]
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   410   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   411   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   412   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   413   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   414  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   415  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   416  /** \brief Set the port group state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   417   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   418   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   419   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   420   * \param data specifies the value which should be set
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   421   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   422   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   423   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   424   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   425   * // configure P33.[7:0] as GPIO outputs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   426   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   427   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   428   * // set initial value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   429   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   430   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   431   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   432   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   433  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   434  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   435  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   436  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   437  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   438  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   439  /** \brief Returns the module address of the selected Port module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   440   * \param port Pointer to PORT module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   441   * \return PORT module register address
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   442   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   443  IFX_EXTERN Ifx_P *IfxPort_getAddress(IfxPort_Index port);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   444  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   445  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   446   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   447   * \return port index of IfxModule_IndexMap. return -1 in case of unknown port index.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   448   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   449  IFX_EXTERN IfxPort_Index IfxPort_getIndex(Ifx_P *port);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   450  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   451  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   452   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   453   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   454   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   455   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   456   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   457   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   458   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   459   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   460   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   461   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   462   *  \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   463   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   464   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   465  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   466  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   467  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   468   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   469   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   470   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   471   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   472   * \param index Specifies the alternate (or general purpose) output channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   473   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   474   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   475   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   476   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   477   * // configure P33.[7:0] as GPIO outputs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   478   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   479   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   480   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   481   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   482  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   483  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   484  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   485   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   486   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   487   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   488   * \param padDriver Specifies the pad driver strength.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   489   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   490   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   491   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   492   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   493   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   494   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   495   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   496   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   497   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   498  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   499  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   500  /** \brief set LVDSH mode (configured for Port21)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   501   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   502   * \param pinIndex specifies pin  to be modified
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   503   * \param mode specifes the mode of pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   504   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   505   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   506   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   508  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   509  /** \brief set LVDSM mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   510   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   511   * \param pinIndex specifies pin to be modified
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   512   * \param lvdsPadDriver select speed grade of LVDS Pad
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   513   * \param padSupply select the PAD supply (5/3.3V)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   514   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   515   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   516  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   517  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   518  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   519  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   521  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   523  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   524  /** \brief Disable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   525   * This function disables the emergency stop function. No check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   526   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   527   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   528   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   529   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   530   * \see IfxPort_disableEmergencyStop()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   531   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   532   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   533  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   534  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   535  /** \brief Enable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   536   * This function enables the emergency stop function. No check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   537   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   538   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   539   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   540   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   541   * \see IfxPort_enableEmergencyStop()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   542   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   543   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   544  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   545  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   546  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   547  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   548  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   549  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   550  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   551  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   552      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   553  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   554  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   555  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   556  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   557  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   558      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   559  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   560  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   561  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   562  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   563  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   564      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   565  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   566  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   567  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   568  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   569  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   570      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   571  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   572  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   573  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   574  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   575  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   576      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   577  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   578  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   579  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   580  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   581  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   582      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
	call	IfxPort_setPinMode
.L230:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   171     IfxPort_setPinModeOutput(&MODULE_P21, 4, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general); /* TXDN */
	movh.a	a4,#61444
	lea	a4,[a4]@los(0xf003c100)
.L472:
	mov	d4,#4
.L473:
	mov	d15,#128
.L474:
	mov	d5,#128
.L232:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    45   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    46   * \defgroup IfxLld_Port_Std_Enum Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    47   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    48   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    49   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    50   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    51   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    52   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    53   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    54   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    55  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    56  #ifndef IFXPORT_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    57  #define IFXPORT_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    58  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    59  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    60  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    61  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    62  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    63  #include "_Impl/IfxPort_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    64  #include "Scu/Std/IfxScuWdt.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    65  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    66  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    67  /*--------------------------------Enumerations--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    68  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    69  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    70  /** \addtogroup IfxLld_Port_Std_Enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    71   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    72  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    73   * HSCT module.declared in MODULE_PORTx.LPCRx
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    74   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    76  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    77      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    78      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    79  } IfxPort_ControlledBy;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    80  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    81  /** \brief Ifx_P output modification modes definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    82   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    83  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    84  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    85      IfxPort_InputMode_undefined    = -1,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    86      IfxPort_InputMode_noPullDevice = 0 << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    87          IfxPort_InputMode_pullDown = 1U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    88          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    89  } IfxPort_InputMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    90  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    91  /** \brief Ifx_P input / output mode definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    92   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    93   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    94   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    95  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    96  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    97      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    98      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    99      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   100      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   101      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   102      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   103      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   104      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   105      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   106      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   107      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   108      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   109      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   110      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   111      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   112      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   113      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   114      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   115      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   116  } IfxPort_Mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   117  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   118  /** \brief Pin output alternate index
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   119   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   120  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   121  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   122      IfxPort_OutputIdx_general  = 0x10U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   123          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   124          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   125          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   126          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   127          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   128          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   129          IfxPort_OutputIdx_alt7 = 0x17U << 3
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   130  } IfxPort_OutputIdx;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   131  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   132  /** \brief Pin output mode definition
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   133   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   134  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   135  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   136      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   137          IfxPort_OutputMode_openDrain = 0x18U << 3
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_OutputMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   139  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   140  /** \brief Pad driver mode definition (strength and slew rate).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   141   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   142   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   143   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   144  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   145  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   146      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   147      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   148      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   149      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   150      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   151      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   152      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   153      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   154      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   155      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   156      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   157      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_PadDriver;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   159  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   160  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   161   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   162  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   163  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   164      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   165      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   166  } IfxPort_PadSupply;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   167  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   168  /** \brief Ifx_P output modification modes definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   169   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   170   * \see Ifx_P.OMR, IfxPort_setPinState()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   171   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   172  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   173  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   174      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   175      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   176      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   177      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   178  } IfxPort_State;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   179  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   180  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   181  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   182  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   183  /*-----------------------------Data Structures--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   184  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   185  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   186  /** \addtogroup IfxLld_Port_Std_DataStructures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   187   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   188  /** \brief Defines a pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   189   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   190  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   191  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   192      Ifx_P *port;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   193      uint8  pinIndex;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   194  } IfxPort_Pin;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   195  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   196  /** \brief To configure pins
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   197   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   198  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   199  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   200      Ifx_P            *port;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   201      uint8             pinIndex;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   202      IfxPort_OutputIdx mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   203      IfxPort_PadDriver padDriver;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   204  } IfxPort_Pin_Config;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   205  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   206  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   207  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   208  /** \addtogroup IfxLld_Port_Std_SinglePin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   209   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   210  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   211  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   212  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   213  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   214  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   215  /** \brief Return the port state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   216   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   217   * \param pinIndex Specifies the pin for which the state should be returned.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   218   * \return Returns TRUE the pin is high; FALSE the pin is low
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   219   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   220   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   221   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   222   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   223   *      // ...
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   224   *    }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   225   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   226   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   227   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   228  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   229  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   230  /** \brief Set the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   231   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   232   * \param pinIndex Specifies the pin to be set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   233   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   234   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   235   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   236   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   237   * IfxPort_setPinHigh(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   238   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   239   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   240   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   241   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   242   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   243  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   244  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   245  /** \brief Reset the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   246   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   247   * \param pinIndex Specifies the pin to be reset.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   248   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   249   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   250   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   251   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   252   * IfxPort_setPinLow(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   253   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   254   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   255   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   256   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   257   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   258  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   259  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   260  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   261   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   262   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   263   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   264   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   265   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   266   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   267   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   268   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   269   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   270   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   271   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   272  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   273  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   274  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   275   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   276   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   277   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   278   * \param index Specifies the alternate (or general purpose) output channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   279   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   280   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   281   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   282   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   283   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   284   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   285   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   286   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   287  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   288  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   289  /** \brief Set / Resets / Toggle the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   290   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   291   * \param pinIndex Specifies the pin to modify.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   292   * \param action Specifies the action: set, reset, toggle.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   293   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   294   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   295   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   296   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   297   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   298   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   299   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   300   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   301   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   302   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   303  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   304  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   305  /** \brief Toggle the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin to be toggled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   308   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   309   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   311   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   312   * IfxPort_togglePin(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   313   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   314   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   315   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   316   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   317   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   318  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   319  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   320  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   321  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   322  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   323  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   324  /** \brief Disable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   325   * This function disables the emergency stop function. A check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   326   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   327   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   328   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   329   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   330   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   331   * /code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   332   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   333   *     {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   334   *         // failed to disable emergency stop for P33.0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   335   *     }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   336   * /endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   337   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   338   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   339   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   340   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   341  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   342  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   343  /** \brief Enable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   344   * This function enables the emergency stop function. A check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   345   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   346   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   347   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   348   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   350   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   351   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   352   *       // failed to enable emergency stop for P33.0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   353   *     }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   354   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   355   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   356   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   357   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   358   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   359  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   360  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   361  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   362   * Also Configures the P40/P41 Port for digital functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   363   * which bydefault support analog functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   364   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   365   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   366   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   367   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   368   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   369   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   370   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   371   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   372   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   373   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   374   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   375  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   376  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   377  /** \brief Configure the pad driver mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   378   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   379   * \param pinIndex Specifies the pin for which the mode will be set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   380   * \param padDriver Specifies the driver mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   381   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   382   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   383   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   384   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   385   * // enable strong 3.3V driver
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   386   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   387   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   388   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   389   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   390  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   391  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   392  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   393  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   394  /** \addtogroup IfxLld_Port_Std_PortGroup
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   395   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   397  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   398  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   399  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   400  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   401  /** \brief Return the port group state
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   402   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   403   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   404   * \param mask selects the pins which should be read (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   405   * \return Returns the selected pin values
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   406   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   407   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   408   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   409   * // read the current value of P33[7:0]
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   410   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   411   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   412   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   413   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   414  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   415  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   416  /** \brief Set the port group state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   417   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   418   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   419   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   420   * \param data specifies the value which should be set
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   421   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   422   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   423   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   424   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   425   * // configure P33.[7:0] as GPIO outputs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   426   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   427   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   428   * // set initial value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   429   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   430   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   431   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   432   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   433  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   434  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   435  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   436  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   437  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   438  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   439  /** \brief Returns the module address of the selected Port module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   440   * \param port Pointer to PORT module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   441   * \return PORT module register address
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   442   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   443  IFX_EXTERN Ifx_P *IfxPort_getAddress(IfxPort_Index port);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   444  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   445  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   446   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   447   * \return port index of IfxModule_IndexMap. return -1 in case of unknown port index.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   448   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   449  IFX_EXTERN IfxPort_Index IfxPort_getIndex(Ifx_P *port);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   450  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   451  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   452   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   453   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   454   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   455   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   456   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   457   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   458   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   459   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   460   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   461   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   462   *  \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   463   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   464   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   465  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   466  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   467  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   468   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   469   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   470   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   471   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   472   * \param index Specifies the alternate (or general purpose) output channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   473   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   474   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   475   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   476   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   477   * // configure P33.[7:0] as GPIO outputs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   478   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   479   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   480   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   481   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   482  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   483  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   484  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   485   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   486   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   487   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   488   * \param padDriver Specifies the pad driver strength.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   489   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   490   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   491   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   492   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   493   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   494   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   495   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   496   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   497   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   498  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   499  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   500  /** \brief set LVDSH mode (configured for Port21)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   501   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   502   * \param pinIndex specifies pin  to be modified
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   503   * \param mode specifes the mode of pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   504   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   505   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   506   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   508  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   509  /** \brief set LVDSM mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   510   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   511   * \param pinIndex specifies pin to be modified
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   512   * \param lvdsPadDriver select speed grade of LVDS Pad
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   513   * \param padSupply select the PAD supply (5/3.3V)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   514   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   515   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   516  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   517  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   518  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   519  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   521  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   523  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   524  /** \brief Disable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   525   * This function disables the emergency stop function. No check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   526   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   527   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   528   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   529   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   530   * \see IfxPort_disableEmergencyStop()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   531   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   532   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   533  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   534  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   535  /** \brief Enable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   536   * This function enables the emergency stop function. No check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   537   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   538   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   539   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   540   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   541   * \see IfxPort_enableEmergencyStop()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   542   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   543   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   544  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   545  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   546  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   547  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   548  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   549  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   550  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   551  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   552      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   553  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   554  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   555  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   556  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   557  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   558      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   559  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   560  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   561  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   562  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   563  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   564      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   565  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   566  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   567  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   568  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   569  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   570      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   571  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   572  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   573  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   574  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   575  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   576      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   577  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   578  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   579  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   580  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   581  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   582      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   583  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   584  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   585  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   586  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   587  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   588      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)(index | mode));
	or	d5,d15
.L475:
	call	IfxPort_setPinMode
.L233:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   172     IfxPort_setPinModeOutput(&MODULE_P21, 5, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general); /* TXDP */
	movh.a	a4,#61444
	lea	a4,[a4]@los(0xf003c100)
.L476:
	mov	d4,#5
.L477:
	mov	d15,#128
.L478:
	mov	d5,#128
.L243:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    45   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    46   * \defgroup IfxLld_Port_Std_Enum Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    47   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    48   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    49   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    50   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    51   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    52   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    53   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    54   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    55  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    56  #ifndef IFXPORT_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    57  #define IFXPORT_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    58  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    59  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    60  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    61  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    62  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    63  #include "_Impl/IfxPort_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    64  #include "Scu/Std/IfxScuWdt.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    65  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    66  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    67  /*--------------------------------Enumerations--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    68  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    69  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    70  /** \addtogroup IfxLld_Port_Std_Enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    71   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    72  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    73   * HSCT module.declared in MODULE_PORTx.LPCRx
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    74   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    76  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    77      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    78      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    79  } IfxPort_ControlledBy;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    80  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    81  /** \brief Ifx_P output modification modes definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    82   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    83  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    84  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    85      IfxPort_InputMode_undefined    = -1,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    86      IfxPort_InputMode_noPullDevice = 0 << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    87          IfxPort_InputMode_pullDown = 1U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    88          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    89  } IfxPort_InputMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    90  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    91  /** \brief Ifx_P input / output mode definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    92   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    93   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    94   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    95  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    96  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    97      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    98      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    99      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   100      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   101      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   102      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   103      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   104      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   105      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   106      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   107      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   108      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   109      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   110      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   111      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   112      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   113      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   114      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   115      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   116  } IfxPort_Mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   117  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   118  /** \brief Pin output alternate index
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   119   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   120  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   121  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   122      IfxPort_OutputIdx_general  = 0x10U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   123          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   124          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   125          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   126          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   127          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   128          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   129          IfxPort_OutputIdx_alt7 = 0x17U << 3
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   130  } IfxPort_OutputIdx;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   131  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   132  /** \brief Pin output mode definition
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   133   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   134  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   135  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   136      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   137          IfxPort_OutputMode_openDrain = 0x18U << 3
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_OutputMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   139  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   140  /** \brief Pad driver mode definition (strength and slew rate).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   141   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   142   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   143   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   144  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   145  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   146      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   147      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   148      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   149      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   150      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   151      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   152      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   153      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   154      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   155      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   156      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   157      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_PadDriver;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   159  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   160  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   161   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   162  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   163  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   164      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   165      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   166  } IfxPort_PadSupply;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   167  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   168  /** \brief Ifx_P output modification modes definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   169   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   170   * \see Ifx_P.OMR, IfxPort_setPinState()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   171   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   172  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   173  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   174      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   175      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   176      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   177      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   178  } IfxPort_State;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   179  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   180  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   181  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   182  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   183  /*-----------------------------Data Structures--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   184  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   185  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   186  /** \addtogroup IfxLld_Port_Std_DataStructures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   187   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   188  /** \brief Defines a pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   189   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   190  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   191  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   192      Ifx_P *port;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   193      uint8  pinIndex;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   194  } IfxPort_Pin;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   195  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   196  /** \brief To configure pins
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   197   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   198  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   199  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   200      Ifx_P            *port;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   201      uint8             pinIndex;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   202      IfxPort_OutputIdx mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   203      IfxPort_PadDriver padDriver;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   204  } IfxPort_Pin_Config;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   205  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   206  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   207  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   208  /** \addtogroup IfxLld_Port_Std_SinglePin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   209   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   210  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   211  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   212  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   213  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   214  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   215  /** \brief Return the port state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   216   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   217   * \param pinIndex Specifies the pin for which the state should be returned.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   218   * \return Returns TRUE the pin is high; FALSE the pin is low
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   219   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   220   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   221   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   222   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   223   *      // ...
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   224   *    }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   225   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   226   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   227   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   228  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   229  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   230  /** \brief Set the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   231   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   232   * \param pinIndex Specifies the pin to be set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   233   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   234   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   235   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   236   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   237   * IfxPort_setPinHigh(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   238   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   239   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   240   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   241   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   242   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   243  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   244  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   245  /** \brief Reset the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   246   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   247   * \param pinIndex Specifies the pin to be reset.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   248   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   249   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   250   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   251   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   252   * IfxPort_setPinLow(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   253   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   254   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   255   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   256   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   257   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   258  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   259  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   260  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   261   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   262   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   263   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   264   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   265   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   266   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   267   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   268   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   269   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   270   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   271   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   272  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   273  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   274  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   275   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   276   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   277   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   278   * \param index Specifies the alternate (or general purpose) output channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   279   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   280   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   281   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   282   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   283   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   284   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   285   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   286   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   287  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   288  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   289  /** \brief Set / Resets / Toggle the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   290   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   291   * \param pinIndex Specifies the pin to modify.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   292   * \param action Specifies the action: set, reset, toggle.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   293   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   294   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   295   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   296   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   297   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   298   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   299   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   300   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   301   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   302   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   303  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   304  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   305  /** \brief Toggle the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin to be toggled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   308   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   309   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   311   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   312   * IfxPort_togglePin(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   313   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   314   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   315   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   316   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   317   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   318  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   319  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   320  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   321  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   322  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   323  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   324  /** \brief Disable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   325   * This function disables the emergency stop function. A check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   326   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   327   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   328   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   329   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   330   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   331   * /code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   332   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   333   *     {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   334   *         // failed to disable emergency stop for P33.0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   335   *     }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   336   * /endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   337   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   338   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   339   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   340   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   341  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   342  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   343  /** \brief Enable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   344   * This function enables the emergency stop function. A check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   345   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   346   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   347   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   348   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   350   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   351   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   352   *       // failed to enable emergency stop for P33.0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   353   *     }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   354   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   355   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   356   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   357   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   358   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   359  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   360  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   361  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   362   * Also Configures the P40/P41 Port for digital functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   363   * which bydefault support analog functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   364   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   365   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   366   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   367   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   368   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   369   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   370   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   371   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   372   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   373   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   374   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   375  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   376  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   377  /** \brief Configure the pad driver mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   378   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   379   * \param pinIndex Specifies the pin for which the mode will be set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   380   * \param padDriver Specifies the driver mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   381   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   382   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   383   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   384   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   385   * // enable strong 3.3V driver
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   386   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   387   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   388   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   389   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   390  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   391  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   392  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   393  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   394  /** \addtogroup IfxLld_Port_Std_PortGroup
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   395   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   397  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   398  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   399  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   400  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   401  /** \brief Return the port group state
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   402   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   403   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   404   * \param mask selects the pins which should be read (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   405   * \return Returns the selected pin values
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   406   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   407   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   408   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   409   * // read the current value of P33[7:0]
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   410   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   411   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   412   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   413   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   414  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   415  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   416  /** \brief Set the port group state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   417   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   418   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   419   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   420   * \param data specifies the value which should be set
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   421   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   422   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   423   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   424   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   425   * // configure P33.[7:0] as GPIO outputs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   426   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   427   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   428   * // set initial value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   429   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   430   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   431   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   432   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   433  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   434  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   435  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   436  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   437  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   438  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   439  /** \brief Returns the module address of the selected Port module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   440   * \param port Pointer to PORT module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   441   * \return PORT module register address
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   442   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   443  IFX_EXTERN Ifx_P *IfxPort_getAddress(IfxPort_Index port);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   444  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   445  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   446   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   447   * \return port index of IfxModule_IndexMap. return -1 in case of unknown port index.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   448   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   449  IFX_EXTERN IfxPort_Index IfxPort_getIndex(Ifx_P *port);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   450  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   451  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   452   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   453   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   454   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   455   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   456   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   457   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   458   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   459   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   460   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   461   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   462   *  \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   463   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   464   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   465  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   466  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   467  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   468   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   469   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   470   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   471   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   472   * \param index Specifies the alternate (or general purpose) output channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   473   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   474   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   475   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   476   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   477   * // configure P33.[7:0] as GPIO outputs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   478   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   479   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   480   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   481   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   482  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   483  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   484  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   485   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   486   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   487   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   488   * \param padDriver Specifies the pad driver strength.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   489   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   490   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   491   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   492   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   493   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   494   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   495   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   496   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   497   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   498  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   499  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   500  /** \brief set LVDSH mode (configured for Port21)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   501   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   502   * \param pinIndex specifies pin  to be modified
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   503   * \param mode specifes the mode of pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   504   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   505   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   506   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   508  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   509  /** \brief set LVDSM mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   510   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   511   * \param pinIndex specifies pin to be modified
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   512   * \param lvdsPadDriver select speed grade of LVDS Pad
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   513   * \param padSupply select the PAD supply (5/3.3V)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   514   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   515   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   516  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   517  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   518  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   519  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   521  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   523  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   524  /** \brief Disable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   525   * This function disables the emergency stop function. No check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   526   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   527   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   528   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   529   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   530   * \see IfxPort_disableEmergencyStop()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   531   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   532   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   533  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   534  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   535  /** \brief Enable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   536   * This function enables the emergency stop function. No check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   537   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   538   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   539   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   540   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   541   * \see IfxPort_enableEmergencyStop()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   542   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   543   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   544  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   545  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   546  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   547  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   548  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   549  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   550  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   551  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   552      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   553  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   554  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   555  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   556  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   557  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   558      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   559  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   560  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   561  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   562  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   563  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   564      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   565  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   566  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   567  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   568  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   569  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   570      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   571  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   572  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   573  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   574  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   575  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   576      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   577  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   578  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   579  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   580  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   581  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   582      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   583  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   584  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   585  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   586  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   587  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   588      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)(index | mode));
	or	d5,d15
.L479:
	call	IfxPort_setPinMode
.L244:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   173      /* select the clock direction */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   174      if (config->interfaceMode == IfxHssl_InterfaceMode_master)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   175      {
	ld.bu	d15,[a15]4
.L480:
	jne	d15,#0,.L14
.L481:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   176          IfxPort_setPinModeOutput(&MODULE_P20, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_alt5); /* CLKOUT */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   177          IfxPort_setPinPadDriver(&MODULE_P20, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
	movh.a	a4,#61444
	lea	a4,[a4]@los(0xf003c000)
.L482:
	mov	d4,#0
.L483:
	mov	d15,#128
.L484:
	mov	d5,#168
.L245:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    45   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    46   * \defgroup IfxLld_Port_Std_Enum Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    47   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    48   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    49   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    50   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    51   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    52   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    53   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    54   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    55  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    56  #ifndef IFXPORT_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    57  #define IFXPORT_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    58  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    59  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    60  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    61  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    62  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    63  #include "_Impl/IfxPort_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    64  #include "Scu/Std/IfxScuWdt.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    65  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    66  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    67  /*--------------------------------Enumerations--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    68  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    69  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    70  /** \addtogroup IfxLld_Port_Std_Enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    71   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    72  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    73   * HSCT module.declared in MODULE_PORTx.LPCRx
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    74   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    76  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    77      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    78      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    79  } IfxPort_ControlledBy;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    80  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    81  /** \brief Ifx_P output modification modes definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    82   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    83  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    84  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    85      IfxPort_InputMode_undefined    = -1,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    86      IfxPort_InputMode_noPullDevice = 0 << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    87          IfxPort_InputMode_pullDown = 1U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    88          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    89  } IfxPort_InputMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    90  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    91  /** \brief Ifx_P input / output mode definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    92   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    93   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    94   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    95  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    96  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    97      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    98      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    99      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   100      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   101      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   102      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   103      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   104      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   105      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   106      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   107      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   108      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   109      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   110      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   111      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   112      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   113      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   114      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   115      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   116  } IfxPort_Mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   117  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   118  /** \brief Pin output alternate index
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   119   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   120  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   121  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   122      IfxPort_OutputIdx_general  = 0x10U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   123          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   124          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   125          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   126          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   127          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   128          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   129          IfxPort_OutputIdx_alt7 = 0x17U << 3
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   130  } IfxPort_OutputIdx;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   131  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   132  /** \brief Pin output mode definition
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   133   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   134  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   135  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   136      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   137          IfxPort_OutputMode_openDrain = 0x18U << 3
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_OutputMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   139  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   140  /** \brief Pad driver mode definition (strength and slew rate).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   141   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   142   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   143   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   144  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   145  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   146      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   147      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   148      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   149      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   150      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   151      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   152      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   153      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   154      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   155      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   156      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   157      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_PadDriver;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   159  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   160  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   161   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   162  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   163  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   164      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   165      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   166  } IfxPort_PadSupply;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   167  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   168  /** \brief Ifx_P output modification modes definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   169   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   170   * \see Ifx_P.OMR, IfxPort_setPinState()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   171   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   172  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   173  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   174      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   175      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   176      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   177      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   178  } IfxPort_State;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   179  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   180  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   181  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   182  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   183  /*-----------------------------Data Structures--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   184  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   185  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   186  /** \addtogroup IfxLld_Port_Std_DataStructures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   187   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   188  /** \brief Defines a pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   189   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   190  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   191  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   192      Ifx_P *port;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   193      uint8  pinIndex;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   194  } IfxPort_Pin;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   195  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   196  /** \brief To configure pins
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   197   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   198  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   199  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   200      Ifx_P            *port;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   201      uint8             pinIndex;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   202      IfxPort_OutputIdx mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   203      IfxPort_PadDriver padDriver;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   204  } IfxPort_Pin_Config;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   205  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   206  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   207  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   208  /** \addtogroup IfxLld_Port_Std_SinglePin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   209   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   210  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   211  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   212  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   213  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   214  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   215  /** \brief Return the port state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   216   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   217   * \param pinIndex Specifies the pin for which the state should be returned.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   218   * \return Returns TRUE the pin is high; FALSE the pin is low
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   219   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   220   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   221   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   222   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   223   *      // ...
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   224   *    }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   225   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   226   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   227   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   228  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   229  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   230  /** \brief Set the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   231   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   232   * \param pinIndex Specifies the pin to be set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   233   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   234   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   235   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   236   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   237   * IfxPort_setPinHigh(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   238   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   239   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   240   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   241   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   242   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   243  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   244  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   245  /** \brief Reset the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   246   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   247   * \param pinIndex Specifies the pin to be reset.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   248   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   249   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   250   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   251   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   252   * IfxPort_setPinLow(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   253   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   254   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   255   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   256   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   257   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   258  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   259  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   260  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   261   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   262   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   263   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   264   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   265   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   266   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   267   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   268   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   269   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   270   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   271   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   272  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   273  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   274  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   275   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   276   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   277   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   278   * \param index Specifies the alternate (or general purpose) output channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   279   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   280   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   281   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   282   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   283   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   284   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   285   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   286   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   287  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   288  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   289  /** \brief Set / Resets / Toggle the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   290   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   291   * \param pinIndex Specifies the pin to modify.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   292   * \param action Specifies the action: set, reset, toggle.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   293   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   294   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   295   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   296   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   297   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   298   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   299   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   300   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   301   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   302   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   303  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   304  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   305  /** \brief Toggle the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin to be toggled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   308   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   309   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   311   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   312   * IfxPort_togglePin(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   313   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   314   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   315   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   316   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   317   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   318  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   319  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   320  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   321  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   322  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   323  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   324  /** \brief Disable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   325   * This function disables the emergency stop function. A check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   326   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   327   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   328   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   329   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   330   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   331   * /code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   332   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   333   *     {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   334   *         // failed to disable emergency stop for P33.0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   335   *     }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   336   * /endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   337   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   338   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   339   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   340   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   341  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   342  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   343  /** \brief Enable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   344   * This function enables the emergency stop function. A check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   345   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   346   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   347   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   348   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   350   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   351   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   352   *       // failed to enable emergency stop for P33.0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   353   *     }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   354   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   355   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   356   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   357   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   358   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   359  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   360  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   361  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   362   * Also Configures the P40/P41 Port for digital functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   363   * which bydefault support analog functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   364   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   365   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   366   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   367   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   368   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   369   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   370   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   371   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   372   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   373   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   374   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   375  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   376  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   377  /** \brief Configure the pad driver mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   378   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   379   * \param pinIndex Specifies the pin for which the mode will be set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   380   * \param padDriver Specifies the driver mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   381   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   382   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   383   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   384   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   385   * // enable strong 3.3V driver
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   386   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   387   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   388   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   389   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   390  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   391  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   392  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   393  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   394  /** \addtogroup IfxLld_Port_Std_PortGroup
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   395   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   397  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   398  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   399  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   400  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   401  /** \brief Return the port group state
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   402   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   403   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   404   * \param mask selects the pins which should be read (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   405   * \return Returns the selected pin values
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   406   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   407   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   408   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   409   * // read the current value of P33[7:0]
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   410   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   411   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   412   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   413   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   414  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   415  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   416  /** \brief Set the port group state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   417   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   418   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   419   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   420   * \param data specifies the value which should be set
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   421   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   422   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   423   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   424   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   425   * // configure P33.[7:0] as GPIO outputs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   426   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   427   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   428   * // set initial value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   429   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   430   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   431   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   432   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   433  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   434  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   435  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   436  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   437  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   438  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   439  /** \brief Returns the module address of the selected Port module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   440   * \param port Pointer to PORT module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   441   * \return PORT module register address
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   442   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   443  IFX_EXTERN Ifx_P *IfxPort_getAddress(IfxPort_Index port);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   444  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   445  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   446   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   447   * \return port index of IfxModule_IndexMap. return -1 in case of unknown port index.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   448   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   449  IFX_EXTERN IfxPort_Index IfxPort_getIndex(Ifx_P *port);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   450  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   451  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   452   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   453   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   454   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   455   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   456   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   457   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   458   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   459   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   460   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   461   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   462   *  \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   463   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   464   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   465  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   466  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   467  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   468   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   469   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   470   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   471   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   472   * \param index Specifies the alternate (or general purpose) output channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   473   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   474   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   475   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   476   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   477   * // configure P33.[7:0] as GPIO outputs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   478   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   479   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   480   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   481   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   482  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   483  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   484  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   485   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   486   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   487   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   488   * \param padDriver Specifies the pad driver strength.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   489   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   490   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   491   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   492   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   493   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   494   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   495   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   496   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   497   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   498  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   499  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   500  /** \brief set LVDSH mode (configured for Port21)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   501   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   502   * \param pinIndex specifies pin  to be modified
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   503   * \param mode specifes the mode of pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   504   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   505   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   506   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   508  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   509  /** \brief set LVDSM mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   510   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   511   * \param pinIndex specifies pin to be modified
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   512   * \param lvdsPadDriver select speed grade of LVDS Pad
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   513   * \param padSupply select the PAD supply (5/3.3V)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   514   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   515   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   516  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   517  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   518  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   519  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   521  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   523  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   524  /** \brief Disable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   525   * This function disables the emergency stop function. No check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   526   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   527   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   528   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   529   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   530   * \see IfxPort_disableEmergencyStop()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   531   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   532   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   533  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   534  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   535  /** \brief Enable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   536   * This function enables the emergency stop function. No check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   537   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   538   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   539   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   540   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   541   * \see IfxPort_enableEmergencyStop()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   542   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   543   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   544  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   545  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   546  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   547  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   548  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   549  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   550  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   551  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   552      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   553  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   554  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   555  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   556  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   557  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   558      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   559  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   560  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   561  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   562  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   563  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   564      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   565  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   566  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   567  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   568  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   569  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   570      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   571  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   572  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   573  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   574  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   575  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   576      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   577  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   578  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   579  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   580  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   581  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   582      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   583  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   584  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   585  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   586  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   587  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   588      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)(index | mode));
	or	d5,d15
.L485:
	call	IfxPort_setPinMode
.L246:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   178  
	movh.a	a4,#61444
	lea	a4,[a4]@los(0xf003c000)
.L486:
	mov	d4,#0
.L487:
	mov	d5,#0
	call	IfxPort_setPinPadDriver
.L488:
	j	.L15
.L14:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   179      else
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   180      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   181          IfxPort_setPinModeInput(&MODULE_P20, 0, IfxPort_InputMode_pullDown); /* CLKIN */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   182      }
	movh.a	a4,#61444
	lea	a4,[a4]@los(0xf003c000)
.L489:
	mov	d4,#0
.L490:
	mov	d5,#8
.L247:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    45   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    46   * \defgroup IfxLld_Port_Std_Enum Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    47   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    48   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    49   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    50   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    51   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    52   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    53   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    54   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    55  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    56  #ifndef IFXPORT_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    57  #define IFXPORT_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    58  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    59  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    60  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    61  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    62  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    63  #include "_Impl/IfxPort_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    64  #include "Scu/Std/IfxScuWdt.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    65  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    66  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    67  /*--------------------------------Enumerations--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    68  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    69  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    70  /** \addtogroup IfxLld_Port_Std_Enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    71   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    72  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    73   * HSCT module.declared in MODULE_PORTx.LPCRx
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    74   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    76  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    77      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    78      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    79  } IfxPort_ControlledBy;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    80  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    81  /** \brief Ifx_P output modification modes definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    82   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    83  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    84  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    85      IfxPort_InputMode_undefined    = -1,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    86      IfxPort_InputMode_noPullDevice = 0 << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    87          IfxPort_InputMode_pullDown = 1U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    88          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    89  } IfxPort_InputMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    90  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    91  /** \brief Ifx_P input / output mode definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    92   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    93   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    94   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    95  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    96  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    97      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    98      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    99      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   100      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   101      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   102      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   103      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   104      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   105      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   106      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   107      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   108      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   109      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   110      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   111      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   112      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   113      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   114      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   115      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   116  } IfxPort_Mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   117  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   118  /** \brief Pin output alternate index
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   119   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   120  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   121  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   122      IfxPort_OutputIdx_general  = 0x10U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   123          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   124          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   125          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   126          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   127          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   128          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   129          IfxPort_OutputIdx_alt7 = 0x17U << 3
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   130  } IfxPort_OutputIdx;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   131  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   132  /** \brief Pin output mode definition
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   133   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   134  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   135  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   136      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   137          IfxPort_OutputMode_openDrain = 0x18U << 3
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_OutputMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   139  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   140  /** \brief Pad driver mode definition (strength and slew rate).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   141   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   142   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   143   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   144  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   145  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   146      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   147      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   148      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   149      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   150      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   151      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   152      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   153      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   154      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   155      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   156      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   157      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_PadDriver;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   159  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   160  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   161   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   162  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   163  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   164      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   165      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   166  } IfxPort_PadSupply;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   167  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   168  /** \brief Ifx_P output modification modes definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   169   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   170   * \see Ifx_P.OMR, IfxPort_setPinState()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   171   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   172  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   173  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   174      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   175      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   176      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   177      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   178  } IfxPort_State;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   179  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   180  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   181  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   182  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   183  /*-----------------------------Data Structures--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   184  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   185  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   186  /** \addtogroup IfxLld_Port_Std_DataStructures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   187   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   188  /** \brief Defines a pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   189   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   190  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   191  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   192      Ifx_P *port;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   193      uint8  pinIndex;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   194  } IfxPort_Pin;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   195  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   196  /** \brief To configure pins
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   197   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   198  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   199  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   200      Ifx_P            *port;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   201      uint8             pinIndex;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   202      IfxPort_OutputIdx mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   203      IfxPort_PadDriver padDriver;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   204  } IfxPort_Pin_Config;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   205  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   206  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   207  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   208  /** \addtogroup IfxLld_Port_Std_SinglePin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   209   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   210  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   211  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   212  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   213  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   214  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   215  /** \brief Return the port state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   216   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   217   * \param pinIndex Specifies the pin for which the state should be returned.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   218   * \return Returns TRUE the pin is high; FALSE the pin is low
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   219   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   220   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   221   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   222   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   223   *      // ...
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   224   *    }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   225   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   226   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   227   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   228  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   229  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   230  /** \brief Set the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   231   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   232   * \param pinIndex Specifies the pin to be set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   233   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   234   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   235   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   236   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   237   * IfxPort_setPinHigh(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   238   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   239   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   240   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   241   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   242   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   243  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   244  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   245  /** \brief Reset the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   246   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   247   * \param pinIndex Specifies the pin to be reset.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   248   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   249   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   250   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   251   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   252   * IfxPort_setPinLow(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   253   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   254   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   255   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   256   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   257   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   258  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   259  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   260  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   261   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   262   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   263   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   264   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   265   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   266   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   267   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   268   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   269   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   270   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   271   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   272  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   273  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   274  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   275   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   276   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   277   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   278   * \param index Specifies the alternate (or general purpose) output channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   279   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   280   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   281   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   282   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   283   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   284   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   285   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   286   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   287  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   288  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   289  /** \brief Set / Resets / Toggle the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   290   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   291   * \param pinIndex Specifies the pin to modify.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   292   * \param action Specifies the action: set, reset, toggle.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   293   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   294   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   295   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   296   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   297   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   298   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   299   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   300   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   301   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   302   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   303  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   304  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   305  /** \brief Toggle the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin to be toggled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   308   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   309   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   311   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   312   * IfxPort_togglePin(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   313   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   314   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   315   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   316   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   317   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   318  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   319  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   320  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   321  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   322  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   323  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   324  /** \brief Disable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   325   * This function disables the emergency stop function. A check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   326   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   327   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   328   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   329   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   330   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   331   * /code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   332   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   333   *     {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   334   *         // failed to disable emergency stop for P33.0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   335   *     }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   336   * /endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   337   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   338   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   339   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   340   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   341  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   342  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   343  /** \brief Enable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   344   * This function enables the emergency stop function. A check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   345   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   346   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   347   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   348   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   350   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   351   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   352   *       // failed to enable emergency stop for P33.0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   353   *     }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   354   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   355   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   356   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   357   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   358   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   359  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   360  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   361  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   362   * Also Configures the P40/P41 Port for digital functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   363   * which bydefault support analog functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   364   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   365   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   366   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   367   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   368   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   369   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   370   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   371   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   372   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   373   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   374   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   375  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   376  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   377  /** \brief Configure the pad driver mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   378   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   379   * \param pinIndex Specifies the pin for which the mode will be set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   380   * \param padDriver Specifies the driver mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   381   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   382   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   383   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   384   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   385   * // enable strong 3.3V driver
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   386   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   387   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   388   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   389   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   390  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   391  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   392  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   393  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   394  /** \addtogroup IfxLld_Port_Std_PortGroup
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   395   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   397  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   398  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   399  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   400  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   401  /** \brief Return the port group state
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   402   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   403   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   404   * \param mask selects the pins which should be read (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   405   * \return Returns the selected pin values
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   406   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   407   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   408   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   409   * // read the current value of P33[7:0]
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   410   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   411   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   412   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   413   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   414  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   415  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   416  /** \brief Set the port group state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   417   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   418   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   419   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   420   * \param data specifies the value which should be set
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   421   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   422   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   423   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   424   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   425   * // configure P33.[7:0] as GPIO outputs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   426   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   427   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   428   * // set initial value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   429   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   430   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   431   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   432   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   433  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   434  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   435  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   436  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   437  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   438  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   439  /** \brief Returns the module address of the selected Port module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   440   * \param port Pointer to PORT module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   441   * \return PORT module register address
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   442   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   443  IFX_EXTERN Ifx_P *IfxPort_getAddress(IfxPort_Index port);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   444  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   445  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   446   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   447   * \return port index of IfxModule_IndexMap. return -1 in case of unknown port index.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   448   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   449  IFX_EXTERN IfxPort_Index IfxPort_getIndex(Ifx_P *port);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   450  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   451  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   452   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   453   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   454   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   455   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   456   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   457   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   458   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   459   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   460   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   461   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   462   *  \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   463   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   464   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   465  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   466  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   467  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   468   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   469   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   470   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   471   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   472   * \param index Specifies the alternate (or general purpose) output channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   473   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   474   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   475   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   476   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   477   * // configure P33.[7:0] as GPIO outputs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   478   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   479   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   480   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   481   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   482  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   483  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   484  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   485   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   486   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   487   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   488   * \param padDriver Specifies the pad driver strength.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   489   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   490   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   491   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   492   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   493   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   494   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   495   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   496   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   497   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   498  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   499  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   500  /** \brief set LVDSH mode (configured for Port21)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   501   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   502   * \param pinIndex specifies pin  to be modified
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   503   * \param mode specifes the mode of pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   504   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   505   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   506   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   508  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   509  /** \brief set LVDSM mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   510   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   511   * \param pinIndex specifies pin to be modified
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   512   * \param lvdsPadDriver select speed grade of LVDS Pad
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   513   * \param padSupply select the PAD supply (5/3.3V)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   514   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   515   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   516  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   517  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   518  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   519  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   521  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   523  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   524  /** \brief Disable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   525   * This function disables the emergency stop function. No check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   526   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   527   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   528   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   529   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   530   * \see IfxPort_disableEmergencyStop()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   531   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   532   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   533  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   534  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   535  /** \brief Enable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   536   * This function enables the emergency stop function. No check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   537   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   538   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   539   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   540   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   541   * \see IfxPort_enableEmergencyStop()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   542   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   543   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   544  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   545  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   546  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   547  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   548  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   549  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   550  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   551  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   552      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   553  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   554  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   555  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   556  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   557  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   558      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   559  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   560  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   561  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   562  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   563  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   564      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   565  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   566  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   567  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   568  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   569  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   570      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   571  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   572  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   573  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   574  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   575  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   576      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   577  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   578  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   579  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   580  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   581  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   582      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
	call	IfxPort_setPinMode
.L15:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   183   if (config->loopBack == FALSE)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   184      /* LVDS configuration */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   185      {
	ld.bu	d15,[a15]6
.L491:
	jne	d15,#0,.L16
.L248:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   186          uint16 psw = IfxScuWdt_getCpuWatchdogPassword();
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   187          IfxScuWdt_clearCpuEndinit(psw);         /* clears the endinit protection */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   188  
	call	IfxScuWdt_getCpuWatchdogPassword
.L351:
	mov	d8,d2
.L353:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   189          P21_LPCR1.B_P21.RDIS_CTRL = 1;
	mov	d4,d8
.L352:
	call	IfxScuWdt_clearCpuEndinit
.L354:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   190          P21_LPCR1.B_P21.RX_DIS    = 0;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   191  
	movh.a	a2,#61444
	ld.bu	d15,[a2]@los(0xf003c1a4)
.L492:
	or	d15,#1
	movh.a	a2,#61444
	st.b	[a2]@los(0xf003c1a4),d15
.L493:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   192          P21_LPCR2.B.TDIS_CTRL     = 1;
	movh.a	a2,#61444
	ld.bu	d15,[a2]@los(0xf003c1a4)
.L494:
	insert	d15,d15,#0,#1,#1
	movh.a	a2,#61444
	st.b	[a2]@los(0xf003c1a4),d15
.L495:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   193          P21_LPCR2.B.TX_DIS        = 0;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   194          P21_LPCR2.B.TX_PD         = 0;
	movh.a	a2,#61444
	ld.bu	d15,[a2]@los(0xf003c1a9)
.L496:
	or	d15,#16
	movh.a	a2,#61444
	st.b	[a2]@los(0xf003c1a9),d15
.L497:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   195  
	movh.a	a2,#61444
	ld.bu	d15,[a2]@los(0xf003c1a9)
.L498:
	insert	d15,d15,#0,#5,#1
	movh.a	a2,#61444
	st.b	[a2]@los(0xf003c1a9),d15
.L499:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   196          IfxScuWdt_setCpuEndinit(psw);           /* sets the endinit protection back on */
	movh.a	a2,#61444
	ld.bu	d15,[a2]@los(0xf003c1a9)
.L500:
	insert	d15,d15,#0,#6,#1
	movh.a	a2,#61444
	st.b	[a2]@los(0xf003c1a9),d15
.L501:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   197      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   198  
	mov	d4,d8
.L355:
	call	IfxScuWdt_setCpuEndinit
.L16:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   199  #endif
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   200  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   201      /* HSCT initialisation */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   202      IfxHssl_enableHsctModule(hsctSFR);                                                  /* enabling the HSCT module */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   203  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   204      hsctSFR->IRQCLR.B.TXTECLR = 1;                                                      /* due to AI */
	mov.aa	a4,a12
.L356:
	call	IfxHssl_enableHsctModule
.L357:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   205  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   206      /* slave interface initialisation */
	ld.bu	d15,[a12]73
.L502:
	or	d15,#4
	st.b	[a12]73,d15
.L503:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   207      if (config->interfaceMode == IfxHssl_InterfaceMode_slave)                           /* slave mode initialisation */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   208      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   209          hsctSFR->INIT.B.IFM           = IfxHssl_InterfaceMode_slave;                    /* slave mode */
	ld.bu	d15,[a15]4
.L504:
	jne	d15,#1,.L17
.L505:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   210          hsctSFR->INIT.B.SYS_CLK_EN    = 0;                                              /* disabling the system clock */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   211          hsctSFR->INIT.B.SRCF          = IfxHssl_ClockFrequencyRate_20Mhz;               /* Reference Clock Frequency rate 20 MHz */
	ld.bu	d15,[a12]16
.L506:
	or	d15,#8
	st.b	[a12]16,d15
.L507:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   212          hsctSFR->CONFIGPHY.B.OSCCLKEN = IfxHssl_PllReferenceClock_hsctSystemClockInput; /* PLL reference clock is hsct system clock input */
	ld.bu	d15,[a12]16
.L508:
	insert	d15,d15,#0,#1,#1
	st.b	[a12]16,d15
.L509:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   213          hsctSFR->CONFIGPHY.B.PHYRST   = 0;                                              /* disable PHY reset */
	ld.bu	d15,[a12]16
.L510:
	insert	d15,d15,#0,#2,#1
	st.b	[a12]16,d15
.L511:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   214          hsctSFR->CONFIGPHY.B.PLLWMF   = 16;                                             /* PLL frequency control word multiplication factor */
	ld.bu	d15,[a12]51
.L512:
	insert	d15,d15,#0,#4,#1
	st.b	[a12]51,d15
.L513:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   215      }
	ld.bu	d15,[a12]49
.L514:
	insert	d15,d15,#0,#7,#1
	st.b	[a12]49,d15
.L515:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   216  
	ld.bu	d0,[a12]49
.L516:
	mov	d15,#16
.L517:
	insert	d15,d0,d15,#0,#6
	st.b	[a12]49,d15
.L518:
	j	.L18
.L17:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   217      /* master interface initialisation */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   218      else                                                                           /* master mode initialisation */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   219      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   220          hsctSFR->INIT.B.IFM           = IfxHssl_InterfaceMode_master;              /* master mode */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   221          hsctSFR->INIT.B.SYS_CLK_EN    = 1;                                         /* enabling the system clock */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   222          hsctSFR->INIT.B.SRCF          = IfxHssl_ClockFrequencyRate_20Mhz;          /* Reference Clock Frequency rate 20 MHz */
	ld.bu	d15,[a12]16
.L519:
	insert	d15,d15,#0,#3,#1
	st.b	[a12]16,d15
.L520:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   223          hsctSFR->CONFIGPHY.B.OSCCLKEN = IfxHssl_PllReferenceClock_oscillatorInput; /* PLL reference clock is Oscillator input */
	ld.bu	d15,[a12]16
.L521:
	or	d15,#2
	st.b	[a12]16,d15
.L522:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   224          hsctSFR->CONFIGPHY.B.PHYRST   = 0;                                         /* disable PHY reset */
	ld.bu	d15,[a12]16
.L523:
	insert	d15,d15,#0,#2,#1
	st.b	[a12]16,d15
.L524:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   225          hsctSFR->CONFIGPHY.B.PLLPON   = 1;                                         /* PLL power on */
	ld.bu	d15,[a12]51
.L525:
	or	d15,#16
	st.b	[a12]51,d15
.L526:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   226          hsctSFR->CONFIGPHY.B.PLLWMF   = 16;                                        /* PLL frequency control word multiplication factor */
	ld.bu	d15,[a12]49
.L527:
	insert	d15,d15,#0,#7,#1
	st.b	[a12]49,d15
.L528:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   227          hsctSFR->IFCTRL.B.MTXSPEED    = IfxHssl_MasterModeTxSpeed_lowSpeed;        /* Tx low speed */
	ld.bu	d15,[a12]48
.L529:
	or	d15,#2
	st.b	[a12]48,d15
.L530:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   228          hsctSFR->IFCTRL.B.MRXSPEED    = IfxHssl_MasterModeRxSpeed_lowSpeed;        /* Rx low speed */
	ld.bu	d0,[a12]49
.L531:
	mov	d15,#16
.L532:
	insert	d15,d0,d15,#0,#6
	st.b	[a12]49,d15
.L533:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   229  
	ld.bu	d15,[a12]22
.L534:
	insert	d15,d15,#0,#2,#2
	st.b	[a12]22,d15
.L535:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   230          /* change from low speed to high speed */
	ld.bu	d15,[a12]22
.L536:
	insert	d15,d15,#0,#0,#2
	st.b	[a12]22,d15
.L537:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   231          if (config->highSpeedMode)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   232          {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   233              hsctSFR->IFCTRL.B.MTXSPEED = IfxHssl_MasterModeTxSpeed_highSpeed;      /* Tx high speed */
	ld.bu	d15,[a15]5
.L538:
	jeq	d15,#0,.L19
.L539:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   234              hsctSFR->IFCTRL.B.MRXSPEED = IfxHssl_MasterModeRxSpeed_highSpeed;      /* Rx high speed */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   235          }
	ld.bu	d15,[a12]22
.L540:
	insert	d15,d15,#2,#2,#2
	st.b	[a12]22,d15
.L541:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   236  
	ld.bu	d15,[a12]22
.L542:
	insert	d15,d15,#2,#0,#2
	st.b	[a12]22,d15
.L19:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   237          while (hsctSFR->STATPHY.B.PLOCK == 0)                                      /* wait until pll is locked */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   238          {}
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   239      }
	j	.L20
.L21:
.L20:
	ld.bu	d15,[a12]52
.L543:
	jz.t	d15:0,.L21
.L18:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   240  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   241      hsctSFR->DISABLE.U = 0;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   242  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   243  
	mov	d15,#0
.L544:
	st.w	[a12]32,d15
.L545:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   244  
	ret
.L212:
	
__IfxHssl_Hssl_initHsctModule_function_end:
	.size	IfxHssl_Hssl_initHsctModule,__IfxHssl_Hssl_initHsctModule_function_end-IfxHssl_Hssl_initHsctModule
.L136:
	; End of function
	
	.sdecl	'.text.IfxHssl_Hssl.IfxHssl_Hssl_initHsctModuleConfig',code,cluster('IfxHssl_Hssl_initHsctModuleConfig')
	.sect	'.text.IfxHssl_Hssl.IfxHssl_Hssl_initHsctModuleConfig'
	.align	2
	
	.global	IfxHssl_Hssl_initHsctModuleConfig

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   245  void IfxHssl_Hssl_initHsctModuleConfig(IfxHssl_Hsct_Config *config, Ifx_HSCT *hsct)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   246  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   247      config->hsct = hsct;
; Function IfxHssl_Hssl_initHsctModuleConfig
.L109:
IfxHssl_Hssl_initHsctModuleConfig:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   248  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   249      /* interface mode */
	st.a	[a4],a5
.L550:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   250      config->interfaceMode = IfxHssl_InterfaceMode_master;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   251  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   252      /* high speed mode disabled */
	mov	d15,#0
.L551:
	st.b	[a4]4,d15
.L552:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   253      config->highSpeedMode = FALSE;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   254  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   255      config->loopBack      = FALSE; /* default with out loopback */
	mov	d15,#0
.L553:
	st.b	[a4]5,d15
.L554:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   256  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   257  
	mov	d15,#0
.L555:
	st.b	[a4]6,d15
.L556:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   258  
	ret
.L251:
	
__IfxHssl_Hssl_initHsctModuleConfig_function_end:
	.size	IfxHssl_Hssl_initHsctModuleConfig,__IfxHssl_Hssl_initHsctModuleConfig_function_end-IfxHssl_Hssl_initHsctModuleConfig
.L141:
	; End of function
	
	.sdecl	'.text.IfxHssl_Hssl.IfxHssl_Hssl_initHsslModule',code,cluster('IfxHssl_Hssl_initHsslModule')
	.sect	'.text.IfxHssl_Hssl.IfxHssl_Hssl_initHsslModule'
	.align	2
	
	.global	IfxHssl_Hssl_initHsslModule

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   259  void IfxHssl_Hssl_initHsslModule(IfxHssl_Hssl *hssl, const IfxHssl_Hssl_Config *config)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   260  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   261      Ifx_HSSL *hsslSFR = config->hssl;                           /* pointer to HSSL registers */
; Function IfxHssl_Hssl_initHsslModule
.L111:
IfxHssl_Hssl_initHsslModule:	.type	func
	mov.aa	a15,a5
.L360:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   262  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   263      hssl->hssl = hsslSFR;                                       /* adding HSSL register pointer to module handle */
	ld.a	a12,[a15]
.L361:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   264  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   265      /* HSSL initialisation */
	st.a	[a4],a12
.L561:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   266      IfxHssl_enableHsslModule(hsslSFR);                          /* enabling the HSSL module */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   267      hsslSFR->CFG.B.PREDIV = config->preDivider;                 /* predivivder */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   268      hsslSFR->CFG.B.SCM    = 0;                                  /* command mode */
	mov.aa	a4,a12
.L359:
	call	IfxHssl_enableHsslModule
.L358:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   269  
	ld.hu	d15,[a12]16
.L562:
	ld.hu	d0,[a15]36
.L563:
	insert	d15,d15,d0,#0,#14
	st.h	[a12]16,d15
.L564:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   270      /* Access windows */
	ld.bu	d15,[a12]18
.L565:
	insert	d15,d15,#0,#2,#1
	st.b	[a12]18,d15
.L566:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   271      hsslSFR->AW[0].AWSTART.U = config->accessWindow0.start;     /* start of access window */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   272      hsslSFR->AW[0].AWEND.U   = config->accessWindow0.end;       /* end of access window */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   273      hsslSFR->AW[1].AWSTART.U = config->accessWindow1.start;     /* start of access window */
	ld.w	d15,[a15]4
.L567:
	st.w	[a12]192,d15
.L568:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   274      hsslSFR->AW[1].AWEND.U   = config->accessWindow1.end;       /* end of access window */
	ld.w	d15,[a15]8
.L569:
	st.w	[a12]196,d15
.L570:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   275      hsslSFR->AW[2].AWSTART.U = config->accessWindow2.start;     /* start of access window */
	ld.w	d15,[a15]12
.L571:
	st.w	[a12]200,d15
.L572:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   276      hsslSFR->AW[2].AWEND.U   = config->accessWindow2.end;       /* end of access window */
	ld.w	d15,[a15]16
.L573:
	st.w	[a12]204,d15
.L574:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   277      hsslSFR->AW[3].AWSTART.U = config->accessWindow3.start;     /* start of access window */
	ld.w	d15,[a15]20
.L575:
	st.w	[a12]208,d15
.L576:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   278      hsslSFR->AW[3].AWEND.U   = config->accessWindow3.end;       /* end of access window */
	ld.w	d15,[a15]24
.L577:
	st.w	[a12]212,d15
.L578:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   279  
	ld.w	d15,[a15]28
.L579:
	st.w	[a12]216,d15
.L580:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   280      hsslSFR->AR.U            = 0x000000ff;                      /* allow read/write access for all windows */
	ld.w	d15,[a15]32
.L581:
	st.w	[a12]220,d15
.L582:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   281  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   282      hsslSFR->MFLAGSCL.B.INIC = 1;                               /* chnage into run mode */
	mov	d15,#255
.L583:
	st.w	[a12]224,d15
.L584:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   283      hsslSFR->TIDADD.U        = (uint32)IFXHSSL_JTAG_ID_ADDRESS; /* Writing JTAG_ID of the device to TIDADD.This'll be used in the response when the other device queries for ID */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   284  
	ld.bu	d15,[a12]35
.L585:
	or	d15,#128
	st.b	[a12]35,d15
.L586:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   285      while (hsslSFR->MFLAGS.B.INI)                               /* wait until the mode changes */
	mov	d15,#1124
	addih	d15,d15,#61440
.L587:
	st.w	[a12]148,d15
.L588:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   286      {}
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   287  }
	j	.L22
.L23:
.L22:
	ld.bu	d15,[a12]27
.L589:
	jnz.t	d15:7,.L23
.L590:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   288  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   289  
	ret
.L255:
	
__IfxHssl_Hssl_initHsslModule_function_end:
	.size	IfxHssl_Hssl_initHsslModule,__IfxHssl_Hssl_initHsslModule_function_end-IfxHssl_Hssl_initHsslModule
.L146:
	; End of function
	
	.sdecl	'.text.IfxHssl_Hssl.IfxHssl_Hssl_initHsslModuleConfig',code,cluster('IfxHssl_Hssl_initHsslModuleConfig')
	.sect	'.text.IfxHssl_Hssl.IfxHssl_Hssl_initHsslModuleConfig'
	.align	2
	
	.global	IfxHssl_Hssl_initHsslModuleConfig

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   290  void IfxHssl_Hssl_initHsslModuleConfig(IfxHssl_Hssl_Config *config, Ifx_HSSL *hssl)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   291  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   292      config->hssl = hssl;
; Function IfxHssl_Hssl_initHsslModuleConfig
.L113:
IfxHssl_Hssl_initHsslModuleConfig:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   293  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   294      /* Access windows */
	st.a	[a4],a5
.L595:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   295      config->accessWindow0.start = 0x00000000; /* start of access window */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   296      config->accessWindow0.end   = 0xffffffff; /* end of access window */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   297      config->accessWindow1.start = 0x00000000; /* start of access window */
	mov	d15,#0
.L596:
	st.w	[a4]4,d15
.L597:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   298      config->accessWindow1.end   = 0xffffffff; /* end of access window */
	mov	d15,#-1
.L598:
	st.w	[a4]8,d15
.L599:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   299      config->accessWindow2.start = 0x00000000; /* start of access window */
	mov	d15,#0
.L600:
	st.w	[a4]12,d15
.L601:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   300      config->accessWindow2.end   = 0xffffffff; /* end of access window */
	mov	d15,#-1
.L602:
	st.w	[a4]16,d15
.L603:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   301      config->accessWindow3.start = 0x00000000; /* start of access window */
	mov	d15,#0
.L604:
	st.w	[a4]20,d15
.L605:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   302      config->accessWindow3.end   = 0xffffffff; /* end of access window */
	mov	d15,#-1
.L606:
	st.w	[a4]24,d15
.L607:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   303  
	mov	d15,#0
.L608:
	st.w	[a4]28,d15
.L609:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   304      /* predivider */
	mov	d15,#-1
.L610:
	st.w	[a4]32,d15
.L611:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   305      config->preDivider = 256;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   306  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   307  
	mov	d15,#256
.L612:
	st.h	[a4]36,d15
.L613:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   308  
	ret
.L262:
	
__IfxHssl_Hssl_initHsslModuleConfig_function_end:
	.size	IfxHssl_Hssl_initHsslModuleConfig,__IfxHssl_Hssl_initHsslModuleConfig_function_end-IfxHssl_Hssl_initHsslModuleConfig
.L151:
	; End of function
	
	.sdecl	'.text.IfxHssl_Hssl.IfxHssl_Hssl_prepareStream',code,cluster('IfxHssl_Hssl_prepareStream')
	.sect	'.text.IfxHssl_Hssl.IfxHssl_Hssl_prepareStream'
	.align	2
	
	.global	IfxHssl_Hssl_prepareStream

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   309  IfxHssl_Hssl_Status IfxHssl_Hssl_prepareStream(IfxHssl_Hssl_Channel *channel, uint32 slaveTargetAddress, Ifx_SizeT count)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   310  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   311      IfxHssl_ChannelId channelId = channel->channelId;
; Function IfxHssl_Hssl_prepareStream
.L115:
IfxHssl_Hssl_prepareStream:	.type	func
	mov.aa	a15,a4
.L365:
	mov	d6,d4
.L366:
	mov	d8,d5
.L367:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   312      Ifx_HSSL_TS_FC    tsfcReg;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   313  
	ld.bu	d15,[a15]8
.L368:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   314      if (channelId == IfxHssl_ChannelId_2)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   315      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   316          return IfxHssl_Hssl_Status_error;
	jne	d15,#2,.L24
.L801:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   317      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   318  
	mov	d2,#2
.L802:
	j	.L25
.L24:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   319      /* target start address to memeroy block 0 on target device (writing into HSSL_TSSA0 of the target) */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   320      IfxHssl_Hssl_singleFrameRequest(channel, IfxHssl_Hssl_FrameRequest_writeFrame, (uint32)&channel->hssl->TS.SA[0], slaveTargetAddress, IfxHssl_DataLength_32bit);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   321  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   322      while (IfxHssl_Hssl_waitAcknowledge(channel) != IfxHssl_Hssl_Status_ok)
	mov	d4,#2
.L364:
	ld.w	d15,[a15]
.L369:
	add	d5,d15,#176
.L363:
	mov	d7,#2
	mov.aa	a4,a15
	call	IfxHssl_Hssl_singleFrameRequest
.L362:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   323      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   324          if (IfxHssl_Hssl_waitAcknowledge(channel) == IfxHssl_Hssl_Status_error)
	j	.L26
.L27:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   325          {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   326              return IfxHssl_Hssl_Status_error;
	mov.aa	a4,a15
.L370:
	call	IfxHssl_Hssl_waitAcknowledge
.L371:
	jne	d2,#2,.L28
.L803:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   327          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   328      }
	mov	d2,#2
.L804:
	j	.L29
.L28:
.L26:
	mov.aa	a4,a15
.L372:
	call	IfxHssl_Hssl_waitAcknowledge
.L373:
	jne	d2,#0,.L27
.L805:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   329  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   330      /* Precautionary measure on target for any last streaming interruption */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   331      /* Read count register on the target */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   332      IfxHssl_Hssl_read(channel, (uint32)&channel->hssl->TS.FC, IfxHssl_DataLength_32bit);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   333  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   334      while (IfxHssl_Hssl_waitAcknowledge(channel) != IfxHssl_Hssl_Status_ok)
	ld.a	a2,[a15]
.L806:
	lea	a2,[a2]188
	mov.d	d4,a2
.L807:
	mov	d5,#2
	mov.aa	a4,a15
.L374:
	call	IfxHssl_Hssl_read
.L375:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   335      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   336          if (IfxHssl_Hssl_waitAcknowledge(channel) == IfxHssl_Hssl_Status_error)
	j	.L30
.L31:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   337          {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   338              return IfxHssl_Hssl_Status_error;
	mov.aa	a4,a15
.L376:
	call	IfxHssl_Hssl_waitAcknowledge
.L377:
	jne	d2,#2,.L32
.L808:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   339          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   340      }
	mov	d2,#2
.L809:
	j	.L33
.L32:
.L30:
	mov.aa	a4,a15
.L378:
	call	IfxHssl_Hssl_waitAcknowledge
.L379:
	jne	d2,#0,.L31
.L329:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     1  /**
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     2   * \file IfxHssl_Hssl.h
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     3   * \brief HSSL HSSL details
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     4   * \ingroup IfxLld_Hssl
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     5   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     6   * \version iLLD_1_0_1_11_0
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     8   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     9   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    10   *                                 IMPORTANT NOTICE
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    11   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    12   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    17  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    18  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    20  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    26   * Software is furnished to do so, all subject to the following:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    27  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    33   * language processor.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    34  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    42  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    43   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    44   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    45   * \defgroup IfxLld_Hssl_Hssl_Usage How to use the HSSL Interface driver?
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    46   * \ingroup IfxLld_Hssl
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    47   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    48   * The HSSL interface driver provides a default HSSL/HSCT configuration for point to point communication at two transfer speeds, 5MBaud (low speed) and 320MBaud (high speed).
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    49   * It also supports streaming transfers of data a memory block at both low and high speeds.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    50   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    51   * In the following sections it will be described, how to integrate the driver into the application framework.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    52   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    53   * \section IfxLld_Hssl_Hssl_Preparation Preparation
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    54   * \subsection IfxLld_Hssl_Hssl_Include Include Files
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    55   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    56   * Include following header file into your C code:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    57   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    58   *     #include <Hssl/Hssl/IfxHssl_Hssl.h>
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    59   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    60   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    61   * \subsection IfxLld_Hssl_Hssl_Variables Variables
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    62   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    63   * Declare the HSSL handle, HSCT handle and channel array as global variables in your C code:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    64   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    65   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    66   *     // used globally
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    67   *     static IfxHssl_Hssl hssl;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    68   *     static IfxHssl_Hsct hsct;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    69   *     IfxHssl_Hssl_Channel hsslChannel[4];
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    70   *     __attribute__ ((aligned(256))) uint32 txData[80]; // needs to be declared globally in case of streaming transfers
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    71   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    72   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    73   * \subsection IfxLld_Hssl_Hssl_InitModule Module Initialisation
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    74   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    75   * The module initialisation can be done as follows:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    76   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    77   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    78   *     // create module config
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    79   *     IfxHssl_Hsct_Config hsctConfig;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    80   *     IfxHssl_Hssl_initHsctModuleConfig(&hsctConfig, &MODULE_HSCT);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    81   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    82   *     // select the interface mode (in case of slave)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    83   *     hsctConfig.interfaceMode = IfxHssl_InterfaceMode_slave;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    84   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    85   *     // select the high speed mode if required
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    86   *     hsctConfig.highSpeedMode = TRUE;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    87   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    88   *     // initialize module
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    89   *     // IfxHssl_Hsct hsct;  defined globally
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    90   *     IfxHssl_Hssl_initHsctModule(&hsct, &hsctConfig);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    91   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    92   *     // create module config
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    93   *     IfxHssl_Hssl_Config hsslConfig;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    94   *     IfxHssl_Hssl_initHsslModuleConfig(&hsslConfig, &MODULE_HSSL);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    95   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    96   *     // IfxHssl_Hssl hssl;  defined globally
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    97   *     IfxHssl_Hssl_initHsslModule(&hssl, &hsslConfig);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    98   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    99   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   100   * If application intends to explicitly configure the pins for HSCT module IFXHSSL_HSCT_DISABLE_PINCONFIG macro should be defined in the application.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   101   * The explicit pin assignment should be done prior to IfxHssl_Hssl_initHsctModule().
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   102   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   103   * \subsection IfxLld_Hssl_Hssl_InitChannel Channel Initialisation
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   104   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   105   * The Channel initialisation can be done as follows:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   106   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   107   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   108   *     // create HSSL channel config
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   109   *     IfxHssl_Hssl_ChannelConfig hsslChannelConfig;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   110   *     IfxHssl_Hssl_initChannelConfig(&hsslChannelConfig, &hssl, &hsct);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   111   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   112   *     // initialize the channels
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   113   *     // IfxHssl_Hssl_Channel hsslChannel[4];  defined globally
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   114   *     for(int i=0; i<4; ++i)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   115   *     {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   116   *         hsslChannelConfig.channelId = (IfxHssl_ChannelId)i;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   117   *         IfxHssl_Hssl_initChannel(&hsslChannel[i], &hsslChannelConfig);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   118   *     }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   119   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   120   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   121   * \subsection IfxLld_Hssl_Hssl_LinkSpeed Changing HSCT link speed
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   122   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   123   * The link speed change can be done as follows
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   124   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   125   * As per the above settings the HSCT master is in High speed reception and transmission.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   126   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   127   * The pseudo code for setting the target to High speed is as below
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   128   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   129   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   130   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   131   *      // Set the Tx link speed of the master to Low speed
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   132   *      IfxHssl_setHsctTxLinkSpeed(&hsct , IfxHssl_MasterModeTxSpeed_lowSpeed);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   133   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   134   *      // Enable reception at the Slave
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   135   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_enableReception);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   136   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   137   *      // Send interface commmand to change Rx to High speed at the target
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   138   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_highSpeedReception);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   139   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   140   *      // Send interface commmand to change Tx to High speed at the target
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   141   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_highSpeedTransmission);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   142   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   143   *      // Set the Tx link speed of the master to High speed
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   144   *      IfxHssl_setHsctTxLinkSpeed(&hsct , IfxHssl_MasterModeTxSpeed_highSpeed);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   145   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   146   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   147   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   148   * The pseudo code for setitng the target to Low speed from High speed (ie. if hsctConfig.highSpeedMode is set to TRUE).
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   149   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   150   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   151   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   152   *      // Set the Tx link speed of master to Low speed
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   153   *      IfxHssl_setHsctTxLinkSpeed(&hsct , IfxHssl_MasterModeTxSpeed_lowSpeed);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   154   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   155   *      // Send interface command to change Rx to low speed at the target
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   156   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_lowSpeedReception);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   157   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   158   *      // Set the Rx link speed of master to Low speed
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   159   *      IfxHssl_setHsctRxLinkSpeed(&hsct, IfxHssl_MasterModeRxSpeed_lowSpeed);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   160   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   161   *      // Send interface command to change Tx to low speed at the target
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   162   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_lowSpeedTransmission);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   163   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   164   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   165   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   166   * The HSSL is ready for use now!
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   167   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   168   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   169   * \section IfxLld_Hssl_Hssl_DataTransfers Data Transfers
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   170   * \subsection IfxLld_Hssl_Hssl_SimpleTransfers Simple Transfers
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   171   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   172   * The HSSL driver provides simple to use data transfer functions,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   173   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   174   * It supports direct writing of 8/16/32 bit data from the initiator into a target's register, as well as reading a value from the target
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   175   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   176   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   177   *     // write some data to remote location:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   178   *     IfxHssl_Hssl_write(&hsslChannel[0], 0x70000000, 0x12345678, IfxHssl_DataLength_32bit);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   179   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   180   *     // wait for the acknowledgement
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   181   *     while( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[0]) != IfxHssl_Hssl_Status_ok )
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   182   *     {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   183   *         if( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[0]) == IfxHssl_Hssl_Status_error )
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   184   *           {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   185   *               IfxHssl_Hssl_checkErrors(&hssl);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   186   *               break;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   187   *           }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   188   *     }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   189   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   190   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   191   * A simple to use receive function is available as well.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   192   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   193   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   194   *     // read some data from remote location:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   195   *     IfxHssl_Hssl_read(&hsslChannel[0], 0x70000000, IfxHssl_DataLength_32bit);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   196   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   197   *     // wait for the acknowledgement
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   198   *     while( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[0]) != IfxHssl_Hssl_Status_ok )
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   199   *     {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   200   *         if( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[0]) == IfxHssl_Hssl_Status_error )
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   201   *           {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   202   *               IfxHssl_Hssl_checkErrors(&hssl);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   203   *               break;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   204   *           }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   205   *     }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   206   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   207   *     // read data from the register
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   208   *     uint32 dataL = IfxHssl_Hssl_getReadData(&hsslChannel[0]);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   209   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   210   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   211   * \subsection IfxLld_Hssl_Hssl_StreamingTransfers Streaming Transfers
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   212   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   213   * HSSL driver also supports streaming transfers of data as a memory block at both low and high speeds.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   214   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   215   * Preparing the target for streaming with the desired memory location where the data needs to be transfered
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   216   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   217   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   218   *     // choose a channel other than channel2 for register access
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   219   *     // prepare streaming of single memory block
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   220   *     IfxHssl_Hssl_prepareStream(&hsslChannel[0], 0x70000000, 10);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   221   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   222   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   223   * Stream the memory block
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   224   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   225   * Usage Example:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   226   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   227   *     // __attribute__ ((aligned(256))) uint32 txData[80];  expected to be declared globally
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   228   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   229   *     // for single block streaming transfer
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   230   *     // change the txData address to global address before passing it to the API
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   231   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   232   *     // IfxHssl_Hssl_writeStream(&hssl, (uint32 *)IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), (uint32)txData),  10);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   233   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   234   *     IfxHssl_Hssl_writeStream(&hssl, txData, 10);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   235   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   236   *     // wait until the streaming is finished
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   237   *     while( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[2]) != IfxHssl_Hssl_Status_ok )
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   238   *     {}
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   239   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   240   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   241   * \subsection IfxLld_Hssl_Hssl_DMAOperatedCommandQueues DMA Operated Command Queues
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   242   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   243   * It makes sense to do this from outside the driver, by initialising the DMA after HSSL, and send command queues through linked lists
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   244   * here is an example of how to use DMA operated command queues.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   245   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   246   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   247   * Include following header files into your C code:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   248   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   249   *     #include <Hssl/Hssl/IfxHssl_Hssl.h>
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   250   *     #include <Dma/Dma/IfxDma_Dma.h>
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   251   *     #include <Scu/Std/IfxScuWdt.h>
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   252   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   253   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   254   * Declare the HSSL handle, HSCT handle, HSSL channel handle and DMA channel handle as global variables in your C code:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   255   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   256   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   257   *     // used globally
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   258   *     static IfxHssl_Hssl hssl;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   259   *     static IfxHssl_Hsct hsct;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   260   *     IfxHssl_Hssl_Channel hsslChannel;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   261   *     // DMA channel handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   262   *     IfxDma_Dma_Channel chn;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   263   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   264   *     // Linked List storage
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   265   *     // IMPORTANT: it has to be aligned to an 64bit address, otherwise DMA can't read it
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   266   *     #define NUM_LINKED_LIST_ITEMS 3
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   267   *     __attribute__ ((aligned(64))) Ifx_DMA_CH linkedList[NUM_LINKED_LIST_ITEMS] ;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   268   *     // transfer these values to channel 0 : HSSL_IWD0, HSSL_ICON0, HSSL_IRWA0 registers via linked lists
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   269   *     #define NUM_TRANSFERED_WORDS 3
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   270   *     // three write command queues with different data and to different addresses on slave
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   271   *     uint32 sourceBuffer[NUM_LINKED_LIST_ITEMS][NUM_TRANSFERED_WORDS] = {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   272   *         {0xC0CAC01A, 0xFF0A0000, 0x70000000},
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   273   *         {0xBA5EBA11, 0xFF0A0000, 0x70000010},
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   274   *         {0xDEADBEEF, 0xFF0A0000, 0x70000020}
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   275   *     };
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   276   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   277   *     // three command queues to the same channel 0
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   278   *     const uint32 destinationAddresses[NUM_LINKED_LIST_ITEMS] = {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   279   *         (uint32)&HSSL_I0_IWD,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   280   *         (uint32)&HSSL_I0_IWD,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   281   *         (uint32)&HSSL_I0_IWD
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   282   *     };
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   283   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   284   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   285   * Initialise the hssl module, see \ref IfxLld_Hssl_Hssl_InitModule
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   286   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   287   * Initialise the hssl channel
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   288   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   289   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   290   *     // create HSSL channel config
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   291   *     IfxHssl_Hssl_ChannelConfig hsslChannelConfig;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   292   *     IfxHssl_Hssl_initChannelConfig(&hsslChannelConfig, &hssl, &hsct);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   293   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   294   *     // initialize the channel 0
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   295   *     // IfxHssl_Hssl_Channel hsslChannel;  defined globally
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   296   *     hsslChannelConfig.channelId = 0;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   297   *     IfxHssl_Hssl_initChannel(&hsslChannel, &hsslChannelConfig);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   298   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   299   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   300   * Build a linked list
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   301   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   302   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   303   *     // create module config
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   304   *     IfxDma_Dma_Config dmaConfig;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   305   *     IfxDma_Dma_initModuleConfig(&dmaConfig, &MODULE_DMA);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   306   *     // initialize module
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   307   *     IfxDma_Dma dma;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   308   *     IfxDma_Dma_initModule(&dma, &dmaConfig);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   309   *     // initial channel configuration
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   310   *     IfxDma_Dma_ChannelConfig cfg;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   311   *     IfxDma_Dma_initChannelConfig(&cfg, &dma);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   312   *     // following settings are used by all transactions
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   313   *     cfg.transferCount = NUM_TRANSFERED_WORDS;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   314   *     cfg.requestMode = IfxDma_ChannelRequestMode_completeTransactionPerRequest;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   315   *     cfg.moveSize = IfxDma_ChannelMoveSize_32bit;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   316   *     cfg.shadowControl = IfxDma_ChannelShadow_linkedList;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   317   *     // generate linked list items
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   318   *     for(int i=0; i<NUM_LINKED_LIST_ITEMS; ++i) {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   319   *         cfg.sourceAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i]);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   320   *         cfg.destinationAddress = destinationAddresses[i];
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   321   *         // address to next transaction set
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   322   *         cfg.shadowAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), (uint32)&linkedList[(i + 1) % NUM_LINKED_LIST_ITEMS]);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   323   *         // transfer first transaction set into DMA channel
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   324   *         if( i == 0 ) {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   325   *             IfxDma_Dma_initChannel(&chn, &cfg);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   326   *         }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   327   *         // transfer into linked list storage
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   328   *         IfxDma_Dma_initLinkedListEntry((void *)&linkedList[i], &cfg);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   329   *         if( i == 0 ) {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   330   *             // - trigger channel interrupt once the first transaction set has been loaded (again) into DMA channel
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   331   *             linkedList[i].CHCSR.B.SIT = 1;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   332   *         } else {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   333   *          // - activate SCH (transaction request) for each entry, expect for the first one (linked list terminated here)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   334   *             linkedList[i].CHCSR.B.SCH = 1;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   335   *         }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   336   *     }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   337   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   338   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   339   * The transfer can be started via software with:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   340   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   341   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   342   *     // clear service request flag
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   343   *     (IfxDma_Dma_getSrcPointer(&chn))->B.CLRR = 1;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   344   *     // start linked list transaction
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   345   *     IfxDma_Dma_startChannelTransaction(&chn);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   346   *     // wait for service request which is triggered at the end of linked list transfers
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   347   *     while( !(IfxDma_Dma_getSrcPointer(&chn))->B.SRR );
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   348   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   349   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   350   * \subsection IfxLld_Hssl_Hssl_Interrupts Interrupts usage
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   351   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   352   * Interrupts can be enabled from the application by using the APIs provided in the driver,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   353   * there are APIs available in the driver to enable, disable, clear and read the status of interrupt falgs, along with these,\n
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   354   * APIs to enable the the enterrupts are also available.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   355   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   356   * here is an example of how to use the interrupts in HSSL driver.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   357   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   358   * Using HSCT interrupts
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   359   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   360   * After initialising HSCT module \ref IfxLld_Hssl_Hssl_InitModule
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   361   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   362   * choose what flags needs to be enabled for HSCT interrupt and call the following function once for each flag by choosing the right flag as parameter,\n
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   363   * and after choosing all the flags needed, enable the HSCT interrupt with desired type of service and priority.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   364   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   365   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   366   *     Ifx_HSCT *hsct = &MODULE_HSCT;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   367   *     IfxHssl_enableHsctInterruptFlag(hsct, IfxHssl_Hsct_InterruptSource_headerError);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   368   *     IfxHssl_enableHsctInterruptFlag(hsct, IfxHssl_Hsct_InterruptSource_payloadError);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   369   *     IfxHssl_enableHsctInterruptFlag(hsct, IfxHssl_Hsct_InterruptSource_commandError);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   370   *     IfxHssl_enableHsctInterruptFlag(hsct, IfxHssl_Hsct_InterruptSource_speedModeSwitchError);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   371   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   372   *     // enable the HSCT interrupt
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   373   *     IfxHssl_enableHsctInterrupt(hsct, IfxSrc_Tos_cpu0, 4);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   374   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   375   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   376   * Using HSSl interrupts
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   377   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   378   * HSSL global error interrupt (EXI)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   379   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   380   * After initilaising HSSL module \ref IfxLld_Hssl_Hssl_InitModule
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   381   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   382   * choose what flags needs to be enabled for HSSL global error (EXI) interrupt and call the following function once for each flag by choosing the right flag as parameter,\n
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   383   * and after choosing all the flags needed, enable the HSSL EXI interrupt with desired type of service and priority
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   384   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   385   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   386   *     Ifx_HSSL *hssl = &MODULE_HSSL;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   387   *     IfxHssl_enableHsslGlobalErrorInterruptFlag(hssl, IfxHssl_Hssl_EXIInterruptSource_busAccessError);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   388   *     IfxHssl_enableHsslGlobalErrorInterruptFlag(hssl, IfxHssl_Hssl_EXIInterruptSource_dataLengthError);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   389   *     IfxHssl_enableHsslGlobalErrorInterruptFlag(hssl, IfxHssl_Hssl_EXIInterruptSource_crcError);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   390   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   391   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   392   *     // enable the HSSL EXI interrupt
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   393   *     IfxHssl_enableHsslEXIInterrupt(hssl, IfxSrc_Tos_cpu0, 6);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   394   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   395   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   396   * HSSL channel specific error interrupt (ERR)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   397   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   398   * After initilaising HSSL channel \ref IfxLld_Hssl_Hssl_InitChannel
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   399   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   400   * choose what flags needs to be enabled for HSSL channel specific error (ERR) interrupt and call the following function once for each flag by choosing the right flag as parameter,\n
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   401   * and after choosing all the flags needed, enable the HSSL ERR interrupt with desired channel, type of service and priority
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   402   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   403   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   404   *     Ifx_HSSL *hssl = &MODULE_HSSL;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   405   *     IfxHssl_enableHsslChannelErrorInterruptFlag(hssl, channelId_0, IfxHssl_Hssl_ERRInterruptSource_transactionTagError);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   406   *     IfxHssl_enableHsslChannelErrorInterruptFlag(hssl, channelId_0, IfxHssl_Hssl_ERRInterruptSource_timeoutError);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   407   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   408   *     // enable the HSSL ERR interrupt
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   409   *     IfxHssl_enableHsslERRInterrupt(hssl, channelId_0, IfxSrc_Tos_cpu0, 8);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   410   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   411   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   412   * you can define the ISR of your own and service the interrupt, please refer to more general usage of interrupts \ref IfxLld_Cpu_Irq_Usage
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   413   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   414   * some additional APIs to clear, disable interrupt flags and get flag status are also available.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   415   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   416   * \defgroup IfxLld_Hssl_Hssl HSSL
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   417   * \ingroup IfxLld_Hssl
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   418   * \defgroup IfxLld_Hssl_Hssl_DataStructures Data Structures
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   419   * \ingroup IfxLld_Hssl_Hssl
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   420   * \defgroup IfxLld_Hssl_Hssl_Enumerations Enumerations
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   421   * \ingroup IfxLld_Hssl_Hssl
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   422   * \defgroup IfxLld_Hssl_Hssl_ModuleFunctions Module Functions
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   423   * \ingroup IfxLld_Hssl_Hssl
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   424   * \defgroup IfxLld_Hssl_Hssl_ChannelFunctions Channel Functions
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   425   * \ingroup IfxLld_Hssl_Hssl
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   426   * \defgroup IfxLld_Hssl_Hssl_SimpleCom Simple Communication
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   427   * \ingroup IfxLld_Hssl_Hssl
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   428   * \defgroup IfxLld_Hssl_Hssl_ErrorHandling Error Handling
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   429   * \ingroup IfxLld_Hssl_Hssl
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   430   * \defgroup IfxLld_Hssl_Hssl_StreamingCom Streaming Communication
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   431   * \ingroup IfxLld_Hssl_Hssl
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   432   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   433  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   434  #ifndef IFXHSSL_HSSL_H
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   435  #define IFXHSSL_HSSL_H 1
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   436  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   437  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   438  /*----------------------------------Includes----------------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   439  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   440  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   441  #include "Hssl/Std/IfxHssl.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   442  #include "Port/Std/IfxPort.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   443  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   444  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   445  /*--------------------------------Enumerations--------------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   446  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   447  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   448  /** \addtogroup IfxLld_Hssl_Hssl_Enumerations
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   449   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   450  /** \brief frame request selection
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   451   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   452  typedef enum
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   453  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   454      IfxHssl_Hssl_FrameRequest_readFrame    = 1,  /**< \brief read frame rquest */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   455      IfxHssl_Hssl_FrameRequest_writeFrame   = 2,  /**< \brief write frame rquest */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   456      IfxHssl_Hssl_FrameRequest_triggerFrame = 3,  /**< \brief trigger frame rquest */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   457      IfxHssl_Hssl_FrameRequest_readId       = 4,  /**< \brief read id request */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   458      IfxHssl_Hssl_FrameRequest_noAction     = 5   /**< \brief no action */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   459  } IfxHssl_Hssl_FrameRequest;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   460  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   461  /** \brief module status
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   462   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   463  typedef enum
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   464  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   465      IfxHssl_Hssl_Status_ok    = 0, /**< \brief status ok */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   466      IfxHssl_Hssl_Status_busy  = 1, /**< \brief status busy */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   467      IfxHssl_Hssl_Status_error = 2  /**< \brief status error */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   468  } IfxHssl_Hssl_Status;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   469  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   470  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   471  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   472  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   473  /*-----------------------------Data Structures--------------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   474  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   475  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   476  /** \addtogroup IfxLld_Hssl_Hssl_DataStructures
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   477   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   478  /** \brief structure for access windows
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   479   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   480  typedef struct
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   481  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   482      uint32 start;       /**< \brief start of the access */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   483      uint32 end;         /**< \brief end of the access */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   484  } IfxHssl_Hssl_AccessWindow;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   485  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   486  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   487  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   488  /** \brief structure for error flags
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   489   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   490  typedef struct
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   491  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   492      uint8 notAcknowledgeError : 1;        /**< \brief not acknowledge error / tag error */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   493      uint8 transactionTagError : 1;        /**< \brief transaction tag error */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   494      uint8 timeoutError : 1;               /**< \brief timeout error */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   495      uint8 unexpectedError : 1;            /**< \brief unexpected type of frame error */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   496      uint8 memoryAccessViolation : 1;      /**< \brief memory access violation */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   497      uint8 busAccessError : 1;             /**< \brief SRI/SPB bus access error */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   498      uint8 channelNumberCodeError : 1;     /**< \brief PHY inconsistency error 1 (channel number code error) */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   499      uint8 dataLengthError : 1;            /**< \brief PHY inconsistency error 2 (data length error) */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   500      uint8 crcError : 1;                   /**< \brief CRC error */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   501  } IfxHssl_Hssl_errorFlags;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   502  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   503  /** \addtogroup IfxLld_Hssl_Hssl_DataStructures
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   504   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   505  /** \brief HSSL Handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   506   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   507  typedef struct
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   508  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   509      Ifx_HSSL               *hssl;             /**< \brief pointer to HSSL register */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   510      IfxHssl_Hssl_errorFlags errorFlags;       /**< \brief structure for error flags */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   511      boolean                 loopBack;         /**< \brief loop back (enable / disable) for streaming transfers within the microcontroller */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   512  } IfxHssl_Hssl;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   513  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   514  /** \brief channel handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   515   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   516  typedef struct
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   517  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   518      Ifx_HSSL                 *hssl;                      /**< \brief pointer to HSSL registers */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   519      Ifx_HSCT                 *hsct;                      /**< \brief pointer to HSCT registers */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   520      IfxHssl_ChannelId         channelId;                 /**< \brief channel number (id) */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   521      IfxHssl_Hssl_FrameRequest currentFrameRequest;       /**< \brief current frame request */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   522      IfxHssl_StreamingMode     streamingMode;             /**< \brief streaming mode selection ( single / continuous ) */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   523      boolean                   loopBack;                  /**< \brief loopback (enable / disable) for streaming transfers within the microcontroller */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   524      boolean                   streamingModeOn;           /**< \brief streaming mode or command mode */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   525  } IfxHssl_Hssl_Channel;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   526  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   527  /** \brief configuration structure for channel
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   528   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   529  typedef struct
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   530  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   531      Ifx_HSSL             *hssl;                /**< \brief pointer to HSSL registers */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   532      Ifx_HSCT             *hsct;                /**< \brief pointer to HSCT registers */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   533      IfxHssl_ChannelId     channelId;           /**< \brief channel number (id) */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   534      IfxHssl_StreamingMode streamingMode;       /**< \brief streaming mode selection ( single / continuous ) */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   535      boolean               loopBack;            /**< \brief loop back (enable / disable) for streaming transfers within the microcontroller */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   536  } IfxHssl_Hssl_ChannelConfig;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   537  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   538  /** \brief configuration structure of the HSSL module
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   539   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   540  typedef struct
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   541  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   542      Ifx_HSSL                 *hssl;                /**< \brief pointer to HSSL registers */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   543      IfxHssl_Hssl_AccessWindow accessWindow0;       /**< \brief access window of channel 0 */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   544      IfxHssl_Hssl_AccessWindow accessWindow1;       /**< \brief access window of channel 1 */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   545      IfxHssl_Hssl_AccessWindow accessWindow2;       /**< \brief access window of channel 2 */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   546      IfxHssl_Hssl_AccessWindow accessWindow3;       /**< \brief access window of channel 3 */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   547      uint16                    preDivider;          /**< \brief Defines the down-scaled module clock to be used by all channel timeout timers */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   548  } IfxHssl_Hssl_Config;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   549  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   550  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   551  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   552  /** \addtogroup IfxLld_Hssl_Hssl_ModuleFunctions
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   553   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   554  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   555  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   556  /*-------------------------Global Function Prototypes-------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   557  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   558  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   559  /** \brief Initialises the module
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   560   * \param hsct HSCT Handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   561   * \param config configuration structure of the HSCT module
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   562   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   563   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   564   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   565   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   566   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   567  IFX_EXTERN void IfxHssl_Hssl_initHsctModule(IfxHssl_Hsct *hsct, const IfxHssl_Hsct_Config *config);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   568  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   569  /** \brief Fills the config structure with default values
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   570   * \param config configuration structure of the HSCT module
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   571   * \param hsct pointer to HSCT register
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   572   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   573   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   574   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   575   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   576   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   577  IFX_EXTERN void IfxHssl_Hssl_initHsctModuleConfig(IfxHssl_Hsct_Config *config, Ifx_HSCT *hsct);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   578  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   579  /** \brief Initialises the Hssl module
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   580   * \param hssl HSSL handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   581   * \param config configuration structure of the module
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   582   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   583   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   584   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   585   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   586   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   587  IFX_EXTERN void IfxHssl_Hssl_initHsslModule(IfxHssl_Hssl *hssl, const IfxHssl_Hssl_Config *config);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   588  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   589  /** \brief Fills the config structure with default values
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   590   * \param config configuration structure of the module
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   591   * \param hssl pointer to HSSL registers
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   592   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   593   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   594   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   595   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   596   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   597  IFX_EXTERN void IfxHssl_Hssl_initHsslModuleConfig(IfxHssl_Hssl_Config *config, Ifx_HSSL *hssl);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   598  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   599  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   600  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   601  /** \addtogroup IfxLld_Hssl_Hssl_ChannelFunctions
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   602   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   603  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   604  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   605  /*-------------------------Global Function Prototypes-------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   606  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   607  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   608  /** \brief Initialises the channel
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   609   * \param channel channel handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   610   * \param channelConfig configuration structure for channel
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   611   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   612   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   613   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   614   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   615   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   616  IFX_EXTERN void IfxHssl_Hssl_initChannel(IfxHssl_Hssl_Channel *channel, const IfxHssl_Hssl_ChannelConfig *channelConfig);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   617  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   618  /** \brief Fills the channel config structure with default values
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   619   * \param channelConfig configuration structure for channel
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   620   * \param hssl HSSL Handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   621   * \param hsct HSCT Handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   622   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   623   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   624   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   625   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   626   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   627  IFX_EXTERN void IfxHssl_Hssl_initChannelConfig(IfxHssl_Hssl_ChannelConfig *channelConfig, IfxHssl_Hssl *hssl, IfxHssl_Hsct *hsct);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   628  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   629  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   630  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   631  /** \addtogroup IfxLld_Hssl_Hssl_SimpleCom
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   632   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   633  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   634  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   635  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   636  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   637  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   638  /** \brief reads and returs the data
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   639   * \param channel channel handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   640   * \return data
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   641   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   642   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   643   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   644   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   645  IFX_INLINE uint32 IfxHssl_Hssl_getReadData(IfxHssl_Hssl_Channel *channel);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   646  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   647  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   648  /*-------------------------Global Function Prototypes-------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   649  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   650  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   651  /** \brief Initiates read request
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   652   * \param channel channel handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   653   * \param address address of the location from where the data is to be read
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   654   * \param dataLength length of the data
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   655   * \return module status (ok, busy, error)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   656   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   657   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   658   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   659   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   660  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_read(IfxHssl_Hssl_Channel *channel, uint32 address, IfxHssl_DataLength dataLength);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   661  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   662  /** \brief sends a predefined command from master to slave
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   663   * \param hsct HSCT Handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   664   * \param command command value
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   665   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   666   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   667   * Usage Example:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   668   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   669   *     // enable slave Tx channel (Rx disable to Rx low peed)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   670   *     IfxHssl_Hssl_sendControlCommand(&channel, IfxHssl_ControlCommand_enableReception);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   671   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   672   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   673   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   674  IFX_EXTERN void IfxHssl_Hssl_sendControlCommand(IfxHssl_Hsct *hsct, uint8 command);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   675  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   676  /** \brief serves the frame request (read, write, trigger frame and read id)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   677   * \param channel channel handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   678   * \param frameRequest frame request
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   679   * \param address address of the location (to be written into / read from)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   680   * \param data data to be written
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   681   * \param dataLength length of the data
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   682   * \return module status (ok, busy, error)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   683   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   684  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_singleFrameRequest(IfxHssl_Hssl_Channel *channel, IfxHssl_Hssl_FrameRequest frameRequest, uint32 address, uint32 data, IfxHssl_DataLength dataLength);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   685  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   686  /** \brief waits until the current transaction is done
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   687   * \param channel channel handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   688   * \return module status (ok, busy, error)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   689   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   690   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   691   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   692   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   693  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_waitAcknowledge(IfxHssl_Hssl_Channel *channel);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   694  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   695  /** \brief writes single frame of data into the specified address
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   696   * \param channel channel handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   697   * \param address address of the location where the data is to be written
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   698   * \param data data that needs to be written
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   699   * \param dataLength length of the data (8, 16, 32 bit)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   700   * \return module status (ok, busy, error)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   701   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   702   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   703   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   704   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   705  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_write(IfxHssl_Hssl_Channel *channel, uint32 address, uint32 data, IfxHssl_DataLength dataLength);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   706  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   707  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   708  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   709  /** \addtogroup IfxLld_Hssl_Hssl_ErrorHandling
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   710   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   711  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   712  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   713  /*-------------------------Global Function Prototypes-------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   714  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   715  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   716  /** \brief stores the status of errors in the respective members of the error flags structure
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   717   * \param hssl HSSL Handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   718   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   719   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   720  IFX_EXTERN void IfxHssl_Hssl_checkErrors(IfxHssl_Hssl *hssl);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   721  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   722  /** \brief clears the status of members in the error flags structure
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   723   * \param hssl HSSL Handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   724   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   725   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   726  IFX_EXTERN void IfxHssl_Hssl_clearErrorFlags(IfxHssl_Hssl *hssl);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   727  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   728  /** \brief a simple software delay
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   729   * \param hsct HSCT Handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   730   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   731   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   732  IFX_EXTERN void IfxHssl_Hssl_delay(IfxHssl_Hsct *hsct);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   733  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   734  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   735  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   736  /** \addtogroup IfxLld_Hssl_Hssl_StreamingCom
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   737   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   738  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   739  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   740  /*-------------------------Global Function Prototypes-------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   741  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   742  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   743  /** \brief Prepares the target device for streaming
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   744   * \param channel channel handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   745   * \param slaveTargetAddress address of the location on target device where the data needs to be transfered
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   746   * \param count Frame count (length of the data in the memory as 256 bytes per frame)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   747   * \return module status (ok, busy, error)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   748   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   749   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   750   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   751   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   752  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_prepareStream(IfxHssl_Hssl_Channel *channel, uint32 slaveTargetAddress, Ifx_SizeT count);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   753  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   754  /** \brief transfers one memory block of data
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   755   * useful for transfering huge data from one location to another and between devices.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   756   * NOTE: This function should be called only for IfxHssl_ChannelId_2
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   757   * \param hssl HSSL handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   758   * \param data starting address of the location to be read from (memory block 0 / HSSL_ISSA0)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   759   * \param count Frame count (length of the data in the memory as 256 bytes per frame)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   760   * \return module status (ok, busy, error)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   761   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   762   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   763   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   764   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   765  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_writeStream(IfxHssl_Hssl *hssl, uint32 *data, Ifx_SizeT count);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   766  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   767  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   768  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   769  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   770  /*---------------------Inline Function Implementations------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   771  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   772  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   773  IFX_INLINE uint32 IfxHssl_Hssl_getReadData(IfxHssl_Hssl_Channel *channel)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   774  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   775      Ifx_HSSL_I *hsslI = (Ifx_HSSL_I *)&channel->hssl->I[channel->channelId];
	ld.bu	d15,[a15]8
.L810:
	mul	d15,d15,#16
.L811:
	ld.a	a2,[a15]
.L812:
	addsc.a	a2,a2,d15,#0
	lea	a2,[a2]48
.L380:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   776      return hsslI->IRD.U;    /* retutn the data read from the data register */
	ld.w	d15,[a2]12
.L382:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   776      return hsslI->IRD.U;    /* retutn the data read from the data register */      (inlined)
	j	.L34

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   777  }      (inlined)
.L34:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   341  RELCOUNT = tsfcReg.B.CURCOUNT;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   342      /* Set the RELCOUNT equal to CURCOUNT on the target */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   343      IfxHssl_Hssl_singleFrameRequest(channel, IfxHssl_Hssl_FrameRequest_writeFrame, (uint32)&channel->hssl->TS.FC, count, IfxHssl_DataLength_16bit);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   344  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   345      while (IfxHssl_Hssl_waitAcknowledge(channel) != IfxHssl_Hssl_Status_ok)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   346      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   347          if (IfxHssl_Hssl_waitAcknowledge(channel) == IfxHssl_Hssl_Status_error)
	mov	d4,#2
.L813:
	ld.a	a2,[a15]
.L381:
	lea	a2,[a2]188
	mov.d	d5,a2
.L814:
	mov	d7,#1
	mov.aa	a4,a15
.L384:
	mov	d6,d8
.L386:
	call	IfxHssl_Hssl_singleFrameRequest
.L385:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   348          {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   349              return IfxHssl_Hssl_Status_error;
	j	.L35
.L36:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   350          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   351      }
	mov.aa	a4,a15
.L387:
	call	IfxHssl_Hssl_waitAcknowledge
.L388:
	jne	d2,#2,.L37
.L815:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   352  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   353      /* Disable the streaming on the target */
	mov	d2,#2
.L816:
	j	.L38
.L37:
.L35:
	mov.aa	a4,a15
.L389:
	call	IfxHssl_Hssl_waitAcknowledge
.L390:
	jne	d2,#0,.L36
.L817:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   354      IfxHssl_Hssl_singleFrameRequest(channel, IfxHssl_Hssl_FrameRequest_writeFrame, (uint32)&channel->hssl->MFLAGSCL, (1 << IFX_HSSL_MFLAGSCL_TSEC_OFF), IfxHssl_DataLength_32bit);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   355  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   356      while (IfxHssl_Hssl_waitAcknowledge(channel) != IfxHssl_Hssl_Status_ok)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   357      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   358          if (IfxHssl_Hssl_waitAcknowledge(channel) == IfxHssl_Hssl_Status_error)
	mov	d4,#2
.L818:
	ld.w	d15,[a15]
.L383:
	add	d5,d15,#32
.L819:
	movh	d6,#4096
.L820:
	mov	d7,#2
	mov.aa	a4,a15
.L391:
	call	IfxHssl_Hssl_singleFrameRequest
.L392:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   359          {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   360              return IfxHssl_Hssl_Status_error;
	j	.L39
.L40:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   361          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   362      }
	mov.aa	a4,a15
.L393:
	call	IfxHssl_Hssl_waitAcknowledge
.L394:
	jne	d2,#2,.L41
.L821:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   363  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   364      /* memory count into target reload count register on target device */
	mov	d2,#2
.L822:
	j	.L42
.L41:
.L39:
	mov.aa	a4,a15
.L395:
	call	IfxHssl_Hssl_waitAcknowledge
.L396:
	jne	d2,#0,.L40
.L823:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   365      IfxHssl_Hssl_singleFrameRequest(channel, IfxHssl_Hssl_FrameRequest_writeFrame, (uint32)&channel->hssl->TS.FC, count, IfxHssl_DataLength_16bit);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   366  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   367      while (IfxHssl_Hssl_waitAcknowledge(channel) != IfxHssl_Hssl_Status_ok)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   368      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   369          if (IfxHssl_Hssl_waitAcknowledge(channel) == IfxHssl_Hssl_Status_error)
	mov	d4,#2
.L824:
	ld.a	a2,[a15]
.L825:
	lea	a2,[a2]188
	mov.d	d5,a2
.L826:
	mov	d7,#1
	mov.aa	a4,a15
.L397:
	mov	d6,d8
.L399:
	call	IfxHssl_Hssl_singleFrameRequest
.L398:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   370          {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   371              return IfxHssl_Hssl_Status_error;
	j	.L43
.L44:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   372          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   373      }
	mov.aa	a4,a15
.L400:
	call	IfxHssl_Hssl_waitAcknowledge
.L401:
	jne	d2,#2,.L45
.L827:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   374  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   375      /* incase of transfers between two different devices (loopback off) */
	mov	d2,#2
.L828:
	j	.L46
.L45:
.L43:
	mov.aa	a4,a15
.L402:
	call	IfxHssl_Hssl_waitAcknowledge
.L403:
	jne	d2,#0,.L44
.L829:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   376      if (!channel->loopBack)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   377      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   378          /* Get the target configuration */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   379          IfxHssl_Hssl_read(channel, (uint32)&channel->hssl->CFG, IfxHssl_DataLength_32bit);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   380  
	ld.bu	d15,[a15]11
.L830:
	jne	d15,#0,.L47
.L831:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   381          while (IfxHssl_Hssl_waitAcknowledge(channel) != IfxHssl_Hssl_Status_ok)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   382          {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   383              if (IfxHssl_Hssl_waitAcknowledge(channel) == IfxHssl_Hssl_Status_error)
	ld.w	d15,[a15]
.L832:
	add	d4,d15,#16
.L833:
	mov	d5,#2
	mov.aa	a4,a15
.L404:
	call	IfxHssl_Hssl_read
.L405:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   384              {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   385                  return IfxHssl_Hssl_Status_error;
	j	.L48
.L49:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   386              }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   387          }
	mov.aa	a4,a15
.L406:
	call	IfxHssl_Hssl_waitAcknowledge
.L407:
	jne	d2,#2,.L50
.L834:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   388  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   389          /* Check if the target streaming is enabled */
	mov	d2,#2
.L835:
	j	.L51
.L50:
.L48:
	mov.aa	a4,a15
.L408:
	call	IfxHssl_Hssl_waitAcknowledge
.L409:
	jne	d2,#0,.L49
.L334:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     1  /**
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     2   * \file IfxHssl_Hssl.h
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     3   * \brief HSSL HSSL details
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     4   * \ingroup IfxLld_Hssl
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     5   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     6   * \version iLLD_1_0_1_11_0
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     8   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     9   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    10   *                                 IMPORTANT NOTICE
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    11   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    12   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    17  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    18  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    20  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    26   * Software is furnished to do so, all subject to the following:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    27  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    33   * language processor.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    34  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    42  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    43   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    44   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    45   * \defgroup IfxLld_Hssl_Hssl_Usage How to use the HSSL Interface driver?
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    46   * \ingroup IfxLld_Hssl
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    47   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    48   * The HSSL interface driver provides a default HSSL/HSCT configuration for point to point communication at two transfer speeds, 5MBaud (low speed) and 320MBaud (high speed).
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    49   * It also supports streaming transfers of data a memory block at both low and high speeds.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    50   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    51   * In the following sections it will be described, how to integrate the driver into the application framework.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    52   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    53   * \section IfxLld_Hssl_Hssl_Preparation Preparation
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    54   * \subsection IfxLld_Hssl_Hssl_Include Include Files
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    55   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    56   * Include following header file into your C code:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    57   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    58   *     #include <Hssl/Hssl/IfxHssl_Hssl.h>
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    59   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    60   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    61   * \subsection IfxLld_Hssl_Hssl_Variables Variables
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    62   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    63   * Declare the HSSL handle, HSCT handle and channel array as global variables in your C code:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    64   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    65   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    66   *     // used globally
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    67   *     static IfxHssl_Hssl hssl;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    68   *     static IfxHssl_Hsct hsct;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    69   *     IfxHssl_Hssl_Channel hsslChannel[4];
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    70   *     __attribute__ ((aligned(256))) uint32 txData[80]; // needs to be declared globally in case of streaming transfers
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    71   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    72   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    73   * \subsection IfxLld_Hssl_Hssl_InitModule Module Initialisation
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    74   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    75   * The module initialisation can be done as follows:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    76   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    77   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    78   *     // create module config
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    79   *     IfxHssl_Hsct_Config hsctConfig;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    80   *     IfxHssl_Hssl_initHsctModuleConfig(&hsctConfig, &MODULE_HSCT);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    81   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    82   *     // select the interface mode (in case of slave)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    83   *     hsctConfig.interfaceMode = IfxHssl_InterfaceMode_slave;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    84   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    85   *     // select the high speed mode if required
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    86   *     hsctConfig.highSpeedMode = TRUE;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    87   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    88   *     // initialize module
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    89   *     // IfxHssl_Hsct hsct;  defined globally
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    90   *     IfxHssl_Hssl_initHsctModule(&hsct, &hsctConfig);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    91   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    92   *     // create module config
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    93   *     IfxHssl_Hssl_Config hsslConfig;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    94   *     IfxHssl_Hssl_initHsslModuleConfig(&hsslConfig, &MODULE_HSSL);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    95   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    96   *     // IfxHssl_Hssl hssl;  defined globally
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    97   *     IfxHssl_Hssl_initHsslModule(&hssl, &hsslConfig);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    98   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    99   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   100   * If application intends to explicitly configure the pins for HSCT module IFXHSSL_HSCT_DISABLE_PINCONFIG macro should be defined in the application.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   101   * The explicit pin assignment should be done prior to IfxHssl_Hssl_initHsctModule().
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   102   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   103   * \subsection IfxLld_Hssl_Hssl_InitChannel Channel Initialisation
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   104   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   105   * The Channel initialisation can be done as follows:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   106   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   107   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   108   *     // create HSSL channel config
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   109   *     IfxHssl_Hssl_ChannelConfig hsslChannelConfig;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   110   *     IfxHssl_Hssl_initChannelConfig(&hsslChannelConfig, &hssl, &hsct);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   111   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   112   *     // initialize the channels
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   113   *     // IfxHssl_Hssl_Channel hsslChannel[4];  defined globally
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   114   *     for(int i=0; i<4; ++i)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   115   *     {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   116   *         hsslChannelConfig.channelId = (IfxHssl_ChannelId)i;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   117   *         IfxHssl_Hssl_initChannel(&hsslChannel[i], &hsslChannelConfig);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   118   *     }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   119   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   120   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   121   * \subsection IfxLld_Hssl_Hssl_LinkSpeed Changing HSCT link speed
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   122   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   123   * The link speed change can be done as follows
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   124   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   125   * As per the above settings the HSCT master is in High speed reception and transmission.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   126   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   127   * The pseudo code for setting the target to High speed is as below
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   128   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   129   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   130   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   131   *      // Set the Tx link speed of the master to Low speed
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   132   *      IfxHssl_setHsctTxLinkSpeed(&hsct , IfxHssl_MasterModeTxSpeed_lowSpeed);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   133   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   134   *      // Enable reception at the Slave
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   135   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_enableReception);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   136   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   137   *      // Send interface commmand to change Rx to High speed at the target
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   138   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_highSpeedReception);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   139   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   140   *      // Send interface commmand to change Tx to High speed at the target
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   141   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_highSpeedTransmission);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   142   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   143   *      // Set the Tx link speed of the master to High speed
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   144   *      IfxHssl_setHsctTxLinkSpeed(&hsct , IfxHssl_MasterModeTxSpeed_highSpeed);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   145   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   146   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   147   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   148   * The pseudo code for setitng the target to Low speed from High speed (ie. if hsctConfig.highSpeedMode is set to TRUE).
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   149   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   150   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   151   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   152   *      // Set the Tx link speed of master to Low speed
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   153   *      IfxHssl_setHsctTxLinkSpeed(&hsct , IfxHssl_MasterModeTxSpeed_lowSpeed);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   154   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   155   *      // Send interface command to change Rx to low speed at the target
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   156   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_lowSpeedReception);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   157   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   158   *      // Set the Rx link speed of master to Low speed
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   159   *      IfxHssl_setHsctRxLinkSpeed(&hsct, IfxHssl_MasterModeRxSpeed_lowSpeed);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   160   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   161   *      // Send interface command to change Tx to low speed at the target
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   162   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_lowSpeedTransmission);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   163   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   164   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   165   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   166   * The HSSL is ready for use now!
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   167   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   168   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   169   * \section IfxLld_Hssl_Hssl_DataTransfers Data Transfers
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   170   * \subsection IfxLld_Hssl_Hssl_SimpleTransfers Simple Transfers
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   171   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   172   * The HSSL driver provides simple to use data transfer functions,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   173   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   174   * It supports direct writing of 8/16/32 bit data from the initiator into a target's register, as well as reading a value from the target
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   175   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   176   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   177   *     // write some data to remote location:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   178   *     IfxHssl_Hssl_write(&hsslChannel[0], 0x70000000, 0x12345678, IfxHssl_DataLength_32bit);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   179   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   180   *     // wait for the acknowledgement
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   181   *     while( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[0]) != IfxHssl_Hssl_Status_ok )
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   182   *     {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   183   *         if( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[0]) == IfxHssl_Hssl_Status_error )
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   184   *           {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   185   *               IfxHssl_Hssl_checkErrors(&hssl);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   186   *               break;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   187   *           }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   188   *     }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   189   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   190   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   191   * A simple to use receive function is available as well.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   192   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   193   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   194   *     // read some data from remote location:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   195   *     IfxHssl_Hssl_read(&hsslChannel[0], 0x70000000, IfxHssl_DataLength_32bit);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   196   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   197   *     // wait for the acknowledgement
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   198   *     while( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[0]) != IfxHssl_Hssl_Status_ok )
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   199   *     {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   200   *         if( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[0]) == IfxHssl_Hssl_Status_error )
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   201   *           {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   202   *               IfxHssl_Hssl_checkErrors(&hssl);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   203   *               break;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   204   *           }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   205   *     }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   206   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   207   *     // read data from the register
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   208   *     uint32 dataL = IfxHssl_Hssl_getReadData(&hsslChannel[0]);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   209   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   210   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   211   * \subsection IfxLld_Hssl_Hssl_StreamingTransfers Streaming Transfers
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   212   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   213   * HSSL driver also supports streaming transfers of data as a memory block at both low and high speeds.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   214   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   215   * Preparing the target for streaming with the desired memory location where the data needs to be transfered
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   216   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   217   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   218   *     // choose a channel other than channel2 for register access
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   219   *     // prepare streaming of single memory block
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   220   *     IfxHssl_Hssl_prepareStream(&hsslChannel[0], 0x70000000, 10);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   221   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   222   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   223   * Stream the memory block
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   224   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   225   * Usage Example:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   226   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   227   *     // __attribute__ ((aligned(256))) uint32 txData[80];  expected to be declared globally
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   228   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   229   *     // for single block streaming transfer
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   230   *     // change the txData address to global address before passing it to the API
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   231   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   232   *     // IfxHssl_Hssl_writeStream(&hssl, (uint32 *)IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), (uint32)txData),  10);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   233   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   234   *     IfxHssl_Hssl_writeStream(&hssl, txData, 10);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   235   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   236   *     // wait until the streaming is finished
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   237   *     while( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[2]) != IfxHssl_Hssl_Status_ok )
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   238   *     {}
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   239   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   240   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   241   * \subsection IfxLld_Hssl_Hssl_DMAOperatedCommandQueues DMA Operated Command Queues
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   242   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   243   * It makes sense to do this from outside the driver, by initialising the DMA after HSSL, and send command queues through linked lists
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   244   * here is an example of how to use DMA operated command queues.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   245   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   246   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   247   * Include following header files into your C code:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   248   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   249   *     #include <Hssl/Hssl/IfxHssl_Hssl.h>
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   250   *     #include <Dma/Dma/IfxDma_Dma.h>
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   251   *     #include <Scu/Std/IfxScuWdt.h>
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   252   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   253   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   254   * Declare the HSSL handle, HSCT handle, HSSL channel handle and DMA channel handle as global variables in your C code:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   255   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   256   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   257   *     // used globally
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   258   *     static IfxHssl_Hssl hssl;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   259   *     static IfxHssl_Hsct hsct;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   260   *     IfxHssl_Hssl_Channel hsslChannel;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   261   *     // DMA channel handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   262   *     IfxDma_Dma_Channel chn;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   263   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   264   *     // Linked List storage
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   265   *     // IMPORTANT: it has to be aligned to an 64bit address, otherwise DMA can't read it
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   266   *     #define NUM_LINKED_LIST_ITEMS 3
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   267   *     __attribute__ ((aligned(64))) Ifx_DMA_CH linkedList[NUM_LINKED_LIST_ITEMS] ;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   268   *     // transfer these values to channel 0 : HSSL_IWD0, HSSL_ICON0, HSSL_IRWA0 registers via linked lists
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   269   *     #define NUM_TRANSFERED_WORDS 3
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   270   *     // three write command queues with different data and to different addresses on slave
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   271   *     uint32 sourceBuffer[NUM_LINKED_LIST_ITEMS][NUM_TRANSFERED_WORDS] = {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   272   *         {0xC0CAC01A, 0xFF0A0000, 0x70000000},
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   273   *         {0xBA5EBA11, 0xFF0A0000, 0x70000010},
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   274   *         {0xDEADBEEF, 0xFF0A0000, 0x70000020}
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   275   *     };
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   276   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   277   *     // three command queues to the same channel 0
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   278   *     const uint32 destinationAddresses[NUM_LINKED_LIST_ITEMS] = {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   279   *         (uint32)&HSSL_I0_IWD,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   280   *         (uint32)&HSSL_I0_IWD,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   281   *         (uint32)&HSSL_I0_IWD
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   282   *     };
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   283   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   284   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   285   * Initialise the hssl module, see \ref IfxLld_Hssl_Hssl_InitModule
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   286   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   287   * Initialise the hssl channel
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   288   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   289   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   290   *     // create HSSL channel config
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   291   *     IfxHssl_Hssl_ChannelConfig hsslChannelConfig;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   292   *     IfxHssl_Hssl_initChannelConfig(&hsslChannelConfig, &hssl, &hsct);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   293   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   294   *     // initialize the channel 0
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   295   *     // IfxHssl_Hssl_Channel hsslChannel;  defined globally
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   296   *     hsslChannelConfig.channelId = 0;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   297   *     IfxHssl_Hssl_initChannel(&hsslChannel, &hsslChannelConfig);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   298   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   299   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   300   * Build a linked list
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   301   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   302   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   303   *     // create module config
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   304   *     IfxDma_Dma_Config dmaConfig;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   305   *     IfxDma_Dma_initModuleConfig(&dmaConfig, &MODULE_DMA);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   306   *     // initialize module
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   307   *     IfxDma_Dma dma;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   308   *     IfxDma_Dma_initModule(&dma, &dmaConfig);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   309   *     // initial channel configuration
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   310   *     IfxDma_Dma_ChannelConfig cfg;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   311   *     IfxDma_Dma_initChannelConfig(&cfg, &dma);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   312   *     // following settings are used by all transactions
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   313   *     cfg.transferCount = NUM_TRANSFERED_WORDS;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   314   *     cfg.requestMode = IfxDma_ChannelRequestMode_completeTransactionPerRequest;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   315   *     cfg.moveSize = IfxDma_ChannelMoveSize_32bit;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   316   *     cfg.shadowControl = IfxDma_ChannelShadow_linkedList;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   317   *     // generate linked list items
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   318   *     for(int i=0; i<NUM_LINKED_LIST_ITEMS; ++i) {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   319   *         cfg.sourceAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i]);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   320   *         cfg.destinationAddress = destinationAddresses[i];
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   321   *         // address to next transaction set
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   322   *         cfg.shadowAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), (uint32)&linkedList[(i + 1) % NUM_LINKED_LIST_ITEMS]);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   323   *         // transfer first transaction set into DMA channel
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   324   *         if( i == 0 ) {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   325   *             IfxDma_Dma_initChannel(&chn, &cfg);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   326   *         }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   327   *         // transfer into linked list storage
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   328   *         IfxDma_Dma_initLinkedListEntry((void *)&linkedList[i], &cfg);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   329   *         if( i == 0 ) {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   330   *             // - trigger channel interrupt once the first transaction set has been loaded (again) into DMA channel
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   331   *             linkedList[i].CHCSR.B.SIT = 1;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   332   *         } else {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   333   *          // - activate SCH (transaction request) for each entry, expect for the first one (linked list terminated here)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   334   *             linkedList[i].CHCSR.B.SCH = 1;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   335   *         }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   336   *     }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   337   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   338   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   339   * The transfer can be started via software with:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   340   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   341   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   342   *     // clear service request flag
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   343   *     (IfxDma_Dma_getSrcPointer(&chn))->B.CLRR = 1;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   344   *     // start linked list transaction
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   345   *     IfxDma_Dma_startChannelTransaction(&chn);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   346   *     // wait for service request which is triggered at the end of linked list transfers
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   347   *     while( !(IfxDma_Dma_getSrcPointer(&chn))->B.SRR );
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   348   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   349   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   350   * \subsection IfxLld_Hssl_Hssl_Interrupts Interrupts usage
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   351   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   352   * Interrupts can be enabled from the application by using the APIs provided in the driver,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   353   * there are APIs available in the driver to enable, disable, clear and read the status of interrupt falgs, along with these,\n
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   354   * APIs to enable the the enterrupts are also available.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   355   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   356   * here is an example of how to use the interrupts in HSSL driver.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   357   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   358   * Using HSCT interrupts
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   359   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   360   * After initialising HSCT module \ref IfxLld_Hssl_Hssl_InitModule
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   361   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   362   * choose what flags needs to be enabled for HSCT interrupt and call the following function once for each flag by choosing the right flag as parameter,\n
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   363   * and after choosing all the flags needed, enable the HSCT interrupt with desired type of service and priority.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   364   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   365   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   366   *     Ifx_HSCT *hsct = &MODULE_HSCT;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   367   *     IfxHssl_enableHsctInterruptFlag(hsct, IfxHssl_Hsct_InterruptSource_headerError);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   368   *     IfxHssl_enableHsctInterruptFlag(hsct, IfxHssl_Hsct_InterruptSource_payloadError);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   369   *     IfxHssl_enableHsctInterruptFlag(hsct, IfxHssl_Hsct_InterruptSource_commandError);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   370   *     IfxHssl_enableHsctInterruptFlag(hsct, IfxHssl_Hsct_InterruptSource_speedModeSwitchError);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   371   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   372   *     // enable the HSCT interrupt
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   373   *     IfxHssl_enableHsctInterrupt(hsct, IfxSrc_Tos_cpu0, 4);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   374   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   375   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   376   * Using HSSl interrupts
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   377   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   378   * HSSL global error interrupt (EXI)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   379   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   380   * After initilaising HSSL module \ref IfxLld_Hssl_Hssl_InitModule
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   381   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   382   * choose what flags needs to be enabled for HSSL global error (EXI) interrupt and call the following function once for each flag by choosing the right flag as parameter,\n
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   383   * and after choosing all the flags needed, enable the HSSL EXI interrupt with desired type of service and priority
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   384   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   385   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   386   *     Ifx_HSSL *hssl = &MODULE_HSSL;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   387   *     IfxHssl_enableHsslGlobalErrorInterruptFlag(hssl, IfxHssl_Hssl_EXIInterruptSource_busAccessError);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   388   *     IfxHssl_enableHsslGlobalErrorInterruptFlag(hssl, IfxHssl_Hssl_EXIInterruptSource_dataLengthError);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   389   *     IfxHssl_enableHsslGlobalErrorInterruptFlag(hssl, IfxHssl_Hssl_EXIInterruptSource_crcError);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   390   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   391   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   392   *     // enable the HSSL EXI interrupt
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   393   *     IfxHssl_enableHsslEXIInterrupt(hssl, IfxSrc_Tos_cpu0, 6);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   394   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   395   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   396   * HSSL channel specific error interrupt (ERR)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   397   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   398   * After initilaising HSSL channel \ref IfxLld_Hssl_Hssl_InitChannel
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   399   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   400   * choose what flags needs to be enabled for HSSL channel specific error (ERR) interrupt and call the following function once for each flag by choosing the right flag as parameter,\n
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   401   * and after choosing all the flags needed, enable the HSSL ERR interrupt with desired channel, type of service and priority
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   402   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   403   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   404   *     Ifx_HSSL *hssl = &MODULE_HSSL;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   405   *     IfxHssl_enableHsslChannelErrorInterruptFlag(hssl, channelId_0, IfxHssl_Hssl_ERRInterruptSource_transactionTagError);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   406   *     IfxHssl_enableHsslChannelErrorInterruptFlag(hssl, channelId_0, IfxHssl_Hssl_ERRInterruptSource_timeoutError);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   407   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   408   *     // enable the HSSL ERR interrupt
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   409   *     IfxHssl_enableHsslERRInterrupt(hssl, channelId_0, IfxSrc_Tos_cpu0, 8);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   410   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   411   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   412   * you can define the ISR of your own and service the interrupt, please refer to more general usage of interrupts \ref IfxLld_Cpu_Irq_Usage
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   413   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   414   * some additional APIs to clear, disable interrupt flags and get flag status are also available.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   415   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   416   * \defgroup IfxLld_Hssl_Hssl HSSL
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   417   * \ingroup IfxLld_Hssl
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   418   * \defgroup IfxLld_Hssl_Hssl_DataStructures Data Structures
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   419   * \ingroup IfxLld_Hssl_Hssl
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   420   * \defgroup IfxLld_Hssl_Hssl_Enumerations Enumerations
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   421   * \ingroup IfxLld_Hssl_Hssl
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   422   * \defgroup IfxLld_Hssl_Hssl_ModuleFunctions Module Functions
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   423   * \ingroup IfxLld_Hssl_Hssl
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   424   * \defgroup IfxLld_Hssl_Hssl_ChannelFunctions Channel Functions
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   425   * \ingroup IfxLld_Hssl_Hssl
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   426   * \defgroup IfxLld_Hssl_Hssl_SimpleCom Simple Communication
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   427   * \ingroup IfxLld_Hssl_Hssl
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   428   * \defgroup IfxLld_Hssl_Hssl_ErrorHandling Error Handling
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   429   * \ingroup IfxLld_Hssl_Hssl
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   430   * \defgroup IfxLld_Hssl_Hssl_StreamingCom Streaming Communication
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   431   * \ingroup IfxLld_Hssl_Hssl
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   432   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   433  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   434  #ifndef IFXHSSL_HSSL_H
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   435  #define IFXHSSL_HSSL_H 1
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   436  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   437  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   438  /*----------------------------------Includes----------------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   439  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   440  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   441  #include "Hssl/Std/IfxHssl.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   442  #include "Port/Std/IfxPort.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   443  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   444  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   445  /*--------------------------------Enumerations--------------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   446  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   447  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   448  /** \addtogroup IfxLld_Hssl_Hssl_Enumerations
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   449   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   450  /** \brief frame request selection
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   451   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   452  typedef enum
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   453  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   454      IfxHssl_Hssl_FrameRequest_readFrame    = 1,  /**< \brief read frame rquest */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   455      IfxHssl_Hssl_FrameRequest_writeFrame   = 2,  /**< \brief write frame rquest */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   456      IfxHssl_Hssl_FrameRequest_triggerFrame = 3,  /**< \brief trigger frame rquest */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   457      IfxHssl_Hssl_FrameRequest_readId       = 4,  /**< \brief read id request */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   458      IfxHssl_Hssl_FrameRequest_noAction     = 5   /**< \brief no action */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   459  } IfxHssl_Hssl_FrameRequest;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   460  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   461  /** \brief module status
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   462   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   463  typedef enum
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   464  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   465      IfxHssl_Hssl_Status_ok    = 0, /**< \brief status ok */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   466      IfxHssl_Hssl_Status_busy  = 1, /**< \brief status busy */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   467      IfxHssl_Hssl_Status_error = 2  /**< \brief status error */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   468  } IfxHssl_Hssl_Status;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   469  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   470  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   471  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   472  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   473  /*-----------------------------Data Structures--------------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   474  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   475  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   476  /** \addtogroup IfxLld_Hssl_Hssl_DataStructures
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   477   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   478  /** \brief structure for access windows
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   479   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   480  typedef struct
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   481  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   482      uint32 start;       /**< \brief start of the access */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   483      uint32 end;         /**< \brief end of the access */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   484  } IfxHssl_Hssl_AccessWindow;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   485  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   486  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   487  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   488  /** \brief structure for error flags
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   489   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   490  typedef struct
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   491  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   492      uint8 notAcknowledgeError : 1;        /**< \brief not acknowledge error / tag error */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   493      uint8 transactionTagError : 1;        /**< \brief transaction tag error */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   494      uint8 timeoutError : 1;               /**< \brief timeout error */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   495      uint8 unexpectedError : 1;            /**< \brief unexpected type of frame error */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   496      uint8 memoryAccessViolation : 1;      /**< \brief memory access violation */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   497      uint8 busAccessError : 1;             /**< \brief SRI/SPB bus access error */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   498      uint8 channelNumberCodeError : 1;     /**< \brief PHY inconsistency error 1 (channel number code error) */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   499      uint8 dataLengthError : 1;            /**< \brief PHY inconsistency error 2 (data length error) */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   500      uint8 crcError : 1;                   /**< \brief CRC error */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   501  } IfxHssl_Hssl_errorFlags;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   502  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   503  /** \addtogroup IfxLld_Hssl_Hssl_DataStructures
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   504   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   505  /** \brief HSSL Handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   506   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   507  typedef struct
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   508  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   509      Ifx_HSSL               *hssl;             /**< \brief pointer to HSSL register */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   510      IfxHssl_Hssl_errorFlags errorFlags;       /**< \brief structure for error flags */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   511      boolean                 loopBack;         /**< \brief loop back (enable / disable) for streaming transfers within the microcontroller */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   512  } IfxHssl_Hssl;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   513  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   514  /** \brief channel handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   515   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   516  typedef struct
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   517  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   518      Ifx_HSSL                 *hssl;                      /**< \brief pointer to HSSL registers */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   519      Ifx_HSCT                 *hsct;                      /**< \brief pointer to HSCT registers */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   520      IfxHssl_ChannelId         channelId;                 /**< \brief channel number (id) */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   521      IfxHssl_Hssl_FrameRequest currentFrameRequest;       /**< \brief current frame request */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   522      IfxHssl_StreamingMode     streamingMode;             /**< \brief streaming mode selection ( single / continuous ) */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   523      boolean                   loopBack;                  /**< \brief loopback (enable / disable) for streaming transfers within the microcontroller */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   524      boolean                   streamingModeOn;           /**< \brief streaming mode or command mode */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   525  } IfxHssl_Hssl_Channel;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   526  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   527  /** \brief configuration structure for channel
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   528   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   529  typedef struct
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   530  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   531      Ifx_HSSL             *hssl;                /**< \brief pointer to HSSL registers */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   532      Ifx_HSCT             *hsct;                /**< \brief pointer to HSCT registers */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   533      IfxHssl_ChannelId     channelId;           /**< \brief channel number (id) */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   534      IfxHssl_StreamingMode streamingMode;       /**< \brief streaming mode selection ( single / continuous ) */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   535      boolean               loopBack;            /**< \brief loop back (enable / disable) for streaming transfers within the microcontroller */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   536  } IfxHssl_Hssl_ChannelConfig;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   537  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   538  /** \brief configuration structure of the HSSL module
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   539   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   540  typedef struct
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   541  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   542      Ifx_HSSL                 *hssl;                /**< \brief pointer to HSSL registers */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   543      IfxHssl_Hssl_AccessWindow accessWindow0;       /**< \brief access window of channel 0 */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   544      IfxHssl_Hssl_AccessWindow accessWindow1;       /**< \brief access window of channel 1 */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   545      IfxHssl_Hssl_AccessWindow accessWindow2;       /**< \brief access window of channel 2 */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   546      IfxHssl_Hssl_AccessWindow accessWindow3;       /**< \brief access window of channel 3 */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   547      uint16                    preDivider;          /**< \brief Defines the down-scaled module clock to be used by all channel timeout timers */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   548  } IfxHssl_Hssl_Config;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   549  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   550  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   551  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   552  /** \addtogroup IfxLld_Hssl_Hssl_ModuleFunctions
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   553   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   554  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   555  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   556  /*-------------------------Global Function Prototypes-------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   557  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   558  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   559  /** \brief Initialises the module
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   560   * \param hsct HSCT Handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   561   * \param config configuration structure of the HSCT module
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   562   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   563   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   564   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   565   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   566   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   567  IFX_EXTERN void IfxHssl_Hssl_initHsctModule(IfxHssl_Hsct *hsct, const IfxHssl_Hsct_Config *config);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   568  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   569  /** \brief Fills the config structure with default values
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   570   * \param config configuration structure of the HSCT module
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   571   * \param hsct pointer to HSCT register
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   572   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   573   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   574   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   575   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   576   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   577  IFX_EXTERN void IfxHssl_Hssl_initHsctModuleConfig(IfxHssl_Hsct_Config *config, Ifx_HSCT *hsct);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   578  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   579  /** \brief Initialises the Hssl module
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   580   * \param hssl HSSL handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   581   * \param config configuration structure of the module
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   582   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   583   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   584   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   585   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   586   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   587  IFX_EXTERN void IfxHssl_Hssl_initHsslModule(IfxHssl_Hssl *hssl, const IfxHssl_Hssl_Config *config);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   588  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   589  /** \brief Fills the config structure with default values
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   590   * \param config configuration structure of the module
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   591   * \param hssl pointer to HSSL registers
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   592   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   593   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   594   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   595   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   596   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   597  IFX_EXTERN void IfxHssl_Hssl_initHsslModuleConfig(IfxHssl_Hssl_Config *config, Ifx_HSSL *hssl);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   598  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   599  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   600  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   601  /** \addtogroup IfxLld_Hssl_Hssl_ChannelFunctions
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   602   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   603  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   604  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   605  /*-------------------------Global Function Prototypes-------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   606  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   607  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   608  /** \brief Initialises the channel
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   609   * \param channel channel handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   610   * \param channelConfig configuration structure for channel
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   611   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   612   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   613   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   614   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   615   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   616  IFX_EXTERN void IfxHssl_Hssl_initChannel(IfxHssl_Hssl_Channel *channel, const IfxHssl_Hssl_ChannelConfig *channelConfig);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   617  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   618  /** \brief Fills the channel config structure with default values
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   619   * \param channelConfig configuration structure for channel
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   620   * \param hssl HSSL Handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   621   * \param hsct HSCT Handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   622   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   623   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   624   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   625   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   626   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   627  IFX_EXTERN void IfxHssl_Hssl_initChannelConfig(IfxHssl_Hssl_ChannelConfig *channelConfig, IfxHssl_Hssl *hssl, IfxHssl_Hsct *hsct);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   628  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   629  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   630  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   631  /** \addtogroup IfxLld_Hssl_Hssl_SimpleCom
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   632   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   633  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   634  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   635  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   636  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   637  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   638  /** \brief reads and returs the data
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   639   * \param channel channel handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   640   * \return data
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   641   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   642   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   643   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   644   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   645  IFX_INLINE uint32 IfxHssl_Hssl_getReadData(IfxHssl_Hssl_Channel *channel);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   646  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   647  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   648  /*-------------------------Global Function Prototypes-------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   649  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   650  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   651  /** \brief Initiates read request
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   652   * \param channel channel handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   653   * \param address address of the location from where the data is to be read
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   654   * \param dataLength length of the data
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   655   * \return module status (ok, busy, error)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   656   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   657   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   658   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   659   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   660  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_read(IfxHssl_Hssl_Channel *channel, uint32 address, IfxHssl_DataLength dataLength);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   661  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   662  /** \brief sends a predefined command from master to slave
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   663   * \param hsct HSCT Handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   664   * \param command command value
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   665   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   666   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   667   * Usage Example:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   668   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   669   *     // enable slave Tx channel (Rx disable to Rx low peed)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   670   *     IfxHssl_Hssl_sendControlCommand(&channel, IfxHssl_ControlCommand_enableReception);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   671   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   672   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   673   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   674  IFX_EXTERN void IfxHssl_Hssl_sendControlCommand(IfxHssl_Hsct *hsct, uint8 command);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   675  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   676  /** \brief serves the frame request (read, write, trigger frame and read id)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   677   * \param channel channel handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   678   * \param frameRequest frame request
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   679   * \param address address of the location (to be written into / read from)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   680   * \param data data to be written
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   681   * \param dataLength length of the data
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   682   * \return module status (ok, busy, error)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   683   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   684  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_singleFrameRequest(IfxHssl_Hssl_Channel *channel, IfxHssl_Hssl_FrameRequest frameRequest, uint32 address, uint32 data, IfxHssl_DataLength dataLength);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   685  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   686  /** \brief waits until the current transaction is done
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   687   * \param channel channel handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   688   * \return module status (ok, busy, error)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   689   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   690   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   691   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   692   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   693  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_waitAcknowledge(IfxHssl_Hssl_Channel *channel);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   694  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   695  /** \brief writes single frame of data into the specified address
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   696   * \param channel channel handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   697   * \param address address of the location where the data is to be written
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   698   * \param data data that needs to be written
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   699   * \param dataLength length of the data (8, 16, 32 bit)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   700   * \return module status (ok, busy, error)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   701   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   702   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   703   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   704   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   705  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_write(IfxHssl_Hssl_Channel *channel, uint32 address, uint32 data, IfxHssl_DataLength dataLength);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   706  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   707  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   708  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   709  /** \addtogroup IfxLld_Hssl_Hssl_ErrorHandling
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   710   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   711  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   712  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   713  /*-------------------------Global Function Prototypes-------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   714  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   715  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   716  /** \brief stores the status of errors in the respective members of the error flags structure
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   717   * \param hssl HSSL Handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   718   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   719   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   720  IFX_EXTERN void IfxHssl_Hssl_checkErrors(IfxHssl_Hssl *hssl);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   721  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   722  /** \brief clears the status of members in the error flags structure
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   723   * \param hssl HSSL Handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   724   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   725   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   726  IFX_EXTERN void IfxHssl_Hssl_clearErrorFlags(IfxHssl_Hssl *hssl);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   727  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   728  /** \brief a simple software delay
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   729   * \param hsct HSCT Handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   730   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   731   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   732  IFX_EXTERN void IfxHssl_Hssl_delay(IfxHssl_Hsct *hsct);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   733  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   734  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   735  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   736  /** \addtogroup IfxLld_Hssl_Hssl_StreamingCom
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   737   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   738  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   739  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   740  /*-------------------------Global Function Prototypes-------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   741  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   742  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   743  /** \brief Prepares the target device for streaming
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   744   * \param channel channel handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   745   * \param slaveTargetAddress address of the location on target device where the data needs to be transfered
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   746   * \param count Frame count (length of the data in the memory as 256 bytes per frame)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   747   * \return module status (ok, busy, error)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   748   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   749   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   750   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   751   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   752  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_prepareStream(IfxHssl_Hssl_Channel *channel, uint32 slaveTargetAddress, Ifx_SizeT count);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   753  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   754  /** \brief transfers one memory block of data
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   755   * useful for transfering huge data from one location to another and between devices.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   756   * NOTE: This function should be called only for IfxHssl_ChannelId_2
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   757   * \param hssl HSSL handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   758   * \param data starting address of the location to be read from (memory block 0 / HSSL_ISSA0)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   759   * \param count Frame count (length of the data in the memory as 256 bytes per frame)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   760   * \return module status (ok, busy, error)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   761   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   762   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   763   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   764   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   765  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_writeStream(IfxHssl_Hssl *hssl, uint32 *data, Ifx_SizeT count);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   766  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   767  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   768  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   769  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   770  /*---------------------Inline Function Implementations------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   771  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   772  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   773  IFX_INLINE uint32 IfxHssl_Hssl_getReadData(IfxHssl_Hssl_Channel *channel)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   774  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   775      Ifx_HSSL_I *hsslI = (Ifx_HSSL_I *)&channel->hssl->I[channel->channelId];
	ld.bu	d15,[a15]8
.L836:
	mul	d15,d15,#16
.L837:
	ld.a	a2,[a15]
.L838:
	addsc.a	a2,a2,d15,#0
	lea	a2,[a2]48
.L410:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   776      return hsslI->IRD.U;    /* retutn the data read from the data register */
	ld.w	d15,[a2]12
.L839:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   776      return hsslI->IRD.U;    /* retutn the data read from the data register */      (inlined)
	j	.L52

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   777  }      (inlined)
.L52:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   390  (0x00070100)) != 0x00070100)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   391          {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   392              /* enable streaming mode (single) of channel 2 on target device */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   393              IfxHssl_Hssl_singleFrameRequest(channel, IfxHssl_Hssl_FrameRequest_writeFrame, (uint32)&channel->hssl->CFG, 0x00070100, IfxHssl_DataLength_32bit);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   394  
	mov	d0,#256
	addih	d0,d0,#7
.L840:
	and	d0,d15
.L841:
	mov	d15,#256
	addih	d15,d15,#7
.L842:
	jeq	d15,d0,.L53
.L843:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   395              while (IfxHssl_Hssl_waitAcknowledge(channel) != IfxHssl_Hssl_Status_ok)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   396              {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   397                  if (IfxHssl_Hssl_waitAcknowledge(channel) == IfxHssl_Hssl_Status_error)
	mov	d4,#2
.L844:
	ld.w	d15,[a15]
.L845:
	add	d5,d15,#16
.L846:
	mov	d6,#256
	addih	d6,d6,#7
.L847:
	mov	d7,#2
	mov.aa	a4,a15
.L412:
	call	IfxHssl_Hssl_singleFrameRequest
.L411:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   398                  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   399                      return IfxHssl_Hssl_Status_error;
	j	.L54
.L55:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   400                  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   401              }
	mov.aa	a4,a15
.L413:
	call	IfxHssl_Hssl_waitAcknowledge
.L414:
	jne	d2,#2,.L56
.L848:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   402          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   403  
	mov	d2,#2
.L849:
	j	.L57
.L56:
.L54:
	mov.aa	a4,a15
.L415:
	call	IfxHssl_Hssl_waitAcknowledge
.L416:
	jne	d2,#0,.L55
.L53:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   404          /* enable streaming on target device */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   405          IfxHssl_Hssl_singleFrameRequest(channel, IfxHssl_Hssl_FrameRequest_writeFrame, (uint32)&channel->hssl->MFLAGSSET, 0x10000000, IfxHssl_DataLength_32bit);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   406  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   407          while (IfxHssl_Hssl_waitAcknowledge(channel) != IfxHssl_Hssl_Status_ok)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   408          {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   409              if (IfxHssl_Hssl_waitAcknowledge(channel) == IfxHssl_Hssl_Status_error)
	mov	d4,#2
.L850:
	ld.w	d15,[a15]
.L851:
	add	d5,d15,#28
.L852:
	movh	d6,#4096
.L853:
	mov	d7,#2
	mov.aa	a4,a15
.L417:
	call	IfxHssl_Hssl_singleFrameRequest
.L418:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   410              {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   411                  return IfxHssl_Hssl_Status_error;
	j	.L58
.L59:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   412              }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   413          }
	mov.aa	a4,a15
.L419:
	call	IfxHssl_Hssl_waitAcknowledge
.L420:
	jne	d2,#2,.L60
.L854:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   414      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   415  
	mov	d2,#2
.L855:
	j	.L61
.L60:
.L58:
	mov.aa	a4,a15
.L421:
	call	IfxHssl_Hssl_waitAcknowledge
.L422:
	jne	d2,#0,.L59
.L47:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   416      channel->streamingModeOn = TRUE;    /* for waitAcknowledge function */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   417      /* preperation was successful */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   418      return IfxHssl_Hssl_Status_ok;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   419  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   420  
	mov	d15,#1
.L856:
	st.b	[a15]12,d15
.L857:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   421  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   422  IfxHssl_Hssl_Status IfxHssl_Hssl_read(IfxHssl_Hssl_Channel *channel, uint32 address, IfxHssl_DataLength dataLength)
	mov	d2,#0
.L858:
	j	.L62

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   423  {
.L62:
.L61:
.L57:
.L51:
.L46:
.L42:
.L38:
.L33:
.L29:
.L25:
	ret
.L320:
	
__IfxHssl_Hssl_prepareStream_function_end:
	.size	IfxHssl_Hssl_prepareStream,__IfxHssl_Hssl_prepareStream_function_end-IfxHssl_Hssl_prepareStream
.L206:
	; End of function
	
	.sdecl	'.text.IfxHssl_Hssl.IfxHssl_Hssl_read',code,cluster('IfxHssl_Hssl_read')
	.sect	'.text.IfxHssl_Hssl.IfxHssl_Hssl_read'
	.align	2
	
	.global	IfxHssl_Hssl_read

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   424      uint32 data = 0;                                                                                                 /* not required, data will be read back */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   425      return IfxHssl_Hssl_singleFrameRequest(channel, IfxHssl_Hssl_FrameRequest_readFrame, address, data, dataLength); /* initiate the read request */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   426  }
; Function IfxHssl_Hssl_read
.L117:
IfxHssl_Hssl_read:	.type	func
	mov	d15,d4
.L426:
	mov	d7,d5
.L427:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   427  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   428  
	mov	d6,#0
.L428:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   429  void IfxHssl_Hssl_sendControlCommand(IfxHssl_Hsct *hsct, uint8 command)
	mov	d4,#1
.L423:
	mov	d5,d15
.L425:
	call	IfxHssl_Hssl_singleFrameRequest
.L424:
	j	.L63

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   430  {
.L63:
	ret
.L277:
	
__IfxHssl_Hssl_read_function_end:
	.size	IfxHssl_Hssl_read,__IfxHssl_Hssl_read_function_end-IfxHssl_Hssl_read
.L166:
	; End of function
	
	.sdecl	'.text.IfxHssl_Hssl.IfxHssl_Hssl_sendControlCommand',code,cluster('IfxHssl_Hssl_sendControlCommand')
	.sect	'.text.IfxHssl_Hssl.IfxHssl_Hssl_sendControlCommand'
	.align	2
	
	.global	IfxHssl_Hssl_sendControlCommand

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   431      Ifx_HSCT *hsctSFR = hsct->hsct;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   432  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   433      hsctSFR->IFCTRL.B.IFCVS = command; /* write the command into the register */
; Function IfxHssl_Hssl_sendControlCommand
.L119:
IfxHssl_Hssl_sendControlCommand:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   434      hsctSFR->IFCTRL.B.SIFCV = 1;       /* activate the command */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   435  
	ld.a	a15,[a4]
.L430:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   436      IfxHssl_Hssl_delay(hsct);          /* wait until the change happens */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   437  }
	ld.bu	d15,[a15]20
.L656:
	insert	d15,d15,d4,#0,#8
	st.b	[a15]20,d15
.L657:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   438  
	ld.bu	d15,[a15]21
.L658:
	or	d15,#1
	st.b	[a15]21,d15
.L659:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   439  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   440  IfxHssl_Hssl_Status IfxHssl_Hssl_singleFrameRequest(IfxHssl_Hssl_Channel *channel, IfxHssl_Hssl_FrameRequest frameRequest, uint32 address, uint32 data, IfxHssl_DataLength dataLength)
	call	IfxHssl_Hssl_delay
.L429:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   441  {
	ret
.L284:
	
__IfxHssl_Hssl_sendControlCommand_function_end:
	.size	IfxHssl_Hssl_sendControlCommand,__IfxHssl_Hssl_sendControlCommand_function_end-IfxHssl_Hssl_sendControlCommand
.L171:
	; End of function
	
	.sdecl	'.text.IfxHssl_Hssl.IfxHssl_Hssl_singleFrameRequest',code,cluster('IfxHssl_Hssl_singleFrameRequest')
	.sect	'.text.IfxHssl_Hssl.IfxHssl_Hssl_singleFrameRequest'
	.align	2
	
	.global	IfxHssl_Hssl_singleFrameRequest

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   442      Ifx_HSSL_I *hsslI = (Ifx_HSSL_I *)&channel->hssl->I[channel->channelId];
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   443  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   444      if (channel->currentFrameRequest != IfxHssl_Hssl_FrameRequest_noAction)
; Function IfxHssl_Hssl_singleFrameRequest
.L121:
IfxHssl_Hssl_singleFrameRequest:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   445      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   446          return IfxHssl_Hssl_Status_busy;
	ld.bu	d15,[a4]8
.L664:
	mul	d15,d15,#16
.L665:
	ld.a	a15,[a4]
.L666:
	addsc.a	a15,a15,d15,#0
	lea	a15,[a15]48
.L431:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   447      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   448  
	ld.bu	d15,[a4]9
.L667:
	jeq	d15,#5,.L64
.L668:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   449      hsslI->ICON.B.DATLEN = dataLength;               /* 0x2 -> word size */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   450      hsslI->ICON.B.TOREL  = 0xff;                     /* max reload value */
	mov	d2,#1
.L669:
	j	.L65
.L64:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   451  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   452      switch (frameRequest)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   453      {
	ld.bu	d15,[a15]6
.L670:
	insert	d15,d15,d7,#0,#2
	st.b	[a15]6,d15
.L671:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   454      case IfxHssl_Hssl_FrameRequest_readFrame:
	ld.bu	d15,[a15]7
.L672:
	or	d15,#255
	st.b	[a15]7,d15
.L673:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   455          hsslI->ICON.B.RWT = IfxHssl_Command_readFrame;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   456          hsslI->IRWA.U     = address;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   457          break;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   458      case IfxHssl_Hssl_FrameRequest_writeFrame:
	mov	d15,#1
	jeq	d15,d4,.L66
.L674:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   459          hsslI->ICON.B.RWT = IfxHssl_Command_writeFrame;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   460          hsslI->IWD.U      = data;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   461          hsslI->IRWA.U     = address;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   462          break;
	mov	d15,#2
	jeq	d15,d4,.L67
.L675:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   463      case IfxHssl_Hssl_FrameRequest_triggerFrame:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   464          hsslI->ICON.B.RWT = IfxHssl_Command_triggerFrame;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   465          hsslI->IWD.U      = data;    /* dummy */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   466          hsslI->IRWA.U     = address; /* dummy */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   467          break;
	mov	d15,#3
	jeq	d15,d4,.L68
.L676:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   468      case IfxHssl_Hssl_FrameRequest_readId:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   469          /* request an ID frame  */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   470          hsslI->ICON.B.IDQ = 1;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   471          break;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   472      default:
	mov	d15,#4
	jeq	d15,d4,.L69
	j	.L70
.L66:
	ld.bu	d15,[a15]6
.L677:
	insert	d15,d15,#1,#2,#2
	st.b	[a15]6,d15
.L678:
	st.w	[a15]8,d5
.L679:
	j	.L71
.L67:
	ld.bu	d15,[a15]6
.L680:
	insert	d15,d15,#2,#2,#2
	st.b	[a15]6,d15
.L681:
	st.w	[a15],d6
.L682:
	st.w	[a15]8,d5
.L683:
	j	.L72
.L68:
	ld.bu	d15,[a15]6
.L684:
	or	d15,#12
	st.b	[a15]6,d15
.L685:
	st.w	[a15],d6
.L686:
	st.w	[a15]8,d5
.L687:
	j	.L73
.L69:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   473          /* invalid request */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   474          return IfxHssl_Hssl_Status_error;
	ld.bu	d15,[a15]4
.L688:
	or	d15,#1
	st.b	[a15]4,d15
.L689:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   475      }
	j	.L74

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   476  
.L70:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   477      channel->currentFrameRequest = frameRequest;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   478  
	mov	d2,#2
.L690:
	j	.L75

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   479      return IfxHssl_Hssl_Status_ok;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   480  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   481  
.L74:
.L73:
.L72:
.L71:
	st.b	[a4]9,d4
.L691:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   482  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   483  IfxHssl_Hssl_Status IfxHssl_Hssl_waitAcknowledge(IfxHssl_Hssl_Channel *channel)
	mov	d2,#0
.L692:
	j	.L76

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   484  {
.L76:
.L75:
.L65:
	ret
.L289:
	
__IfxHssl_Hssl_singleFrameRequest_function_end:
	.size	IfxHssl_Hssl_singleFrameRequest,__IfxHssl_Hssl_singleFrameRequest_function_end-IfxHssl_Hssl_singleFrameRequest
.L176:
	; End of function
	
	.sdecl	'.text.IfxHssl_Hssl.IfxHssl_Hssl_waitAcknowledge',code,cluster('IfxHssl_Hssl_waitAcknowledge')
	.sect	'.text.IfxHssl_Hssl.IfxHssl_Hssl_waitAcknowledge'
	.align	2
	
	.global	IfxHssl_Hssl_waitAcknowledge

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   485      uint32            requestType = channel->currentFrameRequest;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   486      IfxHssl_ChannelId channelId   = channel->channelId;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   487  
; Function IfxHssl_Hssl_waitAcknowledge
.L123:
IfxHssl_Hssl_waitAcknowledge:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   488      if ((channelId == IfxHssl_ChannelId_2) && (channel->hssl->CFG.B.SCM == 1))
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   489      {
	ld.bu	d0,[a4]9
.L432:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   490          while (channel->hssl->MFLAGS.B.ISB)
	ld.bu	d2,[a4]8
.L434:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   491          {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   492              /* transfer in progress */
	jne	d2,#2,.L77
.L697:
	ld.a	a15,[a4]
.L698:
	ld.bu	d1,[a15]18
	extr.u	d15,d1,#2,#1
.L699:
	jne	d15,#1,.L78
.L700:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   493          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   494      }
	j	.L79
.L80:
.L79:
	ld.a	a15,[a4]
.L701:
	ld.bu	d15,[a15]26
.L702:
	jnz.t	d15:4,.L80
.L703:
	j	.L81
.L78:
.L77:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   495      else
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   496      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   497          if (channel->currentFrameRequest == IfxHssl_Hssl_FrameRequest_writeFrame)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   498          {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   499              requestType = 1;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   500          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   501  
	ld.bu	d15,[a4]9
.L704:
	jne	d15,#2,.L82
.L705:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   502          /* expect a read frame when requestType == IfxHssl_Hssl_FrameRequest_readId */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   503          if ((channel->currentFrameRequest == IfxHssl_Hssl_FrameRequest_readFrame) || (channel->currentFrameRequest == IfxHssl_Hssl_FrameRequest_readId))
	mov	d0,#1
.L82:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   504          {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   505              requestType = 2;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   506          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   507  
	ld.bu	d15,[a4]9
.L706:
	jeq	d15,#1,.L83
.L707:
	ld.bu	d15,[a4]9
.L708:
	jne	d15,#4,.L84
.L83:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   508          if (channel->currentFrameRequest == IfxHssl_Hssl_FrameRequest_triggerFrame)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   509          {
	mov	d0,#2
.L84:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   510              requestType = 3;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   511          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   512  
	ld.bu	d15,[a4]9
.L709:
	jne	d15,#3,.L85
.L710:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   513          uint32 qFlags               = channel->hssl->QFLAGS.U;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   514          uint32 mFlags               = channel->hssl->MFLAGS.U;
	mov	d0,#3
.L85:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   515          uint32 acknwoledgeFlagsMask = ((requestType << (16 + (channel->channelId * 2))) | (1 << channel->channelId));
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   516          uint32 errorFlagsMask       = ((0x03E00000) | (4369 << channel->channelId)); /* all the possible errors */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   517  
	ld.a	a15,[a4]
.L711:
	ld.w	d4,[a15]20
.L436:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   518          if (channel->hssl->I[channelId].ICON.B.BSY == 1)
	ld.a	a15,[a4]
.L712:
	ld.w	d5,[a15]24
.L438:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   519          {
	ld.bu	d15,[a4]8
.L713:
	mul	d1,d15,#2
.L714:
	add	d1,d1,#16
.L715:
	sh	d0,d0,d1
.L433:
	mov	d1,#1
.L716:
	ld.bu	d15,[a4]8
.L717:
	sha	d1,d1,d15
.L440:
	or	d0,d1
.L718:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   520              return IfxHssl_Hssl_Status_busy;
	mov	d1,#4369
.L719:
	ld.bu	d15,[a4]8
.L720:
	sha	d1,d1,d15
.L721:
	movh	d3,#992
.L441:
	or	d1,d3
.L722:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   521          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   522  
	mul	d15,d2,#16
.L723:
	ld.a	a15,[a4]
.L724:
	addsc.a	a15,a15,d15,#0
.L725:
	ld.bu	d15,[a15]54
	extr.u	d15,d15,#4,#1
.L726:
	jne	d15,#1,.L86
.L727:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   523          if (qFlags & acknwoledgeFlagsMask)     /* transfer in progress? */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   524          {
	mov	d2,#1
.L435:
	j	.L87
.L86:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   525              return IfxHssl_Hssl_Status_busy;   /* return busy status in case of no error */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   526          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   527  
	and	d4,d0
.L437:
	jeq	d4,#0,.L88
.L728:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   528          if (mFlags & errorFlagsMask)           /* check for errors */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   529          {
	mov	d2,#1
.L442:
	j	.L89
.L88:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   530              channel->currentFrameRequest = IfxHssl_Hssl_FrameRequest_noAction;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   531              return IfxHssl_Hssl_Status_error;  /* return error status in case of an error */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   532          }
	and	d5,d1
.L439:
	jeq	d5,#0,.L90
.L729:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   533  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   534          /* transfer is finished */
	mov	d15,#5
.L730:
	st.b	[a4]9,d15
.L731:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   535          channel->currentFrameRequest = IfxHssl_Hssl_FrameRequest_noAction;
	mov	d2,#2
.L443:
	j	.L91
.L90:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   536      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   537  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   538      return IfxHssl_Hssl_Status_ok;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   539  }
	mov	d15,#5
.L732:
	st.b	[a4]9,d15
.L81:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   540  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   541  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   542  IfxHssl_Hssl_Status IfxHssl_Hssl_write(IfxHssl_Hssl_Channel *channel, uint32 address, uint32 data, IfxHssl_DataLength dataLength)
	mov	d2,#0
.L444:
	j	.L92

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   543  {
.L92:
.L91:
.L89:
.L87:
	ret
.L298:
	
__IfxHssl_Hssl_waitAcknowledge_function_end:
	.size	IfxHssl_Hssl_waitAcknowledge,__IfxHssl_Hssl_waitAcknowledge_function_end-IfxHssl_Hssl_waitAcknowledge
.L181:
	; End of function
	
	.sdecl	'.text.IfxHssl_Hssl.IfxHssl_Hssl_write',code,cluster('IfxHssl_Hssl_write')
	.sect	'.text.IfxHssl_Hssl.IfxHssl_Hssl_write'
	.align	2
	
	.global	IfxHssl_Hssl_write

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   544      return IfxHssl_Hssl_singleFrameRequest(channel, IfxHssl_Hssl_FrameRequest_writeFrame, address, data, dataLength);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   545  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   546  
; Function IfxHssl_Hssl_write
.L125:
IfxHssl_Hssl_write:	.type	func
	mov	d15,d4
.L449:
	mov	d0,d5
.L450:
	mov	d7,d6
.L451:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   547  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   548  IfxHssl_Hssl_Status IfxHssl_Hssl_writeStream(IfxHssl_Hssl *hssl, uint32 *data, Ifx_SizeT count)
	mov	d4,#2
.L445:
	mov	d5,d15
.L447:
	mov	d6,d0
.L448:
	call	IfxHssl_Hssl_singleFrameRequest
.L446:
	j	.L93

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   549  {
.L93:
	ret
.L307:
	
__IfxHssl_Hssl_write_function_end:
	.size	IfxHssl_Hssl_write,__IfxHssl_Hssl_write_function_end-IfxHssl_Hssl_write
.L186:
	; End of function
	
	.sdecl	'.text.IfxHssl_Hssl.IfxHssl_Hssl_writeStream',code,cluster('IfxHssl_Hssl_writeStream')
	.sect	'.text.IfxHssl_Hssl.IfxHssl_Hssl_writeStream'
	.align	2
	
	.global	IfxHssl_Hssl_writeStream

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   550      Ifx_HSSL             *hsslSFR       = hssl->hssl;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   551      Ifx_HSSL_IS          *hsslIS        = (Ifx_HSSL_IS *)&hsslSFR->IS;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   552      IfxHssl_StreamingMode streamingMode = IfxHssl_StreamingMode_single;
; Function IfxHssl_Hssl_writeStream
.L127:
IfxHssl_Hssl_writeStream:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   553  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   554      /* single memory block streaming */
	ld.a	a15,[a4]
.L452:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   555      hsslIS->SA[0].U                              = (uint32)data;  /* initiator start address to memeroy block 0 */
	lea	a2,[a15]160
.L453:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   556  
	mov	d0,#1
.L454:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   557      hsslIS->FC.B.RELCOUNT                        = count;         /* memory count into initiator reload count register */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   558  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   559      hsslSFR->CFG.B.SCM                           = 1;             /* enable streaming mode of channel 2 on the initiator */
	mov.d	d15,a5
.L455:
	st.w	[a2],d15
.L863:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   560      hsslSFR->CFG.B.SMT                           = streamingMode; /* set transmitter streaming mode ( single / continuous ) on the initiator */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   561      hsslSFR->CFG.B.SMR                           = streamingMode; /* set receiver streaming mode ( single / continuous ) on the initiator */
	ld.hu	d15,[a15]172
.L456:
	extr.u	d1,d4,#0,#16
.L864:
	insert	d15,d15,d1,#0,#16
	st.h	[a15]172,d15
.L865:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   562      /* streaming is supported only on IfxHssl_ChannelId_2 */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   563      hsslSFR->I[IfxHssl_ChannelId_2].ICON.B.TOREL = 0xff;          /* set the transmitter reload value to 0xff.*/
	ld.bu	d15,[a15]18
.L866:
	or	d15,#4
	st.b	[a15]18,d15
.L867:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   564  
	ld.bu	d15,[a15]18
.L868:
	insert	d15,d15,d0,#0,#1
	st.b	[a15]18,d15
.L869:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   565      /* incase of transfers within the device(loopback on) */
	ld.bu	d15,[a15]18
.L870:
	insert	d15,d15,d0,#1,#1
	st.b	[a15]18,d15
.L871:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   566      if (hssl->loopBack)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   567      {
	ld.bu	d15,[a15]87
.L872:
	or	d15,#255
	st.b	[a15]87,d15
.L873:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   568          hsslSFR->MFLAGSSET.B.TSES = 1; /* enable target */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   569      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   570  
	ld.bu	d15,[a4]6
.L874:
	jeq	d15,#0,.L94
.L875:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   571      /* initiate the transfer */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   572      hsslSFR->MFLAGSSET.B.ISBS = 1;
	ld.bu	d15,[a15]31
.L876:
	or	d15,#16
	st.b	[a15]31,d15
.L94:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   573  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   574      /* streaming started */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   575      return IfxHssl_Hssl_Status_ok;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   576  }
	ld.bu	d15,[a15]30
.L877:
	or	d15,#16
	st.b	[a15]30,d15
.L878:


	mov	d2,#0
.L879:


	j	.L95


.L95:


	ret
.L336:
	
__IfxHssl_Hssl_writeStream_function_end:
	.size	IfxHssl_Hssl_writeStream,__IfxHssl_Hssl_writeStream_function_end-IfxHssl_Hssl_writeStream
.L211:
	; End of function
	
	.calls	'IfxHssl_Hssl_initHsctModule','IfxPort_setPinMode'
	.calls	'IfxHssl_Hssl_initHsctModule','IfxPort_setPinPadDriver'
	.calls	'IfxHssl_Hssl_initHsctModule','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'IfxHssl_Hssl_initHsctModule','IfxScuWdt_clearCpuEndinit'
	.calls	'IfxHssl_Hssl_initHsctModule','IfxScuWdt_setCpuEndinit'
	.calls	'IfxHssl_Hssl_initHsctModule','IfxHssl_enableHsctModule'
	.calls	'IfxHssl_Hssl_initHsslModule','IfxHssl_enableHsslModule'
	.calls	'IfxHssl_Hssl_prepareStream','IfxHssl_Hssl_singleFrameRequest'
	.calls	'IfxHssl_Hssl_prepareStream','IfxHssl_Hssl_waitAcknowledge'
	.calls	'IfxHssl_Hssl_prepareStream','IfxHssl_Hssl_read'
	.calls	'IfxHssl_Hssl_read','IfxHssl_Hssl_singleFrameRequest'
	.calls	'IfxHssl_Hssl_sendControlCommand','IfxHssl_Hssl_delay'
	.calls	'IfxHssl_Hssl_write','IfxHssl_Hssl_singleFrameRequest'
	.calls	'IfxHssl_Hssl_checkErrors','',0
	.calls	'IfxHssl_Hssl_clearErrorFlags','',0
	.calls	'IfxHssl_Hssl_delay','',0
	.calls	'IfxHssl_Hssl_initChannel','',0
	.calls	'IfxHssl_Hssl_initChannelConfig','',0
	.calls	'IfxHssl_Hssl_initHsctModule','',0
	.calls	'IfxHssl_Hssl_initHsctModuleConfig','',0
	.calls	'IfxHssl_Hssl_initHsslModule','',0
	.calls	'IfxHssl_Hssl_initHsslModuleConfig','',0
	.calls	'IfxHssl_Hssl_prepareStream','',0
	.calls	'IfxHssl_Hssl_read','',0
	.calls	'IfxHssl_Hssl_sendControlCommand','',0
	.calls	'IfxHssl_Hssl_singleFrameRequest','',0
	.calls	'IfxHssl_Hssl_waitAcknowledge','',0
	.calls	'IfxHssl_Hssl_write','',0
	.extern	IfxScuWdt_clearCpuEndinit
	.extern	IfxScuWdt_setCpuEndinit
	.extern	IfxScuWdt_getCpuWatchdogPassword
	.extern	IfxHssl_enableHsctModule
	.extern	IfxHssl_enableHsslModule
	.extern	IfxPort_setPinMode
	.extern	IfxPort_setPinPadDriver
	.calls	'IfxHssl_Hssl_writeStream','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L129:
	.word	62934
	.half	3
	.word	.L130
	.byte	4
.L128:
	.byte	1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L131
	.byte	2,1,1,3
	.word	173
	.byte	4
	.byte	'Ifx__jump_and_link',0,3,1,61,17,1,1,5
	.byte	'fun',0,1,61,43
	.word	176
	.byte	6,0,7
	.byte	'__fract',0,4,128,1,7
	.byte	'float',0,4,4,8
	.byte	'Ifx__float_to_fract',0,3,1,152,2,18
	.word	221
	.byte	1,1,5
	.byte	'a',0,1,152,2,44
	.word	233
	.byte	6,0,7
	.byte	'unsigned long long int',0,8,7,9
	.byte	'void',0,3
	.word	313
	.byte	8
	.byte	'__ld64',0,3,2,135,1,19
	.word	287
	.byte	1,1,5
	.byte	'addr',0,2,135,1,32
	.word	319
	.byte	6,0,4
	.byte	'__st64',0,3,2,143,1,17,1,1,5
	.byte	'addr',0,2,143,1,30
	.word	319
	.byte	5
	.byte	'value',0,2,143,1,43
	.word	287
	.byte	6,0,7
	.byte	'unsigned int',0,4,7,7
	.byte	'int',0,4,5
.L286:
	.byte	7
	.byte	'unsigned char',0,1,8,10
	.byte	'_Ifx_SRC_SRCR_Bits',0,4,45,16,4,11
	.byte	'SRPN',0,1
	.word	428
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	428
	.byte	2,6,2,35,1,11
	.byte	'SRE',0,1
	.word	428
	.byte	1,5,2,35,1,11
	.byte	'TOS',0,1
	.word	428
	.byte	2,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	428
	.byte	3,0,2,35,1,11
	.byte	'ECC',0,1
	.word	428
	.byte	6,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	428
	.byte	2,0,2,35,2,11
	.byte	'SRR',0,1
	.word	428
	.byte	1,7,2,35,3,11
	.byte	'CLRR',0,1
	.word	428
	.byte	1,6,2,35,3,11
	.byte	'SETR',0,1
	.word	428
	.byte	1,5,2,35,3,11
	.byte	'IOV',0,1
	.word	428
	.byte	1,4,2,35,3,11
	.byte	'IOVCLR',0,1
	.word	428
	.byte	1,3,2,35,3,11
	.byte	'SWS',0,1
	.word	428
	.byte	1,2,2,35,3,11
	.byte	'SWSCLR',0,1
	.word	428
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	428
	.byte	1,0,2,35,3,0,12,4,70,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	445
	.byte	4,2,35,0,0,14
	.word	735
	.byte	3
	.word	774
	.byte	4
	.byte	'IfxSrc_clearRequest',0,3,3,250,1,17,1,1,5
	.byte	'src',0,3,250,1,60
	.word	779
	.byte	6,0,4
	.byte	'IfxSrc_enable',0,3,3,140,2,17,1,1,5
	.byte	'src',0,3,140,2,54
	.word	779
	.byte	6,0,15,5,69,9,1,16
	.byte	'IfxSrc_Tos_cpu0',0,0,16
	.byte	'IfxSrc_Tos_cpu1',0,1,16
	.byte	'IfxSrc_Tos_dma',0,3,0
.L249:
	.byte	7
	.byte	'unsigned short int',0,2,7,4
	.byte	'IfxSrc_init',0,3,3,146,2,17,1,1,5
	.byte	'src',0,3,146,2,52
	.word	779
	.byte	5
	.byte	'typOfService',0,3,146,2,68
	.word	864
	.byte	5
	.byte	'priority',0,3,146,2,95
	.word	923
	.byte	17,6,0,0,10
	.byte	'_Ifx_P_OUT_Bits',0,7,143,3,16,4,11
	.byte	'P0',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	428
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	428
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	428
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	428
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	428
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	428
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	428
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	428
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	428
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	428
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	428
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	428
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	923
	.byte	16,0,2,35,2,0,12,7,181,5,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1022
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMR_Bits',0,7,169,2,16,4,11
	.byte	'PS0',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	428
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	428
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	428
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	428
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	428
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	428
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	428
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	428
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	428
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	428
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	428
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	428
	.byte	1,0,2,35,1,11
	.byte	'PCL0',0,1
	.word	428
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	428
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	428
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	428
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	428
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	428
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	428
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	428
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	428
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	428
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	428
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	428
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	428
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	428
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	428
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	428
	.byte	1,0,2,35,3,0,12,7,133,5,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1338
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ID_Bits',0,7,110,16,4,11
	.byte	'MODREV',0,1
	.word	428
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	428
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	923
	.byte	16,0,2,35,2,0,12,7,148,4,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1909
	.byte	4,2,35,0,0,18,4
	.word	428
	.byte	19,3,0,10
	.byte	'_Ifx_P_IOCR0_Bits',0,7,140,1,16,4,11
	.byte	'reserved_0',0,1
	.word	428
	.byte	3,5,2,35,0,11
	.byte	'PC0',0,1
	.word	428
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	428
	.byte	3,5,2,35,1,11
	.byte	'PC1',0,1
	.word	428
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	428
	.byte	3,5,2,35,2,11
	.byte	'PC2',0,1
	.word	428
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	428
	.byte	3,5,2,35,3,11
	.byte	'PC3',0,1
	.word	428
	.byte	5,0,2,35,3,0,12,7,164,4,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2037
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR4_Bits',0,7,166,1,16,4,11
	.byte	'reserved_0',0,1
	.word	428
	.byte	3,5,2,35,0,11
	.byte	'PC4',0,1
	.word	428
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	428
	.byte	3,5,2,35,1,11
	.byte	'PC5',0,1
	.word	428
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	428
	.byte	3,5,2,35,2,11
	.byte	'PC6',0,1
	.word	428
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	428
	.byte	3,5,2,35,3,11
	.byte	'PC7',0,1
	.word	428
	.byte	5,0,2,35,3,0,12,7,180,4,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2252
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR8_Bits',0,7,179,1,16,4,11
	.byte	'reserved_0',0,1
	.word	428
	.byte	3,5,2,35,0,11
	.byte	'PC8',0,1
	.word	428
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	428
	.byte	3,5,2,35,1,11
	.byte	'PC9',0,1
	.word	428
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	428
	.byte	3,5,2,35,2,11
	.byte	'PC10',0,1
	.word	428
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	428
	.byte	3,5,2,35,3,11
	.byte	'PC11',0,1
	.word	428
	.byte	5,0,2,35,3,0,12,7,188,4,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2467
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR12_Bits',0,7,153,1,16,4,11
	.byte	'reserved_0',0,1
	.word	428
	.byte	3,5,2,35,0,11
	.byte	'PC12',0,1
	.word	428
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	428
	.byte	3,5,2,35,1,11
	.byte	'PC13',0,1
	.word	428
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	428
	.byte	3,5,2,35,2,11
	.byte	'PC14',0,1
	.word	428
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	428
	.byte	3,5,2,35,3,11
	.byte	'PC15',0,1
	.word	428
	.byte	5,0,2,35,3,0,12,7,172,4,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2684
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IN_Bits',0,7,118,16,4,11
	.byte	'P0',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	428
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	428
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	428
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	428
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	428
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	428
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	428
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	428
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	428
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	428
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	428
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	428
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	923
	.byte	16,0,2,35,2,0,12,7,156,4,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2904
	.byte	4,2,35,0,0,18,24
	.word	428
	.byte	19,23,0,10
	.byte	'_Ifx_P_PDR0_Bits',0,7,205,3,16,4,11
	.byte	'PD0',0,1
	.word	428
	.byte	3,5,2,35,0,11
	.byte	'PL0',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'PD1',0,1
	.word	428
	.byte	3,1,2,35,0,11
	.byte	'PL1',0,1
	.word	428
	.byte	1,0,2,35,0,11
	.byte	'PD2',0,1
	.word	428
	.byte	3,5,2,35,1,11
	.byte	'PL2',0,1
	.word	428
	.byte	1,4,2,35,1,11
	.byte	'PD3',0,1
	.word	428
	.byte	3,1,2,35,1,11
	.byte	'PL3',0,1
	.word	428
	.byte	1,0,2,35,1,11
	.byte	'PD4',0,1
	.word	428
	.byte	3,5,2,35,2,11
	.byte	'PL4',0,1
	.word	428
	.byte	1,4,2,35,2,11
	.byte	'PD5',0,1
	.word	428
	.byte	3,1,2,35,2,11
	.byte	'PL5',0,1
	.word	428
	.byte	1,0,2,35,2,11
	.byte	'PD6',0,1
	.word	428
	.byte	3,5,2,35,3,11
	.byte	'PL6',0,1
	.word	428
	.byte	1,4,2,35,3,11
	.byte	'PD7',0,1
	.word	428
	.byte	3,1,2,35,3,11
	.byte	'PL7',0,1
	.word	428
	.byte	1,0,2,35,3,0,12,7,205,5,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3227
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PDR1_Bits',0,7,226,3,16,4,11
	.byte	'PD8',0,1
	.word	428
	.byte	3,5,2,35,0,11
	.byte	'PL8',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'PD9',0,1
	.word	428
	.byte	3,1,2,35,0,11
	.byte	'PL9',0,1
	.word	428
	.byte	1,0,2,35,0,11
	.byte	'PD10',0,1
	.word	428
	.byte	3,5,2,35,1,11
	.byte	'PL10',0,1
	.word	428
	.byte	1,4,2,35,1,11
	.byte	'PD11',0,1
	.word	428
	.byte	3,1,2,35,1,11
	.byte	'PL11',0,1
	.word	428
	.byte	1,0,2,35,1,11
	.byte	'PD12',0,1
	.word	428
	.byte	3,5,2,35,2,11
	.byte	'PL12',0,1
	.word	428
	.byte	1,4,2,35,2,11
	.byte	'PD13',0,1
	.word	428
	.byte	3,1,2,35,2,11
	.byte	'PL13',0,1
	.word	428
	.byte	1,0,2,35,2,11
	.byte	'PD14',0,1
	.word	428
	.byte	3,5,2,35,3,11
	.byte	'PL14',0,1
	.word	428
	.byte	1,4,2,35,3,11
	.byte	'PD15',0,1
	.word	428
	.byte	3,1,2,35,3,11
	.byte	'PL15',0,1
	.word	428
	.byte	1,0,2,35,3,0,12,7,213,5,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3531
	.byte	4,2,35,0,0,18,8
	.word	428
	.byte	19,7,0,10
	.byte	'_Ifx_P_ESR_Bits',0,7,88,16,4,11
	.byte	'EN0',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	428
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	428
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	428
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	428
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	428
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	428
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	428
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	428
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	428
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	428
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	428
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	428
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	923
	.byte	16,0,2,35,2,0,12,7,140,4,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3856
	.byte	4,2,35,0,0,18,12
	.word	428
	.byte	19,11,0,10
	.byte	'_Ifx_P_PDISC_Bits',0,7,183,3,16,4,11
	.byte	'PDIS0',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'PDIS2',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'PDIS3',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'PDIS4',0,1
	.word	428
	.byte	1,3,2,35,0,11
	.byte	'PDIS5',0,1
	.word	428
	.byte	1,2,2,35,0,11
	.byte	'PDIS6',0,1
	.word	428
	.byte	1,1,2,35,0,11
	.byte	'PDIS7',0,1
	.word	428
	.byte	1,0,2,35,0,11
	.byte	'PDIS8',0,1
	.word	428
	.byte	1,7,2,35,1,11
	.byte	'PDIS9',0,1
	.word	428
	.byte	1,6,2,35,1,11
	.byte	'PDIS10',0,1
	.word	428
	.byte	1,5,2,35,1,11
	.byte	'PDIS11',0,1
	.word	428
	.byte	1,4,2,35,1,11
	.byte	'PDIS12',0,1
	.word	428
	.byte	1,3,2,35,1,11
	.byte	'PDIS13',0,1
	.word	428
	.byte	1,2,2,35,1,11
	.byte	'PDIS14',0,1
	.word	428
	.byte	1,1,2,35,1,11
	.byte	'PDIS15',0,1
	.word	428
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	923
	.byte	16,0,2,35,2,0,12,7,197,5,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4196
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PCSR_Bits',0,7,165,3,16,4,11
	.byte	'SEL0',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'SEL1',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'SEL2',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'SEL3',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'SEL4',0,1
	.word	428
	.byte	1,3,2,35,0,11
	.byte	'SEL5',0,1
	.word	428
	.byte	1,2,2,35,0,11
	.byte	'SEL6',0,1
	.word	428
	.byte	1,1,2,35,0,11
	.byte	'SEL7',0,1
	.word	428
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	428
	.byte	2,6,2,35,1,11
	.byte	'SEL10',0,1
	.word	428
	.byte	1,5,2,35,1,11
	.byte	'SEL11',0,1
	.word	428
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	405
	.byte	19,1,2,35,0,11
	.byte	'LCK',0,1
	.word	428
	.byte	1,0,2,35,3,0,12,7,189,5,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4562
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR0_Bits',0,7,206,2,16,4,11
	.byte	'PS0',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	405
	.byte	28,0,2,35,0,0,12,7,149,5,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4848
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR4_Bits',0,7,227,2,16,4,11
	.byte	'reserved_0',0,1
	.word	428
	.byte	4,4,2,35,0,11
	.byte	'PS4',0,1
	.word	428
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	428
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	428
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	428
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	405
	.byte	24,0,2,35,0,0,12,7,165,5,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4995
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR8_Bits',0,7,238,2,16,4,11
	.byte	'reserved_0',0,1
	.word	428
	.byte	8,0,2,35,0,11
	.byte	'PS8',0,1
	.word	428
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	428
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	428
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	428
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	405
	.byte	20,0,2,35,0,0,12,7,173,5,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5164
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR12_Bits',0,7,216,2,16,4,11
	.byte	'reserved_0',0,2
	.word	923
	.byte	12,4,2,35,0,11
	.byte	'PS12',0,1
	.word	428
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	428
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	428
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	428
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	923
	.byte	16,0,2,35,2,0,12,7,157,5,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5336
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR0_Bits',0,7,232,1,16,4,11
	.byte	'reserved_0',0,2
	.word	923
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	428
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	428
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	428
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	428
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	923
	.byte	12,0,2,35,2,0,12,7,229,4,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5511
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR4_Bits',0,7,253,1,16,4,11
	.byte	'reserved_0',0,4
	.word	405
	.byte	20,12,2,35,0,11
	.byte	'PCL4',0,1
	.word	428
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	428
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	428
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	428
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	428
	.byte	8,0,2,35,3,0,12,7,245,4,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5685
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR8_Bits',0,7,136,2,16,4,11
	.byte	'reserved_0',0,4
	.word	405
	.byte	24,8,2,35,0,11
	.byte	'PCL8',0,1
	.word	428
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	428
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	428
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	428
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	428
	.byte	4,0,2,35,3,0,12,7,253,4,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5859
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR12_Bits',0,7,243,1,16,4,11
	.byte	'reserved_0',0,4
	.word	405
	.byte	28,4,2,35,0,11
	.byte	'PCL12',0,1
	.word	428
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	428
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	428
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	428
	.byte	1,0,2,35,3,0,12,7,237,4,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6035
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR_Bits',0,7,249,2,16,4,11
	.byte	'PS0',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	428
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	428
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	428
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	428
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	428
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	428
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	428
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	428
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	428
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	428
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	428
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	428
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	923
	.byte	16,0,2,35,2,0,12,7,141,5,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6191
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR_Bits',0,7,147,2,16,4,11
	.byte	'reserved_0',0,2
	.word	923
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	428
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	428
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	428
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	428
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	428
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	428
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	428
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	428
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	428
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	428
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	428
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	428
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	428
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	428
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	428
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	428
	.byte	1,0,2,35,3,0,12,7,221,4,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6524
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR0_Bits',0,7,192,1,16,4,11
	.byte	'reserved_0',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	405
	.byte	30,0,2,35,0,0,12,7,196,4,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6872
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR1_Bits',0,7,200,1,16,4,11
	.byte	'reserved_0',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	405
	.byte	30,0,2,35,0,0,10
	.byte	'_Ifx_P_LPCR1_P21_Bits',0,7,208,1,16,4,11
	.byte	'RDIS_CTRL',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'RX_DIS',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'TERM',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'LRXTERM',0,1
	.word	428
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	405
	.byte	24,0,2,35,0,0,12,7,204,4,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6996
	.byte	4,2,35,0,13
	.byte	'B_P21',0
	.word	7080
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR2_Bits',0,7,218,1,16,4,11
	.byte	'reserved_0',0,1
	.word	428
	.byte	8,0,2,35,0,11
	.byte	'LVDSR',0,1
	.word	428
	.byte	1,7,2,35,1,11
	.byte	'LVDSRL',0,1
	.word	428
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	428
	.byte	2,4,2,35,1,11
	.byte	'TDIS_CTRL',0,1
	.word	428
	.byte	1,3,2,35,1,11
	.byte	'TX_DIS',0,1
	.word	428
	.byte	1,2,2,35,1,11
	.byte	'TX_PD',0,1
	.word	428
	.byte	1,1,2,35,1,11
	.byte	'TX_PWDPD',0,1
	.word	428
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	923
	.byte	16,0,2,35,2,0,12,7,213,4,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7260
	.byte	4,2,35,0,0,18,76
	.word	428
	.byte	19,75,0,10
	.byte	'_Ifx_P_ACCEN1_Bits',0,7,82,16,4,11
	.byte	'reserved_0',0,4
	.word	405
	.byte	32,0,2,35,0,0,12,7,132,4,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7513
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ACCEN0_Bits',0,7,45,16,4,11
	.byte	'EN0',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	428
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	428
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	428
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	428
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	428
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	428
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	428
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	428
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	428
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	428
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	428
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	428
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	428
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	428
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	428
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	428
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	428
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	428
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	428
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	428
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	428
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	428
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	428
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	428
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	428
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	428
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	428
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	428
	.byte	1,0,2,35,3,0,12,7,252,3,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7600
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P',0,7,229,5,25,128,2,13
	.byte	'OUT',0
	.word	1298
	.byte	4,2,35,0,13
	.byte	'OMR',0
	.word	1869
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	1988
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2028
	.byte	4,2,35,12,13
	.byte	'IOCR0',0
	.word	2212
	.byte	4,2,35,16,13
	.byte	'IOCR4',0
	.word	2427
	.byte	4,2,35,20,13
	.byte	'IOCR8',0
	.word	2644
	.byte	4,2,35,24,13
	.byte	'IOCR12',0
	.word	2864
	.byte	4,2,35,28,13
	.byte	'reserved_20',0
	.word	2028
	.byte	4,2,35,32,13
	.byte	'IN',0
	.word	3178
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	3218
	.byte	24,2,35,40,13
	.byte	'PDR0',0
	.word	3491
	.byte	4,2,35,64,13
	.byte	'PDR1',0
	.word	3807
	.byte	4,2,35,68,13
	.byte	'reserved_48',0
	.word	3847
	.byte	8,2,35,72,13
	.byte	'ESR',0
	.word	4147
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	4187
	.byte	12,2,35,84,13
	.byte	'PDISC',0
	.word	4522
	.byte	4,2,35,96,13
	.byte	'PCSR',0
	.word	4808
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	3847
	.byte	8,2,35,104,13
	.byte	'OMSR0',0
	.word	4955
	.byte	4,2,35,112,13
	.byte	'OMSR4',0
	.word	5124
	.byte	4,2,35,116,13
	.byte	'OMSR8',0
	.word	5296
	.byte	4,2,35,120,13
	.byte	'OMSR12',0
	.word	5471
	.byte	4,2,35,124,13
	.byte	'OMCR0',0
	.word	5645
	.byte	4,3,35,128,1,13
	.byte	'OMCR4',0
	.word	5819
	.byte	4,3,35,132,1,13
	.byte	'OMCR8',0
	.word	5995
	.byte	4,3,35,136,1,13
	.byte	'OMCR12',0
	.word	6151
	.byte	4,3,35,140,1,13
	.byte	'OMSR',0
	.word	6484
	.byte	4,3,35,144,1,13
	.byte	'OMCR',0
	.word	6832
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	3847
	.byte	8,3,35,152,1,13
	.byte	'LPCR0',0
	.word	6956
	.byte	4,3,35,160,1,13
	.byte	'LPCR1',0
	.word	7205
	.byte	4,3,35,164,1,13
	.byte	'LPCR2',0
	.word	7464
	.byte	4,3,35,168,1,13
	.byte	'reserved_A4',0
	.word	7504
	.byte	76,3,35,172,1,13
	.byte	'ACCEN1',0
	.word	7560
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	8127
	.byte	4,3,35,252,1,0,14
	.word	8167
	.byte	3
	.word	8770
	.byte	15,6,83,9,1,16
	.byte	'IfxPort_InputMode_undefined',0,127,16
	.byte	'IfxPort_InputMode_noPullDevice',0,0,16
	.byte	'IfxPort_InputMode_pullDown',0,8,16
	.byte	'IfxPort_InputMode_pullUp',0,16,0
.L219:
	.byte	4
	.byte	'IfxPort_setPinModeInput',0,3,6,196,4,17,1,1
.L222:
	.byte	5
	.byte	'port',0,6,196,4,48
	.word	8775
.L224:
	.byte	5
	.byte	'pinIndex',0,6,196,4,60
	.word	428
.L226:
	.byte	5
	.byte	'mode',0,6,196,4,88
	.word	8780
.L228:
	.byte	6,0,15,6,134,1,9,1,16
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,16
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,15,6,120,9,1,16
	.byte	'IfxPort_OutputIdx_general',0,128,1,16
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,16
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,16
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,16
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,16
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,16
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,16
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0
.L231:
	.byte	4
	.byte	'IfxPort_setPinModeOutput',0,3,6,202,4,17,1,1
.L234:
	.byte	5
	.byte	'port',0,6,202,4,49
	.word	8775
.L236:
	.byte	5
	.byte	'pinIndex',0,6,202,4,61
	.word	428
.L238:
	.byte	5
	.byte	'mode',0,6,202,4,90
	.word	8985
.L240:
	.byte	5
	.byte	'index',0,6,202,4,114
	.word	9055
.L242:
	.byte	6,0,15,6,172,1,9,4,16
	.byte	'IfxPort_State_notChanged',0,0,16
	.byte	'IfxPort_State_high',0,1,16
	.byte	'IfxPort_State_low',0,128,128,4,16
	.byte	'IfxPort_State_toggled',0,129,128,4,0,4
	.byte	'IfxPort_setPinState',0,3,6,208,4,17,1,1,5
	.byte	'port',0,6,208,4,44
	.word	8775
	.byte	5
	.byte	'pinIndex',0,6,208,4,56
	.word	428
	.byte	5
	.byte	'action',0,6,208,4,80
	.word	9368
	.byte	6,0
.L279:
	.byte	7
	.byte	'unsigned long int',0,4,7,10
	.byte	'_Ifx_HSSL_CLC_Bits',0,9,126,16,4,11
	.byte	'DISR',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	405
	.byte	28,0,2,35,0,0,12,9,206,3,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	9570
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_ID_Bits',0,9,177,1,16,4,11
	.byte	'MODREV',0,1
	.word	428
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	428
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	923
	.byte	16,0,2,35,2,0,12,9,254,3,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	9727
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_CRC_Bits',0,9,136,1,16,4,11
	.byte	'XORMASK',0,2
	.word	923
	.byte	16,0,2,35,0,11
	.byte	'XEN',0,1
	.word	428
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	923
	.byte	15,0,2,35,2,0,12,9,214,3,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	9850
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_CFG_Bits',0,9,114,16,4,11
	.byte	'PREDIV',0,2
	.word	923
	.byte	14,2,2,35,0,11
	.byte	'reserved_14',0,1
	.word	428
	.byte	2,0,2,35,1,11
	.byte	'SMT',0,1
	.word	428
	.byte	1,7,2,35,2,11
	.byte	'SMR',0,1
	.word	428
	.byte	1,6,2,35,2,11
	.byte	'SCM',0,1
	.word	428
	.byte	1,5,2,35,2,11
	.byte	'CCC',0,1
	.word	428
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	923
	.byte	12,0,2,35,2,0,12,9,198,3,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	9973
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_QFLAGS_Bits',0,9,200,2,16,4,11
	.byte	'I',0,1
	.word	428
	.byte	4,4,2,35,0,11
	.byte	'T',0,1
	.word	428
	.byte	4,0,2,35,0,11
	.byte	'R',0,1
	.word	428
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	428
	.byte	4,0,2,35,1,11
	.byte	'E0',0,1
	.word	428
	.byte	2,6,2,35,2,11
	.byte	'E1',0,1
	.word	428
	.byte	2,4,2,35,2,11
	.byte	'E2',0,1
	.word	428
	.byte	2,2,2,35,2,11
	.byte	'E3',0,1
	.word	428
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	428
	.byte	4,4,2,35,3,11
	.byte	'IS',0,1
	.word	428
	.byte	1,3,2,35,3,11
	.byte	'RS',0,1
	.word	428
	.byte	1,2,2,35,3,11
	.byte	'TS',0,1
	.word	428
	.byte	1,1,2,35,3,11
	.byte	'ES',0,1
	.word	428
	.byte	1,0,2,35,3,0,12,9,222,4,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10162
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_MFLAGS_Bits',0,9,228,1,16,4,11
	.byte	'NACK',0,1
	.word	428
	.byte	4,4,2,35,0,11
	.byte	'TTE',0,1
	.word	428
	.byte	4,0,2,35,0,11
	.byte	'TIMEOUT',0,1
	.word	428
	.byte	4,4,2,35,1,11
	.byte	'UNEXPECTED',0,1
	.word	428
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	428
	.byte	2,6,2,35,2,11
	.byte	'TMB',0,1
	.word	428
	.byte	1,5,2,35,2,11
	.byte	'IMB',0,1
	.word	428
	.byte	1,4,2,35,2,11
	.byte	'ISB',0,1
	.word	428
	.byte	1,3,2,35,2,11
	.byte	'MAV',0,1
	.word	428
	.byte	1,2,2,35,2,11
	.byte	'SRIE',0,1
	.word	428
	.byte	1,1,2,35,2,11
	.byte	'PIE1',0,1
	.word	428
	.byte	1,0,2,35,2,11
	.byte	'PIE2',0,1
	.word	428
	.byte	1,7,2,35,3,11
	.byte	'CRCE',0,1
	.word	428
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	428
	.byte	2,4,2,35,3,11
	.byte	'TSE',0,1
	.word	428
	.byte	1,3,2,35,3,11
	.byte	'TEI',0,1
	.word	428
	.byte	1,2,2,35,3,11
	.byte	'TEO',0,1
	.word	428
	.byte	1,1,2,35,3,11
	.byte	'INI',0,1
	.word	428
	.byte	1,0,2,35,3,0,12,9,182,4,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10428
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_MFLAGSSET_Bits',0,9,164,2,16,4,11
	.byte	'NACKS',0,1
	.word	428
	.byte	4,4,2,35,0,11
	.byte	'TTES',0,1
	.word	428
	.byte	4,0,2,35,0,11
	.byte	'TIMEOUTS',0,1
	.word	428
	.byte	4,4,2,35,1,11
	.byte	'UNEXPECTEDS',0,1
	.word	428
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	428
	.byte	2,6,2,35,2,11
	.byte	'TMBS',0,1
	.word	428
	.byte	1,5,2,35,2,11
	.byte	'IMBS',0,1
	.word	428
	.byte	1,4,2,35,2,11
	.byte	'ISBS',0,1
	.word	428
	.byte	1,3,2,35,2,11
	.byte	'MAVS',0,1
	.word	428
	.byte	1,2,2,35,2,11
	.byte	'SRIES',0,1
	.word	428
	.byte	1,1,2,35,2,11
	.byte	'PIE1S',0,1
	.word	428
	.byte	1,0,2,35,2,11
	.byte	'PIE2S',0,1
	.word	428
	.byte	1,7,2,35,3,11
	.byte	'CRCES',0,1
	.word	428
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	428
	.byte	2,4,2,35,3,11
	.byte	'TSES',0,1
	.word	428
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	428
	.byte	1,2,2,35,3,11
	.byte	'TEOS',0,1
	.word	428
	.byte	1,1,2,35,3,11
	.byte	'INIS',0,1
	.word	428
	.byte	1,0,2,35,3,0,12,9,206,4,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10799
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_MFLAGSCL_Bits',0,9,251,1,16,4,11
	.byte	'NACKC',0,1
	.word	428
	.byte	4,4,2,35,0,11
	.byte	'TTEC',0,1
	.word	428
	.byte	4,0,2,35,0,11
	.byte	'TIMEOUTC',0,1
	.word	428
	.byte	4,4,2,35,1,11
	.byte	'UNEXPECTEDC',0,1
	.word	428
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	428
	.byte	2,6,2,35,2,11
	.byte	'TMBC',0,1
	.word	428
	.byte	1,5,2,35,2,11
	.byte	'IMBC',0,1
	.word	428
	.byte	1,4,2,35,2,11
	.byte	'ISBC',0,1
	.word	428
	.byte	1,3,2,35,2,11
	.byte	'MAVC',0,1
	.word	428
	.byte	1,2,2,35,2,11
	.byte	'SRIEC',0,1
	.word	428
	.byte	1,1,2,35,2,11
	.byte	'PIE1C',0,1
	.word	428
	.byte	1,0,2,35,2,11
	.byte	'PIE2C',0,1
	.word	428
	.byte	1,7,2,35,3,11
	.byte	'CRCEC',0,1
	.word	428
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	428
	.byte	2,4,2,35,3,11
	.byte	'TSEC',0,1
	.word	428
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	428
	.byte	1,2,2,35,3,11
	.byte	'TEOC',0,1
	.word	428
	.byte	1,1,2,35,3,11
	.byte	'INIC',0,1
	.word	428
	.byte	1,0,2,35,3,0,12,9,190,4,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11196
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_MFLAGSEN_Bits',0,9,146,2,16,4,11
	.byte	'NACKEN',0,1
	.word	428
	.byte	4,4,2,35,0,11
	.byte	'TTEEN',0,1
	.word	428
	.byte	4,0,2,35,0,11
	.byte	'TIMEOUTEN',0,1
	.word	428
	.byte	4,4,2,35,1,11
	.byte	'UNEXPECTEDEN',0,1
	.word	428
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	428
	.byte	5,3,2,35,2,11
	.byte	'MAVEN',0,1
	.word	428
	.byte	1,2,2,35,2,11
	.byte	'SRIEEN',0,1
	.word	428
	.byte	1,1,2,35,2,11
	.byte	'PIE1EN',0,1
	.word	428
	.byte	1,0,2,35,2,11
	.byte	'PIE2EN',0,1
	.word	428
	.byte	1,7,2,35,3,11
	.byte	'CRCEEN',0,1
	.word	428
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	428
	.byte	3,3,2,35,3,11
	.byte	'TEIEN',0,1
	.word	428
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	428
	.byte	2,0,2,35,3,0,12,9,198,4,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11592
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_SFSFLAGS_Bits',0,9,218,2,16,4,11
	.byte	'RXFL',0,1
	.word	428
	.byte	2,6,2,35,0,11
	.byte	'TXFL',0,1
	.word	428
	.byte	2,4,2,35,0,11
	.byte	'EXFL',0,1
	.word	428
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	923
	.byte	9,1,2,35,0,11
	.byte	'ISF',0,1
	.word	428
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	923
	.byte	16,0,2,35,2,0,12,9,230,4,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11918
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_I_IWD_Bits',0,9,171,1,16,4,11
	.byte	'DATA',0,4
	.word	405
	.byte	32,0,2,35,0,0,12,9,246,3,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12097
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_I_ICON_Bits',0,9,144,1,16,4,11
	.byte	'IDQ',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'TQ',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'LETT',0,1
	.word	428
	.byte	3,3,2,35,0,11
	.byte	'CETT',0,1
	.word	428
	.byte	3,0,2,35,0,11
	.byte	'TOCV',0,1
	.word	428
	.byte	8,0,2,35,1,11
	.byte	'DATLEN',0,1
	.word	428
	.byte	2,6,2,35,2,11
	.byte	'RWT',0,1
	.word	428
	.byte	2,4,2,35,2,11
	.byte	'BSY',0,1
	.word	428
	.byte	1,3,2,35,2,11
	.byte	'ITTAG',0,1
	.word	428
	.byte	3,0,2,35,2,11
	.byte	'TOREL',0,1
	.word	428
	.byte	8,0,2,35,3,0,12,9,222,3,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12181
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_I_IRWA_Bits',0,9,165,1,16,4,11
	.byte	'ADDRESS',0,4
	.word	405
	.byte	32,0,2,35,0,0,12,9,238,3,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12409
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_I_IRD_Bits',0,9,159,1,16,4,11
	.byte	'DATA',0,4
	.word	405
	.byte	32,0,2,35,0,0,12,9,230,3,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12497
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_I',0,9,181,5,25,16,13
	.byte	'IWD',0
	.word	12141
	.byte	4,2,35,0,13
	.byte	'ICON',0
	.word	12369
	.byte	4,2,35,4,13
	.byte	'IRWA',0
	.word	12457
	.byte	4,2,35,8,13
	.byte	'IRD',0
	.word	12541
	.byte	4,2,35,12,0,18,64
	.word	12581
	.byte	19,3,0,14
	.word	12654
	.byte	10
	.byte	'_Ifx_HSSL_T_TCD_Bits',0,9,235,2,16,4,11
	.byte	'D',0,4
	.word	405
	.byte	32,0,2,35,0,0,12,9,246,4,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12668
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_T_TCA_Bits',0,9,229,2,16,4,11
	.byte	'A',0,4
	.word	405
	.byte	32,0,2,35,0,0,12,9,238,4,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12749
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_T',0,9,198,5,25,8,13
	.byte	'TCD',0
	.word	12709
	.byte	4,2,35,0,13
	.byte	'TCA',0
	.word	12790
	.byte	4,2,35,4,0,18,32
	.word	12830
	.byte	19,3,0,14
	.word	12875
	.byte	10
	.byte	'_Ifx_HSSL_TSTAT_Bits',0,9,140,3,16,4,11
	.byte	'LASTCC0',0,1
	.word	428
	.byte	5,3,2,35,0,11
	.byte	'LASTTT0',0,1
	.word	428
	.byte	3,0,2,35,0,11
	.byte	'LASTCC1',0,1
	.word	428
	.byte	5,3,2,35,1,11
	.byte	'LASTTT1',0,1
	.word	428
	.byte	3,0,2,35,1,11
	.byte	'LASTCC2',0,1
	.word	428
	.byte	5,3,2,35,2,11
	.byte	'LASTTT2',0,1
	.word	428
	.byte	3,0,2,35,2,11
	.byte	'LASTCC3',0,1
	.word	428
	.byte	5,3,2,35,3,11
	.byte	'LASTTT3',0,1
	.word	428
	.byte	3,0,2,35,3,0,12,9,158,5,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12889
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_TIDADD_Bits',0,9,241,2,16,4,11
	.byte	'A',0,4
	.word	405
	.byte	32,0,2,35,0,0,12,9,254,4,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13109
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_ISSA_Bits',0,9,199,1,16,4,11
	.byte	'reserved_0',0,1
	.word	428
	.byte	5,3,2,35,0,11
	.byte	'START',0,4
	.word	405
	.byte	27,0,2,35,0,0,12,9,150,4,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13191
	.byte	4,2,35,0,0,18,8
	.word	13257
	.byte	19,1,0,10
	.byte	'_Ifx_HSSL_IS_CA_Bits',0,9,185,1,16,4,11
	.byte	'reserved_0',0,1
	.word	428
	.byte	5,3,2,35,0,11
	.byte	'CURR',0,4
	.word	405
	.byte	27,0,2,35,0,0,12,9,134,4,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13306
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_IS_FC_Bits',0,9,192,1,16,4,11
	.byte	'RELCOUNT',0,2
	.word	923
	.byte	16,0,2,35,0,11
	.byte	'CURCOUNT',0,2
	.word	923
	.byte	16,0,2,35,2,0,12,9,142,4,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13412
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_IS',0,9,190,5,25,16,13
	.byte	'SA',0
	.word	13297
	.byte	8,2,35,0,13
	.byte	'CA',0
	.word	13372
	.byte	4,2,35,8,13
	.byte	'FC',0
	.word	13480
	.byte	4,2,35,12,0,14
	.word	13520
	.byte	10
	.byte	'_Ifx_HSSL_TSSA_Bits',0,9,133,3,16,4,11
	.byte	'reserved_0',0,1
	.word	428
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	405
	.byte	27,0,2,35,0,0,12,9,150,5,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13581
	.byte	4,2,35,0,0,18,8
	.word	13646
	.byte	19,1,0,10
	.byte	'_Ifx_HSSL_TS_CA_Bits',0,9,247,2,16,4,11
	.byte	'reserved_0',0,1
	.word	428
	.byte	5,3,2,35,0,11
	.byte	'CURR',0,4
	.word	405
	.byte	27,0,2,35,0,0,12,9,134,5,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13695
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_TS_FC_Bits',0,9,254,2,16,4,11
	.byte	'RELCOUNT',0,2
	.word	923
	.byte	16,0,2,35,0,11
	.byte	'CURCOUNT',0,2
	.word	923
	.byte	16,0,2,35,2,0
.L326:
	.byte	12,9,142,5,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13801
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_TS',0,9,205,5,25,16,13
	.byte	'SA',0
	.word	13686
	.byte	8,2,35,0,13
	.byte	'CA',0
	.word	13761
	.byte	4,2,35,8,13
	.byte	'FC',0
	.word	13869
	.byte	4,2,35,12,0,14
	.word	13909
	.byte	10
	.byte	'_Ifx_HSSL_AW_AWSTART_Bits',0,9,107,16,4,11
	.byte	'reserved_0',0,1
	.word	428
	.byte	8,0,2,35,0,11
	.byte	'AWS',0,4
	.word	405
	.byte	24,0,2,35,0,0,12,9,190,3,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13970
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_AW_AWEND_Bits',0,9,100,16,4,11
	.byte	'reserved_0',0,1
	.word	428
	.byte	8,0,2,35,0,11
	.byte	'AWE',0,4
	.word	405
	.byte	24,0,2,35,0,0,12,9,182,3,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14079
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_AW',0,9,174,5,25,8,13
	.byte	'AWSTART',0
	.word	14039
	.byte	4,2,35,0,13
	.byte	'AWEND',0
	.word	14146
	.byte	4,2,35,4,0,18,32
	.word	14186
	.byte	19,3,0,14
	.word	14238
	.byte	10
	.byte	'_Ifx_HSSL_AR_Bits',0,9,88,16,4,11
	.byte	'ARW0',0,1
	.word	428
	.byte	2,6,2,35,0,11
	.byte	'ARW1',0,1
	.word	428
	.byte	2,4,2,35,0,11
	.byte	'ARW2',0,1
	.word	428
	.byte	2,2,2,35,0,11
	.byte	'ARW3',0,1
	.word	428
	.byte	2,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	428
	.byte	8,0,2,35,1,11
	.byte	'MAVCH',0,1
	.word	428
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	923
	.byte	14,0,2,35,2,0,12,9,174,3,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14252
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_OCS_Bits',0,9,187,2,16,4,11
	.byte	'TGS',0,1
	.word	428
	.byte	2,6,2,35,0,11
	.byte	'TGB',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'TG_P',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	405
	.byte	20,8,2,35,0,11
	.byte	'SUS',0,1
	.word	428
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	428
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	428
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	428
	.byte	2,0,2,35,3,0,12,9,214,4,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14442
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_KRSTCLR_Bits',0,9,221,1,16,4,11
	.byte	'CLR',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	405
	.byte	31,0,2,35,0,0,12,9,174,4,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14649
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_KRST1_Bits',0,9,214,1,16,4,11
	.byte	'RST',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	405
	.byte	31,0,2,35,0,0,12,9,166,4,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14756
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_KRST0_Bits',0,9,206,1,16,4,11
	.byte	'RST',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	405
	.byte	30,0,2,35,0,0,12,9,158,4,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14861
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_ACCEN1_Bits',0,9,82,16,4,11
	.byte	'reserved_0',0,4
	.word	405
	.byte	32,0,2,35,0,0,12,9,166,3,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14985
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_ACCEN0_Bits',0,9,45,16,4,11
	.byte	'EN0',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	428
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	428
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	428
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	428
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	428
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	428
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	428
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	428
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	428
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	428
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	428
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	428
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	428
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	428
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	428
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	428
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	428
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	428
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	428
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	428
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	428
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	428
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	428
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	428
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	428
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	428
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	428
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	428
	.byte	1,0,2,35,3,0,12,9,158,3,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15075
	.byte	4,2,35,0,0,18,128,6
	.word	428
	.byte	19,255,5,0,10
	.byte	'_Ifx_HSSL',0,9,223,5,25,128,8,13
	.byte	'CLC',0
	.word	9687
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	2028
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	9810
	.byte	4,2,35,8,13
	.byte	'CRC',0
	.word	9933
	.byte	4,2,35,12,13
	.byte	'CFG',0
	.word	10122
	.byte	4,2,35,16,13
	.byte	'QFLAGS',0
	.word	10388
	.byte	4,2,35,20,13
	.byte	'MFLAGS',0
	.word	10759
	.byte	4,2,35,24,13
	.byte	'MFLAGSSET',0
	.word	11156
	.byte	4,2,35,28,13
	.byte	'MFLAGSCL',0
	.word	11552
	.byte	4,2,35,32,13
	.byte	'MFLAGSEN',0
	.word	11878
	.byte	4,2,35,36,13
	.byte	'SFSFLAGS',0
	.word	12057
	.byte	4,2,35,40,13
	.byte	'reserved_2C',0
	.word	2028
	.byte	4,2,35,44,13
	.byte	'I',0
	.word	12663
	.byte	64,2,35,48,13
	.byte	'T',0
	.word	12884
	.byte	32,2,35,112,13
	.byte	'TSTAT',0
	.word	13069
	.byte	4,3,35,144,1,13
	.byte	'TIDADD',0
	.word	13151
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	3847
	.byte	8,3,35,152,1,13
	.byte	'IS',0
	.word	13576
	.byte	16,3,35,160,1,13
	.byte	'TS',0
	.word	13965
	.byte	16,3,35,176,1,13
	.byte	'AW',0
	.word	14247
	.byte	32,3,35,192,1,13
	.byte	'AR',0
	.word	14402
	.byte	4,3,35,224,1,13
	.byte	'reserved_E4',0
	.word	2028
	.byte	4,3,35,228,1,13
	.byte	'OCS',0
	.word	14609
	.byte	4,3,35,232,1,13
	.byte	'KRSTCLR',0
	.word	14716
	.byte	4,3,35,236,1,13
	.byte	'KRST1',0
	.word	14821
	.byte	4,3,35,240,1,13
	.byte	'KRST0',0
	.word	14945
	.byte	4,3,35,244,1,13
	.byte	'ACCEN1',0
	.word	15035
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	15605
	.byte	4,3,35,252,1,13
	.byte	'reserved_100',0
	.word	15645
	.byte	128,6,3,35,128,2,0,14
	.word	15656
.L260:
	.byte	3
	.word	16144
	.byte	10
	.byte	'_Ifx_HSCT_CLC_Bits',0,10,88,16,4,11
	.byte	'DISR',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	405
	.byte	28,0,2,35,0,0,12,10,206,2,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16154
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_ID_Bits',0,10,134,1,16,4,11
	.byte	'MODREV',0,1
	.word	428
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	428
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	923
	.byte	16,0,2,35,2,0,12,10,238,2,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16311
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_INIT_Bits',0,10,162,1,16,4,11
	.byte	'reserved_0',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'SYS_CLK_EN',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'SRCF',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'IFM',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	923
	.byte	6,6,2,35,0,11
	.byte	'LHLR',0,1
	.word	428
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	428
	.byte	5,0,2,35,1,11
	.byte	'TXHD',0,1
	.word	428
	.byte	3,5,2,35,2,11
	.byte	'RXHD',0,1
	.word	428
	.byte	3,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	923
	.byte	10,0,2,35,2,0,12,10,134,3,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16434
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_IFCTRL_Bits',0,10,142,1,16,4,11
	.byte	'IFCVS',0,1
	.word	428
	.byte	8,0,2,35,0,11
	.byte	'SIFCV',0,1
	.word	428
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	428
	.byte	7,0,2,35,1,11
	.byte	'MRXSPEED',0,1
	.word	428
	.byte	2,6,2,35,2,11
	.byte	'MTXSPEED',0,1
	.word	428
	.byte	2,4,2,35,2,11
	.byte	'IFTESTMD',0,1
	.word	428
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,2
	.word	923
	.byte	11,0,2,35,2,0,12,10,246,2,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16692
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_SLEEPCTRL_Bits',0,10,141,2,16,4,11
	.byte	'SLPEN',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'SLPCLKG',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	405
	.byte	30,0,2,35,0,0,12,10,198,3,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16900
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_CTSCTRL_Bits',0,10,115,16,4,11
	.byte	'CTS_FRAME',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'CTS_TXD',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'CTS_RXD',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'HSSL_CTS_FBD',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	405
	.byte	28,0,2,35,0,0,12,10,222,2,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17030
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_DISABLE_Bits',0,10,125,16,4,11
	.byte	'TX_DIS',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'RX_DIS',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'RX_HEPD',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	405
	.byte	29,0,2,35,0,0,12,10,230,2,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17204
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_STAT_Bits',0,10,149,2,16,4,11
	.byte	'RX_PSIZE',0,1
	.word	428
	.byte	3,5,2,35,0,11
	.byte	'RX_CHANNEL',0,1
	.word	428
	.byte	4,1,2,35,0,11
	.byte	'RX_SLEEP',0,1
	.word	428
	.byte	1,0,2,35,0,11
	.byte	'TX_SLEEP',0,1
	.word	428
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	428
	.byte	3,4,2,35,1,11
	.byte	'TX_PSIZE',0,1
	.word	428
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	428
	.byte	1,0,2,35,1,11
	.byte	'TX_CHANNEL_TYPE',0,1
	.word	428
	.byte	4,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	428
	.byte	4,0,2,35,2,11
	.byte	'LIFCCMDR',0,1
	.word	428
	.byte	8,0,2,35,3,0,12,10,206,3,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17350
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_IFSTAT_Bits',0,10,154,1,16,4,11
	.byte	'RX_STAT',0,1
	.word	428
	.byte	3,5,2,35,0,11
	.byte	'TX_STAT',0,1
	.word	428
	.byte	2,3,2,35,0,11
	.byte	'reserved_5',0,4
	.word	405
	.byte	27,0,2,35,0,0,12,10,254,2,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17634
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_CONFIGPHY_Bits',0,10,98,16,4,11
	.byte	'reserved_0',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'PLLPON',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'PLLPE',0,1
	.word	428
	.byte	6,0,2,35,0,11
	.byte	'PLLWMF',0,1
	.word	428
	.byte	6,2,2,35,1,11
	.byte	'PLLKPKI',0,1
	.word	428
	.byte	1,1,2,35,1,11
	.byte	'PHYRST',0,1
	.word	428
	.byte	1,0,2,35,1,11
	.byte	'PLLKP',0,1
	.word	428
	.byte	3,5,2,35,2,11
	.byte	'PLLKI',0,1
	.word	428
	.byte	3,2,2,35,2,11
	.byte	'PLLIVR',0,2
	.word	923
	.byte	4,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	428
	.byte	2,4,2,35,3,11
	.byte	'OSCCLKEN',0,1
	.word	428
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	428
	.byte	3,0,2,35,3,0,12,10,214,2,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17763
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_STATPHY_Bits',0,10,164,2,16,4,11
	.byte	'PLOCK',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'RXLSA',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'TXLSA',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	405
	.byte	29,0,2,35,0,0,12,10,214,3,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18064
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_IRQ_Bits',0,10,177,1,16,4,11
	.byte	'reserved_0',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'HER',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'PYER',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'CER',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'IFCFS',0,1
	.word	428
	.byte	1,3,2,35,0,11
	.byte	'SMER',0,1
	.word	428
	.byte	1,2,2,35,0,11
	.byte	'USMSF',0,1
	.word	428
	.byte	1,1,2,35,0,11
	.byte	'PLER',0,1
	.word	428
	.byte	1,0,2,35,0,11
	.byte	'USM',0,1
	.word	428
	.byte	1,7,2,35,1,11
	.byte	'PAR',0,1
	.word	428
	.byte	1,6,2,35,1,11
	.byte	'TXTE',0,1
	.word	428
	.byte	1,5,2,35,1,11
	.byte	'SFO',0,1
	.word	428
	.byte	1,4,2,35,1,11
	.byte	'SFU',0,1
	.word	428
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	405
	.byte	19,0,2,35,0,0,12,10,142,3,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18207
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_IRQEN_Bits',0,10,215,1,16,4,11
	.byte	'reserved_0',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'HEREN',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'PYEREN',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'CEREN',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'IFCFSEN',0,1
	.word	428
	.byte	1,3,2,35,0,11
	.byte	'SMEREN',0,1
	.word	428
	.byte	1,2,2,35,0,11
	.byte	'USMSFEN',0,1
	.word	428
	.byte	1,1,2,35,0,11
	.byte	'PLEREN',0,1
	.word	428
	.byte	1,0,2,35,0,11
	.byte	'USMEN',0,1
	.word	428
	.byte	1,7,2,35,1,11
	.byte	'PAREN',0,1
	.word	428
	.byte	1,6,2,35,1,11
	.byte	'TXTEEN',0,1
	.word	428
	.byte	1,5,2,35,1,11
	.byte	'SFOEN',0,1
	.word	428
	.byte	1,4,2,35,1,11
	.byte	'SFUEN',0,1
	.word	428
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	405
	.byte	19,0,2,35,0,0,12,10,158,3,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18506
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_IRQCLR_Bits',0,10,196,1,16,4,11
	.byte	'reserved_0',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'HERCLR',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'PYERCLR',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'CERCLR',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'IFCFSCLR',0,1
	.word	428
	.byte	1,3,2,35,0,11
	.byte	'SMERCLR',0,1
	.word	428
	.byte	1,2,2,35,0,11
	.byte	'USMSFCLR',0,1
	.word	428
	.byte	1,1,2,35,0,11
	.byte	'PLERCLR',0,1
	.word	428
	.byte	1,0,2,35,0,11
	.byte	'USMCLR',0,1
	.word	428
	.byte	1,7,2,35,1,11
	.byte	'PARCLR',0,1
	.word	428
	.byte	1,6,2,35,1,11
	.byte	'TXTECLR',0,1
	.word	428
	.byte	1,5,2,35,1,11
	.byte	'SFOCLR',0,1
	.word	428
	.byte	1,4,2,35,1,11
	.byte	'SFUCLR',0,1
	.word	428
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	405
	.byte	19,0,2,35,0,0,12,10,150,3,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18831
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_USMR_Bits',0,10,173,2,16,4,11
	.byte	'USMR',0,4
	.word	405
	.byte	32,0,2,35,0,0,12,10,222,3,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19169
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_USMS_Bits',0,10,179,2,16,4,11
	.byte	'USMS',0,4
	.word	405
	.byte	32,0,2,35,0,0,12,10,230,3,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19252
	.byte	4,2,35,0,0,18,144,255,3
	.word	428
	.byte	19,143,255,3,0,10
	.byte	'_Ifx_HSCT_OCS_Bits',0,10,128,2,16,4,11
	.byte	'TGS',0,1
	.word	428
	.byte	2,6,2,35,0,11
	.byte	'TGB',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'TG_P',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	405
	.byte	20,8,2,35,0,11
	.byte	'SUS',0,1
	.word	428
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	428
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	428
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	428
	.byte	2,0,2,35,3,0,12,10,190,3,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19348
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_KRSTCLR_Bits',0,10,249,1,16,4,11
	.byte	'CLR',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	405
	.byte	31,0,2,35,0,0,12,10,182,3,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19555
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_KRST1_Bits',0,10,242,1,16,4,11
	.byte	'RST',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	405
	.byte	31,0,2,35,0,0,12,10,174,3,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19662
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_KRST0_Bits',0,10,234,1,16,4,11
	.byte	'RST',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	405
	.byte	30,0,2,35,0,0,12,10,166,3,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19767
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_ACCEN1_Bits',0,10,82,16,4,11
	.byte	'reserved_0',0,4
	.word	405
	.byte	32,0,2,35,0,0,12,10,198,2,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19891
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_ACCEN0_Bits',0,10,45,16,4,11
	.byte	'EN0',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	428
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	428
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	428
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	428
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	428
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	428
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	428
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	428
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	428
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	428
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	428
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	428
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	428
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	428
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	428
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	428
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	428
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	428
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	428
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	428
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	428
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	428
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	428
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	428
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	428
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	428
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	428
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	428
	.byte	1,0,2,35,3,0,12,10,190,2,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19981
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT',0,10,246,3,25,128,128,4,13
	.byte	'CLC',0
	.word	16271
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	2028
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	16394
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2028
	.byte	4,2,35,12,13
	.byte	'INIT',0
	.word	16652
	.byte	4,2,35,16,13
	.byte	'IFCTRL',0
	.word	16860
	.byte	4,2,35,20,13
	.byte	'SLEEPCTRL',0
	.word	16990
	.byte	4,2,35,24,13
	.byte	'CTSCTRL',0
	.word	17164
	.byte	4,2,35,28,13
	.byte	'DISABLE',0
	.word	17310
	.byte	4,2,35,32,13
	.byte	'STAT',0
	.word	17594
	.byte	4,2,35,36,13
	.byte	'IFSTAT',0
	.word	17723
	.byte	4,2,35,40,13
	.byte	'reserved_2C',0
	.word	2028
	.byte	4,2,35,44,13
	.byte	'CONFIGPHY',0
	.word	18024
	.byte	4,2,35,48,13
	.byte	'STATPHY',0
	.word	18167
	.byte	4,2,35,52,13
	.byte	'reserved_38',0
	.word	3847
	.byte	8,2,35,56,13
	.byte	'IRQ',0
	.word	18466
	.byte	4,2,35,64,13
	.byte	'IRQEN',0
	.word	18791
	.byte	4,2,35,68,13
	.byte	'IRQCLR',0
	.word	19129
	.byte	4,2,35,72,13
	.byte	'reserved_4C',0
	.word	2028
	.byte	4,2,35,76,13
	.byte	'USMR',0
	.word	19212
	.byte	4,2,35,80,13
	.byte	'USMS',0
	.word	19295
	.byte	4,2,35,84,13
	.byte	'reserved_58',0
	.word	19335
	.byte	144,255,3,2,35,88,13
	.byte	'OCS',0
	.word	19515
	.byte	4,4,35,232,255,3,13
	.byte	'KRSTCLR',0
	.word	19622
	.byte	4,4,35,236,255,3,13
	.byte	'KRST1',0
	.word	19727
	.byte	4,4,35,240,255,3,13
	.byte	'KRST0',0
	.word	19851
	.byte	4,4,35,244,255,3,13
	.byte	'ACCEN1',0
	.word	19941
	.byte	4,4,35,248,255,3,13
	.byte	'ACCEN0',0
	.word	20511
	.byte	4,4,35,252,255,3,0,14
	.word	20551
.L217:
	.byte	3
	.word	21046
.L301:
	.byte	15,11,77,9,1,16
	.byte	'IfxHssl_ChannelId_0',0,0,16
	.byte	'IfxHssl_ChannelId_1',0,1,16
	.byte	'IfxHssl_ChannelId_2',0,2,16
	.byte	'IfxHssl_ChannelId_3',0,3,0
.L291:
	.byte	15,8,196,3,9,1,16
	.byte	'IfxHssl_Hssl_FrameRequest_readFrame',0,1,16
	.byte	'IfxHssl_Hssl_FrameRequest_writeFrame',0,2,16
	.byte	'IfxHssl_Hssl_FrameRequest_triggerFrame',0,3,16
	.byte	'IfxHssl_Hssl_FrameRequest_readId',0,4,16
	.byte	'IfxHssl_Hssl_FrameRequest_noAction',0,5,0
.L344:
	.byte	15,11,214,1,9,1,16
	.byte	'IfxHssl_StreamingMode_continuous',0,0,16
	.byte	'IfxHssl_StreamingMode_single',0,1,0,20,8,132,4,9,16,13
	.byte	'hssl',0
	.word	16149
	.byte	4,2,35,0,13
	.byte	'hsct',0
	.word	21051
	.byte	4,2,35,4,13
	.byte	'channelId',0
	.word	21056
	.byte	1,2,35,8,13
	.byte	'currentFrameRequest',0
	.word	21150
	.byte	1,2,35,9,13
	.byte	'streamingMode',0
	.word	21347
	.byte	1,2,35,10,13
	.byte	'loopBack',0
	.word	428
	.byte	1,2,35,11,13
	.byte	'streamingModeOn',0
	.word	428
	.byte	1,2,35,12,0
.L267:
	.byte	3
	.word	21420
.L328:
	.byte	8
	.byte	'IfxHssl_Hssl_getReadData',0,3,8,133,6,19
	.word	9549
	.byte	1,1
.L330:
	.byte	5
	.byte	'channel',0,8,133,6,66
	.word	21569
.L332:
	.byte	6,0,21
	.word	421
	.byte	22
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,23
	.word	21630
	.byte	0,14
	.word	405
	.byte	3
	.word	405
	.byte	24
	.byte	'__cmpswapw',0
	.word	21672
	.byte	1,1,1,1,25
	.byte	'p',0
	.word	21677
	.byte	25
	.byte	'value',0
	.word	405
	.byte	25
	.byte	'compare',0
	.word	405
	.byte	0,26
	.byte	'__nop',0,1,1,1,1,27
	.word	181
	.byte	28
	.word	207
	.byte	6,0,27
	.word	242
	.byte	28
	.word	274
	.byte	6,0,27
	.word	324
	.byte	28
	.word	343
	.byte	6,0,27
	.word	359
	.byte	28
	.word	374
	.byte	28
	.word	388
	.byte	6,0,29
	.byte	'IfxScuWdt_clearCpuEndinit',0,12,217,1,17,1,1,1,1,5
	.byte	'password',0,12,217,1,50
	.word	923
	.byte	0,29
	.byte	'IfxScuWdt_setCpuEndinit',0,12,239,1,17,1,1,1,1,5
	.byte	'password',0,12,239,1,48
	.word	923
	.byte	0,30
	.byte	'IfxScuWdt_getCpuWatchdogPassword',0,12,129,3,19
	.word	923
	.byte	1,1,1,1,27
	.word	784
	.byte	28
	.word	812
	.byte	6,0,27
	.word	827
	.byte	28
	.word	849
	.byte	6,0,27
	.word	945
	.byte	28
	.word	965
	.byte	28
	.word	978
	.byte	28
	.word	1000
	.byte	17,31
	.word	784
	.byte	28
	.word	812
	.byte	32
	.word	825
	.byte	0,6,0,0,29
	.byte	'IfxHssl_enableHsctModule',0,11,140,3,17,1,1,1,1,5
	.byte	'hsct',0,11,140,3,52
	.word	21051
	.byte	0,29
	.byte	'IfxHssl_enableHsslModule',0,11,244,4,17,1,1,1,1,5
	.byte	'hssl',0,11,244,4,52
	.word	16149
	.byte	0,27
	.word	8905
	.byte	28
	.word	8937
	.byte	28
	.word	8951
	.byte	28
	.word	8969
	.byte	6,0,27
	.word	9272
	.byte	28
	.word	9305
	.byte	28
	.word	9319
	.byte	28
	.word	9337
	.byte	28
	.word	9351
	.byte	6,0,27
	.word	9471
	.byte	28
	.word	9499
	.byte	28
	.word	9513
	.byte	28
	.word	9531
	.byte	6,0,15,6,95,9,1,16
	.byte	'IfxPort_Mode_inputNoPullDevice',0,0,16
	.byte	'IfxPort_Mode_inputPullDown',0,8,16
	.byte	'IfxPort_Mode_inputPullUp',0,16,16
	.byte	'IfxPort_Mode_outputPushPullGeneral',0,128,1,16
	.byte	'IfxPort_Mode_outputPushPullAlt1',0,136,1,16
	.byte	'IfxPort_Mode_outputPushPullAlt2',0,144,1,16
	.byte	'IfxPort_Mode_outputPushPullAlt3',0,152,1,16
	.byte	'IfxPort_Mode_outputPushPullAlt4',0,160,1,16
	.byte	'IfxPort_Mode_outputPushPullAlt5',0,168,1,16
	.byte	'IfxPort_Mode_outputPushPullAlt6',0,176,1,16
	.byte	'IfxPort_Mode_outputPushPullAlt7',0,184,1,16
	.byte	'IfxPort_Mode_outputOpenDrainGeneral',0,192,1,16
	.byte	'IfxPort_Mode_outputOpenDrainAlt1',0,200,1,16
	.byte	'IfxPort_Mode_outputOpenDrainAlt2',0,208,1,16
	.byte	'IfxPort_Mode_outputOpenDrainAlt3',0,216,1,16
	.byte	'IfxPort_Mode_outputOpenDrainAlt4',0,224,1,16
	.byte	'IfxPort_Mode_outputOpenDrainAlt5',0,232,1,16
	.byte	'IfxPort_Mode_outputOpenDrainAlt6',0,240,1,16
	.byte	'IfxPort_Mode_outputOpenDrainAlt7',0,248,1,0,29
	.byte	'IfxPort_setPinMode',0,6,247,2,17,1,1,1,1,5
	.byte	'port',0,6,247,2,43
	.word	8775
	.byte	5
	.byte	'pinIndex',0,6,247,2,55
	.word	428
	.byte	5
	.byte	'mode',0,6,247,2,78
	.word	22183
	.byte	0,15,6,144,1,9,1,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,16
	.byte	'IfxPort_PadDriver_lvdsSpeed1',0,4,16
	.byte	'IfxPort_PadDriver_lvdsSpeed2',0,5,16
	.byte	'IfxPort_PadDriver_lvdsSpeed3',0,6,16
	.byte	'IfxPort_PadDriver_lvdsSpeed4',0,7,16
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,16
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,16
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,16
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,0,29
	.byte	'IfxPort_setPinPadDriver',0,6,134,3,17,1,1,1,1,5
	.byte	'port',0,6,134,3,48
	.word	8775
	.byte	5
	.byte	'pinIndex',0,6,134,3,60
	.word	428
	.byte	5
	.byte	'padDriver',0,6,134,3,88
	.word	22927
	.byte	0,20,11,135,2,9,8,13
	.byte	'hsct',0
	.word	21051
	.byte	4,2,35,0,13
	.byte	'loopBack',0
	.word	428
	.byte	1,2,35,4,0
.L213:
	.byte	3
	.word	23427
	.byte	15,11,177,1,9,1,16
	.byte	'IfxHssl_InterfaceMode_master',0,0,16
	.byte	'IfxHssl_InterfaceMode_slave',0,1,0,20,11,143,2,9,8,13
	.byte	'hsct',0
	.word	21051
	.byte	4,2,35,0,13
	.byte	'interfaceMode',0
	.word	23471
	.byte	1,2,35,4,13
	.byte	'highSpeedMode',0
	.word	428
	.byte	1,2,35,5,13
	.byte	'loopBack',0
	.word	428
	.byte	1,2,35,6,0,21
	.word	23539
.L215:
	.byte	3
	.word	23624
.L252:
	.byte	3
	.word	23539
	.byte	20,8,234,3,9,2,11
	.byte	'notAcknowledgeError',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'transactionTagError',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'timeoutError',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'unexpectedError',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'memoryAccessViolation',0,1
	.word	428
	.byte	1,3,2,35,0,11
	.byte	'busAccessError',0,1
	.word	428
	.byte	1,2,2,35,0,11
	.byte	'channelNumberCodeError',0,1
	.word	428
	.byte	1,1,2,35,0,11
	.byte	'dataLengthError',0,1
	.word	428
	.byte	1,0,2,35,0,11
	.byte	'crcError',0,1
	.word	428
	.byte	1,7,2,35,1,0,20,8,251,3,9,8,13
	.byte	'hssl',0
	.word	16149
	.byte	4,2,35,0,13
	.byte	'errorFlags',0
	.word	23639
	.byte	2,2,35,4,13
	.byte	'loopBack',0
	.word	428
	.byte	1,2,35,6,0
.L256:
	.byte	3
	.word	23899
	.byte	20,8,224,3,9,8,13
	.byte	'start',0
	.word	9549
	.byte	4,2,35,0,13
	.byte	'end',0
	.word	9549
	.byte	4,2,35,4,0,20,8,156,4,9,40,13
	.byte	'hssl',0
	.word	16149
	.byte	4,2,35,0,13
	.byte	'accessWindow0',0
	.word	23963
	.byte	8,2,35,4,13
	.byte	'accessWindow1',0
	.word	23963
	.byte	8,2,35,12,13
	.byte	'accessWindow2',0
	.word	23963
	.byte	8,2,35,20,13
	.byte	'accessWindow3',0
	.word	23963
	.byte	8,2,35,28,13
	.byte	'preDivider',0
	.word	923
	.byte	2,2,35,36,0,21
	.word	23998
.L258:
	.byte	3
	.word	24131
.L263:
	.byte	3
	.word	23998
	.byte	20,8,145,4,9,12,13
	.byte	'hssl',0
	.word	16149
	.byte	4,2,35,0,13
	.byte	'hsct',0
	.word	21051
	.byte	4,2,35,4,13
	.byte	'channelId',0
	.word	21056
	.byte	1,2,35,8,13
	.byte	'streamingMode',0
	.word	21347
	.byte	1,2,35,9,13
	.byte	'loopBack',0
	.word	428
	.byte	1,2,35,10,0,21
	.word	24146
.L269:
	.byte	3
	.word	24241
.L272:
	.byte	3
	.word	24146
	.byte	27
	.word	21574
	.byte	28
	.word	21611
	.byte	6,0
.L276:
	.byte	15,8,207,3,9,1,16
	.byte	'IfxHssl_Hssl_Status_ok',0,0,16
	.byte	'IfxHssl_Hssl_Status_busy',0,1,16
	.byte	'IfxHssl_Hssl_Status_error',0,2,0
.L281:
	.byte	15,11,127,9,1,16
	.byte	'IfxHssl_DataLength_8bit',0,0,16
	.byte	'IfxHssl_DataLength_16bit',0,1,16
	.byte	'IfxHssl_DataLength_32bit',0,2,0,14
	.word	12581
.L296:
	.byte	3
	.word	24441
.L323:
	.byte	7
	.byte	'short int',0,2,5
.L338:
	.byte	3
	.word	9549
	.byte	14
	.word	13520
.L342:
	.byte	3
	.word	24469
	.byte	33
	.byte	'__wchar_t',0,13,1,1
	.word	24451
	.byte	33
	.byte	'__size_t',0,13,1,1
	.word	405
	.byte	33
	.byte	'__ptrdiff_t',0,13,1,1
	.word	421
	.byte	34,1,3
	.word	24534
	.byte	33
	.byte	'__codeptr',0,13,1,1
	.word	24536
	.byte	33
	.byte	'boolean',0,14,101,29
	.word	428
	.byte	33
	.byte	'uint8',0,14,105,29
	.word	428
	.byte	33
	.byte	'uint16',0,14,109,29
	.word	923
	.byte	33
	.byte	'uint32',0,14,113,29
	.word	9549
	.byte	33
	.byte	'uint64',0,14,118,29
	.word	287
	.byte	33
	.byte	'sint16',0,14,126,29
	.word	24451
	.byte	7
	.byte	'long int',0,4,5,33
	.byte	'sint32',0,14,131,1,29
	.word	24649
	.byte	7
	.byte	'long long int',0,8,5,33
	.byte	'sint64',0,14,138,1,29
	.word	24677
	.byte	33
	.byte	'float32',0,14,167,1,29
	.word	233
	.byte	33
	.byte	'pvoid',0,15,57,28
	.word	319
	.byte	33
	.byte	'Ifx_TickTime',0,15,79,28
	.word	24677
	.byte	33
	.byte	'Ifx_SizeT',0,15,92,16
	.word	24451
	.byte	33
	.byte	'Ifx_Priority',0,15,103,16
	.word	923
	.byte	33
	.byte	'Ifx_HSSL_ACCEN0_Bits',0,9,79,3
	.word	15075
	.byte	33
	.byte	'Ifx_HSSL_ACCEN1_Bits',0,9,85,3
	.word	14985
	.byte	33
	.byte	'Ifx_HSSL_AR_Bits',0,9,97,3
	.word	14252
	.byte	33
	.byte	'Ifx_HSSL_AW_AWEND_Bits',0,9,104,3
	.word	14079
	.byte	33
	.byte	'Ifx_HSSL_AW_AWSTART_Bits',0,9,111,3
	.word	13970
	.byte	33
	.byte	'Ifx_HSSL_CFG_Bits',0,9,123,3
	.word	9973
	.byte	33
	.byte	'Ifx_HSSL_CLC_Bits',0,9,133,1,3
	.word	9570
	.byte	33
	.byte	'Ifx_HSSL_CRC_Bits',0,9,141,1,3
	.word	9850
	.byte	33
	.byte	'Ifx_HSSL_I_ICON_Bits',0,9,156,1,3
	.word	12181
	.byte	33
	.byte	'Ifx_HSSL_I_IRD_Bits',0,9,162,1,3
	.word	12497
	.byte	33
	.byte	'Ifx_HSSL_I_IRWA_Bits',0,9,168,1,3
	.word	12409
	.byte	33
	.byte	'Ifx_HSSL_I_IWD_Bits',0,9,174,1,3
	.word	12097
	.byte	33
	.byte	'Ifx_HSSL_ID_Bits',0,9,182,1,3
	.word	9727
	.byte	33
	.byte	'Ifx_HSSL_IS_CA_Bits',0,9,189,1,3
	.word	13306
	.byte	33
	.byte	'Ifx_HSSL_IS_FC_Bits',0,9,196,1,3
	.word	13412
	.byte	33
	.byte	'Ifx_HSSL_ISSA_Bits',0,9,203,1,3
	.word	13191
	.byte	33
	.byte	'Ifx_HSSL_KRST0_Bits',0,9,211,1,3
	.word	14861
	.byte	33
	.byte	'Ifx_HSSL_KRST1_Bits',0,9,218,1,3
	.word	14756
	.byte	33
	.byte	'Ifx_HSSL_KRSTCLR_Bits',0,9,225,1,3
	.word	14649
	.byte	33
	.byte	'Ifx_HSSL_MFLAGS_Bits',0,9,248,1,3
	.word	10428
	.byte	33
	.byte	'Ifx_HSSL_MFLAGSCL_Bits',0,9,143,2,3
	.word	11196
	.byte	33
	.byte	'Ifx_HSSL_MFLAGSEN_Bits',0,9,161,2,3
	.word	11592
	.byte	33
	.byte	'Ifx_HSSL_MFLAGSSET_Bits',0,9,184,2,3
	.word	10799
	.byte	33
	.byte	'Ifx_HSSL_OCS_Bits',0,9,197,2,3
	.word	14442
	.byte	33
	.byte	'Ifx_HSSL_QFLAGS_Bits',0,9,215,2,3
	.word	10162
	.byte	33
	.byte	'Ifx_HSSL_SFSFLAGS_Bits',0,9,226,2,3
	.word	11918
	.byte	33
	.byte	'Ifx_HSSL_T_TCA_Bits',0,9,232,2,3
	.word	12749
	.byte	33
	.byte	'Ifx_HSSL_T_TCD_Bits',0,9,238,2,3
	.word	12668
	.byte	33
	.byte	'Ifx_HSSL_TIDADD_Bits',0,9,244,2,3
	.word	13109
	.byte	33
	.byte	'Ifx_HSSL_TS_CA_Bits',0,9,251,2,3
	.word	13695
	.byte	33
	.byte	'Ifx_HSSL_TS_FC_Bits',0,9,130,3,3
	.word	13801
	.byte	33
	.byte	'Ifx_HSSL_TSSA_Bits',0,9,137,3,3
	.word	13581
	.byte	33
	.byte	'Ifx_HSSL_TSTAT_Bits',0,9,150,3,3
	.word	12889
	.byte	33
	.byte	'Ifx_HSSL_ACCEN0',0,9,163,3,3
	.word	15605
	.byte	33
	.byte	'Ifx_HSSL_ACCEN1',0,9,171,3,3
	.word	15035
	.byte	33
	.byte	'Ifx_HSSL_AR',0,9,179,3,3
	.word	14402
	.byte	33
	.byte	'Ifx_HSSL_AW_AWEND',0,9,187,3,3
	.word	14146
	.byte	33
	.byte	'Ifx_HSSL_AW_AWSTART',0,9,195,3,3
	.word	14039
	.byte	33
	.byte	'Ifx_HSSL_CFG',0,9,203,3,3
	.word	10122
	.byte	33
	.byte	'Ifx_HSSL_CLC',0,9,211,3,3
	.word	9687
	.byte	33
	.byte	'Ifx_HSSL_CRC',0,9,219,3,3
	.word	9933
	.byte	33
	.byte	'Ifx_HSSL_I_ICON',0,9,227,3,3
	.word	12369
	.byte	33
	.byte	'Ifx_HSSL_I_IRD',0,9,235,3,3
	.word	12541
	.byte	33
	.byte	'Ifx_HSSL_I_IRWA',0,9,243,3,3
	.word	12457
	.byte	33
	.byte	'Ifx_HSSL_I_IWD',0,9,251,3,3
	.word	12141
	.byte	33
	.byte	'Ifx_HSSL_ID',0,9,131,4,3
	.word	9810
	.byte	33
	.byte	'Ifx_HSSL_IS_CA',0,9,139,4,3
	.word	13372
	.byte	33
	.byte	'Ifx_HSSL_IS_FC',0,9,147,4,3
	.word	13480
	.byte	33
	.byte	'Ifx_HSSL_ISSA',0,9,155,4,3
	.word	13257
	.byte	33
	.byte	'Ifx_HSSL_KRST0',0,9,163,4,3
	.word	14945
	.byte	33
	.byte	'Ifx_HSSL_KRST1',0,9,171,4,3
	.word	14821
	.byte	33
	.byte	'Ifx_HSSL_KRSTCLR',0,9,179,4,3
	.word	14716
	.byte	33
	.byte	'Ifx_HSSL_MFLAGS',0,9,187,4,3
	.word	10759
	.byte	33
	.byte	'Ifx_HSSL_MFLAGSCL',0,9,195,4,3
	.word	11552
	.byte	33
	.byte	'Ifx_HSSL_MFLAGSEN',0,9,203,4,3
	.word	11878
	.byte	33
	.byte	'Ifx_HSSL_MFLAGSSET',0,9,211,4,3
	.word	11156
	.byte	33
	.byte	'Ifx_HSSL_OCS',0,9,219,4,3
	.word	14609
	.byte	33
	.byte	'Ifx_HSSL_QFLAGS',0,9,227,4,3
	.word	10388
	.byte	33
	.byte	'Ifx_HSSL_SFSFLAGS',0,9,235,4,3
	.word	12057
	.byte	33
	.byte	'Ifx_HSSL_T_TCA',0,9,243,4,3
	.word	12790
	.byte	33
	.byte	'Ifx_HSSL_T_TCD',0,9,251,4,3
	.word	12709
	.byte	33
	.byte	'Ifx_HSSL_TIDADD',0,9,131,5,3
	.word	13151
	.byte	33
	.byte	'Ifx_HSSL_TS_CA',0,9,139,5,3
	.word	13761
	.byte	33
	.byte	'Ifx_HSSL_TS_FC',0,9,147,5,3
	.word	13869
	.byte	33
	.byte	'Ifx_HSSL_TSSA',0,9,155,5,3
	.word	13646
	.byte	33
	.byte	'Ifx_HSSL_TSTAT',0,9,163,5,3
	.word	13069
	.byte	14
	.word	14186
	.byte	33
	.byte	'Ifx_HSSL_AW',0,9,178,5,3
	.word	26572
	.byte	14
	.word	12581
	.byte	33
	.byte	'Ifx_HSSL_I',0,9,187,5,3
	.word	26598
	.byte	14
	.word	13520
	.byte	33
	.byte	'Ifx_HSSL_IS',0,9,195,5,3
	.word	26623
	.byte	14
	.word	12830
	.byte	33
	.byte	'Ifx_HSSL_T',0,9,202,5,3
	.word	26649
	.byte	14
	.word	13909
	.byte	33
	.byte	'Ifx_HSSL_TS',0,9,210,5,3
	.word	26674
	.byte	14
	.word	15656
	.byte	33
	.byte	'Ifx_HSSL',0,9,254,5,3
	.word	26700
	.byte	33
	.byte	'Ifx_HSCT_ACCEN0_Bits',0,10,79,3
	.word	19981
	.byte	33
	.byte	'Ifx_HSCT_ACCEN1_Bits',0,10,85,3
	.word	19891
	.byte	33
	.byte	'Ifx_HSCT_CLC_Bits',0,10,95,3
	.word	16154
	.byte	33
	.byte	'Ifx_HSCT_CONFIGPHY_Bits',0,10,112,3
	.word	17763
	.byte	33
	.byte	'Ifx_HSCT_CTSCTRL_Bits',0,10,122,3
	.word	17030
	.byte	33
	.byte	'Ifx_HSCT_DISABLE_Bits',0,10,131,1,3
	.word	17204
	.byte	33
	.byte	'Ifx_HSCT_ID_Bits',0,10,139,1,3
	.word	16311
	.byte	33
	.byte	'Ifx_HSCT_IFCTRL_Bits',0,10,151,1,3
	.word	16692
	.byte	33
	.byte	'Ifx_HSCT_IFSTAT_Bits',0,10,159,1,3
	.word	17634
	.byte	33
	.byte	'Ifx_HSCT_INIT_Bits',0,10,174,1,3
	.word	16434
	.byte	33
	.byte	'Ifx_HSCT_IRQ_Bits',0,10,193,1,3
	.word	18207
	.byte	33
	.byte	'Ifx_HSCT_IRQCLR_Bits',0,10,212,1,3
	.word	18831
	.byte	33
	.byte	'Ifx_HSCT_IRQEN_Bits',0,10,231,1,3
	.word	18506
	.byte	33
	.byte	'Ifx_HSCT_KRST0_Bits',0,10,239,1,3
	.word	19767
	.byte	33
	.byte	'Ifx_HSCT_KRST1_Bits',0,10,246,1,3
	.word	19662
	.byte	33
	.byte	'Ifx_HSCT_KRSTCLR_Bits',0,10,253,1,3
	.word	19555
	.byte	33
	.byte	'Ifx_HSCT_OCS_Bits',0,10,138,2,3
	.word	19348
	.byte	33
	.byte	'Ifx_HSCT_SLEEPCTRL_Bits',0,10,146,2,3
	.word	16900
	.byte	33
	.byte	'Ifx_HSCT_STAT_Bits',0,10,161,2,3
	.word	17350
	.byte	33
	.byte	'Ifx_HSCT_STATPHY_Bits',0,10,170,2,3
	.word	18064
	.byte	33
	.byte	'Ifx_HSCT_USMR_Bits',0,10,176,2,3
	.word	19169
	.byte	33
	.byte	'Ifx_HSCT_USMS_Bits',0,10,182,2,3
	.word	19252
	.byte	33
	.byte	'Ifx_HSCT_ACCEN0',0,10,195,2,3
	.word	20511
	.byte	33
	.byte	'Ifx_HSCT_ACCEN1',0,10,203,2,3
	.word	19941
	.byte	33
	.byte	'Ifx_HSCT_CLC',0,10,211,2,3
	.word	16271
	.byte	33
	.byte	'Ifx_HSCT_CONFIGPHY',0,10,219,2,3
	.word	18024
	.byte	33
	.byte	'Ifx_HSCT_CTSCTRL',0,10,227,2,3
	.word	17164
	.byte	33
	.byte	'Ifx_HSCT_DISABLE',0,10,235,2,3
	.word	17310
	.byte	33
	.byte	'Ifx_HSCT_ID',0,10,243,2,3
	.word	16394
	.byte	33
	.byte	'Ifx_HSCT_IFCTRL',0,10,251,2,3
	.word	16860
	.byte	33
	.byte	'Ifx_HSCT_IFSTAT',0,10,131,3,3
	.word	17723
	.byte	33
	.byte	'Ifx_HSCT_INIT',0,10,139,3,3
	.word	16652
	.byte	33
	.byte	'Ifx_HSCT_IRQ',0,10,147,3,3
	.word	18466
	.byte	33
	.byte	'Ifx_HSCT_IRQCLR',0,10,155,3,3
	.word	19129
	.byte	33
	.byte	'Ifx_HSCT_IRQEN',0,10,163,3,3
	.word	18791
	.byte	33
	.byte	'Ifx_HSCT_KRST0',0,10,171,3,3
	.word	19851
	.byte	33
	.byte	'Ifx_HSCT_KRST1',0,10,179,3,3
	.word	19727
	.byte	33
	.byte	'Ifx_HSCT_KRSTCLR',0,10,187,3,3
	.word	19622
	.byte	33
	.byte	'Ifx_HSCT_OCS',0,10,195,3,3
	.word	19515
	.byte	33
	.byte	'Ifx_HSCT_SLEEPCTRL',0,10,203,3,3
	.word	16990
	.byte	33
	.byte	'Ifx_HSCT_STAT',0,10,211,3,3
	.word	17594
	.byte	33
	.byte	'Ifx_HSCT_STATPHY',0,10,219,3,3
	.word	18167
	.byte	33
	.byte	'Ifx_HSCT_USMR',0,10,227,3,3
	.word	19212
	.byte	33
	.byte	'Ifx_HSCT_USMS',0,10,235,3,3
	.word	19295
	.byte	14
	.word	20551
	.byte	33
	.byte	'Ifx_HSCT',0,10,148,4,3
	.word	27900
	.byte	15,16,254,10,9,1,16
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,16
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,16
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,33
	.byte	'IfxScu_WDTCON1_IR',0,16,131,11,3
	.word	27923
	.byte	10
	.byte	'_Ifx_SCU_ACCEN0_Bits',0,17,45,16,4,11
	.byte	'EN0',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	428
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	428
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	428
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	428
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	428
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	428
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	428
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	428
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	428
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	428
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	428
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	428
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	428
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	428
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	428
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	428
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	428
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	428
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	428
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	428
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	428
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	428
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	428
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	428
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	428
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	428
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	428
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	428
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_ACCEN0_Bits',0,17,79,3
	.word	28045
	.byte	10
	.byte	'_Ifx_SCU_ACCEN1_Bits',0,17,82,16,4,11
	.byte	'reserved_0',0,4
	.word	405
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_SCU_ACCEN1_Bits',0,17,85,3
	.word	28602
	.byte	10
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,17,88,16,4,11
	.byte	'STM0DIS',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'STM1DIS',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'STM2DIS',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	405
	.byte	29,0,2,35,0,0,33
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,17,94,3
	.word	28679
	.byte	10
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,17,97,16,4,11
	.byte	'BAUD1DIV',0,1
	.word	428
	.byte	4,4,2,35,0,11
	.byte	'BAUD2DIV',0,1
	.word	428
	.byte	4,0,2,35,0,11
	.byte	'SRIDIV',0,1
	.word	428
	.byte	4,4,2,35,1,11
	.byte	'LPDIV',0,1
	.word	428
	.byte	4,0,2,35,1,11
	.byte	'SPBDIV',0,1
	.word	428
	.byte	4,4,2,35,2,11
	.byte	'FSI2DIV',0,1
	.word	428
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	428
	.byte	2,0,2,35,2,11
	.byte	'FSIDIV',0,1
	.word	428
	.byte	2,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	428
	.byte	2,4,2,35,3,11
	.byte	'CLKSEL',0,1
	.word	428
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	428
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	428
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_CCUCON0_Bits',0,17,111,3
	.word	28815
	.byte	10
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,17,114,16,4,11
	.byte	'CANDIV',0,1
	.word	428
	.byte	4,4,2,35,0,11
	.byte	'ERAYDIV',0,1
	.word	428
	.byte	4,0,2,35,0,11
	.byte	'STMDIV',0,1
	.word	428
	.byte	4,4,2,35,1,11
	.byte	'GTMDIV',0,1
	.word	428
	.byte	4,0,2,35,1,11
	.byte	'ETHDIV',0,1
	.word	428
	.byte	4,4,2,35,2,11
	.byte	'ASCLINFDIV',0,1
	.word	428
	.byte	4,0,2,35,2,11
	.byte	'ASCLINSDIV',0,1
	.word	428
	.byte	4,4,2,35,3,11
	.byte	'INSEL',0,1
	.word	428
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	428
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	428
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_CCUCON1_Bits',0,17,126,3
	.word	29095
	.byte	10
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,17,129,1,16,4,11
	.byte	'BBBDIV',0,1
	.word	428
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	405
	.byte	26,2,2,35,0,11
	.byte	'UP',0,1
	.word	428
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	428
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_CCUCON2_Bits',0,17,135,1,3
	.word	29333
	.byte	10
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,17,138,1,16,4,11
	.byte	'PLLDIV',0,1
	.word	428
	.byte	6,2,2,35,0,11
	.byte	'PLLSEL',0,1
	.word	428
	.byte	2,0,2,35,0,11
	.byte	'PLLERAYDIV',0,1
	.word	428
	.byte	6,2,2,35,1,11
	.byte	'PLLERAYSEL',0,1
	.word	428
	.byte	2,0,2,35,1,11
	.byte	'SRIDIV',0,1
	.word	428
	.byte	6,2,2,35,2,11
	.byte	'SRISEL',0,1
	.word	428
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	428
	.byte	5,3,2,35,3,11
	.byte	'SLCK',0,1
	.word	428
	.byte	1,2,2,35,3,11
	.byte	'UP',0,1
	.word	428
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	428
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_CCUCON3_Bits',0,17,150,1,3
	.word	29461
	.byte	10
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,17,153,1,16,4,11
	.byte	'SPBDIV',0,1
	.word	428
	.byte	6,2,2,35,0,11
	.byte	'SPBSEL',0,1
	.word	428
	.byte	2,0,2,35,0,11
	.byte	'GTMDIV',0,1
	.word	428
	.byte	6,2,2,35,1,11
	.byte	'GTMSEL',0,1
	.word	428
	.byte	2,0,2,35,1,11
	.byte	'STMDIV',0,1
	.word	428
	.byte	6,2,2,35,2,11
	.byte	'STMSEL',0,1
	.word	428
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	428
	.byte	5,3,2,35,3,11
	.byte	'SLCK',0,1
	.word	428
	.byte	1,2,2,35,3,11
	.byte	'UP',0,1
	.word	428
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	428
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_CCUCON4_Bits',0,17,165,1,3
	.word	29704
	.byte	10
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,17,168,1,16,4,11
	.byte	'MAXDIV',0,1
	.word	428
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	405
	.byte	26,2,2,35,0,11
	.byte	'UP',0,1
	.word	428
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	428
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_CCUCON5_Bits',0,17,174,1,3
	.word	29939
	.byte	10
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,17,177,1,16,4,11
	.byte	'CPU0DIV',0,1
	.word	428
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	405
	.byte	26,0,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON6_Bits',0,17,181,1,3
	.word	30067
	.byte	10
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,17,184,1,16,4,11
	.byte	'CPU1DIV',0,1
	.word	428
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	405
	.byte	26,0,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON7_Bits',0,17,188,1,3
	.word	30167
	.byte	10
	.byte	'_Ifx_SCU_CHIPID_Bits',0,17,191,1,16,4,11
	.byte	'CHREV',0,1
	.word	428
	.byte	6,2,2,35,0,11
	.byte	'CHTEC',0,1
	.word	428
	.byte	2,0,2,35,0,11
	.byte	'CHID',0,1
	.word	428
	.byte	8,0,2,35,1,11
	.byte	'EEA',0,1
	.word	428
	.byte	1,7,2,35,2,11
	.byte	'UCODE',0,1
	.word	428
	.byte	7,0,2,35,2,11
	.byte	'FSIZE',0,1
	.word	428
	.byte	4,4,2,35,3,11
	.byte	'SP',0,1
	.word	428
	.byte	2,2,2,35,3,11
	.byte	'SEC',0,1
	.word	428
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	428
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_CHIPID_Bits',0,17,202,1,3
	.word	30267
	.byte	10
	.byte	'_Ifx_SCU_DTSCON_Bits',0,17,205,1,16,4,11
	.byte	'PWD',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'START',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	428
	.byte	2,4,2,35,0,11
	.byte	'CAL',0,4
	.word	405
	.byte	20,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	428
	.byte	7,1,2,35,3,11
	.byte	'SLCK',0,1
	.word	428
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_DTSCON_Bits',0,17,213,1,3
	.word	30475
	.byte	10
	.byte	'_Ifx_SCU_DTSLIM_Bits',0,17,216,1,16,4,11
	.byte	'LOWER',0,2
	.word	923
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	428
	.byte	5,1,2,35,1,11
	.byte	'LLU',0,1
	.word	428
	.byte	1,0,2,35,1,11
	.byte	'UPPER',0,2
	.word	923
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	428
	.byte	4,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	428
	.byte	1,1,2,35,3,11
	.byte	'UOF',0,1
	.word	428
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_DTSLIM_Bits',0,17,225,1,3
	.word	30640
	.byte	10
	.byte	'_Ifx_SCU_DTSSTAT_Bits',0,17,228,1,16,4,11
	.byte	'RESULT',0,2
	.word	923
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	428
	.byte	4,2,2,35,1,11
	.byte	'RDY',0,1
	.word	428
	.byte	1,1,2,35,1,11
	.byte	'BUSY',0,1
	.word	428
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	923
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_DTSSTAT_Bits',0,17,235,1,3
	.word	30823
	.byte	10
	.byte	'_Ifx_SCU_EICR_Bits',0,17,238,1,16,4,11
	.byte	'reserved_0',0,1
	.word	428
	.byte	4,4,2,35,0,11
	.byte	'EXIS0',0,1
	.word	428
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	428
	.byte	1,0,2,35,0,11
	.byte	'FEN0',0,1
	.word	428
	.byte	1,7,2,35,1,11
	.byte	'REN0',0,1
	.word	428
	.byte	1,6,2,35,1,11
	.byte	'LDEN0',0,1
	.word	428
	.byte	1,5,2,35,1,11
	.byte	'EIEN0',0,1
	.word	428
	.byte	1,4,2,35,1,11
	.byte	'INP0',0,1
	.word	428
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	405
	.byte	5,12,2,35,0,11
	.byte	'EXIS1',0,1
	.word	428
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	428
	.byte	1,0,2,35,2,11
	.byte	'FEN1',0,1
	.word	428
	.byte	1,7,2,35,3,11
	.byte	'REN1',0,1
	.word	428
	.byte	1,6,2,35,3,11
	.byte	'LDEN1',0,1
	.word	428
	.byte	1,5,2,35,3,11
	.byte	'EIEN1',0,1
	.word	428
	.byte	1,4,2,35,3,11
	.byte	'INP1',0,1
	.word	428
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	428
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EICR_Bits',0,17,129,2,3
	.word	30977
	.byte	10
	.byte	'_Ifx_SCU_EIFR_Bits',0,17,132,2,16,4,11
	.byte	'INTF0',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'INTF1',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'INTF2',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'INTF3',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'INTF4',0,1
	.word	428
	.byte	1,3,2,35,0,11
	.byte	'INTF5',0,1
	.word	428
	.byte	1,2,2,35,0,11
	.byte	'INTF6',0,1
	.word	428
	.byte	1,1,2,35,0,11
	.byte	'INTF7',0,1
	.word	428
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	405
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_SCU_EIFR_Bits',0,17,143,2,3
	.word	31341
	.byte	10
	.byte	'_Ifx_SCU_EMSR_Bits',0,17,146,2,16,4,11
	.byte	'POL',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'MODE',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'ENON',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'PSEL',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	923
	.byte	12,0,2,35,0,11
	.byte	'EMSF',0,1
	.word	428
	.byte	1,7,2,35,2,11
	.byte	'SEMSF',0,1
	.word	428
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	428
	.byte	6,0,2,35,2,11
	.byte	'EMSFM',0,1
	.word	428
	.byte	2,6,2,35,3,11
	.byte	'SEMSFM',0,1
	.word	428
	.byte	2,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	428
	.byte	4,0,2,35,3,0,33
	.byte	'Ifx_SCU_EMSR_Bits',0,17,159,2,3
	.word	31552
	.byte	10
	.byte	'_Ifx_SCU_ESRCFG_Bits',0,17,162,2,16,4,11
	.byte	'reserved_0',0,1
	.word	428
	.byte	7,1,2,35,0,11
	.byte	'EDCON',0,2
	.word	923
	.byte	2,7,2,35,0,11
	.byte	'reserved_9',0,4
	.word	405
	.byte	23,0,2,35,0,0,33
	.byte	'Ifx_SCU_ESRCFG_Bits',0,17,167,2,3
	.word	31804
	.byte	10
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,17,170,2,16,4,11
	.byte	'ARI',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'ARC',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	405
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_SCU_ESROCFG_Bits',0,17,175,2,3
	.word	31922
	.byte	10
	.byte	'_Ifx_SCU_EVR13CON_Bits',0,17,178,2,16,4,11
	.byte	'reserved_0',0,4
	.word	405
	.byte	28,4,2,35,0,11
	.byte	'EVR13OFF',0,1
	.word	428
	.byte	1,3,2,35,3,11
	.byte	'BPEVR13OFF',0,1
	.word	428
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	428
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	428
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVR13CON_Bits',0,17,185,2,3
	.word	32033
	.byte	10
	.byte	'_Ifx_SCU_EVR33CON_Bits',0,17,188,2,16,4,11
	.byte	'reserved_0',0,4
	.word	405
	.byte	28,4,2,35,0,11
	.byte	'EVR33OFF',0,1
	.word	428
	.byte	1,3,2,35,3,11
	.byte	'BPEVR33OFF',0,1
	.word	428
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	428
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	428
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVR33CON_Bits',0,17,195,2,3
	.word	32196
	.byte	10
	.byte	'_Ifx_SCU_EVRADCSTAT_Bits',0,17,198,2,16,4,11
	.byte	'ADC13V',0,1
	.word	428
	.byte	8,0,2,35,0,11
	.byte	'ADC33V',0,1
	.word	428
	.byte	8,0,2,35,1,11
	.byte	'ADCSWDV',0,1
	.word	428
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	428
	.byte	7,1,2,35,3,11
	.byte	'VAL',0,1
	.word	428
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRADCSTAT_Bits',0,17,205,2,3
	.word	32359
	.byte	10
	.byte	'_Ifx_SCU_EVRDVSTAT_Bits',0,17,208,2,16,4,11
	.byte	'DVS13TRIM',0,1
	.word	428
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	428
	.byte	8,0,2,35,1,11
	.byte	'DVS33TRIM',0,1
	.word	428
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	428
	.byte	7,1,2,35,3,11
	.byte	'VAL',0,1
	.word	428
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRDVSTAT_Bits',0,17,215,2,3
	.word	32517
	.byte	10
	.byte	'_Ifx_SCU_EVRMONCTRL_Bits',0,17,218,2,16,4,11
	.byte	'EVR13OVMOD',0,1
	.word	428
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	428
	.byte	2,4,2,35,0,11
	.byte	'EVR13UVMOD',0,1
	.word	428
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	428
	.byte	2,0,2,35,0,11
	.byte	'EVR33OVMOD',0,1
	.word	428
	.byte	2,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	428
	.byte	2,4,2,35,1,11
	.byte	'EVR33UVMOD',0,1
	.word	428
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	428
	.byte	2,0,2,35,1,11
	.byte	'SWDOVMOD',0,1
	.word	428
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	428
	.byte	2,4,2,35,2,11
	.byte	'SWDUVMOD',0,1
	.word	428
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	923
	.byte	10,0,2,35,2,0,33
	.byte	'Ifx_SCU_EVRMONCTRL_Bits',0,17,232,2,3
	.word	32682
	.byte	10
	.byte	'_Ifx_SCU_EVROSCCTRL_Bits',0,17,235,2,16,4,11
	.byte	'OSCTRIM',0,2
	.word	923
	.byte	10,6,2,35,0,11
	.byte	'OSCPTAT',0,1
	.word	428
	.byte	6,0,2,35,1,11
	.byte	'OSCANASEL',0,1
	.word	428
	.byte	4,4,2,35,2,11
	.byte	'HPBGTRIM',0,2
	.word	923
	.byte	7,5,2,35,2,11
	.byte	'HPBGCLKEN',0,1
	.word	428
	.byte	1,4,2,35,3,11
	.byte	'OSC3V3',0,1
	.word	428
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	428
	.byte	2,1,2,35,3,11
	.byte	'LCK',0,1
	.word	428
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVROSCCTRL_Bits',0,17,245,2,3
	.word	33011
	.byte	10
	.byte	'_Ifx_SCU_EVROVMON_Bits',0,17,248,2,16,4,11
	.byte	'EVR13OVVAL',0,1
	.word	428
	.byte	8,0,2,35,0,11
	.byte	'EVR33OVVAL',0,1
	.word	428
	.byte	8,0,2,35,1,11
	.byte	'SWDOVVAL',0,1
	.word	428
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	428
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	428
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVROVMON_Bits',0,17,255,2,3
	.word	33232
	.byte	10
	.byte	'_Ifx_SCU_EVRRSTCON_Bits',0,17,130,3,16,4,11
	.byte	'RST13TRIM',0,1
	.word	428
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	405
	.byte	16,8,2,35,0,11
	.byte	'RST13OFF',0,1
	.word	428
	.byte	1,7,2,35,3,11
	.byte	'BPRST13OFF',0,1
	.word	428
	.byte	1,6,2,35,3,11
	.byte	'RST33OFF',0,1
	.word	428
	.byte	1,5,2,35,3,11
	.byte	'BPRST33OFF',0,1
	.word	428
	.byte	1,4,2,35,3,11
	.byte	'RSTSWDOFF',0,1
	.word	428
	.byte	1,3,2,35,3,11
	.byte	'BPRSTSWDOFF',0,1
	.word	428
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	428
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	428
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRRSTCON_Bits',0,17,142,3,3
	.word	33395
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF1_Bits',0,17,145,3,16,4,11
	.byte	'SD5P',0,1
	.word	428
	.byte	8,0,2,35,0,11
	.byte	'SD5I',0,1
	.word	428
	.byte	8,0,2,35,1,11
	.byte	'SD5D',0,1
	.word	428
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	428
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	428
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRSDCOEFF1_Bits',0,17,152,3,3
	.word	33667
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF2_Bits',0,17,155,3,16,4,11
	.byte	'SD33P',0,1
	.word	428
	.byte	8,0,2,35,0,11
	.byte	'SD33I',0,1
	.word	428
	.byte	8,0,2,35,1,11
	.byte	'SD33D',0,1
	.word	428
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	428
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	428
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRSDCOEFF2_Bits',0,17,162,3,3
	.word	33820
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF3_Bits',0,17,165,3,16,4,11
	.byte	'CT5REG0',0,1
	.word	428
	.byte	8,0,2,35,0,11
	.byte	'CT5REG1',0,1
	.word	428
	.byte	8,0,2,35,1,11
	.byte	'CT5REG2',0,1
	.word	428
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	428
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	428
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRSDCOEFF3_Bits',0,17,172,3,3
	.word	33976
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF4_Bits',0,17,175,3,16,4,11
	.byte	'CT5REG3',0,1
	.word	428
	.byte	8,0,2,35,0,11
	.byte	'CT5REG4',0,1
	.word	428
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	923
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	428
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRSDCOEFF4_Bits',0,17,181,3,3
	.word	34138
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF5_Bits',0,17,184,3,16,4,11
	.byte	'CT33REG0',0,1
	.word	428
	.byte	8,0,2,35,0,11
	.byte	'CT33REG1',0,1
	.word	428
	.byte	8,0,2,35,1,11
	.byte	'CT33REG2',0,1
	.word	428
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	428
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	428
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRSDCOEFF5_Bits',0,17,191,3,3
	.word	34281
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF6_Bits',0,17,194,3,16,4,11
	.byte	'CT33REG3',0,1
	.word	428
	.byte	8,0,2,35,0,11
	.byte	'CT33REG4',0,1
	.word	428
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	923
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	428
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRSDCOEFF6_Bits',0,17,200,3,3
	.word	34446
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL1_Bits',0,17,203,3,16,4,11
	.byte	'SDFREQSPRD',0,2
	.word	923
	.byte	16,0,2,35,0,11
	.byte	'SDFREQ',0,1
	.word	428
	.byte	8,0,2,35,2,11
	.byte	'SDSTEP',0,1
	.word	428
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	428
	.byte	2,2,2,35,3,11
	.byte	'SDSAMPLE',0,1
	.word	428
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	428
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRSDCTRL1_Bits',0,17,211,3,3
	.word	34591
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL2_Bits',0,17,214,3,16,4,11
	.byte	'DRVP',0,1
	.word	428
	.byte	8,0,2,35,0,11
	.byte	'SDMINMAXDC',0,1
	.word	428
	.byte	8,0,2,35,1,11
	.byte	'DRVN',0,1
	.word	428
	.byte	8,0,2,35,2,11
	.byte	'SDLUT',0,1
	.word	428
	.byte	6,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	428
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	428
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRSDCTRL2_Bits',0,17,222,3,3
	.word	34772
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL3_Bits',0,17,225,3,16,4,11
	.byte	'SDPWMPRE',0,1
	.word	428
	.byte	8,0,2,35,0,11
	.byte	'SDPID',0,1
	.word	428
	.byte	8,0,2,35,1,11
	.byte	'SDVOKLVL',0,1
	.word	428
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	428
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	428
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRSDCTRL3_Bits',0,17,232,3,3
	.word	34946
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL4_Bits',0,17,235,3,16,4,11
	.byte	'reserved_0',0,1
	.word	428
	.byte	8,0,2,35,0,11
	.byte	'SYNCDIV',0,1
	.word	428
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	405
	.byte	20,1,2,35,0,11
	.byte	'LCK',0,1
	.word	428
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRSDCTRL4_Bits',0,17,241,3,3
	.word	35106
	.byte	10
	.byte	'_Ifx_SCU_EVRSTAT_Bits',0,17,244,3,16,4,11
	.byte	'EVR13',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'OV13',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'EVR33',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'OV33',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'OVSWD',0,1
	.word	428
	.byte	1,3,2,35,0,11
	.byte	'UV13',0,1
	.word	428
	.byte	1,2,2,35,0,11
	.byte	'UV33',0,1
	.word	428
	.byte	1,1,2,35,0,11
	.byte	'UVSWD',0,1
	.word	428
	.byte	1,0,2,35,0,11
	.byte	'EXTPASS13',0,1
	.word	428
	.byte	1,7,2,35,1,11
	.byte	'EXTPASS33',0,1
	.word	428
	.byte	1,6,2,35,1,11
	.byte	'BGPROK',0,1
	.word	428
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	405
	.byte	21,0,2,35,0,0,33
	.byte	'Ifx_SCU_EVRSTAT_Bits',0,17,130,4,3
	.word	35250
	.byte	10
	.byte	'_Ifx_SCU_EVRTRIM_Bits',0,17,133,4,16,4,11
	.byte	'EVR13TRIM',0,1
	.word	428
	.byte	8,0,2,35,0,11
	.byte	'SDVOUTSEL',0,1
	.word	428
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	923
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	428
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRTRIM_Bits',0,17,139,4,3
	.word	35524
	.byte	10
	.byte	'_Ifx_SCU_EVRUVMON_Bits',0,17,142,4,16,4,11
	.byte	'EVR13UVVAL',0,1
	.word	428
	.byte	8,0,2,35,0,11
	.byte	'EVR33UVVAL',0,1
	.word	428
	.byte	8,0,2,35,1,11
	.byte	'SWDUVVAL',0,1
	.word	428
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	428
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	428
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRUVMON_Bits',0,17,149,4,3
	.word	35663
	.byte	10
	.byte	'_Ifx_SCU_EXTCON_Bits',0,17,152,4,16,4,11
	.byte	'EN0',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'SEL0',0,1
	.word	428
	.byte	4,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	923
	.byte	10,0,2,35,0,11
	.byte	'EN1',0,1
	.word	428
	.byte	1,7,2,35,2,11
	.byte	'NSEL',0,1
	.word	428
	.byte	1,6,2,35,2,11
	.byte	'SEL1',0,1
	.word	428
	.byte	4,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	428
	.byte	2,0,2,35,2,11
	.byte	'DIV1',0,1
	.word	428
	.byte	8,0,2,35,3,0,33
	.byte	'Ifx_SCU_EXTCON_Bits',0,17,163,4,3
	.word	35826
	.byte	10
	.byte	'_Ifx_SCU_FDR_Bits',0,17,166,4,16,4,11
	.byte	'STEP',0,2
	.word	923
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	428
	.byte	4,2,2,35,1,11
	.byte	'DM',0,1
	.word	428
	.byte	2,0,2,35,1,11
	.byte	'RESULT',0,2
	.word	923
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	428
	.byte	5,1,2,35,3,11
	.byte	'DISCLK',0,1
	.word	428
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_FDR_Bits',0,17,174,4,3
	.word	36044
	.byte	10
	.byte	'_Ifx_SCU_FMR_Bits',0,17,177,4,16,4,11
	.byte	'FS0',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'FS1',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'FS2',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'FS3',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'FS4',0,1
	.word	428
	.byte	1,3,2,35,0,11
	.byte	'FS5',0,1
	.word	428
	.byte	1,2,2,35,0,11
	.byte	'FS6',0,1
	.word	428
	.byte	1,1,2,35,0,11
	.byte	'FS7',0,1
	.word	428
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	428
	.byte	8,0,2,35,1,11
	.byte	'FC0',0,1
	.word	428
	.byte	1,7,2,35,2,11
	.byte	'FC1',0,1
	.word	428
	.byte	1,6,2,35,2,11
	.byte	'FC2',0,1
	.word	428
	.byte	1,5,2,35,2,11
	.byte	'FC3',0,1
	.word	428
	.byte	1,4,2,35,2,11
	.byte	'FC4',0,1
	.word	428
	.byte	1,3,2,35,2,11
	.byte	'FC5',0,1
	.word	428
	.byte	1,2,2,35,2,11
	.byte	'FC6',0,1
	.word	428
	.byte	1,1,2,35,2,11
	.byte	'FC7',0,1
	.word	428
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	428
	.byte	8,0,2,35,3,0,33
	.byte	'Ifx_SCU_FMR_Bits',0,17,197,4,3
	.word	36207
	.byte	10
	.byte	'_Ifx_SCU_ID_Bits',0,17,200,4,16,4,11
	.byte	'MODREV',0,1
	.word	428
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	428
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	923
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_ID_Bits',0,17,205,4,3
	.word	36543
	.byte	10
	.byte	'_Ifx_SCU_IGCR_Bits',0,17,208,4,16,4,11
	.byte	'IPEN00',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'IPEN01',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'IPEN02',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'IPEN03',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'IPEN04',0,1
	.word	428
	.byte	1,3,2,35,0,11
	.byte	'IPEN05',0,1
	.word	428
	.byte	1,2,2,35,0,11
	.byte	'IPEN06',0,1
	.word	428
	.byte	1,1,2,35,0,11
	.byte	'IPEN07',0,1
	.word	428
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	428
	.byte	5,3,2,35,1,11
	.byte	'GEEN0',0,1
	.word	428
	.byte	1,2,2,35,1,11
	.byte	'IGP0',0,1
	.word	428
	.byte	2,0,2,35,1,11
	.byte	'IPEN10',0,1
	.word	428
	.byte	1,7,2,35,2,11
	.byte	'IPEN11',0,1
	.word	428
	.byte	1,6,2,35,2,11
	.byte	'IPEN12',0,1
	.word	428
	.byte	1,5,2,35,2,11
	.byte	'IPEN13',0,1
	.word	428
	.byte	1,4,2,35,2,11
	.byte	'IPEN14',0,1
	.word	428
	.byte	1,3,2,35,2,11
	.byte	'IPEN15',0,1
	.word	428
	.byte	1,2,2,35,2,11
	.byte	'IPEN16',0,1
	.word	428
	.byte	1,1,2,35,2,11
	.byte	'IPEN17',0,1
	.word	428
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	428
	.byte	5,3,2,35,3,11
	.byte	'GEEN1',0,1
	.word	428
	.byte	1,2,2,35,3,11
	.byte	'IGP1',0,1
	.word	428
	.byte	2,0,2,35,3,0,33
	.byte	'Ifx_SCU_IGCR_Bits',0,17,232,4,3
	.word	36650
	.byte	10
	.byte	'_Ifx_SCU_IN_Bits',0,17,235,4,16,4,11
	.byte	'P0',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	405
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_SCU_IN_Bits',0,17,240,4,3
	.word	37102
	.byte	10
	.byte	'_Ifx_SCU_IOCR_Bits',0,17,243,4,16,4,11
	.byte	'reserved_0',0,1
	.word	428
	.byte	4,4,2,35,0,11
	.byte	'PC0',0,1
	.word	428
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	428
	.byte	4,4,2,35,1,11
	.byte	'PC1',0,1
	.word	428
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	923
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_IOCR_Bits',0,17,250,4,3
	.word	37201
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,17,253,4,16,4,11
	.byte	'LBISTREQ',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'LBISTREQP',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'PATTERNS',0,2
	.word	923
	.byte	14,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	923
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,17,131,5,3
	.word	37351
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,17,134,5,16,4,11
	.byte	'SEED',0,4
	.word	405
	.byte	23,9,2,35,0,11
	.byte	'reserved_23',0,1
	.word	428
	.byte	1,0,2,35,2,11
	.byte	'SPLITSH',0,1
	.word	428
	.byte	3,5,2,35,3,11
	.byte	'BODY',0,1
	.word	428
	.byte	1,4,2,35,3,11
	.byte	'LBISTFREQU',0,1
	.word	428
	.byte	4,0,2,35,3,0,33
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,17,141,5,3
	.word	37500
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,17,144,5,16,4,11
	.byte	'SIGNATURE',0,4
	.word	405
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	428
	.byte	7,1,2,35,3,11
	.byte	'LBISTDONE',0,1
	.word	428
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,17,149,5,3
	.word	37661
	.byte	10
	.byte	'_Ifx_SCU_LCLCON_Bits',0,17,152,5,16,4,11
	.byte	'reserved_0',0,2
	.word	923
	.byte	16,0,2,35,0,11
	.byte	'LS',0,1
	.word	428
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	923
	.byte	14,1,2,35,2,11
	.byte	'LSEN',0,1
	.word	428
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_LCLCON_Bits',0,17,158,5,3
	.word	37791
	.byte	10
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,17,161,5,16,4,11
	.byte	'LCLT0',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'LCLT1',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	405
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_SCU_LCLTEST_Bits',0,17,166,5,3
	.word	37923
	.byte	10
	.byte	'_Ifx_SCU_MANID_Bits',0,17,169,5,16,4,11
	.byte	'DEPT',0,1
	.word	428
	.byte	5,3,2,35,0,11
	.byte	'MANUF',0,2
	.word	923
	.byte	11,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	923
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_MANID_Bits',0,17,174,5,3
	.word	38038
	.byte	10
	.byte	'_Ifx_SCU_OMR_Bits',0,17,177,5,16,4,11
	.byte	'PS0',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	923
	.byte	14,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	428
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	428
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	923
	.byte	14,0,2,35,2,0,33
	.byte	'Ifx_SCU_OMR_Bits',0,17,185,5,3
	.word	38149
	.byte	10
	.byte	'_Ifx_SCU_OSCCON_Bits',0,17,188,5,16,4,11
	.byte	'reserved_0',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'PLLLV',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'OSCRES',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'GAINSEL',0,1
	.word	428
	.byte	2,3,2,35,0,11
	.byte	'MODE',0,1
	.word	428
	.byte	2,1,2,35,0,11
	.byte	'SHBY',0,1
	.word	428
	.byte	1,0,2,35,0,11
	.byte	'PLLHV',0,1
	.word	428
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	428
	.byte	1,6,2,35,1,11
	.byte	'X1D',0,1
	.word	428
	.byte	1,5,2,35,1,11
	.byte	'X1DEN',0,1
	.word	428
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	428
	.byte	4,0,2,35,1,11
	.byte	'OSCVAL',0,1
	.word	428
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	428
	.byte	2,1,2,35,2,11
	.byte	'APREN',0,1
	.word	428
	.byte	1,0,2,35,2,11
	.byte	'CAP0EN',0,1
	.word	428
	.byte	1,7,2,35,3,11
	.byte	'CAP1EN',0,1
	.word	428
	.byte	1,6,2,35,3,11
	.byte	'CAP2EN',0,1
	.word	428
	.byte	1,5,2,35,3,11
	.byte	'CAP3EN',0,1
	.word	428
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	428
	.byte	4,0,2,35,3,0,33
	.byte	'Ifx_SCU_OSCCON_Bits',0,17,209,5,3
	.word	38307
	.byte	10
	.byte	'_Ifx_SCU_OUT_Bits',0,17,212,5,16,4,11
	.byte	'P0',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	405
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_SCU_OUT_Bits',0,17,217,5,3
	.word	38719
	.byte	10
	.byte	'_Ifx_SCU_OVCCON_Bits',0,17,220,5,16,4,11
	.byte	'CSEL0',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'CSEL1',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'CSEL2',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	923
	.byte	13,0,2,35,0,11
	.byte	'OVSTRT',0,1
	.word	428
	.byte	1,7,2,35,2,11
	.byte	'OVSTP',0,1
	.word	428
	.byte	1,6,2,35,2,11
	.byte	'DCINVAL',0,1
	.word	428
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	428
	.byte	5,0,2,35,2,11
	.byte	'OVCONF',0,1
	.word	428
	.byte	1,7,2,35,3,11
	.byte	'POVCONF',0,1
	.word	428
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	428
	.byte	6,0,2,35,3,0,33
	.byte	'Ifx_SCU_OVCCON_Bits',0,17,233,5,3
	.word	38820
	.byte	10
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,17,236,5,16,4,11
	.byte	'OVEN0',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'OVEN1',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'OVEN2',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	405
	.byte	29,0,2,35,0,0,33
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,17,242,5,3
	.word	39087
	.byte	10
	.byte	'_Ifx_SCU_PDISC_Bits',0,17,245,5,16,4,11
	.byte	'PDIS0',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	405
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_SCU_PDISC_Bits',0,17,250,5,3
	.word	39223
	.byte	10
	.byte	'_Ifx_SCU_PDR_Bits',0,17,253,5,16,4,11
	.byte	'PD0',0,1
	.word	428
	.byte	3,5,2,35,0,11
	.byte	'PL0',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'PD1',0,1
	.word	428
	.byte	3,1,2,35,0,11
	.byte	'PL1',0,1
	.word	428
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	405
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_SCU_PDR_Bits',0,17,132,6,3
	.word	39334
	.byte	10
	.byte	'_Ifx_SCU_PDRR_Bits',0,17,135,6,16,4,11
	.byte	'PDR0',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'PDR1',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'PDR2',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'PDR3',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'PDR4',0,1
	.word	428
	.byte	1,3,2,35,0,11
	.byte	'PDR5',0,1
	.word	428
	.byte	1,2,2,35,0,11
	.byte	'PDR6',0,1
	.word	428
	.byte	1,1,2,35,0,11
	.byte	'PDR7',0,1
	.word	428
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	405
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_SCU_PDRR_Bits',0,17,146,6,3
	.word	39467
	.byte	10
	.byte	'_Ifx_SCU_PLLCON0_Bits',0,17,149,6,16,4,11
	.byte	'VCOBYP',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'VCOPWD',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'MODEN',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'SETFINDIS',0,1
	.word	428
	.byte	1,3,2,35,0,11
	.byte	'CLRFINDIS',0,1
	.word	428
	.byte	1,2,2,35,0,11
	.byte	'OSCDISCDIS',0,1
	.word	428
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	923
	.byte	2,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	428
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	428
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	428
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	428
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	428
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	428
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	428
	.byte	4,0,2,35,3,0,33
	.byte	'Ifx_SCU_PLLCON0_Bits',0,17,166,6,3
	.word	39670
	.byte	10
	.byte	'_Ifx_SCU_PLLCON1_Bits',0,17,169,6,16,4,11
	.byte	'K2DIV',0,1
	.word	428
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	428
	.byte	1,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	428
	.byte	7,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	428
	.byte	1,0,2,35,1,11
	.byte	'K1DIV',0,1
	.word	428
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	923
	.byte	9,0,2,35,2,0,33
	.byte	'Ifx_SCU_PLLCON1_Bits',0,17,177,6,3
	.word	40026
	.byte	10
	.byte	'_Ifx_SCU_PLLCON2_Bits',0,17,180,6,16,4,11
	.byte	'MODCFG',0,2
	.word	923
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	923
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_PLLCON2_Bits',0,17,184,6,3
	.word	40204
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYCON0_Bits',0,17,187,6,16,4,11
	.byte	'VCOBYP',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'VCOPWD',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	428
	.byte	2,4,2,35,0,11
	.byte	'SETFINDIS',0,1
	.word	428
	.byte	1,3,2,35,0,11
	.byte	'CLRFINDIS',0,1
	.word	428
	.byte	1,2,2,35,0,11
	.byte	'OSCDISCDIS',0,1
	.word	428
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	923
	.byte	2,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	428
	.byte	5,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	428
	.byte	2,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	428
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	428
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	428
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	428
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	428
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	428
	.byte	4,0,2,35,3,0,33
	.byte	'Ifx_SCU_PLLERAYCON0_Bits',0,17,204,6,3
	.word	40304
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYCON1_Bits',0,17,207,6,16,4,11
	.byte	'K2DIV',0,1
	.word	428
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	428
	.byte	1,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	428
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	428
	.byte	4,0,2,35,1,11
	.byte	'K1DIV',0,1
	.word	428
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	923
	.byte	9,0,2,35,2,0,33
	.byte	'Ifx_SCU_PLLERAYCON1_Bits',0,17,215,6,3
	.word	40674
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYSTAT_Bits',0,17,218,6,16,4,11
	.byte	'VCOBYST',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'VCOLOCK',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'FINDIS',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'K1RDY',0,1
	.word	428
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	428
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	405
	.byte	26,0,2,35,0,0,33
	.byte	'Ifx_SCU_PLLERAYSTAT_Bits',0,17,227,6,3
	.word	40860
	.byte	10
	.byte	'_Ifx_SCU_PLLSTAT_Bits',0,17,230,6,16,4,11
	.byte	'VCOBYST',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'VCOLOCK',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'FINDIS',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'K1RDY',0,1
	.word	428
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	428
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	428
	.byte	1,1,2,35,0,11
	.byte	'MODRUN',0,1
	.word	428
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	405
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_SCU_PLLSTAT_Bits',0,17,241,6,3
	.word	41058
	.byte	10
	.byte	'_Ifx_SCU_PMCSR_Bits',0,17,244,6,16,4,11
	.byte	'REQSLP',0,1
	.word	428
	.byte	2,6,2,35,0,11
	.byte	'SMUSLP',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	428
	.byte	5,0,2,35,0,11
	.byte	'PMST',0,1
	.word	428
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	405
	.byte	21,0,2,35,0,0,33
	.byte	'Ifx_SCU_PMCSR_Bits',0,17,251,6,3
	.word	41291
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR0_Bits',0,17,254,6,16,4,11
	.byte	'reserved_0',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'ESR1WKEN',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'PINAWKEN',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'PINBWKEN',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'ESR0DFEN',0,1
	.word	428
	.byte	1,3,2,35,0,11
	.byte	'ESR0EDCON',0,1
	.word	428
	.byte	2,1,2,35,0,11
	.byte	'ESR1DFEN',0,1
	.word	428
	.byte	1,0,2,35,0,11
	.byte	'ESR1EDCON',0,1
	.word	428
	.byte	2,6,2,35,1,11
	.byte	'PINADFEN',0,1
	.word	428
	.byte	1,5,2,35,1,11
	.byte	'PINAEDCON',0,1
	.word	428
	.byte	2,3,2,35,1,11
	.byte	'PINBDFEN',0,1
	.word	428
	.byte	1,2,2,35,1,11
	.byte	'PINBEDCON',0,1
	.word	428
	.byte	2,0,2,35,1,11
	.byte	'SCREN',0,1
	.word	428
	.byte	1,7,2,35,2,11
	.byte	'STBYRAMSEL',0,1
	.word	428
	.byte	2,5,2,35,2,11
	.byte	'SCRCLKSEL',0,1
	.word	428
	.byte	1,4,2,35,2,11
	.byte	'SCRWKEN',0,1
	.word	428
	.byte	1,3,2,35,2,11
	.byte	'TRISTEN',0,1
	.word	428
	.byte	1,2,2,35,2,11
	.byte	'TRISTREQ',0,1
	.word	428
	.byte	1,1,2,35,2,11
	.byte	'PORSTDF',0,1
	.word	428
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	428
	.byte	1,7,2,35,3,11
	.byte	'DCDCSYNC',0,1
	.word	428
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	428
	.byte	3,3,2,35,3,11
	.byte	'ESR0TRIST',0,1
	.word	428
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	428
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	428
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_PMSWCR0_Bits',0,17,153,7,3
	.word	41443
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,17,156,7,16,4,11
	.byte	'SCRSTEN',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'SCRSTREQ',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	428
	.byte	6,0,2,35,0,11
	.byte	'CPUIDLSEL',0,1
	.word	428
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	428
	.byte	1,4,2,35,1,11
	.byte	'IRADIS',0,1
	.word	428
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	428
	.byte	3,0,2,35,1,11
	.byte	'SCRCFG',0,1
	.word	428
	.byte	8,0,2,35,2,11
	.byte	'CPUSEL',0,1
	.word	428
	.byte	3,5,2,35,3,11
	.byte	'STBYEVEN',0,1
	.word	428
	.byte	1,4,2,35,3,11
	.byte	'STBYEV',0,1
	.word	428
	.byte	3,1,2,35,3,11
	.byte	'LCK',0,1
	.word	428
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,17,170,7,3
	.word	42010
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR2_Bits',0,17,173,7,16,4,11
	.byte	'SCRINT',0,1
	.word	428
	.byte	8,0,2,35,0,11
	.byte	'BUSY',0,1
	.word	428
	.byte	1,7,2,35,1,11
	.byte	'SCRECC',0,1
	.word	428
	.byte	1,6,2,35,1,11
	.byte	'SCRWDT',0,1
	.word	428
	.byte	1,5,2,35,1,11
	.byte	'SCRRST',0,1
	.word	428
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	428
	.byte	4,0,2,35,1,11
	.byte	'TCINT',0,1
	.word	428
	.byte	8,0,2,35,2,11
	.byte	'TCINTREQ',0,1
	.word	428
	.byte	1,7,2,35,3,11
	.byte	'SMURST',0,1
	.word	428
	.byte	1,6,2,35,3,11
	.byte	'RST',0,1
	.word	428
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	428
	.byte	4,1,2,35,3,11
	.byte	'LCK',0,1
	.word	428
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_PMSWCR2_Bits',0,17,187,7,3
	.word	42304
	.byte	10
	.byte	'_Ifx_SCU_PMSWSTAT_Bits',0,17,190,7,16,4,11
	.byte	'reserved_0',0,1
	.word	428
	.byte	2,6,2,35,0,11
	.byte	'ESR1WKP',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'ESR1OVRUN',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'PINAWKP',0,1
	.word	428
	.byte	1,3,2,35,0,11
	.byte	'PINAOVRUN',0,1
	.word	428
	.byte	1,2,2,35,0,11
	.byte	'PINBWKP',0,1
	.word	428
	.byte	1,1,2,35,0,11
	.byte	'PINBOVRUN',0,1
	.word	428
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	428
	.byte	1,7,2,35,1,11
	.byte	'PORSTDF',0,1
	.word	428
	.byte	1,6,2,35,1,11
	.byte	'HWCFGEVR',0,1
	.word	428
	.byte	3,3,2,35,1,11
	.byte	'STBYRAM',0,1
	.word	428
	.byte	2,1,2,35,1,11
	.byte	'TRIST',0,1
	.word	428
	.byte	1,0,2,35,1,11
	.byte	'SCRST',0,1
	.word	428
	.byte	1,7,2,35,2,11
	.byte	'SCRWKP',0,1
	.word	428
	.byte	1,6,2,35,2,11
	.byte	'SCR',0,1
	.word	428
	.byte	1,5,2,35,2,11
	.byte	'SCRWKEN',0,1
	.word	428
	.byte	1,4,2,35,2,11
	.byte	'ESR1WKEN',0,1
	.word	428
	.byte	1,3,2,35,2,11
	.byte	'PINAWKEN',0,1
	.word	428
	.byte	1,2,2,35,2,11
	.byte	'PINBWKEN',0,1
	.word	428
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	923
	.byte	4,5,2,35,2,11
	.byte	'ESR0TRIST',0,1
	.word	428
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	428
	.byte	4,0,2,35,3,0,33
	.byte	'Ifx_SCU_PMSWSTAT_Bits',0,17,214,7,3
	.word	42582
	.byte	10
	.byte	'_Ifx_SCU_PMSWSTATCLR_Bits',0,17,217,7,16,4,11
	.byte	'reserved_0',0,1
	.word	428
	.byte	2,6,2,35,0,11
	.byte	'ESR1WKPCLR',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'ESR1OVRUNCLR',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'PINAWKPCLR',0,1
	.word	428
	.byte	1,3,2,35,0,11
	.byte	'PINAOVRUNCLR',0,1
	.word	428
	.byte	1,2,2,35,0,11
	.byte	'PINBWKPCLR',0,1
	.word	428
	.byte	1,1,2,35,0,11
	.byte	'PINBOVRUNCLR',0,1
	.word	428
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	428
	.byte	8,0,2,35,1,11
	.byte	'SCRSTCLR',0,1
	.word	428
	.byte	1,7,2,35,2,11
	.byte	'SCRWKPCLR',0,1
	.word	428
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	923
	.byte	14,0,2,35,2,0,33
	.byte	'Ifx_SCU_PMSWSTATCLR_Bits',0,17,230,7,3
	.word	43078
	.byte	10
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,17,233,7,16,4,11
	.byte	'reserved_0',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'CLRC',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	923
	.byte	10,4,2,35,0,11
	.byte	'CSS0',0,1
	.word	428
	.byte	1,3,2,35,1,11
	.byte	'CSS1',0,1
	.word	428
	.byte	1,2,2,35,1,11
	.byte	'CSS2',0,1
	.word	428
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	428
	.byte	1,0,2,35,1,11
	.byte	'USRINFO',0,2
	.word	923
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_RSTCON2_Bits',0,17,243,7,3
	.word	43391
	.byte	10
	.byte	'_Ifx_SCU_RSTCON_Bits',0,17,246,7,16,4,11
	.byte	'ESR0',0,1
	.word	428
	.byte	2,6,2,35,0,11
	.byte	'ESR1',0,1
	.word	428
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	428
	.byte	2,2,2,35,0,11
	.byte	'SMU',0,1
	.word	428
	.byte	2,0,2,35,0,11
	.byte	'SW',0,1
	.word	428
	.byte	2,6,2,35,1,11
	.byte	'STM0',0,1
	.word	428
	.byte	2,4,2,35,1,11
	.byte	'STM1',0,1
	.word	428
	.byte	2,2,2,35,1,11
	.byte	'STM2',0,1
	.word	428
	.byte	2,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	923
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_RSTCON_Bits',0,17,129,8,3
	.word	43600
	.byte	10
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,17,132,8,16,4,11
	.byte	'ESR0',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'ESR1',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'SMU',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'SW',0,1
	.word	428
	.byte	1,3,2,35,0,11
	.byte	'STM0',0,1
	.word	428
	.byte	1,2,2,35,0,11
	.byte	'STM1',0,1
	.word	428
	.byte	1,1,2,35,0,11
	.byte	'STM2',0,1
	.word	428
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	428
	.byte	8,0,2,35,1,11
	.byte	'PORST',0,1
	.word	428
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	428
	.byte	1,6,2,35,2,11
	.byte	'CB0',0,1
	.word	428
	.byte	1,5,2,35,2,11
	.byte	'CB1',0,1
	.word	428
	.byte	1,4,2,35,2,11
	.byte	'CB3',0,1
	.word	428
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	428
	.byte	2,1,2,35,2,11
	.byte	'EVR13',0,1
	.word	428
	.byte	1,0,2,35,2,11
	.byte	'EVR33',0,1
	.word	428
	.byte	1,7,2,35,3,11
	.byte	'SWD',0,1
	.word	428
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	428
	.byte	2,4,2,35,3,11
	.byte	'STBYR',0,1
	.word	428
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	428
	.byte	3,0,2,35,3,0,33
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,17,155,8,3
	.word	43811
	.byte	10
	.byte	'_Ifx_SCU_SAFECON_Bits',0,17,158,8,16,4,11
	.byte	'HBT',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	405
	.byte	31,0,2,35,0,0,33
	.byte	'Ifx_SCU_SAFECON_Bits',0,17,162,8,3
	.word	44243
	.byte	10
	.byte	'_Ifx_SCU_STSTAT_Bits',0,17,165,8,16,4,11
	.byte	'HWCFG',0,1
	.word	428
	.byte	8,0,2,35,0,11
	.byte	'FTM',0,1
	.word	428
	.byte	7,1,2,35,1,11
	.byte	'MODE',0,1
	.word	428
	.byte	1,0,2,35,1,11
	.byte	'FCBAE',0,1
	.word	428
	.byte	1,7,2,35,2,11
	.byte	'LUDIS',0,1
	.word	428
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	428
	.byte	1,5,2,35,2,11
	.byte	'TRSTL',0,1
	.word	428
	.byte	1,4,2,35,2,11
	.byte	'SPDEN',0,1
	.word	428
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	428
	.byte	3,0,2,35,2,11
	.byte	'RAMINT',0,1
	.word	428
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	428
	.byte	7,0,2,35,3,0,33
	.byte	'Ifx_SCU_STSTAT_Bits',0,17,178,8,3
	.word	44339
	.byte	10
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,17,181,8,16,4,11
	.byte	'reserved_0',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'SWRSTREQ',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	405
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,17,186,8,3
	.word	44599
	.byte	10
	.byte	'_Ifx_SCU_SYSCON_Bits',0,17,189,8,16,4,11
	.byte	'CCTRIG0',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'RAMINTM',0,1
	.word	428
	.byte	2,4,2,35,0,11
	.byte	'SETLUDIS',0,1
	.word	428
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	428
	.byte	3,0,2,35,0,11
	.byte	'DATM',0,1
	.word	428
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,4
	.word	405
	.byte	23,0,2,35,0,0,33
	.byte	'Ifx_SCU_SYSCON_Bits',0,17,198,8,3
	.word	44724
	.byte	10
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,17,201,8,16,4,11
	.byte	'ESR0T',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	405
	.byte	28,0,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,17,208,8,3
	.word	44921
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS_Bits',0,17,211,8,16,4,11
	.byte	'ESR0T',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	405
	.byte	28,0,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPDIS_Bits',0,17,218,8,3
	.word	45074
	.byte	10
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,17,221,8,16,4,11
	.byte	'ESR0T',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	405
	.byte	28,0,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPSET_Bits',0,17,228,8,3
	.word	45227
	.byte	10
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,17,231,8,16,4,11
	.byte	'ESR0T',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	405
	.byte	28,0,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,17,238,8,3
	.word	45380
	.byte	7
	.byte	'unsigned int',0,4,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,17,241,8,16,4,11
	.byte	'ENDINIT',0,4
	.word	45535
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	45535
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	45535
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	45535
	.byte	16,0,2,35,0,0,33
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,17,247,8,3
	.word	45551
	.byte	10
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,17,250,8,16,4,11
	.byte	'reserved_0',0,1
	.word	428
	.byte	2,6,2,35,0,11
	.byte	'IR0',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	428
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	428
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	428
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	428
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	428
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	428
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	923
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,17,134,9,3
	.word	45681
	.byte	10
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,17,137,9,16,4,11
	.byte	'AE',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	428
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	428
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	428
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	428
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	428
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	428
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	923
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,17,150,9,3
	.word	45919
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,17,153,9,16,4,11
	.byte	'ENDINIT',0,4
	.word	45535
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	45535
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	45535
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	45535
	.byte	16,0,2,35,0,0,33
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,17,159,9,3
	.word	46142
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,17,162,9,16,4,11
	.byte	'CLRIRF',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	428
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	428
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	428
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	428
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	428
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	428
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	923
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,17,175,9,3
	.word	46268
	.byte	10
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,17,178,9,16,4,11
	.byte	'AE',0,1
	.word	428
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	428
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	428
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	428
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	428
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	428
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	428
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	428
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	428
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	428
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	923
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,17,191,9,3
	.word	46520
	.byte	12,17,199,9,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28045
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_ACCEN0',0,17,204,9,3
	.word	46739
	.byte	12,17,207,9,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28602
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_ACCEN1',0,17,212,9,3
	.word	46803
	.byte	12,17,215,9,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28679
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_ARSTDIS',0,17,220,9,3
	.word	46867
	.byte	12,17,223,9,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28815
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON0',0,17,228,9,3
	.word	46932
	.byte	12,17,231,9,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29095
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON1',0,17,236,9,3
	.word	46997
	.byte	12,17,239,9,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29333
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON2',0,17,244,9,3
	.word	47062
	.byte	12,17,247,9,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29461
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON3',0,17,252,9,3
	.word	47127
	.byte	12,17,255,9,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29704
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON4',0,17,132,10,3
	.word	47192
	.byte	12,17,135,10,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29939
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON5',0,17,140,10,3
	.word	47257
	.byte	12,17,143,10,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30067
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON6',0,17,148,10,3
	.word	47322
	.byte	12,17,151,10,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30167
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON7',0,17,156,10,3
	.word	47387
	.byte	12,17,159,10,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30267
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CHIPID',0,17,164,10,3
	.word	47452
	.byte	12,17,167,10,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30475
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_DTSCON',0,17,172,10,3
	.word	47516
	.byte	12,17,175,10,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30640
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_DTSLIM',0,17,180,10,3
	.word	47580
	.byte	12,17,183,10,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30823
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_DTSSTAT',0,17,188,10,3
	.word	47644
	.byte	12,17,191,10,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30977
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EICR',0,17,196,10,3
	.word	47709
	.byte	12,17,199,10,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31341
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EIFR',0,17,204,10,3
	.word	47771
	.byte	12,17,207,10,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31552
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EMSR',0,17,212,10,3
	.word	47833
	.byte	12,17,215,10,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31804
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_ESRCFG',0,17,220,10,3
	.word	47895
	.byte	12,17,223,10,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31922
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_ESROCFG',0,17,228,10,3
	.word	47959
	.byte	12,17,231,10,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32033
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVR13CON',0,17,236,10,3
	.word	48024
	.byte	12,17,239,10,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32196
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVR33CON',0,17,244,10,3
	.word	48090
	.byte	12,17,247,10,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32359
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRADCSTAT',0,17,252,10,3
	.word	48156
	.byte	12,17,255,10,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32517
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRDVSTAT',0,17,132,11,3
	.word	48224
	.byte	12,17,135,11,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32682
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRMONCTRL',0,17,140,11,3
	.word	48291
	.byte	12,17,143,11,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33011
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVROSCCTRL',0,17,148,11,3
	.word	48359
	.byte	12,17,151,11,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33232
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVROVMON',0,17,156,11,3
	.word	48427
	.byte	12,17,159,11,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33395
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRRSTCON',0,17,164,11,3
	.word	48493
	.byte	12,17,167,11,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33667
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRSDCOEFF1',0,17,172,11,3
	.word	48560
	.byte	12,17,175,11,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33820
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRSDCOEFF2',0,17,180,11,3
	.word	48629
	.byte	12,17,183,11,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33976
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRSDCOEFF3',0,17,188,11,3
	.word	48698
	.byte	12,17,191,11,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34138
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRSDCOEFF4',0,17,196,11,3
	.word	48767
	.byte	12,17,199,11,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34281
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRSDCOEFF5',0,17,204,11,3
	.word	48836
	.byte	12,17,207,11,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34446
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRSDCOEFF6',0,17,212,11,3
	.word	48905
	.byte	12,17,215,11,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34591
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRSDCTRL1',0,17,220,11,3
	.word	48974
	.byte	12,17,223,11,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34772
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRSDCTRL2',0,17,228,11,3
	.word	49042
	.byte	12,17,231,11,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34946
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRSDCTRL3',0,17,236,11,3
	.word	49110
	.byte	12,17,239,11,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35106
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRSDCTRL4',0,17,244,11,3
	.word	49178
	.byte	12,17,247,11,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35250
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRSTAT',0,17,252,11,3
	.word	49246
	.byte	12,17,255,11,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35524
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRTRIM',0,17,132,12,3
	.word	49311
	.byte	12,17,135,12,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35663
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRUVMON',0,17,140,12,3
	.word	49376
	.byte	12,17,143,12,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35826
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EXTCON',0,17,148,12,3
	.word	49442
	.byte	12,17,151,12,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36044
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_FDR',0,17,156,12,3
	.word	49506
	.byte	12,17,159,12,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36207
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_FMR',0,17,164,12,3
	.word	49567
	.byte	12,17,167,12,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36543
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_ID',0,17,172,12,3
	.word	49628
	.byte	12,17,175,12,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36650
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_IGCR',0,17,180,12,3
	.word	49688
	.byte	12,17,183,12,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37102
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_IN',0,17,188,12,3
	.word	49750
	.byte	12,17,191,12,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37201
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_IOCR',0,17,196,12,3
	.word	49810
	.byte	12,17,199,12,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37351
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_LBISTCTRL0',0,17,204,12,3
	.word	49872
	.byte	12,17,207,12,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37500
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_LBISTCTRL1',0,17,212,12,3
	.word	49940
	.byte	12,17,215,12,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37661
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_LBISTCTRL2',0,17,220,12,3
	.word	50008
	.byte	12,17,223,12,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37791
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_LCLCON',0,17,228,12,3
	.word	50076
	.byte	12,17,231,12,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37923
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_LCLTEST',0,17,236,12,3
	.word	50140
	.byte	12,17,239,12,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38038
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_MANID',0,17,244,12,3
	.word	50205
	.byte	12,17,247,12,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38149
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_OMR',0,17,252,12,3
	.word	50268
	.byte	12,17,255,12,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38307
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_OSCCON',0,17,132,13,3
	.word	50329
	.byte	12,17,135,13,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38719
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_OUT',0,17,140,13,3
	.word	50393
	.byte	12,17,143,13,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38820
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_OVCCON',0,17,148,13,3
	.word	50454
	.byte	12,17,151,13,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39087
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_OVCENABLE',0,17,156,13,3
	.word	50518
	.byte	12,17,159,13,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39223
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PDISC',0,17,164,13,3
	.word	50585
	.byte	12,17,167,13,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39334
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PDR',0,17,172,13,3
	.word	50648
	.byte	12,17,175,13,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39467
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PDRR',0,17,180,13,3
	.word	50709
	.byte	12,17,183,13,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39670
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PLLCON0',0,17,188,13,3
	.word	50771
	.byte	12,17,191,13,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40026
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PLLCON1',0,17,196,13,3
	.word	50836
	.byte	12,17,199,13,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40204
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PLLCON2',0,17,204,13,3
	.word	50901
	.byte	12,17,207,13,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40304
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PLLERAYCON0',0,17,212,13,3
	.word	50966
	.byte	12,17,215,13,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40674
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PLLERAYCON1',0,17,220,13,3
	.word	51035
	.byte	12,17,223,13,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40860
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PLLERAYSTAT',0,17,228,13,3
	.word	51104
	.byte	12,17,231,13,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41058
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PLLSTAT',0,17,236,13,3
	.word	51173
	.byte	12,17,239,13,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41291
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMCSR',0,17,244,13,3
	.word	51238
	.byte	12,17,247,13,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41443
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMSWCR0',0,17,252,13,3
	.word	51301
	.byte	12,17,255,13,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42010
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMSWCR1',0,17,132,14,3
	.word	51366
	.byte	12,17,135,14,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42304
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMSWCR2',0,17,140,14,3
	.word	51431
	.byte	12,17,143,14,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42582
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMSWSTAT',0,17,148,14,3
	.word	51496
	.byte	12,17,151,14,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43078
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMSWSTATCLR',0,17,156,14,3
	.word	51562
	.byte	12,17,159,14,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43600
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_RSTCON',0,17,164,14,3
	.word	51631
	.byte	12,17,167,14,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43391
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_RSTCON2',0,17,172,14,3
	.word	51695
	.byte	12,17,175,14,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43811
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_RSTSTAT',0,17,180,14,3
	.word	51760
	.byte	12,17,183,14,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44243
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_SAFECON',0,17,188,14,3
	.word	51825
	.byte	12,17,191,14,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44339
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_STSTAT',0,17,196,14,3
	.word	51890
	.byte	12,17,199,14,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44599
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_SWRSTCON',0,17,204,14,3
	.word	51954
	.byte	12,17,207,14,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44724
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_SYSCON',0,17,212,14,3
	.word	52020
	.byte	12,17,215,14,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44921
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPCLR',0,17,220,14,3
	.word	52084
	.byte	12,17,223,14,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45074
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPDIS',0,17,228,14,3
	.word	52149
	.byte	12,17,231,14,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45227
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPSET',0,17,236,14,3
	.word	52214
	.byte	12,17,239,14,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45380
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPSTAT',0,17,244,14,3
	.word	52279
	.byte	12,17,247,14,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45551
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_WDTCPU_CON0',0,17,252,14,3
	.word	52345
	.byte	12,17,255,14,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45681
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_WDTCPU_CON1',0,17,132,15,3
	.word	52414
	.byte	12,17,135,15,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45919
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_WDTCPU_SR',0,17,140,15,3
	.word	52483
	.byte	12,17,143,15,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46142
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_WDTS_CON0',0,17,148,15,3
	.word	52550
	.byte	12,17,151,15,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46268
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_WDTS_CON1',0,17,156,15,3
	.word	52617
	.byte	12,17,159,15,9,4,13
	.byte	'U',0
	.word	405
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46520
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_WDTS_SR',0,17,164,15,3
	.word	52684
	.byte	10
	.byte	'_Ifx_SCU_WDTCPU',0,17,175,15,25,12,13
	.byte	'CON0',0
	.word	52345
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	52414
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	52483
	.byte	4,2,35,8,0,14
	.word	52749
	.byte	33
	.byte	'Ifx_SCU_WDTCPU',0,17,180,15,3
	.word	52812
	.byte	10
	.byte	'_Ifx_SCU_WDTS',0,17,183,15,25,12,13
	.byte	'CON0',0
	.word	52550
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	52617
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	52684
	.byte	4,2,35,8,0,14
	.word	52841
	.byte	33
	.byte	'Ifx_SCU_WDTS',0,17,188,15,3
	.word	52902
	.byte	33
	.byte	'IfxSrc_Tos',0,5,74,3
	.word	864
	.byte	33
	.byte	'Ifx_SRC_SRCR_Bits',0,4,62,3
	.word	445
	.byte	33
	.byte	'Ifx_SRC_SRCR',0,4,75,3
	.word	735
	.byte	10
	.byte	'_Ifx_SRC_AGBT',0,4,86,25,4,13
	.byte	'SR',0
	.word	735
	.byte	4,2,35,0,0,14
	.word	52995
	.byte	33
	.byte	'Ifx_SRC_AGBT',0,4,89,3
	.word	53027
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN',0,4,92,25,12,13
	.byte	'TX',0
	.word	735
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	735
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	735
	.byte	4,2,35,8,0,14
	.word	53053
	.byte	33
	.byte	'Ifx_SRC_ASCLIN',0,4,97,3
	.word	53112
	.byte	10
	.byte	'_Ifx_SRC_BCUSPB',0,4,100,25,4,13
	.byte	'SBSRC',0
	.word	735
	.byte	4,2,35,0,0,14
	.word	53140
	.byte	33
	.byte	'Ifx_SRC_BCUSPB',0,4,103,3
	.word	53177
	.byte	18,64
	.word	735
	.byte	19,15,0,10
	.byte	'_Ifx_SRC_CAN',0,4,106,25,64,13
	.byte	'INT',0
	.word	53205
	.byte	64,2,35,0,0,14
	.word	53214
	.byte	33
	.byte	'Ifx_SRC_CAN',0,4,109,3
	.word	53246
	.byte	10
	.byte	'_Ifx_SRC_CCU6',0,4,112,25,16,13
	.byte	'SR0',0
	.word	735
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	735
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	735
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	735
	.byte	4,2,35,12,0,14
	.word	53271
	.byte	33
	.byte	'Ifx_SRC_CCU6',0,4,118,3
	.word	53343
	.byte	18,8
	.word	735
	.byte	19,1,0,10
	.byte	'_Ifx_SRC_CERBERUS',0,4,121,25,8,13
	.byte	'SR',0
	.word	53369
	.byte	8,2,35,0,0,14
	.word	53378
	.byte	33
	.byte	'Ifx_SRC_CERBERUS',0,4,124,3
	.word	53414
	.byte	10
	.byte	'_Ifx_SRC_CIF',0,4,127,25,16,13
	.byte	'MI',0
	.word	735
	.byte	4,2,35,0,13
	.byte	'MIEP',0
	.word	735
	.byte	4,2,35,4,13
	.byte	'ISP',0
	.word	735
	.byte	4,2,35,8,13
	.byte	'MJPEG',0
	.word	735
	.byte	4,2,35,12,0,14
	.word	53444
	.byte	33
	.byte	'Ifx_SRC_CIF',0,4,133,1,3
	.word	53517
	.byte	10
	.byte	'_Ifx_SRC_CPU',0,4,136,1,25,4,13
	.byte	'SBSRC',0
	.word	735
	.byte	4,2,35,0,0,14
	.word	53543
	.byte	33
	.byte	'Ifx_SRC_CPU',0,4,139,1,3
	.word	53578
	.byte	18,192,1
	.word	735
	.byte	19,47,0,10
	.byte	'_Ifx_SRC_DMA',0,4,142,1,25,208,1,13
	.byte	'ERR',0
	.word	735
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	4187
	.byte	12,2,35,4,13
	.byte	'CH',0
	.word	53604
	.byte	192,1,2,35,16,0,14
	.word	53614
	.byte	33
	.byte	'Ifx_SRC_DMA',0,4,147,1,3
	.word	53681
	.byte	10
	.byte	'_Ifx_SRC_DSADC',0,4,150,1,25,8,13
	.byte	'SRM',0
	.word	735
	.byte	4,2,35,0,13
	.byte	'SRA',0
	.word	735
	.byte	4,2,35,4,0,14
	.word	53707
	.byte	33
	.byte	'Ifx_SRC_DSADC',0,4,154,1,3
	.word	53755
	.byte	10
	.byte	'_Ifx_SRC_EMEM',0,4,157,1,25,4,13
	.byte	'SR',0
	.word	735
	.byte	4,2,35,0,0,14
	.word	53783
	.byte	33
	.byte	'Ifx_SRC_EMEM',0,4,160,1,3
	.word	53816
	.byte	18,40
	.word	428
	.byte	19,39,0,10
	.byte	'_Ifx_SRC_ERAY',0,4,163,1,25,80,13
	.byte	'INT',0
	.word	53369
	.byte	8,2,35,0,13
	.byte	'TINT',0
	.word	53369
	.byte	8,2,35,8,13
	.byte	'NDAT',0
	.word	53369
	.byte	8,2,35,16,13
	.byte	'MBSC',0
	.word	53369
	.byte	8,2,35,24,13
	.byte	'OBUSY',0
	.word	735
	.byte	4,2,35,32,13
	.byte	'IBUSY',0
	.word	735
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	53843
	.byte	40,2,35,40,0,14
	.word	53852
	.byte	33
	.byte	'Ifx_SRC_ERAY',0,4,172,1,3
	.word	53979
	.byte	10
	.byte	'_Ifx_SRC_ETH',0,4,175,1,25,4,13
	.byte	'SR',0
	.word	735
	.byte	4,2,35,0,0,14
	.word	54006
	.byte	33
	.byte	'Ifx_SRC_ETH',0,4,178,1,3
	.word	54038
	.byte	10
	.byte	'_Ifx_SRC_FCE',0,4,181,1,25,4,13
	.byte	'SR',0
	.word	735
	.byte	4,2,35,0,0,14
	.word	54064
	.byte	33
	.byte	'Ifx_SRC_FCE',0,4,184,1,3
	.word	54096
	.byte	10
	.byte	'_Ifx_SRC_FFT',0,4,187,1,25,12,13
	.byte	'DONE',0
	.word	735
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	735
	.byte	4,2,35,4,13
	.byte	'RFS',0
	.word	735
	.byte	4,2,35,8,0,14
	.word	54122
	.byte	33
	.byte	'Ifx_SRC_FFT',0,4,192,1,3
	.word	54182
	.byte	18,16
	.word	428
	.byte	19,15,0,10
	.byte	'_Ifx_SRC_GPSR',0,4,195,1,25,32,13
	.byte	'SR0',0
	.word	735
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	735
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	735
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	735
	.byte	4,2,35,12,13
	.byte	'reserved_10',0
	.word	54208
	.byte	16,2,35,16,0,14
	.word	54217
	.byte	33
	.byte	'Ifx_SRC_GPSR',0,4,202,1,3
	.word	54311
	.byte	10
	.byte	'_Ifx_SRC_GPT12',0,4,205,1,25,48,13
	.byte	'CIRQ',0
	.word	735
	.byte	4,2,35,0,13
	.byte	'T2',0
	.word	735
	.byte	4,2,35,4,13
	.byte	'T3',0
	.word	735
	.byte	4,2,35,8,13
	.byte	'T4',0
	.word	735
	.byte	4,2,35,12,13
	.byte	'T5',0
	.word	735
	.byte	4,2,35,16,13
	.byte	'T6',0
	.word	735
	.byte	4,2,35,20,13
	.byte	'reserved_18',0
	.word	3218
	.byte	24,2,35,24,0,14
	.word	54338
	.byte	33
	.byte	'Ifx_SRC_GPT12',0,4,214,1,3
	.word	54455
	.byte	18,12
	.word	735
	.byte	19,2,0,18,32
	.word	735
	.byte	19,7,0,18,32
	.word	54492
	.byte	19,0,0,18,88
	.word	428
	.byte	19,87,0,18,108
	.word	735
	.byte	19,26,0,18,96
	.word	428
	.byte	19,95,0,18,96
	.word	54492
	.byte	19,2,0,18,160,3
	.word	428
	.byte	19,159,3,0,18,64
	.word	54492
	.byte	19,1,0,18,192,3
	.word	428
	.byte	19,191,3,0,18,16
	.word	735
	.byte	19,3,0,18,64
	.word	54577
	.byte	19,3,0,18,192,2
	.word	428
	.byte	19,191,2,0,18,52
	.word	428
	.byte	19,51,0,10
	.byte	'_Ifx_SRC_GTM',0,4,217,1,25,204,18,13
	.byte	'AEIIRQ',0
	.word	735
	.byte	4,2,35,0,13
	.byte	'ARUIRQ',0
	.word	54483
	.byte	12,2,35,4,13
	.byte	'reserved_10',0
	.word	2028
	.byte	4,2,35,16,13
	.byte	'BRCIRQ',0
	.word	735
	.byte	4,2,35,20,13
	.byte	'CMPIRQ',0
	.word	735
	.byte	4,2,35,24,13
	.byte	'SPEIRQ',0
	.word	53369
	.byte	8,2,35,28,13
	.byte	'reserved_24',0
	.word	3847
	.byte	8,2,35,36,13
	.byte	'PSM',0
	.word	54501
	.byte	32,2,35,44,13
	.byte	'reserved_4C',0
	.word	54510
	.byte	88,2,35,76,13
	.byte	'DPLL',0
	.word	54519
	.byte	108,3,35,164,1,13
	.byte	'reserved_110',0
	.word	54528
	.byte	96,3,35,144,2,13
	.byte	'ERR',0
	.word	735
	.byte	4,3,35,240,2,13
	.byte	'reserved_174',0
	.word	4187
	.byte	12,3,35,244,2,13
	.byte	'TIM',0
	.word	54537
	.byte	96,3,35,128,3,13
	.byte	'reserved_1E0',0
	.word	54546
	.byte	160,3,3,35,224,3,13
	.byte	'MCS',0
	.word	54537
	.byte	96,3,35,128,7,13
	.byte	'reserved_3E0',0
	.word	54546
	.byte	160,3,3,35,224,7,13
	.byte	'TOM',0
	.word	54557
	.byte	64,3,35,128,11,13
	.byte	'reserved_5C0',0
	.word	54566
	.byte	192,3,3,35,192,11,13
	.byte	'ATOM',0
	.word	54586
	.byte	64,3,35,128,15,13
	.byte	'reserved_7C0',0
	.word	54595
	.byte	192,2,3,35,192,15,13
	.byte	'MCSW0',0
	.word	54483
	.byte	12,3,35,128,18,13
	.byte	'reserved_90C',0
	.word	54606
	.byte	52,3,35,140,18,13
	.byte	'MCSW1',0
	.word	54483
	.byte	12,3,35,192,18,0,14
	.word	54615
	.byte	33
	.byte	'Ifx_SRC_GTM',0,4,243,1,3
	.word	55075
	.byte	10
	.byte	'_Ifx_SRC_HSCT',0,4,246,1,25,4,13
	.byte	'SR',0
	.word	735
	.byte	4,2,35,0,0,14
	.word	55101
	.byte	33
	.byte	'Ifx_SRC_HSCT',0,4,249,1,3
	.word	55134
	.byte	10
	.byte	'_Ifx_SRC_HSSL',0,4,252,1,25,16,13
	.byte	'COK',0
	.word	735
	.byte	4,2,35,0,13
	.byte	'RDI',0
	.word	735
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	735
	.byte	4,2,35,8,13
	.byte	'TRG',0
	.word	735
	.byte	4,2,35,12,0,14
	.word	55161
	.byte	33
	.byte	'Ifx_SRC_HSSL',0,4,130,2,3
	.word	55234
	.byte	18,56
	.word	428
	.byte	19,55,0,10
	.byte	'_Ifx_SRC_I2C',0,4,133,2,25,80,13
	.byte	'BREQ',0
	.word	735
	.byte	4,2,35,0,13
	.byte	'LBREQ',0
	.word	735
	.byte	4,2,35,4,13
	.byte	'SREQ',0
	.word	735
	.byte	4,2,35,8,13
	.byte	'LSREQ',0
	.word	735
	.byte	4,2,35,12,13
	.byte	'ERR',0
	.word	735
	.byte	4,2,35,16,13
	.byte	'P',0
	.word	735
	.byte	4,2,35,20,13
	.byte	'reserved_18',0
	.word	55261
	.byte	56,2,35,24,0,14
	.word	55270
	.byte	33
	.byte	'Ifx_SRC_I2C',0,4,142,2,3
	.word	55393
	.byte	10
	.byte	'_Ifx_SRC_LMU',0,4,145,2,25,4,13
	.byte	'SR',0
	.word	735
	.byte	4,2,35,0,0,14
	.word	55419
	.byte	33
	.byte	'Ifx_SRC_LMU',0,4,148,2,3
	.word	55451
	.byte	10
	.byte	'_Ifx_SRC_MSC',0,4,151,2,25,20,13
	.byte	'SR0',0
	.word	735
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	735
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	735
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	735
	.byte	4,2,35,12,13
	.byte	'SR4',0
	.word	735
	.byte	4,2,35,16,0,14
	.word	55477
	.byte	33
	.byte	'Ifx_SRC_MSC',0,4,158,2,3
	.word	55562
	.byte	10
	.byte	'_Ifx_SRC_PMU',0,4,161,2,25,4,13
	.byte	'SR',0
	.word	735
	.byte	4,2,35,0,0,14
	.word	55588
	.byte	33
	.byte	'Ifx_SRC_PMU',0,4,164,2,3
	.word	55620
	.byte	10
	.byte	'_Ifx_SRC_PSI5',0,4,167,2,25,32,13
	.byte	'SR',0
	.word	54492
	.byte	32,2,35,0,0,14
	.word	55646
	.byte	33
	.byte	'Ifx_SRC_PSI5',0,4,170,2,3
	.word	55679
	.byte	10
	.byte	'_Ifx_SRC_PSI5S',0,4,173,2,25,32,13
	.byte	'SR',0
	.word	54492
	.byte	32,2,35,0,0,14
	.word	55706
	.byte	33
	.byte	'Ifx_SRC_PSI5S',0,4,176,2,3
	.word	55740
	.byte	10
	.byte	'_Ifx_SRC_QSPI',0,4,179,2,25,24,13
	.byte	'TX',0
	.word	735
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	735
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	735
	.byte	4,2,35,8,13
	.byte	'PT',0
	.word	735
	.byte	4,2,35,12,13
	.byte	'HC',0
	.word	735
	.byte	4,2,35,16,13
	.byte	'U',0
	.word	735
	.byte	4,2,35,20,0,14
	.word	55768
	.byte	33
	.byte	'Ifx_SRC_QSPI',0,4,187,2,3
	.word	55861
	.byte	10
	.byte	'_Ifx_SRC_SCR',0,4,190,2,25,4,13
	.byte	'SR',0
	.word	735
	.byte	4,2,35,0,0,14
	.word	55888
	.byte	33
	.byte	'Ifx_SRC_SCR',0,4,193,2,3
	.word	55920
	.byte	10
	.byte	'_Ifx_SRC_SCU',0,4,196,2,25,20,13
	.byte	'DTS',0
	.word	735
	.byte	4,2,35,0,13
	.byte	'ERU',0
	.word	54577
	.byte	16,2,35,4,0,14
	.word	55946
	.byte	33
	.byte	'Ifx_SRC_SCU',0,4,200,2,3
	.word	55992
	.byte	18,24
	.word	735
	.byte	19,5,0,10
	.byte	'_Ifx_SRC_SENT',0,4,203,2,25,24,13
	.byte	'SR',0
	.word	56018
	.byte	24,2,35,0,0,14
	.word	56027
	.byte	33
	.byte	'Ifx_SRC_SENT',0,4,206,2,3
	.word	56060
	.byte	10
	.byte	'_Ifx_SRC_SMU',0,4,209,2,25,12,13
	.byte	'SR',0
	.word	54483
	.byte	12,2,35,0,0,14
	.word	56087
	.byte	33
	.byte	'Ifx_SRC_SMU',0,4,212,2,3
	.word	56119
	.byte	10
	.byte	'_Ifx_SRC_STM',0,4,215,2,25,8,13
	.byte	'SR0',0
	.word	735
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	735
	.byte	4,2,35,4,0,14
	.word	56145
	.byte	33
	.byte	'Ifx_SRC_STM',0,4,219,2,3
	.word	56191
	.byte	10
	.byte	'_Ifx_SRC_VADCCG',0,4,222,2,25,16,13
	.byte	'SR0',0
	.word	735
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	735
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	735
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	735
	.byte	4,2,35,12,0,14
	.word	56217
	.byte	33
	.byte	'Ifx_SRC_VADCCG',0,4,228,2,3
	.word	56292
	.byte	10
	.byte	'_Ifx_SRC_VADCG',0,4,231,2,25,16,13
	.byte	'SR0',0
	.word	735
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	735
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	735
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	735
	.byte	4,2,35,12,0,14
	.word	56321
	.byte	33
	.byte	'Ifx_SRC_VADCG',0,4,237,2,3
	.word	56395
	.byte	10
	.byte	'_Ifx_SRC_XBAR',0,4,240,2,25,4,13
	.byte	'SRC',0
	.word	735
	.byte	4,2,35,0,0,14
	.word	56423
	.byte	33
	.byte	'Ifx_SRC_XBAR',0,4,243,2,3
	.word	56457
	.byte	18,4
	.word	52995
	.byte	19,0,0,14
	.word	56484
	.byte	10
	.byte	'_Ifx_SRC_GAGBT',0,4,128,3,25,4,13
	.byte	'AGBT',0
	.word	56493
	.byte	4,2,35,0,0,14
	.word	56498
	.byte	33
	.byte	'Ifx_SRC_GAGBT',0,4,131,3,3
	.word	56534
	.byte	18,48
	.word	53053
	.byte	19,3,0,14
	.word	56562
	.byte	10
	.byte	'_Ifx_SRC_GASCLIN',0,4,134,3,25,48,13
	.byte	'ASCLIN',0
	.word	56571
	.byte	48,2,35,0,0,14
	.word	56576
	.byte	33
	.byte	'Ifx_SRC_GASCLIN',0,4,137,3,3
	.word	56616
	.byte	14
	.word	53140
	.byte	10
	.byte	'_Ifx_SRC_GBCU',0,4,140,3,25,4,13
	.byte	'SPB',0
	.word	56646
	.byte	4,2,35,0,0,14
	.word	56651
	.byte	33
	.byte	'Ifx_SRC_GBCU',0,4,143,3,3
	.word	56685
	.byte	18,64
	.word	53214
	.byte	19,0,0,14
	.word	56712
	.byte	10
	.byte	'_Ifx_SRC_GCAN',0,4,146,3,25,64,13
	.byte	'CAN',0
	.word	56721
	.byte	64,2,35,0,0,14
	.word	56726
	.byte	33
	.byte	'Ifx_SRC_GCAN',0,4,149,3,3
	.word	56760
	.byte	18,32
	.word	53271
	.byte	19,1,0,14
	.word	56787
	.byte	10
	.byte	'_Ifx_SRC_GCCU6',0,4,152,3,25,32,13
	.byte	'CCU6',0
	.word	56796
	.byte	32,2,35,0,0,14
	.word	56801
	.byte	33
	.byte	'Ifx_SRC_GCCU6',0,4,155,3,3
	.word	56837
	.byte	14
	.word	53378
	.byte	10
	.byte	'_Ifx_SRC_GCERBERUS',0,4,158,3,25,8,13
	.byte	'CERBERUS',0
	.word	56865
	.byte	8,2,35,0,0,14
	.word	56870
	.byte	33
	.byte	'Ifx_SRC_GCERBERUS',0,4,161,3,3
	.word	56914
	.byte	18,16
	.word	53444
	.byte	19,0,0,14
	.word	56946
	.byte	10
	.byte	'_Ifx_SRC_GCIF',0,4,164,3,25,16,13
	.byte	'CIF',0
	.word	56955
	.byte	16,2,35,0,0,14
	.word	56960
	.byte	33
	.byte	'Ifx_SRC_GCIF',0,4,167,3,3
	.word	56994
	.byte	18,8
	.word	53543
	.byte	19,1,0,14
	.word	57021
	.byte	10
	.byte	'_Ifx_SRC_GCPU',0,4,170,3,25,8,13
	.byte	'CPU',0
	.word	57030
	.byte	8,2,35,0,0,14
	.word	57035
	.byte	33
	.byte	'Ifx_SRC_GCPU',0,4,173,3,3
	.word	57069
	.byte	18,208,1
	.word	53614
	.byte	19,0,0,14
	.word	57096
	.byte	10
	.byte	'_Ifx_SRC_GDMA',0,4,176,3,25,208,1,13
	.byte	'DMA',0
	.word	57106
	.byte	208,1,2,35,0,0,14
	.word	57111
	.byte	33
	.byte	'Ifx_SRC_GDMA',0,4,179,3,3
	.word	57147
	.byte	14
	.word	53707
	.byte	14
	.word	53707
	.byte	14
	.word	53707
	.byte	10
	.byte	'_Ifx_SRC_GDSADC',0,4,182,3,25,32,13
	.byte	'DSADC0',0
	.word	57174
	.byte	8,2,35,0,13
	.byte	'reserved_8',0
	.word	3847
	.byte	8,2,35,8,13
	.byte	'DSADC2',0
	.word	57179
	.byte	8,2,35,16,13
	.byte	'DSADC3',0
	.word	57184
	.byte	8,2,35,24,0,14
	.word	57189
	.byte	33
	.byte	'Ifx_SRC_GDSADC',0,4,188,3,3
	.word	57280
	.byte	18,4
	.word	53783
	.byte	19,0,0,14
	.word	57309
	.byte	10
	.byte	'_Ifx_SRC_GEMEM',0,4,191,3,25,4,13
	.byte	'EMEM',0
	.word	57318
	.byte	4,2,35,0,0,14
	.word	57323
	.byte	33
	.byte	'Ifx_SRC_GEMEM',0,4,194,3,3
	.word	57359
	.byte	18,80
	.word	53852
	.byte	19,0,0,14
	.word	57387
	.byte	10
	.byte	'_Ifx_SRC_GERAY',0,4,197,3,25,80,13
	.byte	'ERAY',0
	.word	57396
	.byte	80,2,35,0,0,14
	.word	57401
	.byte	33
	.byte	'Ifx_SRC_GERAY',0,4,200,3,3
	.word	57437
	.byte	18,4
	.word	54006
	.byte	19,0,0,14
	.word	57465
	.byte	10
	.byte	'_Ifx_SRC_GETH',0,4,203,3,25,4,13
	.byte	'ETH',0
	.word	57474
	.byte	4,2,35,0,0,14
	.word	57479
	.byte	33
	.byte	'Ifx_SRC_GETH',0,4,206,3,3
	.word	57513
	.byte	18,4
	.word	54064
	.byte	19,0,0,14
	.word	57540
	.byte	10
	.byte	'_Ifx_SRC_GFCE',0,4,209,3,25,4,13
	.byte	'FCE',0
	.word	57549
	.byte	4,2,35,0,0,14
	.word	57554
	.byte	33
	.byte	'Ifx_SRC_GFCE',0,4,212,3,3
	.word	57588
	.byte	18,12
	.word	54122
	.byte	19,0,0,14
	.word	57615
	.byte	10
	.byte	'_Ifx_SRC_GFFT',0,4,215,3,25,12,13
	.byte	'FFT',0
	.word	57624
	.byte	12,2,35,0,0,14
	.word	57629
	.byte	33
	.byte	'Ifx_SRC_GFFT',0,4,218,3,3
	.word	57663
	.byte	18,64
	.word	54217
	.byte	19,1,0,14
	.word	57690
	.byte	10
	.byte	'_Ifx_SRC_GGPSR',0,4,221,3,25,64,13
	.byte	'GPSR',0
	.word	57699
	.byte	64,2,35,0,0,14
	.word	57704
	.byte	33
	.byte	'Ifx_SRC_GGPSR',0,4,224,3,3
	.word	57740
	.byte	18,48
	.word	54338
	.byte	19,0,0,14
	.word	57768
	.byte	10
	.byte	'_Ifx_SRC_GGPT12',0,4,227,3,25,48,13
	.byte	'GPT12',0
	.word	57777
	.byte	48,2,35,0,0,14
	.word	57782
	.byte	33
	.byte	'Ifx_SRC_GGPT12',0,4,230,3,3
	.word	57820
	.byte	18,204,18
	.word	54615
	.byte	19,0,0,14
	.word	57849
	.byte	10
	.byte	'_Ifx_SRC_GGTM',0,4,233,3,25,204,18,13
	.byte	'GTM',0
	.word	57859
	.byte	204,18,2,35,0,0,14
	.word	57864
	.byte	33
	.byte	'Ifx_SRC_GGTM',0,4,236,3,3
	.word	57900
	.byte	18,4
	.word	55101
	.byte	19,0,0,14
	.word	57927
	.byte	10
	.byte	'_Ifx_SRC_GHSCT',0,4,239,3,25,4,13
	.byte	'HSCT',0
	.word	57936
	.byte	4,2,35,0,0,14
	.word	57941
	.byte	33
	.byte	'Ifx_SRC_GHSCT',0,4,242,3,3
	.word	57977
	.byte	18,64
	.word	55161
	.byte	19,3,0,14
	.word	58005
	.byte	10
	.byte	'_Ifx_SRC_GHSSL',0,4,245,3,25,68,13
	.byte	'HSSL',0
	.word	58014
	.byte	64,2,35,0,13
	.byte	'EXI',0
	.word	735
	.byte	4,2,35,64,0,14
	.word	58019
	.byte	33
	.byte	'Ifx_SRC_GHSSL',0,4,249,3,3
	.word	58068
	.byte	18,80
	.word	55270
	.byte	19,0,0,14
	.word	58096
	.byte	10
	.byte	'_Ifx_SRC_GI2C',0,4,252,3,25,80,13
	.byte	'I2C',0
	.word	58105
	.byte	80,2,35,0,0,14
	.word	58110
	.byte	33
	.byte	'Ifx_SRC_GI2C',0,4,255,3,3
	.word	58144
	.byte	18,4
	.word	55419
	.byte	19,0,0,14
	.word	58171
	.byte	10
	.byte	'_Ifx_SRC_GLMU',0,4,130,4,25,4,13
	.byte	'LMU',0
	.word	58180
	.byte	4,2,35,0,0,14
	.word	58185
	.byte	33
	.byte	'Ifx_SRC_GLMU',0,4,133,4,3
	.word	58219
	.byte	18,40
	.word	55477
	.byte	19,1,0,14
	.word	58246
	.byte	10
	.byte	'_Ifx_SRC_GMSC',0,4,136,4,25,40,13
	.byte	'MSC',0
	.word	58255
	.byte	40,2,35,0,0,14
	.word	58260
	.byte	33
	.byte	'Ifx_SRC_GMSC',0,4,139,4,3
	.word	58294
	.byte	18,8
	.word	55588
	.byte	19,1,0,14
	.word	58321
	.byte	10
	.byte	'_Ifx_SRC_GPMU',0,4,142,4,25,8,13
	.byte	'PMU',0
	.word	58330
	.byte	8,2,35,0,0,14
	.word	58335
	.byte	33
	.byte	'Ifx_SRC_GPMU',0,4,145,4,3
	.word	58369
	.byte	18,32
	.word	55646
	.byte	19,0,0,14
	.word	58396
	.byte	10
	.byte	'_Ifx_SRC_GPSI5',0,4,148,4,25,32,13
	.byte	'PSI5',0
	.word	58405
	.byte	32,2,35,0,0,14
	.word	58410
	.byte	33
	.byte	'Ifx_SRC_GPSI5',0,4,151,4,3
	.word	58446
	.byte	18,32
	.word	55706
	.byte	19,0,0,14
	.word	58474
	.byte	10
	.byte	'_Ifx_SRC_GPSI5S',0,4,154,4,25,32,13
	.byte	'PSI5S',0
	.word	58483
	.byte	32,2,35,0,0,14
	.word	58488
	.byte	33
	.byte	'Ifx_SRC_GPSI5S',0,4,157,4,3
	.word	58526
	.byte	18,96
	.word	55768
	.byte	19,3,0,14
	.word	58555
	.byte	10
	.byte	'_Ifx_SRC_GQSPI',0,4,160,4,25,96,13
	.byte	'QSPI',0
	.word	58564
	.byte	96,2,35,0,0,14
	.word	58569
	.byte	33
	.byte	'Ifx_SRC_GQSPI',0,4,163,4,3
	.word	58605
	.byte	18,4
	.word	55888
	.byte	19,0,0,14
	.word	58633
	.byte	10
	.byte	'_Ifx_SRC_GSCR',0,4,166,4,25,4,13
	.byte	'SCR',0
	.word	58642
	.byte	4,2,35,0,0,14
	.word	58647
	.byte	33
	.byte	'Ifx_SRC_GSCR',0,4,169,4,3
	.word	58681
	.byte	14
	.word	55946
	.byte	10
	.byte	'_Ifx_SRC_GSCU',0,4,172,4,25,20,13
	.byte	'SCU',0
	.word	58708
	.byte	20,2,35,0,0,14
	.word	58713
	.byte	33
	.byte	'Ifx_SRC_GSCU',0,4,175,4,3
	.word	58747
	.byte	18,24
	.word	56027
	.byte	19,0,0,14
	.word	58774
	.byte	10
	.byte	'_Ifx_SRC_GSENT',0,4,178,4,25,24,13
	.byte	'SENT',0
	.word	58783
	.byte	24,2,35,0,0,14
	.word	58788
	.byte	33
	.byte	'Ifx_SRC_GSENT',0,4,181,4,3
	.word	58824
	.byte	18,12
	.word	56087
	.byte	19,0,0,14
	.word	58852
	.byte	10
	.byte	'_Ifx_SRC_GSMU',0,4,184,4,25,12,13
	.byte	'SMU',0
	.word	58861
	.byte	12,2,35,0,0,14
	.word	58866
	.byte	33
	.byte	'Ifx_SRC_GSMU',0,4,187,4,3
	.word	58900
	.byte	18,16
	.word	56145
	.byte	19,1,0,14
	.word	58927
	.byte	10
	.byte	'_Ifx_SRC_GSTM',0,4,190,4,25,16,13
	.byte	'STM',0
	.word	58936
	.byte	16,2,35,0,0,14
	.word	58941
	.byte	33
	.byte	'Ifx_SRC_GSTM',0,4,193,4,3
	.word	58975
	.byte	18,64
	.word	56321
	.byte	19,3,0,14
	.word	59002
	.byte	18,224,1
	.word	428
	.byte	19,223,1,0,18,32
	.word	56217
	.byte	19,1,0,14
	.word	59027
	.byte	10
	.byte	'_Ifx_SRC_GVADC',0,4,196,4,25,192,2,13
	.byte	'G',0
	.word	59011
	.byte	64,2,35,0,13
	.byte	'reserved_40',0
	.word	59016
	.byte	224,1,2,35,64,13
	.byte	'CG',0
	.word	59036
	.byte	32,3,35,160,2,0,14
	.word	59041
	.byte	33
	.byte	'Ifx_SRC_GVADC',0,4,201,4,3
	.word	59110
	.byte	14
	.word	56423
	.byte	10
	.byte	'_Ifx_SRC_GXBAR',0,4,204,4,25,4,13
	.byte	'XBAR',0
	.word	59138
	.byte	4,2,35,0,0,14
	.word	59143
	.byte	33
	.byte	'Ifx_SRC_GXBAR',0,4,207,4,3
	.word	59179
	.byte	33
	.byte	'IfxHssl_ChannelId',0,11,83,3
	.word	21056
	.byte	33
	.byte	'IfxHssl_DataLength',0,11,132,1,3
	.word	24355
	.byte	15,11,137,1,9,1,16
	.byte	'IfxHssl_Hsct_InterruptSource_headerError',0,1,16
	.byte	'IfxHssl_Hsct_InterruptSource_payloadError',0,2,16
	.byte	'IfxHssl_Hsct_InterruptSource_commandError',0,3,16
	.byte	'IfxHssl_Hsct_InterruptSource_interfaceControlFrameSend',0,4,16
	.byte	'IfxHssl_Hsct_InterruptSource_speedModeSwitchError',0,5,16
	.byte	'IfxHssl_Hsct_InterruptSource_unsolicitedMessageSendFinished',0,6,16
	.byte	'IfxHssl_Hsct_InterruptSource_pllLockLosterror',0,7,16
	.byte	'IfxHssl_Hsct_InterruptSource_UnsolicitedMessageReceived',0,8,16
	.byte	'IfxHssl_Hsct_InterruptSource_pingAnswerReceived',0,9,16
	.byte	'IfxHssl_Hsct_InterruptSource_txTransferError',0,10,16
	.byte	'IfxHssl_Hsct_InterruptSource_synchronizationFifoOverflow',0,11,16
	.byte	'IfxHssl_Hsct_InterruptSource_synchronizationFifoUnderflow',0,12,0,33
	.byte	'IfxHssl_Hsct_InterruptSource',0,11,154,1,3
	.word	59261
	.byte	15,11,159,1,9,1,16
	.byte	'IfxHssl_Hsct_SleepMode_enable',0,0,16
	.byte	'IfxHssl_Hsct_SleepMode_disable',0,1,0,33
	.byte	'IfxHssl_Hsct_SleepMode',0,11,163,1,3
	.word	59930
	.byte	15,11,168,1,9,1,16
	.byte	'IfxHssl_Hssl_SleepMode_enable',0,0,16
	.byte	'IfxHssl_Hssl_SleepMode_disable',0,1,0,33
	.byte	'IfxHssl_Hssl_SleepMode',0,11,172,1,3
	.word	60034
	.byte	33
	.byte	'IfxHssl_InterfaceMode',0,11,181,1,3
	.word	23471
	.byte	15,11,186,1,9,1,16
	.byte	'IfxHssl_MasterModeRxSpeed_lowSpeed',0,0,16
	.byte	'IfxHssl_MasterModeRxSpeed_mediumSpeed',0,1,16
	.byte	'IfxHssl_MasterModeRxSpeed_highSpeed',0,2,0,33
	.byte	'IfxHssl_MasterModeRxSpeed',0,11,191,1,3
	.word	60169
	.byte	15,11,196,1,9,1,16
	.byte	'IfxHssl_MasterModeTxSpeed_lowSpeed',0,0,16
	.byte	'IfxHssl_MasterModeTxSpeed_highSpeed',0,2,0,33
	.byte	'IfxHssl_MasterModeTxSpeed',0,11,200,1,3
	.word	60326
	.byte	33
	.byte	'IfxHssl_StreamingMode',0,11,218,1,3
	.word	21347
	.byte	15,11,222,1,9,1,16
	.byte	'IfxHssl_SuspendMode_none',0,0,16
	.byte	'IfxHssl_SuspendMode_hard',0,1,16
	.byte	'IfxHssl_SuspendMode_soft',0,2,0,33
	.byte	'IfxHssl_SuspendMode',0,11,227,1,3
	.word	60474
	.byte	15,11,234,1,9,1,16
	.byte	'IfxHssl_Hssl_ERRInterruptSource_notAcknowledgeError',0,0,16
	.byte	'IfxHssl_Hssl_ERRInterruptSource_transactionTagError',0,4,16
	.byte	'IfxHssl_Hssl_ERRInterruptSource_timeoutError',0,8,16
	.byte	'IfxHssl_Hssl_ERRInterruptSource_unexpectedError',0,12,0,33
	.byte	'IfxHssl_Hssl_ERRInterruptSource',0,11,240,1,3
	.word	60591
	.byte	15,11,245,1,9,1,16
	.byte	'IfxHssl_Hssl_EXIInterruptSource_memoryAccessViolation',0,21,16
	.byte	'IfxHssl_Hssl_EXIInterruptSource_busAccessError',0,22,16
	.byte	'IfxHssl_Hssl_EXIInterruptSource_channelNumberCodeError',0,23,16
	.byte	'IfxHssl_Hssl_EXIInterruptSource_dataLengthError',0,24,16
	.byte	'IfxHssl_Hssl_EXIInterruptSource_crcError',0,25,0,33
	.byte	'IfxHssl_Hssl_EXIInterruptSource',0,11,253,1,3
	.word	60844
	.byte	33
	.byte	'IfxHssl_Hsct',0,11,139,2,3
	.word	23427
	.byte	33
	.byte	'IfxHssl_Hsct_Config',0,11,149,2,3
	.word	23539
	.byte	33
	.byte	'Ifx_P_ACCEN0_Bits',0,7,79,3
	.word	7600
	.byte	33
	.byte	'Ifx_P_ACCEN1_Bits',0,7,85,3
	.word	7513
	.byte	33
	.byte	'Ifx_P_ESR_Bits',0,7,107,3
	.word	3856
	.byte	33
	.byte	'Ifx_P_ID_Bits',0,7,115,3
	.word	1909
	.byte	33
	.byte	'Ifx_P_IN_Bits',0,7,137,1,3
	.word	2904
	.byte	33
	.byte	'Ifx_P_IOCR0_Bits',0,7,150,1,3
	.word	2037
	.byte	33
	.byte	'Ifx_P_IOCR12_Bits',0,7,163,1,3
	.word	2684
	.byte	33
	.byte	'Ifx_P_IOCR4_Bits',0,7,176,1,3
	.word	2252
	.byte	33
	.byte	'Ifx_P_IOCR8_Bits',0,7,189,1,3
	.word	2467
	.byte	33
	.byte	'Ifx_P_LPCR0_Bits',0,7,197,1,3
	.word	6872
	.byte	33
	.byte	'Ifx_P_LPCR1_Bits',0,7,205,1,3
	.word	6996
	.byte	33
	.byte	'Ifx_P_LPCR1_P21_Bits',0,7,215,1,3
	.word	7080
	.byte	33
	.byte	'Ifx_P_LPCR2_Bits',0,7,229,1,3
	.word	7260
	.byte	33
	.byte	'Ifx_P_OMCR0_Bits',0,7,240,1,3
	.word	5511
	.byte	33
	.byte	'Ifx_P_OMCR12_Bits',0,7,250,1,3
	.word	6035
	.byte	33
	.byte	'Ifx_P_OMCR4_Bits',0,7,133,2,3
	.word	5685
	.byte	33
	.byte	'Ifx_P_OMCR8_Bits',0,7,144,2,3
	.word	5859
	.byte	33
	.byte	'Ifx_P_OMCR_Bits',0,7,166,2,3
	.word	6524
	.byte	33
	.byte	'Ifx_P_OMR_Bits',0,7,203,2,3
	.word	1338
	.byte	33
	.byte	'Ifx_P_OMSR0_Bits',0,7,213,2,3
	.word	4848
	.byte	33
	.byte	'Ifx_P_OMSR12_Bits',0,7,224,2,3
	.word	5336
	.byte	33
	.byte	'Ifx_P_OMSR4_Bits',0,7,235,2,3
	.word	4995
	.byte	33
	.byte	'Ifx_P_OMSR8_Bits',0,7,246,2,3
	.word	5164
	.byte	33
	.byte	'Ifx_P_OMSR_Bits',0,7,140,3,3
	.word	6191
	.byte	33
	.byte	'Ifx_P_OUT_Bits',0,7,162,3,3
	.word	1022
	.byte	33
	.byte	'Ifx_P_PCSR_Bits',0,7,180,3,3
	.word	4562
	.byte	33
	.byte	'Ifx_P_PDISC_Bits',0,7,202,3,3
	.word	4196
	.byte	33
	.byte	'Ifx_P_PDR0_Bits',0,7,223,3,3
	.word	3227
	.byte	33
	.byte	'Ifx_P_PDR1_Bits',0,7,244,3,3
	.word	3531
	.byte	33
	.byte	'Ifx_P_ACCEN0',0,7,129,4,3
	.word	8127
	.byte	33
	.byte	'Ifx_P_ACCEN1',0,7,137,4,3
	.word	7560
	.byte	33
	.byte	'Ifx_P_ESR',0,7,145,4,3
	.word	4147
	.byte	33
	.byte	'Ifx_P_ID',0,7,153,4,3
	.word	1988
	.byte	33
	.byte	'Ifx_P_IN',0,7,161,4,3
	.word	3178
	.byte	33
	.byte	'Ifx_P_IOCR0',0,7,169,4,3
	.word	2212
	.byte	33
	.byte	'Ifx_P_IOCR12',0,7,177,4,3
	.word	2864
	.byte	33
	.byte	'Ifx_P_IOCR4',0,7,185,4,3
	.word	2427
	.byte	33
	.byte	'Ifx_P_IOCR8',0,7,193,4,3
	.word	2644
	.byte	33
	.byte	'Ifx_P_LPCR0',0,7,201,4,3
	.word	6956
	.byte	33
	.byte	'Ifx_P_LPCR1',0,7,210,4,3
	.word	7205
	.byte	33
	.byte	'Ifx_P_LPCR2',0,7,218,4,3
	.word	7464
	.byte	33
	.byte	'Ifx_P_OMCR',0,7,226,4,3
	.word	6832
	.byte	33
	.byte	'Ifx_P_OMCR0',0,7,234,4,3
	.word	5645
	.byte	33
	.byte	'Ifx_P_OMCR12',0,7,242,4,3
	.word	6151
	.byte	33
	.byte	'Ifx_P_OMCR4',0,7,250,4,3
	.word	5819
	.byte	33
	.byte	'Ifx_P_OMCR8',0,7,130,5,3
	.word	5995
	.byte	33
	.byte	'Ifx_P_OMR',0,7,138,5,3
	.word	1869
	.byte	33
	.byte	'Ifx_P_OMSR',0,7,146,5,3
	.word	6484
	.byte	33
	.byte	'Ifx_P_OMSR0',0,7,154,5,3
	.word	4955
	.byte	33
	.byte	'Ifx_P_OMSR12',0,7,162,5,3
	.word	5471
	.byte	33
	.byte	'Ifx_P_OMSR4',0,7,170,5,3
	.word	5124
	.byte	33
	.byte	'Ifx_P_OMSR8',0,7,178,5,3
	.word	5296
	.byte	33
	.byte	'Ifx_P_OUT',0,7,186,5,3
	.word	1298
	.byte	33
	.byte	'Ifx_P_PCSR',0,7,194,5,3
	.word	4808
	.byte	33
	.byte	'Ifx_P_PDISC',0,7,202,5,3
	.word	4522
	.byte	33
	.byte	'Ifx_P_PDR0',0,7,210,5,3
	.word	3491
	.byte	33
	.byte	'Ifx_P_PDR1',0,7,218,5,3
	.word	3807
	.byte	14
	.word	8167
	.byte	33
	.byte	'Ifx_P',0,7,139,6,3
	.word	62516
	.byte	33
	.byte	'IfxPort_InputMode',0,6,89,3
	.word	8780
	.byte	33
	.byte	'IfxPort_Mode',0,6,116,3
	.word	22183
	.byte	33
	.byte	'IfxPort_OutputIdx',0,6,130,1,3
	.word	9055
	.byte	33
	.byte	'IfxPort_OutputMode',0,6,138,1,3
	.word	8985
	.byte	33
	.byte	'IfxPort_PadDriver',0,6,158,1,3
	.word	22927
	.byte	33
	.byte	'IfxPort_State',0,6,178,1,3
	.word	9368
	.byte	33
	.byte	'IfxHssl_Hssl_FrameRequest',0,8,203,3,3
	.word	21150
	.byte	33
	.byte	'IfxHssl_Hssl_Status',0,8,212,3,3
	.word	24268
	.byte	33
	.byte	'IfxHssl_Hssl_AccessWindow',0,8,228,3,3
	.word	23963
	.byte	33
	.byte	'IfxHssl_Hssl_errorFlags',0,8,245,3,3
	.word	23639
	.byte	33
	.byte	'IfxHssl_Hssl',0,8,128,4,3
	.word	23899
	.byte	33
	.byte	'IfxHssl_Hssl_Channel',0,8,141,4,3
	.word	21420
	.byte	33
	.byte	'IfxHssl_Hssl_ChannelConfig',0,8,152,4,3
	.word	24146
	.byte	33
	.byte	'IfxHssl_Hssl_Config',0,8,164,4,3
	.word	23998
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L130:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,39,12,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,36,0,3,8,11,15,62
	.byte	15,0,0,8,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,9,59,0,3,8,0,0,10,19,1,3,8,58,15,59,15
	.byte	57,15,11,15,0,0,11,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,12,23,1,58,15,59,15,57,15,11,15,0,0,13,13
	.byte	0,3,8,73,19,11,15,56,9,0,0,14,53,0,73,19,0,0,15,4,1,58,15,59,15,57,15,11,15,0,0,16,40,0,3,8,28,13,0,0
	.byte	17,11,1,0,0,18,1,1,11,15,73,19,0,0,19,33,0,47,15,0,0,20,19,1,58,15,59,15,57,15,11,15,0,0,21,38,0,73,19
	.byte	0,0,22,46,1,3,8,54,15,39,12,63,12,60,12,0,0,23,5,0,73,19,0,0,24,46,1,3,8,73,19,54,15,39,12,63,12,60,12
	.byte	0,0,25,5,0,3,8,73,19,0,0,26,46,0,3,8,54,15,39,12,63,12,60,12,0,0,27,46,1,49,19,0,0,28,5,0,49,19,0,0,29
	.byte	46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,30,46,0,3,8,58,15,59,15,57,15,73,19,54,15,39,12
	.byte	63,12,60,12,0,0,31,29,1,49,19,0,0,32,11,0,49,19,0,0,33,22,0,3,8,58,15,59,15,57,15,73,19,0,0,34,21,0,54
	.byte	15,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L131:
	.word	.L458-.L457
.L457:
	.half	3
	.word	.L460-.L459
.L459:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Std',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std',0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu_Intrinsics.h',0,1,0,0
	.byte	'IfxSrc.h',0,2,0,0
	.byte	'IfxSrc_regdef.h',0,3,0,0
	.byte	'IfxSrc_cfg.h',0,4,0,0
	.byte	'IfxPort.h',0,5,0,0
	.byte	'IfxPort_regdef.h',0,3,0,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.h',0,0,0,0
	.byte	'IfxHssl_regdef.h',0,3,0,0
	.byte	'IfxHsct_regdef.h',0,3,0,0
	.byte	'IfxHssl.h',0,6,0,0
	.byte	'IfxScuWdt.h',0,7,0,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0,0,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Ifx_Types.h',0,1,0,0
	.byte	'IfxScu_cfg.h',0,4,0,0
	.byte	'IfxScu_regdef.h',0,3,0,0,0
.L460:
.L458:
	.sdecl	'.debug_info',debug,cluster('IfxHssl_Hssl_initHsctModule')
	.sect	'.debug_info'
.L132:
	.word	675
	.half	3
	.word	.L133
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L135,.L134
	.byte	2
	.word	.L128
	.byte	3
	.byte	'IfxHssl_Hssl_initHsctModule',0,1,160,1,6,1,1,1
	.word	.L107,.L212,.L106
	.byte	4
	.byte	'hsct',0,1,160,1,48
	.word	.L213,.L214
	.byte	4
	.byte	'config',0,1,160,1,81
	.word	.L215,.L216
	.byte	5
	.word	.L107,.L212
	.byte	6
	.byte	'hsctSFR',0,1,162,1,15
	.word	.L217,.L218
	.byte	7
	.word	.L219,.L220,.L221
	.byte	8
	.word	.L222,.L223
	.byte	8
	.word	.L224,.L225
	.byte	8
	.word	.L226,.L227
	.byte	9
	.word	.L228,.L220,.L221
	.byte	0,7
	.word	.L219,.L229,.L230
	.byte	8
	.word	.L222,.L223
	.byte	8
	.word	.L224,.L225
	.byte	8
	.word	.L226,.L227
	.byte	9
	.word	.L228,.L229,.L230
	.byte	0,7
	.word	.L231,.L232,.L233
	.byte	8
	.word	.L234,.L235
	.byte	8
	.word	.L236,.L237
	.byte	8
	.word	.L238,.L239
	.byte	8
	.word	.L240,.L241
	.byte	9
	.word	.L242,.L232,.L233
	.byte	0,7
	.word	.L231,.L243,.L244
	.byte	8
	.word	.L234,.L235
	.byte	8
	.word	.L236,.L237
	.byte	8
	.word	.L238,.L239
	.byte	8
	.word	.L240,.L241
	.byte	9
	.word	.L242,.L243,.L244
	.byte	0,7
	.word	.L231,.L245,.L246
	.byte	8
	.word	.L234,.L235
	.byte	8
	.word	.L236,.L237
	.byte	8
	.word	.L238,.L239
	.byte	8
	.word	.L240,.L241
	.byte	9
	.word	.L242,.L245,.L246
	.byte	0,7
	.word	.L219,.L247,.L15
	.byte	8
	.word	.L222,.L223
	.byte	8
	.word	.L224,.L225
	.byte	8
	.word	.L226,.L227
	.byte	9
	.word	.L228,.L247,.L15
	.byte	0,5
	.word	.L248,.L16
	.byte	6
	.byte	'psw',0,1,188,1,16
	.word	.L249,.L250
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxHssl_Hssl_initHsctModule')
	.sect	'.debug_abbrev'
.L133:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxHssl_Hssl_initHsctModule')
	.sect	'.debug_line'
.L134:
	.word	.L462-.L461
.L461:
	.half	3
	.word	.L464-.L463
.L463:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std',0
	.byte	0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0,0,0,0
	.byte	'IfxPort.h',0,1,0,0,0
.L464:
	.byte	5,6,7,0,5,2
	.word	.L107
	.byte	3,159,1,1,5,31,9
	.half	.L349-.L107
	.byte	3,2,1,5,20,9
	.half	.L350-.L349
	.byte	3,2,1,5,28,9
	.half	.L465-.L350
	.byte	3,1,1,5,20,9
	.half	.L466-.L465
	.byte	1,5,30,9
	.half	.L467-.L466
	.byte	3,4,1,5,42,9
	.half	.L468-.L467
	.byte	1,5,45,9
	.half	.L469-.L468
	.byte	1,4,2,5,40,9
	.half	.L220-.L469
	.byte	3,157,3,1,4,1,5,30,9
	.half	.L221-.L220
	.byte	3,228,124,1,5,42,9
	.half	.L470-.L221
	.byte	1,5,45,9
	.half	.L471-.L470
	.byte	1,4,2,5,40,9
	.half	.L229-.L471
	.byte	3,156,3,1,4,1,5,31,9
	.half	.L230-.L229
	.byte	3,229,124,1,5,43,9
	.half	.L472-.L230
	.byte	1,5,46,9
	.half	.L473-.L472
	.byte	1,5,75,9
	.half	.L474-.L473
	.byte	1,4,2,5,61,9
	.half	.L232-.L474
	.byte	3,161,3,1,5,40,9
	.half	.L475-.L232
	.byte	1,4,1,5,31,9
	.half	.L233-.L475
	.byte	3,224,124,1,5,43,9
	.half	.L476-.L233
	.byte	1,5,46,9
	.half	.L477-.L476
	.byte	1,5,75,9
	.half	.L478-.L477
	.byte	1,4,2,5,61,9
	.half	.L243-.L478
	.byte	3,160,3,1,5,40,9
	.half	.L479-.L243
	.byte	1,4,1,5,15,9
	.half	.L244-.L479
	.byte	3,227,124,1,5,5,9
	.half	.L480-.L244
	.byte	1,5,35,7,9
	.half	.L481-.L480
	.byte	3,2,1,5,47,9
	.half	.L482-.L481
	.byte	1,5,50,9
	.half	.L483-.L482
	.byte	1,5,79,9
	.half	.L484-.L483
	.byte	1,4,2,5,61,9
	.half	.L245-.L484
	.byte	3,155,3,1,5,40,9
	.half	.L485-.L245
	.byte	1,4,1,5,34,9
	.half	.L246-.L485
	.byte	3,230,124,1,5,46,9
	.half	.L486-.L246
	.byte	1,5,49,9
	.half	.L487-.L486
	.byte	1,5,102,9
	.half	.L488-.L487
	.byte	3,127,1,5,34,9
	.half	.L14-.L488
	.byte	3,5,1,5,46,9
	.half	.L489-.L14
	.byte	1,5,49,9
	.half	.L490-.L489
	.byte	1,4,2,5,40,9
	.half	.L247-.L490
	.byte	3,144,3,1,4,1,5,15,9
	.half	.L15-.L247
	.byte	3,243,124,1,5,5,9
	.half	.L491-.L15
	.byte	1,5,54,7,9
	.half	.L248-.L491
	.byte	3,3,1,5,20,9
	.half	.L351-.L248
	.byte	1,5,35,9
	.half	.L353-.L351
	.byte	3,1,1,5,24,9
	.half	.L354-.L353
	.byte	3,2,1,5,35,9
	.half	.L492-.L354
	.byte	1,5,24,9
	.half	.L493-.L492
	.byte	3,1,1,5,35,9
	.half	.L494-.L493
	.byte	1,5,20,9
	.half	.L495-.L494
	.byte	3,2,1,5,35,9
	.half	.L496-.L495
	.byte	1,5,20,9
	.half	.L497-.L496
	.byte	3,1,1,5,35,9
	.half	.L498-.L497
	.byte	1,5,20,9
	.half	.L499-.L498
	.byte	3,1,1,5,35,9
	.half	.L500-.L499
	.byte	1,5,33,9
	.half	.L501-.L500
	.byte	3,2,1,5,30,9
	.half	.L16-.L501
	.byte	3,6,1,5,22,9
	.half	.L357-.L16
	.byte	3,2,1,5,31,9
	.half	.L502-.L357
	.byte	1,5,15,9
	.half	.L503-.L502
	.byte	3,3,1,5,5,9
	.half	.L504-.L503
	.byte	1,5,24,7,9
	.half	.L505-.L504
	.byte	3,2,1,5,39,9
	.half	.L506-.L505
	.byte	1,5,24,9
	.half	.L507-.L506
	.byte	3,1,1,5,39,9
	.half	.L508-.L507
	.byte	1,5,24,9
	.half	.L509-.L508
	.byte	3,1,1,5,39,9
	.half	.L510-.L509
	.byte	1,5,29,9
	.half	.L511-.L510
	.byte	3,1,1,5,39,9
	.half	.L512-.L511
	.byte	1,5,29,9
	.half	.L513-.L512
	.byte	3,1,1,5,39,9
	.half	.L514-.L513
	.byte	1,5,29,9
	.half	.L515-.L514
	.byte	3,1,1,5,41,9
	.half	.L516-.L515
	.byte	1,5,39,9
	.half	.L517-.L516
	.byte	1,5,68,9
	.half	.L518-.L517
	.byte	3,123,1,5,24,9
	.half	.L17-.L518
	.byte	3,11,1,5,39,9
	.half	.L519-.L17
	.byte	1,5,24,9
	.half	.L520-.L519
	.byte	3,1,1,5,39,9
	.half	.L521-.L520
	.byte	1,5,24,9
	.half	.L522-.L521
	.byte	3,1,1,5,39,9
	.half	.L523-.L522
	.byte	1,5,29,9
	.half	.L524-.L523
	.byte	3,1,1,5,39,9
	.half	.L525-.L524
	.byte	1,5,29,9
	.half	.L526-.L525
	.byte	3,1,1,5,39,9
	.half	.L527-.L526
	.byte	1,5,29,9
	.half	.L528-.L527
	.byte	3,1,1,5,39,9
	.half	.L529-.L528
	.byte	1,5,29,9
	.half	.L530-.L529
	.byte	3,1,1,5,41,9
	.half	.L531-.L530
	.byte	1,5,39,9
	.half	.L532-.L531
	.byte	1,5,26,9
	.half	.L533-.L532
	.byte	3,1,1,5,39,9
	.half	.L534-.L533
	.byte	1,5,26,9
	.half	.L535-.L534
	.byte	3,1,1,5,39,9
	.half	.L536-.L535
	.byte	1,5,19,9
	.half	.L537-.L536
	.byte	3,3,1,5,9,9
	.half	.L538-.L537
	.byte	1,5,30,7,9
	.half	.L539-.L538
	.byte	3,2,1,5,40,9
	.half	.L540-.L539
	.byte	1,5,30,9
	.half	.L541-.L540
	.byte	3,1,1,5,40,9
	.half	.L542-.L541
	.byte	1,5,45,9
	.half	.L19-.L542
	.byte	3,3,1,5,34,9
	.half	.L20-.L19
	.byte	1,5,45,9
	.half	.L543-.L20
	.byte	1,5,26,7,9
	.half	.L18-.L543
	.byte	3,4,1,5,24,9
	.half	.L544-.L18
	.byte	1,5,1,9
	.half	.L545-.L544
	.byte	3,1,1,7,9
	.half	.L136-.L545
	.byte	0,1,1
.L462:
	.sdecl	'.debug_ranges',debug,cluster('IfxHssl_Hssl_initHsctModule')
	.sect	'.debug_ranges'
.L135:
	.word	-1,.L107,0,.L136-.L107,0,0
	.sdecl	'.debug_info',debug,cluster('IfxHssl_Hssl_initHsctModuleConfig')
	.sect	'.debug_info'
.L137:
	.word	281
	.half	3
	.word	.L138
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L140,.L139
	.byte	2
	.word	.L128
	.byte	3
	.byte	'IfxHssl_Hssl_initHsctModuleConfig',0,1,247,1,6,1,1,1
	.word	.L109,.L251,.L108
	.byte	4
	.byte	'config',0,1,247,1,61
	.word	.L252,.L253
	.byte	4
	.byte	'hsct',0,1,247,1,79
	.word	.L217,.L254
	.byte	5
	.word	.L109,.L251
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxHssl_Hssl_initHsctModuleConfig')
	.sect	'.debug_abbrev'
.L138:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxHssl_Hssl_initHsctModuleConfig')
	.sect	'.debug_line'
.L139:
	.word	.L547-.L546
.L546:
	.half	3
	.word	.L549-.L548
.L548:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0,0,0,0,0
.L549:
	.byte	5,18,7,0,5,2
	.word	.L109
	.byte	3,248,1,1,5,29,9
	.half	.L550-.L109
	.byte	3,3,1,5,27,9
	.half	.L551-.L550
	.byte	1,5,29,9
	.half	.L552-.L551
	.byte	3,3,1,5,27,9
	.half	.L553-.L552
	.byte	1,5,29,9
	.half	.L554-.L553
	.byte	3,2,1,5,27,9
	.half	.L555-.L554
	.byte	1,5,1,9
	.half	.L556-.L555
	.byte	3,1,1,7,9
	.half	.L141-.L556
	.byte	0,1,1
.L547:
	.sdecl	'.debug_ranges',debug,cluster('IfxHssl_Hssl_initHsctModuleConfig')
	.sect	'.debug_ranges'
.L140:
	.word	-1,.L109,0,.L141-.L109,0,0
	.sdecl	'.debug_info',debug,cluster('IfxHssl_Hssl_initHsslModule')
	.sect	'.debug_info'
.L142:
	.word	297
	.half	3
	.word	.L143
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L145,.L144
	.byte	2
	.word	.L128
	.byte	3
	.byte	'IfxHssl_Hssl_initHsslModule',0,1,133,2,6,1,1,1
	.word	.L111,.L255,.L110
	.byte	4
	.byte	'hssl',0,1,133,2,48
	.word	.L256,.L257
	.byte	4
	.byte	'config',0,1,133,2,81
	.word	.L258,.L259
	.byte	5
	.word	.L111,.L255
	.byte	6
	.byte	'hsslSFR',0,1,135,2,15
	.word	.L260,.L261
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxHssl_Hssl_initHsslModule')
	.sect	'.debug_abbrev'
.L143:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxHssl_Hssl_initHsslModule')
	.sect	'.debug_line'
.L144:
	.word	.L558-.L557
.L557:
	.half	3
	.word	.L560-.L559
.L559:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0,0,0,0,0
.L560:
	.byte	5,6,7,0,5,2
	.word	.L111
	.byte	3,132,2,1,5,31,9
	.half	.L360-.L111
	.byte	3,2,1,5,16,9
	.half	.L361-.L360
	.byte	3,2,1,5,30,9
	.half	.L561-.L361
	.byte	3,3,1,5,19,9
	.half	.L358-.L561
	.byte	3,1,1,5,35,9
	.half	.L562-.L358
	.byte	1,5,27,9
	.half	.L563-.L562
	.byte	1,5,19,9
	.half	.L564-.L563
	.byte	3,1,1,5,27,9
	.half	.L565-.L564
	.byte	1,5,53,9
	.half	.L566-.L565
	.byte	3,3,1,5,30,9
	.half	.L567-.L566
	.byte	1,5,53,9
	.half	.L568-.L567
	.byte	3,1,1,5,30,9
	.half	.L569-.L568
	.byte	1,5,53,9
	.half	.L570-.L569
	.byte	3,1,1,5,30,9
	.half	.L571-.L570
	.byte	1,5,53,9
	.half	.L572-.L571
	.byte	3,1,1,5,30,9
	.half	.L573-.L572
	.byte	1,5,53,9
	.half	.L574-.L573
	.byte	3,1,1,5,30,9
	.half	.L575-.L574
	.byte	1,5,53,9
	.half	.L576-.L575
	.byte	3,1,1,5,30,9
	.half	.L577-.L576
	.byte	1,5,53,9
	.half	.L578-.L577
	.byte	3,1,1,5,30,9
	.half	.L579-.L578
	.byte	1,5,53,9
	.half	.L580-.L579
	.byte	3,1,1,5,30,9
	.half	.L581-.L580
	.byte	1,5,32,9
	.half	.L582-.L581
	.byte	3,2,1,5,30,9
	.half	.L583-.L582
	.byte	1,5,24,9
	.half	.L584-.L583
	.byte	3,2,1,5,30,9
	.half	.L585-.L584
	.byte	1,5,40,9
	.half	.L586-.L585
	.byte	3,1,1,5,30,9
	.half	.L587-.L586
	.byte	1,5,33,9
	.half	.L588-.L587
	.byte	3,2,1,5,29,9
	.half	.L22-.L588
	.byte	1,5,33,9
	.half	.L589-.L22
	.byte	1,5,1,7,9
	.half	.L590-.L589
	.byte	3,2,1,7,9
	.half	.L146-.L590
	.byte	0,1,1
.L558:
	.sdecl	'.debug_ranges',debug,cluster('IfxHssl_Hssl_initHsslModule')
	.sect	'.debug_ranges'
.L145:
	.word	-1,.L111,0,.L146-.L111,0,0
	.sdecl	'.debug_info',debug,cluster('IfxHssl_Hssl_initHsslModuleConfig')
	.sect	'.debug_info'
.L147:
	.word	281
	.half	3
	.word	.L148
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L150,.L149
	.byte	2
	.word	.L128
	.byte	3
	.byte	'IfxHssl_Hssl_initHsslModuleConfig',0,1,164,2,6,1,1,1
	.word	.L113,.L262,.L112
	.byte	4
	.byte	'config',0,1,164,2,61
	.word	.L263,.L264
	.byte	4
	.byte	'hssl',0,1,164,2,79
	.word	.L260,.L265
	.byte	5
	.word	.L113,.L262
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxHssl_Hssl_initHsslModuleConfig')
	.sect	'.debug_abbrev'
.L148:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxHssl_Hssl_initHsslModuleConfig')
	.sect	'.debug_line'
.L149:
	.word	.L592-.L591
.L591:
	.half	3
	.word	.L594-.L593
.L593:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0,0,0,0,0
.L594:
	.byte	5,18,7,0,5,2
	.word	.L113
	.byte	3,165,2,1,5,35,9
	.half	.L595-.L113
	.byte	3,3,1,5,33,9
	.half	.L596-.L595
	.byte	1,5,35,9
	.half	.L597-.L596
	.byte	3,1,1,5,33,9
	.half	.L598-.L597
	.byte	1,5,35,9
	.half	.L599-.L598
	.byte	3,1,1,5,33,9
	.half	.L600-.L599
	.byte	1,5,35,9
	.half	.L601-.L600
	.byte	3,1,1,5,33,9
	.half	.L602-.L601
	.byte	1,5,35,9
	.half	.L603-.L602
	.byte	3,1,1,5,33,9
	.half	.L604-.L603
	.byte	1,5,35,9
	.half	.L605-.L604
	.byte	3,1,1,5,33,9
	.half	.L606-.L605
	.byte	1,5,35,9
	.half	.L607-.L606
	.byte	3,1,1,5,33,9
	.half	.L608-.L607
	.byte	1,5,35,9
	.half	.L609-.L608
	.byte	3,1,1,5,33,9
	.half	.L610-.L609
	.byte	1,5,26,9
	.half	.L611-.L610
	.byte	3,3,1,5,24,9
	.half	.L612-.L611
	.byte	1,5,1,9
	.half	.L613-.L612
	.byte	3,1,1,7,9
	.half	.L151-.L613
	.byte	0,1,1
.L592:
	.sdecl	'.debug_ranges',debug,cluster('IfxHssl_Hssl_initHsslModuleConfig')
	.sect	'.debug_ranges'
.L150:
	.word	-1,.L113,0,.L151-.L113,0,0
	.sdecl	'.debug_info',debug,cluster('IfxHssl_Hssl_initChannel')
	.sect	'.debug_info'
.L152:
	.word	282
	.half	3
	.word	.L153
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L155,.L154
	.byte	2
	.word	.L128
	.byte	3
	.byte	'IfxHssl_Hssl_initChannel',0,1,134,1,6,1,1,1
	.word	.L103,.L266,.L102
	.byte	4
	.byte	'channel',0,1,134,1,53
	.word	.L267,.L268
	.byte	4
	.byte	'channelConfig',0,1,134,1,96
	.word	.L269,.L270
	.byte	5
	.word	.L103,.L266
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxHssl_Hssl_initChannel')
	.sect	'.debug_abbrev'
.L153:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxHssl_Hssl_initChannel')
	.sect	'.debug_line'
.L154:
	.word	.L615-.L614
.L614:
	.half	3
	.word	.L617-.L616
.L616:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0,0,0,0,0
.L617:
	.byte	5,49,7,0,5,2
	.word	.L103
	.byte	3,135,1,1,5,34,9
	.half	.L618-.L103
	.byte	1,5,49,9
	.half	.L619-.L618
	.byte	3,1,1,5,34,9
	.half	.L620-.L619
	.byte	1,5,49,9
	.half	.L621-.L620
	.byte	3,2,1,5,34,9
	.half	.L622-.L621
	.byte	1,5,36,9
	.half	.L623-.L622
	.byte	3,1,1,5,34,9
	.half	.L624-.L623
	.byte	1,5,36,9
	.half	.L625-.L624
	.byte	3,2,1,5,34,9
	.half	.L626-.L625
	.byte	1,5,49,9
	.half	.L627-.L626
	.byte	3,1,1,5,34,9
	.half	.L628-.L627
	.byte	1,5,49,9
	.half	.L629-.L628
	.byte	3,1,1,5,34,9
	.half	.L630-.L629
	.byte	1,5,1,9
	.half	.L631-.L630
	.byte	3,1,1,7,9
	.half	.L156-.L631
	.byte	0,1,1
.L615:
	.sdecl	'.debug_ranges',debug,cluster('IfxHssl_Hssl_initChannel')
	.sect	'.debug_ranges'
.L155:
	.word	-1,.L103,0,.L156-.L103,0,0
	.sdecl	'.debug_info',debug,cluster('IfxHssl_Hssl_initChannelConfig')
	.sect	'.debug_info'
.L157:
	.word	303
	.half	3
	.word	.L158
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L160,.L159
	.byte	2
	.word	.L128
	.byte	3
	.byte	'IfxHssl_Hssl_initChannelConfig',0,1,148,1,6,1,1,1
	.word	.L105,.L271,.L104
	.byte	4
	.byte	'channelConfig',0,1,148,1,65
	.word	.L272,.L273
	.byte	4
	.byte	'hssl',0,1,148,1,94
	.word	.L256,.L274
	.byte	4
	.byte	'hsct',0,1,148,1,114
	.word	.L213,.L275
	.byte	5
	.word	.L105,.L271
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxHssl_Hssl_initChannelConfig')
	.sect	'.debug_abbrev'
.L158:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxHssl_Hssl_initChannelConfig')
	.sect	'.debug_line'
.L159:
	.word	.L633-.L632
.L632:
	.half	3
	.word	.L635-.L634
.L634:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0,0,0,0,0
.L635:
	.byte	5,40,7,0,5,2
	.word	.L105
	.byte	3,149,1,1,5,34,9
	.half	.L636-.L105
	.byte	1,5,40,9
	.half	.L637-.L636
	.byte	3,1,1,5,34,9
	.half	.L638-.L637
	.byte	1,5,36,9
	.half	.L639-.L638
	.byte	3,2,1,5,34,9
	.half	.L640-.L639
	.byte	1,5,36,9
	.half	.L641-.L640
	.byte	3,1,1,5,34,9
	.half	.L642-.L641
	.byte	1,5,40,9
	.half	.L643-.L642
	.byte	3,1,1,5,34,9
	.half	.L644-.L643
	.byte	1,5,40,9
	.half	.L645-.L644
	.byte	3,1,1,5,34,9
	.half	.L646-.L645
	.byte	1,5,1,9
	.half	.L647-.L646
	.byte	3,1,1,7,9
	.half	.L161-.L647
	.byte	0,1,1
.L633:
	.sdecl	'.debug_ranges',debug,cluster('IfxHssl_Hssl_initChannelConfig')
	.sect	'.debug_ranges'
.L160:
	.word	-1,.L105,0,.L161-.L105,0,0
	.sdecl	'.debug_info',debug,cluster('IfxHssl_Hssl_read')
	.sect	'.debug_info'
.L162:
	.word	316
	.half	3
	.word	.L163
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L165,.L164
	.byte	2
	.word	.L128
	.byte	3
	.byte	'IfxHssl_Hssl_read',0,1,170,3,21
	.word	.L276
	.byte	1,1,1
	.word	.L117,.L277,.L116
	.byte	4
	.byte	'channel',0,1,170,3,61
	.word	.L267,.L278
	.byte	4
	.byte	'address',0,1,170,3,77
	.word	.L279,.L280
	.byte	4
	.byte	'dataLength',0,1,170,3,105
	.word	.L281,.L282
	.byte	5
	.word	.L117,.L277
	.byte	6
	.byte	'data',0,1,172,3,12
	.word	.L279,.L283
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxHssl_Hssl_read')
	.sect	'.debug_abbrev'
.L163:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxHssl_Hssl_read')
	.sect	'.debug_line'
.L164:
	.word	.L649-.L648
.L648:
	.half	3
	.word	.L651-.L650
.L650:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0,0,0,0,0
.L651:
	.byte	5,21,7,0,5,2
	.word	.L117
	.byte	3,169,3,1,5,17,9
	.half	.L427-.L117
	.byte	3,2,1,5,53,9
	.half	.L428-.L427
	.byte	3,1,1,5,105,9
	.half	.L423-.L428
	.byte	1,5,5,9
	.half	.L424-.L423
	.byte	1,5,1,9
	.half	.L63-.L424
	.byte	3,1,1,7,9
	.half	.L166-.L63
	.byte	0,1,1
.L649:
	.sdecl	'.debug_ranges',debug,cluster('IfxHssl_Hssl_read')
	.sect	'.debug_ranges'
.L165:
	.word	-1,.L117,0,.L166-.L117,0,0
	.sdecl	'.debug_info',debug,cluster('IfxHssl_Hssl_sendControlCommand')
	.sect	'.debug_info'
.L167:
	.word	302
	.half	3
	.word	.L168
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L170,.L169
	.byte	2
	.word	.L128
	.byte	3
	.byte	'IfxHssl_Hssl_sendControlCommand',0,1,177,3,6,1,1,1
	.word	.L119,.L284,.L118
	.byte	4
	.byte	'hsct',0,1,177,3,52
	.word	.L213,.L285
	.byte	4
	.byte	'command',0,1,177,3,64
	.word	.L286,.L287
	.byte	5
	.word	.L119,.L284
	.byte	6
	.byte	'hsctSFR',0,1,179,3,15
	.word	.L217,.L288
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxHssl_Hssl_sendControlCommand')
	.sect	'.debug_abbrev'
.L168:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxHssl_Hssl_sendControlCommand')
	.sect	'.debug_line'
.L169:
	.word	.L653-.L652
.L652:
	.half	3
	.word	.L655-.L654
.L654:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0,0,0,0,0
.L655:
	.byte	5,29,7,0,5,2
	.word	.L119
	.byte	3,178,3,1,5,22,9
	.half	.L430-.L119
	.byte	3,2,1,5,29,9
	.half	.L656-.L430
	.byte	1,5,22,9
	.half	.L657-.L656
	.byte	3,1,1,5,29,9
	.half	.L658-.L657
	.byte	1,5,24,9
	.half	.L659-.L658
	.byte	3,2,1,5,1,9
	.half	.L429-.L659
	.byte	3,1,1,7,9
	.half	.L171-.L429
	.byte	0,1,1
.L653:
	.sdecl	'.debug_ranges',debug,cluster('IfxHssl_Hssl_sendControlCommand')
	.sect	'.debug_ranges'
.L170:
	.word	-1,.L119,0,.L171-.L119,0,0
	.sdecl	'.debug_info',debug,cluster('IfxHssl_Hssl_singleFrameRequest')
	.sect	'.debug_info'
.L172:
	.word	378
	.half	3
	.word	.L173
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L175,.L174
	.byte	2
	.word	.L128
	.byte	3
	.byte	'IfxHssl_Hssl_singleFrameRequest',0,1,188,3,21
	.word	.L276
	.byte	1,1,1
	.word	.L121,.L289,.L120
	.byte	4
	.byte	'channel',0,1,188,3,75
	.word	.L267,.L290
	.byte	4
	.byte	'frameRequest',0,1,188,3,110
	.word	.L291,.L292
	.byte	4
	.byte	'address',0,1,188,3,131,1
	.word	.L279,.L293
	.byte	4
	.byte	'data',0,1,188,3,147,1
	.word	.L279,.L294
	.byte	4
	.byte	'dataLength',0,1,188,3,172,1
	.word	.L281,.L295
	.byte	5
	.word	.L121,.L289
	.byte	6
	.byte	'hsslI',0,1,190,3,17
	.word	.L296,.L297
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxHssl_Hssl_singleFrameRequest')
	.sect	'.debug_abbrev'
.L173:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxHssl_Hssl_singleFrameRequest')
	.sect	'.debug_line'
.L174:
	.word	.L661-.L660
.L660:
	.half	3
	.word	.L663-.L662
.L662:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0,0,0,0,0
.L663:
	.byte	5,64,7,0,5,2
	.word	.L121
	.byte	3,189,3,1,5,56,9
	.half	.L664-.L121
	.byte	1,5,47,9
	.half	.L665-.L664
	.byte	1,5,56,9
	.half	.L666-.L665
	.byte	1,5,16,9
	.half	.L431-.L666
	.byte	3,2,1,5,5,9
	.half	.L667-.L431
	.byte	1,5,16,7,9
	.half	.L668-.L667
	.byte	3,2,1,5,9,9
	.half	.L669-.L668
	.byte	1,5,18,9
	.half	.L64-.L669
	.byte	3,3,1,5,26,9
	.half	.L670-.L64
	.byte	1,5,18,9
	.half	.L671-.L670
	.byte	3,1,1,5,26,9
	.half	.L672-.L671
	.byte	1,5,10,9
	.half	.L673-.L672
	.byte	3,4,1,9
	.half	.L674-.L673
	.byte	3,4,1,9
	.half	.L675-.L674
	.byte	3,5,1,9
	.half	.L676-.L675
	.byte	3,5,1,5,22,9
	.half	.L66-.L676
	.byte	3,115,1,5,27,9
	.half	.L677-.L66
	.byte	1,9
	.half	.L678-.L677
	.byte	3,1,1,5,9,9
	.half	.L679-.L678
	.byte	3,1,1,5,22,9
	.half	.L67-.L679
	.byte	3,2,1,5,27,9
	.half	.L680-.L67
	.byte	1,9
	.half	.L681-.L680
	.byte	3,1,1,9
	.half	.L682-.L681
	.byte	3,1,1,5,9,9
	.half	.L683-.L682
	.byte	3,1,1,5,22,9
	.half	.L68-.L683
	.byte	3,2,1,5,27,9
	.half	.L684-.L68
	.byte	1,9
	.half	.L685-.L684
	.byte	3,1,1,9
	.half	.L686-.L685
	.byte	3,1,1,5,9,9
	.half	.L687-.L686
	.byte	3,1,1,5,22,9
	.half	.L69-.L687
	.byte	3,3,1,5,27,9
	.half	.L688-.L69
	.byte	1,5,9,9
	.half	.L689-.L688
	.byte	3,1,1,5,16,9
	.half	.L70-.L689
	.byte	3,3,1,5,9,9
	.half	.L690-.L70
	.byte	1,5,34,9
	.half	.L71-.L690
	.byte	3,3,1,5,12,9
	.half	.L691-.L71
	.byte	3,2,1,5,5,9
	.half	.L692-.L691
	.byte	1,5,1,9
	.half	.L65-.L692
	.byte	3,1,1,7,9
	.half	.L176-.L65
	.byte	0,1,1
.L661:
	.sdecl	'.debug_ranges',debug,cluster('IfxHssl_Hssl_singleFrameRequest')
	.sect	'.debug_ranges'
.L175:
	.word	-1,.L121,0,.L176-.L121,0,0
	.sdecl	'.debug_info',debug,cluster('IfxHssl_Hssl_waitAcknowledge')
	.sect	'.debug_info'
.L177:
	.word	424
	.half	3
	.word	.L178
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L180,.L179
	.byte	2
	.word	.L128
	.byte	3
	.byte	'IfxHssl_Hssl_waitAcknowledge',0,1,231,3,21
	.word	.L276
	.byte	1,1,1
	.word	.L123,.L298,.L122
	.byte	4
	.byte	'channel',0,1,231,3,72
	.word	.L267,.L299
	.byte	5
	.word	.L123,.L298
	.byte	6
	.byte	'requestType',0,1,233,3,23
	.word	.L279,.L300
	.byte	6
	.byte	'channelId',0,1,234,3,23
	.word	.L301,.L302
	.byte	5
	.word	.L85,.L81
	.byte	6
	.byte	'qFlags',0,1,133,4,16
	.word	.L279,.L303
	.byte	6
	.byte	'mFlags',0,1,134,4,16
	.word	.L279,.L304
	.byte	6
	.byte	'acknwoledgeFlagsMask',0,1,135,4,16
	.word	.L279,.L305
	.byte	6
	.byte	'errorFlagsMask',0,1,136,4,16
	.word	.L279,.L306
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxHssl_Hssl_waitAcknowledge')
	.sect	'.debug_abbrev'
.L178:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxHssl_Hssl_waitAcknowledge')
	.sect	'.debug_line'
.L179:
	.word	.L694-.L693
.L693:
	.half	3
	.word	.L696-.L695
.L695:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0,0,0,0,0
.L696:
	.byte	5,44,7,0,5,2
	.word	.L123
	.byte	3,232,3,1,9
	.half	.L432-.L123
	.byte	3,1,1,5,9,9
	.half	.L434-.L432
	.byte	3,2,1,5,55,7,9
	.half	.L697-.L434
	.byte	1,5,68,9
	.half	.L698-.L697
	.byte	1,5,73,9
	.half	.L699-.L698
	.byte	1,5,43,7,9
	.half	.L700-.L699
	.byte	3,2,1,5,23,9
	.half	.L79-.L700
	.byte	1,5,39,9
	.half	.L701-.L79
	.byte	1,5,43,9
	.half	.L702-.L701
	.byte	1,7,9
	.half	.L703-.L702
	.byte	1,5,20,9
	.half	.L77-.L703
	.byte	3,7,1,5,9,9
	.half	.L704-.L77
	.byte	1,5,25,7,9
	.half	.L705-.L704
	.byte	3,2,1,5,21,9
	.half	.L82-.L705
	.byte	3,4,1,5,13,9
	.half	.L706-.L82
	.byte	1,5,94,7,9
	.half	.L707-.L706
	.byte	1,5,116,9
	.half	.L708-.L707
	.byte	1,5,25,7,9
	.half	.L83-.L708
	.byte	3,2,1,5,20,9
	.half	.L84-.L83
	.byte	3,3,1,5,9,9
	.half	.L709-.L84
	.byte	1,5,25,7,9
	.half	.L710-.L709
	.byte	3,2,1,5,46,9
	.half	.L85-.L710
	.byte	3,3,1,5,60,9
	.half	.L711-.L85
	.byte	1,5,46,9
	.half	.L436-.L711
	.byte	3,1,1,5,60,9
	.half	.L712-.L436
	.byte	1,5,70,9
	.half	.L438-.L712
	.byte	3,1,1,5,82,9
	.half	.L713-.L438
	.byte	1,5,60,9
	.half	.L714-.L713
	.byte	1,5,53,9
	.half	.L715-.L714
	.byte	1,5,92,9
	.half	.L433-.L715
	.byte	1,5,104,9
	.half	.L716-.L433
	.byte	1,5,94,9
	.half	.L717-.L716
	.byte	1,5,89,9
	.half	.L440-.L717
	.byte	1,5,56,9
	.half	.L718-.L440
	.byte	3,1,1,5,71,9
	.half	.L719-.L718
	.byte	1,5,61,9
	.half	.L720-.L719
	.byte	1,5,41,9
	.half	.L721-.L720
	.byte	1,5,53,9
	.half	.L441-.L721
	.byte	1,5,29,9
	.half	.L722-.L441
	.byte	3,2,1,5,20,9
	.half	.L723-.L722
	.byte	1,5,29,9
	.half	.L724-.L723
	.byte	1,5,47,9
	.half	.L725-.L724
	.byte	1,5,9,9
	.half	.L726-.L725
	.byte	1,5,20,7,9
	.half	.L727-.L726
	.byte	3,2,1,5,13,9
	.half	.L435-.L727
	.byte	1,5,20,9
	.half	.L86-.L435
	.byte	3,3,1,5,9,9
	.half	.L437-.L86
	.byte	1,5,20,7,9
	.half	.L728-.L437
	.byte	3,2,1,5,13,9
	.half	.L442-.L728
	.byte	1,5,20,9
	.half	.L88-.L442
	.byte	3,3,1,5,9,9
	.half	.L439-.L88
	.byte	1,5,44,7,9
	.half	.L729-.L439
	.byte	3,2,1,5,42,9
	.half	.L730-.L729
	.byte	1,5,20,9
	.half	.L731-.L730
	.byte	3,1,1,5,13,9
	.half	.L443-.L731
	.byte	1,5,40,9
	.half	.L90-.L443
	.byte	3,4,1,5,38,9
	.half	.L732-.L90
	.byte	1,5,12,9
	.half	.L81-.L732
	.byte	3,3,1,5,5,9
	.half	.L444-.L81
	.byte	1,5,1,9
	.half	.L87-.L444
	.byte	3,1,1,7,9
	.half	.L181-.L87
	.byte	0,1,1
.L694:
	.sdecl	'.debug_ranges',debug,cluster('IfxHssl_Hssl_waitAcknowledge')
	.sect	'.debug_ranges'
.L180:
	.word	-1,.L123,0,.L181-.L123,0,0
	.sdecl	'.debug_info',debug,cluster('IfxHssl_Hssl_write')
	.sect	'.debug_info'
.L182:
	.word	316
	.half	3
	.word	.L183
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L185,.L184
	.byte	2
	.word	.L128
	.byte	3
	.byte	'IfxHssl_Hssl_write',0,1,162,4,21
	.word	.L276
	.byte	1,1,1
	.word	.L125,.L307,.L124
	.byte	4
	.byte	'channel',0,1,162,4,62
	.word	.L267,.L308
	.byte	4
	.byte	'address',0,1,162,4,78
	.word	.L279,.L309
	.byte	4
	.byte	'data',0,1,162,4,94
	.word	.L279,.L310
	.byte	4
	.byte	'dataLength',0,1,162,4,119
	.word	.L281,.L311
	.byte	5
	.word	.L125,.L307
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxHssl_Hssl_write')
	.sect	'.debug_abbrev'
.L183:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxHssl_Hssl_write')
	.sect	'.debug_line'
.L184:
	.word	.L734-.L733
.L733:
	.half	3
	.word	.L736-.L735
.L735:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0,0,0,0,0
.L736:
	.byte	5,21,7,0,5,2
	.word	.L125
	.byte	3,161,4,1,5,53,9
	.half	.L451-.L125
	.byte	3,2,1,5,106,9
	.half	.L445-.L451
	.byte	1,5,5,9
	.half	.L446-.L445
	.byte	1,5,1,9
	.half	.L93-.L446
	.byte	3,1,1,7,9
	.half	.L186-.L93
	.byte	0,1,1
.L734:
	.sdecl	'.debug_ranges',debug,cluster('IfxHssl_Hssl_write')
	.sect	'.debug_ranges'
.L185:
	.word	-1,.L125,0,.L186-.L125,0,0
	.sdecl	'.debug_info',debug,cluster('IfxHssl_Hssl_checkErrors')
	.sect	'.debug_info'
.L187:
	.word	271
	.half	3
	.word	.L188
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L190,.L189
	.byte	2
	.word	.L128
	.byte	3
	.byte	'IfxHssl_Hssl_checkErrors',0,1,56,6,1,1,1
	.word	.L97,.L312,.L96
	.byte	4
	.byte	'hssl',0,1,56,45
	.word	.L256,.L313
	.byte	5
	.word	.L97,.L312
	.byte	6
	.byte	'hsslSFR',0,1,58,15
	.word	.L260,.L314
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxHssl_Hssl_checkErrors')
	.sect	'.debug_abbrev'
.L188:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxHssl_Hssl_checkErrors')
	.sect	'.debug_line'
.L189:
	.word	.L738-.L737
.L737:
	.half	3
	.word	.L740-.L739
.L739:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0,0,0,0,0
.L740:
	.byte	5,29,7,0,5,2
	.word	.L97
	.byte	3,57,1,5,26,9
	.half	.L346-.L97
	.byte	3,3,1,5,5,9
	.half	.L741-.L346
	.byte	1,5,25,7,9
	.half	.L742-.L741
	.byte	3,2,1,5,46,9
	.half	.L743-.L742
	.byte	1,5,26,9
	.half	.L2-.L743
	.byte	3,3,1,5,5,9
	.half	.L744-.L2
	.byte	1,5,25,7,9
	.half	.L745-.L744
	.byte	3,2,1,5,46,9
	.half	.L746-.L745
	.byte	1,5,26,9
	.half	.L3-.L746
	.byte	3,3,1,5,5,9
	.half	.L747-.L3
	.byte	1,5,25,7,9
	.half	.L748-.L747
	.byte	3,2,1,5,39,9
	.half	.L749-.L748
	.byte	1,5,26,9
	.half	.L4-.L749
	.byte	3,3,1,5,5,9
	.half	.L750-.L4
	.byte	1,5,25,7,9
	.half	.L751-.L750
	.byte	3,2,1,5,42,9
	.half	.L752-.L751
	.byte	1,5,26,9
	.half	.L5-.L752
	.byte	3,3,1,5,5,9
	.half	.L753-.L5
	.byte	1,5,25,7,9
	.half	.L754-.L753
	.byte	3,2,1,5,48,9
	.half	.L755-.L754
	.byte	1,5,26,9
	.half	.L6-.L755
	.byte	3,3,1,5,5,9
	.half	.L756-.L6
	.byte	1,5,25,7,9
	.half	.L757-.L756
	.byte	3,2,1,5,41,9
	.half	.L758-.L757
	.byte	1,5,26,9
	.half	.L7-.L758
	.byte	3,3,1,5,5,9
	.half	.L759-.L7
	.byte	1,5,25,7,9
	.half	.L760-.L759
	.byte	3,2,1,5,49,9
	.half	.L761-.L760
	.byte	1,5,26,9
	.half	.L8-.L761
	.byte	3,3,1,5,5,9
	.half	.L762-.L8
	.byte	1,5,25,7,9
	.half	.L763-.L762
	.byte	3,2,1,5,42,9
	.half	.L764-.L763
	.byte	1,5,26,9
	.half	.L9-.L764
	.byte	3,3,1,5,5,9
	.half	.L765-.L9
	.byte	1,5,25,7,9
	.half	.L766-.L765
	.byte	3,2,1,5,35,9
	.half	.L767-.L766
	.byte	1,5,1,9
	.half	.L10-.L767
	.byte	3,2,1,7,9
	.half	.L191-.L10
	.byte	0,1,1
.L738:
	.sdecl	'.debug_ranges',debug,cluster('IfxHssl_Hssl_checkErrors')
	.sect	'.debug_ranges'
.L190:
	.word	-1,.L97,0,.L191-.L97,0,0
	.sdecl	'.debug_info',debug,cluster('IfxHssl_Hssl_clearErrorFlags')
	.sect	'.debug_info'
.L192:
	.word	254
	.half	3
	.word	.L193
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L195,.L194
	.byte	2
	.word	.L128
	.byte	3
	.byte	'IfxHssl_Hssl_clearErrorFlags',0,1,108,6,1,1,1
	.word	.L99,.L315,.L98
	.byte	4
	.byte	'hssl',0,1,108,49
	.word	.L256,.L316
	.byte	5
	.word	.L99,.L315
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxHssl_Hssl_clearErrorFlags')
	.sect	'.debug_abbrev'
.L193:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxHssl_Hssl_clearErrorFlags')
	.sect	'.debug_line'
.L194:
	.word	.L769-.L768
.L768:
	.half	3
	.word	.L771-.L770
.L770:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0,0,0,0,0
.L771:
	.byte	5,21,7,0,5,2
	.word	.L99
	.byte	3,237,0,1,5,45,9
	.half	.L772-.L99
	.byte	1,5,21,9
	.half	.L773-.L772
	.byte	3,1,1,5,45,9
	.half	.L774-.L773
	.byte	1,5,21,9
	.half	.L775-.L774
	.byte	3,1,1,5,45,9
	.half	.L776-.L775
	.byte	1,5,21,9
	.half	.L777-.L776
	.byte	3,1,1,5,45,9
	.half	.L778-.L777
	.byte	1,5,21,9
	.half	.L779-.L778
	.byte	3,1,1,5,45,9
	.half	.L780-.L779
	.byte	1,5,21,9
	.half	.L781-.L780
	.byte	3,1,1,5,45,9
	.half	.L782-.L781
	.byte	1,5,21,9
	.half	.L783-.L782
	.byte	3,1,1,5,45,9
	.half	.L784-.L783
	.byte	1,5,21,9
	.half	.L785-.L784
	.byte	3,1,1,5,45,9
	.half	.L786-.L785
	.byte	1,5,21,9
	.half	.L787-.L786
	.byte	3,1,1,5,45,9
	.half	.L788-.L787
	.byte	1,5,1,9
	.half	.L789-.L788
	.byte	3,1,1,7,9
	.half	.L196-.L789
	.byte	0,1,1
.L769:
	.sdecl	'.debug_ranges',debug,cluster('IfxHssl_Hssl_clearErrorFlags')
	.sect	'.debug_ranges'
.L195:
	.word	-1,.L99,0,.L196-.L99,0,0
	.sdecl	'.debug_info',debug,cluster('IfxHssl_Hssl_delay')
	.sect	'.debug_info'
.L197:
	.word	259
	.half	3
	.word	.L198
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L200,.L199
	.byte	2
	.word	.L128
	.byte	3
	.byte	'IfxHssl_Hssl_delay',0,1,122,6,1,1,1
	.word	.L101,.L317,.L100
	.byte	4
	.byte	'hsct',0,1,122,39
	.word	.L213,.L318
	.byte	5
	.word	.L101,.L317
	.byte	6
	.byte	'i',0,1,124,12
	.word	.L279,.L319
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxHssl_Hssl_delay')
	.sect	'.debug_abbrev'
.L198:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxHssl_Hssl_delay')
	.sect	'.debug_line'
.L199:
	.word	.L791-.L790
.L790:
	.half	3
	.word	.L793-.L792
.L792:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0,0,0,0,0
.L793:
	.byte	5,5,7,0,5,2
	.word	.L101
	.byte	3,252,0,1,5,12,7,9
	.half	.L11-.L101
	.byte	3,2,1,5,25,9
	.half	.L347-.L11
	.byte	1,5,14,9
	.half	.L13-.L347
	.byte	3,2,1,5,28,9
	.half	.L794-.L13
	.byte	3,126,1,5,21,9
	.half	.L12-.L794
	.byte	1,5,25,9
	.half	.L795-.L12
	.byte	1,5,1,7,9
	.half	.L796-.L795
	.byte	3,4,1,7,9
	.half	.L201-.L796
	.byte	0,1,1
.L791:
	.sdecl	'.debug_ranges',debug,cluster('IfxHssl_Hssl_delay')
	.sect	'.debug_ranges'
.L200:
	.word	-1,.L101,0,.L201-.L101,0,0
	.sdecl	'.debug_info',debug,cluster('IfxHssl_Hssl_prepareStream')
	.sect	'.debug_info'
.L202:
	.word	469
	.half	3
	.word	.L203
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L205,.L204
	.byte	2
	.word	.L128
	.byte	3
	.byte	'IfxHssl_Hssl_prepareStream',0,1,183,2,21
	.word	.L276
	.byte	1,1,1
	.word	.L115,.L320,.L114
	.byte	4
	.byte	'channel',0,1,183,2,70
	.word	.L267,.L321
	.byte	4
	.byte	'slaveTargetAddress',0,1,183,2,86
	.word	.L279,.L322
	.byte	4
	.byte	'count',0,1,183,2,116
	.word	.L323,.L324
	.byte	5
	.word	.L115,.L320
	.byte	6
	.byte	'channelId',0,1,185,2,23
	.word	.L301,.L325
	.byte	6
	.byte	'tsfcReg',0,1,186,2,23
	.word	.L326,.L327
	.byte	7
	.word	.L328,.L329,.L34
	.byte	8
	.word	.L330,.L331
	.byte	9
	.word	.L332,.L329,.L34
	.byte	6
	.byte	'hsslI',0,2,135,6,17
	.word	.L296,.L333
	.byte	0,0,7
	.word	.L328,.L334,.L52
	.byte	8
	.word	.L330,.L331
	.byte	9
	.word	.L332,.L334,.L52
	.byte	6
	.byte	'hsslI',0,2,135,6,17
	.word	.L296,.L335
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxHssl_Hssl_prepareStream')
	.sect	'.debug_abbrev'
.L203:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17
	.byte	1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxHssl_Hssl_prepareStream')
	.sect	'.debug_line'
.L204:
	.word	.L798-.L797
.L797:
	.half	3
	.word	.L800-.L799
.L799:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0,0,0,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.h',0,0,0,0,0
.L800:
	.byte	5,21,7,0,5,2
	.word	.L115
	.byte	3,182,2,1,5,42,9
	.half	.L367-.L115
	.byte	3,2,1,5,5,9
	.half	.L368-.L367
	.byte	3,3,1,5,16,7,9
	.half	.L801-.L368
	.byte	3,2,1,5,9,9
	.half	.L802-.L801
	.byte	1,5,46,9
	.half	.L24-.L802
	.byte	3,4,1,5,100,9
	.half	.L364-.L24
	.byte	1,5,106,9
	.half	.L369-.L364
	.byte	1,5,138,1,9
	.half	.L363-.L369
	.byte	1,5,75,9
	.half	.L362-.L363
	.byte	3,2,1,5,42,9
	.half	.L27-.L362
	.byte	3,2,1,5,9,9
	.half	.L371-.L27
	.byte	1,5,20,7,9
	.half	.L803-.L371
	.byte	3,2,1,5,13,9
	.half	.L804-.L803
	.byte	1,5,41,9
	.half	.L26-.L804
	.byte	3,124,1,5,75,9
	.half	.L373-.L26
	.byte	1,5,48,7,9
	.half	.L805-.L373
	.byte	3,10,1,5,58,9
	.half	.L806-.L805
	.byte	1,5,63,9
	.half	.L807-.L806
	.byte	1,5,75,9
	.half	.L375-.L807
	.byte	3,2,1,5,42,9
	.half	.L31-.L375
	.byte	3,2,1,5,9,9
	.half	.L377-.L31
	.byte	1,5,20,7,9
	.half	.L808-.L377
	.byte	3,2,1,5,13,9
	.half	.L809-.L808
	.byte	1,5,41,9
	.half	.L30-.L809
	.byte	3,124,1,5,75,9
	.half	.L379-.L30
	.byte	1,4,2,5,64,7,9
	.half	.L329-.L379
	.byte	3,183,3,1,5,56,9
	.half	.L810-.L329
	.byte	1,5,47,9
	.half	.L811-.L810
	.byte	1,5,56,9
	.half	.L812-.L811
	.byte	1,5,22,9
	.half	.L380-.L812
	.byte	3,1,1,5,5,9
	.half	.L382-.L380
	.byte	1,4,1,5,46,9
	.half	.L34-.L382
	.byte	3,211,124,1,5,100,9
	.half	.L813-.L34
	.byte	1,5,110,9
	.half	.L381-.L813
	.byte	1,5,122,9
	.half	.L814-.L381
	.byte	1,5,75,9
	.half	.L385-.L814
	.byte	3,2,1,5,42,9
	.half	.L36-.L385
	.byte	3,2,1,5,9,9
	.half	.L388-.L36
	.byte	1,5,20,7,9
	.half	.L815-.L388
	.byte	3,2,1,5,13,9
	.half	.L816-.L815
	.byte	1,5,41,9
	.half	.L35-.L816
	.byte	3,124,1,5,75,9
	.half	.L390-.L35
	.byte	1,5,46,7,9
	.half	.L817-.L390
	.byte	3,9,1,5,100,9
	.half	.L818-.L817
	.byte	1,5,106,9
	.half	.L383-.L818
	.byte	1,5,121,9
	.half	.L819-.L383
	.byte	1,5,153,1,9
	.half	.L820-.L819
	.byte	1,5,75,9
	.half	.L392-.L820
	.byte	3,2,1,5,42,9
	.half	.L40-.L392
	.byte	3,2,1,5,9,9
	.half	.L394-.L40
	.byte	1,5,20,7,9
	.half	.L821-.L394
	.byte	3,2,1,5,13,9
	.half	.L822-.L821
	.byte	1,5,41,9
	.half	.L39-.L822
	.byte	3,124,1,5,75,9
	.half	.L396-.L39
	.byte	1,5,46,7,9
	.half	.L823-.L396
	.byte	3,9,1,5,100,9
	.half	.L824-.L823
	.byte	1,5,110,9
	.half	.L825-.L824
	.byte	1,5,122,9
	.half	.L826-.L825
	.byte	1,5,75,9
	.half	.L398-.L826
	.byte	3,2,1,5,42,9
	.half	.L44-.L398
	.byte	3,2,1,5,9,9
	.half	.L401-.L44
	.byte	1,5,20,7,9
	.half	.L827-.L401
	.byte	3,2,1,5,13,9
	.half	.L828-.L827
	.byte	1,5,41,9
	.half	.L43-.L828
	.byte	3,124,1,5,75,9
	.half	.L403-.L43
	.byte	1,5,17,7,9
	.half	.L829-.L403
	.byte	3,9,1,5,10,9
	.half	.L830-.L829
	.byte	1,5,52,7,9
	.half	.L831-.L830
	.byte	3,3,1,5,58,9
	.half	.L832-.L831
	.byte	1,5,65,9
	.half	.L833-.L832
	.byte	1,5,79,9
	.half	.L405-.L833
	.byte	3,2,1,5,46,9
	.half	.L49-.L405
	.byte	3,2,1,5,13,9
	.half	.L407-.L49
	.byte	1,5,24,7,9
	.half	.L834-.L407
	.byte	3,2,1,5,17,9
	.half	.L835-.L834
	.byte	1,5,45,9
	.half	.L48-.L835
	.byte	3,124,1,5,79,9
	.half	.L409-.L48
	.byte	1,4,2,5,64,7,9
	.half	.L334-.L409
	.byte	3,134,3,1,5,56,9
	.half	.L836-.L334
	.byte	1,5,47,9
	.half	.L837-.L836
	.byte	1,5,56,9
	.half	.L838-.L837
	.byte	1,5,22,9
	.half	.L410-.L838
	.byte	3,1,1,5,5,9
	.half	.L839-.L410
	.byte	1,4,1,5,51,9
	.half	.L52-.L839
	.byte	3,130,125,1,5,48,9
	.half	.L840-.L52
	.byte	1,5,67,9
	.half	.L841-.L840
	.byte	1,5,9,9
	.half	.L842-.L841
	.byte	1,5,54,7,9
	.half	.L843-.L842
	.byte	3,3,1,5,108,9
	.half	.L844-.L843
	.byte	1,5,114,9
	.half	.L845-.L844
	.byte	1,5,121,9
	.half	.L846-.L845
	.byte	1,5,133,1,9
	.half	.L847-.L846
	.byte	1,5,83,9
	.half	.L411-.L847
	.byte	3,2,1,5,50,9
	.half	.L55-.L411
	.byte	3,2,1,5,17,9
	.half	.L414-.L55
	.byte	1,5,28,7,9
	.half	.L848-.L414
	.byte	3,2,1,5,21,9
	.half	.L849-.L848
	.byte	1,5,49,9
	.half	.L54-.L849
	.byte	3,124,1,5,83,9
	.half	.L416-.L54
	.byte	1,5,50,7,9
	.half	.L53-.L416
	.byte	3,10,1,5,104,9
	.half	.L850-.L53
	.byte	1,5,110,9
	.half	.L851-.L850
	.byte	1,5,123,9
	.half	.L852-.L851
	.byte	1,5,135,1,9
	.half	.L853-.L852
	.byte	1,5,79,9
	.half	.L418-.L853
	.byte	3,2,1,5,46,9
	.half	.L59-.L418
	.byte	3,2,1,5,13,9
	.half	.L420-.L59
	.byte	1,5,24,7,9
	.half	.L854-.L420
	.byte	3,2,1,5,17,9
	.half	.L855-.L854
	.byte	1,5,45,9
	.half	.L58-.L855
	.byte	3,124,1,5,79,9
	.half	.L422-.L58
	.byte	1,5,32,7,9
	.half	.L47-.L422
	.byte	3,9,1,5,30,9
	.half	.L856-.L47
	.byte	1,5,12,9
	.half	.L857-.L856
	.byte	3,2,1,5,5,9
	.half	.L858-.L857
	.byte	1,5,1,9
	.half	.L25-.L858
	.byte	3,1,1,7,9
	.half	.L206-.L25
	.byte	0,1,1
.L798:
	.sdecl	'.debug_ranges',debug,cluster('IfxHssl_Hssl_prepareStream')
	.sect	'.debug_ranges'
.L205:
	.word	-1,.L115,0,.L206-.L115,0,0
	.sdecl	'.debug_info',debug,cluster('IfxHssl_Hssl_writeStream')
	.sect	'.debug_info'
.L207:
	.word	362
	.half	3
	.word	.L208
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L210,.L209
	.byte	2
	.word	.L128
	.byte	3
	.byte	'IfxHssl_Hssl_writeStream',0,1,168,4,21
	.word	.L276
	.byte	1,1,1
	.word	.L127,.L336,.L126
	.byte	4
	.byte	'hssl',0,1,168,4,60
	.word	.L256,.L337
	.byte	4
	.byte	'data',0,1,168,4,74
	.word	.L338,.L339
	.byte	4
	.byte	'count',0,1,168,4,90
	.word	.L323,.L340
	.byte	5
	.word	.L127,.L336
	.byte	6
	.byte	'hsslSFR',0,1,170,4,27
	.word	.L260,.L341
	.byte	6
	.byte	'hsslIS',0,1,171,4,27
	.word	.L342,.L343
	.byte	6
	.byte	'streamingMode',0,1,172,4,27
	.word	.L344,.L345
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxHssl_Hssl_writeStream')
	.sect	'.debug_abbrev'
.L208:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxHssl_Hssl_writeStream')
	.sect	'.debug_line'
.L209:
	.word	.L860-.L859
.L859:
	.half	3
	.word	.L862-.L861
.L861:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0,0,0,0,0
.L862:
	.byte	5,47,7,0,5,2
	.word	.L127
	.byte	3,169,4,1,5,66,9
	.half	.L452-.L127
	.byte	3,1,1,5,41,9
	.half	.L453-.L452
	.byte	3,1,1,5,60,9
	.half	.L454-.L453
	.byte	3,3,1,5,50,9
	.half	.L455-.L454
	.byte	1,5,17,9
	.half	.L863-.L455
	.byte	3,2,1,5,52,9
	.half	.L456-.L863
	.byte	1,5,50,9
	.half	.L864-.L456
	.byte	1,5,19,9
	.half	.L865-.L864
	.byte	3,2,1,5,50,9
	.half	.L866-.L865
	.byte	1,5,19,9
	.half	.L867-.L866
	.byte	3,1,1,5,50,9
	.half	.L868-.L867
	.byte	1,5,19,9
	.half	.L869-.L868
	.byte	3,1,1,5,50,9
	.half	.L870-.L869
	.byte	1,5,43,9
	.half	.L871-.L870
	.byte	3,2,1,5,50,9
	.half	.L872-.L871
	.byte	1,5,13,9
	.half	.L873-.L872
	.byte	3,3,1,5,5,9
	.half	.L874-.L873
	.byte	1,5,29,7,9
	.half	.L875-.L874
	.byte	3,2,1,5,35,9
	.half	.L876-.L875
	.byte	1,5,25,9
	.half	.L94-.L876
	.byte	3,4,1,5,31,9
	.half	.L877-.L94
	.byte	1,5,12,9
	.half	.L878-.L877
	.byte	3,3,1,5,5,9
	.half	.L879-.L878
	.byte	1,5,1,9
	.half	.L95-.L879
	.byte	3,1,1,7,9
	.half	.L211-.L95
	.byte	0,1,1
.L860:
	.sdecl	'.debug_ranges',debug,cluster('IfxHssl_Hssl_writeStream')
	.sect	'.debug_ranges'
.L210:
	.word	-1,.L127,0,.L211-.L127,0,0
	.sdecl	'.debug_loc',debug,cluster('IfxHssl_Hssl_checkErrors')
	.sect	'.debug_loc'
.L96:
	.word	-1,.L97,0,.L312-.L97
	.half	2
	.byte	138,0
	.word	0,0
.L313:
	.word	-1,.L97,0,.L312-.L97
	.half	1
	.byte	100
	.word	0,0
.L314:
	.word	-1,.L97,.L346-.L97,.L312-.L97
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxHssl_Hssl_clearErrorFlags')
	.sect	'.debug_loc'
.L98:
	.word	-1,.L99,0,.L315-.L99
	.half	2
	.byte	138,0
	.word	0,0
.L316:
	.word	-1,.L99,0,.L315-.L99
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxHssl_Hssl_delay')
	.sect	'.debug_loc'
.L100:
	.word	-1,.L101,0,.L317-.L101
	.half	2
	.byte	138,0
	.word	0,0
.L318:
	.word	-1,.L101,0,.L317-.L101
	.half	1
	.byte	100
	.word	0,0
.L319:
	.word	-1,.L101,.L347-.L101,.L317-.L101
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxHssl_Hssl_initChannel')
	.sect	'.debug_loc'
.L102:
	.word	-1,.L103,0,.L266-.L103
	.half	2
	.byte	138,0
	.word	0,0
.L268:
	.word	-1,.L103,0,.L266-.L103
	.half	1
	.byte	100
	.word	0,0
.L270:
	.word	-1,.L103,0,.L266-.L103
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxHssl_Hssl_initChannelConfig')
	.sect	'.debug_loc'
.L104:
	.word	-1,.L105,0,.L271-.L105
	.half	2
	.byte	138,0
	.word	0,0
.L273:
	.word	-1,.L105,0,.L271-.L105
	.half	1
	.byte	100
	.word	0,0
.L275:
	.word	-1,.L105,0,.L271-.L105
	.half	1
	.byte	102
	.word	0,0
.L274:
	.word	-1,.L105,0,.L271-.L105
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxHssl_Hssl_initHsctModule')
	.sect	'.debug_loc'
.L106:
	.word	-1,.L107,0,.L212-.L107
	.half	2
	.byte	138,0
	.word	0,0
.L216:
	.word	-1,.L107,0,.L221-.L107
	.half	1
	.byte	101
	.word	.L349-.L107,.L212-.L107
	.half	1
	.byte	111
	.word	0,0
.L214:
	.word	-1,.L107,0,.L348-.L107
	.half	1
	.byte	100
	.word	0,0
.L218:
	.word	-1,.L107,.L350-.L107,.L212-.L107
	.half	1
	.byte	108
	.word	.L356-.L107,.L357-.L107
	.half	1
	.byte	100
	.word	0,0
.L241:
	.word	0,0
.L227:
	.word	0,0
.L239:
	.word	0,0
.L225:
	.word	0,0
.L237:
	.word	0,0
.L223:
	.word	0,0
.L235:
	.word	0,0
.L250:
	.word	-1,.L107,.L351-.L107,.L352-.L107
	.half	1
	.byte	82
	.word	.L353-.L107,.L16-.L107
	.half	1
	.byte	88
	.word	.L352-.L107,.L354-.L107
	.half	1
	.byte	84
	.word	.L355-.L107,.L16-.L107
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxHssl_Hssl_initHsctModuleConfig')
	.sect	'.debug_loc'
.L108:
	.word	-1,.L109,0,.L251-.L109
	.half	2
	.byte	138,0
	.word	0,0
.L253:
	.word	-1,.L109,0,.L251-.L109
	.half	1
	.byte	100
	.word	0,0
.L254:
	.word	-1,.L109,0,.L251-.L109
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxHssl_Hssl_initHsslModule')
	.sect	'.debug_loc'
.L110:
	.word	-1,.L111,0,.L255-.L111
	.half	2
	.byte	138,0
	.word	0,0
.L259:
	.word	-1,.L111,0,.L358-.L111
	.half	1
	.byte	101
	.word	.L360-.L111,.L255-.L111
	.half	1
	.byte	111
	.word	0,0
.L257:
	.word	-1,.L111,0,.L359-.L111
	.half	1
	.byte	100
	.word	0,0
.L261:
	.word	-1,.L111,.L361-.L111,.L255-.L111
	.half	1
	.byte	108
	.word	.L359-.L111,.L358-.L111
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxHssl_Hssl_initHsslModuleConfig')
	.sect	'.debug_loc'
.L112:
	.word	-1,.L113,0,.L262-.L113
	.half	2
	.byte	138,0
	.word	0,0
.L264:
	.word	-1,.L113,0,.L262-.L113
	.half	1
	.byte	100
	.word	0,0
.L265:
	.word	-1,.L113,0,.L262-.L113
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxHssl_Hssl_prepareStream')
	.sect	'.debug_loc'
.L114:
	.word	-1,.L115,0,.L320-.L115
	.half	2
	.byte	138,0
	.word	0,0
.L321:
	.word	-1,.L115,0,.L362-.L115
	.half	1
	.byte	100
	.word	.L365-.L115,.L320-.L115
	.half	1
	.byte	111
	.word	.L370-.L115,.L371-.L115
	.half	1
	.byte	100
	.word	.L372-.L115,.L373-.L115
	.half	1
	.byte	100
	.word	.L374-.L115,.L375-.L115
	.half	1
	.byte	100
	.word	.L376-.L115,.L377-.L115
	.half	1
	.byte	100
	.word	.L378-.L115,.L379-.L115
	.half	1
	.byte	100
	.word	.L384-.L115,.L385-.L115
	.half	1
	.byte	100
	.word	.L387-.L115,.L388-.L115
	.half	1
	.byte	100
	.word	.L389-.L115,.L390-.L115
	.half	1
	.byte	100
	.word	.L391-.L115,.L392-.L115
	.half	1
	.byte	100
	.word	.L393-.L115,.L394-.L115
	.half	1
	.byte	100
	.word	.L395-.L115,.L396-.L115
	.half	1
	.byte	100
	.word	.L397-.L115,.L398-.L115
	.half	1
	.byte	100
	.word	.L400-.L115,.L401-.L115
	.half	1
	.byte	100
	.word	.L402-.L115,.L403-.L115
	.half	1
	.byte	100
	.word	.L404-.L115,.L405-.L115
	.half	1
	.byte	100
	.word	.L406-.L115,.L407-.L115
	.half	1
	.byte	100
	.word	.L408-.L115,.L409-.L115
	.half	1
	.byte	100
	.word	.L412-.L115,.L411-.L115
	.half	1
	.byte	100
	.word	.L413-.L115,.L414-.L115
	.half	1
	.byte	100
	.word	.L415-.L115,.L416-.L115
	.half	1
	.byte	100
	.word	.L417-.L115,.L418-.L115
	.half	1
	.byte	100
	.word	.L419-.L115,.L420-.L115
	.half	1
	.byte	100
	.word	.L421-.L115,.L422-.L115
	.half	1
	.byte	100
	.word	0,0
.L331:
	.word	0,0
.L325:
	.word	-1,.L115,.L368-.L115,.L369-.L115
	.half	1
	.byte	95
	.word	0,0
.L324:
	.word	-1,.L115,0,.L363-.L115
	.half	1
	.byte	85
	.word	.L367-.L115,.L320-.L115
	.half	1
	.byte	88
	.word	.L386-.L115,.L385-.L115
	.half	1
	.byte	86
	.word	.L399-.L115,.L398-.L115
	.half	1
	.byte	86
	.word	0,0
.L333:
	.word	-1,.L115,.L380-.L115,.L381-.L115
	.half	1
	.byte	98
	.word	0,0
.L335:
	.word	-1,.L115,.L410-.L115,.L411-.L115
	.half	1
	.byte	98
	.word	0,0
.L322:
	.word	-1,.L115,0,.L364-.L115
	.half	1
	.byte	84
	.word	.L366-.L115,.L362-.L115
	.half	1
	.byte	86
	.word	0,0
.L327:
	.word	-1,.L115,.L382-.L115,.L383-.L115
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxHssl_Hssl_read')
	.sect	'.debug_loc'
.L116:
	.word	-1,.L117,0,.L277-.L117
	.half	2
	.byte	138,0
	.word	0,0
.L280:
	.word	-1,.L117,0,.L423-.L117
	.half	1
	.byte	84
	.word	.L426-.L117,.L277-.L117
	.half	1
	.byte	95
	.word	.L425-.L117,.L424-.L117
	.half	1
	.byte	85
	.word	0,0
.L278:
	.word	-1,.L117,0,.L424-.L117
	.half	1
	.byte	100
	.word	0,0
.L283:
	.word	-1,.L117,.L428-.L117,.L424-.L117
	.half	1
	.byte	86
	.word	0,0
.L282:
	.word	-1,.L117,0,.L425-.L117
	.half	1
	.byte	85
	.word	.L427-.L117,.L424-.L117
	.half	1
	.byte	87
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxHssl_Hssl_sendControlCommand')
	.sect	'.debug_loc'
.L118:
	.word	-1,.L119,0,.L284-.L119
	.half	2
	.byte	138,0
	.word	0,0
.L287:
	.word	-1,.L119,0,.L429-.L119
	.half	1
	.byte	84
	.word	0,0
.L285:
	.word	-1,.L119,0,.L429-.L119
	.half	1
	.byte	100
	.word	0,0
.L288:
	.word	-1,.L119,.L430-.L119,.L284-.L119
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxHssl_Hssl_singleFrameRequest')
	.sect	'.debug_loc'
.L120:
	.word	-1,.L121,0,.L289-.L121
	.half	2
	.byte	138,0
	.word	0,0
.L293:
	.word	-1,.L121,0,.L289-.L121
	.half	1
	.byte	85
	.word	0,0
.L290:
	.word	-1,.L121,0,.L289-.L121
	.half	1
	.byte	100
	.word	0,0
.L294:
	.word	-1,.L121,0,.L289-.L121
	.half	1
	.byte	86
	.word	0,0
.L295:
	.word	-1,.L121,0,.L289-.L121
	.half	1
	.byte	87
	.word	0,0
.L292:
	.word	-1,.L121,0,.L289-.L121
	.half	1
	.byte	84
	.word	0,0
.L297:
	.word	-1,.L121,.L431-.L121,.L289-.L121
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxHssl_Hssl_waitAcknowledge')
	.sect	'.debug_loc'
.L122:
	.word	-1,.L123,0,.L298-.L123
	.half	2
	.byte	138,0
	.word	0,0
.L305:
	.word	-1,.L123,.L440-.L123,.L81-.L123
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L299:
	.word	-1,.L123,0,.L298-.L123
	.half	1
	.byte	100
	.word	0,0
.L302:
	.word	-1,.L123,.L434-.L123,.L435-.L123
	.half	1
	.byte	82
	.word	.L86-.L123,.L442-.L123
	.half	1
	.byte	82
	.word	.L88-.L123,.L443-.L123
	.half	1
	.byte	82
	.word	.L90-.L123,.L444-.L123
	.half	1
	.byte	82
	.word	0,0
.L306:
	.word	-1,.L123,.L441-.L123,.L81-.L123
	.half	1
	.byte	81
	.word	0,0
.L304:
	.word	-1,.L123,.L438-.L123,.L439-.L123
	.half	1
	.byte	85
	.word	0,0
.L303:
	.word	-1,.L123,.L436-.L123,.L437-.L123
	.half	1
	.byte	84
	.word	0,0
.L300:
	.word	-1,.L123,.L432-.L123,.L433-.L123
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxHssl_Hssl_write')
	.sect	'.debug_loc'
.L124:
	.word	-1,.L125,0,.L307-.L125
	.half	2
	.byte	138,0
	.word	0,0
.L309:
	.word	-1,.L125,0,.L445-.L125
	.half	1
	.byte	84
	.word	.L449-.L125,.L307-.L125
	.half	1
	.byte	95
	.word	.L447-.L125,.L446-.L125
	.half	1
	.byte	85
	.word	0,0
.L308:
	.word	-1,.L125,0,.L446-.L125
	.half	1
	.byte	100
	.word	0,0
.L310:
	.word	-1,.L125,0,.L447-.L125
	.half	1
	.byte	85
	.word	.L450-.L125,.L446-.L125
	.half	5
	.byte	144,32,157,32,0
	.word	.L448-.L125,.L446-.L125
	.half	1
	.byte	86
	.word	0,0
.L311:
	.word	-1,.L125,0,.L448-.L125
	.half	1
	.byte	86
	.word	.L451-.L125,.L446-.L125
	.half	1
	.byte	87
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxHssl_Hssl_writeStream')
	.sect	'.debug_loc'
.L126:
	.word	-1,.L127,0,.L336-.L127
	.half	2
	.byte	138,0
	.word	0,0
.L340:
	.word	-1,.L127,0,.L336-.L127
	.half	1
	.byte	84
	.word	0,0
.L339:
	.word	-1,.L127,0,.L336-.L127
	.half	1
	.byte	101
	.word	.L455-.L127,.L456-.L127
	.half	1
	.byte	95
	.word	0,0
.L337:
	.word	-1,.L127,0,.L336-.L127
	.half	1
	.byte	100
	.word	0,0
.L343:
	.word	-1,.L127,.L453-.L127,.L336-.L127
	.half	1
	.byte	98
	.word	0,0
.L341:
	.word	-1,.L127,.L452-.L127,.L336-.L127
	.half	1
	.byte	111
	.word	0,0
.L345:
	.word	-1,.L127,.L454-.L127,.L336-.L127
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L880:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('IfxHssl_Hssl_checkErrors')
	.sect	'.debug_frame'
	.word	24
	.word	.L880,.L97,.L312-.L97
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxHssl_Hssl_clearErrorFlags')
	.sect	'.debug_frame'
	.word	24
	.word	.L880,.L99,.L315-.L99
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxHssl_Hssl_delay')
	.sect	'.debug_frame'
	.word	24
	.word	.L880,.L101,.L317-.L101
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxHssl_Hssl_initChannel')
	.sect	'.debug_frame'
	.word	20
	.word	.L880,.L103,.L266-.L103
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxHssl_Hssl_initChannelConfig')
	.sect	'.debug_frame'
	.word	20
	.word	.L880,.L105,.L271-.L105
	.byte	8,18,8,19,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxHssl_Hssl_initHsctModule')
	.sect	'.debug_frame'
	.word	12
	.word	.L880,.L107,.L212-.L107
	.sdecl	'.debug_frame',debug,cluster('IfxHssl_Hssl_initHsctModuleConfig')
	.sect	'.debug_frame'
	.word	20
	.word	.L880,.L109,.L251-.L109
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxHssl_Hssl_initHsslModule')
	.sect	'.debug_frame'
	.word	12
	.word	.L880,.L111,.L255-.L111
	.sdecl	'.debug_frame',debug,cluster('IfxHssl_Hssl_initHsslModuleConfig')
	.sect	'.debug_frame'
	.word	20
	.word	.L880,.L113,.L262-.L113
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxHssl_Hssl_prepareStream')
	.sect	'.debug_frame'
	.word	12
	.word	.L880,.L115,.L320-.L115
	.sdecl	'.debug_frame',debug,cluster('IfxHssl_Hssl_read')
	.sect	'.debug_frame'
	.word	12
	.word	.L880,.L117,.L277-.L117
	.sdecl	'.debug_frame',debug,cluster('IfxHssl_Hssl_sendControlCommand')
	.sect	'.debug_frame'
	.word	12
	.word	.L880,.L119,.L284-.L119
	.sdecl	'.debug_frame',debug,cluster('IfxHssl_Hssl_singleFrameRequest')
	.sect	'.debug_frame'
	.word	24
	.word	.L880,.L121,.L289-.L121
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxHssl_Hssl_waitAcknowledge')
	.sect	'.debug_frame'
	.word	24
	.word	.L880,.L123,.L298-.L123
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxHssl_Hssl_write')
	.sect	'.debug_frame'
	.word	12
	.word	.L880,.L125,.L307-.L125
	.sdecl	'.debug_frame',debug,cluster('IfxHssl_Hssl_writeStream')
	.sect	'.debug_frame'
	.word	20
	.word	.L880,.L127,.L336-.L127
	.byte	8,19,8,22,8,23,0,0


	; Module end
