	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 99277908"
	.compiler_invocation	"ctc --dep-file=Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent\\.IfxSent_Sent.o.d --fp-model=c,f,l,n,r,S,T,z -D__CPU__=tc26x -D__CPU_TC26X__ --core=tc1.6.x --iso=99 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\CODE -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Build -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\DataHandling -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\InternalMux -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Asc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Lin -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Spi -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Icu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmBc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmHl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Timer -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TimerWithTrigger -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TPwm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Cam -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Irq -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Dma -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Rdc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Dts -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Eray -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Phy_Pef7071 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Crc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Fft -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\IncrEnc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Pwm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Timer -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim\\In -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Pwm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Trig -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\I2c -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Driver -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Msc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Can -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Io -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Psi5 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Psi5s -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiMaster -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiSlave -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Src -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Adc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Platform -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Platform\\Tricore -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Platform\\Tricore\\Compilers -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Sfr -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Sfr\\TC26B -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Service -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Service\\CpuGeneric -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\seekfree_libraries -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\seekfree_libraries\\common -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\seekfree_peripheral -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\USER -g2 -wW557 --make-target=Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent\\IfxSent_Sent.o -t0 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O0 --default-a1-size=0 --default-a0-size=0 --source --align=0 --switch=auto --error-limit=42 -o Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent\\IfxSent_Sent.src ..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent\\IfxSent_Sent.c"
	.compiler_name		"ctc"
	;source	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent\\IfxSent_Sent.c'

	
$TC16X
	
	.sdecl	'.text.IfxSent_Sent.IfxSent_Sent_deInitModule',code,cluster('IfxSent_Sent_deInitModule')
	.sect	'.text.IfxSent_Sent.IfxSent_Sent_deInitModule'
	.align	2
	
	.global	IfxSent_Sent_deInitModule

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	     1  /**
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	     2   * \file IfxSent_Sent.c
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	     3   * \brief SENT SENT details
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	     4   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	     5   * \version iLLD_1_0_1_11_0
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	     6   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	     7   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	     8   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	     9   *                                 IMPORTANT NOTICE
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    10   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    11   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    12   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    13   * the company in which ordinary course of business you are acting and (ii) 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    14   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    15   * terms of use are agreed, use of this file is subject to following:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    16  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    17  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    19  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    20   * Permission is hereby granted, free of charge, to any person or 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    21   * organization obtaining a copy of the software and accompanying 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    22   * documentation covered by this license (the "Software") to use, reproduce,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    23   * display, distribute, execute, and transmit the Software, and to prepare
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    24   * derivative works of the Software, and to permit third-parties to whom the 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    25   * Software is furnished to do so, all subject to the following:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    26  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    27   * The copyright notices in the Software and this entire statement, including
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    28   * the above license grant, this restriction and the following disclaimer, must
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    29   * be included in all copies of the Software, in whole or in part, and all
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    30   * derivative works of the Software, unless such copies or derivative works are
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    31   * solely in the form of machine-executable object code generated by a source
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    32   * language processor.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    33  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    40   * DEALINGS IN THE SOFTWARE.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    41  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    42   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    43   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    44   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    45  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    46  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    47  /*----------------------------------Includes----------------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    48  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    49  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    50  #include "IfxSent_Sent.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    51  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    52  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    53  /*-------------------------Function Implementations---------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    54  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    55  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    56  void IfxSent_Sent_deInitModule(IfxSent_Sent *driver)
; Function IfxSent_Sent_deInitModule
.L30:
IfxSent_Sent_deInitModule:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    57  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    58      Ifx_SENT *sentSFR = driver->sent;
	ld.a	a15,[a4]
.L276:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    59      uint16    passwd  = IfxScuWdt_getCpuWatchdogPassword();
	call	IfxScuWdt_getCpuWatchdogPassword
.L275:
	mov	d15,d2
.L278:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    60      IfxScuWdt_clearCpuEndinit(passwd);
	mov	d4,d15
.L277:
	call	IfxScuWdt_clearCpuEndinit
.L279:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    61      IfxSent_resetModule(sentSFR);
	mov.aa	a4,a15
.L280:
	call	IfxSent_resetModule
.L281:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    62      IfxScuWdt_setCpuEndinit(passwd);
	mov	d4,d15
.L282:
	call	IfxScuWdt_setCpuEndinit
.L283:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    63  }
	ret
.L82:
	
__IfxSent_Sent_deInitModule_function_end:
	.size	IfxSent_Sent_deInitModule,__IfxSent_Sent_deInitModule_function_end-IfxSent_Sent_deInitModule
.L51:
	; End of function
	
	.sdecl	'.text.IfxSent_Sent.IfxSent_Sent_initChannel',code,cluster('IfxSent_Sent_initChannel')
	.sect	'.text.IfxSent_Sent.IfxSent_Sent_initChannel'
	.align	2
	
	.global	IfxSent_Sent_initChannel

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    64  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    65  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    66  boolean IfxSent_Sent_initChannel(IfxSent_Sent_Channel *channel, const IfxSent_Sent_ChannelConfig *config)
; Function IfxSent_Sent_initChannel
.L32:
IfxSent_Sent_initChannel:	.type	func
	mov.aa	a12,a5
.L285:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    67  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    68      boolean      result = TRUE;
	mov	d8,#1
.L286:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    69  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    70      channel->driver = config->driver;
	ld.a	a2,[a12]
.L376:
	st.a	[a4],a2
.L129:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    71      Ifx_SENT    *sentSFR = config->driver->sent;
	ld.a	a2,[a12]
.L377:
	ld.a	a13,[a2]
.L287:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    72      Ifx_SENT_CH *sentCh  = &sentSFR->CH[config->channelId];
	ld.b	d15,[a12]6
.L378:
	mul	d15,d15,#64
	addsc.a	a2,a13,d15,#0
	lea	a15,[a2]256
.L289:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    73      channel->channel   = sentCh;
	st.a	[a4]4,a15
.L379:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    74      channel->channelId = config->channelId;
	ld.b	d15,[a12]6
.L380:
	st.b	[a4]8,d15
.L381:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    75  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    76      IfxSent_disableChannel(sentSFR, config->channelId);
	ld.b	d0,[a12]6
.L134:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     2   * \file IfxSent.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     3   * \brief SENT  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     4   * \ingroup IfxLld_Sent
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    45   * \defgroup IfxLld_Sent_Std_Enumerations Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    46   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    47   * \defgroup IfxLld_Sent_Std_Configuration Configuration Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    48   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    49   * \defgroup IfxLld_Sent_Std_Interrupts Interrupts
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    50   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    51   * \defgroup IfxLld_Sent_Std_Operative Operative Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    52   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    53   * \defgroup IfxLld_Sent_Std_Baudrate Baudrate Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    54   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    55   * \defgroup IfxLld_Sent_Std_IO IO Pin Configuration Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    56   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    57   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    58  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    59  #ifndef IFXSENT_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    60  #define IFXSENT_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    61  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    62  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    63  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    64  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    65  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    66  #include "_Impl/IfxSent_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    67  #include "Src/Std/IfxSrc.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    68  #include "Scu/Std/IfxScuCcu.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    69  #include "_PinMap/IfxSent_PinMap.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    70  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    71  #include "IfxSent_bf.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    72  #include "IfxSent_reg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    73  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    74  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    75  /*-----------------------------------Macros-----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    76  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    77  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    78  #define IFXSENT_INTERRUPT_STATUS_ERROR_FLAGS (0x000037f4)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    79  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    80  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    81  /*--------------------------------Enumerations--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    82  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    83  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    84  /** \addtogroup IfxLld_Sent_Std_Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    85   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    86  /** \brief SENT.CH[channelId].IOCR.ALTI , Specifies alternate input for channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    87   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    88  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    89  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    90      IfxSent_AlternateInput_0 = 0,      /**< \brief Specifies alternate input 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    91      IfxSent_AlternateInput_1,          /**< \brief Specifies alternate input 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    92      IfxSent_AlternateInput_2,          /**< \brief Specifies alternate input 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    93      IfxSent_AlternateInput_3           /**< \brief Specifies alternate input 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    94  } IfxSent_AlternateInput;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    95  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    96  /** \brief SENT.CH[channelId].RSR.CST, Specifies the current channel status
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    97   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    98  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    99  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   100      IfxSent_ChannelStatus_stop        = 0, /**< \brief Specifies the channel is stopped */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   101      IfxSent_ChannelStatus_initialize  = 1, /**< \brief Specifies the channel is initialized */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   102      IfxSent_ChannelStatus_running     = 2, /**< \brief Specifies the channel is running */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   103      IfxSent_ChannelStatus_synchronize = 3  /**< \brief Specifies the channel is synchronized */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   104  } IfxSent_ChannelStatus;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   105  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   106  /** \brief SENT.FDR.DM , Specifies clock divider mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   107   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   108  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   109  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   110      IfxSent_ClockDividerMode_off        = 0, /**< \brief Specifies clock divider mode off */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   111      IfxSent_ClockDividerMode_normal     = 1, /**< \brief Specifies clock normal divider mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   112      IfxSent_ClockDividerMode_fractional = 2  /**< \brief Specifies clock fractional divider mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   113  } IfxSent_ClockDividerMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   114  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   115  /** \brief SENT.CH[channelId].SDS.CON , Specifies received configuration bit value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   116   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   117  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   118  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   119      IfxSent_ConfigBit_0 = 0,      /**< \brief Specifies received configuration bit value 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   120      IfxSent_ConfigBit_1           /**< \brief Specifies received configuration bit value 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   121  } IfxSent_ConfigBit;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   122  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   123  /** \brief SENT.CH[channelId].IOCR.DEPTH , Specifies number of port input samples
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   124   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   125  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   126  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   127      IfxSent_DigitalGlitchesLength_off = 0,  /**< \brief Specifies port input samples off */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   128      IfxSent_DigitalGlitchesLength_1   = 1,  /**< \brief Specifies 1 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   129      IfxSent_DigitalGlitchesLength_2,        /**< \brief Specifies 2 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   130      IfxSent_DigitalGlitchesLength_3,        /**< \brief Specifies 3 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   131      IfxSent_DigitalGlitchesLength_4,        /**< \brief Specifies 4 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   132      IfxSent_DigitalGlitchesLength_5,        /**< \brief Specifies 5 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   133      IfxSent_DigitalGlitchesLength_6,        /**< \brief Specifies 6 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   134      IfxSent_DigitalGlitchesLength_7,        /**< \brief Specifies 7 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   135      IfxSent_DigitalGlitchesLength_8,        /**< \brief Specifies 8 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   136      IfxSent_DigitalGlitchesLength_9,        /**< \brief Specifies 9 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   137      IfxSent_DigitalGlitchesLength_10,       /**< \brief Specifies 10 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   138      IfxSent_DigitalGlitchesLength_11,       /**< \brief Specifies 11 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   139      IfxSent_DigitalGlitchesLength_12,       /**< \brief Specifies 12 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   140      IfxSent_DigitalGlitchesLength_13,       /**< \brief Specifies 13 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   141      IfxSent_DigitalGlitchesLength_14,       /**< \brief Specifies 14 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   142      IfxSent_DigitalGlitchesLength_15        /**< \brief Specifies 15 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   143  } IfxSent_DigitalGlitchesLength;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   144  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   145  /** \brief SENT.CH[channelId].RCR.ESF , Specifies the serial frame structure
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   146   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   147  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   148  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   149      IfxSent_ExtendedSerialFrameMode_standard = 0,  /**< \brief Specifies the standard serial frame structure */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   150      IfxSent_ExtendedSerialFrameMode_extended = 1   /**< \brief Specifies the extended serial frame structure */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   151  } IfxSent_ExtendedSerialFrameMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   152  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   153  /** \brief SENT.CH[channelId].IOCR.ETS , Specifies the external trigger line
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   154   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   155  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   156  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   157      IfxSent_ExternalTrigger_0 = 0,      /**< \brief Specifies the external trigger line 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   158      IfxSent_ExternalTrigger_1,          /**< \brief Specifies the external trigger line 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   159      IfxSent_ExternalTrigger_2,          /**< \brief Specifies the external trigger line 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   160      IfxSent_ExternalTrigger_3,          /**< \brief Specifies the external trigger line 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   161      IfxSent_ExternalTrigger_4,          /**< \brief Specifies the external trigger line 4  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   162      IfxSent_ExternalTrigger_5,          /**< \brief Specifies the external trigger line 5  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   163      IfxSent_ExternalTrigger_6,          /**< \brief Specifies the external trigger line 6  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   164      IfxSent_ExternalTrigger_7,          /**< \brief Specifies the external trigger line 7  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   165      IfxSent_ExternalTrigger_8,          /**< \brief Specifies the external trigger line 8  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   166      IfxSent_ExternalTrigger_9           /**< \brief Specifies the external trigger line 9  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   167  } IfxSent_ExternalTrigger;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   168  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   169  /** \brief SENT.CH[channelId].RCR.CFC, Specifies received frame check mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   170   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   171  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   172  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   173      IfxSent_FrameCheckMode_pastSyncPulse   = 0, /**< \brief Specifies frame check mode against past sync pulse */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   174      IfxSent_FrameCheckMode_futureSuncPulse = 1  /**< \brief Specifies frame check mode against future sync pulse */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   175  } IfxSent_FrameCheckMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   176  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   177  /** \brief SENT.CH[channelId].INP.X(X= RSI,RDI,RBI,TDI,TBI,ERRI,SDI,WDI),Specifies interrupt requested node for respective interrupt
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   178   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   179  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   180  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   181      IfxSent_InterruptNodePointer_0 = 0,           /**< \brief Specifies interrupt requested node 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   182      IfxSent_InterruptNodePointer_1,               /**< \brief Specifies interrupt requested node 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   183      IfxSent_InterruptNodePointer_2,               /**< \brief Specifies interrupt requested node 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   184      IfxSent_InterruptNodePointer_3,               /**< \brief Specifies interrupt requested node 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   185      IfxSent_InterruptNodePointer_trigo0 = 4,      /**< \brief Specifies interrupt requested node TRIGO 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   186      IfxSent_InterruptNodePointer_trigo1,          /**< \brief Specifies interrupt requested node TRIGO 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   187      IfxSent_InterruptNodePointer_trigo2,          /**< \brief Specifies interrupt requested node TRIGO 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   188      IfxSent_InterruptNodePointer_trigo3,          /**< \brief Specifies interrupt requested node TRIGO 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   189      IfxSent_InterruptNodePointer_trigo4,          /**< \brief Specifies interrupt requested node TRIGO 4  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   190      IfxSent_InterruptNodePointer_trigo5           /**< \brief Specifies interrupt requested node TRIGO 5  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   191  } IfxSent_InterruptNodePointer;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   192  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   193  /** \brief SENT.CH[channelId].VIEW.RDNPy( y=0,1,..7 ).Specifies receive data target nibble pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   194   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   195  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   196  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   197      IfxSent_Nibble_0 = 0,      /**< \brief Specifies receive data target nibble pointer to nibble 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   198      IfxSent_Nibble_1,          /**< \brief Specifies receive data target nibble pointer to nibble 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   199      IfxSent_Nibble_2,          /**< \brief Specifies receive data target nibble pointer to nibble 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   200      IfxSent_Nibble_3,          /**< \brief Specifies receive data target nibble pointer to nibble 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   201      IfxSent_Nibble_4,          /**< \brief Specifies receive data target nibble pointer to nibble 4  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   202      IfxSent_Nibble_5,          /**< \brief Specifies receive data target nibble pointer to nibble 5  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   203      IfxSent_Nibble_6,          /**< \brief Specifies receive data target nibble pointer to nibble 6  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   204      IfxSent_Nibble_7           /**< \brief Specifies receive data target nibble pointer to nibble 7  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   205  } IfxSent_Nibble;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   206  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   207  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   208   * Definition in Ifx_SENT.CLC.B.EDIS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   209   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   210  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   211  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   212      IfxSent_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   213      IfxSent_SleepMode_disable = 1  /**< \brief disables sleep mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   214  } IfxSent_SleepMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   215  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   216  /** \brief Specifies the SENT SPC operational mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   217   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   218  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   219  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   220      IfxSent_SpcMode_sync          = 0, /**< \brief Specifies synchronous SPC mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   221      IfxSent_SpcMode_range         = 1, /**< \brief Specifies range selection SPC mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   222      IfxSent_SpcMode_bidirectional = 2  /**< \brief Specifies bidirectional transmit SPC mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   223  } IfxSent_SpcMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   224  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   225  /** \brief OCDS Suspend Control (OCDS.SUS)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   226   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   227  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   228  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   229      IfxSent_SuspendMode_none = 0,  /**< \brief No suspend */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   230      IfxSent_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   231      IfxSent_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   232  } IfxSent_SuspendMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   233  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   234  /** \brief SENT.CH[channelId].SCR.BASE, Specifies selection of pulse based on time
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   235   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   236  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   237  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   238      IfxSent_TimeBase_measuredFrequency = 0,  /**< \brief Specifies selection of pulse based on measured frequency */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   239      IfxSent_TimeBase_nominalFrequency  = 1   /**< \brief Specifies selection of pulse based on nomianl frequency */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   240  } IfxSent_TimeBase;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   241  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   242  /** \brief SENT.CH[channelId].SCR.TRIG, Specifies trigger source for pulse generation
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   243   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   244  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   245  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   246      IfxSent_TriggerSource_off             = 0, /**< \brief Specifies no pulse generation */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   247      IfxSent_TriggerSource_immediate       = 1, /**< \brief Specifies immediate pulse generation */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   248      IfxSent_TriggerSource_fallingEdge     = 2, /**< \brief Specifies pulse generation at fallingEdge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   249      IfxSent_TriggerSource_externalTrigger = 3  /**< \brief Specifies pulse generation after each external trigger */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   250  } IfxSent_TriggerSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   251  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   252  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   253  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   254  /** \brief Sent Interrupt Source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   255   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   256  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   257  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   258      IfxSent_InterruptSource_rsi  = 0,   /**< \brief Enable Interrupt Request RSI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   259      IfxSent_InterruptSource_rdi  = 1,   /**< \brief Enable Interrupt Request RDI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   260      IfxSent_InterruptSource_rbi  = 2,   /**< \brief Enable Interrupt Request RBI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   261      IfxSent_InterruptSource_tdi  = 3,   /**< \brief Enable Interrupt Request TDI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   262      IfxSent_InterruptSource_tbi  = 4,   /**< \brief Enable Interrupt Request TBI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   263      IfxSent_InterruptSource_fri  = 5,   /**< \brief Enable Interrupt Request FRI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   264      IfxSent_InterruptSource_fdi  = 6,   /**< \brief Enable Interrupt Request FDI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   265      IfxSent_InterruptSource_nni  = 7,   /**< \brief Enable Interrupt Request NNI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   266      IfxSent_InterruptSource_nvi  = 8,   /**< \brief Enable Interrupt Request NVI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   267      IfxSent_InterruptSource_crci = 9,   /**< \brief Enable Interrupt Request crci */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   268      IfxSent_InterruptSource_wsi  = 10,  /**< \brief Enable Interrupt Request wsi */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   269      IfxSent_InterruptSource_sdi  = 11,  /**< \brief Enable Interrupt Request sdi */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   270      IfxSent_InterruptSource_scri = 12,  /**< \brief Enable Interrupt Request scri */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   271      IfxSent_InterruptSource_wdi  = 13   /**< \brief Enable Interrupt Request wdi */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   272  } IfxSent_InterruptSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   273  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   274  /** \addtogroup IfxLld_Sent_Std_Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   275   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   276  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   277  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   278  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   279  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   280  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   281  /** \brief Sets the operation mode of SENT kernel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   282   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   283   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   284   * \param alternateInput alternate input/output pin for SENT operation
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   285   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   286   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   287  IFX_INLINE void IfxSent_setAltiInput(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_AlternateInput alternateInput);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   288  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   289  /** \brief Set the module time stamp pre-divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   290   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   291   * \param timeStampPreDivider time stamp pre-divider value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   292   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   293   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   294  IFX_INLINE void IfxSent_setTimeStampPredivider(Ifx_SENT *sent, uint32 timeStampPreDivider);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   295  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   296  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   297  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   298  /** \addtogroup IfxLld_Sent_Std_Interrupts
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   299   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   300  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   301  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   302  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   303  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   304  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   305  /** \brief Copies the current interrupt flags into the Ifx_SENT_CH_INTSTAT structure, and clears the flags in hardware.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   306   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   307   * This function should be used in an ISR to retrieve the events which triggered the interrupt.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   308   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   309   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   310   * \return Interrupt flags which have been cleared.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   311   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   312  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getAndClearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   313  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   314  /** \brief Gets the current channel status
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   315   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   316   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   317   * \return current channel interrupt status
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   318   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   319  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getChannelInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   320  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   321  /** \brief gets the source for channel interrupt handler
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   322   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   323   * \return interrupt source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   324   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   325  IFX_INLINE volatile Ifx_SRC_SRCR *IfxSent_getChannelSrc(IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   326  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   327  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   328  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   329  /** \addtogroup IfxLld_Sent_Std_Operative
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   330   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   331  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   332  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   333  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   334  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   335  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   336  /** \brief Disable the channel with the channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   337   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   338   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   339   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   340   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   341  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   342  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   343  /** \brief Disable the SENT module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   344   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   345   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   346   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   347  IFX_INLINE void IfxSent_disableModule(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   348  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   349  /** \brief Enable the channel with the channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   350   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   351   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   352   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   353   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   354  IFX_INLINE void IfxSent_enableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   355  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   356  /** \brief Enable the SENT module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   357   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   358   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   359   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   360  IFX_INLINE void IfxSent_enableModule(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   361  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   362  /** \brief Returns the module's suspend state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   363   * TRUE :if module is suspended.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   364   * FALSE:if module is not yet suspended.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   365   * \param sent Pointer to SENT module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   366   * \return Suspend status (TRUE / FALSE)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   367   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   368  IFX_INLINE boolean IfxSent_isModuleSuspended(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   369  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   370  /** \brief Sets the sensitivity of the module to sleep signal
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   371   * \param sent pointer to SENT registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   372   * \param mode mode selection (enable / disable)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   373   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   374   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   375  IFX_INLINE void IfxSent_setSleepMode(Ifx_SENT *sent, IfxSent_SleepMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   376  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   377  /** \brief Configure the Module to Hard/Soft suspend mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   378   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   379   * \param sent Pointer to SENT module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   380   * \param mode Module suspend mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   381   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   382   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   383  IFX_INLINE void IfxSent_setSuspendMode(Ifx_SENT *sent, IfxSent_SuspendMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   384  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   385  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   386  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   387  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   388  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   389  /** \brief Resets the SENT module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   390   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   391   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   392   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   393  IFX_EXTERN void IfxSent_resetModule(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   394  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   395  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   397  /** \addtogroup IfxLld_Sent_Std_Baudrate
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   398   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   399  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   400  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   402  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   403  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   404  /** \brief Sets the channel fractional baudrate divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   405   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   406   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   407   * \param divider channel baudrate fractional divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   408   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   409   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   410  IFX_INLINE void IfxSent_setChannelFractionalDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 divider);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   411  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   412  /** \brief Sets the channel baudrate pre-divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   413   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   414   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   415   * \param preDivider channel baudrate pre-divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   416   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   417   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   418  IFX_INLINE void IfxSent_setChannelPreDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 preDivider);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   419  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   420  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   421  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   422  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   423  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   424  /** \brief Returns the current module frequency in Hertz.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   425   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   426   * \return The current module frequency in Hertz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   427   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   428  IFX_EXTERN float32 IfxSent_getModuleClock(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   429  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   430  /** \brief Initializes the desired unit time (f_tick) for the external SENT device connected to the given channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   431   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   432   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   433   * \param tUnit desired unit time (f_tick), e.g. 3E-6 for 3 uS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   434   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   435   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   436  IFX_EXTERN void IfxSent_initializeChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId, float32 tUnit);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   437  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   438  /** \brief Initialize and get the clock for SENT kernel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   439   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   440   * \param dividerMode Divider mode for clock output
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   441   * \param stepValue clock frequency for for module fractional divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   442   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   443   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   444  IFX_EXTERN void IfxSent_initializeModuleClock(Ifx_SENT *sent, IfxSent_ClockDividerMode dividerMode, uint16 stepValue);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   445  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   446  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   447  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   448  /** \addtogroup IfxLld_Sent_Std_IO
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   449   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   450  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   451  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   452  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   453  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   454  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   455  /** \brief Initializes a SENT input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   456   * \param sentIn the SENT Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   457   * \param inputMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   458   * \param padDriver the pad driver mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   459   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   460   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   461  IFX_INLINE void IfxSent_initSentPin(const IfxSent_Sent_In *sentIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   462  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   463  /** \brief Initializes a SPC output
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   464   * \param spcOut the SPC Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   465   * \param spcOutMode Port Output Mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   466   * \param padDriver the pad driver mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   467   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   468   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   469  IFX_INLINE void IfxSent_initSpcPin(const IfxSent_Spc_Out *spcOut, IfxPort_OutputMode spcOutMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   470  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   471  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   472  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   473  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   474  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   475  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   476  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   477  /** \brief Set the watch dog timer limit value for sent channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   478   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   479   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   480   * \param watchDogTimerLimit Specifies the watch dog timer limit value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   481   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   482   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   483  IFX_INLINE void IfxSent_setWatchDogTimerLimit(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 watchDogTimerLimit);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   484  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   485  /** \brief Return TRUE if SENT module is enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   486   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   487   * \return The status of whether clock for sent is enabled or disabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   488   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   489  IFX_INLINE boolean IfxSent_isModuleEnabled(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   490  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   491  /** \brief Return the Interrupt Status of the SENT channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   492   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   493   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   494   * \param source enable the interrupt source of any interrupt of SENT Channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   495   * \return The Interrupt Status of SENT channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   496   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   497  IFX_INLINE boolean IfxSent_getInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_InterruptSource source);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   498  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   499  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   500   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   501   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   502   * \param source enable the interrupt source of any interrupt of SENT Channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   503   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   504   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   505  IFX_INLINE void IfxSent_clearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_InterruptSource source);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   506  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   507  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   508   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   509   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   510   * \return The Data content of a recieved Data Frame
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   511   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   512  IFX_INLINE uint32 IfxSent_readReceivedData(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   513  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   514  /** \brief Reads and returns value in RSR (Received Status Register).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   515   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   516   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   517   * \return Returns 32 bit RSR
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   518   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   519  IFX_INLINE uint32 IfxSent_readReceivedStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   520  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   521  /** \brief Returns 4 bit CRC value in Receive Status Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   522   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   523   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   524   * \return 4 bit CRC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   525   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   526  IFX_INLINE uint8 IfxSent_readReceivedCrc(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   527  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   528  /** \brief Returns 2 bit CST value in Receive Status Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   529   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   530   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   531   * \return 2 bit CST
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   532   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   533  IFX_INLINE uint8 IfxSent_readReceivedChannelStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   534  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   535  /** \brief Returns 4 bit SCN value in Receive Status Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   536   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   537   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   538   * \return 4 bit SCN
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   539   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   540  IFX_INLINE uint8 IfxSent_readReceivedStatusAndCommunicationNibble(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   541  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   542  /** \brief Returns 32 bit Received Time Stamp Value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   543   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   544   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   545   * \return 32 bit Time Stamp
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   546   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   547  IFX_INLINE uint32 IfxSent_readReceivedTimeStamp(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   548  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   549  /** \brief Returns 6 bit PLEN value in SCR Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   550   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   551   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   552   * \return 6 bit PLEN
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   553   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   554  IFX_INLINE uint8 IfxSent_readSpcPulseLength(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   555  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   556  /** \brief Returns 6 bit Delay length value in SCR Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   557   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   558   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   559   * \return 6 bit DEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   560   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   561  IFX_INLINE uint8 IfxSent_readSpcDelayLength(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   562  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   563  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   564  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   565  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   566  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   567  /** \brief Returns the current unit time (f_tick) of the given channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   568   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   569   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   570   * \return The current unit time in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   571   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   572  IFX_EXTERN float32 IfxSent_getChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   573  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   574  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   575  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   576  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   577  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   578  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   579  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   580      sent->CH[channelId].RCR.B.CEN = 0;
	mul	d15,d0,#64
	addsc.a	a2,a13,d15,#0
	mul	d15,d0,#64
	addsc.a	a4,a13,d15,#0
.L284:
	ld.bu	d15,[a4]264
.L382:
	insert	d15,d15,#0,#0,#1
	st.b	[a2]264,d15
.L135:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    77  nit);
	ld.b	d4,[a12]6
.L383:
	ld.w	d5,[a12]48
	mov.aa	a4,a13
.L291:
	call	IfxSent_initializeChannelUnitTime
.L141:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    78  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    79      Ifx_SENT_CH_WDT tempWDT;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    80      tempWDT.U      = 0;
	mov	d15,#0
.L292:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    81      tempWDT.B.WDLx = config->watchDogTimerLimit;
	ld.hu	d0,[a12]4
.L384:
	insert	d15,d15,d0,#0,#16
.L385:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    82      sentCh->WDT.U  = tempWDT.U;
	st.w	[a15]52,d15
.L144:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    83  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    84      Ifx_SENT_CH_RCR tempRCR;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    85      tempRCR.U       = 0;
	mov	d15,#0
.L293:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    86      tempRCR.B.IEP   = config->receiveControl.endPulseIgnored;
	ld.bu	d0,[a12]23
.L386:
	insert	d15,d15,d0,#1,#1
.L387:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    87      tempRCR.B.ACE   = config->receiveControl.alternateCrcSelected;
	ld.bu	d0,[a12]18
.L388:
	insert	d15,d15,d0,#2,#1
.L389:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    88      tempRCR.B.SNI   = config->receiveControl.statusNibbleEnabled;
	ld.bu	d0,[a12]21
.L390:
	insert	d15,d15,d0,#3,#1
.L391:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    89      tempRCR.B.SDP   = config->receiveControl.serialDataProcessingEnabled;
	ld.bu	d0,[a12]19
.L392:
	insert	d15,d15,d0,#4,#1
.L393:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    90      tempRCR.B.SCDIS = config->receiveControl.serialDataDisabledCrcDisabled;
	ld.bu	d0,[a12]20
.L394:
	insert	d15,d15,d0,#5,#1
.L395:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    91      tempRCR.B.CDIS  = config->receiveControl.crcModeDisabled;
	ld.bu	d0,[a12]16
.L396:
	insert	d15,d15,d0,#6,#1
.L397:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    92      tempRCR.B.CFC   = config->receiveControl.frameCheckMode;
	ld.bu	d0,[a12]26
.L398:
	insert	d15,d15,d0,#7,#1
.L399:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    93      tempRCR.B.FRL   = config->receiveControl.frameLength;
	ld.bu	d0,[a12]25
.L400:
	insert	d15,d15,d0,#8,#8
.L401:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    94      tempRCR.B.CRZ   = config->receiveControl.crcMethodDisabled;
	ld.bu	d0,[a12]17
.L402:
	insert	d15,d15,d0,#16,#1
.L403:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    95      tempRCR.B.ESF   = config->receiveControl.extendedSerialFrameMode;
	ld.bu	d0,[a12]27
.L404:
	insert	d15,d15,d0,#17,#1
.L405:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    96      tempRCR.B.IDE   = config->receiveControl.driftErrorsDisabled;
	ld.bu	d0,[a12]22
.L406:
	insert	d15,d15,d0,#18,#1
.L407:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    97      tempRCR.B.SUSEN = config->receiveControl.suspendTriggered;
	ld.bu	d0,[a12]24
.L408:
	insert	d15,d15,d0,#19,#1
.L409:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    98      sentCh->RCR.U   = tempRCR.U;
	st.w	[a15]8,d15
.L410:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	    99  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   100      IfxSent_enableChannel(sentSFR, config->channelId);
	ld.b	d0,[a12]6
.L148:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     2   * \file IfxSent.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     3   * \brief SENT  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     4   * \ingroup IfxLld_Sent
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    45   * \defgroup IfxLld_Sent_Std_Enumerations Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    46   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    47   * \defgroup IfxLld_Sent_Std_Configuration Configuration Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    48   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    49   * \defgroup IfxLld_Sent_Std_Interrupts Interrupts
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    50   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    51   * \defgroup IfxLld_Sent_Std_Operative Operative Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    52   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    53   * \defgroup IfxLld_Sent_Std_Baudrate Baudrate Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    54   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    55   * \defgroup IfxLld_Sent_Std_IO IO Pin Configuration Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    56   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    57   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    58  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    59  #ifndef IFXSENT_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    60  #define IFXSENT_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    61  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    62  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    63  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    64  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    65  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    66  #include "_Impl/IfxSent_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    67  #include "Src/Std/IfxSrc.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    68  #include "Scu/Std/IfxScuCcu.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    69  #include "_PinMap/IfxSent_PinMap.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    70  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    71  #include "IfxSent_bf.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    72  #include "IfxSent_reg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    73  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    74  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    75  /*-----------------------------------Macros-----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    76  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    77  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    78  #define IFXSENT_INTERRUPT_STATUS_ERROR_FLAGS (0x000037f4)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    79  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    80  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    81  /*--------------------------------Enumerations--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    82  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    83  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    84  /** \addtogroup IfxLld_Sent_Std_Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    85   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    86  /** \brief SENT.CH[channelId].IOCR.ALTI , Specifies alternate input for channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    87   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    88  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    89  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    90      IfxSent_AlternateInput_0 = 0,      /**< \brief Specifies alternate input 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    91      IfxSent_AlternateInput_1,          /**< \brief Specifies alternate input 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    92      IfxSent_AlternateInput_2,          /**< \brief Specifies alternate input 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    93      IfxSent_AlternateInput_3           /**< \brief Specifies alternate input 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    94  } IfxSent_AlternateInput;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    95  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    96  /** \brief SENT.CH[channelId].RSR.CST, Specifies the current channel status
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    97   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    98  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    99  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   100      IfxSent_ChannelStatus_stop        = 0, /**< \brief Specifies the channel is stopped */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   101      IfxSent_ChannelStatus_initialize  = 1, /**< \brief Specifies the channel is initialized */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   102      IfxSent_ChannelStatus_running     = 2, /**< \brief Specifies the channel is running */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   103      IfxSent_ChannelStatus_synchronize = 3  /**< \brief Specifies the channel is synchronized */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   104  } IfxSent_ChannelStatus;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   105  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   106  /** \brief SENT.FDR.DM , Specifies clock divider mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   107   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   108  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   109  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   110      IfxSent_ClockDividerMode_off        = 0, /**< \brief Specifies clock divider mode off */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   111      IfxSent_ClockDividerMode_normal     = 1, /**< \brief Specifies clock normal divider mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   112      IfxSent_ClockDividerMode_fractional = 2  /**< \brief Specifies clock fractional divider mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   113  } IfxSent_ClockDividerMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   114  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   115  /** \brief SENT.CH[channelId].SDS.CON , Specifies received configuration bit value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   116   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   117  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   118  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   119      IfxSent_ConfigBit_0 = 0,      /**< \brief Specifies received configuration bit value 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   120      IfxSent_ConfigBit_1           /**< \brief Specifies received configuration bit value 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   121  } IfxSent_ConfigBit;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   122  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   123  /** \brief SENT.CH[channelId].IOCR.DEPTH , Specifies number of port input samples
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   124   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   125  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   126  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   127      IfxSent_DigitalGlitchesLength_off = 0,  /**< \brief Specifies port input samples off */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   128      IfxSent_DigitalGlitchesLength_1   = 1,  /**< \brief Specifies 1 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   129      IfxSent_DigitalGlitchesLength_2,        /**< \brief Specifies 2 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   130      IfxSent_DigitalGlitchesLength_3,        /**< \brief Specifies 3 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   131      IfxSent_DigitalGlitchesLength_4,        /**< \brief Specifies 4 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   132      IfxSent_DigitalGlitchesLength_5,        /**< \brief Specifies 5 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   133      IfxSent_DigitalGlitchesLength_6,        /**< \brief Specifies 6 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   134      IfxSent_DigitalGlitchesLength_7,        /**< \brief Specifies 7 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   135      IfxSent_DigitalGlitchesLength_8,        /**< \brief Specifies 8 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   136      IfxSent_DigitalGlitchesLength_9,        /**< \brief Specifies 9 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   137      IfxSent_DigitalGlitchesLength_10,       /**< \brief Specifies 10 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   138      IfxSent_DigitalGlitchesLength_11,       /**< \brief Specifies 11 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   139      IfxSent_DigitalGlitchesLength_12,       /**< \brief Specifies 12 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   140      IfxSent_DigitalGlitchesLength_13,       /**< \brief Specifies 13 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   141      IfxSent_DigitalGlitchesLength_14,       /**< \brief Specifies 14 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   142      IfxSent_DigitalGlitchesLength_15        /**< \brief Specifies 15 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   143  } IfxSent_DigitalGlitchesLength;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   144  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   145  /** \brief SENT.CH[channelId].RCR.ESF , Specifies the serial frame structure
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   146   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   147  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   148  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   149      IfxSent_ExtendedSerialFrameMode_standard = 0,  /**< \brief Specifies the standard serial frame structure */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   150      IfxSent_ExtendedSerialFrameMode_extended = 1   /**< \brief Specifies the extended serial frame structure */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   151  } IfxSent_ExtendedSerialFrameMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   152  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   153  /** \brief SENT.CH[channelId].IOCR.ETS , Specifies the external trigger line
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   154   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   155  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   156  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   157      IfxSent_ExternalTrigger_0 = 0,      /**< \brief Specifies the external trigger line 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   158      IfxSent_ExternalTrigger_1,          /**< \brief Specifies the external trigger line 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   159      IfxSent_ExternalTrigger_2,          /**< \brief Specifies the external trigger line 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   160      IfxSent_ExternalTrigger_3,          /**< \brief Specifies the external trigger line 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   161      IfxSent_ExternalTrigger_4,          /**< \brief Specifies the external trigger line 4  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   162      IfxSent_ExternalTrigger_5,          /**< \brief Specifies the external trigger line 5  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   163      IfxSent_ExternalTrigger_6,          /**< \brief Specifies the external trigger line 6  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   164      IfxSent_ExternalTrigger_7,          /**< \brief Specifies the external trigger line 7  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   165      IfxSent_ExternalTrigger_8,          /**< \brief Specifies the external trigger line 8  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   166      IfxSent_ExternalTrigger_9           /**< \brief Specifies the external trigger line 9  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   167  } IfxSent_ExternalTrigger;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   168  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   169  /** \brief SENT.CH[channelId].RCR.CFC, Specifies received frame check mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   170   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   171  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   172  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   173      IfxSent_FrameCheckMode_pastSyncPulse   = 0, /**< \brief Specifies frame check mode against past sync pulse */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   174      IfxSent_FrameCheckMode_futureSuncPulse = 1  /**< \brief Specifies frame check mode against future sync pulse */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   175  } IfxSent_FrameCheckMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   176  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   177  /** \brief SENT.CH[channelId].INP.X(X= RSI,RDI,RBI,TDI,TBI,ERRI,SDI,WDI),Specifies interrupt requested node for respective interrupt
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   178   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   179  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   180  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   181      IfxSent_InterruptNodePointer_0 = 0,           /**< \brief Specifies interrupt requested node 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   182      IfxSent_InterruptNodePointer_1,               /**< \brief Specifies interrupt requested node 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   183      IfxSent_InterruptNodePointer_2,               /**< \brief Specifies interrupt requested node 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   184      IfxSent_InterruptNodePointer_3,               /**< \brief Specifies interrupt requested node 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   185      IfxSent_InterruptNodePointer_trigo0 = 4,      /**< \brief Specifies interrupt requested node TRIGO 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   186      IfxSent_InterruptNodePointer_trigo1,          /**< \brief Specifies interrupt requested node TRIGO 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   187      IfxSent_InterruptNodePointer_trigo2,          /**< \brief Specifies interrupt requested node TRIGO 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   188      IfxSent_InterruptNodePointer_trigo3,          /**< \brief Specifies interrupt requested node TRIGO 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   189      IfxSent_InterruptNodePointer_trigo4,          /**< \brief Specifies interrupt requested node TRIGO 4  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   190      IfxSent_InterruptNodePointer_trigo5           /**< \brief Specifies interrupt requested node TRIGO 5  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   191  } IfxSent_InterruptNodePointer;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   192  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   193  /** \brief SENT.CH[channelId].VIEW.RDNPy( y=0,1,..7 ).Specifies receive data target nibble pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   194   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   195  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   196  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   197      IfxSent_Nibble_0 = 0,      /**< \brief Specifies receive data target nibble pointer to nibble 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   198      IfxSent_Nibble_1,          /**< \brief Specifies receive data target nibble pointer to nibble 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   199      IfxSent_Nibble_2,          /**< \brief Specifies receive data target nibble pointer to nibble 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   200      IfxSent_Nibble_3,          /**< \brief Specifies receive data target nibble pointer to nibble 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   201      IfxSent_Nibble_4,          /**< \brief Specifies receive data target nibble pointer to nibble 4  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   202      IfxSent_Nibble_5,          /**< \brief Specifies receive data target nibble pointer to nibble 5  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   203      IfxSent_Nibble_6,          /**< \brief Specifies receive data target nibble pointer to nibble 6  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   204      IfxSent_Nibble_7           /**< \brief Specifies receive data target nibble pointer to nibble 7  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   205  } IfxSent_Nibble;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   206  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   207  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   208   * Definition in Ifx_SENT.CLC.B.EDIS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   209   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   210  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   211  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   212      IfxSent_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   213      IfxSent_SleepMode_disable = 1  /**< \brief disables sleep mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   214  } IfxSent_SleepMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   215  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   216  /** \brief Specifies the SENT SPC operational mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   217   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   218  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   219  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   220      IfxSent_SpcMode_sync          = 0, /**< \brief Specifies synchronous SPC mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   221      IfxSent_SpcMode_range         = 1, /**< \brief Specifies range selection SPC mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   222      IfxSent_SpcMode_bidirectional = 2  /**< \brief Specifies bidirectional transmit SPC mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   223  } IfxSent_SpcMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   224  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   225  /** \brief OCDS Suspend Control (OCDS.SUS)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   226   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   227  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   228  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   229      IfxSent_SuspendMode_none = 0,  /**< \brief No suspend */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   230      IfxSent_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   231      IfxSent_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   232  } IfxSent_SuspendMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   233  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   234  /** \brief SENT.CH[channelId].SCR.BASE, Specifies selection of pulse based on time
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   235   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   236  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   237  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   238      IfxSent_TimeBase_measuredFrequency = 0,  /**< \brief Specifies selection of pulse based on measured frequency */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   239      IfxSent_TimeBase_nominalFrequency  = 1   /**< \brief Specifies selection of pulse based on nomianl frequency */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   240  } IfxSent_TimeBase;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   241  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   242  /** \brief SENT.CH[channelId].SCR.TRIG, Specifies trigger source for pulse generation
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   243   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   244  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   245  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   246      IfxSent_TriggerSource_off             = 0, /**< \brief Specifies no pulse generation */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   247      IfxSent_TriggerSource_immediate       = 1, /**< \brief Specifies immediate pulse generation */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   248      IfxSent_TriggerSource_fallingEdge     = 2, /**< \brief Specifies pulse generation at fallingEdge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   249      IfxSent_TriggerSource_externalTrigger = 3  /**< \brief Specifies pulse generation after each external trigger */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   250  } IfxSent_TriggerSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   251  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   252  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   253  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   254  /** \brief Sent Interrupt Source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   255   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   256  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   257  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   258      IfxSent_InterruptSource_rsi  = 0,   /**< \brief Enable Interrupt Request RSI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   259      IfxSent_InterruptSource_rdi  = 1,   /**< \brief Enable Interrupt Request RDI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   260      IfxSent_InterruptSource_rbi  = 2,   /**< \brief Enable Interrupt Request RBI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   261      IfxSent_InterruptSource_tdi  = 3,   /**< \brief Enable Interrupt Request TDI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   262      IfxSent_InterruptSource_tbi  = 4,   /**< \brief Enable Interrupt Request TBI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   263      IfxSent_InterruptSource_fri  = 5,   /**< \brief Enable Interrupt Request FRI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   264      IfxSent_InterruptSource_fdi  = 6,   /**< \brief Enable Interrupt Request FDI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   265      IfxSent_InterruptSource_nni  = 7,   /**< \brief Enable Interrupt Request NNI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   266      IfxSent_InterruptSource_nvi  = 8,   /**< \brief Enable Interrupt Request NVI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   267      IfxSent_InterruptSource_crci = 9,   /**< \brief Enable Interrupt Request crci */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   268      IfxSent_InterruptSource_wsi  = 10,  /**< \brief Enable Interrupt Request wsi */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   269      IfxSent_InterruptSource_sdi  = 11,  /**< \brief Enable Interrupt Request sdi */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   270      IfxSent_InterruptSource_scri = 12,  /**< \brief Enable Interrupt Request scri */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   271      IfxSent_InterruptSource_wdi  = 13   /**< \brief Enable Interrupt Request wdi */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   272  } IfxSent_InterruptSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   273  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   274  /** \addtogroup IfxLld_Sent_Std_Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   275   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   276  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   277  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   278  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   279  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   280  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   281  /** \brief Sets the operation mode of SENT kernel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   282   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   283   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   284   * \param alternateInput alternate input/output pin for SENT operation
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   285   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   286   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   287  IFX_INLINE void IfxSent_setAltiInput(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_AlternateInput alternateInput);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   288  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   289  /** \brief Set the module time stamp pre-divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   290   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   291   * \param timeStampPreDivider time stamp pre-divider value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   292   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   293   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   294  IFX_INLINE void IfxSent_setTimeStampPredivider(Ifx_SENT *sent, uint32 timeStampPreDivider);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   295  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   296  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   297  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   298  /** \addtogroup IfxLld_Sent_Std_Interrupts
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   299   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   300  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   301  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   302  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   303  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   304  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   305  /** \brief Copies the current interrupt flags into the Ifx_SENT_CH_INTSTAT structure, and clears the flags in hardware.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   306   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   307   * This function should be used in an ISR to retrieve the events which triggered the interrupt.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   308   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   309   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   310   * \return Interrupt flags which have been cleared.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   311   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   312  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getAndClearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   313  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   314  /** \brief Gets the current channel status
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   315   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   316   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   317   * \return current channel interrupt status
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   318   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   319  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getChannelInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   320  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   321  /** \brief gets the source for channel interrupt handler
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   322   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   323   * \return interrupt source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   324   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   325  IFX_INLINE volatile Ifx_SRC_SRCR *IfxSent_getChannelSrc(IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   326  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   327  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   328  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   329  /** \addtogroup IfxLld_Sent_Std_Operative
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   330   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   331  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   332  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   333  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   334  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   335  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   336  /** \brief Disable the channel with the channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   337   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   338   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   339   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   340   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   341  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   342  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   343  /** \brief Disable the SENT module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   344   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   345   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   346   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   347  IFX_INLINE void IfxSent_disableModule(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   348  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   349  /** \brief Enable the channel with the channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   350   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   351   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   352   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   353   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   354  IFX_INLINE void IfxSent_enableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   355  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   356  /** \brief Enable the SENT module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   357   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   358   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   359   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   360  IFX_INLINE void IfxSent_enableModule(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   361  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   362  /** \brief Returns the module's suspend state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   363   * TRUE :if module is suspended.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   364   * FALSE:if module is not yet suspended.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   365   * \param sent Pointer to SENT module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   366   * \return Suspend status (TRUE / FALSE)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   367   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   368  IFX_INLINE boolean IfxSent_isModuleSuspended(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   369  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   370  /** \brief Sets the sensitivity of the module to sleep signal
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   371   * \param sent pointer to SENT registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   372   * \param mode mode selection (enable / disable)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   373   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   374   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   375  IFX_INLINE void IfxSent_setSleepMode(Ifx_SENT *sent, IfxSent_SleepMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   376  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   377  /** \brief Configure the Module to Hard/Soft suspend mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   378   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   379   * \param sent Pointer to SENT module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   380   * \param mode Module suspend mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   381   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   382   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   383  IFX_INLINE void IfxSent_setSuspendMode(Ifx_SENT *sent, IfxSent_SuspendMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   384  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   385  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   386  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   387  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   388  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   389  /** \brief Resets the SENT module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   390   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   391   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   392   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   393  IFX_EXTERN void IfxSent_resetModule(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   394  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   395  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   397  /** \addtogroup IfxLld_Sent_Std_Baudrate
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   398   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   399  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   400  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   402  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   403  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   404  /** \brief Sets the channel fractional baudrate divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   405   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   406   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   407   * \param divider channel baudrate fractional divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   408   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   409   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   410  IFX_INLINE void IfxSent_setChannelFractionalDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 divider);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   411  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   412  /** \brief Sets the channel baudrate pre-divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   413   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   414   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   415   * \param preDivider channel baudrate pre-divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   416   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   417   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   418  IFX_INLINE void IfxSent_setChannelPreDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 preDivider);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   419  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   420  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   421  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   422  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   423  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   424  /** \brief Returns the current module frequency in Hertz.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   425   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   426   * \return The current module frequency in Hertz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   427   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   428  IFX_EXTERN float32 IfxSent_getModuleClock(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   429  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   430  /** \brief Initializes the desired unit time (f_tick) for the external SENT device connected to the given channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   431   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   432   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   433   * \param tUnit desired unit time (f_tick), e.g. 3E-6 for 3 uS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   434   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   435   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   436  IFX_EXTERN void IfxSent_initializeChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId, float32 tUnit);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   437  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   438  /** \brief Initialize and get the clock for SENT kernel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   439   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   440   * \param dividerMode Divider mode for clock output
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   441   * \param stepValue clock frequency for for module fractional divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   442   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   443   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   444  IFX_EXTERN void IfxSent_initializeModuleClock(Ifx_SENT *sent, IfxSent_ClockDividerMode dividerMode, uint16 stepValue);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   445  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   446  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   447  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   448  /** \addtogroup IfxLld_Sent_Std_IO
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   449   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   450  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   451  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   452  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   453  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   454  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   455  /** \brief Initializes a SENT input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   456   * \param sentIn the SENT Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   457   * \param inputMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   458   * \param padDriver the pad driver mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   459   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   460   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   461  IFX_INLINE void IfxSent_initSentPin(const IfxSent_Sent_In *sentIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   462  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   463  /** \brief Initializes a SPC output
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   464   * \param spcOut the SPC Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   465   * \param spcOutMode Port Output Mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   466   * \param padDriver the pad driver mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   467   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   468   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   469  IFX_INLINE void IfxSent_initSpcPin(const IfxSent_Spc_Out *spcOut, IfxPort_OutputMode spcOutMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   470  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   471  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   472  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   473  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   474  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   475  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   476  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   477  /** \brief Set the watch dog timer limit value for sent channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   478   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   479   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   480   * \param watchDogTimerLimit Specifies the watch dog timer limit value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   481   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   482   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   483  IFX_INLINE void IfxSent_setWatchDogTimerLimit(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 watchDogTimerLimit);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   484  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   485  /** \brief Return TRUE if SENT module is enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   486   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   487   * \return The status of whether clock for sent is enabled or disabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   488   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   489  IFX_INLINE boolean IfxSent_isModuleEnabled(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   490  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   491  /** \brief Return the Interrupt Status of the SENT channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   492   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   493   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   494   * \param source enable the interrupt source of any interrupt of SENT Channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   495   * \return The Interrupt Status of SENT channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   496   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   497  IFX_INLINE boolean IfxSent_getInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_InterruptSource source);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   498  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   499  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   500   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   501   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   502   * \param source enable the interrupt source of any interrupt of SENT Channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   503   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   504   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   505  IFX_INLINE void IfxSent_clearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_InterruptSource source);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   506  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   507  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   508   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   509   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   510   * \return The Data content of a recieved Data Frame
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   511   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   512  IFX_INLINE uint32 IfxSent_readReceivedData(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   513  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   514  /** \brief Reads and returns value in RSR (Received Status Register).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   515   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   516   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   517   * \return Returns 32 bit RSR
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   518   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   519  IFX_INLINE uint32 IfxSent_readReceivedStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   520  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   521  /** \brief Returns 4 bit CRC value in Receive Status Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   522   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   523   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   524   * \return 4 bit CRC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   525   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   526  IFX_INLINE uint8 IfxSent_readReceivedCrc(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   527  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   528  /** \brief Returns 2 bit CST value in Receive Status Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   529   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   530   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   531   * \return 2 bit CST
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   532   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   533  IFX_INLINE uint8 IfxSent_readReceivedChannelStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   534  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   535  /** \brief Returns 4 bit SCN value in Receive Status Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   536   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   537   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   538   * \return 4 bit SCN
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   539   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   540  IFX_INLINE uint8 IfxSent_readReceivedStatusAndCommunicationNibble(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   541  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   542  /** \brief Returns 32 bit Received Time Stamp Value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   543   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   544   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   545   * \return 32 bit Time Stamp
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   546   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   547  IFX_INLINE uint32 IfxSent_readReceivedTimeStamp(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   548  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   549  /** \brief Returns 6 bit PLEN value in SCR Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   550   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   551   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   552   * \return 6 bit PLEN
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   553   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   554  IFX_INLINE uint8 IfxSent_readSpcPulseLength(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   555  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   556  /** \brief Returns 6 bit Delay length value in SCR Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   557   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   558   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   559   * \return 6 bit DEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   560   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   561  IFX_INLINE uint8 IfxSent_readSpcDelayLength(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   562  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   563  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   564  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   565  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   566  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   567  /** \brief Returns the current unit time (f_tick) of the given channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   568   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   569   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   570   * \return The current unit time in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   571   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   572  IFX_EXTERN float32 IfxSent_getChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   573  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   574  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   575  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   576  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   577  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   578  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   579  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   580      sent->CH[channelId].RCR.B.CEN = 0;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   581  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   582  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   583  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   584  IFX_INLINE void IfxSent_disableModule(Ifx_SENT *sent)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   585  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   586      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   587      IfxScuWdt_clearCpuEndinit(passwd);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   588      sent->CLC.B.DISR = 1;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   589      IfxScuWdt_setCpuEndinit(passwd);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   590  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   591  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   592  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   593  IFX_INLINE void IfxSent_enableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   594  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   595      sent->CH[channelId].RCR.B.CEN = 1;
	mul	d15,d0,#64
.L294:
	addsc.a	a2,a13,d15,#0
	mul	d15,d0,#64
	addsc.a	a4,a13,d15,#0
.L411:
	ld.bu	d15,[a4]264
.L412:
	or	d15,#1
	st.b	[a2]264,d15
.L149:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   101  mpVIEW;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   102      tempVIEW.U       = 0;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   103      tempVIEW.B.RDNP0 = config->nibbleControl.nibblePointer0;
	mov	d15,#0
.L295:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   104      tempVIEW.B.RDNP1 = config->nibbleControl.nibblePointer1;
	ld.bu	d0,[a12]52
.L413:
	insert	d15,d15,d0,#0,#3
.L414:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   105      tempVIEW.B.RDNP2 = config->nibbleControl.nibblePointer2;
	ld.bu	d0,[a12]53
.L415:
	insert	d15,d15,d0,#4,#3
.L416:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   106      tempVIEW.B.RDNP3 = config->nibbleControl.nibblePointer3;
	ld.bu	d0,[a12]54
.L417:
	insert	d15,d15,d0,#8,#3
.L418:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   107      tempVIEW.B.RDNP4 = config->nibbleControl.nibblePointer4;
	ld.bu	d0,[a12]55
.L419:
	insert	d15,d15,d0,#12,#3
.L420:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   108      tempVIEW.B.RDNP5 = config->nibbleControl.nibblePointer5;
	ld.bu	d0,[a12]56
.L421:
	insert	d15,d15,d0,#16,#3
.L422:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   109      tempVIEW.B.RDNP6 = config->nibbleControl.nibblePointer6;
	ld.bu	d0,[a12]57
.L423:
	insert	d15,d15,d0,#20,#3
.L424:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   110      tempVIEW.B.RDNP7 = config->nibbleControl.nibblePointer7;
	ld.bu	d0,[a12]58
.L425:
	insert	d15,d15,d0,#24,#3
.L426:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   111      sentCh->VIEW.U   = tempVIEW.U;
	ld.bu	d0,[a12]59
.L427:
	insert	d15,d15,d0,#28,#3
.L428:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   112  
	st.w	[a15]28,d15
.L157:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   113      Ifx_SENT_CH_IOCR tempIOCR;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   114      tempIOCR.U       = 0;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   115      tempIOCR.B.DEPTH = config->inputOutputControl.digitalGlitchFilterDepth;
	mov	d0,#0
.L297:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   116      tempIOCR.B.OIE   = config->inputOutputControl.outputPulsePolarityHigh;
	ld.bu	d15,[a12]14
.L296:
	insert	d0,d0,d15,#4,#4
.L429:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   117      tempIOCR.B.IIE   = config->inputOutputControl.inputPulsePolarityHigh;
	ld.bu	d15,[a12]9
.L430:
	insert	d0,d0,d15,#8,#1
.L431:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   118      tempIOCR.B.CEC   = config->inputOutputControl.edgeCounterCleared;
	ld.bu	d15,[a12]8
.L432:
	insert	d0,d0,d15,#9,#1
.L433:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   119      tempIOCR.B.CREG  = config->inputOutputControl.glitchRisingCleared;
	ld.bu	d15,[a12]10
.L434:
	insert	d0,d0,d15,#10,#1
.L435:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   120      tempIOCR.B.CFEG  = config->inputOutputControl.glitchFallingCleared;
	ld.bu	d15,[a12]12
.L436:
	insert	d0,d0,d15,#14,#1
.L437:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   121      tempIOCR.B.ETS   = config->inputOutputControl.externalTrigger;
	ld.bu	d15,[a12]11
.L438:
	insert	d0,d0,d15,#15,#1
.L439:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   122      tempIOCR.B.CTR   = config->inputOutputControl.triggerMonitorCleared;
	ld.bu	d15,[a12]15
.L440:
	insert	d0,d0,d15,#16,#4
.L441:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   123      sentCh->IOCR.U   = tempIOCR.U;
	ld.bu	d15,[a12]13
.L442:
	insert	d0,d0,d15,#28,#1
.L443:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   124  
	st.w	[a15]20,d0
.L160:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   125      Ifx_SENT_CH_INP tempINP;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   126      tempINP.U       = 0;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   127      tempINP.B.RSI   = config->interuptNodeControl.receiveSuccessInterruptNode;
	mov	d15,#0
.L299:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   128      tempINP.B.RDI   = config->interuptNodeControl.receiveDataInterruptNode;
	ld.bu	d0,[a12]36
.L298:
	insert	d15,d15,d0,#0,#4
.L444:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   129      tempINP.B.RBI   = config->interuptNodeControl.receiveBufferOverflowInterruptNode;
	ld.bu	d0,[a12]37
.L445:
	insert	d15,d15,d0,#4,#4
.L446:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   130      tempINP.B.TDI   = config->interuptNodeControl.transferDataInterruptNode;
	ld.bu	d0,[a12]38
.L447:
	insert	d15,d15,d0,#8,#4
.L448:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   131      tempINP.B.TBI   = config->interuptNodeControl.transferBufferUnderflowInterruptNode;
	ld.bu	d0,[a12]39
.L449:
	insert	d15,d15,d0,#12,#4
.L450:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   132      tempINP.B.ERRI  = config->interuptNodeControl.errorInterruptNode;
	ld.bu	d0,[a12]40
.L451:
	insert	d15,d15,d0,#16,#4
.L452:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   133      tempINP.B.SDI   = config->interuptNodeControl.serialDataReceiveInterruptNode;
	ld.bu	d0,[a12]41
.L453:
	insert	d15,d15,d0,#20,#4
.L454:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   134      tempINP.B.WDI   = config->interuptNodeControl.watchdogErrorInterruptNode;
	ld.bu	d0,[a12]42
.L455:
	insert	d15,d15,d0,#24,#4
.L456:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   135      sentCh->INP.U   = tempINP.U;
	ld.bu	d0,[a12]43
.L457:
	insert	d15,d15,d0,#28,#4
.L458:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   136  
	st.w	[a15]48,d15
.L459:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   137      sentCh->INTEN.U = config->enabledInterrupts.ALL;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   138  
	ld.w	d15,[a12]68
.L300:
	st.w	[a15]44,d15
.L460:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   139      if (config->receiveControl.frameLength > 8)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   140      {
	ld.bu	d15,[a12]25
.L461:
	jlt.u	d15,#9,.L2
.L462:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   141          /* Clear RSI and enable only RDI interrupt */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   142          sentCh->INTEN.B.RSI = 0;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   143          sentCh->INTEN.B.RDI = 1;
	ld.bu	d15,[a15]44
.L463:
	insert	d15,d15,#0,#0,#1
	st.b	[a15]44,d15
.L464:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   144      }
	ld.bu	d15,[a15]44
.L465:
	or	d15,#2
	st.b	[a15]44,d15
.L2:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   145  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   146      if (config->spcModeOn == TRUE)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   147      {
	ld.bu	d15,[a12]64
.L466:
	jne	d15,#1,.L3
.L163:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   148          uint16 timeOut = IFXSENT_CFG_TIMEOUT_VALUE;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   149          uint8  error   = 0;
	mov.u	d0,#65535
.L301:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   150  
	mov	d1,#0
.L303:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   151          /* check if Transaction is in progress, before proceeding !!! */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   152          while ((sentCh->SCR.B.TRQ == 1) && (timeOut > 0))
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   153          {
	j	.L4
.L5:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   154              /* Wait for Transaction to be completed */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   155              timeOut--;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   156          }
	add	d0,#-1
.L4:
	ld.bu	d15,[a15]25
	extr.u	d15,d15,#7,#1
.L467:
	jne	d15,#1,.L6
.L468:
	jge.u	d0,#1,.L5
.L6:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   157  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   158          if (timeOut == 0U)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   159          {
	jne	d0,#0,.L7
.L469:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   160              error = 1U;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   161          }
	mov	d1,#1
.L7:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   162  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   163          if (error == 0U)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   164          {
	jne	d1,#0,.L8
.L166:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   165              Ifx_SENT_CH_SCR tempSCR;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   166              tempSCR.U      = 0;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   167              tempSCR.B.PLEN = config->transmitControl.pulseLength;
	mov	d15,#0
.L304:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   168              tempSCR.B.TRIG = config->transmitControl.triggerSource;
	ld.bu	d0,[a12]28
.L302:
	insert	d15,d15,d0,#0,#6
.L470:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   169              tempSCR.B.DEL  = config->transmitControl.pulseDelayLength;
	ld.bu	d0,[a12]30
.L471:
	insert	d15,d15,d0,#6,#2
.L472:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   170              tempSCR.B.BASE = config->transmitControl.timeBase;
	ld.bu	d0,[a12]29
.L473:
	insert	d15,d15,d0,#8,#6
.L474:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   171              sentCh->SCR.U  = tempSCR.U;
	ld.bu	d0,[a12]31
.L475:
	insert	d15,d15,d0,#14,#1
.L476:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   172  
	st.w	[a15]24,d15
.L477:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   173              if (config->transmitControl.spcMode == IfxSent_SpcMode_bidirectional)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   174              {
	ld.bu	d15,[a12]32
.L305:
	jne	d15,#2,.L9
.L478:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   175                  /* Enable Buffer Underflow interrupt also */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   176                  sentCh->INTEN.B.TBI = 1U;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   177              }
	ld.bu	d15,[a15]44
.L479:
	or	d15,#16
	st.b	[a15]44,d15
.L9:
.L8:
.L3:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   178          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   179      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   180  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   181      const IfxSent_Sent_Pins *pinsConfig = (const IfxSent_Sent_Pins *)config->pins;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   182  
	ld.a	a13,[a12]44
.L288:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   183      if (pinsConfig != NULL_PTR)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   184      {
	jz.a	a13,.L10
.L171:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   185          const IfxSent_Sent_In *sentIn = pinsConfig->in;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   186  
	ld.a	a15,[a13]
.L290:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   187          if (sentIn != NULL_PTR)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   188          {
	jz.a	a15,.L11
.L480:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   189              IfxSent_initSentPin(sentIn, pinsConfig->inMode, pinsConfig->pinDriver);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   190          }
	ld.b	d0,[a13]4
.L481:
	ld.bu	d9,[a13]13
.L175:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     2   * \file IfxSent.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     3   * \brief SENT  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     4   * \ingroup IfxLld_Sent
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    45   * \defgroup IfxLld_Sent_Std_Enumerations Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    46   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    47   * \defgroup IfxLld_Sent_Std_Configuration Configuration Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    48   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    49   * \defgroup IfxLld_Sent_Std_Interrupts Interrupts
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    50   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    51   * \defgroup IfxLld_Sent_Std_Operative Operative Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    52   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    53   * \defgroup IfxLld_Sent_Std_Baudrate Baudrate Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    54   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    55   * \defgroup IfxLld_Sent_Std_IO IO Pin Configuration Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    56   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    57   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    58  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    59  #ifndef IFXSENT_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    60  #define IFXSENT_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    61  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    62  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    63  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    64  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    65  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    66  #include "_Impl/IfxSent_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    67  #include "Src/Std/IfxSrc.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    68  #include "Scu/Std/IfxScuCcu.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    69  #include "_PinMap/IfxSent_PinMap.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    70  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    71  #include "IfxSent_bf.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    72  #include "IfxSent_reg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    73  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    74  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    75  /*-----------------------------------Macros-----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    76  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    77  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    78  #define IFXSENT_INTERRUPT_STATUS_ERROR_FLAGS (0x000037f4)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    79  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    80  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    81  /*--------------------------------Enumerations--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    82  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    83  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    84  /** \addtogroup IfxLld_Sent_Std_Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    85   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    86  /** \brief SENT.CH[channelId].IOCR.ALTI , Specifies alternate input for channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    87   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    88  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    89  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    90      IfxSent_AlternateInput_0 = 0,      /**< \brief Specifies alternate input 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    91      IfxSent_AlternateInput_1,          /**< \brief Specifies alternate input 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    92      IfxSent_AlternateInput_2,          /**< \brief Specifies alternate input 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    93      IfxSent_AlternateInput_3           /**< \brief Specifies alternate input 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    94  } IfxSent_AlternateInput;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    95  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    96  /** \brief SENT.CH[channelId].RSR.CST, Specifies the current channel status
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    97   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    98  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    99  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   100      IfxSent_ChannelStatus_stop        = 0, /**< \brief Specifies the channel is stopped */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   101      IfxSent_ChannelStatus_initialize  = 1, /**< \brief Specifies the channel is initialized */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   102      IfxSent_ChannelStatus_running     = 2, /**< \brief Specifies the channel is running */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   103      IfxSent_ChannelStatus_synchronize = 3  /**< \brief Specifies the channel is synchronized */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   104  } IfxSent_ChannelStatus;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   105  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   106  /** \brief SENT.FDR.DM , Specifies clock divider mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   107   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   108  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   109  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   110      IfxSent_ClockDividerMode_off        = 0, /**< \brief Specifies clock divider mode off */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   111      IfxSent_ClockDividerMode_normal     = 1, /**< \brief Specifies clock normal divider mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   112      IfxSent_ClockDividerMode_fractional = 2  /**< \brief Specifies clock fractional divider mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   113  } IfxSent_ClockDividerMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   114  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   115  /** \brief SENT.CH[channelId].SDS.CON , Specifies received configuration bit value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   116   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   117  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   118  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   119      IfxSent_ConfigBit_0 = 0,      /**< \brief Specifies received configuration bit value 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   120      IfxSent_ConfigBit_1           /**< \brief Specifies received configuration bit value 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   121  } IfxSent_ConfigBit;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   122  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   123  /** \brief SENT.CH[channelId].IOCR.DEPTH , Specifies number of port input samples
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   124   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   125  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   126  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   127      IfxSent_DigitalGlitchesLength_off = 0,  /**< \brief Specifies port input samples off */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   128      IfxSent_DigitalGlitchesLength_1   = 1,  /**< \brief Specifies 1 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   129      IfxSent_DigitalGlitchesLength_2,        /**< \brief Specifies 2 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   130      IfxSent_DigitalGlitchesLength_3,        /**< \brief Specifies 3 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   131      IfxSent_DigitalGlitchesLength_4,        /**< \brief Specifies 4 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   132      IfxSent_DigitalGlitchesLength_5,        /**< \brief Specifies 5 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   133      IfxSent_DigitalGlitchesLength_6,        /**< \brief Specifies 6 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   134      IfxSent_DigitalGlitchesLength_7,        /**< \brief Specifies 7 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   135      IfxSent_DigitalGlitchesLength_8,        /**< \brief Specifies 8 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   136      IfxSent_DigitalGlitchesLength_9,        /**< \brief Specifies 9 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   137      IfxSent_DigitalGlitchesLength_10,       /**< \brief Specifies 10 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   138      IfxSent_DigitalGlitchesLength_11,       /**< \brief Specifies 11 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   139      IfxSent_DigitalGlitchesLength_12,       /**< \brief Specifies 12 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   140      IfxSent_DigitalGlitchesLength_13,       /**< \brief Specifies 13 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   141      IfxSent_DigitalGlitchesLength_14,       /**< \brief Specifies 14 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   142      IfxSent_DigitalGlitchesLength_15        /**< \brief Specifies 15 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   143  } IfxSent_DigitalGlitchesLength;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   144  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   145  /** \brief SENT.CH[channelId].RCR.ESF , Specifies the serial frame structure
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   146   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   147  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   148  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   149      IfxSent_ExtendedSerialFrameMode_standard = 0,  /**< \brief Specifies the standard serial frame structure */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   150      IfxSent_ExtendedSerialFrameMode_extended = 1   /**< \brief Specifies the extended serial frame structure */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   151  } IfxSent_ExtendedSerialFrameMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   152  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   153  /** \brief SENT.CH[channelId].IOCR.ETS , Specifies the external trigger line
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   154   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   155  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   156  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   157      IfxSent_ExternalTrigger_0 = 0,      /**< \brief Specifies the external trigger line 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   158      IfxSent_ExternalTrigger_1,          /**< \brief Specifies the external trigger line 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   159      IfxSent_ExternalTrigger_2,          /**< \brief Specifies the external trigger line 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   160      IfxSent_ExternalTrigger_3,          /**< \brief Specifies the external trigger line 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   161      IfxSent_ExternalTrigger_4,          /**< \brief Specifies the external trigger line 4  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   162      IfxSent_ExternalTrigger_5,          /**< \brief Specifies the external trigger line 5  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   163      IfxSent_ExternalTrigger_6,          /**< \brief Specifies the external trigger line 6  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   164      IfxSent_ExternalTrigger_7,          /**< \brief Specifies the external trigger line 7  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   165      IfxSent_ExternalTrigger_8,          /**< \brief Specifies the external trigger line 8  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   166      IfxSent_ExternalTrigger_9           /**< \brief Specifies the external trigger line 9  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   167  } IfxSent_ExternalTrigger;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   168  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   169  /** \brief SENT.CH[channelId].RCR.CFC, Specifies received frame check mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   170   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   171  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   172  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   173      IfxSent_FrameCheckMode_pastSyncPulse   = 0, /**< \brief Specifies frame check mode against past sync pulse */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   174      IfxSent_FrameCheckMode_futureSuncPulse = 1  /**< \brief Specifies frame check mode against future sync pulse */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   175  } IfxSent_FrameCheckMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   176  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   177  /** \brief SENT.CH[channelId].INP.X(X= RSI,RDI,RBI,TDI,TBI,ERRI,SDI,WDI),Specifies interrupt requested node for respective interrupt
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   178   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   179  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   180  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   181      IfxSent_InterruptNodePointer_0 = 0,           /**< \brief Specifies interrupt requested node 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   182      IfxSent_InterruptNodePointer_1,               /**< \brief Specifies interrupt requested node 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   183      IfxSent_InterruptNodePointer_2,               /**< \brief Specifies interrupt requested node 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   184      IfxSent_InterruptNodePointer_3,               /**< \brief Specifies interrupt requested node 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   185      IfxSent_InterruptNodePointer_trigo0 = 4,      /**< \brief Specifies interrupt requested node TRIGO 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   186      IfxSent_InterruptNodePointer_trigo1,          /**< \brief Specifies interrupt requested node TRIGO 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   187      IfxSent_InterruptNodePointer_trigo2,          /**< \brief Specifies interrupt requested node TRIGO 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   188      IfxSent_InterruptNodePointer_trigo3,          /**< \brief Specifies interrupt requested node TRIGO 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   189      IfxSent_InterruptNodePointer_trigo4,          /**< \brief Specifies interrupt requested node TRIGO 4  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   190      IfxSent_InterruptNodePointer_trigo5           /**< \brief Specifies interrupt requested node TRIGO 5  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   191  } IfxSent_InterruptNodePointer;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   192  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   193  /** \brief SENT.CH[channelId].VIEW.RDNPy( y=0,1,..7 ).Specifies receive data target nibble pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   194   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   195  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   196  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   197      IfxSent_Nibble_0 = 0,      /**< \brief Specifies receive data target nibble pointer to nibble 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   198      IfxSent_Nibble_1,          /**< \brief Specifies receive data target nibble pointer to nibble 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   199      IfxSent_Nibble_2,          /**< \brief Specifies receive data target nibble pointer to nibble 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   200      IfxSent_Nibble_3,          /**< \brief Specifies receive data target nibble pointer to nibble 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   201      IfxSent_Nibble_4,          /**< \brief Specifies receive data target nibble pointer to nibble 4  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   202      IfxSent_Nibble_5,          /**< \brief Specifies receive data target nibble pointer to nibble 5  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   203      IfxSent_Nibble_6,          /**< \brief Specifies receive data target nibble pointer to nibble 6  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   204      IfxSent_Nibble_7           /**< \brief Specifies receive data target nibble pointer to nibble 7  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   205  } IfxSent_Nibble;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   206  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   207  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   208   * Definition in Ifx_SENT.CLC.B.EDIS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   209   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   210  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   211  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   212      IfxSent_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   213      IfxSent_SleepMode_disable = 1  /**< \brief disables sleep mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   214  } IfxSent_SleepMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   215  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   216  /** \brief Specifies the SENT SPC operational mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   217   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   218  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   219  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   220      IfxSent_SpcMode_sync          = 0, /**< \brief Specifies synchronous SPC mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   221      IfxSent_SpcMode_range         = 1, /**< \brief Specifies range selection SPC mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   222      IfxSent_SpcMode_bidirectional = 2  /**< \brief Specifies bidirectional transmit SPC mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   223  } IfxSent_SpcMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   224  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   225  /** \brief OCDS Suspend Control (OCDS.SUS)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   226   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   227  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   228  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   229      IfxSent_SuspendMode_none = 0,  /**< \brief No suspend */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   230      IfxSent_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   231      IfxSent_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   232  } IfxSent_SuspendMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   233  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   234  /** \brief SENT.CH[channelId].SCR.BASE, Specifies selection of pulse based on time
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   235   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   236  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   237  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   238      IfxSent_TimeBase_measuredFrequency = 0,  /**< \brief Specifies selection of pulse based on measured frequency */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   239      IfxSent_TimeBase_nominalFrequency  = 1   /**< \brief Specifies selection of pulse based on nomianl frequency */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   240  } IfxSent_TimeBase;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   241  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   242  /** \brief SENT.CH[channelId].SCR.TRIG, Specifies trigger source for pulse generation
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   243   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   244  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   245  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   246      IfxSent_TriggerSource_off             = 0, /**< \brief Specifies no pulse generation */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   247      IfxSent_TriggerSource_immediate       = 1, /**< \brief Specifies immediate pulse generation */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   248      IfxSent_TriggerSource_fallingEdge     = 2, /**< \brief Specifies pulse generation at fallingEdge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   249      IfxSent_TriggerSource_externalTrigger = 3  /**< \brief Specifies pulse generation after each external trigger */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   250  } IfxSent_TriggerSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   251  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   252  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   253  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   254  /** \brief Sent Interrupt Source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   255   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   256  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   257  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   258      IfxSent_InterruptSource_rsi  = 0,   /**< \brief Enable Interrupt Request RSI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   259      IfxSent_InterruptSource_rdi  = 1,   /**< \brief Enable Interrupt Request RDI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   260      IfxSent_InterruptSource_rbi  = 2,   /**< \brief Enable Interrupt Request RBI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   261      IfxSent_InterruptSource_tdi  = 3,   /**< \brief Enable Interrupt Request TDI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   262      IfxSent_InterruptSource_tbi  = 4,   /**< \brief Enable Interrupt Request TBI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   263      IfxSent_InterruptSource_fri  = 5,   /**< \brief Enable Interrupt Request FRI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   264      IfxSent_InterruptSource_fdi  = 6,   /**< \brief Enable Interrupt Request FDI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   265      IfxSent_InterruptSource_nni  = 7,   /**< \brief Enable Interrupt Request NNI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   266      IfxSent_InterruptSource_nvi  = 8,   /**< \brief Enable Interrupt Request NVI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   267      IfxSent_InterruptSource_crci = 9,   /**< \brief Enable Interrupt Request crci */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   268      IfxSent_InterruptSource_wsi  = 10,  /**< \brief Enable Interrupt Request wsi */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   269      IfxSent_InterruptSource_sdi  = 11,  /**< \brief Enable Interrupt Request sdi */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   270      IfxSent_InterruptSource_scri = 12,  /**< \brief Enable Interrupt Request scri */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   271      IfxSent_InterruptSource_wdi  = 13   /**< \brief Enable Interrupt Request wdi */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   272  } IfxSent_InterruptSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   273  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   274  /** \addtogroup IfxLld_Sent_Std_Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   275   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   276  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   277  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   278  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   279  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   280  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   281  /** \brief Sets the operation mode of SENT kernel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   282   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   283   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   284   * \param alternateInput alternate input/output pin for SENT operation
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   285   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   286   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   287  IFX_INLINE void IfxSent_setAltiInput(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_AlternateInput alternateInput);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   288  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   289  /** \brief Set the module time stamp pre-divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   290   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   291   * \param timeStampPreDivider time stamp pre-divider value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   292   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   293   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   294  IFX_INLINE void IfxSent_setTimeStampPredivider(Ifx_SENT *sent, uint32 timeStampPreDivider);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   295  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   296  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   297  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   298  /** \addtogroup IfxLld_Sent_Std_Interrupts
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   299   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   300  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   301  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   302  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   303  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   304  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   305  /** \brief Copies the current interrupt flags into the Ifx_SENT_CH_INTSTAT structure, and clears the flags in hardware.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   306   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   307   * This function should be used in an ISR to retrieve the events which triggered the interrupt.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   308   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   309   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   310   * \return Interrupt flags which have been cleared.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   311   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   312  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getAndClearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   313  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   314  /** \brief Gets the current channel status
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   315   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   316   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   317   * \return current channel interrupt status
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   318   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   319  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getChannelInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   320  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   321  /** \brief gets the source for channel interrupt handler
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   322   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   323   * \return interrupt source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   324   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   325  IFX_INLINE volatile Ifx_SRC_SRCR *IfxSent_getChannelSrc(IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   326  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   327  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   328  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   329  /** \addtogroup IfxLld_Sent_Std_Operative
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   330   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   331  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   332  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   333  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   334  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   335  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   336  /** \brief Disable the channel with the channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   337   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   338   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   339   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   340   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   341  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   342  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   343  /** \brief Disable the SENT module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   344   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   345   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   346   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   347  IFX_INLINE void IfxSent_disableModule(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   348  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   349  /** \brief Enable the channel with the channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   350   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   351   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   352   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   353   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   354  IFX_INLINE void IfxSent_enableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   355  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   356  /** \brief Enable the SENT module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   357   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   358   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   359   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   360  IFX_INLINE void IfxSent_enableModule(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   361  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   362  /** \brief Returns the module's suspend state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   363   * TRUE :if module is suspended.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   364   * FALSE:if module is not yet suspended.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   365   * \param sent Pointer to SENT module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   366   * \return Suspend status (TRUE / FALSE)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   367   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   368  IFX_INLINE boolean IfxSent_isModuleSuspended(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   369  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   370  /** \brief Sets the sensitivity of the module to sleep signal
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   371   * \param sent pointer to SENT registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   372   * \param mode mode selection (enable / disable)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   373   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   374   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   375  IFX_INLINE void IfxSent_setSleepMode(Ifx_SENT *sent, IfxSent_SleepMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   376  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   377  /** \brief Configure the Module to Hard/Soft suspend mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   378   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   379   * \param sent Pointer to SENT module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   380   * \param mode Module suspend mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   381   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   382   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   383  IFX_INLINE void IfxSent_setSuspendMode(Ifx_SENT *sent, IfxSent_SuspendMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   384  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   385  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   386  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   387  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   388  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   389  /** \brief Resets the SENT module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   390   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   391   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   392   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   393  IFX_EXTERN void IfxSent_resetModule(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   394  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   395  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   397  /** \addtogroup IfxLld_Sent_Std_Baudrate
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   398   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   399  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   400  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   402  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   403  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   404  /** \brief Sets the channel fractional baudrate divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   405   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   406   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   407   * \param divider channel baudrate fractional divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   408   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   409   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   410  IFX_INLINE void IfxSent_setChannelFractionalDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 divider);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   411  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   412  /** \brief Sets the channel baudrate pre-divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   413   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   414   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   415   * \param preDivider channel baudrate pre-divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   416   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   417   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   418  IFX_INLINE void IfxSent_setChannelPreDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 preDivider);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   419  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   420  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   421  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   422  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   423  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   424  /** \brief Returns the current module frequency in Hertz.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   425   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   426   * \return The current module frequency in Hertz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   427   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   428  IFX_EXTERN float32 IfxSent_getModuleClock(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   429  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   430  /** \brief Initializes the desired unit time (f_tick) for the external SENT device connected to the given channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   431   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   432   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   433   * \param tUnit desired unit time (f_tick), e.g. 3E-6 for 3 uS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   434   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   435   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   436  IFX_EXTERN void IfxSent_initializeChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId, float32 tUnit);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   437  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   438  /** \brief Initialize and get the clock for SENT kernel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   439   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   440   * \param dividerMode Divider mode for clock output
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   441   * \param stepValue clock frequency for for module fractional divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   442   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   443   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   444  IFX_EXTERN void IfxSent_initializeModuleClock(Ifx_SENT *sent, IfxSent_ClockDividerMode dividerMode, uint16 stepValue);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   445  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   446  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   447  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   448  /** \addtogroup IfxLld_Sent_Std_IO
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   449   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   450  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   451  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   452  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   453  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   454  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   455  /** \brief Initializes a SENT input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   456   * \param sentIn the SENT Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   457   * \param inputMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   458   * \param padDriver the pad driver mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   459   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   460   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   461  IFX_INLINE void IfxSent_initSentPin(const IfxSent_Sent_In *sentIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   462  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   463  /** \brief Initializes a SPC output
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   464   * \param spcOut the SPC Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   465   * \param spcOutMode Port Output Mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   466   * \param padDriver the pad driver mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   467   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   468   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   469  IFX_INLINE void IfxSent_initSpcPin(const IfxSent_Spc_Out *spcOut, IfxPort_OutputMode spcOutMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   470  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   471  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   472  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   473  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   474  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   475  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   476  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   477  /** \brief Set the watch dog timer limit value for sent channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   478   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   479   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   480   * \param watchDogTimerLimit Specifies the watch dog timer limit value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   481   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   482   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   483  IFX_INLINE void IfxSent_setWatchDogTimerLimit(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 watchDogTimerLimit);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   484  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   485  /** \brief Return TRUE if SENT module is enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   486   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   487   * \return The status of whether clock for sent is enabled or disabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   488   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   489  IFX_INLINE boolean IfxSent_isModuleEnabled(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   490  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   491  /** \brief Return the Interrupt Status of the SENT channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   492   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   493   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   494   * \param source enable the interrupt source of any interrupt of SENT Channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   495   * \return The Interrupt Status of SENT channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   496   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   497  IFX_INLINE boolean IfxSent_getInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_InterruptSource source);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   498  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   499  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   500   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   501   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   502   * \param source enable the interrupt source of any interrupt of SENT Channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   503   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   504   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   505  IFX_INLINE void IfxSent_clearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_InterruptSource source);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   506  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   507  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   508   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   509   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   510   * \return The Data content of a recieved Data Frame
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   511   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   512  IFX_INLINE uint32 IfxSent_readReceivedData(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   513  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   514  /** \brief Reads and returns value in RSR (Received Status Register).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   515   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   516   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   517   * \return Returns 32 bit RSR
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   518   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   519  IFX_INLINE uint32 IfxSent_readReceivedStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   520  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   521  /** \brief Returns 4 bit CRC value in Receive Status Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   522   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   523   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   524   * \return 4 bit CRC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   525   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   526  IFX_INLINE uint8 IfxSent_readReceivedCrc(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   527  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   528  /** \brief Returns 2 bit CST value in Receive Status Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   529   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   530   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   531   * \return 2 bit CST
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   532   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   533  IFX_INLINE uint8 IfxSent_readReceivedChannelStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   534  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   535  /** \brief Returns 4 bit SCN value in Receive Status Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   536   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   537   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   538   * \return 4 bit SCN
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   539   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   540  IFX_INLINE uint8 IfxSent_readReceivedStatusAndCommunicationNibble(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   541  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   542  /** \brief Returns 32 bit Received Time Stamp Value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   543   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   544   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   545   * \return 32 bit Time Stamp
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   546   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   547  IFX_INLINE uint32 IfxSent_readReceivedTimeStamp(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   548  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   549  /** \brief Returns 6 bit PLEN value in SCR Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   550   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   551   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   552   * \return 6 bit PLEN
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   553   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   554  IFX_INLINE uint8 IfxSent_readSpcPulseLength(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   555  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   556  /** \brief Returns 6 bit Delay length value in SCR Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   557   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   558   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   559   * \return 6 bit DEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   560   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   561  IFX_INLINE uint8 IfxSent_readSpcDelayLength(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   562  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   563  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   564  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   565  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   566  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   567  /** \brief Returns the current unit time (f_tick) of the given channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   568   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   569   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   570   * \return The current unit time in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   571   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   572  IFX_EXTERN float32 IfxSent_getChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   573  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   574  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   575  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   576  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   577  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   578  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   579  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   580      sent->CH[channelId].RCR.B.CEN = 0;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   581  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   582  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   583  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   584  IFX_INLINE void IfxSent_disableModule(Ifx_SENT *sent)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   585  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   586      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   587      IfxScuWdt_clearCpuEndinit(passwd);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   588      sent->CLC.B.DISR = 1;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   589      IfxScuWdt_setCpuEndinit(passwd);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   590  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   591  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   592  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   593  IFX_INLINE void IfxSent_enableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   594  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   595      sent->CH[channelId].RCR.B.CEN = 1;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   596  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   597  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   598  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   599  IFX_INLINE void IfxSent_enableModule(Ifx_SENT *sent)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   600  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   601      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   602      IfxScuWdt_clearCpuEndinit(passwd);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   603      sent->CLC.B.DISR = 0;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   604      IfxScuWdt_setCpuEndinit(passwd);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   605  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   606      if (sent->CLC.U)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   607      {}
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   608  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   609  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   610  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   611  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getAndClearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   612  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   613      Ifx_SENT_CH_INTSTAT interruptFlags;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   614      interruptFlags.U             = sent->CH[channelId].INTSTAT.U;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   615      sent->CH[channelId].INTCLR.U = interruptFlags.U;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   616      return interruptFlags;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   617  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   618  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   619  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   620  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getChannelInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   621  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   622      Ifx_SENT_CH_INTSTAT interruptFlags;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   623      interruptFlags.U = sent->CH[channelId].INTSTAT.U;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   624      return interruptFlags;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   625  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   626  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   627  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   628  IFX_INLINE volatile Ifx_SRC_SRCR *IfxSent_getChannelSrc(IfxSent_ChannelId channelId)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   629  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   630      return &MODULE_SRC.SENT.SENT[0].SR[channelId];
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   631  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   632  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   633  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   634  IFX_INLINE void IfxSent_initSentPin(const IfxSent_Sent_In *sentIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   635  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   636      if (sentIn->pin.port != NULL_PTR)
	ld.w	d15,[a15]8
.L482:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   636      if (sentIn->pin.port != NULL_PTR)      (inlined)
	jeq	d15,#0,.L12
.L483:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   637      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   638          IfxPort_setPinModeInput(sentIn->pin.port, sentIn->pin.pinIndex, inputMode);
	ld.a	a4,[a15]8
.L484:
	ld.bu	d4,[a15]12
.L184:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    45   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    46   * \defgroup IfxLld_Port_Std_Enum Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    47   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    48   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    49   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    50   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    51   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    52   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    53   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    54   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    55  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    56  #ifndef IFXPORT_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    57  #define IFXPORT_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    58  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    59  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    60  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    61  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    62  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    63  #include "_Impl/IfxPort_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    64  #include "Scu/Std/IfxScuWdt.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    65  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    66  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    67  /*--------------------------------Enumerations--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    68  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    69  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    70  /** \addtogroup IfxLld_Port_Std_Enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    71   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    72  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    73   * HSCT module.declared in MODULE_PORTx.LPCRx
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    74   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    76  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    77      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    78      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    79  } IfxPort_ControlledBy;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    80  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    81  /** \brief Ifx_P output modification modes definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    82   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    83  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    84  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    85      IfxPort_InputMode_undefined    = -1,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    86      IfxPort_InputMode_noPullDevice = 0 << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    87          IfxPort_InputMode_pullDown = 1U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    88          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    89  } IfxPort_InputMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    90  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    91  /** \brief Ifx_P input / output mode definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    92   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    93   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    94   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    95  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    96  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    97      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    98      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    99      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   100      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   101      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   102      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   103      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   104      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   105      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   106      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   107      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   108      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   109      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   110      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   111      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   112      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   113      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   114      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   115      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   116  } IfxPort_Mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   117  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   118  /** \brief Pin output alternate index
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   119   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   120  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   121  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   122      IfxPort_OutputIdx_general  = 0x10U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   123          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   124          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   125          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   126          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   127          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   128          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   129          IfxPort_OutputIdx_alt7 = 0x17U << 3
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   130  } IfxPort_OutputIdx;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   131  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   132  /** \brief Pin output mode definition
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   133   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   134  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   135  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   136      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   137          IfxPort_OutputMode_openDrain = 0x18U << 3
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_OutputMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   139  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   140  /** \brief Pad driver mode definition (strength and slew rate).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   141   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   142   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   143   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   144  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   145  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   146      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   147      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   148      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   149      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   150      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   151      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   152      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   153      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   154      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   155      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   156      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   157      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_PadDriver;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   159  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   160  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   161   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   162  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   163  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   164      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   165      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   166  } IfxPort_PadSupply;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   167  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   168  /** \brief Ifx_P output modification modes definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   169   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   170   * \see Ifx_P.OMR, IfxPort_setPinState()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   171   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   172  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   173  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   174      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   175      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   176      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   177      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   178  } IfxPort_State;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   179  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   180  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   181  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   182  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   183  /*-----------------------------Data Structures--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   184  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   185  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   186  /** \addtogroup IfxLld_Port_Std_DataStructures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   187   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   188  /** \brief Defines a pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   189   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   190  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   191  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   192      Ifx_P *port;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   193      uint8  pinIndex;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   194  } IfxPort_Pin;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   195  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   196  /** \brief To configure pins
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   197   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   198  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   199  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   200      Ifx_P            *port;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   201      uint8             pinIndex;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   202      IfxPort_OutputIdx mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   203      IfxPort_PadDriver padDriver;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   204  } IfxPort_Pin_Config;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   205  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   206  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   207  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   208  /** \addtogroup IfxLld_Port_Std_SinglePin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   209   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   210  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   211  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   212  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   213  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   214  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   215  /** \brief Return the port state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   216   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   217   * \param pinIndex Specifies the pin for which the state should be returned.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   218   * \return Returns TRUE the pin is high; FALSE the pin is low
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   219   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   220   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   221   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   222   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   223   *      // ...
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   224   *    }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   225   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   226   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   227   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   228  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   229  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   230  /** \brief Set the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   231   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   232   * \param pinIndex Specifies the pin to be set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   233   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   234   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   235   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   236   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   237   * IfxPort_setPinHigh(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   238   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   239   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   240   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   241   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   242   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   243  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   244  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   245  /** \brief Reset the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   246   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   247   * \param pinIndex Specifies the pin to be reset.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   248   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   249   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   250   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   251   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   252   * IfxPort_setPinLow(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   253   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   254   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   255   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   256   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   257   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   258  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   259  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   260  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   261   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   262   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   263   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   264   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   265   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   266   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   267   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   268   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   269   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   270   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   271   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   272  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   273  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   274  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   275   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   276   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   277   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   278   * \param index Specifies the alternate (or general purpose) output channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   279   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   280   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   281   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   282   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   283   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   284   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   285   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   286   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   287  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   288  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   289  /** \brief Set / Resets / Toggle the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   290   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   291   * \param pinIndex Specifies the pin to modify.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   292   * \param action Specifies the action: set, reset, toggle.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   293   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   294   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   295   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   296   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   297   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   298   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   299   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   300   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   301   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   302   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   303  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   304  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   305  /** \brief Toggle the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin to be toggled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   308   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   309   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   311   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   312   * IfxPort_togglePin(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   313   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   314   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   315   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   316   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   317   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   318  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   319  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   320  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   321  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   322  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   323  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   324  /** \brief Disable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   325   * This function disables the emergency stop function. A check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   326   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   327   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   328   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   329   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   330   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   331   * /code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   332   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   333   *     {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   334   *         // failed to disable emergency stop for P33.0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   335   *     }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   336   * /endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   337   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   338   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   339   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   340   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   341  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   342  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   343  /** \brief Enable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   344   * This function enables the emergency stop function. A check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   345   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   346   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   347   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   348   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   350   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   351   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   352   *       // failed to enable emergency stop for P33.0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   353   *     }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   354   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   355   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   356   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   357   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   358   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   359  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   360  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   361  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   362   * Also Configures the P40/P41 Port for digital functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   363   * which bydefault support analog functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   364   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   365   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   366   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   367   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   368   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   369   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   370   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   371   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   372   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   373   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   374   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   375  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   376  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   377  /** \brief Configure the pad driver mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   378   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   379   * \param pinIndex Specifies the pin for which the mode will be set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   380   * \param padDriver Specifies the driver mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   381   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   382   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   383   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   384   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   385   * // enable strong 3.3V driver
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   386   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   387   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   388   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   389   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   390  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   391  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   392  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   393  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   394  /** \addtogroup IfxLld_Port_Std_PortGroup
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   395   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   397  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   398  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   399  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   400  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   401  /** \brief Return the port group state
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   402   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   403   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   404   * \param mask selects the pins which should be read (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   405   * \return Returns the selected pin values
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   406   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   407   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   408   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   409   * // read the current value of P33[7:0]
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   410   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   411   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   412   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   413   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   414  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   415  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   416  /** \brief Set the port group state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   417   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   418   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   419   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   420   * \param data specifies the value which should be set
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   421   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   422   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   423   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   424   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   425   * // configure P33.[7:0] as GPIO outputs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   426   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   427   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   428   * // set initial value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   429   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   430   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   431   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   432   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   433  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   434  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   435  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   436  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   437  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   438  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   439  /** \brief Returns the module address of the selected Port module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   440   * \param port Pointer to PORT module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   441   * \return PORT module register address
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   442   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   443  IFX_EXTERN Ifx_P *IfxPort_getAddress(IfxPort_Index port);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   444  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   445  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   446   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   447   * \return port index of IfxModule_IndexMap. return -1 in case of unknown port index.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   448   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   449  IFX_EXTERN IfxPort_Index IfxPort_getIndex(Ifx_P *port);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   450  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   451  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   452   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   453   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   454   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   455   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   456   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   457   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   458   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   459   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   460   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   461   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   462   *  \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   463   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   464   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   465  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   466  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   467  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   468   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   469   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   470   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   471   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   472   * \param index Specifies the alternate (or general purpose) output channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   473   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   474   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   475   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   476   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   477   * // configure P33.[7:0] as GPIO outputs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   478   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   479   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   480   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   481   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   482  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   483  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   484  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   485   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   486   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   487   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   488   * \param padDriver Specifies the pad driver strength.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   489   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   490   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   491   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   492   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   493   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   494   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   495   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   496   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   497   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   498  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   499  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   500  /** \brief set LVDSH mode (configured for Port21)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   501   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   502   * \param pinIndex specifies pin  to be modified
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   503   * \param mode specifes the mode of pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   504   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   505   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   506   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   508  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   509  /** \brief set LVDSM mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   510   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   511   * \param pinIndex specifies pin to be modified
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   512   * \param lvdsPadDriver select speed grade of LVDS Pad
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   513   * \param padSupply select the PAD supply (5/3.3V)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   514   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   515   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   516  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   517  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   518  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   519  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   521  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   523  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   524  /** \brief Disable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   525   * This function disables the emergency stop function. No check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   526   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   527   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   528   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   529   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   530   * \see IfxPort_disableEmergencyStop()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   531   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   532   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   533  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   534  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   535  /** \brief Enable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   536   * This function enables the emergency stop function. No check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   537   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   538   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   539   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   540   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   541   * \see IfxPort_enableEmergencyStop()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   542   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   543   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   544  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   545  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   546  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   547  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   548  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   549  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   550  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   551  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   552      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   553  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   554  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   555  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   556  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   557  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   558      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   559  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   560  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   561  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   562  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   563  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   564      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   565  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   566  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   567  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   568  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   569  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   570      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   571  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   572  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   573  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   574  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   575  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   576      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   577  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   578  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   579  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   580  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   581  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   582      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
	extr.u	d5,d0,#0,#8
	call	IfxPort_setPinMode
.L185:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   639  ltiInput(sentIn->module, sentIn->channelId, (IfxSent_AlternateInput)sentIn->select);
	ld.a	a4,[a15]8
.L485:
	ld.bu	d4,[a15]12
.L486:
	mov	d5,d9
	call	IfxPort_setPinPadDriver
.L487:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   640      }
	ld.a	a2,[a15]
.L488:
	ld.b	d0,[a15]4
.L489:
	ld.bu	d1,[a15]16
.L194:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   641  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   642  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   643  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   644  IFX_INLINE void IfxSent_initSpcPin(const IfxSent_Spc_Out *spcOut, IfxPort_OutputMode spcOutMode, IfxPort_PadDriver padDriver)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   645  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   646      if (spcOut->pin.port != NULL_PTR)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   647      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   648          IfxPort_setPinModeOutput(spcOut->pin.port, spcOut->pin.pinIndex, spcOutMode, spcOut->select);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   649          IfxPort_setPinPadDriver(spcOut->pin.port, spcOut->pin.pinIndex, padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   650      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   651  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   652  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   653  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   654  IFX_INLINE boolean IfxSent_isModuleSuspended(Ifx_SENT *sent)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   655  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   656      Ifx_SENT_OCS ocs;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   657  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   658      // read the status
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   659      ocs.U = sent->OCS.U;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   660  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   661      // return the status
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   662      return ocs.B.SUSSTA;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   663  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   664  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   665  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   666  IFX_INLINE void IfxSent_setAltiInput(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_AlternateInput alternateInput)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   667  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   668      sent->CH[channelId].IOCR.B.ALTI = alternateInput;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   669  }
	mul	d15,d0,#64
	addsc.a	a15,a2,d15,#0
.L306:
	mul	d15,d0,#64
	addsc.a	a2,a2,d15,#0
.L490:
	ld.bu	d15,[a2]276
.L491:
	insert	d15,d15,d1,#0,#2
	st.b	[a15]276,d15

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   636      if (sentIn->pin.port != NULL_PTR)      (inlined)
.L12:
.L11:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   191  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   192          {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   193              IfxSent_initSpcPin(spcOut, pinsConfig->outMode, pinsConfig->pinDriver);
	ld.a	a15,[a13]8
.L307:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   194          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   195      }
	jz.a	a15,.L13
.L492:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   196  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   197      {
	ld.bu	d0,[a13]12
.L493:
	ld.bu	d9,[a13]13
.L205:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     2   * \file IfxSent.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     3   * \brief SENT  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     4   * \ingroup IfxLld_Sent
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    45   * \defgroup IfxLld_Sent_Std_Enumerations Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    46   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    47   * \defgroup IfxLld_Sent_Std_Configuration Configuration Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    48   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    49   * \defgroup IfxLld_Sent_Std_Interrupts Interrupts
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    50   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    51   * \defgroup IfxLld_Sent_Std_Operative Operative Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    52   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    53   * \defgroup IfxLld_Sent_Std_Baudrate Baudrate Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    54   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    55   * \defgroup IfxLld_Sent_Std_IO IO Pin Configuration Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    56   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    57   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    58  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    59  #ifndef IFXSENT_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    60  #define IFXSENT_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    61  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    62  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    63  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    64  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    65  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    66  #include "_Impl/IfxSent_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    67  #include "Src/Std/IfxSrc.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    68  #include "Scu/Std/IfxScuCcu.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    69  #include "_PinMap/IfxSent_PinMap.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    70  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    71  #include "IfxSent_bf.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    72  #include "IfxSent_reg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    73  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    74  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    75  /*-----------------------------------Macros-----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    76  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    77  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    78  #define IFXSENT_INTERRUPT_STATUS_ERROR_FLAGS (0x000037f4)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    79  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    80  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    81  /*--------------------------------Enumerations--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    82  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    83  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    84  /** \addtogroup IfxLld_Sent_Std_Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    85   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    86  /** \brief SENT.CH[channelId].IOCR.ALTI , Specifies alternate input for channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    87   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    88  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    89  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    90      IfxSent_AlternateInput_0 = 0,      /**< \brief Specifies alternate input 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    91      IfxSent_AlternateInput_1,          /**< \brief Specifies alternate input 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    92      IfxSent_AlternateInput_2,          /**< \brief Specifies alternate input 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    93      IfxSent_AlternateInput_3           /**< \brief Specifies alternate input 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    94  } IfxSent_AlternateInput;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    95  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    96  /** \brief SENT.CH[channelId].RSR.CST, Specifies the current channel status
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    97   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    98  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    99  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   100      IfxSent_ChannelStatus_stop        = 0, /**< \brief Specifies the channel is stopped */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   101      IfxSent_ChannelStatus_initialize  = 1, /**< \brief Specifies the channel is initialized */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   102      IfxSent_ChannelStatus_running     = 2, /**< \brief Specifies the channel is running */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   103      IfxSent_ChannelStatus_synchronize = 3  /**< \brief Specifies the channel is synchronized */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   104  } IfxSent_ChannelStatus;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   105  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   106  /** \brief SENT.FDR.DM , Specifies clock divider mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   107   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   108  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   109  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   110      IfxSent_ClockDividerMode_off        = 0, /**< \brief Specifies clock divider mode off */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   111      IfxSent_ClockDividerMode_normal     = 1, /**< \brief Specifies clock normal divider mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   112      IfxSent_ClockDividerMode_fractional = 2  /**< \brief Specifies clock fractional divider mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   113  } IfxSent_ClockDividerMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   114  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   115  /** \brief SENT.CH[channelId].SDS.CON , Specifies received configuration bit value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   116   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   117  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   118  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   119      IfxSent_ConfigBit_0 = 0,      /**< \brief Specifies received configuration bit value 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   120      IfxSent_ConfigBit_1           /**< \brief Specifies received configuration bit value 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   121  } IfxSent_ConfigBit;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   122  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   123  /** \brief SENT.CH[channelId].IOCR.DEPTH , Specifies number of port input samples
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   124   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   125  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   126  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   127      IfxSent_DigitalGlitchesLength_off = 0,  /**< \brief Specifies port input samples off */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   128      IfxSent_DigitalGlitchesLength_1   = 1,  /**< \brief Specifies 1 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   129      IfxSent_DigitalGlitchesLength_2,        /**< \brief Specifies 2 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   130      IfxSent_DigitalGlitchesLength_3,        /**< \brief Specifies 3 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   131      IfxSent_DigitalGlitchesLength_4,        /**< \brief Specifies 4 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   132      IfxSent_DigitalGlitchesLength_5,        /**< \brief Specifies 5 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   133      IfxSent_DigitalGlitchesLength_6,        /**< \brief Specifies 6 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   134      IfxSent_DigitalGlitchesLength_7,        /**< \brief Specifies 7 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   135      IfxSent_DigitalGlitchesLength_8,        /**< \brief Specifies 8 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   136      IfxSent_DigitalGlitchesLength_9,        /**< \brief Specifies 9 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   137      IfxSent_DigitalGlitchesLength_10,       /**< \brief Specifies 10 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   138      IfxSent_DigitalGlitchesLength_11,       /**< \brief Specifies 11 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   139      IfxSent_DigitalGlitchesLength_12,       /**< \brief Specifies 12 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   140      IfxSent_DigitalGlitchesLength_13,       /**< \brief Specifies 13 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   141      IfxSent_DigitalGlitchesLength_14,       /**< \brief Specifies 14 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   142      IfxSent_DigitalGlitchesLength_15        /**< \brief Specifies 15 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   143  } IfxSent_DigitalGlitchesLength;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   144  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   145  /** \brief SENT.CH[channelId].RCR.ESF , Specifies the serial frame structure
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   146   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   147  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   148  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   149      IfxSent_ExtendedSerialFrameMode_standard = 0,  /**< \brief Specifies the standard serial frame structure */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   150      IfxSent_ExtendedSerialFrameMode_extended = 1   /**< \brief Specifies the extended serial frame structure */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   151  } IfxSent_ExtendedSerialFrameMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   152  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   153  /** \brief SENT.CH[channelId].IOCR.ETS , Specifies the external trigger line
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   154   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   155  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   156  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   157      IfxSent_ExternalTrigger_0 = 0,      /**< \brief Specifies the external trigger line 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   158      IfxSent_ExternalTrigger_1,          /**< \brief Specifies the external trigger line 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   159      IfxSent_ExternalTrigger_2,          /**< \brief Specifies the external trigger line 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   160      IfxSent_ExternalTrigger_3,          /**< \brief Specifies the external trigger line 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   161      IfxSent_ExternalTrigger_4,          /**< \brief Specifies the external trigger line 4  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   162      IfxSent_ExternalTrigger_5,          /**< \brief Specifies the external trigger line 5  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   163      IfxSent_ExternalTrigger_6,          /**< \brief Specifies the external trigger line 6  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   164      IfxSent_ExternalTrigger_7,          /**< \brief Specifies the external trigger line 7  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   165      IfxSent_ExternalTrigger_8,          /**< \brief Specifies the external trigger line 8  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   166      IfxSent_ExternalTrigger_9           /**< \brief Specifies the external trigger line 9  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   167  } IfxSent_ExternalTrigger;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   168  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   169  /** \brief SENT.CH[channelId].RCR.CFC, Specifies received frame check mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   170   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   171  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   172  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   173      IfxSent_FrameCheckMode_pastSyncPulse   = 0, /**< \brief Specifies frame check mode against past sync pulse */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   174      IfxSent_FrameCheckMode_futureSuncPulse = 1  /**< \brief Specifies frame check mode against future sync pulse */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   175  } IfxSent_FrameCheckMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   176  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   177  /** \brief SENT.CH[channelId].INP.X(X= RSI,RDI,RBI,TDI,TBI,ERRI,SDI,WDI),Specifies interrupt requested node for respective interrupt
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   178   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   179  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   180  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   181      IfxSent_InterruptNodePointer_0 = 0,           /**< \brief Specifies interrupt requested node 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   182      IfxSent_InterruptNodePointer_1,               /**< \brief Specifies interrupt requested node 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   183      IfxSent_InterruptNodePointer_2,               /**< \brief Specifies interrupt requested node 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   184      IfxSent_InterruptNodePointer_3,               /**< \brief Specifies interrupt requested node 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   185      IfxSent_InterruptNodePointer_trigo0 = 4,      /**< \brief Specifies interrupt requested node TRIGO 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   186      IfxSent_InterruptNodePointer_trigo1,          /**< \brief Specifies interrupt requested node TRIGO 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   187      IfxSent_InterruptNodePointer_trigo2,          /**< \brief Specifies interrupt requested node TRIGO 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   188      IfxSent_InterruptNodePointer_trigo3,          /**< \brief Specifies interrupt requested node TRIGO 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   189      IfxSent_InterruptNodePointer_trigo4,          /**< \brief Specifies interrupt requested node TRIGO 4  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   190      IfxSent_InterruptNodePointer_trigo5           /**< \brief Specifies interrupt requested node TRIGO 5  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   191  } IfxSent_InterruptNodePointer;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   192  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   193  /** \brief SENT.CH[channelId].VIEW.RDNPy( y=0,1,..7 ).Specifies receive data target nibble pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   194   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   195  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   196  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   197      IfxSent_Nibble_0 = 0,      /**< \brief Specifies receive data target nibble pointer to nibble 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   198      IfxSent_Nibble_1,          /**< \brief Specifies receive data target nibble pointer to nibble 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   199      IfxSent_Nibble_2,          /**< \brief Specifies receive data target nibble pointer to nibble 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   200      IfxSent_Nibble_3,          /**< \brief Specifies receive data target nibble pointer to nibble 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   201      IfxSent_Nibble_4,          /**< \brief Specifies receive data target nibble pointer to nibble 4  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   202      IfxSent_Nibble_5,          /**< \brief Specifies receive data target nibble pointer to nibble 5  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   203      IfxSent_Nibble_6,          /**< \brief Specifies receive data target nibble pointer to nibble 6  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   204      IfxSent_Nibble_7           /**< \brief Specifies receive data target nibble pointer to nibble 7  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   205  } IfxSent_Nibble;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   206  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   207  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   208   * Definition in Ifx_SENT.CLC.B.EDIS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   209   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   210  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   211  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   212      IfxSent_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   213      IfxSent_SleepMode_disable = 1  /**< \brief disables sleep mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   214  } IfxSent_SleepMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   215  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   216  /** \brief Specifies the SENT SPC operational mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   217   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   218  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   219  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   220      IfxSent_SpcMode_sync          = 0, /**< \brief Specifies synchronous SPC mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   221      IfxSent_SpcMode_range         = 1, /**< \brief Specifies range selection SPC mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   222      IfxSent_SpcMode_bidirectional = 2  /**< \brief Specifies bidirectional transmit SPC mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   223  } IfxSent_SpcMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   224  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   225  /** \brief OCDS Suspend Control (OCDS.SUS)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   226   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   227  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   228  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   229      IfxSent_SuspendMode_none = 0,  /**< \brief No suspend */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   230      IfxSent_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   231      IfxSent_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   232  } IfxSent_SuspendMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   233  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   234  /** \brief SENT.CH[channelId].SCR.BASE, Specifies selection of pulse based on time
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   235   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   236  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   237  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   238      IfxSent_TimeBase_measuredFrequency = 0,  /**< \brief Specifies selection of pulse based on measured frequency */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   239      IfxSent_TimeBase_nominalFrequency  = 1   /**< \brief Specifies selection of pulse based on nomianl frequency */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   240  } IfxSent_TimeBase;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   241  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   242  /** \brief SENT.CH[channelId].SCR.TRIG, Specifies trigger source for pulse generation
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   243   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   244  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   245  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   246      IfxSent_TriggerSource_off             = 0, /**< \brief Specifies no pulse generation */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   247      IfxSent_TriggerSource_immediate       = 1, /**< \brief Specifies immediate pulse generation */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   248      IfxSent_TriggerSource_fallingEdge     = 2, /**< \brief Specifies pulse generation at fallingEdge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   249      IfxSent_TriggerSource_externalTrigger = 3  /**< \brief Specifies pulse generation after each external trigger */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   250  } IfxSent_TriggerSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   251  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   252  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   253  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   254  /** \brief Sent Interrupt Source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   255   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   256  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   257  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   258      IfxSent_InterruptSource_rsi  = 0,   /**< \brief Enable Interrupt Request RSI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   259      IfxSent_InterruptSource_rdi  = 1,   /**< \brief Enable Interrupt Request RDI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   260      IfxSent_InterruptSource_rbi  = 2,   /**< \brief Enable Interrupt Request RBI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   261      IfxSent_InterruptSource_tdi  = 3,   /**< \brief Enable Interrupt Request TDI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   262      IfxSent_InterruptSource_tbi  = 4,   /**< \brief Enable Interrupt Request TBI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   263      IfxSent_InterruptSource_fri  = 5,   /**< \brief Enable Interrupt Request FRI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   264      IfxSent_InterruptSource_fdi  = 6,   /**< \brief Enable Interrupt Request FDI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   265      IfxSent_InterruptSource_nni  = 7,   /**< \brief Enable Interrupt Request NNI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   266      IfxSent_InterruptSource_nvi  = 8,   /**< \brief Enable Interrupt Request NVI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   267      IfxSent_InterruptSource_crci = 9,   /**< \brief Enable Interrupt Request crci */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   268      IfxSent_InterruptSource_wsi  = 10,  /**< \brief Enable Interrupt Request wsi */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   269      IfxSent_InterruptSource_sdi  = 11,  /**< \brief Enable Interrupt Request sdi */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   270      IfxSent_InterruptSource_scri = 12,  /**< \brief Enable Interrupt Request scri */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   271      IfxSent_InterruptSource_wdi  = 13   /**< \brief Enable Interrupt Request wdi */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   272  } IfxSent_InterruptSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   273  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   274  /** \addtogroup IfxLld_Sent_Std_Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   275   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   276  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   277  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   278  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   279  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   280  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   281  /** \brief Sets the operation mode of SENT kernel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   282   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   283   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   284   * \param alternateInput alternate input/output pin for SENT operation
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   285   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   286   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   287  IFX_INLINE void IfxSent_setAltiInput(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_AlternateInput alternateInput);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   288  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   289  /** \brief Set the module time stamp pre-divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   290   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   291   * \param timeStampPreDivider time stamp pre-divider value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   292   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   293   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   294  IFX_INLINE void IfxSent_setTimeStampPredivider(Ifx_SENT *sent, uint32 timeStampPreDivider);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   295  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   296  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   297  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   298  /** \addtogroup IfxLld_Sent_Std_Interrupts
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   299   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   300  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   301  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   302  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   303  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   304  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   305  /** \brief Copies the current interrupt flags into the Ifx_SENT_CH_INTSTAT structure, and clears the flags in hardware.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   306   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   307   * This function should be used in an ISR to retrieve the events which triggered the interrupt.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   308   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   309   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   310   * \return Interrupt flags which have been cleared.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   311   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   312  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getAndClearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   313  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   314  /** \brief Gets the current channel status
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   315   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   316   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   317   * \return current channel interrupt status
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   318   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   319  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getChannelInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   320  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   321  /** \brief gets the source for channel interrupt handler
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   322   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   323   * \return interrupt source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   324   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   325  IFX_INLINE volatile Ifx_SRC_SRCR *IfxSent_getChannelSrc(IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   326  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   327  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   328  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   329  /** \addtogroup IfxLld_Sent_Std_Operative
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   330   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   331  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   332  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   333  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   334  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   335  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   336  /** \brief Disable the channel with the channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   337   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   338   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   339   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   340   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   341  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   342  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   343  /** \brief Disable the SENT module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   344   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   345   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   346   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   347  IFX_INLINE void IfxSent_disableModule(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   348  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   349  /** \brief Enable the channel with the channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   350   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   351   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   352   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   353   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   354  IFX_INLINE void IfxSent_enableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   355  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   356  /** \brief Enable the SENT module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   357   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   358   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   359   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   360  IFX_INLINE void IfxSent_enableModule(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   361  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   362  /** \brief Returns the module's suspend state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   363   * TRUE :if module is suspended.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   364   * FALSE:if module is not yet suspended.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   365   * \param sent Pointer to SENT module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   366   * \return Suspend status (TRUE / FALSE)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   367   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   368  IFX_INLINE boolean IfxSent_isModuleSuspended(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   369  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   370  /** \brief Sets the sensitivity of the module to sleep signal
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   371   * \param sent pointer to SENT registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   372   * \param mode mode selection (enable / disable)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   373   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   374   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   375  IFX_INLINE void IfxSent_setSleepMode(Ifx_SENT *sent, IfxSent_SleepMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   376  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   377  /** \brief Configure the Module to Hard/Soft suspend mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   378   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   379   * \param sent Pointer to SENT module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   380   * \param mode Module suspend mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   381   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   382   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   383  IFX_INLINE void IfxSent_setSuspendMode(Ifx_SENT *sent, IfxSent_SuspendMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   384  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   385  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   386  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   387  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   388  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   389  /** \brief Resets the SENT module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   390   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   391   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   392   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   393  IFX_EXTERN void IfxSent_resetModule(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   394  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   395  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   397  /** \addtogroup IfxLld_Sent_Std_Baudrate
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   398   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   399  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   400  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   402  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   403  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   404  /** \brief Sets the channel fractional baudrate divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   405   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   406   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   407   * \param divider channel baudrate fractional divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   408   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   409   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   410  IFX_INLINE void IfxSent_setChannelFractionalDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 divider);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   411  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   412  /** \brief Sets the channel baudrate pre-divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   413   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   414   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   415   * \param preDivider channel baudrate pre-divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   416   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   417   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   418  IFX_INLINE void IfxSent_setChannelPreDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 preDivider);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   419  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   420  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   421  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   422  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   423  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   424  /** \brief Returns the current module frequency in Hertz.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   425   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   426   * \return The current module frequency in Hertz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   427   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   428  IFX_EXTERN float32 IfxSent_getModuleClock(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   429  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   430  /** \brief Initializes the desired unit time (f_tick) for the external SENT device connected to the given channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   431   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   432   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   433   * \param tUnit desired unit time (f_tick), e.g. 3E-6 for 3 uS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   434   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   435   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   436  IFX_EXTERN void IfxSent_initializeChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId, float32 tUnit);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   437  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   438  /** \brief Initialize and get the clock for SENT kernel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   439   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   440   * \param dividerMode Divider mode for clock output
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   441   * \param stepValue clock frequency for for module fractional divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   442   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   443   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   444  IFX_EXTERN void IfxSent_initializeModuleClock(Ifx_SENT *sent, IfxSent_ClockDividerMode dividerMode, uint16 stepValue);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   445  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   446  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   447  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   448  /** \addtogroup IfxLld_Sent_Std_IO
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   449   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   450  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   451  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   452  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   453  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   454  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   455  /** \brief Initializes a SENT input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   456   * \param sentIn the SENT Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   457   * \param inputMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   458   * \param padDriver the pad driver mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   459   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   460   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   461  IFX_INLINE void IfxSent_initSentPin(const IfxSent_Sent_In *sentIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   462  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   463  /** \brief Initializes a SPC output
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   464   * \param spcOut the SPC Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   465   * \param spcOutMode Port Output Mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   466   * \param padDriver the pad driver mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   467   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   468   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   469  IFX_INLINE void IfxSent_initSpcPin(const IfxSent_Spc_Out *spcOut, IfxPort_OutputMode spcOutMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   470  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   471  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   472  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   473  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   474  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   475  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   476  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   477  /** \brief Set the watch dog timer limit value for sent channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   478   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   479   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   480   * \param watchDogTimerLimit Specifies the watch dog timer limit value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   481   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   482   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   483  IFX_INLINE void IfxSent_setWatchDogTimerLimit(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 watchDogTimerLimit);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   484  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   485  /** \brief Return TRUE if SENT module is enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   486   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   487   * \return The status of whether clock for sent is enabled or disabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   488   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   489  IFX_INLINE boolean IfxSent_isModuleEnabled(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   490  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   491  /** \brief Return the Interrupt Status of the SENT channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   492   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   493   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   494   * \param source enable the interrupt source of any interrupt of SENT Channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   495   * \return The Interrupt Status of SENT channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   496   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   497  IFX_INLINE boolean IfxSent_getInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_InterruptSource source);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   498  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   499  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   500   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   501   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   502   * \param source enable the interrupt source of any interrupt of SENT Channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   503   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   504   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   505  IFX_INLINE void IfxSent_clearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_InterruptSource source);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   506  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   507  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   508   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   509   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   510   * \return The Data content of a recieved Data Frame
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   511   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   512  IFX_INLINE uint32 IfxSent_readReceivedData(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   513  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   514  /** \brief Reads and returns value in RSR (Received Status Register).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   515   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   516   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   517   * \return Returns 32 bit RSR
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   518   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   519  IFX_INLINE uint32 IfxSent_readReceivedStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   520  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   521  /** \brief Returns 4 bit CRC value in Receive Status Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   522   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   523   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   524   * \return 4 bit CRC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   525   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   526  IFX_INLINE uint8 IfxSent_readReceivedCrc(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   527  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   528  /** \brief Returns 2 bit CST value in Receive Status Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   529   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   530   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   531   * \return 2 bit CST
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   532   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   533  IFX_INLINE uint8 IfxSent_readReceivedChannelStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   534  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   535  /** \brief Returns 4 bit SCN value in Receive Status Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   536   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   537   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   538   * \return 4 bit SCN
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   539   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   540  IFX_INLINE uint8 IfxSent_readReceivedStatusAndCommunicationNibble(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   541  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   542  /** \brief Returns 32 bit Received Time Stamp Value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   543   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   544   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   545   * \return 32 bit Time Stamp
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   546   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   547  IFX_INLINE uint32 IfxSent_readReceivedTimeStamp(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   548  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   549  /** \brief Returns 6 bit PLEN value in SCR Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   550   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   551   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   552   * \return 6 bit PLEN
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   553   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   554  IFX_INLINE uint8 IfxSent_readSpcPulseLength(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   555  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   556  /** \brief Returns 6 bit Delay length value in SCR Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   557   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   558   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   559   * \return 6 bit DEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   560   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   561  IFX_INLINE uint8 IfxSent_readSpcDelayLength(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   562  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   563  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   564  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   565  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   566  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   567  /** \brief Returns the current unit time (f_tick) of the given channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   568   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   569   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   570   * \return The current unit time in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   571   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   572  IFX_EXTERN float32 IfxSent_getChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   573  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   574  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   575  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   576  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   577  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   578  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   579  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   580      sent->CH[channelId].RCR.B.CEN = 0;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   581  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   582  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   583  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   584  IFX_INLINE void IfxSent_disableModule(Ifx_SENT *sent)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   585  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   586      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   587      IfxScuWdt_clearCpuEndinit(passwd);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   588      sent->CLC.B.DISR = 1;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   589      IfxScuWdt_setCpuEndinit(passwd);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   590  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   591  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   592  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   593  IFX_INLINE void IfxSent_enableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   594  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   595      sent->CH[channelId].RCR.B.CEN = 1;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   596  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   597  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   598  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   599  IFX_INLINE void IfxSent_enableModule(Ifx_SENT *sent)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   600  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   601      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   602      IfxScuWdt_clearCpuEndinit(passwd);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   603      sent->CLC.B.DISR = 0;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   604      IfxScuWdt_setCpuEndinit(passwd);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   605  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   606      if (sent->CLC.U)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   607      {}
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   608  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   609  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   610  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   611  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getAndClearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   612  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   613      Ifx_SENT_CH_INTSTAT interruptFlags;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   614      interruptFlags.U             = sent->CH[channelId].INTSTAT.U;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   615      sent->CH[channelId].INTCLR.U = interruptFlags.U;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   616      return interruptFlags;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   617  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   618  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   619  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   620  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getChannelInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   621  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   622      Ifx_SENT_CH_INTSTAT interruptFlags;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   623      interruptFlags.U = sent->CH[channelId].INTSTAT.U;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   624      return interruptFlags;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   625  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   626  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   627  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   628  IFX_INLINE volatile Ifx_SRC_SRCR *IfxSent_getChannelSrc(IfxSent_ChannelId channelId)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   629  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   630      return &MODULE_SRC.SENT.SENT[0].SR[channelId];
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   631  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   632  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   633  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   634  IFX_INLINE void IfxSent_initSentPin(const IfxSent_Sent_In *sentIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   635  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   636      if (sentIn->pin.port != NULL_PTR)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   637      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   638          IfxPort_setPinModeInput(sentIn->pin.port, sentIn->pin.pinIndex, inputMode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   639          IfxPort_setPinPadDriver(sentIn->pin.port, sentIn->pin.pinIndex, padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   640          IfxSent_setAltiInput(sentIn->module, sentIn->channelId, (IfxSent_AlternateInput)sentIn->select);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   641      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   642  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   643  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   644  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   645  IFX_INLINE void IfxSent_initSpcPin(const IfxSent_Spc_Out *spcOut, IfxPort_OutputMode spcOutMode, IfxPort_PadDriver padDriver)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   646  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   647      if (spcOut->pin.port != NULL_PTR)
	ld.w	d15,[a15]8
.L494:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   647      if (spcOut->pin.port != NULL_PTR)      (inlined)
	jeq	d15,#0,.L14
.L495:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   648      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   649          IfxPort_setPinModeOutput(spcOut->pin.port, spcOut->pin.pinIndex, spcOutMode, spcOut->select);
	ld.a	a4,[a15]8
.L496:
	ld.bu	d4,[a15]12
.L497:
	ld.bu	d5,[a15]16
.L214:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    45   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    46   * \defgroup IfxLld_Port_Std_Enum Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    47   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    48   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    49   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    50   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    51   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    52   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    53   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    54   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    55  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    56  #ifndef IFXPORT_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    57  #define IFXPORT_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    58  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    59  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    60  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    61  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    62  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    63  #include "_Impl/IfxPort_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    64  #include "Scu/Std/IfxScuWdt.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    65  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    66  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    67  /*--------------------------------Enumerations--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    68  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    69  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    70  /** \addtogroup IfxLld_Port_Std_Enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    71   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    72  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    73   * HSCT module.declared in MODULE_PORTx.LPCRx
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    74   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    76  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    77      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    78      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    79  } IfxPort_ControlledBy;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    80  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    81  /** \brief Ifx_P output modification modes definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    82   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    83  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    84  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    85      IfxPort_InputMode_undefined    = -1,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    86      IfxPort_InputMode_noPullDevice = 0 << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    87          IfxPort_InputMode_pullDown = 1U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    88          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    89  } IfxPort_InputMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    90  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    91  /** \brief Ifx_P input / output mode definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    92   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    93   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    94   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    95  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    96  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    97      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    98      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    99      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   100      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   101      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   102      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   103      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   104      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   105      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   106      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   107      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   108      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   109      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   110      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   111      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   112      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   113      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   114      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   115      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   116  } IfxPort_Mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   117  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   118  /** \brief Pin output alternate index
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   119   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   120  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   121  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   122      IfxPort_OutputIdx_general  = 0x10U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   123          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   124          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   125          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   126          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   127          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   128          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   129          IfxPort_OutputIdx_alt7 = 0x17U << 3
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   130  } IfxPort_OutputIdx;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   131  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   132  /** \brief Pin output mode definition
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   133   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   134  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   135  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   136      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   137          IfxPort_OutputMode_openDrain = 0x18U << 3
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_OutputMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   139  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   140  /** \brief Pad driver mode definition (strength and slew rate).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   141   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   142   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   143   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   144  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   145  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   146      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   147      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   148      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   149      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   150      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   151      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   152      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   153      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   154      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   155      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   156      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   157      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_PadDriver;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   159  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   160  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   161   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   162  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   163  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   164      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   165      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   166  } IfxPort_PadSupply;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   167  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   168  /** \brief Ifx_P output modification modes definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   169   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   170   * \see Ifx_P.OMR, IfxPort_setPinState()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   171   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   172  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   173  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   174      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   175      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   176      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   177      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   178  } IfxPort_State;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   179  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   180  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   181  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   182  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   183  /*-----------------------------Data Structures--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   184  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   185  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   186  /** \addtogroup IfxLld_Port_Std_DataStructures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   187   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   188  /** \brief Defines a pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   189   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   190  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   191  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   192      Ifx_P *port;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   193      uint8  pinIndex;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   194  } IfxPort_Pin;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   195  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   196  /** \brief To configure pins
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   197   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   198  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   199  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   200      Ifx_P            *port;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   201      uint8             pinIndex;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   202      IfxPort_OutputIdx mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   203      IfxPort_PadDriver padDriver;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   204  } IfxPort_Pin_Config;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   205  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   206  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   207  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   208  /** \addtogroup IfxLld_Port_Std_SinglePin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   209   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   210  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   211  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   212  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   213  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   214  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   215  /** \brief Return the port state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   216   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   217   * \param pinIndex Specifies the pin for which the state should be returned.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   218   * \return Returns TRUE the pin is high; FALSE the pin is low
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   219   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   220   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   221   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   222   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   223   *      // ...
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   224   *    }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   225   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   226   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   227   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   228  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   229  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   230  /** \brief Set the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   231   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   232   * \param pinIndex Specifies the pin to be set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   233   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   234   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   235   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   236   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   237   * IfxPort_setPinHigh(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   238   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   239   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   240   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   241   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   242   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   243  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   244  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   245  /** \brief Reset the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   246   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   247   * \param pinIndex Specifies the pin to be reset.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   248   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   249   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   250   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   251   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   252   * IfxPort_setPinLow(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   253   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   254   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   255   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   256   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   257   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   258  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   259  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   260  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   261   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   262   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   263   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   264   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   265   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   266   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   267   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   268   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   269   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   270   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   271   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   272  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   273  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   274  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   275   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   276   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   277   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   278   * \param index Specifies the alternate (or general purpose) output channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   279   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   280   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   281   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   282   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   283   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   284   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   285   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   286   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   287  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   288  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   289  /** \brief Set / Resets / Toggle the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   290   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   291   * \param pinIndex Specifies the pin to modify.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   292   * \param action Specifies the action: set, reset, toggle.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   293   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   294   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   295   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   296   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   297   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   298   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   299   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   300   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   301   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   302   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   303  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   304  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   305  /** \brief Toggle the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin to be toggled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   308   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   309   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   311   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   312   * IfxPort_togglePin(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   313   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   314   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   315   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   316   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   317   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   318  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   319  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   320  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   321  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   322  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   323  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   324  /** \brief Disable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   325   * This function disables the emergency stop function. A check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   326   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   327   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   328   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   329   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   330   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   331   * /code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   332   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   333   *     {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   334   *         // failed to disable emergency stop for P33.0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   335   *     }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   336   * /endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   337   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   338   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   339   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   340   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   341  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   342  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   343  /** \brief Enable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   344   * This function enables the emergency stop function. A check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   345   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   346   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   347   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   348   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   350   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   351   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   352   *       // failed to enable emergency stop for P33.0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   353   *     }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   354   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   355   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   356   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   357   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   358   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   359  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   360  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   361  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   362   * Also Configures the P40/P41 Port for digital functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   363   * which bydefault support analog functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   364   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   365   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   366   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   367   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   368   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   369   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   370   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   371   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   372   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   373   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   374   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   375  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   376  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   377  /** \brief Configure the pad driver mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   378   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   379   * \param pinIndex Specifies the pin for which the mode will be set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   380   * \param padDriver Specifies the driver mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   381   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   382   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   383   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   384   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   385   * // enable strong 3.3V driver
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   386   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   387   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   388   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   389   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   390  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   391  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   392  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   393  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   394  /** \addtogroup IfxLld_Port_Std_PortGroup
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   395   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   397  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   398  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   399  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   400  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   401  /** \brief Return the port group state
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   402   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   403   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   404   * \param mask selects the pins which should be read (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   405   * \return Returns the selected pin values
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   406   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   407   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   408   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   409   * // read the current value of P33[7:0]
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   410   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   411   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   412   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   413   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   414  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   415  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   416  /** \brief Set the port group state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   417   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   418   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   419   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   420   * \param data specifies the value which should be set
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   421   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   422   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   423   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   424   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   425   * // configure P33.[7:0] as GPIO outputs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   426   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   427   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   428   * // set initial value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   429   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   430   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   431   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   432   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   433  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   434  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   435  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   436  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   437  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   438  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   439  /** \brief Returns the module address of the selected Port module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   440   * \param port Pointer to PORT module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   441   * \return PORT module register address
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   442   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   443  IFX_EXTERN Ifx_P *IfxPort_getAddress(IfxPort_Index port);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   444  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   445  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   446   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   447   * \return port index of IfxModule_IndexMap. return -1 in case of unknown port index.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   448   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   449  IFX_EXTERN IfxPort_Index IfxPort_getIndex(Ifx_P *port);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   450  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   451  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   452   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   453   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   454   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   455   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   456   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   457   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   458   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   459   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   460   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   461   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   462   *  \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   463   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   464   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   465  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   466  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   467  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   468   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   469   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   470   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   471   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   472   * \param index Specifies the alternate (or general purpose) output channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   473   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   474   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   475   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   476   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   477   * // configure P33.[7:0] as GPIO outputs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   478   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   479   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   480   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   481   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   482  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   483  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   484  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   485   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   486   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   487   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   488   * \param padDriver Specifies the pad driver strength.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   489   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   490   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   491   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   492   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   493   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   494   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   495   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   496   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   497   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   498  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   499  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   500  /** \brief set LVDSH mode (configured for Port21)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   501   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   502   * \param pinIndex specifies pin  to be modified
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   503   * \param mode specifes the mode of pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   504   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   505   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   506   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   508  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   509  /** \brief set LVDSM mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   510   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   511   * \param pinIndex specifies pin to be modified
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   512   * \param lvdsPadDriver select speed grade of LVDS Pad
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   513   * \param padSupply select the PAD supply (5/3.3V)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   514   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   515   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   516  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   517  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   518  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   519  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   521  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   523  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   524  /** \brief Disable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   525   * This function disables the emergency stop function. No check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   526   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   527   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   528   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   529   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   530   * \see IfxPort_disableEmergencyStop()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   531   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   532   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   533  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   534  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   535  /** \brief Enable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   536   * This function enables the emergency stop function. No check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   537   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   538   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   539   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   540   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   541   * \see IfxPort_enableEmergencyStop()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   542   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   543   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   544  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   545  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   546  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   547  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   548  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   549  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   550  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   551  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   552      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   553  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   554  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   555  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   556  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   557  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   558      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   559  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   560  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   561  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   562  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   563  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   564      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   565  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   566  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   567  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   568  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   569  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   570      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   571  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   572  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   573  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   574  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   575  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   576      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   577  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   578  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   579  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   580  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   581  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   582      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   583  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   584  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   585  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   586  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   587  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   588      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)(index | mode));
	or	d5,d0
.L498:
	call	IfxPort_setPinMode
.L215:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   650  xSent_isModuleSuspended(Ifx_SENT *sent)
	ld.a	a4,[a15]8
.L499:
	ld.bu	d4,[a15]12
.L500:
	mov	d5,d9
	call	IfxPort_setPinPadDriver

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   647      if (spcOut->pin.port != NULL_PTR)      (inlined)
.L14:
.L13:
.L10:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   198    IfxSrc_Tos tos = config->interrupt.isrProvider;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   199  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   200          if ((config->interrupt.priority != 0) || (tos == IfxSrc_Tos_dma))
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   201          {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   202              volatile Ifx_SRC_SRCR *src = IfxSent_getChannelSrc(config->channelId);
	ld.bu	d0,[a12]62
.L308:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   203              IfxSrc_init(src, tos, config->interrupt.priority);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   204              IfxSrc_enable(src);
	ld.hu	d15,[a12]60
.L501:
	jne	d15,#0,.L15
.L502:
	jne	d0,#3,.L16
.L15:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   205          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   206      }
	ld.b	d15,[a12]6
.L230:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     2   * \file IfxSent.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     3   * \brief SENT  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     4   * \ingroup IfxLld_Sent
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    45   * \defgroup IfxLld_Sent_Std_Enumerations Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    46   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    47   * \defgroup IfxLld_Sent_Std_Configuration Configuration Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    48   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    49   * \defgroup IfxLld_Sent_Std_Interrupts Interrupts
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    50   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    51   * \defgroup IfxLld_Sent_Std_Operative Operative Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    52   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    53   * \defgroup IfxLld_Sent_Std_Baudrate Baudrate Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    54   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    55   * \defgroup IfxLld_Sent_Std_IO IO Pin Configuration Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    56   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    57   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    58  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    59  #ifndef IFXSENT_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    60  #define IFXSENT_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    61  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    62  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    63  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    64  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    65  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    66  #include "_Impl/IfxSent_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    67  #include "Src/Std/IfxSrc.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    68  #include "Scu/Std/IfxScuCcu.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    69  #include "_PinMap/IfxSent_PinMap.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    70  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    71  #include "IfxSent_bf.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    72  #include "IfxSent_reg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    73  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    74  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    75  /*-----------------------------------Macros-----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    76  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    77  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    78  #define IFXSENT_INTERRUPT_STATUS_ERROR_FLAGS (0x000037f4)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    79  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    80  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    81  /*--------------------------------Enumerations--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    82  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    83  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    84  /** \addtogroup IfxLld_Sent_Std_Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    85   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    86  /** \brief SENT.CH[channelId].IOCR.ALTI , Specifies alternate input for channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    87   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    88  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    89  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    90      IfxSent_AlternateInput_0 = 0,      /**< \brief Specifies alternate input 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    91      IfxSent_AlternateInput_1,          /**< \brief Specifies alternate input 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    92      IfxSent_AlternateInput_2,          /**< \brief Specifies alternate input 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    93      IfxSent_AlternateInput_3           /**< \brief Specifies alternate input 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    94  } IfxSent_AlternateInput;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    95  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    96  /** \brief SENT.CH[channelId].RSR.CST, Specifies the current channel status
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    97   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    98  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    99  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   100      IfxSent_ChannelStatus_stop        = 0, /**< \brief Specifies the channel is stopped */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   101      IfxSent_ChannelStatus_initialize  = 1, /**< \brief Specifies the channel is initialized */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   102      IfxSent_ChannelStatus_running     = 2, /**< \brief Specifies the channel is running */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   103      IfxSent_ChannelStatus_synchronize = 3  /**< \brief Specifies the channel is synchronized */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   104  } IfxSent_ChannelStatus;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   105  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   106  /** \brief SENT.FDR.DM , Specifies clock divider mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   107   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   108  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   109  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   110      IfxSent_ClockDividerMode_off        = 0, /**< \brief Specifies clock divider mode off */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   111      IfxSent_ClockDividerMode_normal     = 1, /**< \brief Specifies clock normal divider mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   112      IfxSent_ClockDividerMode_fractional = 2  /**< \brief Specifies clock fractional divider mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   113  } IfxSent_ClockDividerMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   114  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   115  /** \brief SENT.CH[channelId].SDS.CON , Specifies received configuration bit value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   116   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   117  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   118  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   119      IfxSent_ConfigBit_0 = 0,      /**< \brief Specifies received configuration bit value 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   120      IfxSent_ConfigBit_1           /**< \brief Specifies received configuration bit value 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   121  } IfxSent_ConfigBit;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   122  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   123  /** \brief SENT.CH[channelId].IOCR.DEPTH , Specifies number of port input samples
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   124   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   125  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   126  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   127      IfxSent_DigitalGlitchesLength_off = 0,  /**< \brief Specifies port input samples off */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   128      IfxSent_DigitalGlitchesLength_1   = 1,  /**< \brief Specifies 1 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   129      IfxSent_DigitalGlitchesLength_2,        /**< \brief Specifies 2 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   130      IfxSent_DigitalGlitchesLength_3,        /**< \brief Specifies 3 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   131      IfxSent_DigitalGlitchesLength_4,        /**< \brief Specifies 4 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   132      IfxSent_DigitalGlitchesLength_5,        /**< \brief Specifies 5 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   133      IfxSent_DigitalGlitchesLength_6,        /**< \brief Specifies 6 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   134      IfxSent_DigitalGlitchesLength_7,        /**< \brief Specifies 7 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   135      IfxSent_DigitalGlitchesLength_8,        /**< \brief Specifies 8 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   136      IfxSent_DigitalGlitchesLength_9,        /**< \brief Specifies 9 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   137      IfxSent_DigitalGlitchesLength_10,       /**< \brief Specifies 10 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   138      IfxSent_DigitalGlitchesLength_11,       /**< \brief Specifies 11 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   139      IfxSent_DigitalGlitchesLength_12,       /**< \brief Specifies 12 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   140      IfxSent_DigitalGlitchesLength_13,       /**< \brief Specifies 13 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   141      IfxSent_DigitalGlitchesLength_14,       /**< \brief Specifies 14 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   142      IfxSent_DigitalGlitchesLength_15        /**< \brief Specifies 15 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   143  } IfxSent_DigitalGlitchesLength;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   144  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   145  /** \brief SENT.CH[channelId].RCR.ESF , Specifies the serial frame structure
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   146   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   147  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   148  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   149      IfxSent_ExtendedSerialFrameMode_standard = 0,  /**< \brief Specifies the standard serial frame structure */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   150      IfxSent_ExtendedSerialFrameMode_extended = 1   /**< \brief Specifies the extended serial frame structure */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   151  } IfxSent_ExtendedSerialFrameMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   152  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   153  /** \brief SENT.CH[channelId].IOCR.ETS , Specifies the external trigger line
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   154   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   155  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   156  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   157      IfxSent_ExternalTrigger_0 = 0,      /**< \brief Specifies the external trigger line 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   158      IfxSent_ExternalTrigger_1,          /**< \brief Specifies the external trigger line 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   159      IfxSent_ExternalTrigger_2,          /**< \brief Specifies the external trigger line 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   160      IfxSent_ExternalTrigger_3,          /**< \brief Specifies the external trigger line 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   161      IfxSent_ExternalTrigger_4,          /**< \brief Specifies the external trigger line 4  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   162      IfxSent_ExternalTrigger_5,          /**< \brief Specifies the external trigger line 5  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   163      IfxSent_ExternalTrigger_6,          /**< \brief Specifies the external trigger line 6  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   164      IfxSent_ExternalTrigger_7,          /**< \brief Specifies the external trigger line 7  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   165      IfxSent_ExternalTrigger_8,          /**< \brief Specifies the external trigger line 8  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   166      IfxSent_ExternalTrigger_9           /**< \brief Specifies the external trigger line 9  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   167  } IfxSent_ExternalTrigger;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   168  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   169  /** \brief SENT.CH[channelId].RCR.CFC, Specifies received frame check mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   170   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   171  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   172  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   173      IfxSent_FrameCheckMode_pastSyncPulse   = 0, /**< \brief Specifies frame check mode against past sync pulse */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   174      IfxSent_FrameCheckMode_futureSuncPulse = 1  /**< \brief Specifies frame check mode against future sync pulse */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   175  } IfxSent_FrameCheckMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   176  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   177  /** \brief SENT.CH[channelId].INP.X(X= RSI,RDI,RBI,TDI,TBI,ERRI,SDI,WDI),Specifies interrupt requested node for respective interrupt
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   178   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   179  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   180  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   181      IfxSent_InterruptNodePointer_0 = 0,           /**< \brief Specifies interrupt requested node 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   182      IfxSent_InterruptNodePointer_1,               /**< \brief Specifies interrupt requested node 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   183      IfxSent_InterruptNodePointer_2,               /**< \brief Specifies interrupt requested node 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   184      IfxSent_InterruptNodePointer_3,               /**< \brief Specifies interrupt requested node 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   185      IfxSent_InterruptNodePointer_trigo0 = 4,      /**< \brief Specifies interrupt requested node TRIGO 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   186      IfxSent_InterruptNodePointer_trigo1,          /**< \brief Specifies interrupt requested node TRIGO 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   187      IfxSent_InterruptNodePointer_trigo2,          /**< \brief Specifies interrupt requested node TRIGO 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   188      IfxSent_InterruptNodePointer_trigo3,          /**< \brief Specifies interrupt requested node TRIGO 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   189      IfxSent_InterruptNodePointer_trigo4,          /**< \brief Specifies interrupt requested node TRIGO 4  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   190      IfxSent_InterruptNodePointer_trigo5           /**< \brief Specifies interrupt requested node TRIGO 5  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   191  } IfxSent_InterruptNodePointer;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   192  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   193  /** \brief SENT.CH[channelId].VIEW.RDNPy( y=0,1,..7 ).Specifies receive data target nibble pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   194   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   195  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   196  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   197      IfxSent_Nibble_0 = 0,      /**< \brief Specifies receive data target nibble pointer to nibble 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   198      IfxSent_Nibble_1,          /**< \brief Specifies receive data target nibble pointer to nibble 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   199      IfxSent_Nibble_2,          /**< \brief Specifies receive data target nibble pointer to nibble 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   200      IfxSent_Nibble_3,          /**< \brief Specifies receive data target nibble pointer to nibble 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   201      IfxSent_Nibble_4,          /**< \brief Specifies receive data target nibble pointer to nibble 4  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   202      IfxSent_Nibble_5,          /**< \brief Specifies receive data target nibble pointer to nibble 5  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   203      IfxSent_Nibble_6,          /**< \brief Specifies receive data target nibble pointer to nibble 6  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   204      IfxSent_Nibble_7           /**< \brief Specifies receive data target nibble pointer to nibble 7  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   205  } IfxSent_Nibble;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   206  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   207  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   208   * Definition in Ifx_SENT.CLC.B.EDIS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   209   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   210  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   211  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   212      IfxSent_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   213      IfxSent_SleepMode_disable = 1  /**< \brief disables sleep mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   214  } IfxSent_SleepMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   215  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   216  /** \brief Specifies the SENT SPC operational mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   217   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   218  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   219  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   220      IfxSent_SpcMode_sync          = 0, /**< \brief Specifies synchronous SPC mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   221      IfxSent_SpcMode_range         = 1, /**< \brief Specifies range selection SPC mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   222      IfxSent_SpcMode_bidirectional = 2  /**< \brief Specifies bidirectional transmit SPC mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   223  } IfxSent_SpcMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   224  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   225  /** \brief OCDS Suspend Control (OCDS.SUS)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   226   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   227  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   228  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   229      IfxSent_SuspendMode_none = 0,  /**< \brief No suspend */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   230      IfxSent_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   231      IfxSent_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   232  } IfxSent_SuspendMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   233  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   234  /** \brief SENT.CH[channelId].SCR.BASE, Specifies selection of pulse based on time
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   235   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   236  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   237  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   238      IfxSent_TimeBase_measuredFrequency = 0,  /**< \brief Specifies selection of pulse based on measured frequency */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   239      IfxSent_TimeBase_nominalFrequency  = 1   /**< \brief Specifies selection of pulse based on nomianl frequency */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   240  } IfxSent_TimeBase;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   241  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   242  /** \brief SENT.CH[channelId].SCR.TRIG, Specifies trigger source for pulse generation
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   243   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   244  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   245  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   246      IfxSent_TriggerSource_off             = 0, /**< \brief Specifies no pulse generation */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   247      IfxSent_TriggerSource_immediate       = 1, /**< \brief Specifies immediate pulse generation */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   248      IfxSent_TriggerSource_fallingEdge     = 2, /**< \brief Specifies pulse generation at fallingEdge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   249      IfxSent_TriggerSource_externalTrigger = 3  /**< \brief Specifies pulse generation after each external trigger */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   250  } IfxSent_TriggerSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   251  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   252  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   253  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   254  /** \brief Sent Interrupt Source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   255   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   256  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   257  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   258      IfxSent_InterruptSource_rsi  = 0,   /**< \brief Enable Interrupt Request RSI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   259      IfxSent_InterruptSource_rdi  = 1,   /**< \brief Enable Interrupt Request RDI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   260      IfxSent_InterruptSource_rbi  = 2,   /**< \brief Enable Interrupt Request RBI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   261      IfxSent_InterruptSource_tdi  = 3,   /**< \brief Enable Interrupt Request TDI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   262      IfxSent_InterruptSource_tbi  = 4,   /**< \brief Enable Interrupt Request TBI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   263      IfxSent_InterruptSource_fri  = 5,   /**< \brief Enable Interrupt Request FRI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   264      IfxSent_InterruptSource_fdi  = 6,   /**< \brief Enable Interrupt Request FDI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   265      IfxSent_InterruptSource_nni  = 7,   /**< \brief Enable Interrupt Request NNI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   266      IfxSent_InterruptSource_nvi  = 8,   /**< \brief Enable Interrupt Request NVI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   267      IfxSent_InterruptSource_crci = 9,   /**< \brief Enable Interrupt Request crci */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   268      IfxSent_InterruptSource_wsi  = 10,  /**< \brief Enable Interrupt Request wsi */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   269      IfxSent_InterruptSource_sdi  = 11,  /**< \brief Enable Interrupt Request sdi */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   270      IfxSent_InterruptSource_scri = 12,  /**< \brief Enable Interrupt Request scri */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   271      IfxSent_InterruptSource_wdi  = 13   /**< \brief Enable Interrupt Request wdi */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   272  } IfxSent_InterruptSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   273  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   274  /** \addtogroup IfxLld_Sent_Std_Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   275   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   276  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   277  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   278  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   279  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   280  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   281  /** \brief Sets the operation mode of SENT kernel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   282   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   283   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   284   * \param alternateInput alternate input/output pin for SENT operation
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   285   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   286   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   287  IFX_INLINE void IfxSent_setAltiInput(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_AlternateInput alternateInput);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   288  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   289  /** \brief Set the module time stamp pre-divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   290   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   291   * \param timeStampPreDivider time stamp pre-divider value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   292   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   293   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   294  IFX_INLINE void IfxSent_setTimeStampPredivider(Ifx_SENT *sent, uint32 timeStampPreDivider);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   295  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   296  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   297  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   298  /** \addtogroup IfxLld_Sent_Std_Interrupts
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   299   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   300  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   301  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   302  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   303  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   304  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   305  /** \brief Copies the current interrupt flags into the Ifx_SENT_CH_INTSTAT structure, and clears the flags in hardware.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   306   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   307   * This function should be used in an ISR to retrieve the events which triggered the interrupt.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   308   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   309   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   310   * \return Interrupt flags which have been cleared.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   311   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   312  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getAndClearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   313  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   314  /** \brief Gets the current channel status
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   315   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   316   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   317   * \return current channel interrupt status
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   318   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   319  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getChannelInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   320  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   321  /** \brief gets the source for channel interrupt handler
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   322   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   323   * \return interrupt source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   324   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   325  IFX_INLINE volatile Ifx_SRC_SRCR *IfxSent_getChannelSrc(IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   326  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   327  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   328  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   329  /** \addtogroup IfxLld_Sent_Std_Operative
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   330   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   331  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   332  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   333  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   334  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   335  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   336  /** \brief Disable the channel with the channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   337   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   338   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   339   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   340   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   341  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   342  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   343  /** \brief Disable the SENT module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   344   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   345   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   346   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   347  IFX_INLINE void IfxSent_disableModule(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   348  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   349  /** \brief Enable the channel with the channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   350   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   351   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   352   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   353   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   354  IFX_INLINE void IfxSent_enableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   355  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   356  /** \brief Enable the SENT module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   357   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   358   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   359   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   360  IFX_INLINE void IfxSent_enableModule(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   361  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   362  /** \brief Returns the module's suspend state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   363   * TRUE :if module is suspended.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   364   * FALSE:if module is not yet suspended.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   365   * \param sent Pointer to SENT module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   366   * \return Suspend status (TRUE / FALSE)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   367   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   368  IFX_INLINE boolean IfxSent_isModuleSuspended(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   369  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   370  /** \brief Sets the sensitivity of the module to sleep signal
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   371   * \param sent pointer to SENT registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   372   * \param mode mode selection (enable / disable)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   373   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   374   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   375  IFX_INLINE void IfxSent_setSleepMode(Ifx_SENT *sent, IfxSent_SleepMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   376  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   377  /** \brief Configure the Module to Hard/Soft suspend mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   378   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   379   * \param sent Pointer to SENT module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   380   * \param mode Module suspend mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   381   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   382   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   383  IFX_INLINE void IfxSent_setSuspendMode(Ifx_SENT *sent, IfxSent_SuspendMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   384  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   385  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   386  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   387  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   388  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   389  /** \brief Resets the SENT module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   390   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   391   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   392   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   393  IFX_EXTERN void IfxSent_resetModule(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   394  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   395  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   397  /** \addtogroup IfxLld_Sent_Std_Baudrate
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   398   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   399  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   400  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   402  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   403  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   404  /** \brief Sets the channel fractional baudrate divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   405   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   406   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   407   * \param divider channel baudrate fractional divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   408   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   409   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   410  IFX_INLINE void IfxSent_setChannelFractionalDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 divider);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   411  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   412  /** \brief Sets the channel baudrate pre-divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   413   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   414   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   415   * \param preDivider channel baudrate pre-divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   416   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   417   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   418  IFX_INLINE void IfxSent_setChannelPreDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 preDivider);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   419  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   420  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   421  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   422  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   423  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   424  /** \brief Returns the current module frequency in Hertz.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   425   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   426   * \return The current module frequency in Hertz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   427   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   428  IFX_EXTERN float32 IfxSent_getModuleClock(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   429  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   430  /** \brief Initializes the desired unit time (f_tick) for the external SENT device connected to the given channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   431   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   432   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   433   * \param tUnit desired unit time (f_tick), e.g. 3E-6 for 3 uS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   434   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   435   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   436  IFX_EXTERN void IfxSent_initializeChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId, float32 tUnit);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   437  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   438  /** \brief Initialize and get the clock for SENT kernel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   439   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   440   * \param dividerMode Divider mode for clock output
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   441   * \param stepValue clock frequency for for module fractional divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   442   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   443   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   444  IFX_EXTERN void IfxSent_initializeModuleClock(Ifx_SENT *sent, IfxSent_ClockDividerMode dividerMode, uint16 stepValue);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   445  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   446  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   447  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   448  /** \addtogroup IfxLld_Sent_Std_IO
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   449   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   450  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   451  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   452  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   453  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   454  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   455  /** \brief Initializes a SENT input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   456   * \param sentIn the SENT Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   457   * \param inputMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   458   * \param padDriver the pad driver mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   459   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   460   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   461  IFX_INLINE void IfxSent_initSentPin(const IfxSent_Sent_In *sentIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   462  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   463  /** \brief Initializes a SPC output
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   464   * \param spcOut the SPC Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   465   * \param spcOutMode Port Output Mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   466   * \param padDriver the pad driver mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   467   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   468   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   469  IFX_INLINE void IfxSent_initSpcPin(const IfxSent_Spc_Out *spcOut, IfxPort_OutputMode spcOutMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   470  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   471  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   472  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   473  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   474  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   475  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   476  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   477  /** \brief Set the watch dog timer limit value for sent channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   478   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   479   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   480   * \param watchDogTimerLimit Specifies the watch dog timer limit value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   481   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   482   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   483  IFX_INLINE void IfxSent_setWatchDogTimerLimit(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 watchDogTimerLimit);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   484  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   485  /** \brief Return TRUE if SENT module is enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   486   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   487   * \return The status of whether clock for sent is enabled or disabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   488   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   489  IFX_INLINE boolean IfxSent_isModuleEnabled(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   490  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   491  /** \brief Return the Interrupt Status of the SENT channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   492   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   493   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   494   * \param source enable the interrupt source of any interrupt of SENT Channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   495   * \return The Interrupt Status of SENT channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   496   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   497  IFX_INLINE boolean IfxSent_getInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_InterruptSource source);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   498  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   499  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   500   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   501   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   502   * \param source enable the interrupt source of any interrupt of SENT Channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   503   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   504   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   505  IFX_INLINE void IfxSent_clearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_InterruptSource source);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   506  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   507  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   508   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   509   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   510   * \return The Data content of a recieved Data Frame
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   511   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   512  IFX_INLINE uint32 IfxSent_readReceivedData(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   513  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   514  /** \brief Reads and returns value in RSR (Received Status Register).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   515   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   516   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   517   * \return Returns 32 bit RSR
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   518   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   519  IFX_INLINE uint32 IfxSent_readReceivedStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   520  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   521  /** \brief Returns 4 bit CRC value in Receive Status Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   522   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   523   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   524   * \return 4 bit CRC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   525   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   526  IFX_INLINE uint8 IfxSent_readReceivedCrc(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   527  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   528  /** \brief Returns 2 bit CST value in Receive Status Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   529   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   530   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   531   * \return 2 bit CST
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   532   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   533  IFX_INLINE uint8 IfxSent_readReceivedChannelStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   534  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   535  /** \brief Returns 4 bit SCN value in Receive Status Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   536   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   537   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   538   * \return 4 bit SCN
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   539   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   540  IFX_INLINE uint8 IfxSent_readReceivedStatusAndCommunicationNibble(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   541  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   542  /** \brief Returns 32 bit Received Time Stamp Value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   543   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   544   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   545   * \return 32 bit Time Stamp
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   546   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   547  IFX_INLINE uint32 IfxSent_readReceivedTimeStamp(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   548  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   549  /** \brief Returns 6 bit PLEN value in SCR Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   550   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   551   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   552   * \return 6 bit PLEN
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   553   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   554  IFX_INLINE uint8 IfxSent_readSpcPulseLength(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   555  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   556  /** \brief Returns 6 bit Delay length value in SCR Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   557   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   558   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   559   * \return 6 bit DEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   560   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   561  IFX_INLINE uint8 IfxSent_readSpcDelayLength(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   562  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   563  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   564  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   565  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   566  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   567  /** \brief Returns the current unit time (f_tick) of the given channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   568   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   569   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   570   * \return The current unit time in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   571   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   572  IFX_EXTERN float32 IfxSent_getChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   573  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   574  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   575  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   576  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   577  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   578  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   579  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   580      sent->CH[channelId].RCR.B.CEN = 0;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   581  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   582  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   583  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   584  IFX_INLINE void IfxSent_disableModule(Ifx_SENT *sent)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   585  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   586      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   587      IfxScuWdt_clearCpuEndinit(passwd);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   588      sent->CLC.B.DISR = 1;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   589      IfxScuWdt_setCpuEndinit(passwd);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   590  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   591  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   592  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   593  IFX_INLINE void IfxSent_enableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   594  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   595      sent->CH[channelId].RCR.B.CEN = 1;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   596  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   597  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   598  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   599  IFX_INLINE void IfxSent_enableModule(Ifx_SENT *sent)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   600  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   601      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   602      IfxScuWdt_clearCpuEndinit(passwd);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   603      sent->CLC.B.DISR = 0;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   604      IfxScuWdt_setCpuEndinit(passwd);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   605  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   606      if (sent->CLC.U)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   607      {}
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   608  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   609  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   610  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   611  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getAndClearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   612  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   613      Ifx_SENT_CH_INTSTAT interruptFlags;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   614      interruptFlags.U             = sent->CH[channelId].INTSTAT.U;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   615      sent->CH[channelId].INTCLR.U = interruptFlags.U;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   616      return interruptFlags;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   617  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   618  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   619  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   620  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getChannelInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   621  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   622      Ifx_SENT_CH_INTSTAT interruptFlags;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   623      interruptFlags.U = sent->CH[channelId].INTSTAT.U;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   624      return interruptFlags;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   625  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   626  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   627  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   628  IFX_INLINE volatile Ifx_SRC_SRCR *IfxSent_getChannelSrc(IfxSent_ChannelId channelId)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   629  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   630      return &MODULE_SRC.SENT.SENT[0].SR[channelId];
	mul	d15,d15,#4
	mov.a	a15,d15
	movh.a	a3,#61444
	add.a	a3,a15
	lea	a15,[a3]-31920
.L309:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   630      return &MODULE_SRC.SENT.SENT[0].SR[channelId];      (inlined)
	j	.L17

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   631  }      (inlined)
.L17:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   207  rn result;
	ld.hu	d15,[a12]60
.L235:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     2   * \file IfxSrc.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     3   * \brief SRC  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     4   * \ingroup IfxLld_Src
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    44   * \defgroup IfxLld_Src SRC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    45   * \addtogroup IfxLld_Src
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    46   * \{
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    47   * \defgroup IfxLld_Src_Usage How to use Service Request Mechanism?
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    48   * \addtogroup IfxLld_Src_Usage
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    49   * \{
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    50   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    51   * For Aurix controller peripherals that can generate service requests is connected to one
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    52   * or more Service Request Nodes (SRNs) in the central Interrupt Router(IR) module. Refer to Controller User Manual for more details\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    53   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    54   * IfxSrc driver provides the APIs to configure and control service requests. Refer \ref IfxLld_Src_Usage for
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    55   * details of these APIs.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    56   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    57   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    58   * \section Ifx_Src_UsageInit Initialize the Service Request Node
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    59   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    60   * Service request node is initialized to configure the following,\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    61   * 1) Route the interrupt trigger to service provider, which are:\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    62   *  __a. One of the available CPUs or\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    63   *  __b. DMA controller\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    64   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    65   * 2) Priority of CPU Interrupt or DMA Trigger.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    66   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    67   * For Interrupt or DMA to be correctly triggered, following steps are to be done in the user code:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    68   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    69   * \subsection Ifx_Src_UsageInitStep1 Step1: Configure the Node
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    70   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    71   * User must configure the service request node in the application / driver files.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    72   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    73   * \subsection Ifx_Src_UsageInitStep2 Step2: Enable the Trigger
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    74   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    75   * Enable the service request node to connect the trigger event from the hardware to service provider.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    76   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    77   * Example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    78   * Following example show the configuration for STM0 Service request 0 trigger configured to trigger
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    79   * CPU1 with the priority specified by IFX_INTPRIO_STM0 (from the example at IfxCpu_Irq)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    80   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    81   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    82   * //file: myApplication.c
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    83   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    84   * #include "Ifx_IntPrioDef.h" // to get the priority numbers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    85   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    86   * void myDriverInitFunction(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    87   * {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    88   *    // driver init code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    89   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    90   *    // Step1: Call the function to route the trigger from for SRC_STM0_SR0 to CPU1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    91   *    // and priority specified at Ifx_IntPrioDef.h globally
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    92   *  IfxSrc_init(&MODULE_SRC.STM.STM[0].SR0, IfxSrc_Tos_cpu1, IFX_INTPRIO_STM0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    93   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    94   *    // Step2: Enable the service request node
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    95   *  IfxSrc_init(&MODULE_SRC.STM.STM[0].SR0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    96   * }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    97   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    98   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    99   * \}
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   100   * \}
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   101   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   102   * \defgroup IfxLld_Src_Std_Service_Request Service Request Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   103   * \ingroup IfxLld_Src_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   104   * \defgroup IfxLld_Src_Std_Module Module Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   105   * \ingroup IfxLld_Src_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   106   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   107  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   108  #ifndef IFXSRC_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   109  #define IFXSRC_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   110  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   111  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   112  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   113  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   114  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   115  #include "_Impl/IfxSrc_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   116  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   117  #include "IfxSrc_reg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   118  /** \addtogroup IfxLld_Src_Std_Service_Request
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   119   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   120  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   121  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   122  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   123  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   124  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   125  /** \brief Resets the overrun flag of the Service Request.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   126   * \param src pointer to the Service Request Control register which the overrun flag should be cleared.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   127   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   128   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   129   * Usage example: see \ref IfxSrc_init
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   130   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   131   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   132  IFX_INLINE void IfxSrc_clearOverrun(volatile Ifx_SRC_SRCR *src);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   133  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   134  /** \brief Resets a specific interrupt service by software.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   135   * \param src pointer to the Service Request Control register which the request should be cleared.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   136   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   137   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   138   * Usage example: see \ref IfxSrc_init
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   139   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   140   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   141  IFX_INLINE void IfxSrc_clearRequest(volatile Ifx_SRC_SRCR *src);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   142  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   143  /** \brief Gets the current overrun status.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   144   * \param src pointer to the Service Request Control register for which the overrun status should be returned.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   145   * \return current service request control overrun status.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   146   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   147   * Usage example: see \ref IfxSrc_init
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   148   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   149   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   150  IFX_INLINE boolean IfxSrc_isOverrun(volatile Ifx_SRC_SRCR *src);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   151  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   152  /** \brief Gets the current request status.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   153   * \param src pointer to the Service Request Control register for which the request status should be returned.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   154   * \return current service request control request status.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   155   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   156   * Usage example: see \ref IfxSrc_init
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   157   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   158   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   159  IFX_INLINE boolean IfxSrc_isRequested(volatile Ifx_SRC_SRCR *src);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   160  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   161  /** \brief Requests a specific interrupt service by software
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   162   * \param src pointer to the Service Request Control register which the interrupt has to be requested.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   163   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   164   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   165   * Usage example: see \ref IfxSrc_init
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   166   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   167   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   168  IFX_INLINE void IfxSrc_setRequest(volatile Ifx_SRC_SRCR *src);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   169  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   170  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   171  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   172  /** \addtogroup IfxLld_Src_Std_Module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   173   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   174  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   175  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   176  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   177  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   178  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   179  /** \brief DeInitializes the service request control register.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   180   * \param src pointer to the Service Request Control register which should be deinitialised.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   181   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   182   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   183   * Usage example: see \ref IfxSrc_init
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   184   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   185   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   186  IFX_INLINE void IfxSrc_deinit(volatile Ifx_SRC_SRCR *src);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   187  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   188  /** \brief Disables a specific interrupt service request.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   189   * \param src pointer to the Service Request Control register for which the interrupt has to be disabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   190   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   191   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   192   * Usage example: see \ref IfxSrc_init
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   193   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   194   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   195  IFX_INLINE void IfxSrc_disable(volatile Ifx_SRC_SRCR *src);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   196  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   197  /** \brief Enables a specific interrupt service request.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   198   * \param src pointer to the Service Request Control register for which the interrupt has to be enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   199   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   200   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   201   * Usage example: see \ref IfxSrc_init
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   202   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   203   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   204  IFX_INLINE void IfxSrc_enable(volatile Ifx_SRC_SRCR *src);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   205  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   206  /** \brief Initializes the service request control register.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   207   * \param src pointer to the Service Request Control register which should be initialised.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   208   * \param typOfService type of interrupt service provider.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   209   * \param priority Interrupt priority.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   210   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   211   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   212   * Get the peripheral service control register which request need to be serviced and assign this service to any of service providers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   213   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   214   * //define the interrupt priority
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   215   * #define IFXASCLIN0_TX_INTPRIO 2
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   216   * //get the service request
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   217   * volatile Ifx_SRC_SRCR *src = IfxAsclin_getSrcPointerRx( &MODULE_ASCLIN0 );
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   218   * //initlaise the service request
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   219   * IfxSrc_init( src, IfxSrc_Tos_cpu0, IFXASCLIN0_TX_INTPRIO );
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   220   * // enable the service
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   221   * IfxSrc_enable( src );
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   222   * //check for service request flags and clear if they occur
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   223   * if ( IfxSrc_isRequested( src ) == TRUE )
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   224   * {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   225   *    IfxSrc_clearRequest( src );
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   226   * }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   227   * if ( IfxSrc_isOverrun( src ) == TRUE )
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   228   * {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   229   *      IfxSrc_clearOverrun( src );
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   230   * }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   231   * // Atlast deinitialise the service control
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   232   * IfxSrc_deinit( src );
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   233   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   234   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   235   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   236  IFX_INLINE void IfxSrc_init(volatile Ifx_SRC_SRCR *src, IfxSrc_Tos typOfService, Ifx_Priority priority);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   237  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   238  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   239  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   240  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   241  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   242  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   243  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   244  IFX_INLINE void IfxSrc_clearOverrun(volatile Ifx_SRC_SRCR *src)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   245  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   246      src->B.IOVCLR = 1;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   247  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   248  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   249  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   250  IFX_INLINE void IfxSrc_clearRequest(volatile Ifx_SRC_SRCR *src)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   251  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   252      src->B.CLRR = 1;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   253  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   254  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   255  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   256  IFX_INLINE void IfxSrc_deinit(volatile Ifx_SRC_SRCR *src)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   257  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   258      src->U = 0;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   259  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   260  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   261  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   262  IFX_INLINE void IfxSrc_disable(volatile Ifx_SRC_SRCR *src)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   263  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   264      src->B.SRE = 0;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   265  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   266  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   267  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   268  IFX_INLINE void IfxSrc_enable(volatile Ifx_SRC_SRCR *src)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   269  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   270      src->B.SRE = 1;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   271  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   272  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   273  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   274  IFX_INLINE void IfxSrc_init(volatile Ifx_SRC_SRCR *src, IfxSrc_Tos typOfService, Ifx_Priority priority)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   275  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   276      src->B.SRPN = priority;
	ld.bu	d1,[a15]
.L503:
	extr.u	d15,d15,#0,#8
.L504:
	insert	d15,d1,d15,#0,#8
	st.b	[a15],d15
.L505:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   277      src->B.TOS  = typOfService;
	ld.bu	d15,[a15]1
.L506:
	insert	d15,d15,d0,#3,#2
	st.b	[a15]1,d15
.L245:
	ld.bu	d15,[a15]3
.L507:
	or	d15,#2
	st.b	[a15]3,d15
.L236:
	ld.bu	d15,[a15]1
.L508:
	or	d15,#4
	st.b	[a15]1,d15
.L16:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   208  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   209  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   210  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   211  void IfxSent_Sent_initChannelConfig(IfxSent_Sent_ChannelConfig *config, IfxSent_Sent *driver)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   212  {
	mov	d2,d8
.L310:
	j	.L18

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   213      const IfxSent_Sent_ChannelConfig defaultChannelConfig = {
.L18:
	ret
.L123:
	
__IfxSent_Sent_initChannel_function_end:
	.size	IfxSent_Sent_initChannel,__IfxSent_Sent_initChannel_function_end-IfxSent_Sent_initChannel
.L66:
	; End of function
	
	.sdecl	'.text.IfxSent_Sent.IfxSent_Sent_initChannelConfig',code,cluster('IfxSent_Sent_initChannelConfig')
	.sect	'.text.IfxSent_Sent.IfxSent_Sent_initChannelConfig'
	.align	2
	
	.global	IfxSent_Sent_initChannelConfig

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   214          .driver             = NULL_PTR,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   215          .channelId          = IfxSent_ChannelId_none,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   216          .tUnit              = 3E-6,  /* 3 uS */
; Function IfxSent_Sent_initChannelConfig
.L34:
IfxSent_Sent_initChannelConfig:	.type	func
	sub.a	a10,#88
.L311:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   217  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   218          .watchDogTimerLimit = 0,
	movh.a	a15,#@his(.1.ini)
	lea	a15,[a15]@los(.1.ini)
	lea	a15,[a15]0
.L513:
	lea	a2,[a10]0
	mov.a	a6,#9
.L19:
	ld.d	e0,[a15+]8
	st.d	[a2+]8,e0
	loop	a6,.L19
	ld.w	d15,[a15+]
	st.w	[a2+],d15
.L514:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   219  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   220          .receiveControl     = {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   221              .endPulseIgnored               = FALSE,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   222              .alternateCrcSelected          = FALSE,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   223              .statusNibbleEnabled           = FALSE,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   224              .serialDataProcessingEnabled   = FALSE,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   225              .serialDataDisabledCrcDisabled = FALSE,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   226              .crcModeDisabled               = FALSE,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   227              .frameCheckMode                = IfxSent_FrameCheckMode_pastSyncPulse,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   228              .frameLength                   = 6,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   229              .crcMethodDisabled             = FALSE,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   230              .extendedSerialFrameMode       = IfxSent_ExtendedSerialFrameMode_standard,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   231              .driftErrorsDisabled           = FALSE,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   232              .suspendTriggered              = FALSE,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   233          },
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   234  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   235          .nibbleControl                            = {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   236              .nibblePointer0 = IfxSent_Nibble_0,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   237              .nibblePointer1 = IfxSent_Nibble_1,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   238              .nibblePointer2 = IfxSent_Nibble_2,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   239              .nibblePointer3 = IfxSent_Nibble_3,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   240              .nibblePointer4 = IfxSent_Nibble_4,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   241              .nibblePointer5 = IfxSent_Nibble_5,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   242              .nibblePointer6 = IfxSent_Nibble_6,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   243              .nibblePointer7 = IfxSent_Nibble_7,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   244          },
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   245  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   246          .inputOutputControl                       = {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   247              .digitalGlitchFilterDepth = IfxSent_DigitalGlitchesLength_2,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   248              .outputPulsePolarityHigh  = FALSE,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   249              .inputPulsePolarityHigh   = FALSE,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   250              .edgeCounterCleared       = TRUE,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   251              .glitchRisingCleared      = TRUE,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   252              .glitchFallingCleared     = TRUE,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   253              .externalTrigger          = IfxSent_ExternalTrigger_0,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   254              .triggerMonitorCleared    = FALSE,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   255          },
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   256  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   257          .enabledInterrupts.ALL = IFXSENT_CFG_CHANNEL_INTEN,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   258  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   259          .interuptNodeControl   = {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   260              .receiveDataInterruptNode             = IfxSent_InterruptNodePointer_0,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   261              .receiveSuccessInterruptNode          = IfxSent_InterruptNodePointer_0,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   262              .receiveBufferOverflowInterruptNode   = IfxSent_InterruptNodePointer_0,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   263              .transferDataInterruptNode            = IfxSent_InterruptNodePointer_0,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   264              .transferBufferUnderflowInterruptNode = IfxSent_InterruptNodePointer_0,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   265              .errorInterruptNode                   = IfxSent_InterruptNodePointer_0,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   266              .serialDataReceiveInterruptNode       = IfxSent_InterruptNodePointer_0,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   267              .watchdogErrorInterruptNode           = IfxSent_InterruptNodePointer_0,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   268          },
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   269  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   270          .pins                                     = NULL_PTR,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   271  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   272          /* SPC mode enable/disable   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   273          .spcModeOn                                = FALSE,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   274      };
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   275      *config        = defaultChannelConfig;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   276      config->driver = driver;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   277  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   278  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   279  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   280  boolean IfxSent_Sent_initModule(IfxSent_Sent *driver, const IfxSent_Sent_Config *config)
	lea	a15,[a10]0
.L515:
	lea	a2,[a4]0
	mov.a	a6,#9
.L20:
	ld.d	e0,[a15+]8
	st.d	[a2+]8,e0
	loop	a6,.L20
	ld.w	d15,[a15+]
	st.w	[a2+],d15
.L516:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   281  {
	st.a	[a4],a5
.L517:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   282      boolean   result  = TRUE;
	ret
.L253:
	
__IfxSent_Sent_initChannelConfig_function_end:
	.size	IfxSent_Sent_initChannelConfig,__IfxSent_Sent_initChannelConfig_function_end-IfxSent_Sent_initChannelConfig
.L71:
	; End of function
	
	.sdecl	'.text.IfxSent_Sent.IfxSent_Sent_initModule',code,cluster('IfxSent_Sent_initModule')
	.sect	'.text.IfxSent_Sent.IfxSent_Sent_initModule'
	.align	2
	
	.global	IfxSent_Sent_initModule

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   283      Ifx_SENT *sentSFR = config->module;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   284      driver->sent = sentSFR;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   285  
; Function IfxSent_Sent_initModule
.L36:
IfxSent_Sent_initModule:	.type	func
	mov.aa	a12,a5
.L313:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   286      uint16    passwd = IfxScuWdt_getCpuWatchdogPassword();
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   287  
	mov	d8,#1
.L314:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   288      if (IfxSent_isModuleEnabled(sentSFR) == FALSE)
	ld.a	a15,[a12]
.L315:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   289      {
	st.a	[a4],a15
.L96:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   290          IfxSent_enableModule(sentSFR);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   291      }
	call	IfxScuWdt_getCpuWatchdogPassword
.L312:
	mov	d9,d2
.L99:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     2   * \file IfxSent.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     3   * \brief SENT  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     4   * \ingroup IfxLld_Sent
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    45   * \defgroup IfxLld_Sent_Std_Enumerations Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    46   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    47   * \defgroup IfxLld_Sent_Std_Configuration Configuration Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    48   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    49   * \defgroup IfxLld_Sent_Std_Interrupts Interrupts
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    50   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    51   * \defgroup IfxLld_Sent_Std_Operative Operative Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    52   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    53   * \defgroup IfxLld_Sent_Std_Baudrate Baudrate Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    54   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    55   * \defgroup IfxLld_Sent_Std_IO IO Pin Configuration Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    56   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    57   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    58  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    59  #ifndef IFXSENT_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    60  #define IFXSENT_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    61  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    62  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    63  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    64  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    65  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    66  #include "_Impl/IfxSent_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    67  #include "Src/Std/IfxSrc.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    68  #include "Scu/Std/IfxScuCcu.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    69  #include "_PinMap/IfxSent_PinMap.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    70  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    71  #include "IfxSent_bf.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    72  #include "IfxSent_reg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    73  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    74  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    75  /*-----------------------------------Macros-----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    76  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    77  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    78  #define IFXSENT_INTERRUPT_STATUS_ERROR_FLAGS (0x000037f4)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    79  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    80  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    81  /*--------------------------------Enumerations--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    82  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    83  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    84  /** \addtogroup IfxLld_Sent_Std_Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    85   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    86  /** \brief SENT.CH[channelId].IOCR.ALTI , Specifies alternate input for channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    87   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    88  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    89  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    90      IfxSent_AlternateInput_0 = 0,      /**< \brief Specifies alternate input 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    91      IfxSent_AlternateInput_1,          /**< \brief Specifies alternate input 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    92      IfxSent_AlternateInput_2,          /**< \brief Specifies alternate input 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    93      IfxSent_AlternateInput_3           /**< \brief Specifies alternate input 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    94  } IfxSent_AlternateInput;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    95  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    96  /** \brief SENT.CH[channelId].RSR.CST, Specifies the current channel status
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    97   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    98  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    99  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   100      IfxSent_ChannelStatus_stop        = 0, /**< \brief Specifies the channel is stopped */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   101      IfxSent_ChannelStatus_initialize  = 1, /**< \brief Specifies the channel is initialized */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   102      IfxSent_ChannelStatus_running     = 2, /**< \brief Specifies the channel is running */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   103      IfxSent_ChannelStatus_synchronize = 3  /**< \brief Specifies the channel is synchronized */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   104  } IfxSent_ChannelStatus;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   105  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   106  /** \brief SENT.FDR.DM , Specifies clock divider mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   107   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   108  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   109  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   110      IfxSent_ClockDividerMode_off        = 0, /**< \brief Specifies clock divider mode off */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   111      IfxSent_ClockDividerMode_normal     = 1, /**< \brief Specifies clock normal divider mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   112      IfxSent_ClockDividerMode_fractional = 2  /**< \brief Specifies clock fractional divider mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   113  } IfxSent_ClockDividerMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   114  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   115  /** \brief SENT.CH[channelId].SDS.CON , Specifies received configuration bit value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   116   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   117  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   118  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   119      IfxSent_ConfigBit_0 = 0,      /**< \brief Specifies received configuration bit value 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   120      IfxSent_ConfigBit_1           /**< \brief Specifies received configuration bit value 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   121  } IfxSent_ConfigBit;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   122  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   123  /** \brief SENT.CH[channelId].IOCR.DEPTH , Specifies number of port input samples
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   124   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   125  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   126  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   127      IfxSent_DigitalGlitchesLength_off = 0,  /**< \brief Specifies port input samples off */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   128      IfxSent_DigitalGlitchesLength_1   = 1,  /**< \brief Specifies 1 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   129      IfxSent_DigitalGlitchesLength_2,        /**< \brief Specifies 2 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   130      IfxSent_DigitalGlitchesLength_3,        /**< \brief Specifies 3 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   131      IfxSent_DigitalGlitchesLength_4,        /**< \brief Specifies 4 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   132      IfxSent_DigitalGlitchesLength_5,        /**< \brief Specifies 5 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   133      IfxSent_DigitalGlitchesLength_6,        /**< \brief Specifies 6 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   134      IfxSent_DigitalGlitchesLength_7,        /**< \brief Specifies 7 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   135      IfxSent_DigitalGlitchesLength_8,        /**< \brief Specifies 8 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   136      IfxSent_DigitalGlitchesLength_9,        /**< \brief Specifies 9 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   137      IfxSent_DigitalGlitchesLength_10,       /**< \brief Specifies 10 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   138      IfxSent_DigitalGlitchesLength_11,       /**< \brief Specifies 11 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   139      IfxSent_DigitalGlitchesLength_12,       /**< \brief Specifies 12 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   140      IfxSent_DigitalGlitchesLength_13,       /**< \brief Specifies 13 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   141      IfxSent_DigitalGlitchesLength_14,       /**< \brief Specifies 14 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   142      IfxSent_DigitalGlitchesLength_15        /**< \brief Specifies 15 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   143  } IfxSent_DigitalGlitchesLength;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   144  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   145  /** \brief SENT.CH[channelId].RCR.ESF , Specifies the serial frame structure
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   146   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   147  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   148  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   149      IfxSent_ExtendedSerialFrameMode_standard = 0,  /**< \brief Specifies the standard serial frame structure */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   150      IfxSent_ExtendedSerialFrameMode_extended = 1   /**< \brief Specifies the extended serial frame structure */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   151  } IfxSent_ExtendedSerialFrameMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   152  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   153  /** \brief SENT.CH[channelId].IOCR.ETS , Specifies the external trigger line
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   154   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   155  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   156  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   157      IfxSent_ExternalTrigger_0 = 0,      /**< \brief Specifies the external trigger line 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   158      IfxSent_ExternalTrigger_1,          /**< \brief Specifies the external trigger line 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   159      IfxSent_ExternalTrigger_2,          /**< \brief Specifies the external trigger line 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   160      IfxSent_ExternalTrigger_3,          /**< \brief Specifies the external trigger line 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   161      IfxSent_ExternalTrigger_4,          /**< \brief Specifies the external trigger line 4  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   162      IfxSent_ExternalTrigger_5,          /**< \brief Specifies the external trigger line 5  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   163      IfxSent_ExternalTrigger_6,          /**< \brief Specifies the external trigger line 6  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   164      IfxSent_ExternalTrigger_7,          /**< \brief Specifies the external trigger line 7  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   165      IfxSent_ExternalTrigger_8,          /**< \brief Specifies the external trigger line 8  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   166      IfxSent_ExternalTrigger_9           /**< \brief Specifies the external trigger line 9  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   167  } IfxSent_ExternalTrigger;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   168  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   169  /** \brief SENT.CH[channelId].RCR.CFC, Specifies received frame check mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   170   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   171  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   172  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   173      IfxSent_FrameCheckMode_pastSyncPulse   = 0, /**< \brief Specifies frame check mode against past sync pulse */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   174      IfxSent_FrameCheckMode_futureSuncPulse = 1  /**< \brief Specifies frame check mode against future sync pulse */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   175  } IfxSent_FrameCheckMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   176  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   177  /** \brief SENT.CH[channelId].INP.X(X= RSI,RDI,RBI,TDI,TBI,ERRI,SDI,WDI),Specifies interrupt requested node for respective interrupt
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   178   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   179  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   180  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   181      IfxSent_InterruptNodePointer_0 = 0,           /**< \brief Specifies interrupt requested node 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   182      IfxSent_InterruptNodePointer_1,               /**< \brief Specifies interrupt requested node 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   183      IfxSent_InterruptNodePointer_2,               /**< \brief Specifies interrupt requested node 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   184      IfxSent_InterruptNodePointer_3,               /**< \brief Specifies interrupt requested node 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   185      IfxSent_InterruptNodePointer_trigo0 = 4,      /**< \brief Specifies interrupt requested node TRIGO 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   186      IfxSent_InterruptNodePointer_trigo1,          /**< \brief Specifies interrupt requested node TRIGO 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   187      IfxSent_InterruptNodePointer_trigo2,          /**< \brief Specifies interrupt requested node TRIGO 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   188      IfxSent_InterruptNodePointer_trigo3,          /**< \brief Specifies interrupt requested node TRIGO 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   189      IfxSent_InterruptNodePointer_trigo4,          /**< \brief Specifies interrupt requested node TRIGO 4  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   190      IfxSent_InterruptNodePointer_trigo5           /**< \brief Specifies interrupt requested node TRIGO 5  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   191  } IfxSent_InterruptNodePointer;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   192  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   193  /** \brief SENT.CH[channelId].VIEW.RDNPy( y=0,1,..7 ).Specifies receive data target nibble pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   194   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   195  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   196  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   197      IfxSent_Nibble_0 = 0,      /**< \brief Specifies receive data target nibble pointer to nibble 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   198      IfxSent_Nibble_1,          /**< \brief Specifies receive data target nibble pointer to nibble 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   199      IfxSent_Nibble_2,          /**< \brief Specifies receive data target nibble pointer to nibble 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   200      IfxSent_Nibble_3,          /**< \brief Specifies receive data target nibble pointer to nibble 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   201      IfxSent_Nibble_4,          /**< \brief Specifies receive data target nibble pointer to nibble 4  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   202      IfxSent_Nibble_5,          /**< \brief Specifies receive data target nibble pointer to nibble 5  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   203      IfxSent_Nibble_6,          /**< \brief Specifies receive data target nibble pointer to nibble 6  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   204      IfxSent_Nibble_7           /**< \brief Specifies receive data target nibble pointer to nibble 7  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   205  } IfxSent_Nibble;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   206  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   207  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   208   * Definition in Ifx_SENT.CLC.B.EDIS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   209   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   210  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   211  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   212      IfxSent_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   213      IfxSent_SleepMode_disable = 1  /**< \brief disables sleep mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   214  } IfxSent_SleepMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   215  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   216  /** \brief Specifies the SENT SPC operational mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   217   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   218  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   219  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   220      IfxSent_SpcMode_sync          = 0, /**< \brief Specifies synchronous SPC mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   221      IfxSent_SpcMode_range         = 1, /**< \brief Specifies range selection SPC mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   222      IfxSent_SpcMode_bidirectional = 2  /**< \brief Specifies bidirectional transmit SPC mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   223  } IfxSent_SpcMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   224  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   225  /** \brief OCDS Suspend Control (OCDS.SUS)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   226   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   227  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   228  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   229      IfxSent_SuspendMode_none = 0,  /**< \brief No suspend */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   230      IfxSent_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   231      IfxSent_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   232  } IfxSent_SuspendMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   233  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   234  /** \brief SENT.CH[channelId].SCR.BASE, Specifies selection of pulse based on time
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   235   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   236  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   237  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   238      IfxSent_TimeBase_measuredFrequency = 0,  /**< \brief Specifies selection of pulse based on measured frequency */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   239      IfxSent_TimeBase_nominalFrequency  = 1   /**< \brief Specifies selection of pulse based on nomianl frequency */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   240  } IfxSent_TimeBase;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   241  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   242  /** \brief SENT.CH[channelId].SCR.TRIG, Specifies trigger source for pulse generation
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   243   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   244  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   245  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   246      IfxSent_TriggerSource_off             = 0, /**< \brief Specifies no pulse generation */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   247      IfxSent_TriggerSource_immediate       = 1, /**< \brief Specifies immediate pulse generation */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   248      IfxSent_TriggerSource_fallingEdge     = 2, /**< \brief Specifies pulse generation at fallingEdge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   249      IfxSent_TriggerSource_externalTrigger = 3  /**< \brief Specifies pulse generation after each external trigger */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   250  } IfxSent_TriggerSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   251  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   252  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   253  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   254  /** \brief Sent Interrupt Source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   255   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   256  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   257  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   258      IfxSent_InterruptSource_rsi  = 0,   /**< \brief Enable Interrupt Request RSI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   259      IfxSent_InterruptSource_rdi  = 1,   /**< \brief Enable Interrupt Request RDI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   260      IfxSent_InterruptSource_rbi  = 2,   /**< \brief Enable Interrupt Request RBI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   261      IfxSent_InterruptSource_tdi  = 3,   /**< \brief Enable Interrupt Request TDI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   262      IfxSent_InterruptSource_tbi  = 4,   /**< \brief Enable Interrupt Request TBI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   263      IfxSent_InterruptSource_fri  = 5,   /**< \brief Enable Interrupt Request FRI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   264      IfxSent_InterruptSource_fdi  = 6,   /**< \brief Enable Interrupt Request FDI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   265      IfxSent_InterruptSource_nni  = 7,   /**< \brief Enable Interrupt Request NNI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   266      IfxSent_InterruptSource_nvi  = 8,   /**< \brief Enable Interrupt Request NVI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   267      IfxSent_InterruptSource_crci = 9,   /**< \brief Enable Interrupt Request crci */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   268      IfxSent_InterruptSource_wsi  = 10,  /**< \brief Enable Interrupt Request wsi */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   269      IfxSent_InterruptSource_sdi  = 11,  /**< \brief Enable Interrupt Request sdi */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   270      IfxSent_InterruptSource_scri = 12,  /**< \brief Enable Interrupt Request scri */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   271      IfxSent_InterruptSource_wdi  = 13   /**< \brief Enable Interrupt Request wdi */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   272  } IfxSent_InterruptSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   273  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   274  /** \addtogroup IfxLld_Sent_Std_Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   275   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   276  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   277  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   278  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   279  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   280  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   281  /** \brief Sets the operation mode of SENT kernel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   282   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   283   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   284   * \param alternateInput alternate input/output pin for SENT operation
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   285   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   286   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   287  IFX_INLINE void IfxSent_setAltiInput(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_AlternateInput alternateInput);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   288  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   289  /** \brief Set the module time stamp pre-divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   290   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   291   * \param timeStampPreDivider time stamp pre-divider value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   292   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   293   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   294  IFX_INLINE void IfxSent_setTimeStampPredivider(Ifx_SENT *sent, uint32 timeStampPreDivider);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   295  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   296  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   297  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   298  /** \addtogroup IfxLld_Sent_Std_Interrupts
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   299   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   300  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   301  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   302  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   303  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   304  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   305  /** \brief Copies the current interrupt flags into the Ifx_SENT_CH_INTSTAT structure, and clears the flags in hardware.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   306   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   307   * This function should be used in an ISR to retrieve the events which triggered the interrupt.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   308   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   309   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   310   * \return Interrupt flags which have been cleared.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   311   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   312  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getAndClearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   313  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   314  /** \brief Gets the current channel status
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   315   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   316   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   317   * \return current channel interrupt status
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   318   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   319  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getChannelInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   320  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   321  /** \brief gets the source for channel interrupt handler
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   322   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   323   * \return interrupt source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   324   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   325  IFX_INLINE volatile Ifx_SRC_SRCR *IfxSent_getChannelSrc(IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   326  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   327  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   328  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   329  /** \addtogroup IfxLld_Sent_Std_Operative
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   330   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   331  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   332  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   333  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   334  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   335  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   336  /** \brief Disable the channel with the channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   337   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   338   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   339   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   340   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   341  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   342  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   343  /** \brief Disable the SENT module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   344   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   345   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   346   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   347  IFX_INLINE void IfxSent_disableModule(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   348  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   349  /** \brief Enable the channel with the channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   350   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   351   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   352   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   353   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   354  IFX_INLINE void IfxSent_enableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   355  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   356  /** \brief Enable the SENT module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   357   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   358   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   359   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   360  IFX_INLINE void IfxSent_enableModule(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   361  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   362  /** \brief Returns the module's suspend state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   363   * TRUE :if module is suspended.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   364   * FALSE:if module is not yet suspended.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   365   * \param sent Pointer to SENT module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   366   * \return Suspend status (TRUE / FALSE)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   367   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   368  IFX_INLINE boolean IfxSent_isModuleSuspended(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   369  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   370  /** \brief Sets the sensitivity of the module to sleep signal
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   371   * \param sent pointer to SENT registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   372   * \param mode mode selection (enable / disable)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   373   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   374   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   375  IFX_INLINE void IfxSent_setSleepMode(Ifx_SENT *sent, IfxSent_SleepMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   376  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   377  /** \brief Configure the Module to Hard/Soft suspend mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   378   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   379   * \param sent Pointer to SENT module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   380   * \param mode Module suspend mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   381   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   382   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   383  IFX_INLINE void IfxSent_setSuspendMode(Ifx_SENT *sent, IfxSent_SuspendMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   384  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   385  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   386  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   387  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   388  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   389  /** \brief Resets the SENT module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   390   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   391   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   392   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   393  IFX_EXTERN void IfxSent_resetModule(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   394  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   395  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   397  /** \addtogroup IfxLld_Sent_Std_Baudrate
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   398   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   399  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   400  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   402  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   403  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   404  /** \brief Sets the channel fractional baudrate divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   405   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   406   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   407   * \param divider channel baudrate fractional divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   408   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   409   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   410  IFX_INLINE void IfxSent_setChannelFractionalDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 divider);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   411  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   412  /** \brief Sets the channel baudrate pre-divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   413   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   414   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   415   * \param preDivider channel baudrate pre-divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   416   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   417   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   418  IFX_INLINE void IfxSent_setChannelPreDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 preDivider);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   419  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   420  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   421  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   422  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   423  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   424  /** \brief Returns the current module frequency in Hertz.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   425   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   426   * \return The current module frequency in Hertz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   427   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   428  IFX_EXTERN float32 IfxSent_getModuleClock(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   429  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   430  /** \brief Initializes the desired unit time (f_tick) for the external SENT device connected to the given channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   431   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   432   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   433   * \param tUnit desired unit time (f_tick), e.g. 3E-6 for 3 uS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   434   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   435   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   436  IFX_EXTERN void IfxSent_initializeChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId, float32 tUnit);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   437  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   438  /** \brief Initialize and get the clock for SENT kernel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   439   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   440   * \param dividerMode Divider mode for clock output
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   441   * \param stepValue clock frequency for for module fractional divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   442   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   443   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   444  IFX_EXTERN void IfxSent_initializeModuleClock(Ifx_SENT *sent, IfxSent_ClockDividerMode dividerMode, uint16 stepValue);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   445  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   446  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   447  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   448  /** \addtogroup IfxLld_Sent_Std_IO
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   449   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   450  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   451  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   452  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   453  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   454  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   455  /** \brief Initializes a SENT input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   456   * \param sentIn the SENT Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   457   * \param inputMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   458   * \param padDriver the pad driver mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   459   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   460   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   461  IFX_INLINE void IfxSent_initSentPin(const IfxSent_Sent_In *sentIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   462  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   463  /** \brief Initializes a SPC output
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   464   * \param spcOut the SPC Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   465   * \param spcOutMode Port Output Mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   466   * \param padDriver the pad driver mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   467   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   468   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   469  IFX_INLINE void IfxSent_initSpcPin(const IfxSent_Spc_Out *spcOut, IfxPort_OutputMode spcOutMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   470  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   471  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   472  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   473  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   474  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   475  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   476  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   477  /** \brief Set the watch dog timer limit value for sent channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   478   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   479   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   480   * \param watchDogTimerLimit Specifies the watch dog timer limit value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   481   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   482   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   483  IFX_INLINE void IfxSent_setWatchDogTimerLimit(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 watchDogTimerLimit);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   484  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   485  /** \brief Return TRUE if SENT module is enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   486   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   487   * \return The status of whether clock for sent is enabled or disabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   488   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   489  IFX_INLINE boolean IfxSent_isModuleEnabled(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   490  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   491  /** \brief Return the Interrupt Status of the SENT channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   492   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   493   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   494   * \param source enable the interrupt source of any interrupt of SENT Channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   495   * \return The Interrupt Status of SENT channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   496   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   497  IFX_INLINE boolean IfxSent_getInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_InterruptSource source);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   498  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   499  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   500   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   501   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   502   * \param source enable the interrupt source of any interrupt of SENT Channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   503   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   504   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   505  IFX_INLINE void IfxSent_clearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_InterruptSource source);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   506  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   507  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   508   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   509   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   510   * \return The Data content of a recieved Data Frame
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   511   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   512  IFX_INLINE uint32 IfxSent_readReceivedData(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   513  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   514  /** \brief Reads and returns value in RSR (Received Status Register).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   515   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   516   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   517   * \return Returns 32 bit RSR
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   518   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   519  IFX_INLINE uint32 IfxSent_readReceivedStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   520  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   521  /** \brief Returns 4 bit CRC value in Receive Status Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   522   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   523   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   524   * \return 4 bit CRC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   525   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   526  IFX_INLINE uint8 IfxSent_readReceivedCrc(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   527  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   528  /** \brief Returns 2 bit CST value in Receive Status Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   529   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   530   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   531   * \return 2 bit CST
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   532   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   533  IFX_INLINE uint8 IfxSent_readReceivedChannelStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   534  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   535  /** \brief Returns 4 bit SCN value in Receive Status Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   536   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   537   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   538   * \return 4 bit SCN
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   539   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   540  IFX_INLINE uint8 IfxSent_readReceivedStatusAndCommunicationNibble(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   541  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   542  /** \brief Returns 32 bit Received Time Stamp Value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   543   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   544   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   545   * \return 32 bit Time Stamp
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   546   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   547  IFX_INLINE uint32 IfxSent_readReceivedTimeStamp(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   548  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   549  /** \brief Returns 6 bit PLEN value in SCR Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   550   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   551   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   552   * \return 6 bit PLEN
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   553   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   554  IFX_INLINE uint8 IfxSent_readSpcPulseLength(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   555  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   556  /** \brief Returns 6 bit Delay length value in SCR Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   557   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   558   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   559   * \return 6 bit DEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   560   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   561  IFX_INLINE uint8 IfxSent_readSpcDelayLength(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   562  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   563  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   564  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   565  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   566  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   567  /** \brief Returns the current unit time (f_tick) of the given channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   568   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   569   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   570   * \return The current unit time in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   571   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   572  IFX_EXTERN float32 IfxSent_getChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   573  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   574  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   575  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   576  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   577  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   578  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   579  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   580      sent->CH[channelId].RCR.B.CEN = 0;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   581  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   582  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   583  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   584  IFX_INLINE void IfxSent_disableModule(Ifx_SENT *sent)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   585  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   586      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   587      IfxScuWdt_clearCpuEndinit(passwd);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   588      sent->CLC.B.DISR = 1;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   589      IfxScuWdt_setCpuEndinit(passwd);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   590  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   591  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   592  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   593  IFX_INLINE void IfxSent_enableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   594  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   595      sent->CH[channelId].RCR.B.CEN = 1;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   596  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   597  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   598  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   599  IFX_INLINE void IfxSent_enableModule(Ifx_SENT *sent)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   600  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   601      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   602      IfxScuWdt_clearCpuEndinit(passwd);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   603      sent->CLC.B.DISR = 0;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   604      IfxScuWdt_setCpuEndinit(passwd);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   605  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   606      if (sent->CLC.U)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   607      {}
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   608  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   609  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   610  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   611  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getAndClearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   612  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   613      Ifx_SENT_CH_INTSTAT interruptFlags;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   614      interruptFlags.U             = sent->CH[channelId].INTSTAT.U;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   615      sent->CH[channelId].INTCLR.U = interruptFlags.U;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   616      return interruptFlags;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   617  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   618  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   619  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   620  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getChannelInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   621  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   622      Ifx_SENT_CH_INTSTAT interruptFlags;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   623      interruptFlags.U = sent->CH[channelId].INTSTAT.U;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   624      return interruptFlags;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   625  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   626  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   627  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   628  IFX_INLINE volatile Ifx_SRC_SRCR *IfxSent_getChannelSrc(IfxSent_ChannelId channelId)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   629  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   630      return &MODULE_SRC.SENT.SENT[0].SR[channelId];
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   631  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   632  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   633  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   634  IFX_INLINE void IfxSent_initSentPin(const IfxSent_Sent_In *sentIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   635  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   636      if (sentIn->pin.port != NULL_PTR)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   637      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   638          IfxPort_setPinModeInput(sentIn->pin.port, sentIn->pin.pinIndex, inputMode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   639          IfxPort_setPinPadDriver(sentIn->pin.port, sentIn->pin.pinIndex, padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   640          IfxSent_setAltiInput(sentIn->module, sentIn->channelId, (IfxSent_AlternateInput)sentIn->select);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   641      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   642  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   643  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   644  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   645  IFX_INLINE void IfxSent_initSpcPin(const IfxSent_Spc_Out *spcOut, IfxPort_OutputMode spcOutMode, IfxPort_PadDriver padDriver)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   646  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   647      if (spcOut->pin.port != NULL_PTR)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   648      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   649          IfxPort_setPinModeOutput(spcOut->pin.port, spcOut->pin.pinIndex, spcOutMode, spcOut->select);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   650          IfxPort_setPinPadDriver(spcOut->pin.port, spcOut->pin.pinIndex, padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   651      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   652  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   653  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   654  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   655  IFX_INLINE boolean IfxSent_isModuleSuspended(Ifx_SENT *sent)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   656  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   657      Ifx_SENT_OCS ocs;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   658  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   659      // read the status
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   660      ocs.U = sent->OCS.U;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   661  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   662      // return the status
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   663      return ocs.B.SUSSTA;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   664  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   665  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   666  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   667  IFX_INLINE void IfxSent_setAltiInput(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_AlternateInput alternateInput)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   668  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   669      sent->CH[channelId].IOCR.B.ALTI = alternateInput;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   670  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   671  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   672  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   673  IFX_INLINE void IfxSent_setChannelFractionalDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 divider)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   674  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   675      sent->CH[channelId].CFDR.B.DIV = divider;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   676  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   677  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   678  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   679  IFX_INLINE void IfxSent_setChannelPreDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 preDivider)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   680  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   681      sent->CH[channelId].CPDR.B.PDIV = preDivider;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   682  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   683  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   684  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   685  IFX_INLINE void IfxSent_setSleepMode(Ifx_SENT *sent, IfxSent_SleepMode mode)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   686  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   687      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   688      IfxScuWdt_clearCpuEndinit(passwd);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   689      sent->CLC.B.EDIS = mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   690      IfxScuWdt_setCpuEndinit(passwd);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   691  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   692  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   693  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   694  IFX_INLINE void IfxSent_setSuspendMode(Ifx_SENT *sent, IfxSent_SuspendMode mode)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   695  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   696      Ifx_SENT_OCS ocs;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   697  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   698      // remove protection and configure the suspend mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   699      ocs.B.SUS_P = 1;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   700      ocs.B.SUS   = mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   701      sent->OCS.U = ocs.U;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   702  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   703  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   704  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   705  IFX_INLINE void IfxSent_setTimeStampPredivider(Ifx_SENT *sent, uint32 timeStampPreDivider)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   706  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   707      sent->TPD.B.TDIV = timeStampPreDivider;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   708  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   709  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   710  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   711  IFX_INLINE void IfxSent_setWatchDogTimerLimit(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 watchDogTimerLimit)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   712  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   713      sent->CH[channelId].WDT.B.WDLx = watchDogTimerLimit;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   714  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   715  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   716  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   717  IFX_INLINE boolean IfxSent_isModuleEnabled(Ifx_SENT *sent)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   718  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   719      return sent->CLC.B.DISS == 0;
	ld.bu	d15,[a15]
	extr.u	d15,d15,#1,#1
.L350:
	eq	d15,d15,#0
.L351:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   719      return sent->CLC.B.DISS == 0;      (inlined)
	j	.L21

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   720  }      (inlined)
.L21:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   292  eEnabled != FALSE) ? 0 : 1;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   293      sentSFR->CLC.B.RMC  = 1;                                                       /* no divider required, pass clock 1:1*/
	jne	d15,#0,.L22
.L104:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     2   * \file IfxSent.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     3   * \brief SENT  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     4   * \ingroup IfxLld_Sent
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    45   * \defgroup IfxLld_Sent_Std_Enumerations Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    46   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    47   * \defgroup IfxLld_Sent_Std_Configuration Configuration Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    48   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    49   * \defgroup IfxLld_Sent_Std_Interrupts Interrupts
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    50   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    51   * \defgroup IfxLld_Sent_Std_Operative Operative Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    52   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    53   * \defgroup IfxLld_Sent_Std_Baudrate Baudrate Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    54   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    55   * \defgroup IfxLld_Sent_Std_IO IO Pin Configuration Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    56   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    57   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    58  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    59  #ifndef IFXSENT_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    60  #define IFXSENT_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    61  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    62  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    63  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    64  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    65  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    66  #include "_Impl/IfxSent_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    67  #include "Src/Std/IfxSrc.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    68  #include "Scu/Std/IfxScuCcu.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    69  #include "_PinMap/IfxSent_PinMap.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    70  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    71  #include "IfxSent_bf.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    72  #include "IfxSent_reg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    73  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    74  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    75  /*-----------------------------------Macros-----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    76  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    77  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    78  #define IFXSENT_INTERRUPT_STATUS_ERROR_FLAGS (0x000037f4)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    79  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    80  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    81  /*--------------------------------Enumerations--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    82  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    83  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    84  /** \addtogroup IfxLld_Sent_Std_Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    85   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    86  /** \brief SENT.CH[channelId].IOCR.ALTI , Specifies alternate input for channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    87   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    88  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    89  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    90      IfxSent_AlternateInput_0 = 0,      /**< \brief Specifies alternate input 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    91      IfxSent_AlternateInput_1,          /**< \brief Specifies alternate input 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    92      IfxSent_AlternateInput_2,          /**< \brief Specifies alternate input 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    93      IfxSent_AlternateInput_3           /**< \brief Specifies alternate input 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    94  } IfxSent_AlternateInput;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    95  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    96  /** \brief SENT.CH[channelId].RSR.CST, Specifies the current channel status
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    97   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    98  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    99  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   100      IfxSent_ChannelStatus_stop        = 0, /**< \brief Specifies the channel is stopped */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   101      IfxSent_ChannelStatus_initialize  = 1, /**< \brief Specifies the channel is initialized */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   102      IfxSent_ChannelStatus_running     = 2, /**< \brief Specifies the channel is running */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   103      IfxSent_ChannelStatus_synchronize = 3  /**< \brief Specifies the channel is synchronized */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   104  } IfxSent_ChannelStatus;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   105  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   106  /** \brief SENT.FDR.DM , Specifies clock divider mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   107   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   108  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   109  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   110      IfxSent_ClockDividerMode_off        = 0, /**< \brief Specifies clock divider mode off */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   111      IfxSent_ClockDividerMode_normal     = 1, /**< \brief Specifies clock normal divider mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   112      IfxSent_ClockDividerMode_fractional = 2  /**< \brief Specifies clock fractional divider mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   113  } IfxSent_ClockDividerMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   114  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   115  /** \brief SENT.CH[channelId].SDS.CON , Specifies received configuration bit value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   116   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   117  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   118  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   119      IfxSent_ConfigBit_0 = 0,      /**< \brief Specifies received configuration bit value 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   120      IfxSent_ConfigBit_1           /**< \brief Specifies received configuration bit value 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   121  } IfxSent_ConfigBit;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   122  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   123  /** \brief SENT.CH[channelId].IOCR.DEPTH , Specifies number of port input samples
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   124   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   125  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   126  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   127      IfxSent_DigitalGlitchesLength_off = 0,  /**< \brief Specifies port input samples off */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   128      IfxSent_DigitalGlitchesLength_1   = 1,  /**< \brief Specifies 1 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   129      IfxSent_DigitalGlitchesLength_2,        /**< \brief Specifies 2 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   130      IfxSent_DigitalGlitchesLength_3,        /**< \brief Specifies 3 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   131      IfxSent_DigitalGlitchesLength_4,        /**< \brief Specifies 4 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   132      IfxSent_DigitalGlitchesLength_5,        /**< \brief Specifies 5 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   133      IfxSent_DigitalGlitchesLength_6,        /**< \brief Specifies 6 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   134      IfxSent_DigitalGlitchesLength_7,        /**< \brief Specifies 7 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   135      IfxSent_DigitalGlitchesLength_8,        /**< \brief Specifies 8 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   136      IfxSent_DigitalGlitchesLength_9,        /**< \brief Specifies 9 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   137      IfxSent_DigitalGlitchesLength_10,       /**< \brief Specifies 10 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   138      IfxSent_DigitalGlitchesLength_11,       /**< \brief Specifies 11 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   139      IfxSent_DigitalGlitchesLength_12,       /**< \brief Specifies 12 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   140      IfxSent_DigitalGlitchesLength_13,       /**< \brief Specifies 13 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   141      IfxSent_DigitalGlitchesLength_14,       /**< \brief Specifies 14 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   142      IfxSent_DigitalGlitchesLength_15        /**< \brief Specifies 15 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   143  } IfxSent_DigitalGlitchesLength;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   144  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   145  /** \brief SENT.CH[channelId].RCR.ESF , Specifies the serial frame structure
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   146   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   147  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   148  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   149      IfxSent_ExtendedSerialFrameMode_standard = 0,  /**< \brief Specifies the standard serial frame structure */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   150      IfxSent_ExtendedSerialFrameMode_extended = 1   /**< \brief Specifies the extended serial frame structure */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   151  } IfxSent_ExtendedSerialFrameMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   152  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   153  /** \brief SENT.CH[channelId].IOCR.ETS , Specifies the external trigger line
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   154   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   155  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   156  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   157      IfxSent_ExternalTrigger_0 = 0,      /**< \brief Specifies the external trigger line 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   158      IfxSent_ExternalTrigger_1,          /**< \brief Specifies the external trigger line 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   159      IfxSent_ExternalTrigger_2,          /**< \brief Specifies the external trigger line 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   160      IfxSent_ExternalTrigger_3,          /**< \brief Specifies the external trigger line 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   161      IfxSent_ExternalTrigger_4,          /**< \brief Specifies the external trigger line 4  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   162      IfxSent_ExternalTrigger_5,          /**< \brief Specifies the external trigger line 5  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   163      IfxSent_ExternalTrigger_6,          /**< \brief Specifies the external trigger line 6  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   164      IfxSent_ExternalTrigger_7,          /**< \brief Specifies the external trigger line 7  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   165      IfxSent_ExternalTrigger_8,          /**< \brief Specifies the external trigger line 8  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   166      IfxSent_ExternalTrigger_9           /**< \brief Specifies the external trigger line 9  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   167  } IfxSent_ExternalTrigger;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   168  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   169  /** \brief SENT.CH[channelId].RCR.CFC, Specifies received frame check mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   170   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   171  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   172  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   173      IfxSent_FrameCheckMode_pastSyncPulse   = 0, /**< \brief Specifies frame check mode against past sync pulse */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   174      IfxSent_FrameCheckMode_futureSuncPulse = 1  /**< \brief Specifies frame check mode against future sync pulse */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   175  } IfxSent_FrameCheckMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   176  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   177  /** \brief SENT.CH[channelId].INP.X(X= RSI,RDI,RBI,TDI,TBI,ERRI,SDI,WDI),Specifies interrupt requested node for respective interrupt
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   178   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   179  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   180  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   181      IfxSent_InterruptNodePointer_0 = 0,           /**< \brief Specifies interrupt requested node 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   182      IfxSent_InterruptNodePointer_1,               /**< \brief Specifies interrupt requested node 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   183      IfxSent_InterruptNodePointer_2,               /**< \brief Specifies interrupt requested node 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   184      IfxSent_InterruptNodePointer_3,               /**< \brief Specifies interrupt requested node 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   185      IfxSent_InterruptNodePointer_trigo0 = 4,      /**< \brief Specifies interrupt requested node TRIGO 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   186      IfxSent_InterruptNodePointer_trigo1,          /**< \brief Specifies interrupt requested node TRIGO 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   187      IfxSent_InterruptNodePointer_trigo2,          /**< \brief Specifies interrupt requested node TRIGO 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   188      IfxSent_InterruptNodePointer_trigo3,          /**< \brief Specifies interrupt requested node TRIGO 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   189      IfxSent_InterruptNodePointer_trigo4,          /**< \brief Specifies interrupt requested node TRIGO 4  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   190      IfxSent_InterruptNodePointer_trigo5           /**< \brief Specifies interrupt requested node TRIGO 5  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   191  } IfxSent_InterruptNodePointer;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   192  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   193  /** \brief SENT.CH[channelId].VIEW.RDNPy( y=0,1,..7 ).Specifies receive data target nibble pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   194   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   195  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   196  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   197      IfxSent_Nibble_0 = 0,      /**< \brief Specifies receive data target nibble pointer to nibble 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   198      IfxSent_Nibble_1,          /**< \brief Specifies receive data target nibble pointer to nibble 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   199      IfxSent_Nibble_2,          /**< \brief Specifies receive data target nibble pointer to nibble 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   200      IfxSent_Nibble_3,          /**< \brief Specifies receive data target nibble pointer to nibble 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   201      IfxSent_Nibble_4,          /**< \brief Specifies receive data target nibble pointer to nibble 4  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   202      IfxSent_Nibble_5,          /**< \brief Specifies receive data target nibble pointer to nibble 5  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   203      IfxSent_Nibble_6,          /**< \brief Specifies receive data target nibble pointer to nibble 6  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   204      IfxSent_Nibble_7           /**< \brief Specifies receive data target nibble pointer to nibble 7  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   205  } IfxSent_Nibble;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   206  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   207  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   208   * Definition in Ifx_SENT.CLC.B.EDIS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   209   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   210  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   211  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   212      IfxSent_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   213      IfxSent_SleepMode_disable = 1  /**< \brief disables sleep mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   214  } IfxSent_SleepMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   215  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   216  /** \brief Specifies the SENT SPC operational mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   217   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   218  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   219  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   220      IfxSent_SpcMode_sync          = 0, /**< \brief Specifies synchronous SPC mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   221      IfxSent_SpcMode_range         = 1, /**< \brief Specifies range selection SPC mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   222      IfxSent_SpcMode_bidirectional = 2  /**< \brief Specifies bidirectional transmit SPC mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   223  } IfxSent_SpcMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   224  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   225  /** \brief OCDS Suspend Control (OCDS.SUS)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   226   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   227  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   228  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   229      IfxSent_SuspendMode_none = 0,  /**< \brief No suspend */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   230      IfxSent_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   231      IfxSent_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   232  } IfxSent_SuspendMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   233  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   234  /** \brief SENT.CH[channelId].SCR.BASE, Specifies selection of pulse based on time
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   235   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   236  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   237  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   238      IfxSent_TimeBase_measuredFrequency = 0,  /**< \brief Specifies selection of pulse based on measured frequency */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   239      IfxSent_TimeBase_nominalFrequency  = 1   /**< \brief Specifies selection of pulse based on nomianl frequency */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   240  } IfxSent_TimeBase;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   241  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   242  /** \brief SENT.CH[channelId].SCR.TRIG, Specifies trigger source for pulse generation
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   243   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   244  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   245  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   246      IfxSent_TriggerSource_off             = 0, /**< \brief Specifies no pulse generation */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   247      IfxSent_TriggerSource_immediate       = 1, /**< \brief Specifies immediate pulse generation */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   248      IfxSent_TriggerSource_fallingEdge     = 2, /**< \brief Specifies pulse generation at fallingEdge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   249      IfxSent_TriggerSource_externalTrigger = 3  /**< \brief Specifies pulse generation after each external trigger */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   250  } IfxSent_TriggerSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   251  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   252  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   253  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   254  /** \brief Sent Interrupt Source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   255   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   256  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   257  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   258      IfxSent_InterruptSource_rsi  = 0,   /**< \brief Enable Interrupt Request RSI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   259      IfxSent_InterruptSource_rdi  = 1,   /**< \brief Enable Interrupt Request RDI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   260      IfxSent_InterruptSource_rbi  = 2,   /**< \brief Enable Interrupt Request RBI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   261      IfxSent_InterruptSource_tdi  = 3,   /**< \brief Enable Interrupt Request TDI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   262      IfxSent_InterruptSource_tbi  = 4,   /**< \brief Enable Interrupt Request TBI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   263      IfxSent_InterruptSource_fri  = 5,   /**< \brief Enable Interrupt Request FRI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   264      IfxSent_InterruptSource_fdi  = 6,   /**< \brief Enable Interrupt Request FDI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   265      IfxSent_InterruptSource_nni  = 7,   /**< \brief Enable Interrupt Request NNI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   266      IfxSent_InterruptSource_nvi  = 8,   /**< \brief Enable Interrupt Request NVI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   267      IfxSent_InterruptSource_crci = 9,   /**< \brief Enable Interrupt Request crci */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   268      IfxSent_InterruptSource_wsi  = 10,  /**< \brief Enable Interrupt Request wsi */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   269      IfxSent_InterruptSource_sdi  = 11,  /**< \brief Enable Interrupt Request sdi */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   270      IfxSent_InterruptSource_scri = 12,  /**< \brief Enable Interrupt Request scri */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   271      IfxSent_InterruptSource_wdi  = 13   /**< \brief Enable Interrupt Request wdi */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   272  } IfxSent_InterruptSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   273  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   274  /** \addtogroup IfxLld_Sent_Std_Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   275   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   276  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   277  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   278  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   279  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   280  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   281  /** \brief Sets the operation mode of SENT kernel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   282   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   283   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   284   * \param alternateInput alternate input/output pin for SENT operation
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   285   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   286   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   287  IFX_INLINE void IfxSent_setAltiInput(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_AlternateInput alternateInput);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   288  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   289  /** \brief Set the module time stamp pre-divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   290   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   291   * \param timeStampPreDivider time stamp pre-divider value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   292   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   293   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   294  IFX_INLINE void IfxSent_setTimeStampPredivider(Ifx_SENT *sent, uint32 timeStampPreDivider);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   295  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   296  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   297  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   298  /** \addtogroup IfxLld_Sent_Std_Interrupts
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   299   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   300  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   301  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   302  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   303  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   304  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   305  /** \brief Copies the current interrupt flags into the Ifx_SENT_CH_INTSTAT structure, and clears the flags in hardware.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   306   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   307   * This function should be used in an ISR to retrieve the events which triggered the interrupt.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   308   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   309   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   310   * \return Interrupt flags which have been cleared.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   311   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   312  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getAndClearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   313  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   314  /** \brief Gets the current channel status
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   315   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   316   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   317   * \return current channel interrupt status
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   318   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   319  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getChannelInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   320  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   321  /** \brief gets the source for channel interrupt handler
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   322   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   323   * \return interrupt source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   324   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   325  IFX_INLINE volatile Ifx_SRC_SRCR *IfxSent_getChannelSrc(IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   326  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   327  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   328  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   329  /** \addtogroup IfxLld_Sent_Std_Operative
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   330   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   331  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   332  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   333  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   334  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   335  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   336  /** \brief Disable the channel with the channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   337   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   338   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   339   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   340   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   341  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   342  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   343  /** \brief Disable the SENT module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   344   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   345   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   346   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   347  IFX_INLINE void IfxSent_disableModule(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   348  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   349  /** \brief Enable the channel with the channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   350   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   351   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   352   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   353   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   354  IFX_INLINE void IfxSent_enableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   355  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   356  /** \brief Enable the SENT module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   357   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   358   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   359   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   360  IFX_INLINE void IfxSent_enableModule(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   361  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   362  /** \brief Returns the module's suspend state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   363   * TRUE :if module is suspended.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   364   * FALSE:if module is not yet suspended.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   365   * \param sent Pointer to SENT module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   366   * \return Suspend status (TRUE / FALSE)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   367   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   368  IFX_INLINE boolean IfxSent_isModuleSuspended(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   369  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   370  /** \brief Sets the sensitivity of the module to sleep signal
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   371   * \param sent pointer to SENT registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   372   * \param mode mode selection (enable / disable)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   373   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   374   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   375  IFX_INLINE void IfxSent_setSleepMode(Ifx_SENT *sent, IfxSent_SleepMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   376  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   377  /** \brief Configure the Module to Hard/Soft suspend mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   378   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   379   * \param sent Pointer to SENT module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   380   * \param mode Module suspend mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   381   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   382   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   383  IFX_INLINE void IfxSent_setSuspendMode(Ifx_SENT *sent, IfxSent_SuspendMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   384  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   385  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   386  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   387  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   388  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   389  /** \brief Resets the SENT module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   390   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   391   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   392   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   393  IFX_EXTERN void IfxSent_resetModule(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   394  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   395  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   397  /** \addtogroup IfxLld_Sent_Std_Baudrate
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   398   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   399  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   400  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   402  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   403  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   404  /** \brief Sets the channel fractional baudrate divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   405   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   406   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   407   * \param divider channel baudrate fractional divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   408   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   409   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   410  IFX_INLINE void IfxSent_setChannelFractionalDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 divider);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   411  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   412  /** \brief Sets the channel baudrate pre-divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   413   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   414   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   415   * \param preDivider channel baudrate pre-divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   416   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   417   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   418  IFX_INLINE void IfxSent_setChannelPreDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 preDivider);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   419  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   420  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   421  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   422  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   423  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   424  /** \brief Returns the current module frequency in Hertz.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   425   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   426   * \return The current module frequency in Hertz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   427   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   428  IFX_EXTERN float32 IfxSent_getModuleClock(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   429  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   430  /** \brief Initializes the desired unit time (f_tick) for the external SENT device connected to the given channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   431   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   432   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   433   * \param tUnit desired unit time (f_tick), e.g. 3E-6 for 3 uS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   434   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   435   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   436  IFX_EXTERN void IfxSent_initializeChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId, float32 tUnit);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   437  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   438  /** \brief Initialize and get the clock for SENT kernel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   439   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   440   * \param dividerMode Divider mode for clock output
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   441   * \param stepValue clock frequency for for module fractional divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   442   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   443   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   444  IFX_EXTERN void IfxSent_initializeModuleClock(Ifx_SENT *sent, IfxSent_ClockDividerMode dividerMode, uint16 stepValue);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   445  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   446  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   447  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   448  /** \addtogroup IfxLld_Sent_Std_IO
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   449   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   450  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   451  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   452  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   453  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   454  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   455  /** \brief Initializes a SENT input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   456   * \param sentIn the SENT Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   457   * \param inputMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   458   * \param padDriver the pad driver mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   459   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   460   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   461  IFX_INLINE void IfxSent_initSentPin(const IfxSent_Sent_In *sentIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   462  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   463  /** \brief Initializes a SPC output
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   464   * \param spcOut the SPC Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   465   * \param spcOutMode Port Output Mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   466   * \param padDriver the pad driver mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   467   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   468   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   469  IFX_INLINE void IfxSent_initSpcPin(const IfxSent_Spc_Out *spcOut, IfxPort_OutputMode spcOutMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   470  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   471  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   472  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   473  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   474  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   475  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   476  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   477  /** \brief Set the watch dog timer limit value for sent channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   478   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   479   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   480   * \param watchDogTimerLimit Specifies the watch dog timer limit value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   481   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   482   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   483  IFX_INLINE void IfxSent_setWatchDogTimerLimit(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 watchDogTimerLimit);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   484  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   485  /** \brief Return TRUE if SENT module is enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   486   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   487   * \return The status of whether clock for sent is enabled or disabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   488   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   489  IFX_INLINE boolean IfxSent_isModuleEnabled(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   490  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   491  /** \brief Return the Interrupt Status of the SENT channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   492   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   493   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   494   * \param source enable the interrupt source of any interrupt of SENT Channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   495   * \return The Interrupt Status of SENT channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   496   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   497  IFX_INLINE boolean IfxSent_getInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_InterruptSource source);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   498  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   499  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   500   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   501   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   502   * \param source enable the interrupt source of any interrupt of SENT Channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   503   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   504   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   505  IFX_INLINE void IfxSent_clearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_InterruptSource source);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   506  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   507  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   508   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   509   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   510   * \return The Data content of a recieved Data Frame
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   511   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   512  IFX_INLINE uint32 IfxSent_readReceivedData(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   513  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   514  /** \brief Reads and returns value in RSR (Received Status Register).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   515   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   516   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   517   * \return Returns 32 bit RSR
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   518   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   519  IFX_INLINE uint32 IfxSent_readReceivedStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   520  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   521  /** \brief Returns 4 bit CRC value in Receive Status Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   522   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   523   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   524   * \return 4 bit CRC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   525   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   526  IFX_INLINE uint8 IfxSent_readReceivedCrc(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   527  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   528  /** \brief Returns 2 bit CST value in Receive Status Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   529   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   530   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   531   * \return 2 bit CST
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   532   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   533  IFX_INLINE uint8 IfxSent_readReceivedChannelStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   534  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   535  /** \brief Returns 4 bit SCN value in Receive Status Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   536   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   537   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   538   * \return 4 bit SCN
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   539   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   540  IFX_INLINE uint8 IfxSent_readReceivedStatusAndCommunicationNibble(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   541  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   542  /** \brief Returns 32 bit Received Time Stamp Value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   543   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   544   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   545   * \return 32 bit Time Stamp
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   546   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   547  IFX_INLINE uint32 IfxSent_readReceivedTimeStamp(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   548  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   549  /** \brief Returns 6 bit PLEN value in SCR Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   550   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   551   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   552   * \return 6 bit PLEN
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   553   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   554  IFX_INLINE uint8 IfxSent_readSpcPulseLength(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   555  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   556  /** \brief Returns 6 bit Delay length value in SCR Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   557   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   558   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   559   * \return 6 bit DEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   560   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   561  IFX_INLINE uint8 IfxSent_readSpcDelayLength(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   562  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   563  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   564  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   565  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   566  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   567  /** \brief Returns the current unit time (f_tick) of the given channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   568   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   569   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   570   * \return The current unit time in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   571   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   572  IFX_EXTERN float32 IfxSent_getChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   573  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   574  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   575  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   576  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   577  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   578  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   579  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   580      sent->CH[channelId].RCR.B.CEN = 0;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   581  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   582  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   583  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   584  IFX_INLINE void IfxSent_disableModule(Ifx_SENT *sent)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   585  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   586      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   587      IfxScuWdt_clearCpuEndinit(passwd);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   588      sent->CLC.B.DISR = 1;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   589      IfxScuWdt_setCpuEndinit(passwd);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   590  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   591  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   592  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   593  IFX_INLINE void IfxSent_enableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   594  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   595      sent->CH[channelId].RCR.B.CEN = 1;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   596  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   597  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   598  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   599  IFX_INLINE void IfxSent_enableModule(Ifx_SENT *sent)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   600  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   601      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
	call	IfxScuWdt_getCpuWatchdogPassword
.L316:
	mov	d15,d2
.L318:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   602      IfxScuWdt_clearCpuEndinit(passwd);
	mov	d4,d15
.L317:
	call	IfxScuWdt_clearCpuEndinit
.L320:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   603      sent->CLC.B.DISR = 0;
	ld.bu	d0,[a15]
.L352:
	insert	d0,d0,#0,#0,#1
	st.b	[a15],d0
.L353:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   604      IfxScuWdt_setCpuEndinit(passwd);
	mov	d4,d15
.L321:
	call	IfxScuWdt_setCpuEndinit
.L322:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   605  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   606      if (sent->CLC.U)
	ld.w	d15,[a15]
.L319:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   606      if (sent->CLC.U)      (inlined)
	jeq	d15,#0,.L23
.L23:
.L22:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   294              /* no divider required, pass clock 1:1*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   295  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   296      IfxSent_initializeModuleClock(sentSFR, IfxSent_ClockDividerMode_normal, 1023); /* Fractional divider not required, pass 1:1*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   297      IfxSent_setTimeStampPredivider(sentSFR, config->timeStampPreDivider);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   298  
	mov	d4,d9
.L323:
	call	IfxScuWdt_clearCpuEndinit
.L324:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   299      IfxScuWdt_setCpuEndinit(passwd);
	ld.bu	d15,[a12]4
.L354:
	jeq	d15,#0,.L24
.L355:
	mov	d15,#0
.L356:
	j	.L25
.L24:
	mov	d15,#1
.L25:
	ld.bu	d0,[a15]
.L357:
	insert	d15,d0,d15,#3,#1
	st.b	[a15],d15
.L358:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   300  
	ld.bu	d15,[a15]1
.L359:
	insert	d15,d15,#1,#0,#8
	st.b	[a15]1,d15
.L360:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   301      return result;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   302  }
	mov	d4,#1
.L361:
	mov	d5,#1023
	mov.aa	a4,a15
.L325:
	call	IfxSent_initializeModuleClock
.L326:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   303  
	ld.w	d0,[a12]6
.L110:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     2   * \file IfxSent.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     3   * \brief SENT  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     4   * \ingroup IfxLld_Sent
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    45   * \defgroup IfxLld_Sent_Std_Enumerations Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    46   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    47   * \defgroup IfxLld_Sent_Std_Configuration Configuration Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    48   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    49   * \defgroup IfxLld_Sent_Std_Interrupts Interrupts
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    50   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    51   * \defgroup IfxLld_Sent_Std_Operative Operative Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    52   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    53   * \defgroup IfxLld_Sent_Std_Baudrate Baudrate Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    54   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    55   * \defgroup IfxLld_Sent_Std_IO IO Pin Configuration Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    56   * \ingroup IfxLld_Sent_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    57   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    58  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    59  #ifndef IFXSENT_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    60  #define IFXSENT_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    61  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    62  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    63  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    64  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    65  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    66  #include "_Impl/IfxSent_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    67  #include "Src/Std/IfxSrc.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    68  #include "Scu/Std/IfxScuCcu.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    69  #include "_PinMap/IfxSent_PinMap.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    70  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    71  #include "IfxSent_bf.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    72  #include "IfxSent_reg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    73  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    74  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    75  /*-----------------------------------Macros-----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    76  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    77  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    78  #define IFXSENT_INTERRUPT_STATUS_ERROR_FLAGS (0x000037f4)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    79  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    80  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    81  /*--------------------------------Enumerations--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    82  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    83  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    84  /** \addtogroup IfxLld_Sent_Std_Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    85   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    86  /** \brief SENT.CH[channelId].IOCR.ALTI , Specifies alternate input for channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    87   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    88  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    89  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    90      IfxSent_AlternateInput_0 = 0,      /**< \brief Specifies alternate input 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    91      IfxSent_AlternateInput_1,          /**< \brief Specifies alternate input 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    92      IfxSent_AlternateInput_2,          /**< \brief Specifies alternate input 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    93      IfxSent_AlternateInput_3           /**< \brief Specifies alternate input 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    94  } IfxSent_AlternateInput;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    95  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    96  /** \brief SENT.CH[channelId].RSR.CST, Specifies the current channel status
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    97   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    98  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	    99  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   100      IfxSent_ChannelStatus_stop        = 0, /**< \brief Specifies the channel is stopped */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   101      IfxSent_ChannelStatus_initialize  = 1, /**< \brief Specifies the channel is initialized */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   102      IfxSent_ChannelStatus_running     = 2, /**< \brief Specifies the channel is running */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   103      IfxSent_ChannelStatus_synchronize = 3  /**< \brief Specifies the channel is synchronized */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   104  } IfxSent_ChannelStatus;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   105  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   106  /** \brief SENT.FDR.DM , Specifies clock divider mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   107   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   108  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   109  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   110      IfxSent_ClockDividerMode_off        = 0, /**< \brief Specifies clock divider mode off */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   111      IfxSent_ClockDividerMode_normal     = 1, /**< \brief Specifies clock normal divider mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   112      IfxSent_ClockDividerMode_fractional = 2  /**< \brief Specifies clock fractional divider mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   113  } IfxSent_ClockDividerMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   114  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   115  /** \brief SENT.CH[channelId].SDS.CON , Specifies received configuration bit value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   116   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   117  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   118  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   119      IfxSent_ConfigBit_0 = 0,      /**< \brief Specifies received configuration bit value 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   120      IfxSent_ConfigBit_1           /**< \brief Specifies received configuration bit value 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   121  } IfxSent_ConfigBit;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   122  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   123  /** \brief SENT.CH[channelId].IOCR.DEPTH , Specifies number of port input samples
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   124   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   125  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   126  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   127      IfxSent_DigitalGlitchesLength_off = 0,  /**< \brief Specifies port input samples off */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   128      IfxSent_DigitalGlitchesLength_1   = 1,  /**< \brief Specifies 1 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   129      IfxSent_DigitalGlitchesLength_2,        /**< \brief Specifies 2 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   130      IfxSent_DigitalGlitchesLength_3,        /**< \brief Specifies 3 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   131      IfxSent_DigitalGlitchesLength_4,        /**< \brief Specifies 4 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   132      IfxSent_DigitalGlitchesLength_5,        /**< \brief Specifies 5 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   133      IfxSent_DigitalGlitchesLength_6,        /**< \brief Specifies 6 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   134      IfxSent_DigitalGlitchesLength_7,        /**< \brief Specifies 7 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   135      IfxSent_DigitalGlitchesLength_8,        /**< \brief Specifies 8 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   136      IfxSent_DigitalGlitchesLength_9,        /**< \brief Specifies 9 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   137      IfxSent_DigitalGlitchesLength_10,       /**< \brief Specifies 10 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   138      IfxSent_DigitalGlitchesLength_11,       /**< \brief Specifies 11 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   139      IfxSent_DigitalGlitchesLength_12,       /**< \brief Specifies 12 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   140      IfxSent_DigitalGlitchesLength_13,       /**< \brief Specifies 13 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   141      IfxSent_DigitalGlitchesLength_14,       /**< \brief Specifies 14 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   142      IfxSent_DigitalGlitchesLength_15        /**< \brief Specifies 15 port input samples  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   143  } IfxSent_DigitalGlitchesLength;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   144  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   145  /** \brief SENT.CH[channelId].RCR.ESF , Specifies the serial frame structure
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   146   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   147  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   148  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   149      IfxSent_ExtendedSerialFrameMode_standard = 0,  /**< \brief Specifies the standard serial frame structure */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   150      IfxSent_ExtendedSerialFrameMode_extended = 1   /**< \brief Specifies the extended serial frame structure */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   151  } IfxSent_ExtendedSerialFrameMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   152  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   153  /** \brief SENT.CH[channelId].IOCR.ETS , Specifies the external trigger line
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   154   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   155  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   156  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   157      IfxSent_ExternalTrigger_0 = 0,      /**< \brief Specifies the external trigger line 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   158      IfxSent_ExternalTrigger_1,          /**< \brief Specifies the external trigger line 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   159      IfxSent_ExternalTrigger_2,          /**< \brief Specifies the external trigger line 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   160      IfxSent_ExternalTrigger_3,          /**< \brief Specifies the external trigger line 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   161      IfxSent_ExternalTrigger_4,          /**< \brief Specifies the external trigger line 4  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   162      IfxSent_ExternalTrigger_5,          /**< \brief Specifies the external trigger line 5  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   163      IfxSent_ExternalTrigger_6,          /**< \brief Specifies the external trigger line 6  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   164      IfxSent_ExternalTrigger_7,          /**< \brief Specifies the external trigger line 7  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   165      IfxSent_ExternalTrigger_8,          /**< \brief Specifies the external trigger line 8  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   166      IfxSent_ExternalTrigger_9           /**< \brief Specifies the external trigger line 9  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   167  } IfxSent_ExternalTrigger;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   168  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   169  /** \brief SENT.CH[channelId].RCR.CFC, Specifies received frame check mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   170   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   171  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   172  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   173      IfxSent_FrameCheckMode_pastSyncPulse   = 0, /**< \brief Specifies frame check mode against past sync pulse */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   174      IfxSent_FrameCheckMode_futureSuncPulse = 1  /**< \brief Specifies frame check mode against future sync pulse */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   175  } IfxSent_FrameCheckMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   176  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   177  /** \brief SENT.CH[channelId].INP.X(X= RSI,RDI,RBI,TDI,TBI,ERRI,SDI,WDI),Specifies interrupt requested node for respective interrupt
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   178   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   179  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   180  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   181      IfxSent_InterruptNodePointer_0 = 0,           /**< \brief Specifies interrupt requested node 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   182      IfxSent_InterruptNodePointer_1,               /**< \brief Specifies interrupt requested node 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   183      IfxSent_InterruptNodePointer_2,               /**< \brief Specifies interrupt requested node 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   184      IfxSent_InterruptNodePointer_3,               /**< \brief Specifies interrupt requested node 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   185      IfxSent_InterruptNodePointer_trigo0 = 4,      /**< \brief Specifies interrupt requested node TRIGO 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   186      IfxSent_InterruptNodePointer_trigo1,          /**< \brief Specifies interrupt requested node TRIGO 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   187      IfxSent_InterruptNodePointer_trigo2,          /**< \brief Specifies interrupt requested node TRIGO 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   188      IfxSent_InterruptNodePointer_trigo3,          /**< \brief Specifies interrupt requested node TRIGO 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   189      IfxSent_InterruptNodePointer_trigo4,          /**< \brief Specifies interrupt requested node TRIGO 4  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   190      IfxSent_InterruptNodePointer_trigo5           /**< \brief Specifies interrupt requested node TRIGO 5  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   191  } IfxSent_InterruptNodePointer;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   192  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   193  /** \brief SENT.CH[channelId].VIEW.RDNPy( y=0,1,..7 ).Specifies receive data target nibble pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   194   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   195  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   196  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   197      IfxSent_Nibble_0 = 0,      /**< \brief Specifies receive data target nibble pointer to nibble 0  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   198      IfxSent_Nibble_1,          /**< \brief Specifies receive data target nibble pointer to nibble 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   199      IfxSent_Nibble_2,          /**< \brief Specifies receive data target nibble pointer to nibble 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   200      IfxSent_Nibble_3,          /**< \brief Specifies receive data target nibble pointer to nibble 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   201      IfxSent_Nibble_4,          /**< \brief Specifies receive data target nibble pointer to nibble 4  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   202      IfxSent_Nibble_5,          /**< \brief Specifies receive data target nibble pointer to nibble 5  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   203      IfxSent_Nibble_6,          /**< \brief Specifies receive data target nibble pointer to nibble 6  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   204      IfxSent_Nibble_7           /**< \brief Specifies receive data target nibble pointer to nibble 7  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   205  } IfxSent_Nibble;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   206  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   207  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   208   * Definition in Ifx_SENT.CLC.B.EDIS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   209   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   210  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   211  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   212      IfxSent_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   213      IfxSent_SleepMode_disable = 1  /**< \brief disables sleep mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   214  } IfxSent_SleepMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   215  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   216  /** \brief Specifies the SENT SPC operational mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   217   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   218  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   219  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   220      IfxSent_SpcMode_sync          = 0, /**< \brief Specifies synchronous SPC mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   221      IfxSent_SpcMode_range         = 1, /**< \brief Specifies range selection SPC mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   222      IfxSent_SpcMode_bidirectional = 2  /**< \brief Specifies bidirectional transmit SPC mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   223  } IfxSent_SpcMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   224  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   225  /** \brief OCDS Suspend Control (OCDS.SUS)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   226   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   227  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   228  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   229      IfxSent_SuspendMode_none = 0,  /**< \brief No suspend */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   230      IfxSent_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   231      IfxSent_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   232  } IfxSent_SuspendMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   233  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   234  /** \brief SENT.CH[channelId].SCR.BASE, Specifies selection of pulse based on time
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   235   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   236  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   237  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   238      IfxSent_TimeBase_measuredFrequency = 0,  /**< \brief Specifies selection of pulse based on measured frequency */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   239      IfxSent_TimeBase_nominalFrequency  = 1   /**< \brief Specifies selection of pulse based on nomianl frequency */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   240  } IfxSent_TimeBase;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   241  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   242  /** \brief SENT.CH[channelId].SCR.TRIG, Specifies trigger source for pulse generation
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   243   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   244  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   245  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   246      IfxSent_TriggerSource_off             = 0, /**< \brief Specifies no pulse generation */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   247      IfxSent_TriggerSource_immediate       = 1, /**< \brief Specifies immediate pulse generation */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   248      IfxSent_TriggerSource_fallingEdge     = 2, /**< \brief Specifies pulse generation at fallingEdge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   249      IfxSent_TriggerSource_externalTrigger = 3  /**< \brief Specifies pulse generation after each external trigger */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   250  } IfxSent_TriggerSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   251  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   252  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   253  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   254  /** \brief Sent Interrupt Source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   255   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   256  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   257  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   258      IfxSent_InterruptSource_rsi  = 0,   /**< \brief Enable Interrupt Request RSI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   259      IfxSent_InterruptSource_rdi  = 1,   /**< \brief Enable Interrupt Request RDI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   260      IfxSent_InterruptSource_rbi  = 2,   /**< \brief Enable Interrupt Request RBI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   261      IfxSent_InterruptSource_tdi  = 3,   /**< \brief Enable Interrupt Request TDI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   262      IfxSent_InterruptSource_tbi  = 4,   /**< \brief Enable Interrupt Request TBI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   263      IfxSent_InterruptSource_fri  = 5,   /**< \brief Enable Interrupt Request FRI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   264      IfxSent_InterruptSource_fdi  = 6,   /**< \brief Enable Interrupt Request FDI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   265      IfxSent_InterruptSource_nni  = 7,   /**< \brief Enable Interrupt Request NNI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   266      IfxSent_InterruptSource_nvi  = 8,   /**< \brief Enable Interrupt Request NVI */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   267      IfxSent_InterruptSource_crci = 9,   /**< \brief Enable Interrupt Request crci */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   268      IfxSent_InterruptSource_wsi  = 10,  /**< \brief Enable Interrupt Request wsi */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   269      IfxSent_InterruptSource_sdi  = 11,  /**< \brief Enable Interrupt Request sdi */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   270      IfxSent_InterruptSource_scri = 12,  /**< \brief Enable Interrupt Request scri */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   271      IfxSent_InterruptSource_wdi  = 13   /**< \brief Enable Interrupt Request wdi */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   272  } IfxSent_InterruptSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   273  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   274  /** \addtogroup IfxLld_Sent_Std_Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   275   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   276  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   277  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   278  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   279  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   280  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   281  /** \brief Sets the operation mode of SENT kernel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   282   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   283   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   284   * \param alternateInput alternate input/output pin for SENT operation
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   285   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   286   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   287  IFX_INLINE void IfxSent_setAltiInput(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_AlternateInput alternateInput);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   288  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   289  /** \brief Set the module time stamp pre-divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   290   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   291   * \param timeStampPreDivider time stamp pre-divider value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   292   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   293   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   294  IFX_INLINE void IfxSent_setTimeStampPredivider(Ifx_SENT *sent, uint32 timeStampPreDivider);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   295  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   296  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   297  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   298  /** \addtogroup IfxLld_Sent_Std_Interrupts
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   299   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   300  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   301  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   302  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   303  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   304  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   305  /** \brief Copies the current interrupt flags into the Ifx_SENT_CH_INTSTAT structure, and clears the flags in hardware.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   306   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   307   * This function should be used in an ISR to retrieve the events which triggered the interrupt.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   308   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   309   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   310   * \return Interrupt flags which have been cleared.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   311   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   312  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getAndClearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   313  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   314  /** \brief Gets the current channel status
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   315   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   316   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   317   * \return current channel interrupt status
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   318   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   319  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getChannelInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   320  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   321  /** \brief gets the source for channel interrupt handler
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   322   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   323   * \return interrupt source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   324   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   325  IFX_INLINE volatile Ifx_SRC_SRCR *IfxSent_getChannelSrc(IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   326  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   327  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   328  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   329  /** \addtogroup IfxLld_Sent_Std_Operative
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   330   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   331  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   332  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   333  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   334  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   335  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   336  /** \brief Disable the channel with the channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   337   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   338   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   339   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   340   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   341  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   342  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   343  /** \brief Disable the SENT module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   344   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   345   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   346   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   347  IFX_INLINE void IfxSent_disableModule(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   348  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   349  /** \brief Enable the channel with the channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   350   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   351   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   352   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   353   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   354  IFX_INLINE void IfxSent_enableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   355  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   356  /** \brief Enable the SENT module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   357   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   358   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   359   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   360  IFX_INLINE void IfxSent_enableModule(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   361  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   362  /** \brief Returns the module's suspend state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   363   * TRUE :if module is suspended.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   364   * FALSE:if module is not yet suspended.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   365   * \param sent Pointer to SENT module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   366   * \return Suspend status (TRUE / FALSE)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   367   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   368  IFX_INLINE boolean IfxSent_isModuleSuspended(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   369  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   370  /** \brief Sets the sensitivity of the module to sleep signal
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   371   * \param sent pointer to SENT registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   372   * \param mode mode selection (enable / disable)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   373   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   374   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   375  IFX_INLINE void IfxSent_setSleepMode(Ifx_SENT *sent, IfxSent_SleepMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   376  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   377  /** \brief Configure the Module to Hard/Soft suspend mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   378   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   379   * \param sent Pointer to SENT module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   380   * \param mode Module suspend mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   381   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   382   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   383  IFX_INLINE void IfxSent_setSuspendMode(Ifx_SENT *sent, IfxSent_SuspendMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   384  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   385  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   386  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   387  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   388  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   389  /** \brief Resets the SENT module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   390   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   391   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   392   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   393  IFX_EXTERN void IfxSent_resetModule(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   394  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   395  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   397  /** \addtogroup IfxLld_Sent_Std_Baudrate
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   398   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   399  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   400  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   402  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   403  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   404  /** \brief Sets the channel fractional baudrate divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   405   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   406   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   407   * \param divider channel baudrate fractional divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   408   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   409   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   410  IFX_INLINE void IfxSent_setChannelFractionalDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 divider);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   411  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   412  /** \brief Sets the channel baudrate pre-divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   413   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   414   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   415   * \param preDivider channel baudrate pre-divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   416   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   417   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   418  IFX_INLINE void IfxSent_setChannelPreDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 preDivider);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   419  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   420  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   421  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   422  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   423  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   424  /** \brief Returns the current module frequency in Hertz.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   425   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   426   * \return The current module frequency in Hertz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   427   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   428  IFX_EXTERN float32 IfxSent_getModuleClock(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   429  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   430  /** \brief Initializes the desired unit time (f_tick) for the external SENT device connected to the given channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   431   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   432   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   433   * \param tUnit desired unit time (f_tick), e.g. 3E-6 for 3 uS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   434   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   435   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   436  IFX_EXTERN void IfxSent_initializeChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId, float32 tUnit);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   437  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   438  /** \brief Initialize and get the clock for SENT kernel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   439   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   440   * \param dividerMode Divider mode for clock output
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   441   * \param stepValue clock frequency for for module fractional divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   442   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   443   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   444  IFX_EXTERN void IfxSent_initializeModuleClock(Ifx_SENT *sent, IfxSent_ClockDividerMode dividerMode, uint16 stepValue);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   445  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   446  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   447  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   448  /** \addtogroup IfxLld_Sent_Std_IO
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   449   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   450  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   451  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   452  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   453  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   454  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   455  /** \brief Initializes a SENT input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   456   * \param sentIn the SENT Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   457   * \param inputMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   458   * \param padDriver the pad driver mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   459   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   460   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   461  IFX_INLINE void IfxSent_initSentPin(const IfxSent_Sent_In *sentIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   462  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   463  /** \brief Initializes a SPC output
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   464   * \param spcOut the SPC Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   465   * \param spcOutMode Port Output Mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   466   * \param padDriver the pad driver mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   467   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   468   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   469  IFX_INLINE void IfxSent_initSpcPin(const IfxSent_Spc_Out *spcOut, IfxPort_OutputMode spcOutMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   470  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   471  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   472  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   473  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   474  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   475  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   476  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   477  /** \brief Set the watch dog timer limit value for sent channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   478   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   479   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   480   * \param watchDogTimerLimit Specifies the watch dog timer limit value.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   481   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   482   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   483  IFX_INLINE void IfxSent_setWatchDogTimerLimit(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 watchDogTimerLimit);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   484  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   485  /** \brief Return TRUE if SENT module is enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   486   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   487   * \return The status of whether clock for sent is enabled or disabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   488   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   489  IFX_INLINE boolean IfxSent_isModuleEnabled(Ifx_SENT *sent);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   490  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   491  /** \brief Return the Interrupt Status of the SENT channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   492   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   493   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   494   * \param source enable the interrupt source of any interrupt of SENT Channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   495   * \return The Interrupt Status of SENT channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   496   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   497  IFX_INLINE boolean IfxSent_getInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_InterruptSource source);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   498  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   499  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   500   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   501   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   502   * \param source enable the interrupt source of any interrupt of SENT Channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   503   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   504   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   505  IFX_INLINE void IfxSent_clearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_InterruptSource source);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   506  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   507  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   508   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   509   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   510   * \return The Data content of a recieved Data Frame
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   511   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   512  IFX_INLINE uint32 IfxSent_readReceivedData(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   513  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   514  /** \brief Reads and returns value in RSR (Received Status Register).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   515   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   516   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   517   * \return Returns 32 bit RSR
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   518   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   519  IFX_INLINE uint32 IfxSent_readReceivedStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   520  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   521  /** \brief Returns 4 bit CRC value in Receive Status Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   522   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   523   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   524   * \return 4 bit CRC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   525   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   526  IFX_INLINE uint8 IfxSent_readReceivedCrc(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   527  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   528  /** \brief Returns 2 bit CST value in Receive Status Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   529   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   530   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   531   * \return 2 bit CST
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   532   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   533  IFX_INLINE uint8 IfxSent_readReceivedChannelStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   534  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   535  /** \brief Returns 4 bit SCN value in Receive Status Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   536   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   537   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   538   * \return 4 bit SCN
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   539   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   540  IFX_INLINE uint8 IfxSent_readReceivedStatusAndCommunicationNibble(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   541  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   542  /** \brief Returns 32 bit Received Time Stamp Value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   543   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   544   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   545   * \return 32 bit Time Stamp
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   546   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   547  IFX_INLINE uint32 IfxSent_readReceivedTimeStamp(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   548  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   549  /** \brief Returns 6 bit PLEN value in SCR Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   550   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   551   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   552   * \return 6 bit PLEN
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   553   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   554  IFX_INLINE uint8 IfxSent_readSpcPulseLength(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   555  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   556  /** \brief Returns 6 bit Delay length value in SCR Register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   557   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   558   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   559   * \return 6 bit DEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   560   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   561  IFX_INLINE uint8 IfxSent_readSpcDelayLength(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   562  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   563  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   564  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   565  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   566  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   567  /** \brief Returns the current unit time (f_tick) of the given channel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   568   * \param sent base address of the SENT register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   569   * \param channelId SENT channel number
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   570   * \return The current unit time in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   571   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   572  IFX_EXTERN float32 IfxSent_getChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   573  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   574  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   575  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   576  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   577  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   578  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   579  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   580      sent->CH[channelId].RCR.B.CEN = 0;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   581  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   582  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   583  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   584  IFX_INLINE void IfxSent_disableModule(Ifx_SENT *sent)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   585  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   586      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   587      IfxScuWdt_clearCpuEndinit(passwd);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   588      sent->CLC.B.DISR = 1;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   589      IfxScuWdt_setCpuEndinit(passwd);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   590  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   591  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   592  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   593  IFX_INLINE void IfxSent_enableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   594  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   595      sent->CH[channelId].RCR.B.CEN = 1;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   596  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   597  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   598  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   599  IFX_INLINE void IfxSent_enableModule(Ifx_SENT *sent)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   600  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   601      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   602      IfxScuWdt_clearCpuEndinit(passwd);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   603      sent->CLC.B.DISR = 0;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   604      IfxScuWdt_setCpuEndinit(passwd);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   605  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   606      if (sent->CLC.U)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   607      {}
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   608  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   609  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   610  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   611  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getAndClearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   612  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   613      Ifx_SENT_CH_INTSTAT interruptFlags;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   614      interruptFlags.U             = sent->CH[channelId].INTSTAT.U;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   615      sent->CH[channelId].INTCLR.U = interruptFlags.U;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   616      return interruptFlags;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   617  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   618  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   619  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   620  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getChannelInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   621  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   622      Ifx_SENT_CH_INTSTAT interruptFlags;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   623      interruptFlags.U = sent->CH[channelId].INTSTAT.U;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   624      return interruptFlags;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   625  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   626  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   627  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   628  IFX_INLINE volatile Ifx_SRC_SRCR *IfxSent_getChannelSrc(IfxSent_ChannelId channelId)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   629  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   630      return &MODULE_SRC.SENT.SENT[0].SR[channelId];
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   631  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   632  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   633  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   634  IFX_INLINE void IfxSent_initSentPin(const IfxSent_Sent_In *sentIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   635  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   636      if (sentIn->pin.port != NULL_PTR)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   637      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   638          IfxPort_setPinModeInput(sentIn->pin.port, sentIn->pin.pinIndex, inputMode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   639          IfxPort_setPinPadDriver(sentIn->pin.port, sentIn->pin.pinIndex, padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   640          IfxSent_setAltiInput(sentIn->module, sentIn->channelId, (IfxSent_AlternateInput)sentIn->select);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   641      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   642  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   643  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   644  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   645  IFX_INLINE void IfxSent_initSpcPin(const IfxSent_Spc_Out *spcOut, IfxPort_OutputMode spcOutMode, IfxPort_PadDriver padDriver)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   646  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   647      if (spcOut->pin.port != NULL_PTR)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   648      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   649          IfxPort_setPinModeOutput(spcOut->pin.port, spcOut->pin.pinIndex, spcOutMode, spcOut->select);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   650          IfxPort_setPinPadDriver(spcOut->pin.port, spcOut->pin.pinIndex, padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   651      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   652  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   653  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   654  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   655  IFX_INLINE boolean IfxSent_isModuleSuspended(Ifx_SENT *sent)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   656  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   657      Ifx_SENT_OCS ocs;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   658  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   659      // read the status
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   660      ocs.U = sent->OCS.U;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   661  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   662      // return the status
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   663      return ocs.B.SUSSTA;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   664  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   665  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   666  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   667  IFX_INLINE void IfxSent_setAltiInput(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_AlternateInput alternateInput)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   668  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   669      sent->CH[channelId].IOCR.B.ALTI = alternateInput;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   670  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   671  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   672  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   673  IFX_INLINE void IfxSent_setChannelFractionalDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 divider)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   674  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   675      sent->CH[channelId].CFDR.B.DIV = divider;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   676  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   677  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   678  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   679  IFX_INLINE void IfxSent_setChannelPreDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 preDivider)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   680  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   681      sent->CH[channelId].CPDR.B.PDIV = preDivider;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   682  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   683  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   684  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   685  IFX_INLINE void IfxSent_setSleepMode(Ifx_SENT *sent, IfxSent_SleepMode mode)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   686  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   687      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   688      IfxScuWdt_clearCpuEndinit(passwd);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   689      sent->CLC.B.EDIS = mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   690      IfxScuWdt_setCpuEndinit(passwd);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   691  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   692  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   693  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   694  IFX_INLINE void IfxSent_setSuspendMode(Ifx_SENT *sent, IfxSent_SuspendMode mode)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   695  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   696      Ifx_SENT_OCS ocs;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   697  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   698      // remove protection and configure the suspend mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   699      ocs.B.SUS_P = 1;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   700      ocs.B.SUS   = mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   701      sent->OCS.U = ocs.U;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   702  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   703  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   704  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   705  IFX_INLINE void IfxSent_setTimeStampPredivider(Ifx_SENT *sent, uint32 timeStampPreDivider)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   706  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Std\IfxSent.h	   707      sent->TPD.B.TDIV = timeStampPreDivider;
	ld.w	d15,[a15]28
.L362:
	insert	d15,d15,d0,#0,#20
	st.w	[a15]28,d15
.L111:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   304  tCpuEndinit(passwd);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   305  
	mov	d4,d9
.L327:
	call	IfxScuWdt_setCpuEndinit
.L328:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   306      return result;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   307  }
	mov	d2,d8
.L329:
	j	.L26

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   308  
.L26:
	ret
.L90:
	
__IfxSent_Sent_initModule_function_end:
	.size	IfxSent_Sent_initModule,__IfxSent_Sent_initModule_function_end-IfxSent_Sent_initModule
.L56:
	; End of function
	
	.sdecl	'.text.IfxSent_Sent.IfxSent_Sent_initModuleConfig',code,cluster('IfxSent_Sent_initModuleConfig')
	.sect	'.text.IfxSent_Sent.IfxSent_Sent_initModuleConfig'
	.align	2
	
	.global	IfxSent_Sent_initModuleConfig

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   309  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   310  void IfxSent_Sent_initModuleConfig(IfxSent_Sent_Config *config, Ifx_SENT *sent)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   311  {
; Function IfxSent_Sent_initModuleConfig
.L38:
IfxSent_Sent_initModuleConfig:	.type	func
	sub.a	a10,#16
.L330:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   312      /* Default module initialization    */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   313      const IfxSent_Sent_Config defaultModuleConfig = {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   314          .module              = NULL_PTR,
	movh.a	a15,#@his(.2.ini)
	lea	a15,[a15]@los(.2.ini)
	lea	a15,[a15]0
.L367:
	lea	a2,[a10]0
	ld.d	e0,[a15+]8
	st.d	[a2+]8,e0
	ld.w	d15,[a15+]
	st.w	[a2+],d15
.L368:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   315          .sleepModeEnabled    = TRUE,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   316          .timeStampPreDivider = 0,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   317      };
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   318      *config        = defaultModuleConfig;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   319      config->module = sent;
	lea	a15,[a10]0
.L369:
	lea	a2,[a4]0
	ld.d	e0,[a15+]8
	st.d	[a2+]8,e0
	ld.w	d15,[a15+]
	st.w	[a2+],d15
.L370:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   320  }
	st.a	[a4],a5
.L371:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   321  
	ret
.L117:
	
__IfxSent_Sent_initModuleConfig_function_end:
	.size	IfxSent_Sent_initModuleConfig,__IfxSent_Sent_initModuleConfig_function_end-IfxSent_Sent_initModuleConfig
.L61:
	; End of function
	
	.sdecl	'.text.IfxSent_Sent.IfxSent_Sent_readChannelSerialDataFrame',code,cluster('IfxSent_Sent_readChannelSerialDataFrame')
	.sect	'.text.IfxSent_Sent.IfxSent_Sent_readChannelSerialDataFrame'
	.align	2
	
	.global	IfxSent_Sent_readChannelSerialDataFrame

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   322  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   323  boolean IfxSent_Sent_readChannelSerialDataFrame(IfxSent_Sent_Channel *channel, IfxSent_Sent_Frame *frame)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   324  {
; Function IfxSent_Sent_readChannelSerialDataFrame
.L40:
IfxSent_Sent_readChannelSerialDataFrame:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   325      boolean           result  = TRUE;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   326  
	mov	d2,#1
.L331:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   327      Ifx_SENT         *sentSFR = channel->driver->sent;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   328      IfxSent_ChannelId ChanIdx = channel->channelId;
	ld.a	a15,[a4]
.L522:
	ld.a	a15,[a15]
.L332:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   329      frame->data         = sentSFR->RDR[ChanIdx].U;
	ld.b	d0,[a4]8
.L334:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   330      frame->timeStamp    = sentSFR->RTS[ChanIdx].U;
	mul	d15,d0,#4
	addsc.a	a2,a15,d15,#0
.L523:
	ld.w	d15,[a2]128
.L524:
	st.w	[a5],d15
.L525:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   331      frame->statusNibble = channel->channel->RSR.B.SCN;
	mul	d15,d0,#4
	addsc.a	a15,a15,d15,#0
.L333:
	ld.w	d15,[a15]2688
.L526:
	st.w	[a5]4,d15
.L527:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   332  
	ld.a	a15,[a4]4
.L528:
	ld.bu	d15,[a15]13
	and	d15,#15
.L529:
	st.b	[a5]8,d15
.L530:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   333      return result;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   334  }
	j	.L27

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   335  
.L27:
	ret
.L259:
	
__IfxSent_Sent_readChannelSerialDataFrame_function_end:
	.size	IfxSent_Sent_readChannelSerialDataFrame,__IfxSent_Sent_readChannelSerialDataFrame_function_end-IfxSent_Sent_readChannelSerialDataFrame
.L76:
	; End of function
	
	.sdecl	'.text.IfxSent_Sent.IfxSent_Sent_readChannelSerialMessageFrame',code,cluster('IfxSent_Sent_readChannelSerialMessageFrame')
	.sect	'.text.IfxSent_Sent.IfxSent_Sent_readChannelSerialMessageFrame'
	.align	2
	
	.global	IfxSent_Sent_readChannelSerialMessageFrame

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   336  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   337  boolean IfxSent_Sent_readChannelSerialMessageFrame(IfxSent_Sent_Channel *channel, IfxSent_Sent_SerialMessageFrame *message)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   338  {
; Function IfxSent_Sent_readChannelSerialMessageFrame
.L42:
IfxSent_Sent_readChannelSerialMessageFrame:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   339      boolean         result = TRUE;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   340  
	mov	d2,#1
.L335:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   341      Ifx_SENT_CH    *sentCh = channel->channel;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   342      Ifx_SENT_CH_SDS sds;
	ld.a	a15,[a4]4
.L336:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   343  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   344      sds.U               = sentCh->SDS.U;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   345  
	ld.w	d0,[a15]16
.L337:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   346      message->serialData = sds.B.SD;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   347      message->messageId  = sds.B.MID;
	extr.u	d15,d0,#0,#16
.L535:
	st.h	[a5]2,d15
.L536:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   348      message->configBit  = (IfxSent_ConfigBit)sds.B.CON;
	extr.u	d15,d0,#16,#8
.L537:
	st.b	[a5]1,d15
.L538:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   349      message->crc        = sds.B.SCRC;
	extr.u	d15,d0,#31,#1
.L539:
	st.b	[a5]4,d15
.L540:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   350  
	extr.u	d15,d0,#24,#6
.L541:
	st.b	[a5],d15
.L542:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   351      return result;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Sent\Sent\IfxSent_Sent.c	   352  }
	j	.L28


.L28:


	ret
.L267:
	
__IfxSent_Sent_readChannelSerialMessageFrame_function_end:
	.size	IfxSent_Sent_readChannelSerialMessageFrame,__IfxSent_Sent_readChannelSerialMessageFrame_function_end-IfxSent_Sent_readChannelSerialMessageFrame
.L81:
	; End of function
	
	.sdecl	'.rodata.IfxSent_Sent..1.ini',data,rom
	.sect	'.rodata.IfxSent_Sent..1.ini'
	.align	4
.1.ini:	.type	object
	.size	.1.ini,84
	.space	6
	.byte	-1
	.space	3
	.byte	1,1,1
	.space	1
	.byte	2
	.space	10
	.byte	6
	.space	22
	.word	910775196
	.space	1
	.byte	1,2,3,4
	.byte	5,6,7
	.space	8
	.word	8173
	.space	12
	.sdecl	'.rodata.IfxSent_Sent..2.ini',data,rom
	.sect	'.rodata.IfxSent_Sent..2.ini'
	.align	4
.2.ini:	.type	object
	.size	.2.ini,12
	.space	4
	.byte	1
	.space	7
	.calls	'IfxSent_Sent_deInitModule','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'IfxSent_Sent_deInitModule','IfxScuWdt_clearCpuEndinit'
	.calls	'IfxSent_Sent_deInitModule','IfxSent_resetModule'
	.calls	'IfxSent_Sent_deInitModule','IfxScuWdt_setCpuEndinit'
	.calls	'IfxSent_Sent_initChannel','IfxSent_initializeChannelUnitTime'
	.calls	'IfxSent_Sent_initChannel','IfxPort_setPinMode'
	.calls	'IfxSent_Sent_initChannel','IfxPort_setPinPadDriver'
	.calls	'IfxSent_Sent_initModule','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'IfxSent_Sent_initModule','IfxScuWdt_clearCpuEndinit'
	.calls	'IfxSent_Sent_initModule','IfxScuWdt_setCpuEndinit'
	.calls	'IfxSent_Sent_initModule','IfxSent_initializeModuleClock'
	.calls	'IfxSent_Sent_deInitModule','',0
	.calls	'IfxSent_Sent_initChannel','',0
	.calls	'IfxSent_Sent_initChannelConfig','',88
	.calls	'IfxSent_Sent_initModule','',0
	.calls	'IfxSent_Sent_initModuleConfig','',16
	.calls	'IfxSent_Sent_readChannelSerialDataFrame','',0
	.extern	IfxScuWdt_clearCpuEndinit
	.extern	IfxScuWdt_setCpuEndinit
	.extern	IfxScuWdt_getCpuWatchdogPassword
	.extern	IfxPort_setPinMode
	.extern	IfxPort_setPinPadDriver
	.extern	IfxSent_resetModule
	.extern	IfxSent_initializeChannelUnitTime
	.extern	IfxSent_initializeModuleClock
	.calls	'IfxSent_Sent_readChannelSerialMessageFrame','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L44:
	.word	94621
	.half	3
	.word	.L45
	.byte	4
.L43:
	.byte	1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent\\IfxSent_Sent.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L46
	.byte	2,1,1,3
	.word	173
	.byte	4
	.byte	'Ifx__jump_and_link',0,3,1,61,17,1,1,5
	.byte	'fun',0,1,61,43
	.word	176
	.byte	6,0,7
	.byte	'__fract',0,4,128,1,7
	.byte	'float',0,4,4,8
	.byte	'Ifx__float_to_fract',0,3,1,152,2,18
	.word	221
	.byte	1,1,5
	.byte	'a',0,1,152,2,44
	.word	233
	.byte	6,0,4
	.byte	'Ifx__stopPerfCounters',0,3,1,172,2,17,1,1,6,0,7
	.byte	'unsigned long long int',0,8,7,9
	.byte	'void',0,3
	.word	345
	.byte	8
	.byte	'__ld64',0,3,2,135,1,19
	.word	319
	.byte	1,1,5
	.byte	'addr',0,2,135,1,32
	.word	351
	.byte	6,0,4
	.byte	'__st64',0,3,2,143,1,17,1,1,5
	.byte	'addr',0,2,143,1,30
	.word	351
	.byte	5
	.byte	'value',0,2,143,1,43
	.word	319
	.byte	6,0,7
	.byte	'unsigned int',0,4,7,7
	.byte	'int',0,4,5,7
	.byte	'unsigned int',0,4,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,4,241,8,16,4,11
	.byte	'ENDINIT',0,4
	.word	460
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	460
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	460
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	460
	.byte	16,0,2,35,0,0,12,4,247,14,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	476
	.byte	4,2,35,0,0
.L89:
	.byte	7
	.byte	'unsigned char',0,1,8
.L87:
	.byte	7
	.byte	'unsigned short int',0,2,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,4,250,8,16,4,11
	.byte	'reserved_0',0,1
	.word	612
	.byte	2,6,2,35,0,11
	.byte	'IR0',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	612
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	612
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	629
	.byte	16,0,2,35,2,0,12,4,255,14,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	651
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,4,137,9,16,4,11
	.byte	'AE',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	612
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	612
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	629
	.byte	16,0,2,35,2,0,12,4,135,15,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	895
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU',0,4,175,15,25,12,13
	.byte	'CON0',0
	.word	572
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	855
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	1086
	.byte	4,2,35,8,0,14
	.word	1126
	.byte	3
	.word	1189
	.byte	4
	.byte	'IfxScuWdt_clearCpuEndinitInline',0,3,3,181,3,17,1,1,5
	.byte	'watchdog',0,3,181,3,65
	.word	1194
	.byte	5
	.byte	'password',0,3,181,3,82
	.word	629
	.byte	6,0,4
	.byte	'IfxScuWdt_setCpuEndinitInline',0,3,3,140,4,17,1,1,5
	.byte	'watchdog',0,3,140,4,63
	.word	1194
	.byte	5
	.byte	'password',0,3,140,4,80
	.word	629
	.byte	6,0,8
	.byte	'IfxScuWdt_getCpuWatchdogPasswordInline',0,3,3,227,3,19
	.word	629
	.byte	1,1,5
	.byte	'watchdog',0,3,227,3,74
	.word	1194
	.byte	6,0,10
	.byte	'_Ifx_SRC_SRCR_Bits',0,6,45,16,4,11
	.byte	'SRPN',0,1
	.word	612
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	612
	.byte	2,6,2,35,1,11
	.byte	'SRE',0,1
	.word	612
	.byte	1,5,2,35,1,11
	.byte	'TOS',0,1
	.word	612
	.byte	2,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	612
	.byte	3,0,2,35,1,11
	.byte	'ECC',0,1
	.word	612
	.byte	6,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	612
	.byte	2,0,2,35,2,11
	.byte	'SRR',0,1
	.word	612
	.byte	1,7,2,35,3,11
	.byte	'CLRR',0,1
	.word	612
	.byte	1,6,2,35,3,11
	.byte	'SETR',0,1
	.word	612
	.byte	1,5,2,35,3,11
	.byte	'IOV',0,1
	.word	612
	.byte	1,4,2,35,3,11
	.byte	'IOVCLR',0,1
	.word	612
	.byte	1,3,2,35,3,11
	.byte	'SWS',0,1
	.word	612
	.byte	1,2,2,35,3,11
	.byte	'SWSCLR',0,1
	.word	612
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	612
	.byte	1,0,2,35,3,0,12,6,70,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1424
	.byte	4,2,35,0,0,14
	.word	1714
.L227:
	.byte	3
	.word	1753
.L244:
	.byte	4
	.byte	'IfxSrc_clearRequest',0,3,5,250,1,17,1,1
.L246:
	.byte	5
	.byte	'src',0,5,250,1,60
	.word	1758
.L248:
	.byte	6,0
.L249:
	.byte	4
	.byte	'IfxSrc_enable',0,3,5,140,2,17,1,1
.L250:
	.byte	5
	.byte	'src',0,5,140,2,54
	.word	1758
.L252:
	.byte	6,0
.L225:
	.byte	15,7,69,9,1,16
	.byte	'IfxSrc_Tos_cpu0',0,0,16
	.byte	'IfxSrc_Tos_cpu1',0,1,16
	.byte	'IfxSrc_Tos_dma',0,3,0
.L234:
	.byte	4
	.byte	'IfxSrc_init',0,3,5,146,2,17,1,1
.L237:
	.byte	5
	.byte	'src',0,5,146,2,52
	.word	1758
.L239:
	.byte	5
	.byte	'typOfService',0,5,146,2,68
	.word	1843
.L241:
	.byte	5
	.byte	'priority',0,5,146,2,95
	.word	629
.L243:
	.byte	17,6,0,0,15,9,156,1,9,1,16
	.byte	'IfxCpu_ResourceCpu_0',0,0,16
	.byte	'IfxCpu_ResourceCpu_1',0,1,16
	.byte	'IfxCpu_ResourceCpu_none',0,2,0,8
	.byte	'IfxCpu_getCoreIndex',0,3,8,141,6,31
	.word	1979
	.byte	1,1,6,0,8
	.byte	'IfxCpu_areInterruptsEnabled',0,3,8,139,5,20
	.word	612
	.byte	1,1,6,0,7
	.byte	'unsigned long int',0,4,7,8
	.byte	'IfxCpu_getPerformanceCounter',0,3,8,161,6,19
	.word	2134
	.byte	1,1,5
	.byte	'address',0,8,161,6,55
	.word	629
	.byte	6,0,8
	.byte	'IfxCpu_getPerformanceCounterStickyOverflow',0,3,8,190,6,20
	.word	612
	.byte	1,1,5
	.byte	'address',0,8,190,6,70
	.word	629
	.byte	6,0,4
	.byte	'IfxCpu_updatePerformanceCounter',0,3,8,172,8,17,1,1,5
	.byte	'address',0,8,172,8,56
	.word	2134
	.byte	5
	.byte	'count',0,8,172,8,72
	.word	2134
	.byte	17,6,0,0,10
	.byte	'_Ifx_P_OUT_Bits',0,11,143,3,16,4,11
	.byte	'P0',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	612
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	612
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	612
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	612
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	612
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	612
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	612
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	612
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	629
	.byte	16,0,2,35,2,0,12,11,181,5,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2365
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMR_Bits',0,11,169,2,16,4,11
	.byte	'PS0',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	612
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	612
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	612
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	612
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	612
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	612
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	612
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	612
	.byte	1,0,2,35,1,11
	.byte	'PCL0',0,1
	.word	612
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	612
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	612
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	612
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	612
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	612
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	612
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	612
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	612
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	612
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	612
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	612
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	612
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	612
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	612
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	612
	.byte	1,0,2,35,3,0,12,11,133,5,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2681
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ID_Bits',0,11,110,16,4,11
	.byte	'MODREV',0,1
	.word	612
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	612
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	629
	.byte	16,0,2,35,2,0,12,11,148,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3252
	.byte	4,2,35,0,0,18,4
	.word	612
	.byte	19,3,0,10
	.byte	'_Ifx_P_IOCR0_Bits',0,11,140,1,16,4,11
	.byte	'reserved_0',0,1
	.word	612
	.byte	3,5,2,35,0,11
	.byte	'PC0',0,1
	.word	612
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	612
	.byte	3,5,2,35,1,11
	.byte	'PC1',0,1
	.word	612
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	612
	.byte	3,5,2,35,2,11
	.byte	'PC2',0,1
	.word	612
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	612
	.byte	3,5,2,35,3,11
	.byte	'PC3',0,1
	.word	612
	.byte	5,0,2,35,3,0,12,11,164,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3380
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR4_Bits',0,11,166,1,16,4,11
	.byte	'reserved_0',0,1
	.word	612
	.byte	3,5,2,35,0,11
	.byte	'PC4',0,1
	.word	612
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	612
	.byte	3,5,2,35,1,11
	.byte	'PC5',0,1
	.word	612
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	612
	.byte	3,5,2,35,2,11
	.byte	'PC6',0,1
	.word	612
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	612
	.byte	3,5,2,35,3,11
	.byte	'PC7',0,1
	.word	612
	.byte	5,0,2,35,3,0,12,11,180,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3595
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR8_Bits',0,11,179,1,16,4,11
	.byte	'reserved_0',0,1
	.word	612
	.byte	3,5,2,35,0,11
	.byte	'PC8',0,1
	.word	612
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	612
	.byte	3,5,2,35,1,11
	.byte	'PC9',0,1
	.word	612
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	612
	.byte	3,5,2,35,2,11
	.byte	'PC10',0,1
	.word	612
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	612
	.byte	3,5,2,35,3,11
	.byte	'PC11',0,1
	.word	612
	.byte	5,0,2,35,3,0,12,11,188,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3810
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR12_Bits',0,11,153,1,16,4,11
	.byte	'reserved_0',0,1
	.word	612
	.byte	3,5,2,35,0,11
	.byte	'PC12',0,1
	.word	612
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	612
	.byte	3,5,2,35,1,11
	.byte	'PC13',0,1
	.word	612
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	612
	.byte	3,5,2,35,2,11
	.byte	'PC14',0,1
	.word	612
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	612
	.byte	3,5,2,35,3,11
	.byte	'PC15',0,1
	.word	612
	.byte	5,0,2,35,3,0,12,11,172,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4027
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IN_Bits',0,11,118,16,4,11
	.byte	'P0',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	612
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	612
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	612
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	612
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	612
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	612
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	612
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	612
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	629
	.byte	16,0,2,35,2,0,12,11,156,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4247
	.byte	4,2,35,0,0,18,24
	.word	612
	.byte	19,23,0,10
	.byte	'_Ifx_P_PDR0_Bits',0,11,205,3,16,4,11
	.byte	'PD0',0,1
	.word	612
	.byte	3,5,2,35,0,11
	.byte	'PL0',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'PD1',0,1
	.word	612
	.byte	3,1,2,35,0,11
	.byte	'PL1',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'PD2',0,1
	.word	612
	.byte	3,5,2,35,1,11
	.byte	'PL2',0,1
	.word	612
	.byte	1,4,2,35,1,11
	.byte	'PD3',0,1
	.word	612
	.byte	3,1,2,35,1,11
	.byte	'PL3',0,1
	.word	612
	.byte	1,0,2,35,1,11
	.byte	'PD4',0,1
	.word	612
	.byte	3,5,2,35,2,11
	.byte	'PL4',0,1
	.word	612
	.byte	1,4,2,35,2,11
	.byte	'PD5',0,1
	.word	612
	.byte	3,1,2,35,2,11
	.byte	'PL5',0,1
	.word	612
	.byte	1,0,2,35,2,11
	.byte	'PD6',0,1
	.word	612
	.byte	3,5,2,35,3,11
	.byte	'PL6',0,1
	.word	612
	.byte	1,4,2,35,3,11
	.byte	'PD7',0,1
	.word	612
	.byte	3,1,2,35,3,11
	.byte	'PL7',0,1
	.word	612
	.byte	1,0,2,35,3,0,12,11,205,5,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4570
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PDR1_Bits',0,11,226,3,16,4,11
	.byte	'PD8',0,1
	.word	612
	.byte	3,5,2,35,0,11
	.byte	'PL8',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'PD9',0,1
	.word	612
	.byte	3,1,2,35,0,11
	.byte	'PL9',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'PD10',0,1
	.word	612
	.byte	3,5,2,35,1,11
	.byte	'PL10',0,1
	.word	612
	.byte	1,4,2,35,1,11
	.byte	'PD11',0,1
	.word	612
	.byte	3,1,2,35,1,11
	.byte	'PL11',0,1
	.word	612
	.byte	1,0,2,35,1,11
	.byte	'PD12',0,1
	.word	612
	.byte	3,5,2,35,2,11
	.byte	'PL12',0,1
	.word	612
	.byte	1,4,2,35,2,11
	.byte	'PD13',0,1
	.word	612
	.byte	3,1,2,35,2,11
	.byte	'PL13',0,1
	.word	612
	.byte	1,0,2,35,2,11
	.byte	'PD14',0,1
	.word	612
	.byte	3,5,2,35,3,11
	.byte	'PL14',0,1
	.word	612
	.byte	1,4,2,35,3,11
	.byte	'PD15',0,1
	.word	612
	.byte	3,1,2,35,3,11
	.byte	'PL15',0,1
	.word	612
	.byte	1,0,2,35,3,0,12,11,213,5,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4874
	.byte	4,2,35,0,0,18,8
	.word	612
	.byte	19,7,0,10
	.byte	'_Ifx_P_ESR_Bits',0,11,88,16,4,11
	.byte	'EN0',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	612
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	612
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	612
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	612
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	612
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	612
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	612
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	612
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	629
	.byte	16,0,2,35,2,0,12,11,140,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5199
	.byte	4,2,35,0,0,18,12
	.word	612
	.byte	19,11,0,10
	.byte	'_Ifx_P_PDISC_Bits',0,11,183,3,16,4,11
	.byte	'PDIS0',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'PDIS2',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'PDIS3',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'PDIS4',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'PDIS5',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'PDIS6',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'PDIS7',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'PDIS8',0,1
	.word	612
	.byte	1,7,2,35,1,11
	.byte	'PDIS9',0,1
	.word	612
	.byte	1,6,2,35,1,11
	.byte	'PDIS10',0,1
	.word	612
	.byte	1,5,2,35,1,11
	.byte	'PDIS11',0,1
	.word	612
	.byte	1,4,2,35,1,11
	.byte	'PDIS12',0,1
	.word	612
	.byte	1,3,2,35,1,11
	.byte	'PDIS13',0,1
	.word	612
	.byte	1,2,2,35,1,11
	.byte	'PDIS14',0,1
	.word	612
	.byte	1,1,2,35,1,11
	.byte	'PDIS15',0,1
	.word	612
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	629
	.byte	16,0,2,35,2,0,12,11,197,5,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5539
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PCSR_Bits',0,11,165,3,16,4,11
	.byte	'SEL0',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'SEL1',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'SEL2',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'SEL3',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'SEL4',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'SEL5',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'SEL6',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'SEL7',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	612
	.byte	2,6,2,35,1,11
	.byte	'SEL10',0,1
	.word	612
	.byte	1,5,2,35,1,11
	.byte	'SEL11',0,1
	.word	612
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	437
	.byte	19,1,2,35,0,11
	.byte	'LCK',0,1
	.word	612
	.byte	1,0,2,35,3,0,12,11,189,5,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5905
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR0_Bits',0,11,206,2,16,4,11
	.byte	'PS0',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	437
	.byte	28,0,2,35,0,0,12,11,149,5,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6191
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR4_Bits',0,11,227,2,16,4,11
	.byte	'reserved_0',0,1
	.word	612
	.byte	4,4,2,35,0,11
	.byte	'PS4',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	437
	.byte	24,0,2,35,0,0,12,11,165,5,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6338
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR8_Bits',0,11,238,2,16,4,11
	.byte	'reserved_0',0,1
	.word	612
	.byte	8,0,2,35,0,11
	.byte	'PS8',0,1
	.word	612
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	612
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	612
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	612
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	437
	.byte	20,0,2,35,0,0,12,11,173,5,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6507
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR12_Bits',0,11,216,2,16,4,11
	.byte	'reserved_0',0,2
	.word	629
	.byte	12,4,2,35,0,11
	.byte	'PS12',0,1
	.word	612
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	612
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	612
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	612
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	629
	.byte	16,0,2,35,2,0,12,11,157,5,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6679
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR0_Bits',0,11,232,1,16,4,11
	.byte	'reserved_0',0,2
	.word	629
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	612
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	612
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	612
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	612
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	629
	.byte	12,0,2,35,2,0,12,11,229,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6854
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR4_Bits',0,11,253,1,16,4,11
	.byte	'reserved_0',0,4
	.word	437
	.byte	20,12,2,35,0,11
	.byte	'PCL4',0,1
	.word	612
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	612
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	612
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	612
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	612
	.byte	8,0,2,35,3,0,12,11,245,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7028
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR8_Bits',0,11,136,2,16,4,11
	.byte	'reserved_0',0,4
	.word	437
	.byte	24,8,2,35,0,11
	.byte	'PCL8',0,1
	.word	612
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	612
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	612
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	612
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	612
	.byte	4,0,2,35,3,0,12,11,253,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7202
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR12_Bits',0,11,243,1,16,4,11
	.byte	'reserved_0',0,4
	.word	437
	.byte	28,4,2,35,0,11
	.byte	'PCL12',0,1
	.word	612
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	612
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	612
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	612
	.byte	1,0,2,35,3,0,12,11,237,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7378
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR_Bits',0,11,249,2,16,4,11
	.byte	'PS0',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	612
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	612
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	612
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	612
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	612
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	612
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	612
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	612
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	629
	.byte	16,0,2,35,2,0,12,11,141,5,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7534
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR_Bits',0,11,147,2,16,4,11
	.byte	'reserved_0',0,2
	.word	629
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	612
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	612
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	612
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	612
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	612
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	612
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	612
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	612
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	612
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	612
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	612
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	612
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	612
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	612
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	612
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	612
	.byte	1,0,2,35,3,0,12,11,221,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7867
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR0_Bits',0,11,192,1,16,4,11
	.byte	'reserved_0',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	437
	.byte	30,0,2,35,0,0,12,11,196,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8215
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR1_Bits',0,11,200,1,16,4,11
	.byte	'reserved_0',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	437
	.byte	30,0,2,35,0,0,10
	.byte	'_Ifx_P_LPCR1_P21_Bits',0,11,208,1,16,4,11
	.byte	'RDIS_CTRL',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'RX_DIS',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'TERM',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'LRXTERM',0,1
	.word	612
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	437
	.byte	24,0,2,35,0,0,12,11,204,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8339
	.byte	4,2,35,0,13
	.byte	'B_P21',0
	.word	8423
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR2_Bits',0,11,218,1,16,4,11
	.byte	'reserved_0',0,1
	.word	612
	.byte	8,0,2,35,0,11
	.byte	'LVDSR',0,1
	.word	612
	.byte	1,7,2,35,1,11
	.byte	'LVDSRL',0,1
	.word	612
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	612
	.byte	2,4,2,35,1,11
	.byte	'TDIS_CTRL',0,1
	.word	612
	.byte	1,3,2,35,1,11
	.byte	'TX_DIS',0,1
	.word	612
	.byte	1,2,2,35,1,11
	.byte	'TX_PD',0,1
	.word	612
	.byte	1,1,2,35,1,11
	.byte	'TX_PWDPD',0,1
	.word	612
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	629
	.byte	16,0,2,35,2,0,12,11,213,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8603
	.byte	4,2,35,0,0,18,76
	.word	612
	.byte	19,75,0,10
	.byte	'_Ifx_P_ACCEN1_Bits',0,11,82,16,4,11
	.byte	'reserved_0',0,4
	.word	437
	.byte	32,0,2,35,0,0,12,11,132,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8856
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ACCEN0_Bits',0,11,45,16,4,11
	.byte	'EN0',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	612
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	612
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	612
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	612
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	612
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	612
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	612
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	612
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	612
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	612
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	612
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	612
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	612
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	612
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	612
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	612
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	612
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	612
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	612
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	612
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	612
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	612
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	612
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	612
	.byte	1,0,2,35,3,0,12,11,252,3,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8943
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P',0,11,229,5,25,128,2,13
	.byte	'OUT',0
	.word	2641
	.byte	4,2,35,0,13
	.byte	'OMR',0
	.word	3212
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	3331
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3371
	.byte	4,2,35,12,13
	.byte	'IOCR0',0
	.word	3555
	.byte	4,2,35,16,13
	.byte	'IOCR4',0
	.word	3770
	.byte	4,2,35,20,13
	.byte	'IOCR8',0
	.word	3987
	.byte	4,2,35,24,13
	.byte	'IOCR12',0
	.word	4207
	.byte	4,2,35,28,13
	.byte	'reserved_20',0
	.word	3371
	.byte	4,2,35,32,13
	.byte	'IN',0
	.word	4521
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	4561
	.byte	24,2,35,40,13
	.byte	'PDR0',0
	.word	4834
	.byte	4,2,35,64,13
	.byte	'PDR1',0
	.word	5150
	.byte	4,2,35,68,13
	.byte	'reserved_48',0
	.word	5190
	.byte	8,2,35,72,13
	.byte	'ESR',0
	.word	5490
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	5530
	.byte	12,2,35,84,13
	.byte	'PDISC',0
	.word	5865
	.byte	4,2,35,96,13
	.byte	'PCSR',0
	.word	6151
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	5190
	.byte	8,2,35,104,13
	.byte	'OMSR0',0
	.word	6298
	.byte	4,2,35,112,13
	.byte	'OMSR4',0
	.word	6467
	.byte	4,2,35,116,13
	.byte	'OMSR8',0
	.word	6639
	.byte	4,2,35,120,13
	.byte	'OMSR12',0
	.word	6814
	.byte	4,2,35,124,13
	.byte	'OMCR0',0
	.word	6988
	.byte	4,3,35,128,1,13
	.byte	'OMCR4',0
	.word	7162
	.byte	4,3,35,132,1,13
	.byte	'OMCR8',0
	.word	7338
	.byte	4,3,35,136,1,13
	.byte	'OMCR12',0
	.word	7494
	.byte	4,3,35,140,1,13
	.byte	'OMSR',0
	.word	7827
	.byte	4,3,35,144,1,13
	.byte	'OMCR',0
	.word	8175
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	5190
	.byte	8,3,35,152,1,13
	.byte	'LPCR0',0
	.word	8299
	.byte	4,3,35,160,1,13
	.byte	'LPCR1',0
	.word	8548
	.byte	4,3,35,164,1,13
	.byte	'LPCR2',0
	.word	8807
	.byte	4,3,35,168,1,13
	.byte	'reserved_A4',0
	.word	8847
	.byte	76,3,35,172,1,13
	.byte	'ACCEN1',0
	.word	8903
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	9470
	.byte	4,3,35,252,1,0,14
	.word	9510
	.byte	3
	.word	10113
	.byte	15,10,83,9,1,16
	.byte	'IfxPort_InputMode_undefined',0,127,16
	.byte	'IfxPort_InputMode_noPullDevice',0,0,16
	.byte	'IfxPort_InputMode_pullDown',0,8,16
	.byte	'IfxPort_InputMode_pullUp',0,16,0
.L183:
	.byte	4
	.byte	'IfxPort_setPinModeInput',0,3,10,196,4,17,1,1
.L186:
	.byte	5
	.byte	'port',0,10,196,4,48
	.word	10118
.L188:
	.byte	5
	.byte	'pinIndex',0,10,196,4,60
	.word	612
.L190:
	.byte	5
	.byte	'mode',0,10,196,4,88
	.word	10123
.L192:
	.byte	6,0,15,10,134,1,9,1,16
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,16
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,15,10,120,9,1,16
	.byte	'IfxPort_OutputIdx_general',0,128,1,16
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,16
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,16
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,16
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,16
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,16
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,16
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0
.L213:
	.byte	4
	.byte	'IfxPort_setPinModeOutput',0,3,10,202,4,17,1,1
.L216:
	.byte	5
	.byte	'port',0,10,202,4,49
	.word	10118
.L218:
	.byte	5
	.byte	'pinIndex',0,10,202,4,61
	.word	612
.L220:
	.byte	5
	.byte	'mode',0,10,202,4,90
	.word	10328
.L222:
	.byte	5
	.byte	'index',0,10,202,4,114
	.word	10398
.L224:
	.byte	6,0,15,10,172,1,9,4,16
	.byte	'IfxPort_State_notChanged',0,0,16
	.byte	'IfxPort_State_high',0,1,16
	.byte	'IfxPort_State_low',0,128,128,4,16
	.byte	'IfxPort_State_toggled',0,129,128,4,0,4
	.byte	'IfxPort_setPinState',0,3,10,208,4,17,1,1,5
	.byte	'port',0,10,208,4,44
	.word	10118
	.byte	5
	.byte	'pinIndex',0,10,208,4,56
	.word	612
	.byte	5
	.byte	'action',0,10,208,4,80
	.word	10711
	.byte	6,0,10
	.byte	'_Ifx_SENT_CLC_Bits',0,13,169,2,16,4,11
	.byte	'DISR',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	612
	.byte	4,0,2,35,0,11
	.byte	'RMC',0,1
	.word	612
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	629
	.byte	16,0,2,35,2,0,12,13,152,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10892
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SENT_ID_Bits',0,13,191,2,16,4,11
	.byte	'MODREV',0,1
	.word	612
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	612
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	629
	.byte	16,0,2,35,2,0,12,13,168,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11088
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SENT_FDR_Bits',0,13,181,2,16,4,11
	.byte	'STEP',0,2
	.word	629
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	612
	.byte	4,2,2,35,1,11
	.byte	'DM',0,1
	.word	612
	.byte	2,0,2,35,1,11
	.byte	'RESULT',0,2
	.word	629
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	612
	.byte	6,0,2,35,3,0,12,13,160,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11211
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SENT_INTOV_Bits',0,13,199,2,16,4,11
	.byte	'IPC0',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'IPC1',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'IPC2',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'IPC3',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'IPC4',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'IPC5',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	437
	.byte	26,0,2,35,0,0,12,13,176,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11371
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SENT_TSR_Bits',0,13,141,3,16,4,11
	.byte	'CTS',0,4
	.word	437
	.byte	32,0,2,35,0,0,12,13,240,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11557
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SENT_TPD_Bits',0,13,134,3,16,4,11
	.byte	'TDIV',0,4
	.word	437
	.byte	20,12,2,35,0,11
	.byte	'reserved_20',0,2
	.word	629
	.byte	12,0,2,35,2,0,12,13,232,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11638
	.byte	4,2,35,0,0,18,96
	.word	612
	.byte	19,95,0,10
	.byte	'_Ifx_SENT_RDR_Bits',0,13,243,2,16,4,11
	.byte	'RD0',0,1
	.word	612
	.byte	4,4,2,35,0,11
	.byte	'RD1',0,1
	.word	612
	.byte	4,0,2,35,0,11
	.byte	'RD2',0,1
	.word	612
	.byte	4,4,2,35,1,11
	.byte	'RD3',0,1
	.word	612
	.byte	4,0,2,35,1,11
	.byte	'RD4',0,1
	.word	612
	.byte	4,4,2,35,2,11
	.byte	'RD5',0,1
	.word	612
	.byte	4,0,2,35,2,11
	.byte	'RD6',0,1
	.word	612
	.byte	4,4,2,35,3,11
	.byte	'RD7',0,1
	.word	612
	.byte	4,0,2,35,3,0,12,13,216,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11752
	.byte	4,2,35,0,0,18,24
	.word	11898
	.byte	19,5,0,18,80
	.word	612
	.byte	19,79,0,10
	.byte	'_Ifx_SENT_OCS_Bits',0,13,233,2,16,4,11
	.byte	'reserved_0',0,4
	.word	437
	.byte	24,8,2,35,0,11
	.byte	'SUS',0,1
	.word	612
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	612
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	612
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	612
	.byte	2,0,2,35,3,0,12,13,208,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11956
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SENT_KRSTCLR_Bits',0,13,226,2,16,4,11
	.byte	'CLR',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	437
	.byte	31,0,2,35,0,0,12,13,200,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12117
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SENT_KRST1_Bits',0,13,219,2,16,4,11
	.byte	'RST',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	437
	.byte	31,0,2,35,0,0,12,13,192,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12224
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SENT_KRST0_Bits',0,13,211,2,16,4,11
	.byte	'RST',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	437
	.byte	30,0,2,35,0,0,12,13,184,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12329
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SENT_ACCEN1_Bits',0,13,82,16,4,11
	.byte	'reserved_0',0,4
	.word	437
	.byte	32,0,2,35,0,0,12,13,160,3,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12453
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SENT_ACCEN0_Bits',0,13,45,16,4,11
	.byte	'EN0',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	612
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	612
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	612
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	612
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	612
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	612
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	612
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	612
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	612
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	612
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	612
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	612
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	612
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	612
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	612
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	612
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	612
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	612
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	612
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	612
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	612
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	612
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	612
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	612
	.byte	1,0,2,35,3,0,12,13,152,3,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12543
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SENT_CH_CPDR_Bits',0,13,97,16,4,11
	.byte	'PDIV',0,2
	.word	629
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,4
	.word	437
	.byte	20,0,2,35,0,0,12,13,176,3,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13113
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SENT_CH_CFDR_Bits',0,13,88,16,4,11
	.byte	'DIV',0,2
	.word	629
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,1
	.word	612
	.byte	4,0,2,35,1,11
	.byte	'DIVM',0,2
	.word	629
	.byte	12,4,2,35,2,11
	.byte	'reserved_28',0,1
	.word	612
	.byte	4,0,2,35,3,0,12,13,168,3,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13221
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SENT_CH_RCR_Bits',0,13,219,1,16,4,11
	.byte	'CEN',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'IEP',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'ACE',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'SNI',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'SDP',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'SCDIS',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'CDIS',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'CFC',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'FRL',0,1
	.word	612
	.byte	8,0,2,35,1,11
	.byte	'CRZ',0,1
	.word	612
	.byte	1,7,2,35,2,11
	.byte	'ESF',0,1
	.word	612
	.byte	1,6,2,35,2,11
	.byte	'IDE',0,1
	.word	612
	.byte	1,5,2,35,2,11
	.byte	'SUSEN',0,1
	.word	612
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	629
	.byte	12,0,2,35,2,0
.L145:
	.byte	12,13,232,3,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13367
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SENT_CH_RSR_Bits',0,13,238,1,16,4,11
	.byte	'CRC',0,1
	.word	612
	.byte	4,4,2,35,0,11
	.byte	'CST',0,1
	.word	612
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	612
	.byte	2,0,2,35,0,11
	.byte	'SCN',0,1
	.word	612
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	437
	.byte	20,0,2,35,0,0,12,13,240,3,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13659
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SENT_CH_SDS_Bits',0,13,131,2,16,4,11
	.byte	'SD',0,2
	.word	629
	.byte	16,0,2,35,0,11
	.byte	'MID',0,1
	.word	612
	.byte	8,0,2,35,2,11
	.byte	'SCRC',0,1
	.word	612
	.byte	6,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	612
	.byte	1,1,2,35,3,11
	.byte	'CON',0,1
	.word	612
	.byte	1,0,2,35,3,0
.L273:
	.byte	12,13,128,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13818
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SENT_CH_IOCR_Bits',0,13,197,1,16,4,11
	.byte	'ALTI',0,1
	.word	612
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	612
	.byte	2,4,2,35,0,11
	.byte	'DEPTH',0,1
	.word	612
	.byte	4,0,2,35,0,11
	.byte	'OIE',0,1
	.word	612
	.byte	1,7,2,35,1,11
	.byte	'IIE',0,1
	.word	612
	.byte	1,6,2,35,1,11
	.byte	'CEC',0,1
	.word	612
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	612
	.byte	1,4,2,35,1,11
	.byte	'REG',0,1
	.word	612
	.byte	1,3,2,35,1,11
	.byte	'FEG',0,1
	.word	612
	.byte	1,2,2,35,1,11
	.byte	'CREG',0,1
	.word	612
	.byte	1,1,2,35,1,11
	.byte	'CFEG',0,1
	.word	612
	.byte	1,0,2,35,1,11
	.byte	'ETS',0,1
	.word	612
	.byte	4,4,2,35,2,11
	.byte	'EC',0,2
	.word	629
	.byte	8,4,2,35,2,11
	.byte	'CTR',0,1
	.word	612
	.byte	1,3,2,35,3,11
	.byte	'TRM',0,1
	.word	612
	.byte	1,2,2,35,3,11
	.byte	'RXM',0,1
	.word	612
	.byte	1,1,2,35,3,11
	.byte	'TXM',0,1
	.word	612
	.byte	1,0,2,35,3,0
.L158:
	.byte	12,13,224,3,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13970
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SENT_CH_SCR_Bits',0,13,248,1,16,4,11
	.byte	'PLEN',0,1
	.word	612
	.byte	6,2,2,35,0,11
	.byte	'TRIG',0,1
	.word	612
	.byte	2,0,2,35,0,11
	.byte	'DEL',0,1
	.word	612
	.byte	6,2,2,35,1,11
	.byte	'BASE',0,1
	.word	612
	.byte	1,1,2,35,1,11
	.byte	'TRQ',0,1
	.word	612
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	629
	.byte	16,0,2,35,2,0
.L167:
	.byte	12,13,248,3,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14314
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SENT_CH_VIEW_Bits',0,13,141,2,16,4,11
	.byte	'RDNP0',0,1
	.word	612
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'RDNP1',0,1
	.word	612
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'RDNP2',0,1
	.word	612
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	612
	.byte	1,4,2,35,1,11
	.byte	'RDNP3',0,1
	.word	612
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	612
	.byte	1,0,2,35,1,11
	.byte	'RDNP4',0,1
	.word	612
	.byte	3,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	612
	.byte	1,4,2,35,2,11
	.byte	'RDNP5',0,1
	.word	612
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	612
	.byte	1,0,2,35,2,11
	.byte	'RDNP6',0,1
	.word	612
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	612
	.byte	1,4,2,35,3,11
	.byte	'RDNP7',0,1
	.word	612
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	612
	.byte	1,0,2,35,3,0
.L155:
	.byte	12,13,136,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14484
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SENT_CH_INTSTAT_Bits',0,13,177,1,16,4,11
	.byte	'RSI',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'RDI',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'RBI',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'TDI',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'TBI',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'FRI',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'FDI',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'NNI',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'NVI',0,1
	.word	612
	.byte	1,7,2,35,1,11
	.byte	'CRCI',0,1
	.word	612
	.byte	1,6,2,35,1,11
	.byte	'WSI',0,1
	.word	612
	.byte	1,5,2,35,1,11
	.byte	'SDI',0,1
	.word	612
	.byte	1,4,2,35,1,11
	.byte	'SCRI',0,1
	.word	612
	.byte	1,3,2,35,1,11
	.byte	'WDI',0,1
	.word	612
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,4
	.word	437
	.byte	18,0,2,35,0,0,12,13,216,3,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14872
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SENT_CH_INTSET_Bits',0,13,157,1,16,4,11
	.byte	'RSI',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'RDI',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'RBI',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'TDI',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'TBI',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'FRI',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'FDI',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'NNI',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'NVI',0,1
	.word	612
	.byte	1,7,2,35,1,11
	.byte	'CRCI',0,1
	.word	612
	.byte	1,6,2,35,1,11
	.byte	'WSI',0,1
	.word	612
	.byte	1,5,2,35,1,11
	.byte	'SDI',0,1
	.word	612
	.byte	1,4,2,35,1,11
	.byte	'SCRI',0,1
	.word	612
	.byte	1,3,2,35,1,11
	.byte	'WDI',0,1
	.word	612
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,4
	.word	437
	.byte	18,0,2,35,0,0,12,13,208,3,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15180
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SENT_CH_INTCLR_Bits',0,13,117,16,4,11
	.byte	'RSI',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'RDI',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'RBI',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'TDI',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'TBI',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'FRI',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'FDI',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'NNI',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'NVI',0,1
	.word	612
	.byte	1,7,2,35,1,11
	.byte	'CRCI',0,1
	.word	612
	.byte	1,6,2,35,1,11
	.byte	'WSI',0,1
	.word	612
	.byte	1,5,2,35,1,11
	.byte	'SDI',0,1
	.word	612
	.byte	1,4,2,35,1,11
	.byte	'SCRI',0,1
	.word	612
	.byte	1,3,2,35,1,11
	.byte	'WDI',0,1
	.word	612
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,4
	.word	437
	.byte	18,0,2,35,0,0,12,13,192,3,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15487
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SENT_CH_INTEN_Bits',0,13,137,1,16,4,11
	.byte	'RSI',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'RDI',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'RBI',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'TDI',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'TBI',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'FRI',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'FDI',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'NNI',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'NVI',0,1
	.word	612
	.byte	1,7,2,35,1,11
	.byte	'CRCI',0,1
	.word	612
	.byte	1,6,2,35,1,11
	.byte	'WSI',0,1
	.word	612
	.byte	1,5,2,35,1,11
	.byte	'SDI',0,1
	.word	612
	.byte	1,4,2,35,1,11
	.byte	'SCRI',0,1
	.word	612
	.byte	1,3,2,35,1,11
	.byte	'WDI',0,1
	.word	612
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,4
	.word	437
	.byte	18,0,2,35,0,0,12,13,200,3,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15793
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SENT_CH_INP_Bits',0,13,104,16,4,11
	.byte	'RSI',0,1
	.word	612
	.byte	4,4,2,35,0,11
	.byte	'RDI',0,1
	.word	612
	.byte	4,0,2,35,0,11
	.byte	'RBI',0,1
	.word	612
	.byte	4,4,2,35,1,11
	.byte	'TDI',0,1
	.word	612
	.byte	4,0,2,35,1,11
	.byte	'TBI',0,1
	.word	612
	.byte	4,4,2,35,2,11
	.byte	'ERRI',0,1
	.word	612
	.byte	4,0,2,35,2,11
	.byte	'SDI',0,1
	.word	612
	.byte	4,4,2,35,3,11
	.byte	'WDI',0,1
	.word	612
	.byte	4,0,2,35,3,0
.L161:
	.byte	12,13,184,3,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16099
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SENT_CH_WDT_Bits',0,13,162,2,16,4,11
	.byte	'WDLx',0,2
	.word	629
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	629
	.byte	16,0,2,35,2,0
.L142:
	.byte	12,13,144,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16288
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SENT_CH',0,13,128,5,25,64,13
	.byte	'CPDR',0
	.word	13181
	.byte	4,2,35,0,13
	.byte	'CFDR',0
	.word	13327
	.byte	4,2,35,4,13
	.byte	'RCR',0
	.word	13619
	.byte	4,2,35,8,13
	.byte	'RSR',0
	.word	13778
	.byte	4,2,35,12,13
	.byte	'SDS',0
	.word	13930
	.byte	4,2,35,16,13
	.byte	'IOCR',0
	.word	14274
	.byte	4,2,35,20,13
	.byte	'SCR',0
	.word	14444
	.byte	4,2,35,24,13
	.byte	'VIEW',0
	.word	14832
	.byte	4,2,35,28,13
	.byte	'INTSTAT',0
	.word	15140
	.byte	4,2,35,32,13
	.byte	'INTSET',0
	.word	15447
	.byte	4,2,35,36,13
	.byte	'INTCLR',0
	.word	15753
	.byte	4,2,35,40,13
	.byte	'INTEN',0
	.word	16059
	.byte	4,2,35,44,13
	.byte	'INP',0
	.word	16248
	.byte	4,2,35,48,13
	.byte	'WDT',0
	.word	16356
	.byte	4,2,35,52,13
	.byte	'reserved_38',0
	.word	5190
	.byte	8,2,35,56,0,18,128,3
	.word	16396
	.byte	19,5,0,14
	.word	16635
	.byte	18,128,16
	.word	612
	.byte	19,255,15,0,10
	.byte	'_Ifx_SENT_RTS_Bits',0,13,128,3,16,4,11
	.byte	'LTS',0,4
	.word	437
	.byte	32,0,2,35,0,0,12,13,224,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16661
	.byte	4,2,35,0,0,18,24
	.word	16702
	.byte	19,5,0,18,104
	.word	612
	.byte	19,103,0,10
	.byte	'_Ifx_SENT',0,13,158,5,25,128,22,13
	.byte	'CLC',0
	.word	11048
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	3371
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	11171
	.byte	4,2,35,8,13
	.byte	'FDR',0
	.word	11331
	.byte	4,2,35,12,13
	.byte	'reserved_10',0
	.word	3371
	.byte	4,2,35,16,13
	.byte	'INTOV',0
	.word	11517
	.byte	4,2,35,20,13
	.byte	'TSR',0
	.word	11598
	.byte	4,2,35,24,13
	.byte	'TPD',0
	.word	11703
	.byte	4,2,35,28,13
	.byte	'reserved_20',0
	.word	11743
	.byte	96,2,35,32,13
	.byte	'RDR',0
	.word	11938
	.byte	24,3,35,128,1,13
	.byte	'reserved_98',0
	.word	11947
	.byte	80,3,35,152,1,13
	.byte	'OCS',0
	.word	12077
	.byte	4,3,35,232,1,13
	.byte	'KRSTCLR',0
	.word	12184
	.byte	4,3,35,236,1,13
	.byte	'KRST1',0
	.word	12289
	.byte	4,3,35,240,1,13
	.byte	'KRST0',0
	.word	12413
	.byte	4,3,35,244,1,13
	.byte	'ACCEN1',0
	.word	12503
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	13073
	.byte	4,3,35,252,1,13
	.byte	'CH',0
	.word	16645
	.byte	128,3,3,35,128,2,13
	.byte	'reserved_280',0
	.word	16650
	.byte	128,16,3,35,128,5,13
	.byte	'RTS',0
	.word	16742
	.byte	24,3,35,128,21,13
	.byte	'reserved_A98',0
	.word	16751
	.byte	104,3,35,152,21,0,14
	.word	16760
.L85:
	.byte	3
	.word	17128
.L265:
	.byte	15,14,86,9,1,16
	.byte	'IfxSent_ChannelId_none',0,127,16
	.byte	'IfxSent_ChannelId_0',0,0,16
	.byte	'IfxSent_ChannelId_1',0,1,16
	.byte	'IfxSent_ChannelId_2',0,2,16
	.byte	'IfxSent_ChannelId_3',0,3,16
	.byte	'IfxSent_ChannelId_4',0,4,16
	.byte	'IfxSent_ChannelId_5',0,5,0,15,12,88,9,1,16
	.byte	'IfxSent_AlternateInput_0',0,0,16
	.byte	'IfxSent_AlternateInput_1',0,1,16
	.byte	'IfxSent_AlternateInput_2',0,2,16
	.byte	'IfxSent_AlternateInput_3',0,3,0
.L193:
	.byte	4
	.byte	'IfxSent_setAltiInput',0,3,12,155,5,17,1,1
.L195:
	.byte	5
	.byte	'sent',0,12,155,5,48
	.word	17133
.L197:
	.byte	5
	.byte	'channelId',0,12,155,5,72
	.word	17138
.L199:
	.byte	5
	.byte	'alternateInput',0,12,155,5,106
	.word	17301
.L201:
	.byte	6,0
.L109:
	.byte	4
	.byte	'IfxSent_setTimeStampPredivider',0,3,12,193,5,17,1,1
.L112:
	.byte	5
	.byte	'sent',0,12,193,5,58
	.word	17133
.L114:
	.byte	5
	.byte	'timeStampPreDivider',0,12,193,5,71
	.word	2134
.L116:
	.byte	6,0,8
	.byte	'IfxSent_getAndClearInterruptStatus',0,3,12,227,4,32
	.word	15140
	.byte	1,1,5
	.byte	'sent',0,12,227,4,77
	.word	17133
	.byte	5
	.byte	'channelId',0,12,227,4,101
	.word	17138
	.byte	6,0
.L229:
	.byte	8
	.byte	'IfxSent_getChannelSrc',0,3,12,244,4,35
	.word	1758
	.byte	1,1
.L231:
	.byte	5
	.byte	'channelId',0,12,244,4,75
	.word	17138
.L233:
	.byte	6,0
.L133:
	.byte	4
	.byte	'IfxSent_disableChannel',0,3,12,194,4,17,1,1
.L136:
	.byte	5
	.byte	'sent',0,12,194,4,50
	.word	17133
.L138:
	.byte	5
	.byte	'channelId',0,12,194,4,74
	.word	17138
.L140:
	.byte	6,0
.L147:
	.byte	4
	.byte	'IfxSent_enableChannel',0,3,12,209,4,17,1,1
.L150:
	.byte	5
	.byte	'sent',0,12,209,4,49
	.word	17133
.L152:
	.byte	5
	.byte	'channelId',0,12,209,4,73
	.word	17138
.L154:
	.byte	6,0
.L103:
	.byte	4
	.byte	'IfxSent_enableModule',0,3,12,215,4,17,1,1
.L105:
	.byte	5
	.byte	'sent',0,12,215,4,48
	.word	17133
.L107:
	.byte	6,0,20,10,190,1,9,8,13
	.byte	'port',0
	.word	10118
	.byte	4,2,35,0,13
	.byte	'pinIndex',0
	.word	612
	.byte	1,2,35,4,0,15,16,130,1,9,1,16
	.byte	'Ifx_RxSel_a',0,0,16
	.byte	'Ifx_RxSel_b',0,1,16
	.byte	'Ifx_RxSel_c',0,2,16
	.byte	'Ifx_RxSel_d',0,3,16
	.byte	'Ifx_RxSel_e',0,4,16
	.byte	'Ifx_RxSel_f',0,5,16
	.byte	'Ifx_RxSel_g',0,6,16
	.byte	'Ifx_RxSel_h',0,7,0,20,15,59,15,20,13
	.byte	'module',0
	.word	17133
	.byte	4,2,35,0,13
	.byte	'channelId',0
	.word	17138
	.byte	1,2,35,4,13
	.byte	'pin',0
	.word	17900
	.byte	8,2,35,8,13
	.byte	'select',0
	.word	17939
	.byte	1,2,35,16,0,21
	.word	18058
.L172:
	.byte	3
	.word	18128
	.byte	15,10,144,1,9,1,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,16
	.byte	'IfxPort_PadDriver_lvdsSpeed1',0,4,16
	.byte	'IfxPort_PadDriver_lvdsSpeed2',0,5,16
	.byte	'IfxPort_PadDriver_lvdsSpeed3',0,6,16
	.byte	'IfxPort_PadDriver_lvdsSpeed4',0,7,16
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,16
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,16
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,16
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,0
.L174:
	.byte	4
	.byte	'IfxSent_initSentPin',0,3,12,250,4,17,1,1
.L176:
	.byte	5
	.byte	'sentIn',0,12,250,4,60
	.word	18133
.L178:
	.byte	5
	.byte	'inputMode',0,12,250,4,86
	.word	10123
.L180:
	.byte	5
	.byte	'padDriver',0,12,250,4,115
	.word	18138
.L182:
	.byte	17,6,6,0,0,20,15,68,15,20,13
	.byte	'module',0
	.word	17133
	.byte	4,2,35,0,13
	.byte	'channelId',0
	.word	17138
	.byte	1,2,35,4,13
	.byte	'pin',0
	.word	17900
	.byte	8,2,35,8,13
	.byte	'select',0
	.word	10398
	.byte	1,2,35,16,0,21
	.word	18640
.L202:
	.byte	3
	.word	18710
.L204:
	.byte	4
	.byte	'IfxSent_initSpcPin',0,3,12,133,5,17,1,1
.L206:
	.byte	5
	.byte	'spcOut',0,12,133,5,59
	.word	18715
.L208:
	.byte	5
	.byte	'spcOutMode',0,12,133,5,86
	.word	10328
.L210:
	.byte	5
	.byte	'padDriver',0,12,133,5,116
	.word	18138
.L212:
	.byte	17,6,0,0
.L98:
	.byte	8
	.byte	'IfxSent_isModuleEnabled',0,3,12,205,5,20
	.word	612
	.byte	1,1
.L100:
	.byte	5
	.byte	'sent',0,12,205,5,54
	.word	17133
.L102:
	.byte	6,0,21
	.word	453
	.byte	22
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,23
	.word	18858
	.byte	0,14
	.word	437
	.byte	3
	.word	437
	.byte	24
	.byte	'__cmpswapw',0
	.word	18900
	.byte	1,1,1,1,25
	.byte	'p',0
	.word	18905
	.byte	25
	.byte	'value',0
	.word	437
	.byte	25
	.byte	'compare',0
	.word	437
	.byte	0,26
	.word	181
	.byte	27
	.word	207
	.byte	6,0,26
	.word	242
	.byte	27
	.word	274
	.byte	6,0,26
	.word	287
	.byte	6,0,26
	.word	356
	.byte	27
	.word	375
	.byte	6,0,26
	.word	391
	.byte	27
	.word	406
	.byte	27
	.word	420
	.byte	6,0,26
	.word	1199
	.byte	27
	.word	1239
	.byte	27
	.word	1257
	.byte	6,0,26
	.word	1277
	.byte	27
	.word	1315
	.byte	27
	.word	1333
	.byte	6,0,28
	.byte	'IfxScuWdt_clearCpuEndinit',0,3,217,1,17,1,1,1,1,5
	.byte	'password',0,3,217,1,50
	.word	629
	.byte	0,28
	.byte	'IfxScuWdt_setCpuEndinit',0,3,239,1,17,1,1,1,1,5
	.byte	'password',0,3,239,1,48
	.word	629
	.byte	0,26
	.word	1353
	.byte	27
	.word	1404
	.byte	6,0,29
	.byte	'IfxScuWdt_getCpuWatchdogPassword',0,3,129,3,19
	.word	629
	.byte	1,1,1,1,26
	.word	1763
	.byte	27
	.word	1791
	.byte	6,0,26
	.word	1806
	.byte	27
	.word	1828
	.byte	6,0,26
	.word	1902
	.byte	27
	.word	1922
	.byte	27
	.word	1935
	.byte	27
	.word	1957
	.byte	17,30
	.word	1763
	.byte	27
	.word	1791
	.byte	31
	.word	1804
	.byte	0,6,0,0,26
	.word	2058
	.byte	6,0,26
	.word	2092
	.byte	6,0,26
	.word	2155
	.byte	27
	.word	2196
	.byte	6,0,26
	.word	2215
	.byte	27
	.word	2270
	.byte	6,0,26
	.word	2289
	.byte	27
	.word	2329
	.byte	27
	.word	2346
	.byte	17,6,0,0,26
	.word	10248
	.byte	27
	.word	10280
	.byte	27
	.word	10294
	.byte	27
	.word	10312
	.byte	6,0,26
	.word	10615
	.byte	27
	.word	10648
	.byte	27
	.word	10662
	.byte	27
	.word	10680
	.byte	27
	.word	10694
	.byte	6,0,26
	.word	10814
	.byte	27
	.word	10842
	.byte	27
	.word	10856
	.byte	27
	.word	10874
	.byte	6,0,15,10,95,9,1,16
	.byte	'IfxPort_Mode_inputNoPullDevice',0,0,16
	.byte	'IfxPort_Mode_inputPullDown',0,8,16
	.byte	'IfxPort_Mode_inputPullUp',0,16,16
	.byte	'IfxPort_Mode_outputPushPullGeneral',0,128,1,16
	.byte	'IfxPort_Mode_outputPushPullAlt1',0,136,1,16
	.byte	'IfxPort_Mode_outputPushPullAlt2',0,144,1,16
	.byte	'IfxPort_Mode_outputPushPullAlt3',0,152,1,16
	.byte	'IfxPort_Mode_outputPushPullAlt4',0,160,1,16
	.byte	'IfxPort_Mode_outputPushPullAlt5',0,168,1,16
	.byte	'IfxPort_Mode_outputPushPullAlt6',0,176,1,16
	.byte	'IfxPort_Mode_outputPushPullAlt7',0,184,1,16
	.byte	'IfxPort_Mode_outputOpenDrainGeneral',0,192,1,16
	.byte	'IfxPort_Mode_outputOpenDrainAlt1',0,200,1,16
	.byte	'IfxPort_Mode_outputOpenDrainAlt2',0,208,1,16
	.byte	'IfxPort_Mode_outputOpenDrainAlt3',0,216,1,16
	.byte	'IfxPort_Mode_outputOpenDrainAlt4',0,224,1,16
	.byte	'IfxPort_Mode_outputOpenDrainAlt5',0,232,1,16
	.byte	'IfxPort_Mode_outputOpenDrainAlt6',0,240,1,16
	.byte	'IfxPort_Mode_outputOpenDrainAlt7',0,248,1,0,28
	.byte	'IfxPort_setPinMode',0,10,247,2,17,1,1,1,1,5
	.byte	'port',0,10,247,2,43
	.word	10118
	.byte	5
	.byte	'pinIndex',0,10,247,2,55
	.word	612
	.byte	5
	.byte	'mode',0,10,247,2,78
	.word	19412
	.byte	0,28
	.byte	'IfxPort_setPinPadDriver',0,10,134,3,17,1,1,1,1,5
	.byte	'port',0,10,134,3,48
	.word	10118
	.byte	5
	.byte	'pinIndex',0,10,134,3,60
	.word	612
	.byte	5
	.byte	'padDriver',0,10,134,3,88
	.word	18138
	.byte	0,26
	.word	17415
	.byte	27
	.word	17444
	.byte	27
	.word	17458
	.byte	27
	.word	17477
	.byte	6,0,26
	.word	17503
	.byte	27
	.word	17542
	.byte	27
	.word	17556
	.byte	6,0,26
	.word	17587
	.byte	27
	.word	17634
	.byte	27
	.word	17648
	.byte	6,0,26
	.word	17669
	.byte	27
	.word	17703
	.byte	6,0,26
	.word	17724
	.byte	27
	.word	17755
	.byte	27
	.word	17769
	.byte	6,0,26
	.word	17790
	.byte	27
	.word	17820
	.byte	27
	.word	17834
	.byte	6,0,26
	.word	17855
	.byte	27
	.word	17884
	.byte	6,0,28
	.byte	'IfxSent_resetModule',0,12,137,3,17,1,1,1,1,5
	.byte	'sent',0,12,137,3,47
	.word	17133
	.byte	0,28
	.byte	'IfxSent_initializeChannelUnitTime',0,12,180,3,17,1,1,1,1,5
	.byte	'sent',0,12,180,3,61
	.word	17133
	.byte	5
	.byte	'channelId',0,12,180,3,85
	.word	17138
	.byte	5
	.byte	'tUnit',0,12,180,3,104
	.word	233
	.byte	0,15,12,108,9,1,16
	.byte	'IfxSent_ClockDividerMode_off',0,0,16
	.byte	'IfxSent_ClockDividerMode_normal',0,1,16
	.byte	'IfxSent_ClockDividerMode_fractional',0,2,0,28
	.byte	'IfxSent_initializeModuleClock',0,12,188,3,17,1,1,1,1,5
	.byte	'sent',0,12,188,3,57
	.word	17133
	.byte	5
	.byte	'dividerMode',0,12,188,3,88
	.word	20491
	.byte	5
	.byte	'stepValue',0,12,188,3,108
	.word	629
	.byte	0,26
	.word	18553
	.byte	27
	.word	18581
	.byte	27
	.word	18597
	.byte	27
	.word	18616
	.byte	17,30
	.word	10248
	.byte	27
	.word	10280
	.byte	27
	.word	10294
	.byte	27
	.word	10312
	.byte	31
	.word	10326
	.byte	0,6,30
	.word	17415
	.byte	27
	.word	17444
	.byte	27
	.word	17458
	.byte	27
	.word	17477
	.byte	31
	.word	17501
	.byte	0,6,0,0,26
	.word	18720
	.byte	27
	.word	18747
	.byte	27
	.word	18763
	.byte	27
	.word	18783
	.byte	17,30
	.word	10615
	.byte	27
	.word	10648
	.byte	27
	.word	10662
	.byte	27
	.word	10680
	.byte	27
	.word	10694
	.byte	31
	.word	10709
	.byte	0,6,0,0,26
	.word	18806
	.byte	27
	.word	18842
	.byte	6,0,20,17,165,3,9,4,13
	.byte	'sent',0
	.word	17133
	.byte	4,2,35,0,0
.L83:
	.byte	3
	.word	20838
	.byte	20,17,174,4,9,12,13
	.byte	'module',0
	.word	17133
	.byte	4,2,35,0,13
	.byte	'sleepModeEnabled',0
	.word	612
	.byte	1,2,35,4,13
	.byte	'timeStampPreDivider',0
	.word	2134
	.byte	4,2,35,6,0,21
	.word	20864
.L92:
	.byte	3
	.word	20942
.L118:
	.byte	3
	.word	20864
.L121:
	.byte	21
	.word	20864
	.byte	14
	.word	16396
.L131:
	.byte	3
	.word	20962
	.byte	20,17,146,4,9,12,13
	.byte	'driver',0
	.word	20859
	.byte	4,2,35,0,13
	.byte	'channel',0
	.word	20967
	.byte	4,2,35,4,13
	.byte	'channelId',0
	.word	17138
	.byte	1,2,35,8,0
.L124:
	.byte	3
	.word	20972
	.byte	15,12,125,9,1,16
	.byte	'IfxSent_DigitalGlitchesLength_off',0,0,16
	.byte	'IfxSent_DigitalGlitchesLength_1',0,1,16
	.byte	'IfxSent_DigitalGlitchesLength_2',0,2,16
	.byte	'IfxSent_DigitalGlitchesLength_3',0,3,16
	.byte	'IfxSent_DigitalGlitchesLength_4',0,4,16
	.byte	'IfxSent_DigitalGlitchesLength_5',0,5,16
	.byte	'IfxSent_DigitalGlitchesLength_6',0,6,16
	.byte	'IfxSent_DigitalGlitchesLength_7',0,7,16
	.byte	'IfxSent_DigitalGlitchesLength_8',0,8,16
	.byte	'IfxSent_DigitalGlitchesLength_9',0,9,16
	.byte	'IfxSent_DigitalGlitchesLength_10',0,10,16
	.byte	'IfxSent_DigitalGlitchesLength_11',0,11,16
	.byte	'IfxSent_DigitalGlitchesLength_12',0,12,16
	.byte	'IfxSent_DigitalGlitchesLength_13',0,13,16
	.byte	'IfxSent_DigitalGlitchesLength_14',0,14,16
	.byte	'IfxSent_DigitalGlitchesLength_15',0,15,0,15,12,155,1,9,1,16
	.byte	'IfxSent_ExternalTrigger_0',0,0,16
	.byte	'IfxSent_ExternalTrigger_1',0,1,16
	.byte	'IfxSent_ExternalTrigger_2',0,2,16
	.byte	'IfxSent_ExternalTrigger_3',0,3,16
	.byte	'IfxSent_ExternalTrigger_4',0,4,16
	.byte	'IfxSent_ExternalTrigger_5',0,5,16
	.byte	'IfxSent_ExternalTrigger_6',0,6,16
	.byte	'IfxSent_ExternalTrigger_7',0,7,16
	.byte	'IfxSent_ExternalTrigger_8',0,8,16
	.byte	'IfxSent_ExternalTrigger_9',0,9,0,20,17,180,3,9,8,13
	.byte	'inputPulsePolarityHigh',0
	.word	612
	.byte	1,2,35,0,13
	.byte	'outputPulsePolarityHigh',0
	.word	612
	.byte	1,2,35,1,13
	.byte	'edgeCounterCleared',0
	.word	612
	.byte	1,2,35,2,13
	.byte	'glitchFallingCleared',0
	.word	612
	.byte	1,2,35,3,13
	.byte	'glitchRisingCleared',0
	.word	612
	.byte	1,2,35,4,13
	.byte	'triggerMonitorCleared',0
	.word	612
	.byte	1,2,35,5,13
	.byte	'digitalGlitchFilterDepth',0
	.word	21036
	.byte	1,2,35,6,13
	.byte	'externalTrigger',0
	.word	21594
	.byte	1,2,35,7,0,15,12,171,1,9,1,16
	.byte	'IfxSent_FrameCheckMode_pastSyncPulse',0,0,16
	.byte	'IfxSent_FrameCheckMode_futureSuncPulse',0,1,0,15,12,147,1,9,1,16
	.byte	'IfxSent_ExtendedSerialFrameMode_standard',0,0,16
	.byte	'IfxSent_ExtendedSerialFrameMode_extended',0,1,0,20,17,241,3,9,12,13
	.byte	'crcModeDisabled',0
	.word	612
	.byte	1,2,35,0,13
	.byte	'crcMethodDisabled',0
	.word	612
	.byte	1,2,35,1,13
	.byte	'alternateCrcSelected',0
	.word	612
	.byte	1,2,35,2,13
	.byte	'serialDataProcessingEnabled',0
	.word	612
	.byte	1,2,35,3,13
	.byte	'serialDataDisabledCrcDisabled',0
	.word	612
	.byte	1,2,35,4,13
	.byte	'statusNibbleEnabled',0
	.word	612
	.byte	1,2,35,5,13
	.byte	'driftErrorsDisabled',0
	.word	612
	.byte	1,2,35,6,13
	.byte	'endPulseIgnored',0
	.word	612
	.byte	1,2,35,7,13
	.byte	'suspendTriggered',0
	.word	612
	.byte	1,2,35,8,13
	.byte	'frameLength',0
	.word	612
	.byte	1,2,35,9,13
	.byte	'frameCheckMode',0
	.word	22130
	.byte	1,2,35,10,13
	.byte	'extendedSerialFrameMode',0
	.word	22217
	.byte	1,2,35,11,0,15,12,244,1,9,1,16
	.byte	'IfxSent_TriggerSource_off',0,0,16
	.byte	'IfxSent_TriggerSource_immediate',0,1,16
	.byte	'IfxSent_TriggerSource_fallingEdge',0,2,16
	.byte	'IfxSent_TriggerSource_externalTrigger',0,3,0,15,12,236,1,9,1,16
	.byte	'IfxSent_TimeBase_measuredFrequency',0,0,16
	.byte	'IfxSent_TimeBase_nominalFrequency',0,1,0,15,12,218,1,9,1,16
	.byte	'IfxSent_SpcMode_sync',0,0,16
	.byte	'IfxSent_SpcMode_range',0,1,16
	.byte	'IfxSent_SpcMode_bidirectional',0,2,0,20,17,131,4,9,6,13
	.byte	'pulseLength',0
	.word	612
	.byte	1,2,35,0,13
	.byte	'pulseDelayLength',0
	.word	612
	.byte	1,2,35,1,13
	.byte	'triggerSource',0
	.word	22662
	.byte	1,2,35,2,13
	.byte	'timeBase',0
	.word	22807
	.byte	1,2,35,3,13
	.byte	'spcMode',0
	.word	22887
	.byte	1,2,35,4,0,15,12,179,1,9,1,16
	.byte	'IfxSent_InterruptNodePointer_0',0,0,16
	.byte	'IfxSent_InterruptNodePointer_1',0,1,16
	.byte	'IfxSent_InterruptNodePointer_2',0,2,16
	.byte	'IfxSent_InterruptNodePointer_3',0,3,16
	.byte	'IfxSent_InterruptNodePointer_trigo0',0,4,16
	.byte	'IfxSent_InterruptNodePointer_trigo1',0,5,16
	.byte	'IfxSent_InterruptNodePointer_trigo2',0,6,16
	.byte	'IfxSent_InterruptNodePointer_trigo3',0,7,16
	.byte	'IfxSent_InterruptNodePointer_trigo4',0,8,16
	.byte	'IfxSent_InterruptNodePointer_trigo5',0,9,0,20,17,202,3,9,8,13
	.byte	'receiveSuccessInterruptNode',0
	.word	23085
	.byte	1,2,35,0,13
	.byte	'receiveDataInterruptNode',0
	.word	23085
	.byte	1,2,35,1,13
	.byte	'receiveBufferOverflowInterruptNode',0
	.word	23085
	.byte	1,2,35,2,13
	.byte	'transferDataInterruptNode',0
	.word	23085
	.byte	1,2,35,3,13
	.byte	'transferBufferUnderflowInterruptNode',0
	.word	23085
	.byte	1,2,35,4,13
	.byte	'errorInterruptNode',0
	.word	23085
	.byte	1,2,35,5,13
	.byte	'serialDataReceiveInterruptNode',0
	.word	23085
	.byte	1,2,35,6,13
	.byte	'watchdogErrorInterruptNode',0
	.word	23085
	.byte	1,2,35,7,0,20,17,230,3,9,16,13
	.byte	'in',0
	.word	18133
	.byte	4,2,35,0,13
	.byte	'inMode',0
	.word	10123
	.byte	1,2,35,4,13
	.byte	'out',0
	.word	18715
	.byte	4,2,35,8,13
	.byte	'outMode',0
	.word	10328
	.byte	1,2,35,12,13
	.byte	'pinDriver',0
	.word	18138
	.byte	1,2,35,13,0,21
	.word	23759
.L169:
	.byte	3
	.word	23843
	.byte	15,12,195,1,9,1,16
	.byte	'IfxSent_Nibble_0',0,0,16
	.byte	'IfxSent_Nibble_1',0,1,16
	.byte	'IfxSent_Nibble_2',0,2,16
	.byte	'IfxSent_Nibble_3',0,3,16
	.byte	'IfxSent_Nibble_4',0,4,16
	.byte	'IfxSent_Nibble_5',0,5,16
	.byte	'IfxSent_Nibble_6',0,6,16
	.byte	'IfxSent_Nibble_7',0,7,0,20,17,216,3,9,8,13
	.byte	'nibblePointer0',0
	.word	23853
	.byte	1,2,35,0,13
	.byte	'nibblePointer1',0
	.word	23853
	.byte	1,2,35,1,13
	.byte	'nibblePointer2',0
	.word	23853
	.byte	1,2,35,2,13
	.byte	'nibblePointer3',0
	.word	23853
	.byte	1,2,35,3,13
	.byte	'nibblePointer4',0
	.word	23853
	.byte	1,2,35,4,13
	.byte	'nibblePointer5',0
	.word	23853
	.byte	1,2,35,5,13
	.byte	'nibblePointer6',0
	.word	23853
	.byte	1,2,35,6,13
	.byte	'nibblePointer7',0
	.word	23853
	.byte	1,2,35,7,0,20,17,194,3,9,4,13
	.byte	'priority',0
	.word	629
	.byte	2,2,35,0,13
	.byte	'isrProvider',0
	.word	1843
	.byte	1,2,35,2,0,20,17,141,3,9,16,13
	.byte	'receiveDataInterrupt',0
	.word	612
	.byte	1,2,35,0,13
	.byte	'receiveSuccessInterrupt',0
	.word	612
	.byte	1,2,35,1,13
	.byte	'receiveBufferOverflowInterrupt',0
	.word	612
	.byte	1,2,35,2,13
	.byte	'transferDataInterrupt',0
	.word	612
	.byte	1,2,35,3,13
	.byte	'transferBufferUnderflowInterrupt',0
	.word	612
	.byte	1,2,35,4,13
	.byte	'serialDataReceiveInterrupt',0
	.word	612
	.byte	1,2,35,5,13
	.byte	'watchdogErrorInterrupt',0
	.word	612
	.byte	1,2,35,6,13
	.byte	'serialDataCrcErrorInterrupt',0
	.word	612
	.byte	1,2,35,7,13
	.byte	'wrongStatusNibbleErrorInterrupt',0
	.word	612
	.byte	1,2,35,8,13
	.byte	'crcErrorInterrupt',0
	.word	612
	.byte	1,2,35,9,13
	.byte	'nibblesValueOutOfRangeErrorInterrupt',0
	.word	612
	.byte	1,2,35,10,13
	.byte	'nibblesWrongErrorInterrupt',0
	.word	612
	.byte	1,2,35,11,13
	.byte	'frequencyDriftErrorInterrupt',0
	.word	612
	.byte	1,2,35,12,13
	.byte	'frequencyRangeErrorInterrupt',0
	.word	612
	.byte	1,2,35,13,0,12,17,172,3,9,16,13
	.byte	'ALL',0
	.word	2134
	.byte	4,2,35,0,13
	.byte	'enable',0
	.word	24257
	.byte	16,2,35,0,0,20,17,155,4,9,84,13
	.byte	'driver',0
	.word	20859
	.byte	4,2,35,0,13
	.byte	'watchDogTimerLimit',0
	.word	629
	.byte	2,2,35,4,13
	.byte	'channelId',0
	.word	17138
	.byte	1,2,35,6,13
	.byte	'inputOutputControl',0
	.word	21881
	.byte	8,2,35,8,13
	.byte	'receiveControl',0
	.word	22310
	.byte	12,2,35,16,13
	.byte	'transmitControl',0
	.word	22973
	.byte	6,2,35,28,13
	.byte	'interuptNodeControl',0
	.word	23452
	.byte	8,2,35,36,13
	.byte	'pins',0
	.word	23848
	.byte	4,2,35,44,13
	.byte	'tUnit',0
	.word	233
	.byte	4,2,35,48,13
	.byte	'nibbleControl',0
	.word	24012
	.byte	8,2,35,52,13
	.byte	'interrupt',0
	.word	24211
	.byte	4,2,35,60,13
	.byte	'spcModeOn',0
	.word	612
	.byte	1,2,35,64,13
	.byte	'enabledInterrupts',0
	.word	24771
	.byte	16,2,35,68,0,21
	.word	24807
.L126:
	.byte	3
	.word	25100
.L254:
	.byte	3
	.word	24807
.L257:
	.byte	21
	.word	24807
	.byte	20,17,183,4,9,12,13
	.byte	'data',0
	.word	2134
	.byte	4,2,35,0,13
	.byte	'timeStamp',0
	.word	2134
	.byte	4,2,35,4,13
	.byte	'statusNibble',0
	.word	612
	.byte	1,2,35,8,0
.L261:
	.byte	3
	.word	25120
	.byte	15,12,117,9,1,16
	.byte	'IfxSent_ConfigBit_0',0,0,16
	.byte	'IfxSent_ConfigBit_1',0,1,0,20,17,192,4,9,6,13
	.byte	'crc',0
	.word	612
	.byte	1,2,35,0,13
	.byte	'messageId',0
	.word	612
	.byte	1,2,35,1,13
	.byte	'serialData',0
	.word	629
	.byte	2,2,35,2,13
	.byte	'configBit',0
	.word	25187
	.byte	1,2,35,4,0
.L269:
	.byte	3
	.word	25237
	.byte	7
	.byte	'short int',0,2,5,32
	.byte	'__wchar_t',0,18,1,1
	.word	25320
	.byte	32
	.byte	'__size_t',0,18,1,1
	.word	437
	.byte	32
	.byte	'__ptrdiff_t',0,18,1,1
	.word	453
	.byte	33,1,3
	.word	25388
	.byte	32
	.byte	'__codeptr',0,18,1,1
	.word	25390
	.byte	15,19,240,10,9,1,16
	.byte	'IfxScu_CCUCON0_CLKSEL_fBack',0,0,16
	.byte	'IfxScu_CCUCON0_CLKSEL_fPll',0,1,0,32
	.byte	'IfxScu_CCUCON0_CLKSEL',0,19,244,10,3
	.word	25413
	.byte	15,19,254,10,9,1,16
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,16
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,16
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,32
	.byte	'IfxScu_WDTCON1_IR',0,19,131,11,3
	.word	25510
	.byte	32
	.byte	'boolean',0,20,101,29
	.word	612
	.byte	32
	.byte	'uint8',0,20,105,29
	.word	612
	.byte	32
	.byte	'uint16',0,20,109,29
	.word	629
	.byte	32
	.byte	'uint32',0,20,113,29
	.word	2134
	.byte	32
	.byte	'uint64',0,20,118,29
	.word	319
	.byte	32
	.byte	'sint16',0,20,126,29
	.word	25320
	.byte	7
	.byte	'long int',0,4,5,32
	.byte	'sint32',0,20,131,1,29
	.word	25722
	.byte	7
	.byte	'long long int',0,8,5,32
	.byte	'sint64',0,20,138,1,29
	.word	25750
	.byte	32
	.byte	'float32',0,20,167,1,29
	.word	233
	.byte	32
	.byte	'pvoid',0,16,57,28
	.word	351
	.byte	32
	.byte	'Ifx_TickTime',0,16,79,28
	.word	25750
	.byte	32
	.byte	'Ifx_Priority',0,16,103,16
	.word	629
	.byte	32
	.byte	'Ifx_RxSel',0,16,140,1,3
	.word	17939
	.byte	10
	.byte	'_Ifx_SCU_ACCEN0_Bits',0,4,45,16,4,11
	.byte	'EN0',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	612
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	612
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	612
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	612
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	612
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	612
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	612
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	612
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	612
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	612
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	612
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	612
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	612
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	612
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	612
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	612
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	612
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	612
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	612
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	612
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	612
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	612
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	612
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_ACCEN0_Bits',0,4,79,3
	.word	25875
	.byte	10
	.byte	'_Ifx_SCU_ACCEN1_Bits',0,4,82,16,4,11
	.byte	'reserved_0',0,4
	.word	437
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN1_Bits',0,4,85,3
	.word	26432
	.byte	10
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,4,88,16,4,11
	.byte	'STM0DIS',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'STM1DIS',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'STM2DIS',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	437
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,4,94,3
	.word	26509
	.byte	10
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,4,97,16,4,11
	.byte	'BAUD1DIV',0,1
	.word	612
	.byte	4,4,2,35,0,11
	.byte	'BAUD2DIV',0,1
	.word	612
	.byte	4,0,2,35,0,11
	.byte	'SRIDIV',0,1
	.word	612
	.byte	4,4,2,35,1,11
	.byte	'LPDIV',0,1
	.word	612
	.byte	4,0,2,35,1,11
	.byte	'SPBDIV',0,1
	.word	612
	.byte	4,4,2,35,2,11
	.byte	'FSI2DIV',0,1
	.word	612
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	612
	.byte	2,0,2,35,2,11
	.byte	'FSIDIV',0,1
	.word	612
	.byte	2,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	612
	.byte	2,4,2,35,3,11
	.byte	'CLKSEL',0,1
	.word	612
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	612
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON0_Bits',0,4,111,3
	.word	26645
	.byte	10
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,4,114,16,4,11
	.byte	'CANDIV',0,1
	.word	612
	.byte	4,4,2,35,0,11
	.byte	'ERAYDIV',0,1
	.word	612
	.byte	4,0,2,35,0,11
	.byte	'STMDIV',0,1
	.word	612
	.byte	4,4,2,35,1,11
	.byte	'GTMDIV',0,1
	.word	612
	.byte	4,0,2,35,1,11
	.byte	'ETHDIV',0,1
	.word	612
	.byte	4,4,2,35,2,11
	.byte	'ASCLINFDIV',0,1
	.word	612
	.byte	4,0,2,35,2,11
	.byte	'ASCLINSDIV',0,1
	.word	612
	.byte	4,4,2,35,3,11
	.byte	'INSEL',0,1
	.word	612
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	612
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON1_Bits',0,4,126,3
	.word	26925
	.byte	10
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,4,129,1,16,4,11
	.byte	'BBBDIV',0,1
	.word	612
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	437
	.byte	26,2,2,35,0,11
	.byte	'UP',0,1
	.word	612
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON2_Bits',0,4,135,1,3
	.word	27163
	.byte	10
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,4,138,1,16,4,11
	.byte	'PLLDIV',0,1
	.word	612
	.byte	6,2,2,35,0,11
	.byte	'PLLSEL',0,1
	.word	612
	.byte	2,0,2,35,0,11
	.byte	'PLLERAYDIV',0,1
	.word	612
	.byte	6,2,2,35,1,11
	.byte	'PLLERAYSEL',0,1
	.word	612
	.byte	2,0,2,35,1,11
	.byte	'SRIDIV',0,1
	.word	612
	.byte	6,2,2,35,2,11
	.byte	'SRISEL',0,1
	.word	612
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	612
	.byte	5,3,2,35,3,11
	.byte	'SLCK',0,1
	.word	612
	.byte	1,2,2,35,3,11
	.byte	'UP',0,1
	.word	612
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON3_Bits',0,4,150,1,3
	.word	27291
	.byte	10
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,4,153,1,16,4,11
	.byte	'SPBDIV',0,1
	.word	612
	.byte	6,2,2,35,0,11
	.byte	'SPBSEL',0,1
	.word	612
	.byte	2,0,2,35,0,11
	.byte	'GTMDIV',0,1
	.word	612
	.byte	6,2,2,35,1,11
	.byte	'GTMSEL',0,1
	.word	612
	.byte	2,0,2,35,1,11
	.byte	'STMDIV',0,1
	.word	612
	.byte	6,2,2,35,2,11
	.byte	'STMSEL',0,1
	.word	612
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	612
	.byte	5,3,2,35,3,11
	.byte	'SLCK',0,1
	.word	612
	.byte	1,2,2,35,3,11
	.byte	'UP',0,1
	.word	612
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON4_Bits',0,4,165,1,3
	.word	27534
	.byte	10
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,4,168,1,16,4,11
	.byte	'MAXDIV',0,1
	.word	612
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	437
	.byte	26,2,2,35,0,11
	.byte	'UP',0,1
	.word	612
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON5_Bits',0,4,174,1,3
	.word	27769
	.byte	10
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,4,177,1,16,4,11
	.byte	'CPU0DIV',0,1
	.word	612
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	437
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON6_Bits',0,4,181,1,3
	.word	27897
	.byte	10
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,4,184,1,16,4,11
	.byte	'CPU1DIV',0,1
	.word	612
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	437
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON7_Bits',0,4,188,1,3
	.word	27997
	.byte	10
	.byte	'_Ifx_SCU_CHIPID_Bits',0,4,191,1,16,4,11
	.byte	'CHREV',0,1
	.word	612
	.byte	6,2,2,35,0,11
	.byte	'CHTEC',0,1
	.word	612
	.byte	2,0,2,35,0,11
	.byte	'CHID',0,1
	.word	612
	.byte	8,0,2,35,1,11
	.byte	'EEA',0,1
	.word	612
	.byte	1,7,2,35,2,11
	.byte	'UCODE',0,1
	.word	612
	.byte	7,0,2,35,2,11
	.byte	'FSIZE',0,1
	.word	612
	.byte	4,4,2,35,3,11
	.byte	'SP',0,1
	.word	612
	.byte	2,2,2,35,3,11
	.byte	'SEC',0,1
	.word	612
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CHIPID_Bits',0,4,202,1,3
	.word	28097
	.byte	10
	.byte	'_Ifx_SCU_DTSCON_Bits',0,4,205,1,16,4,11
	.byte	'PWD',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'START',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	612
	.byte	2,4,2,35,0,11
	.byte	'CAL',0,4
	.word	437
	.byte	20,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	612
	.byte	7,1,2,35,3,11
	.byte	'SLCK',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_DTSCON_Bits',0,4,213,1,3
	.word	28305
	.byte	10
	.byte	'_Ifx_SCU_DTSLIM_Bits',0,4,216,1,16,4,11
	.byte	'LOWER',0,2
	.word	629
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	612
	.byte	5,1,2,35,1,11
	.byte	'LLU',0,1
	.word	612
	.byte	1,0,2,35,1,11
	.byte	'UPPER',0,2
	.word	629
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	612
	.byte	4,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	612
	.byte	1,1,2,35,3,11
	.byte	'UOF',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_DTSLIM_Bits',0,4,225,1,3
	.word	28470
	.byte	10
	.byte	'_Ifx_SCU_DTSSTAT_Bits',0,4,228,1,16,4,11
	.byte	'RESULT',0,2
	.word	629
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	612
	.byte	4,2,2,35,1,11
	.byte	'RDY',0,1
	.word	612
	.byte	1,1,2,35,1,11
	.byte	'BUSY',0,1
	.word	612
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	629
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_DTSSTAT_Bits',0,4,235,1,3
	.word	28653
	.byte	10
	.byte	'_Ifx_SCU_EICR_Bits',0,4,238,1,16,4,11
	.byte	'reserved_0',0,1
	.word	612
	.byte	4,4,2,35,0,11
	.byte	'EXIS0',0,1
	.word	612
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'FEN0',0,1
	.word	612
	.byte	1,7,2,35,1,11
	.byte	'REN0',0,1
	.word	612
	.byte	1,6,2,35,1,11
	.byte	'LDEN0',0,1
	.word	612
	.byte	1,5,2,35,1,11
	.byte	'EIEN0',0,1
	.word	612
	.byte	1,4,2,35,1,11
	.byte	'INP0',0,1
	.word	612
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	437
	.byte	5,12,2,35,0,11
	.byte	'EXIS1',0,1
	.word	612
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	612
	.byte	1,0,2,35,2,11
	.byte	'FEN1',0,1
	.word	612
	.byte	1,7,2,35,3,11
	.byte	'REN1',0,1
	.word	612
	.byte	1,6,2,35,3,11
	.byte	'LDEN1',0,1
	.word	612
	.byte	1,5,2,35,3,11
	.byte	'EIEN1',0,1
	.word	612
	.byte	1,4,2,35,3,11
	.byte	'INP1',0,1
	.word	612
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EICR_Bits',0,4,129,2,3
	.word	28807
	.byte	10
	.byte	'_Ifx_SCU_EIFR_Bits',0,4,132,2,16,4,11
	.byte	'INTF0',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'INTF1',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'INTF2',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'INTF3',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'INTF4',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'INTF5',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'INTF6',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'INTF7',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	437
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_EIFR_Bits',0,4,143,2,3
	.word	29171
	.byte	10
	.byte	'_Ifx_SCU_EMSR_Bits',0,4,146,2,16,4,11
	.byte	'POL',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'MODE',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'ENON',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'PSEL',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	629
	.byte	12,0,2,35,0,11
	.byte	'EMSF',0,1
	.word	612
	.byte	1,7,2,35,2,11
	.byte	'SEMSF',0,1
	.word	612
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	612
	.byte	6,0,2,35,2,11
	.byte	'EMSFM',0,1
	.word	612
	.byte	2,6,2,35,3,11
	.byte	'SEMSFM',0,1
	.word	612
	.byte	2,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	612
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_EMSR_Bits',0,4,159,2,3
	.word	29382
	.byte	10
	.byte	'_Ifx_SCU_ESRCFG_Bits',0,4,162,2,16,4,11
	.byte	'reserved_0',0,1
	.word	612
	.byte	7,1,2,35,0,11
	.byte	'EDCON',0,2
	.word	629
	.byte	2,7,2,35,0,11
	.byte	'reserved_9',0,4
	.word	437
	.byte	23,0,2,35,0,0,32
	.byte	'Ifx_SCU_ESRCFG_Bits',0,4,167,2,3
	.word	29634
	.byte	10
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,4,170,2,16,4,11
	.byte	'ARI',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'ARC',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	437
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_ESROCFG_Bits',0,4,175,2,3
	.word	29752
	.byte	10
	.byte	'_Ifx_SCU_EVR13CON_Bits',0,4,178,2,16,4,11
	.byte	'reserved_0',0,4
	.word	437
	.byte	28,4,2,35,0,11
	.byte	'EVR13OFF',0,1
	.word	612
	.byte	1,3,2,35,3,11
	.byte	'BPEVR13OFF',0,1
	.word	612
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	612
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVR13CON_Bits',0,4,185,2,3
	.word	29863
	.byte	10
	.byte	'_Ifx_SCU_EVR33CON_Bits',0,4,188,2,16,4,11
	.byte	'reserved_0',0,4
	.word	437
	.byte	28,4,2,35,0,11
	.byte	'EVR33OFF',0,1
	.word	612
	.byte	1,3,2,35,3,11
	.byte	'BPEVR33OFF',0,1
	.word	612
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	612
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVR33CON_Bits',0,4,195,2,3
	.word	30026
	.byte	10
	.byte	'_Ifx_SCU_EVRADCSTAT_Bits',0,4,198,2,16,4,11
	.byte	'ADC13V',0,1
	.word	612
	.byte	8,0,2,35,0,11
	.byte	'ADC33V',0,1
	.word	612
	.byte	8,0,2,35,1,11
	.byte	'ADCSWDV',0,1
	.word	612
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	612
	.byte	7,1,2,35,3,11
	.byte	'VAL',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRADCSTAT_Bits',0,4,205,2,3
	.word	30189
	.byte	10
	.byte	'_Ifx_SCU_EVRDVSTAT_Bits',0,4,208,2,16,4,11
	.byte	'DVS13TRIM',0,1
	.word	612
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	612
	.byte	8,0,2,35,1,11
	.byte	'DVS33TRIM',0,1
	.word	612
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	612
	.byte	7,1,2,35,3,11
	.byte	'VAL',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRDVSTAT_Bits',0,4,215,2,3
	.word	30347
	.byte	10
	.byte	'_Ifx_SCU_EVRMONCTRL_Bits',0,4,218,2,16,4,11
	.byte	'EVR13OVMOD',0,1
	.word	612
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	612
	.byte	2,4,2,35,0,11
	.byte	'EVR13UVMOD',0,1
	.word	612
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	612
	.byte	2,0,2,35,0,11
	.byte	'EVR33OVMOD',0,1
	.word	612
	.byte	2,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	612
	.byte	2,4,2,35,1,11
	.byte	'EVR33UVMOD',0,1
	.word	612
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	612
	.byte	2,0,2,35,1,11
	.byte	'SWDOVMOD',0,1
	.word	612
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	612
	.byte	2,4,2,35,2,11
	.byte	'SWDUVMOD',0,1
	.word	612
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	629
	.byte	10,0,2,35,2,0,32
	.byte	'Ifx_SCU_EVRMONCTRL_Bits',0,4,232,2,3
	.word	30512
	.byte	10
	.byte	'_Ifx_SCU_EVROSCCTRL_Bits',0,4,235,2,16,4,11
	.byte	'OSCTRIM',0,2
	.word	629
	.byte	10,6,2,35,0,11
	.byte	'OSCPTAT',0,1
	.word	612
	.byte	6,0,2,35,1,11
	.byte	'OSCANASEL',0,1
	.word	612
	.byte	4,4,2,35,2,11
	.byte	'HPBGTRIM',0,2
	.word	629
	.byte	7,5,2,35,2,11
	.byte	'HPBGCLKEN',0,1
	.word	612
	.byte	1,4,2,35,3,11
	.byte	'OSC3V3',0,1
	.word	612
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	612
	.byte	2,1,2,35,3,11
	.byte	'LCK',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVROSCCTRL_Bits',0,4,245,2,3
	.word	30841
	.byte	10
	.byte	'_Ifx_SCU_EVROVMON_Bits',0,4,248,2,16,4,11
	.byte	'EVR13OVVAL',0,1
	.word	612
	.byte	8,0,2,35,0,11
	.byte	'EVR33OVVAL',0,1
	.word	612
	.byte	8,0,2,35,1,11
	.byte	'SWDOVVAL',0,1
	.word	612
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	612
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVROVMON_Bits',0,4,255,2,3
	.word	31062
	.byte	10
	.byte	'_Ifx_SCU_EVRRSTCON_Bits',0,4,130,3,16,4,11
	.byte	'RST13TRIM',0,1
	.word	612
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	437
	.byte	16,8,2,35,0,11
	.byte	'RST13OFF',0,1
	.word	612
	.byte	1,7,2,35,3,11
	.byte	'BPRST13OFF',0,1
	.word	612
	.byte	1,6,2,35,3,11
	.byte	'RST33OFF',0,1
	.word	612
	.byte	1,5,2,35,3,11
	.byte	'BPRST33OFF',0,1
	.word	612
	.byte	1,4,2,35,3,11
	.byte	'RSTSWDOFF',0,1
	.word	612
	.byte	1,3,2,35,3,11
	.byte	'BPRSTSWDOFF',0,1
	.word	612
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	612
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRRSTCON_Bits',0,4,142,3,3
	.word	31225
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF1_Bits',0,4,145,3,16,4,11
	.byte	'SD5P',0,1
	.word	612
	.byte	8,0,2,35,0,11
	.byte	'SD5I',0,1
	.word	612
	.byte	8,0,2,35,1,11
	.byte	'SD5D',0,1
	.word	612
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	612
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF1_Bits',0,4,152,3,3
	.word	31497
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF2_Bits',0,4,155,3,16,4,11
	.byte	'SD33P',0,1
	.word	612
	.byte	8,0,2,35,0,11
	.byte	'SD33I',0,1
	.word	612
	.byte	8,0,2,35,1,11
	.byte	'SD33D',0,1
	.word	612
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	612
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF2_Bits',0,4,162,3,3
	.word	31650
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF3_Bits',0,4,165,3,16,4,11
	.byte	'CT5REG0',0,1
	.word	612
	.byte	8,0,2,35,0,11
	.byte	'CT5REG1',0,1
	.word	612
	.byte	8,0,2,35,1,11
	.byte	'CT5REG2',0,1
	.word	612
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	612
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF3_Bits',0,4,172,3,3
	.word	31806
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF4_Bits',0,4,175,3,16,4,11
	.byte	'CT5REG3',0,1
	.word	612
	.byte	8,0,2,35,0,11
	.byte	'CT5REG4',0,1
	.word	612
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	629
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF4_Bits',0,4,181,3,3
	.word	31968
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF5_Bits',0,4,184,3,16,4,11
	.byte	'CT33REG0',0,1
	.word	612
	.byte	8,0,2,35,0,11
	.byte	'CT33REG1',0,1
	.word	612
	.byte	8,0,2,35,1,11
	.byte	'CT33REG2',0,1
	.word	612
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	612
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF5_Bits',0,4,191,3,3
	.word	32111
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF6_Bits',0,4,194,3,16,4,11
	.byte	'CT33REG3',0,1
	.word	612
	.byte	8,0,2,35,0,11
	.byte	'CT33REG4',0,1
	.word	612
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	629
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF6_Bits',0,4,200,3,3
	.word	32276
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL1_Bits',0,4,203,3,16,4,11
	.byte	'SDFREQSPRD',0,2
	.word	629
	.byte	16,0,2,35,0,11
	.byte	'SDFREQ',0,1
	.word	612
	.byte	8,0,2,35,2,11
	.byte	'SDSTEP',0,1
	.word	612
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	612
	.byte	2,2,2,35,3,11
	.byte	'SDSAMPLE',0,1
	.word	612
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCTRL1_Bits',0,4,211,3,3
	.word	32421
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL2_Bits',0,4,214,3,16,4,11
	.byte	'DRVP',0,1
	.word	612
	.byte	8,0,2,35,0,11
	.byte	'SDMINMAXDC',0,1
	.word	612
	.byte	8,0,2,35,1,11
	.byte	'DRVN',0,1
	.word	612
	.byte	8,0,2,35,2,11
	.byte	'SDLUT',0,1
	.word	612
	.byte	6,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	612
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCTRL2_Bits',0,4,222,3,3
	.word	32602
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL3_Bits',0,4,225,3,16,4,11
	.byte	'SDPWMPRE',0,1
	.word	612
	.byte	8,0,2,35,0,11
	.byte	'SDPID',0,1
	.word	612
	.byte	8,0,2,35,1,11
	.byte	'SDVOKLVL',0,1
	.word	612
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	612
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCTRL3_Bits',0,4,232,3,3
	.word	32776
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL4_Bits',0,4,235,3,16,4,11
	.byte	'reserved_0',0,1
	.word	612
	.byte	8,0,2,35,0,11
	.byte	'SYNCDIV',0,1
	.word	612
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	437
	.byte	20,1,2,35,0,11
	.byte	'LCK',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCTRL4_Bits',0,4,241,3,3
	.word	32936
	.byte	10
	.byte	'_Ifx_SCU_EVRSTAT_Bits',0,4,244,3,16,4,11
	.byte	'EVR13',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'OV13',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'EVR33',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'OV33',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'OVSWD',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'UV13',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'UV33',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'UVSWD',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'EXTPASS13',0,1
	.word	612
	.byte	1,7,2,35,1,11
	.byte	'EXTPASS33',0,1
	.word	612
	.byte	1,6,2,35,1,11
	.byte	'BGPROK',0,1
	.word	612
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	437
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSTAT_Bits',0,4,130,4,3
	.word	33080
	.byte	10
	.byte	'_Ifx_SCU_EVRTRIM_Bits',0,4,133,4,16,4,11
	.byte	'EVR13TRIM',0,1
	.word	612
	.byte	8,0,2,35,0,11
	.byte	'SDVOUTSEL',0,1
	.word	612
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	629
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRTRIM_Bits',0,4,139,4,3
	.word	33354
	.byte	10
	.byte	'_Ifx_SCU_EVRUVMON_Bits',0,4,142,4,16,4,11
	.byte	'EVR13UVVAL',0,1
	.word	612
	.byte	8,0,2,35,0,11
	.byte	'EVR33UVVAL',0,1
	.word	612
	.byte	8,0,2,35,1,11
	.byte	'SWDUVVAL',0,1
	.word	612
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	612
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRUVMON_Bits',0,4,149,4,3
	.word	33493
	.byte	10
	.byte	'_Ifx_SCU_EXTCON_Bits',0,4,152,4,16,4,11
	.byte	'EN0',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'SEL0',0,1
	.word	612
	.byte	4,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	629
	.byte	10,0,2,35,0,11
	.byte	'EN1',0,1
	.word	612
	.byte	1,7,2,35,2,11
	.byte	'NSEL',0,1
	.word	612
	.byte	1,6,2,35,2,11
	.byte	'SEL1',0,1
	.word	612
	.byte	4,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	612
	.byte	2,0,2,35,2,11
	.byte	'DIV1',0,1
	.word	612
	.byte	8,0,2,35,3,0,32
	.byte	'Ifx_SCU_EXTCON_Bits',0,4,163,4,3
	.word	33656
	.byte	10
	.byte	'_Ifx_SCU_FDR_Bits',0,4,166,4,16,4,11
	.byte	'STEP',0,2
	.word	629
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	612
	.byte	4,2,2,35,1,11
	.byte	'DM',0,1
	.word	612
	.byte	2,0,2,35,1,11
	.byte	'RESULT',0,2
	.word	629
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	612
	.byte	5,1,2,35,3,11
	.byte	'DISCLK',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_FDR_Bits',0,4,174,4,3
	.word	33874
	.byte	10
	.byte	'_Ifx_SCU_FMR_Bits',0,4,177,4,16,4,11
	.byte	'FS0',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'FS1',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'FS2',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'FS3',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'FS4',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'FS5',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'FS6',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'FS7',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	612
	.byte	8,0,2,35,1,11
	.byte	'FC0',0,1
	.word	612
	.byte	1,7,2,35,2,11
	.byte	'FC1',0,1
	.word	612
	.byte	1,6,2,35,2,11
	.byte	'FC2',0,1
	.word	612
	.byte	1,5,2,35,2,11
	.byte	'FC3',0,1
	.word	612
	.byte	1,4,2,35,2,11
	.byte	'FC4',0,1
	.word	612
	.byte	1,3,2,35,2,11
	.byte	'FC5',0,1
	.word	612
	.byte	1,2,2,35,2,11
	.byte	'FC6',0,1
	.word	612
	.byte	1,1,2,35,2,11
	.byte	'FC7',0,1
	.word	612
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	612
	.byte	8,0,2,35,3,0,32
	.byte	'Ifx_SCU_FMR_Bits',0,4,197,4,3
	.word	34037
	.byte	10
	.byte	'_Ifx_SCU_ID_Bits',0,4,200,4,16,4,11
	.byte	'MODREV',0,1
	.word	612
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	612
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	629
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_ID_Bits',0,4,205,4,3
	.word	34373
	.byte	10
	.byte	'_Ifx_SCU_IGCR_Bits',0,4,208,4,16,4,11
	.byte	'IPEN00',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'IPEN01',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'IPEN02',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'IPEN03',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'IPEN04',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'IPEN05',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'IPEN06',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'IPEN07',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	612
	.byte	5,3,2,35,1,11
	.byte	'GEEN0',0,1
	.word	612
	.byte	1,2,2,35,1,11
	.byte	'IGP0',0,1
	.word	612
	.byte	2,0,2,35,1,11
	.byte	'IPEN10',0,1
	.word	612
	.byte	1,7,2,35,2,11
	.byte	'IPEN11',0,1
	.word	612
	.byte	1,6,2,35,2,11
	.byte	'IPEN12',0,1
	.word	612
	.byte	1,5,2,35,2,11
	.byte	'IPEN13',0,1
	.word	612
	.byte	1,4,2,35,2,11
	.byte	'IPEN14',0,1
	.word	612
	.byte	1,3,2,35,2,11
	.byte	'IPEN15',0,1
	.word	612
	.byte	1,2,2,35,2,11
	.byte	'IPEN16',0,1
	.word	612
	.byte	1,1,2,35,2,11
	.byte	'IPEN17',0,1
	.word	612
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	612
	.byte	5,3,2,35,3,11
	.byte	'GEEN1',0,1
	.word	612
	.byte	1,2,2,35,3,11
	.byte	'IGP1',0,1
	.word	612
	.byte	2,0,2,35,3,0,32
	.byte	'Ifx_SCU_IGCR_Bits',0,4,232,4,3
	.word	34480
	.byte	10
	.byte	'_Ifx_SCU_IN_Bits',0,4,235,4,16,4,11
	.byte	'P0',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	437
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_IN_Bits',0,4,240,4,3
	.word	34932
	.byte	10
	.byte	'_Ifx_SCU_IOCR_Bits',0,4,243,4,16,4,11
	.byte	'reserved_0',0,1
	.word	612
	.byte	4,4,2,35,0,11
	.byte	'PC0',0,1
	.word	612
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	612
	.byte	4,4,2,35,1,11
	.byte	'PC1',0,1
	.word	612
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	629
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_IOCR_Bits',0,4,250,4,3
	.word	35031
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,4,253,4,16,4,11
	.byte	'LBISTREQ',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'LBISTREQP',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'PATTERNS',0,2
	.word	629
	.byte	14,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	629
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,4,131,5,3
	.word	35181
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,4,134,5,16,4,11
	.byte	'SEED',0,4
	.word	437
	.byte	23,9,2,35,0,11
	.byte	'reserved_23',0,1
	.word	612
	.byte	1,0,2,35,2,11
	.byte	'SPLITSH',0,1
	.word	612
	.byte	3,5,2,35,3,11
	.byte	'BODY',0,1
	.word	612
	.byte	1,4,2,35,3,11
	.byte	'LBISTFREQU',0,1
	.word	612
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,4,141,5,3
	.word	35330
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,4,144,5,16,4,11
	.byte	'SIGNATURE',0,4
	.word	437
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	612
	.byte	7,1,2,35,3,11
	.byte	'LBISTDONE',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,4,149,5,3
	.word	35491
	.byte	10
	.byte	'_Ifx_SCU_LCLCON_Bits',0,4,152,5,16,4,11
	.byte	'reserved_0',0,2
	.word	629
	.byte	16,0,2,35,0,11
	.byte	'LS',0,1
	.word	612
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	629
	.byte	14,1,2,35,2,11
	.byte	'LSEN',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_LCLCON_Bits',0,4,158,5,3
	.word	35621
	.byte	10
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,4,161,5,16,4,11
	.byte	'LCLT0',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'LCLT1',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	437
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_LCLTEST_Bits',0,4,166,5,3
	.word	35753
	.byte	10
	.byte	'_Ifx_SCU_MANID_Bits',0,4,169,5,16,4,11
	.byte	'DEPT',0,1
	.word	612
	.byte	5,3,2,35,0,11
	.byte	'MANUF',0,2
	.word	629
	.byte	11,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	629
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_MANID_Bits',0,4,174,5,3
	.word	35868
	.byte	10
	.byte	'_Ifx_SCU_OMR_Bits',0,4,177,5,16,4,11
	.byte	'PS0',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	629
	.byte	14,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	612
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	612
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	629
	.byte	14,0,2,35,2,0,32
	.byte	'Ifx_SCU_OMR_Bits',0,4,185,5,3
	.word	35979
	.byte	10
	.byte	'_Ifx_SCU_OSCCON_Bits',0,4,188,5,16,4,11
	.byte	'reserved_0',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'PLLLV',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'OSCRES',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'GAINSEL',0,1
	.word	612
	.byte	2,3,2,35,0,11
	.byte	'MODE',0,1
	.word	612
	.byte	2,1,2,35,0,11
	.byte	'SHBY',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'PLLHV',0,1
	.word	612
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	612
	.byte	1,6,2,35,1,11
	.byte	'X1D',0,1
	.word	612
	.byte	1,5,2,35,1,11
	.byte	'X1DEN',0,1
	.word	612
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	612
	.byte	4,0,2,35,1,11
	.byte	'OSCVAL',0,1
	.word	612
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	612
	.byte	2,1,2,35,2,11
	.byte	'APREN',0,1
	.word	612
	.byte	1,0,2,35,2,11
	.byte	'CAP0EN',0,1
	.word	612
	.byte	1,7,2,35,3,11
	.byte	'CAP1EN',0,1
	.word	612
	.byte	1,6,2,35,3,11
	.byte	'CAP2EN',0,1
	.word	612
	.byte	1,5,2,35,3,11
	.byte	'CAP3EN',0,1
	.word	612
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	612
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_OSCCON_Bits',0,4,209,5,3
	.word	36137
	.byte	10
	.byte	'_Ifx_SCU_OUT_Bits',0,4,212,5,16,4,11
	.byte	'P0',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	437
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_OUT_Bits',0,4,217,5,3
	.word	36549
	.byte	10
	.byte	'_Ifx_SCU_OVCCON_Bits',0,4,220,5,16,4,11
	.byte	'CSEL0',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'CSEL1',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'CSEL2',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	629
	.byte	13,0,2,35,0,11
	.byte	'OVSTRT',0,1
	.word	612
	.byte	1,7,2,35,2,11
	.byte	'OVSTP',0,1
	.word	612
	.byte	1,6,2,35,2,11
	.byte	'DCINVAL',0,1
	.word	612
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	612
	.byte	5,0,2,35,2,11
	.byte	'OVCONF',0,1
	.word	612
	.byte	1,7,2,35,3,11
	.byte	'POVCONF',0,1
	.word	612
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	612
	.byte	6,0,2,35,3,0,32
	.byte	'Ifx_SCU_OVCCON_Bits',0,4,233,5,3
	.word	36650
	.byte	10
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,4,236,5,16,4,11
	.byte	'OVEN0',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'OVEN1',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'OVEN2',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	437
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,4,242,5,3
	.word	36917
	.byte	10
	.byte	'_Ifx_SCU_PDISC_Bits',0,4,245,5,16,4,11
	.byte	'PDIS0',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	437
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_PDISC_Bits',0,4,250,5,3
	.word	37053
	.byte	10
	.byte	'_Ifx_SCU_PDR_Bits',0,4,253,5,16,4,11
	.byte	'PD0',0,1
	.word	612
	.byte	3,5,2,35,0,11
	.byte	'PL0',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'PD1',0,1
	.word	612
	.byte	3,1,2,35,0,11
	.byte	'PL1',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	437
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_PDR_Bits',0,4,132,6,3
	.word	37164
	.byte	10
	.byte	'_Ifx_SCU_PDRR_Bits',0,4,135,6,16,4,11
	.byte	'PDR0',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'PDR1',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'PDR2',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'PDR3',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'PDR4',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'PDR5',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'PDR6',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'PDR7',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	437
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_PDRR_Bits',0,4,146,6,3
	.word	37297
	.byte	10
	.byte	'_Ifx_SCU_PLLCON0_Bits',0,4,149,6,16,4,11
	.byte	'VCOBYP',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'VCOPWD',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'MODEN',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'SETFINDIS',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'CLRFINDIS',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'OSCDISCDIS',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	629
	.byte	2,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	612
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	612
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	612
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	612
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	612
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	612
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	612
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_PLLCON0_Bits',0,4,166,6,3
	.word	37500
	.byte	10
	.byte	'_Ifx_SCU_PLLCON1_Bits',0,4,169,6,16,4,11
	.byte	'K2DIV',0,1
	.word	612
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	612
	.byte	7,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	612
	.byte	1,0,2,35,1,11
	.byte	'K1DIV',0,1
	.word	612
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	629
	.byte	9,0,2,35,2,0,32
	.byte	'Ifx_SCU_PLLCON1_Bits',0,4,177,6,3
	.word	37856
	.byte	10
	.byte	'_Ifx_SCU_PLLCON2_Bits',0,4,180,6,16,4,11
	.byte	'MODCFG',0,2
	.word	629
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	629
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_PLLCON2_Bits',0,4,184,6,3
	.word	38034
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYCON0_Bits',0,4,187,6,16,4,11
	.byte	'VCOBYP',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'VCOPWD',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	612
	.byte	2,4,2,35,0,11
	.byte	'SETFINDIS',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'CLRFINDIS',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'OSCDISCDIS',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	629
	.byte	2,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	612
	.byte	5,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	612
	.byte	2,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	612
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	612
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	612
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	612
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	612
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	612
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_PLLERAYCON0_Bits',0,4,204,6,3
	.word	38134
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYCON1_Bits',0,4,207,6,16,4,11
	.byte	'K2DIV',0,1
	.word	612
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	612
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	612
	.byte	4,0,2,35,1,11
	.byte	'K1DIV',0,1
	.word	612
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	629
	.byte	9,0,2,35,2,0,32
	.byte	'Ifx_SCU_PLLERAYCON1_Bits',0,4,215,6,3
	.word	38504
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYSTAT_Bits',0,4,218,6,16,4,11
	.byte	'VCOBYST',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'VCOLOCK',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'FINDIS',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'K1RDY',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	437
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_PLLERAYSTAT_Bits',0,4,227,6,3
	.word	38690
	.byte	10
	.byte	'_Ifx_SCU_PLLSTAT_Bits',0,4,230,6,16,4,11
	.byte	'VCOBYST',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'VCOLOCK',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'FINDIS',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'K1RDY',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'MODRUN',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	437
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_PLLSTAT_Bits',0,4,241,6,3
	.word	38888
	.byte	10
	.byte	'_Ifx_SCU_PMCSR_Bits',0,4,244,6,16,4,11
	.byte	'REQSLP',0,1
	.word	612
	.byte	2,6,2,35,0,11
	.byte	'SMUSLP',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	612
	.byte	5,0,2,35,0,11
	.byte	'PMST',0,1
	.word	612
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	437
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR_Bits',0,4,251,6,3
	.word	39121
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR0_Bits',0,4,254,6,16,4,11
	.byte	'reserved_0',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'ESR1WKEN',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'PINAWKEN',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'PINBWKEN',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'ESR0DFEN',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'ESR0EDCON',0,1
	.word	612
	.byte	2,1,2,35,0,11
	.byte	'ESR1DFEN',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'ESR1EDCON',0,1
	.word	612
	.byte	2,6,2,35,1,11
	.byte	'PINADFEN',0,1
	.word	612
	.byte	1,5,2,35,1,11
	.byte	'PINAEDCON',0,1
	.word	612
	.byte	2,3,2,35,1,11
	.byte	'PINBDFEN',0,1
	.word	612
	.byte	1,2,2,35,1,11
	.byte	'PINBEDCON',0,1
	.word	612
	.byte	2,0,2,35,1,11
	.byte	'SCREN',0,1
	.word	612
	.byte	1,7,2,35,2,11
	.byte	'STBYRAMSEL',0,1
	.word	612
	.byte	2,5,2,35,2,11
	.byte	'SCRCLKSEL',0,1
	.word	612
	.byte	1,4,2,35,2,11
	.byte	'SCRWKEN',0,1
	.word	612
	.byte	1,3,2,35,2,11
	.byte	'TRISTEN',0,1
	.word	612
	.byte	1,2,2,35,2,11
	.byte	'TRISTREQ',0,1
	.word	612
	.byte	1,1,2,35,2,11
	.byte	'PORSTDF',0,1
	.word	612
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	612
	.byte	1,7,2,35,3,11
	.byte	'DCDCSYNC',0,1
	.word	612
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	612
	.byte	3,3,2,35,3,11
	.byte	'ESR0TRIST',0,1
	.word	612
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	612
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMSWCR0_Bits',0,4,153,7,3
	.word	39273
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,4,156,7,16,4,11
	.byte	'SCRSTEN',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'SCRSTREQ',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	612
	.byte	6,0,2,35,0,11
	.byte	'CPUIDLSEL',0,1
	.word	612
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	612
	.byte	1,4,2,35,1,11
	.byte	'IRADIS',0,1
	.word	612
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	612
	.byte	3,0,2,35,1,11
	.byte	'SCRCFG',0,1
	.word	612
	.byte	8,0,2,35,2,11
	.byte	'CPUSEL',0,1
	.word	612
	.byte	3,5,2,35,3,11
	.byte	'STBYEVEN',0,1
	.word	612
	.byte	1,4,2,35,3,11
	.byte	'STBYEV',0,1
	.word	612
	.byte	3,1,2,35,3,11
	.byte	'LCK',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,4,170,7,3
	.word	39840
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR2_Bits',0,4,173,7,16,4,11
	.byte	'SCRINT',0,1
	.word	612
	.byte	8,0,2,35,0,11
	.byte	'BUSY',0,1
	.word	612
	.byte	1,7,2,35,1,11
	.byte	'SCRECC',0,1
	.word	612
	.byte	1,6,2,35,1,11
	.byte	'SCRWDT',0,1
	.word	612
	.byte	1,5,2,35,1,11
	.byte	'SCRRST',0,1
	.word	612
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	612
	.byte	4,0,2,35,1,11
	.byte	'TCINT',0,1
	.word	612
	.byte	8,0,2,35,2,11
	.byte	'TCINTREQ',0,1
	.word	612
	.byte	1,7,2,35,3,11
	.byte	'SMURST',0,1
	.word	612
	.byte	1,6,2,35,3,11
	.byte	'RST',0,1
	.word	612
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	612
	.byte	4,1,2,35,3,11
	.byte	'LCK',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMSWCR2_Bits',0,4,187,7,3
	.word	40134
	.byte	10
	.byte	'_Ifx_SCU_PMSWSTAT_Bits',0,4,190,7,16,4,11
	.byte	'reserved_0',0,1
	.word	612
	.byte	2,6,2,35,0,11
	.byte	'ESR1WKP',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'ESR1OVRUN',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'PINAWKP',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'PINAOVRUN',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'PINBWKP',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'PINBOVRUN',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	612
	.byte	1,7,2,35,1,11
	.byte	'PORSTDF',0,1
	.word	612
	.byte	1,6,2,35,1,11
	.byte	'HWCFGEVR',0,1
	.word	612
	.byte	3,3,2,35,1,11
	.byte	'STBYRAM',0,1
	.word	612
	.byte	2,1,2,35,1,11
	.byte	'TRIST',0,1
	.word	612
	.byte	1,0,2,35,1,11
	.byte	'SCRST',0,1
	.word	612
	.byte	1,7,2,35,2,11
	.byte	'SCRWKP',0,1
	.word	612
	.byte	1,6,2,35,2,11
	.byte	'SCR',0,1
	.word	612
	.byte	1,5,2,35,2,11
	.byte	'SCRWKEN',0,1
	.word	612
	.byte	1,4,2,35,2,11
	.byte	'ESR1WKEN',0,1
	.word	612
	.byte	1,3,2,35,2,11
	.byte	'PINAWKEN',0,1
	.word	612
	.byte	1,2,2,35,2,11
	.byte	'PINBWKEN',0,1
	.word	612
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	629
	.byte	4,5,2,35,2,11
	.byte	'ESR0TRIST',0,1
	.word	612
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	612
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMSWSTAT_Bits',0,4,214,7,3
	.word	40412
	.byte	10
	.byte	'_Ifx_SCU_PMSWSTATCLR_Bits',0,4,217,7,16,4,11
	.byte	'reserved_0',0,1
	.word	612
	.byte	2,6,2,35,0,11
	.byte	'ESR1WKPCLR',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'ESR1OVRUNCLR',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'PINAWKPCLR',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'PINAOVRUNCLR',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'PINBWKPCLR',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'PINBOVRUNCLR',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	612
	.byte	8,0,2,35,1,11
	.byte	'SCRSTCLR',0,1
	.word	612
	.byte	1,7,2,35,2,11
	.byte	'SCRWKPCLR',0,1
	.word	612
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	629
	.byte	14,0,2,35,2,0,32
	.byte	'Ifx_SCU_PMSWSTATCLR_Bits',0,4,230,7,3
	.word	40908
	.byte	10
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,4,233,7,16,4,11
	.byte	'reserved_0',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'CLRC',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	629
	.byte	10,4,2,35,0,11
	.byte	'CSS0',0,1
	.word	612
	.byte	1,3,2,35,1,11
	.byte	'CSS1',0,1
	.word	612
	.byte	1,2,2,35,1,11
	.byte	'CSS2',0,1
	.word	612
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	612
	.byte	1,0,2,35,1,11
	.byte	'USRINFO',0,2
	.word	629
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_RSTCON2_Bits',0,4,243,7,3
	.word	41221
	.byte	10
	.byte	'_Ifx_SCU_RSTCON_Bits',0,4,246,7,16,4,11
	.byte	'ESR0',0,1
	.word	612
	.byte	2,6,2,35,0,11
	.byte	'ESR1',0,1
	.word	612
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	612
	.byte	2,2,2,35,0,11
	.byte	'SMU',0,1
	.word	612
	.byte	2,0,2,35,0,11
	.byte	'SW',0,1
	.word	612
	.byte	2,6,2,35,1,11
	.byte	'STM0',0,1
	.word	612
	.byte	2,4,2,35,1,11
	.byte	'STM1',0,1
	.word	612
	.byte	2,2,2,35,1,11
	.byte	'STM2',0,1
	.word	612
	.byte	2,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	629
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_RSTCON_Bits',0,4,129,8,3
	.word	41430
	.byte	10
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,4,132,8,16,4,11
	.byte	'ESR0',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'ESR1',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'SMU',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'SW',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'STM0',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'STM1',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'STM2',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	612
	.byte	8,0,2,35,1,11
	.byte	'PORST',0,1
	.word	612
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	612
	.byte	1,6,2,35,2,11
	.byte	'CB0',0,1
	.word	612
	.byte	1,5,2,35,2,11
	.byte	'CB1',0,1
	.word	612
	.byte	1,4,2,35,2,11
	.byte	'CB3',0,1
	.word	612
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	612
	.byte	2,1,2,35,2,11
	.byte	'EVR13',0,1
	.word	612
	.byte	1,0,2,35,2,11
	.byte	'EVR33',0,1
	.word	612
	.byte	1,7,2,35,3,11
	.byte	'SWD',0,1
	.word	612
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	612
	.byte	2,4,2,35,3,11
	.byte	'STBYR',0,1
	.word	612
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	612
	.byte	3,0,2,35,3,0,32
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,4,155,8,3
	.word	41641
	.byte	10
	.byte	'_Ifx_SCU_SAFECON_Bits',0,4,158,8,16,4,11
	.byte	'HBT',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	437
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_SCU_SAFECON_Bits',0,4,162,8,3
	.word	42073
	.byte	10
	.byte	'_Ifx_SCU_STSTAT_Bits',0,4,165,8,16,4,11
	.byte	'HWCFG',0,1
	.word	612
	.byte	8,0,2,35,0,11
	.byte	'FTM',0,1
	.word	612
	.byte	7,1,2,35,1,11
	.byte	'MODE',0,1
	.word	612
	.byte	1,0,2,35,1,11
	.byte	'FCBAE',0,1
	.word	612
	.byte	1,7,2,35,2,11
	.byte	'LUDIS',0,1
	.word	612
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	612
	.byte	1,5,2,35,2,11
	.byte	'TRSTL',0,1
	.word	612
	.byte	1,4,2,35,2,11
	.byte	'SPDEN',0,1
	.word	612
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	612
	.byte	3,0,2,35,2,11
	.byte	'RAMINT',0,1
	.word	612
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	612
	.byte	7,0,2,35,3,0,32
	.byte	'Ifx_SCU_STSTAT_Bits',0,4,178,8,3
	.word	42169
	.byte	10
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,4,181,8,16,4,11
	.byte	'reserved_0',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'SWRSTREQ',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	437
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,4,186,8,3
	.word	42429
	.byte	10
	.byte	'_Ifx_SCU_SYSCON_Bits',0,4,189,8,16,4,11
	.byte	'CCTRIG0',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'RAMINTM',0,1
	.word	612
	.byte	2,4,2,35,0,11
	.byte	'SETLUDIS',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	612
	.byte	3,0,2,35,0,11
	.byte	'DATM',0,1
	.word	612
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,4
	.word	437
	.byte	23,0,2,35,0,0,32
	.byte	'Ifx_SCU_SYSCON_Bits',0,4,198,8,3
	.word	42554
	.byte	10
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,4,201,8,16,4,11
	.byte	'ESR0T',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	437
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,4,208,8,3
	.word	42751
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS_Bits',0,4,211,8,16,4,11
	.byte	'ESR0T',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	437
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPDIS_Bits',0,4,218,8,3
	.word	42904
	.byte	10
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,4,221,8,16,4,11
	.byte	'ESR0T',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	437
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSET_Bits',0,4,228,8,3
	.word	43057
	.byte	10
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,4,231,8,16,4,11
	.byte	'ESR0T',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	437
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,4,238,8,3
	.word	43210
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,4,247,8,3
	.word	476
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,4,134,9,3
	.word	651
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,4,150,9,3
	.word	895
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,4,153,9,16,4,11
	.byte	'ENDINIT',0,4
	.word	460
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	460
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	460
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	460
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,4,159,9,3
	.word	43465
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,4,162,9,16,4,11
	.byte	'CLRIRF',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	612
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	612
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	629
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,4,175,9,3
	.word	43591
	.byte	10
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,4,178,9,16,4,11
	.byte	'AE',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	612
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	612
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	629
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,4,191,9,3
	.word	43843
	.byte	12,4,199,9,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25875
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN0',0,4,204,9,3
	.word	44062
	.byte	12,4,207,9,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26432
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN1',0,4,212,9,3
	.word	44126
	.byte	12,4,215,9,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26509
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ARSTDIS',0,4,220,9,3
	.word	44190
	.byte	12,4,223,9,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26645
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON0',0,4,228,9,3
	.word	44255
	.byte	12,4,231,9,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26925
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON1',0,4,236,9,3
	.word	44320
	.byte	12,4,239,9,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27163
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON2',0,4,244,9,3
	.word	44385
	.byte	12,4,247,9,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27291
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON3',0,4,252,9,3
	.word	44450
	.byte	12,4,255,9,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27534
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON4',0,4,132,10,3
	.word	44515
	.byte	12,4,135,10,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27769
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON5',0,4,140,10,3
	.word	44580
	.byte	12,4,143,10,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27897
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON6',0,4,148,10,3
	.word	44645
	.byte	12,4,151,10,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27997
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON7',0,4,156,10,3
	.word	44710
	.byte	12,4,159,10,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28097
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CHIPID',0,4,164,10,3
	.word	44775
	.byte	12,4,167,10,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28305
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_DTSCON',0,4,172,10,3
	.word	44839
	.byte	12,4,175,10,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28470
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_DTSLIM',0,4,180,10,3
	.word	44903
	.byte	12,4,183,10,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28653
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_DTSSTAT',0,4,188,10,3
	.word	44967
	.byte	12,4,191,10,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28807
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EICR',0,4,196,10,3
	.word	45032
	.byte	12,4,199,10,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29171
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EIFR',0,4,204,10,3
	.word	45094
	.byte	12,4,207,10,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29382
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EMSR',0,4,212,10,3
	.word	45156
	.byte	12,4,215,10,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29634
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ESRCFG',0,4,220,10,3
	.word	45218
	.byte	12,4,223,10,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29752
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ESROCFG',0,4,228,10,3
	.word	45282
	.byte	12,4,231,10,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29863
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVR13CON',0,4,236,10,3
	.word	45347
	.byte	12,4,239,10,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30026
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVR33CON',0,4,244,10,3
	.word	45413
	.byte	12,4,247,10,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30189
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRADCSTAT',0,4,252,10,3
	.word	45479
	.byte	12,4,255,10,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30347
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRDVSTAT',0,4,132,11,3
	.word	45547
	.byte	12,4,135,11,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30512
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRMONCTRL',0,4,140,11,3
	.word	45614
	.byte	12,4,143,11,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30841
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVROSCCTRL',0,4,148,11,3
	.word	45682
	.byte	12,4,151,11,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31062
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVROVMON',0,4,156,11,3
	.word	45750
	.byte	12,4,159,11,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31225
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRRSTCON',0,4,164,11,3
	.word	45816
	.byte	12,4,167,11,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31497
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF1',0,4,172,11,3
	.word	45883
	.byte	12,4,175,11,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31650
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF2',0,4,180,11,3
	.word	45952
	.byte	12,4,183,11,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31806
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF3',0,4,188,11,3
	.word	46021
	.byte	12,4,191,11,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31968
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF4',0,4,196,11,3
	.word	46090
	.byte	12,4,199,11,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32111
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF5',0,4,204,11,3
	.word	46159
	.byte	12,4,207,11,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32276
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF6',0,4,212,11,3
	.word	46228
	.byte	12,4,215,11,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32421
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCTRL1',0,4,220,11,3
	.word	46297
	.byte	12,4,223,11,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32602
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCTRL2',0,4,228,11,3
	.word	46365
	.byte	12,4,231,11,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32776
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCTRL3',0,4,236,11,3
	.word	46433
	.byte	12,4,239,11,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32936
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCTRL4',0,4,244,11,3
	.word	46501
	.byte	12,4,247,11,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33080
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSTAT',0,4,252,11,3
	.word	46569
	.byte	12,4,255,11,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33354
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRTRIM',0,4,132,12,3
	.word	46634
	.byte	12,4,135,12,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33493
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRUVMON',0,4,140,12,3
	.word	46699
	.byte	12,4,143,12,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33656
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EXTCON',0,4,148,12,3
	.word	46765
	.byte	12,4,151,12,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33874
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_FDR',0,4,156,12,3
	.word	46829
	.byte	12,4,159,12,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34037
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_FMR',0,4,164,12,3
	.word	46890
	.byte	12,4,167,12,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34373
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ID',0,4,172,12,3
	.word	46951
	.byte	12,4,175,12,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34480
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_IGCR',0,4,180,12,3
	.word	47011
	.byte	12,4,183,12,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34932
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_IN',0,4,188,12,3
	.word	47073
	.byte	12,4,191,12,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35031
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_IOCR',0,4,196,12,3
	.word	47133
	.byte	12,4,199,12,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35181
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL0',0,4,204,12,3
	.word	47195
	.byte	12,4,207,12,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35330
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL1',0,4,212,12,3
	.word	47263
	.byte	12,4,215,12,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35491
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL2',0,4,220,12,3
	.word	47331
	.byte	12,4,223,12,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35621
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LCLCON',0,4,228,12,3
	.word	47399
	.byte	12,4,231,12,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35753
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LCLTEST',0,4,236,12,3
	.word	47463
	.byte	12,4,239,12,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35868
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_MANID',0,4,244,12,3
	.word	47528
	.byte	12,4,247,12,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35979
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OMR',0,4,252,12,3
	.word	47591
	.byte	12,4,255,12,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36137
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OSCCON',0,4,132,13,3
	.word	47652
	.byte	12,4,135,13,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36549
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OUT',0,4,140,13,3
	.word	47716
	.byte	12,4,143,13,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36650
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OVCCON',0,4,148,13,3
	.word	47777
	.byte	12,4,151,13,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36917
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OVCENABLE',0,4,156,13,3
	.word	47841
	.byte	12,4,159,13,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37053
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PDISC',0,4,164,13,3
	.word	47908
	.byte	12,4,167,13,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37164
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PDR',0,4,172,13,3
	.word	47971
	.byte	12,4,175,13,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37297
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PDRR',0,4,180,13,3
	.word	48032
	.byte	12,4,183,13,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37500
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLCON0',0,4,188,13,3
	.word	48094
	.byte	12,4,191,13,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37856
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLCON1',0,4,196,13,3
	.word	48159
	.byte	12,4,199,13,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38034
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLCON2',0,4,204,13,3
	.word	48224
	.byte	12,4,207,13,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38134
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLERAYCON0',0,4,212,13,3
	.word	48289
	.byte	12,4,215,13,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38504
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLERAYCON1',0,4,220,13,3
	.word	48358
	.byte	12,4,223,13,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38690
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLERAYSTAT',0,4,228,13,3
	.word	48427
	.byte	12,4,231,13,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38888
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLSTAT',0,4,236,13,3
	.word	48496
	.byte	12,4,239,13,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39121
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR',0,4,244,13,3
	.word	48561
	.byte	12,4,247,13,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39273
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWCR0',0,4,252,13,3
	.word	48624
	.byte	12,4,255,13,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39840
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWCR1',0,4,132,14,3
	.word	48689
	.byte	12,4,135,14,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40134
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWCR2',0,4,140,14,3
	.word	48754
	.byte	12,4,143,14,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40412
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWSTAT',0,4,148,14,3
	.word	48819
	.byte	12,4,151,14,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40908
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWSTATCLR',0,4,156,14,3
	.word	48885
	.byte	12,4,159,14,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41430
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_RSTCON',0,4,164,14,3
	.word	48954
	.byte	12,4,167,14,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41221
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_RSTCON2',0,4,172,14,3
	.word	49018
	.byte	12,4,175,14,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41641
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_RSTSTAT',0,4,180,14,3
	.word	49083
	.byte	12,4,183,14,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42073
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SAFECON',0,4,188,14,3
	.word	49148
	.byte	12,4,191,14,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42169
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STSTAT',0,4,196,14,3
	.word	49213
	.byte	12,4,199,14,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42429
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SWRSTCON',0,4,204,14,3
	.word	49277
	.byte	12,4,207,14,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42554
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SYSCON',0,4,212,14,3
	.word	49343
	.byte	12,4,215,14,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42751
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPCLR',0,4,220,14,3
	.word	49407
	.byte	12,4,223,14,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42904
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPDIS',0,4,228,14,3
	.word	49472
	.byte	12,4,231,14,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43057
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSET',0,4,236,14,3
	.word	49537
	.byte	12,4,239,14,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43210
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSTAT',0,4,244,14,3
	.word	49602
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON0',0,4,252,14,3
	.word	572
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON1',0,4,132,15,3
	.word	855
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_SR',0,4,140,15,3
	.word	1086
	.byte	12,4,143,15,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43465
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_CON0',0,4,148,15,3
	.word	49753
	.byte	12,4,151,15,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43591
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_CON1',0,4,156,15,3
	.word	49820
	.byte	12,4,159,15,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43843
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_SR',0,4,164,15,3
	.word	49887
	.byte	14
	.word	1126
	.byte	32
	.byte	'Ifx_SCU_WDTCPU',0,4,180,15,3
	.word	49952
	.byte	10
	.byte	'_Ifx_SCU_WDTS',0,4,183,15,25,12,13
	.byte	'CON0',0
	.word	49753
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	49820
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	49887
	.byte	4,2,35,8,0,14
	.word	49981
	.byte	32
	.byte	'Ifx_SCU_WDTS',0,4,188,15,3
	.word	50042
	.byte	18,8
	.word	45218
	.byte	19,1,0,18,20
	.word	612
	.byte	19,19,0,18,8
	.word	48561
	.byte	19,1,0,14
	.word	49981
	.byte	18,24
	.word	1126
	.byte	19,1,0,14
	.word	50101
	.byte	18,16
	.word	612
	.byte	19,15,0,18,28
	.word	612
	.byte	19,27,0,18,40
	.word	612
	.byte	19,39,0,18,16
	.word	45032
	.byte	19,3,0,18,16
	.word	47011
	.byte	19,3,0,18,180,3
	.word	612
	.byte	19,179,3,0,10
	.byte	'_Ifx_SCU',0,4,201,15,25,128,8,13
	.byte	'reserved_0',0
	.word	5190
	.byte	8,2,35,0,13
	.byte	'ID',0
	.word	46951
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3371
	.byte	4,2,35,12,13
	.byte	'OSCCON',0
	.word	47652
	.byte	4,2,35,16,13
	.byte	'PLLSTAT',0
	.word	48496
	.byte	4,2,35,20,13
	.byte	'PLLCON0',0
	.word	48094
	.byte	4,2,35,24,13
	.byte	'PLLCON1',0
	.word	48159
	.byte	4,2,35,28,13
	.byte	'PLLCON2',0
	.word	48224
	.byte	4,2,35,32,13
	.byte	'PLLERAYSTAT',0
	.word	48427
	.byte	4,2,35,36,13
	.byte	'PLLERAYCON0',0
	.word	48289
	.byte	4,2,35,40,13
	.byte	'PLLERAYCON1',0
	.word	48358
	.byte	4,2,35,44,13
	.byte	'CCUCON0',0
	.word	44255
	.byte	4,2,35,48,13
	.byte	'CCUCON1',0
	.word	44320
	.byte	4,2,35,52,13
	.byte	'FDR',0
	.word	46829
	.byte	4,2,35,56,13
	.byte	'EXTCON',0
	.word	46765
	.byte	4,2,35,60,13
	.byte	'CCUCON2',0
	.word	44385
	.byte	4,2,35,64,13
	.byte	'CCUCON3',0
	.word	44450
	.byte	4,2,35,68,13
	.byte	'CCUCON4',0
	.word	44515
	.byte	4,2,35,72,13
	.byte	'CCUCON5',0
	.word	44580
	.byte	4,2,35,76,13
	.byte	'RSTSTAT',0
	.word	49083
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	3371
	.byte	4,2,35,84,13
	.byte	'RSTCON',0
	.word	48954
	.byte	4,2,35,88,13
	.byte	'ARSTDIS',0
	.word	44190
	.byte	4,2,35,92,13
	.byte	'SWRSTCON',0
	.word	49277
	.byte	4,2,35,96,13
	.byte	'RSTCON2',0
	.word	49018
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	3371
	.byte	4,2,35,104,13
	.byte	'EVRRSTCON',0
	.word	45816
	.byte	4,2,35,108,13
	.byte	'ESRCFG',0
	.word	50069
	.byte	8,2,35,112,13
	.byte	'ESROCFG',0
	.word	45282
	.byte	4,2,35,120,13
	.byte	'SYSCON',0
	.word	49343
	.byte	4,2,35,124,13
	.byte	'CCUCON6',0
	.word	44645
	.byte	4,3,35,128,1,13
	.byte	'CCUCON7',0
	.word	44710
	.byte	4,3,35,132,1,13
	.byte	'reserved_88',0
	.word	50078
	.byte	20,3,35,136,1,13
	.byte	'PDR',0
	.word	47971
	.byte	4,3,35,156,1,13
	.byte	'IOCR',0
	.word	47133
	.byte	4,3,35,160,1,13
	.byte	'OUT',0
	.word	47716
	.byte	4,3,35,164,1,13
	.byte	'OMR',0
	.word	47591
	.byte	4,3,35,168,1,13
	.byte	'IN',0
	.word	47073
	.byte	4,3,35,172,1,13
	.byte	'EVRSTAT',0
	.word	46569
	.byte	4,3,35,176,1,13
	.byte	'EVRDVSTAT',0
	.word	45547
	.byte	4,3,35,180,1,13
	.byte	'EVR13CON',0
	.word	45347
	.byte	4,3,35,184,1,13
	.byte	'EVR33CON',0
	.word	45413
	.byte	4,3,35,188,1,13
	.byte	'STSTAT',0
	.word	49213
	.byte	4,3,35,192,1,13
	.byte	'reserved_C4',0
	.word	3371
	.byte	4,3,35,196,1,13
	.byte	'PMSWCR0',0
	.word	48624
	.byte	4,3,35,200,1,13
	.byte	'PMSWSTAT',0
	.word	48819
	.byte	4,3,35,204,1,13
	.byte	'PMSWSTATCLR',0
	.word	48885
	.byte	4,3,35,208,1,13
	.byte	'PMCSR',0
	.word	50087
	.byte	8,3,35,212,1,13
	.byte	'reserved_DC',0
	.word	3371
	.byte	4,3,35,220,1,13
	.byte	'DTSSTAT',0
	.word	44967
	.byte	4,3,35,224,1,13
	.byte	'DTSCON',0
	.word	44839
	.byte	4,3,35,228,1,13
	.byte	'PMSWCR1',0
	.word	48689
	.byte	4,3,35,232,1,13
	.byte	'PMSWCR2',0
	.word	48754
	.byte	4,3,35,236,1,13
	.byte	'WDTS',0
	.word	50096
	.byte	12,3,35,240,1,13
	.byte	'EMSR',0
	.word	45156
	.byte	4,3,35,252,1,13
	.byte	'WDTCPU',0
	.word	50110
	.byte	24,3,35,128,2,13
	.byte	'reserved_118',0
	.word	5530
	.byte	12,3,35,152,2,13
	.byte	'TRAPSTAT',0
	.word	49602
	.byte	4,3,35,164,2,13
	.byte	'TRAPSET',0
	.word	49537
	.byte	4,3,35,168,2,13
	.byte	'TRAPCLR',0
	.word	49407
	.byte	4,3,35,172,2,13
	.byte	'TRAPDIS',0
	.word	49472
	.byte	4,3,35,176,2,13
	.byte	'reserved_134',0
	.word	3371
	.byte	4,3,35,180,2,13
	.byte	'LCLCON1',0
	.word	47399
	.byte	4,3,35,184,2,13
	.byte	'LCLTEST',0
	.word	47463
	.byte	4,3,35,188,2,13
	.byte	'CHIPID',0
	.word	44775
	.byte	4,3,35,192,2,13
	.byte	'MANID',0
	.word	47528
	.byte	4,3,35,196,2,13
	.byte	'reserved_148',0
	.word	5190
	.byte	8,3,35,200,2,13
	.byte	'SAFECON',0
	.word	49148
	.byte	4,3,35,208,2,13
	.byte	'reserved_154',0
	.word	50115
	.byte	16,3,35,212,2,13
	.byte	'LBISTCTRL0',0
	.word	47195
	.byte	4,3,35,228,2,13
	.byte	'LBISTCTRL1',0
	.word	47263
	.byte	4,3,35,232,2,13
	.byte	'LBISTCTRL2',0
	.word	47331
	.byte	4,3,35,236,2,13
	.byte	'reserved_170',0
	.word	50124
	.byte	28,3,35,240,2,13
	.byte	'PDISC',0
	.word	47908
	.byte	4,3,35,140,3,13
	.byte	'reserved_190',0
	.word	5190
	.byte	8,3,35,144,3,13
	.byte	'EVRTRIM',0
	.word	46634
	.byte	4,3,35,152,3,13
	.byte	'EVRADCSTAT',0
	.word	45479
	.byte	4,3,35,156,3,13
	.byte	'EVRUVMON',0
	.word	46699
	.byte	4,3,35,160,3,13
	.byte	'EVROVMON',0
	.word	45750
	.byte	4,3,35,164,3,13
	.byte	'EVRMONCTRL',0
	.word	45614
	.byte	4,3,35,168,3,13
	.byte	'reserved_1AC',0
	.word	3371
	.byte	4,3,35,172,3,13
	.byte	'EVRSDCTRL1',0
	.word	46297
	.byte	4,3,35,176,3,13
	.byte	'EVRSDCTRL2',0
	.word	46365
	.byte	4,3,35,180,3,13
	.byte	'EVRSDCTRL3',0
	.word	46433
	.byte	4,3,35,184,3,13
	.byte	'EVRSDCTRL4',0
	.word	46501
	.byte	4,3,35,188,3,13
	.byte	'EVRSDCOEFF1',0
	.word	45883
	.byte	4,3,35,192,3,13
	.byte	'EVRSDCOEFF2',0
	.word	45952
	.byte	4,3,35,196,3,13
	.byte	'EVRSDCOEFF3',0
	.word	46021
	.byte	4,3,35,200,3,13
	.byte	'EVRSDCOEFF4',0
	.word	46090
	.byte	4,3,35,204,3,13
	.byte	'EVRSDCOEFF5',0
	.word	46159
	.byte	4,3,35,208,3,13
	.byte	'EVRSDCOEFF6',0
	.word	46228
	.byte	4,3,35,212,3,13
	.byte	'EVROSCCTRL',0
	.word	45682
	.byte	4,3,35,216,3,13
	.byte	'reserved_1DC',0
	.word	3371
	.byte	4,3,35,220,3,13
	.byte	'OVCENABLE',0
	.word	47841
	.byte	4,3,35,224,3,13
	.byte	'OVCCON',0
	.word	47777
	.byte	4,3,35,228,3,13
	.byte	'reserved_1E8',0
	.word	50133
	.byte	40,3,35,232,3,13
	.byte	'EICR',0
	.word	50142
	.byte	16,3,35,144,4,13
	.byte	'EIFR',0
	.word	45094
	.byte	4,3,35,160,4,13
	.byte	'FMR',0
	.word	46890
	.byte	4,3,35,164,4,13
	.byte	'PDRR',0
	.word	48032
	.byte	4,3,35,168,4,13
	.byte	'IGCR',0
	.word	50151
	.byte	16,3,35,172,4,13
	.byte	'reserved_23C',0
	.word	3371
	.byte	4,3,35,188,4,13
	.byte	'DTSLIM',0
	.word	44903
	.byte	4,3,35,192,4,13
	.byte	'reserved_244',0
	.word	50160
	.byte	180,3,3,35,196,4,13
	.byte	'ACCEN1',0
	.word	44126
	.byte	4,3,35,248,7,13
	.byte	'ACCEN0',0
	.word	44062
	.byte	4,3,35,252,7,0,14
	.word	50171
	.byte	32
	.byte	'Ifx_SCU',0,4,181,16,3
	.word	52161
	.byte	32
	.byte	'IfxSent_ChannelId',0,14,95,3
	.word	17138
	.byte	32
	.byte	'IfxSrc_Tos',0,7,74,3
	.word	1843
	.byte	32
	.byte	'Ifx_SRC_SRCR_Bits',0,6,62,3
	.word	1424
	.byte	32
	.byte	'Ifx_SRC_SRCR',0,6,75,3
	.word	1714
	.byte	10
	.byte	'_Ifx_SRC_AGBT',0,6,86,25,4,13
	.byte	'SR',0
	.word	1714
	.byte	4,2,35,0,0,14
	.word	52275
	.byte	32
	.byte	'Ifx_SRC_AGBT',0,6,89,3
	.word	52307
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN',0,6,92,25,12,13
	.byte	'TX',0
	.word	1714
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	1714
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	1714
	.byte	4,2,35,8,0,14
	.word	52333
	.byte	32
	.byte	'Ifx_SRC_ASCLIN',0,6,97,3
	.word	52392
	.byte	10
	.byte	'_Ifx_SRC_BCUSPB',0,6,100,25,4,13
	.byte	'SBSRC',0
	.word	1714
	.byte	4,2,35,0,0,14
	.word	52420
	.byte	32
	.byte	'Ifx_SRC_BCUSPB',0,6,103,3
	.word	52457
	.byte	18,64
	.word	1714
	.byte	19,15,0,10
	.byte	'_Ifx_SRC_CAN',0,6,106,25,64,13
	.byte	'INT',0
	.word	52485
	.byte	64,2,35,0,0,14
	.word	52494
	.byte	32
	.byte	'Ifx_SRC_CAN',0,6,109,3
	.word	52526
	.byte	10
	.byte	'_Ifx_SRC_CCU6',0,6,112,25,16,13
	.byte	'SR0',0
	.word	1714
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	1714
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	1714
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	1714
	.byte	4,2,35,12,0,14
	.word	52551
	.byte	32
	.byte	'Ifx_SRC_CCU6',0,6,118,3
	.word	52623
	.byte	18,8
	.word	1714
	.byte	19,1,0,10
	.byte	'_Ifx_SRC_CERBERUS',0,6,121,25,8,13
	.byte	'SR',0
	.word	52649
	.byte	8,2,35,0,0,14
	.word	52658
	.byte	32
	.byte	'Ifx_SRC_CERBERUS',0,6,124,3
	.word	52694
	.byte	10
	.byte	'_Ifx_SRC_CIF',0,6,127,25,16,13
	.byte	'MI',0
	.word	1714
	.byte	4,2,35,0,13
	.byte	'MIEP',0
	.word	1714
	.byte	4,2,35,4,13
	.byte	'ISP',0
	.word	1714
	.byte	4,2,35,8,13
	.byte	'MJPEG',0
	.word	1714
	.byte	4,2,35,12,0,14
	.word	52724
	.byte	32
	.byte	'Ifx_SRC_CIF',0,6,133,1,3
	.word	52797
	.byte	10
	.byte	'_Ifx_SRC_CPU',0,6,136,1,25,4,13
	.byte	'SBSRC',0
	.word	1714
	.byte	4,2,35,0,0,14
	.word	52823
	.byte	32
	.byte	'Ifx_SRC_CPU',0,6,139,1,3
	.word	52858
	.byte	18,192,1
	.word	1714
	.byte	19,47,0,10
	.byte	'_Ifx_SRC_DMA',0,6,142,1,25,208,1,13
	.byte	'ERR',0
	.word	1714
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	5530
	.byte	12,2,35,4,13
	.byte	'CH',0
	.word	52884
	.byte	192,1,2,35,16,0,14
	.word	52894
	.byte	32
	.byte	'Ifx_SRC_DMA',0,6,147,1,3
	.word	52961
	.byte	10
	.byte	'_Ifx_SRC_DSADC',0,6,150,1,25,8,13
	.byte	'SRM',0
	.word	1714
	.byte	4,2,35,0,13
	.byte	'SRA',0
	.word	1714
	.byte	4,2,35,4,0,14
	.word	52987
	.byte	32
	.byte	'Ifx_SRC_DSADC',0,6,154,1,3
	.word	53035
	.byte	10
	.byte	'_Ifx_SRC_EMEM',0,6,157,1,25,4,13
	.byte	'SR',0
	.word	1714
	.byte	4,2,35,0,0,14
	.word	53063
	.byte	32
	.byte	'Ifx_SRC_EMEM',0,6,160,1,3
	.word	53096
	.byte	10
	.byte	'_Ifx_SRC_ERAY',0,6,163,1,25,80,13
	.byte	'INT',0
	.word	52649
	.byte	8,2,35,0,13
	.byte	'TINT',0
	.word	52649
	.byte	8,2,35,8,13
	.byte	'NDAT',0
	.word	52649
	.byte	8,2,35,16,13
	.byte	'MBSC',0
	.word	52649
	.byte	8,2,35,24,13
	.byte	'OBUSY',0
	.word	1714
	.byte	4,2,35,32,13
	.byte	'IBUSY',0
	.word	1714
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	50133
	.byte	40,2,35,40,0,14
	.word	53123
	.byte	32
	.byte	'Ifx_SRC_ERAY',0,6,172,1,3
	.word	53250
	.byte	10
	.byte	'_Ifx_SRC_ETH',0,6,175,1,25,4,13
	.byte	'SR',0
	.word	1714
	.byte	4,2,35,0,0,14
	.word	53277
	.byte	32
	.byte	'Ifx_SRC_ETH',0,6,178,1,3
	.word	53309
	.byte	10
	.byte	'_Ifx_SRC_FCE',0,6,181,1,25,4,13
	.byte	'SR',0
	.word	1714
	.byte	4,2,35,0,0,14
	.word	53335
	.byte	32
	.byte	'Ifx_SRC_FCE',0,6,184,1,3
	.word	53367
	.byte	10
	.byte	'_Ifx_SRC_FFT',0,6,187,1,25,12,13
	.byte	'DONE',0
	.word	1714
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	1714
	.byte	4,2,35,4,13
	.byte	'RFS',0
	.word	1714
	.byte	4,2,35,8,0,14
	.word	53393
	.byte	32
	.byte	'Ifx_SRC_FFT',0,6,192,1,3
	.word	53453
	.byte	10
	.byte	'_Ifx_SRC_GPSR',0,6,195,1,25,32,13
	.byte	'SR0',0
	.word	1714
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	1714
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	1714
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	1714
	.byte	4,2,35,12,13
	.byte	'reserved_10',0
	.word	50115
	.byte	16,2,35,16,0,14
	.word	53479
	.byte	32
	.byte	'Ifx_SRC_GPSR',0,6,202,1,3
	.word	53573
	.byte	10
	.byte	'_Ifx_SRC_GPT12',0,6,205,1,25,48,13
	.byte	'CIRQ',0
	.word	1714
	.byte	4,2,35,0,13
	.byte	'T2',0
	.word	1714
	.byte	4,2,35,4,13
	.byte	'T3',0
	.word	1714
	.byte	4,2,35,8,13
	.byte	'T4',0
	.word	1714
	.byte	4,2,35,12,13
	.byte	'T5',0
	.word	1714
	.byte	4,2,35,16,13
	.byte	'T6',0
	.word	1714
	.byte	4,2,35,20,13
	.byte	'reserved_18',0
	.word	4561
	.byte	24,2,35,24,0,14
	.word	53600
	.byte	32
	.byte	'Ifx_SRC_GPT12',0,6,214,1,3
	.word	53717
	.byte	18,12
	.word	1714
	.byte	19,2,0,18,32
	.word	1714
	.byte	19,7,0,18,32
	.word	53754
	.byte	19,0,0,18,88
	.word	612
	.byte	19,87,0,18,108
	.word	1714
	.byte	19,26,0,18,96
	.word	53754
	.byte	19,2,0,18,160,3
	.word	612
	.byte	19,159,3,0,18,64
	.word	53754
	.byte	19,1,0,18,192,3
	.word	612
	.byte	19,191,3,0,18,16
	.word	1714
	.byte	19,3,0,18,64
	.word	53830
	.byte	19,3,0,18,192,2
	.word	612
	.byte	19,191,2,0,18,52
	.word	612
	.byte	19,51,0,10
	.byte	'_Ifx_SRC_GTM',0,6,217,1,25,204,18,13
	.byte	'AEIIRQ',0
	.word	1714
	.byte	4,2,35,0,13
	.byte	'ARUIRQ',0
	.word	53745
	.byte	12,2,35,4,13
	.byte	'reserved_10',0
	.word	3371
	.byte	4,2,35,16,13
	.byte	'BRCIRQ',0
	.word	1714
	.byte	4,2,35,20,13
	.byte	'CMPIRQ',0
	.word	1714
	.byte	4,2,35,24,13
	.byte	'SPEIRQ',0
	.word	52649
	.byte	8,2,35,28,13
	.byte	'reserved_24',0
	.word	5190
	.byte	8,2,35,36,13
	.byte	'PSM',0
	.word	53763
	.byte	32,2,35,44,13
	.byte	'reserved_4C',0
	.word	53772
	.byte	88,2,35,76,13
	.byte	'DPLL',0
	.word	53781
	.byte	108,3,35,164,1,13
	.byte	'reserved_110',0
	.word	11743
	.byte	96,3,35,144,2,13
	.byte	'ERR',0
	.word	1714
	.byte	4,3,35,240,2,13
	.byte	'reserved_174',0
	.word	5530
	.byte	12,3,35,244,2,13
	.byte	'TIM',0
	.word	53790
	.byte	96,3,35,128,3,13
	.byte	'reserved_1E0',0
	.word	53799
	.byte	160,3,3,35,224,3,13
	.byte	'MCS',0
	.word	53790
	.byte	96,3,35,128,7,13
	.byte	'reserved_3E0',0
	.word	53799
	.byte	160,3,3,35,224,7,13
	.byte	'TOM',0
	.word	53810
	.byte	64,3,35,128,11,13
	.byte	'reserved_5C0',0
	.word	53819
	.byte	192,3,3,35,192,11,13
	.byte	'ATOM',0
	.word	53839
	.byte	64,3,35,128,15,13
	.byte	'reserved_7C0',0
	.word	53848
	.byte	192,2,3,35,192,15,13
	.byte	'MCSW0',0
	.word	53745
	.byte	12,3,35,128,18,13
	.byte	'reserved_90C',0
	.word	53859
	.byte	52,3,35,140,18,13
	.byte	'MCSW1',0
	.word	53745
	.byte	12,3,35,192,18,0,14
	.word	53868
	.byte	32
	.byte	'Ifx_SRC_GTM',0,6,243,1,3
	.word	54328
	.byte	10
	.byte	'_Ifx_SRC_HSCT',0,6,246,1,25,4,13
	.byte	'SR',0
	.word	1714
	.byte	4,2,35,0,0,14
	.word	54354
	.byte	32
	.byte	'Ifx_SRC_HSCT',0,6,249,1,3
	.word	54387
	.byte	10
	.byte	'_Ifx_SRC_HSSL',0,6,252,1,25,16,13
	.byte	'COK',0
	.word	1714
	.byte	4,2,35,0,13
	.byte	'RDI',0
	.word	1714
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	1714
	.byte	4,2,35,8,13
	.byte	'TRG',0
	.word	1714
	.byte	4,2,35,12,0,14
	.word	54414
	.byte	32
	.byte	'Ifx_SRC_HSSL',0,6,130,2,3
	.word	54487
	.byte	18,56
	.word	612
	.byte	19,55,0,10
	.byte	'_Ifx_SRC_I2C',0,6,133,2,25,80,13
	.byte	'BREQ',0
	.word	1714
	.byte	4,2,35,0,13
	.byte	'LBREQ',0
	.word	1714
	.byte	4,2,35,4,13
	.byte	'SREQ',0
	.word	1714
	.byte	4,2,35,8,13
	.byte	'LSREQ',0
	.word	1714
	.byte	4,2,35,12,13
	.byte	'ERR',0
	.word	1714
	.byte	4,2,35,16,13
	.byte	'P',0
	.word	1714
	.byte	4,2,35,20,13
	.byte	'reserved_18',0
	.word	54514
	.byte	56,2,35,24,0,14
	.word	54523
	.byte	32
	.byte	'Ifx_SRC_I2C',0,6,142,2,3
	.word	54646
	.byte	10
	.byte	'_Ifx_SRC_LMU',0,6,145,2,25,4,13
	.byte	'SR',0
	.word	1714
	.byte	4,2,35,0,0,14
	.word	54672
	.byte	32
	.byte	'Ifx_SRC_LMU',0,6,148,2,3
	.word	54704
	.byte	10
	.byte	'_Ifx_SRC_MSC',0,6,151,2,25,20,13
	.byte	'SR0',0
	.word	1714
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	1714
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	1714
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	1714
	.byte	4,2,35,12,13
	.byte	'SR4',0
	.word	1714
	.byte	4,2,35,16,0,14
	.word	54730
	.byte	32
	.byte	'Ifx_SRC_MSC',0,6,158,2,3
	.word	54815
	.byte	10
	.byte	'_Ifx_SRC_PMU',0,6,161,2,25,4,13
	.byte	'SR',0
	.word	1714
	.byte	4,2,35,0,0,14
	.word	54841
	.byte	32
	.byte	'Ifx_SRC_PMU',0,6,164,2,3
	.word	54873
	.byte	10
	.byte	'_Ifx_SRC_PSI5',0,6,167,2,25,32,13
	.byte	'SR',0
	.word	53754
	.byte	32,2,35,0,0,14
	.word	54899
	.byte	32
	.byte	'Ifx_SRC_PSI5',0,6,170,2,3
	.word	54932
	.byte	10
	.byte	'_Ifx_SRC_PSI5S',0,6,173,2,25,32,13
	.byte	'SR',0
	.word	53754
	.byte	32,2,35,0,0,14
	.word	54959
	.byte	32
	.byte	'Ifx_SRC_PSI5S',0,6,176,2,3
	.word	54993
	.byte	10
	.byte	'_Ifx_SRC_QSPI',0,6,179,2,25,24,13
	.byte	'TX',0
	.word	1714
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	1714
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	1714
	.byte	4,2,35,8,13
	.byte	'PT',0
	.word	1714
	.byte	4,2,35,12,13
	.byte	'HC',0
	.word	1714
	.byte	4,2,35,16,13
	.byte	'U',0
	.word	1714
	.byte	4,2,35,20,0,14
	.word	55021
	.byte	32
	.byte	'Ifx_SRC_QSPI',0,6,187,2,3
	.word	55114
	.byte	10
	.byte	'_Ifx_SRC_SCR',0,6,190,2,25,4,13
	.byte	'SR',0
	.word	1714
	.byte	4,2,35,0,0,14
	.word	55141
	.byte	32
	.byte	'Ifx_SRC_SCR',0,6,193,2,3
	.word	55173
	.byte	10
	.byte	'_Ifx_SRC_SCU',0,6,196,2,25,20,13
	.byte	'DTS',0
	.word	1714
	.byte	4,2,35,0,13
	.byte	'ERU',0
	.word	53830
	.byte	16,2,35,4,0,14
	.word	55199
	.byte	32
	.byte	'Ifx_SRC_SCU',0,6,200,2,3
	.word	55245
	.byte	18,24
	.word	1714
	.byte	19,5,0,10
	.byte	'_Ifx_SRC_SENT',0,6,203,2,25,24,13
	.byte	'SR',0
	.word	55271
	.byte	24,2,35,0,0,14
	.word	55280
	.byte	32
	.byte	'Ifx_SRC_SENT',0,6,206,2,3
	.word	55313
	.byte	10
	.byte	'_Ifx_SRC_SMU',0,6,209,2,25,12,13
	.byte	'SR',0
	.word	53745
	.byte	12,2,35,0,0,14
	.word	55340
	.byte	32
	.byte	'Ifx_SRC_SMU',0,6,212,2,3
	.word	55372
	.byte	10
	.byte	'_Ifx_SRC_STM',0,6,215,2,25,8,13
	.byte	'SR0',0
	.word	1714
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	1714
	.byte	4,2,35,4,0,14
	.word	55398
	.byte	32
	.byte	'Ifx_SRC_STM',0,6,219,2,3
	.word	55444
	.byte	10
	.byte	'_Ifx_SRC_VADCCG',0,6,222,2,25,16,13
	.byte	'SR0',0
	.word	1714
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	1714
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	1714
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	1714
	.byte	4,2,35,12,0,14
	.word	55470
	.byte	32
	.byte	'Ifx_SRC_VADCCG',0,6,228,2,3
	.word	55545
	.byte	10
	.byte	'_Ifx_SRC_VADCG',0,6,231,2,25,16,13
	.byte	'SR0',0
	.word	1714
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	1714
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	1714
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	1714
	.byte	4,2,35,12,0,14
	.word	55574
	.byte	32
	.byte	'Ifx_SRC_VADCG',0,6,237,2,3
	.word	55648
	.byte	10
	.byte	'_Ifx_SRC_XBAR',0,6,240,2,25,4,13
	.byte	'SRC',0
	.word	1714
	.byte	4,2,35,0,0,14
	.word	55676
	.byte	32
	.byte	'Ifx_SRC_XBAR',0,6,243,2,3
	.word	55710
	.byte	18,4
	.word	52275
	.byte	19,0,0,14
	.word	55737
	.byte	10
	.byte	'_Ifx_SRC_GAGBT',0,6,128,3,25,4,13
	.byte	'AGBT',0
	.word	55746
	.byte	4,2,35,0,0,14
	.word	55751
	.byte	32
	.byte	'Ifx_SRC_GAGBT',0,6,131,3,3
	.word	55787
	.byte	18,48
	.word	52333
	.byte	19,3,0,14
	.word	55815
	.byte	10
	.byte	'_Ifx_SRC_GASCLIN',0,6,134,3,25,48,13
	.byte	'ASCLIN',0
	.word	55824
	.byte	48,2,35,0,0,14
	.word	55829
	.byte	32
	.byte	'Ifx_SRC_GASCLIN',0,6,137,3,3
	.word	55869
	.byte	14
	.word	52420
	.byte	10
	.byte	'_Ifx_SRC_GBCU',0,6,140,3,25,4,13
	.byte	'SPB',0
	.word	55899
	.byte	4,2,35,0,0,14
	.word	55904
	.byte	32
	.byte	'Ifx_SRC_GBCU',0,6,143,3,3
	.word	55938
	.byte	18,64
	.word	52494
	.byte	19,0,0,14
	.word	55965
	.byte	10
	.byte	'_Ifx_SRC_GCAN',0,6,146,3,25,64,13
	.byte	'CAN',0
	.word	55974
	.byte	64,2,35,0,0,14
	.word	55979
	.byte	32
	.byte	'Ifx_SRC_GCAN',0,6,149,3,3
	.word	56013
	.byte	18,32
	.word	52551
	.byte	19,1,0,14
	.word	56040
	.byte	10
	.byte	'_Ifx_SRC_GCCU6',0,6,152,3,25,32,13
	.byte	'CCU6',0
	.word	56049
	.byte	32,2,35,0,0,14
	.word	56054
	.byte	32
	.byte	'Ifx_SRC_GCCU6',0,6,155,3,3
	.word	56090
	.byte	14
	.word	52658
	.byte	10
	.byte	'_Ifx_SRC_GCERBERUS',0,6,158,3,25,8,13
	.byte	'CERBERUS',0
	.word	56118
	.byte	8,2,35,0,0,14
	.word	56123
	.byte	32
	.byte	'Ifx_SRC_GCERBERUS',0,6,161,3,3
	.word	56167
	.byte	18,16
	.word	52724
	.byte	19,0,0,14
	.word	56199
	.byte	10
	.byte	'_Ifx_SRC_GCIF',0,6,164,3,25,16,13
	.byte	'CIF',0
	.word	56208
	.byte	16,2,35,0,0,14
	.word	56213
	.byte	32
	.byte	'Ifx_SRC_GCIF',0,6,167,3,3
	.word	56247
	.byte	18,8
	.word	52823
	.byte	19,1,0,14
	.word	56274
	.byte	10
	.byte	'_Ifx_SRC_GCPU',0,6,170,3,25,8,13
	.byte	'CPU',0
	.word	56283
	.byte	8,2,35,0,0,14
	.word	56288
	.byte	32
	.byte	'Ifx_SRC_GCPU',0,6,173,3,3
	.word	56322
	.byte	18,208,1
	.word	52894
	.byte	19,0,0,14
	.word	56349
	.byte	10
	.byte	'_Ifx_SRC_GDMA',0,6,176,3,25,208,1,13
	.byte	'DMA',0
	.word	56359
	.byte	208,1,2,35,0,0,14
	.word	56364
	.byte	32
	.byte	'Ifx_SRC_GDMA',0,6,179,3,3
	.word	56400
	.byte	14
	.word	52987
	.byte	14
	.word	52987
	.byte	14
	.word	52987
	.byte	10
	.byte	'_Ifx_SRC_GDSADC',0,6,182,3,25,32,13
	.byte	'DSADC0',0
	.word	56427
	.byte	8,2,35,0,13
	.byte	'reserved_8',0
	.word	5190
	.byte	8,2,35,8,13
	.byte	'DSADC2',0
	.word	56432
	.byte	8,2,35,16,13
	.byte	'DSADC3',0
	.word	56437
	.byte	8,2,35,24,0,14
	.word	56442
	.byte	32
	.byte	'Ifx_SRC_GDSADC',0,6,188,3,3
	.word	56533
	.byte	18,4
	.word	53063
	.byte	19,0,0,14
	.word	56562
	.byte	10
	.byte	'_Ifx_SRC_GEMEM',0,6,191,3,25,4,13
	.byte	'EMEM',0
	.word	56571
	.byte	4,2,35,0,0,14
	.word	56576
	.byte	32
	.byte	'Ifx_SRC_GEMEM',0,6,194,3,3
	.word	56612
	.byte	18,80
	.word	53123
	.byte	19,0,0,14
	.word	56640
	.byte	10
	.byte	'_Ifx_SRC_GERAY',0,6,197,3,25,80,13
	.byte	'ERAY',0
	.word	56649
	.byte	80,2,35,0,0,14
	.word	56654
	.byte	32
	.byte	'Ifx_SRC_GERAY',0,6,200,3,3
	.word	56690
	.byte	18,4
	.word	53277
	.byte	19,0,0,14
	.word	56718
	.byte	10
	.byte	'_Ifx_SRC_GETH',0,6,203,3,25,4,13
	.byte	'ETH',0
	.word	56727
	.byte	4,2,35,0,0,14
	.word	56732
	.byte	32
	.byte	'Ifx_SRC_GETH',0,6,206,3,3
	.word	56766
	.byte	18,4
	.word	53335
	.byte	19,0,0,14
	.word	56793
	.byte	10
	.byte	'_Ifx_SRC_GFCE',0,6,209,3,25,4,13
	.byte	'FCE',0
	.word	56802
	.byte	4,2,35,0,0,14
	.word	56807
	.byte	32
	.byte	'Ifx_SRC_GFCE',0,6,212,3,3
	.word	56841
	.byte	18,12
	.word	53393
	.byte	19,0,0,14
	.word	56868
	.byte	10
	.byte	'_Ifx_SRC_GFFT',0,6,215,3,25,12,13
	.byte	'FFT',0
	.word	56877
	.byte	12,2,35,0,0,14
	.word	56882
	.byte	32
	.byte	'Ifx_SRC_GFFT',0,6,218,3,3
	.word	56916
	.byte	18,64
	.word	53479
	.byte	19,1,0,14
	.word	56943
	.byte	10
	.byte	'_Ifx_SRC_GGPSR',0,6,221,3,25,64,13
	.byte	'GPSR',0
	.word	56952
	.byte	64,2,35,0,0,14
	.word	56957
	.byte	32
	.byte	'Ifx_SRC_GGPSR',0,6,224,3,3
	.word	56993
	.byte	18,48
	.word	53600
	.byte	19,0,0,14
	.word	57021
	.byte	10
	.byte	'_Ifx_SRC_GGPT12',0,6,227,3,25,48,13
	.byte	'GPT12',0
	.word	57030
	.byte	48,2,35,0,0,14
	.word	57035
	.byte	32
	.byte	'Ifx_SRC_GGPT12',0,6,230,3,3
	.word	57073
	.byte	18,204,18
	.word	53868
	.byte	19,0,0,14
	.word	57102
	.byte	10
	.byte	'_Ifx_SRC_GGTM',0,6,233,3,25,204,18,13
	.byte	'GTM',0
	.word	57112
	.byte	204,18,2,35,0,0,14
	.word	57117
	.byte	32
	.byte	'Ifx_SRC_GGTM',0,6,236,3,3
	.word	57153
	.byte	18,4
	.word	54354
	.byte	19,0,0,14
	.word	57180
	.byte	10
	.byte	'_Ifx_SRC_GHSCT',0,6,239,3,25,4,13
	.byte	'HSCT',0
	.word	57189
	.byte	4,2,35,0,0,14
	.word	57194
	.byte	32
	.byte	'Ifx_SRC_GHSCT',0,6,242,3,3
	.word	57230
	.byte	18,64
	.word	54414
	.byte	19,3,0,14
	.word	57258
	.byte	10
	.byte	'_Ifx_SRC_GHSSL',0,6,245,3,25,68,13
	.byte	'HSSL',0
	.word	57267
	.byte	64,2,35,0,13
	.byte	'EXI',0
	.word	1714
	.byte	4,2,35,64,0,14
	.word	57272
	.byte	32
	.byte	'Ifx_SRC_GHSSL',0,6,249,3,3
	.word	57321
	.byte	18,80
	.word	54523
	.byte	19,0,0,14
	.word	57349
	.byte	10
	.byte	'_Ifx_SRC_GI2C',0,6,252,3,25,80,13
	.byte	'I2C',0
	.word	57358
	.byte	80,2,35,0,0,14
	.word	57363
	.byte	32
	.byte	'Ifx_SRC_GI2C',0,6,255,3,3
	.word	57397
	.byte	18,4
	.word	54672
	.byte	19,0,0,14
	.word	57424
	.byte	10
	.byte	'_Ifx_SRC_GLMU',0,6,130,4,25,4,13
	.byte	'LMU',0
	.word	57433
	.byte	4,2,35,0,0,14
	.word	57438
	.byte	32
	.byte	'Ifx_SRC_GLMU',0,6,133,4,3
	.word	57472
	.byte	18,40
	.word	54730
	.byte	19,1,0,14
	.word	57499
	.byte	10
	.byte	'_Ifx_SRC_GMSC',0,6,136,4,25,40,13
	.byte	'MSC',0
	.word	57508
	.byte	40,2,35,0,0,14
	.word	57513
	.byte	32
	.byte	'Ifx_SRC_GMSC',0,6,139,4,3
	.word	57547
	.byte	18,8
	.word	54841
	.byte	19,1,0,14
	.word	57574
	.byte	10
	.byte	'_Ifx_SRC_GPMU',0,6,142,4,25,8,13
	.byte	'PMU',0
	.word	57583
	.byte	8,2,35,0,0,14
	.word	57588
	.byte	32
	.byte	'Ifx_SRC_GPMU',0,6,145,4,3
	.word	57622
	.byte	18,32
	.word	54899
	.byte	19,0,0,14
	.word	57649
	.byte	10
	.byte	'_Ifx_SRC_GPSI5',0,6,148,4,25,32,13
	.byte	'PSI5',0
	.word	57658
	.byte	32,2,35,0,0,14
	.word	57663
	.byte	32
	.byte	'Ifx_SRC_GPSI5',0,6,151,4,3
	.word	57699
	.byte	18,32
	.word	54959
	.byte	19,0,0,14
	.word	57727
	.byte	10
	.byte	'_Ifx_SRC_GPSI5S',0,6,154,4,25,32,13
	.byte	'PSI5S',0
	.word	57736
	.byte	32,2,35,0,0,14
	.word	57741
	.byte	32
	.byte	'Ifx_SRC_GPSI5S',0,6,157,4,3
	.word	57779
	.byte	18,96
	.word	55021
	.byte	19,3,0,14
	.word	57808
	.byte	10
	.byte	'_Ifx_SRC_GQSPI',0,6,160,4,25,96,13
	.byte	'QSPI',0
	.word	57817
	.byte	96,2,35,0,0,14
	.word	57822
	.byte	32
	.byte	'Ifx_SRC_GQSPI',0,6,163,4,3
	.word	57858
	.byte	18,4
	.word	55141
	.byte	19,0,0,14
	.word	57886
	.byte	10
	.byte	'_Ifx_SRC_GSCR',0,6,166,4,25,4,13
	.byte	'SCR',0
	.word	57895
	.byte	4,2,35,0,0,14
	.word	57900
	.byte	32
	.byte	'Ifx_SRC_GSCR',0,6,169,4,3
	.word	57934
	.byte	14
	.word	55199
	.byte	10
	.byte	'_Ifx_SRC_GSCU',0,6,172,4,25,20,13
	.byte	'SCU',0
	.word	57961
	.byte	20,2,35,0,0,14
	.word	57966
	.byte	32
	.byte	'Ifx_SRC_GSCU',0,6,175,4,3
	.word	58000
	.byte	18,24
	.word	55280
	.byte	19,0,0,14
	.word	58027
	.byte	10
	.byte	'_Ifx_SRC_GSENT',0,6,178,4,25,24,13
	.byte	'SENT',0
	.word	58036
	.byte	24,2,35,0,0,14
	.word	58041
	.byte	32
	.byte	'Ifx_SRC_GSENT',0,6,181,4,3
	.word	58077
	.byte	18,12
	.word	55340
	.byte	19,0,0,14
	.word	58105
	.byte	10
	.byte	'_Ifx_SRC_GSMU',0,6,184,4,25,12,13
	.byte	'SMU',0
	.word	58114
	.byte	12,2,35,0,0,14
	.word	58119
	.byte	32
	.byte	'Ifx_SRC_GSMU',0,6,187,4,3
	.word	58153
	.byte	18,16
	.word	55398
	.byte	19,1,0,14
	.word	58180
	.byte	10
	.byte	'_Ifx_SRC_GSTM',0,6,190,4,25,16,13
	.byte	'STM',0
	.word	58189
	.byte	16,2,35,0,0,14
	.word	58194
	.byte	32
	.byte	'Ifx_SRC_GSTM',0,6,193,4,3
	.word	58228
	.byte	18,64
	.word	55574
	.byte	19,3,0,14
	.word	58255
	.byte	18,224,1
	.word	612
	.byte	19,223,1,0,18,32
	.word	55470
	.byte	19,1,0,14
	.word	58280
	.byte	10
	.byte	'_Ifx_SRC_GVADC',0,6,196,4,25,192,2,13
	.byte	'G',0
	.word	58264
	.byte	64,2,35,0,13
	.byte	'reserved_40',0
	.word	58269
	.byte	224,1,2,35,64,13
	.byte	'CG',0
	.word	58289
	.byte	32,3,35,160,2,0,14
	.word	58294
	.byte	32
	.byte	'Ifx_SRC_GVADC',0,6,201,4,3
	.word	58363
	.byte	14
	.word	55676
	.byte	10
	.byte	'_Ifx_SRC_GXBAR',0,6,204,4,25,4,13
	.byte	'XBAR',0
	.word	58391
	.byte	4,2,35,0,0,14
	.word	58396
	.byte	32
	.byte	'Ifx_SRC_GXBAR',0,6,207,4,3
	.word	58432
	.byte	10
	.byte	'_Ifx_CPU_A_Bits',0,21,45,16,4,11
	.byte	'ADDR',0,4
	.word	460
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_A_Bits',0,21,48,3
	.word	58460
	.byte	10
	.byte	'_Ifx_CPU_BIV_Bits',0,21,51,16,4,11
	.byte	'VSS',0,4
	.word	460
	.byte	1,31,2,35,0,11
	.byte	'BIV',0,4
	.word	460
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_BIV_Bits',0,21,55,3
	.word	58521
	.byte	10
	.byte	'_Ifx_CPU_BTV_Bits',0,21,58,16,4,11
	.byte	'reserved_0',0,4
	.word	460
	.byte	1,31,2,35,0,11
	.byte	'BTV',0,4
	.word	460
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_BTV_Bits',0,21,62,3
	.word	58600
	.byte	10
	.byte	'_Ifx_CPU_CCNT_Bits',0,21,65,16,4,11
	.byte	'CountValue',0,4
	.word	460
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	460
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_CCNT_Bits',0,21,69,3
	.word	58686
	.byte	10
	.byte	'_Ifx_CPU_CCTRL_Bits',0,21,72,16,4,11
	.byte	'CM',0,4
	.word	460
	.byte	1,31,2,35,0,11
	.byte	'CE',0,4
	.word	460
	.byte	1,30,2,35,0,11
	.byte	'M1',0,4
	.word	460
	.byte	3,27,2,35,0,11
	.byte	'M2',0,4
	.word	460
	.byte	3,24,2,35,0,11
	.byte	'M3',0,4
	.word	460
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	460
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_CPU_CCTRL_Bits',0,21,80,3
	.word	58775
	.byte	10
	.byte	'_Ifx_CPU_COMPAT_Bits',0,21,83,16,4,11
	.byte	'reserved_0',0,4
	.word	460
	.byte	3,29,2,35,0,11
	.byte	'RM',0,4
	.word	460
	.byte	1,28,2,35,0,11
	.byte	'SP',0,4
	.word	460
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	460
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_COMPAT_Bits',0,21,89,3
	.word	58921
	.byte	10
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,21,92,16,4,11
	.byte	'CORE_ID',0,4
	.word	460
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	460
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_CORE_ID_Bits',0,21,96,3
	.word	59048
	.byte	10
	.byte	'_Ifx_CPU_CPR_L_Bits',0,21,99,16,4,11
	.byte	'reserved_0',0,4
	.word	460
	.byte	3,29,2,35,0,11
	.byte	'LOWBND',0,4
	.word	460
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_L_Bits',0,21,103,3
	.word	59146
	.byte	10
	.byte	'_Ifx_CPU_CPR_U_Bits',0,21,106,16,4,11
	.byte	'reserved_0',0,4
	.word	460
	.byte	3,29,2,35,0,11
	.byte	'UPPBND',0,4
	.word	460
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_U_Bits',0,21,110,3
	.word	59239
	.byte	10
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,21,113,16,4,11
	.byte	'MODREV',0,4
	.word	460
	.byte	8,24,2,35,0,11
	.byte	'MOD_32B',0,4
	.word	460
	.byte	8,16,2,35,0,11
	.byte	'MOD',0,4
	.word	460
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPU_ID_Bits',0,21,118,3
	.word	59332
	.byte	10
	.byte	'_Ifx_CPU_CPXE_Bits',0,21,121,16,4,11
	.byte	'XE',0,4
	.word	460
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	460
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPXE_Bits',0,21,125,3
	.word	59439
	.byte	10
	.byte	'_Ifx_CPU_CREVT_Bits',0,21,128,1,16,4,11
	.byte	'EVTA',0,4
	.word	460
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	460
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	460
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	460
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	460
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	460
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_CREVT_Bits',0,21,136,1,3
	.word	59526
	.byte	10
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,21,139,1,16,4,11
	.byte	'CID',0,4
	.word	460
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	460
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_CUS_ID_Bits',0,21,143,1,3
	.word	59680
	.byte	10
	.byte	'_Ifx_CPU_D_Bits',0,21,146,1,16,4,11
	.byte	'DATA',0,4
	.word	460
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_D_Bits',0,21,149,1,3
	.word	59774
	.byte	10
	.byte	'_Ifx_CPU_DATR_Bits',0,21,152,1,16,4,11
	.byte	'reserved_0',0,4
	.word	460
	.byte	3,29,2,35,0,11
	.byte	'SBE',0,4
	.word	460
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	460
	.byte	5,23,2,35,0,11
	.byte	'CWE',0,4
	.word	460
	.byte	1,22,2,35,0,11
	.byte	'CFE',0,4
	.word	460
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	460
	.byte	3,18,2,35,0,11
	.byte	'SOE',0,4
	.word	460
	.byte	1,17,2,35,0,11
	.byte	'SME',0,4
	.word	460
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	460
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_DATR_Bits',0,21,163,1,3
	.word	59837
	.byte	10
	.byte	'_Ifx_CPU_DBGSR_Bits',0,21,166,1,16,4,11
	.byte	'DE',0,4
	.word	460
	.byte	1,31,2,35,0,11
	.byte	'HALT',0,4
	.word	460
	.byte	2,29,2,35,0,11
	.byte	'SIH',0,4
	.word	460
	.byte	1,28,2,35,0,11
	.byte	'SUSP',0,4
	.word	460
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	460
	.byte	1,26,2,35,0,11
	.byte	'PREVSUSP',0,4
	.word	460
	.byte	1,25,2,35,0,11
	.byte	'PEVT',0,4
	.word	460
	.byte	1,24,2,35,0,11
	.byte	'EVTSRC',0,4
	.word	460
	.byte	5,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	460
	.byte	19,0,2,35,0,0,32
	.byte	'Ifx_CPU_DBGSR_Bits',0,21,177,1,3
	.word	60055
	.byte	10
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,21,180,1,16,4,11
	.byte	'DTA',0,4
	.word	460
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	460
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_DBGTCR_Bits',0,21,184,1,3
	.word	60270
	.byte	10
	.byte	'_Ifx_CPU_DCON0_Bits',0,21,187,1,16,4,11
	.byte	'reserved_0',0,4
	.word	460
	.byte	1,31,2,35,0,11
	.byte	'DCBYP',0,4
	.word	460
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	460
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_CPU_DCON0_Bits',0,21,192,1,3
	.word	60364
	.byte	10
	.byte	'_Ifx_CPU_DCON2_Bits',0,21,195,1,16,4,11
	.byte	'DCACHE_SZE',0,4
	.word	460
	.byte	16,16,2,35,0,11
	.byte	'DSCRATCH_SZE',0,4
	.word	460
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_DCON2_Bits',0,21,199,1,3
	.word	60480
	.byte	10
	.byte	'_Ifx_CPU_DCX_Bits',0,21,202,1,16,4,11
	.byte	'reserved_0',0,4
	.word	460
	.byte	6,26,2,35,0,11
	.byte	'DCXValue',0,4
	.word	460
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_CPU_DCX_Bits',0,21,206,1,3
	.word	60581
	.byte	10
	.byte	'_Ifx_CPU_DEADD_Bits',0,21,209,1,16,4,11
	.byte	'ERROR_ADDRESS',0,4
	.word	460
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_DEADD_Bits',0,21,212,1,3
	.word	60674
	.byte	10
	.byte	'_Ifx_CPU_DIEAR_Bits',0,21,215,1,16,4,11
	.byte	'TA',0,4
	.word	460
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_DIEAR_Bits',0,21,218,1,3
	.word	60754
	.byte	10
	.byte	'_Ifx_CPU_DIETR_Bits',0,21,221,1,16,4,11
	.byte	'IED',0,4
	.word	460
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	460
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	460
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	460
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	460
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	460
	.byte	6,21,2,35,0,11
	.byte	'IE_DUAL',0,4
	.word	460
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	460
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	460
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	460
	.byte	18,0,2,35,0,0,32
	.byte	'Ifx_CPU_DIETR_Bits',0,21,233,1,3
	.word	60823
	.byte	10
	.byte	'_Ifx_CPU_DMS_Bits',0,21,236,1,16,4,11
	.byte	'reserved_0',0,4
	.word	460
	.byte	1,31,2,35,0,11
	.byte	'DMSValue',0,4
	.word	460
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_DMS_Bits',0,21,240,1,3
	.word	61052
	.byte	10
	.byte	'_Ifx_CPU_DPR_L_Bits',0,21,243,1,16,4,11
	.byte	'reserved_0',0,4
	.word	460
	.byte	3,29,2,35,0,11
	.byte	'LOWBND',0,4
	.word	460
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_L_Bits',0,21,247,1,3
	.word	61145
	.byte	10
	.byte	'_Ifx_CPU_DPR_U_Bits',0,21,250,1,16,4,11
	.byte	'reserved_0',0,4
	.word	460
	.byte	3,29,2,35,0,11
	.byte	'UPPBND',0,4
	.word	460
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_U_Bits',0,21,254,1,3
	.word	61240
	.byte	10
	.byte	'_Ifx_CPU_DPRE_Bits',0,21,129,2,16,4,11
	.byte	'RE',0,4
	.word	460
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	460
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPRE_Bits',0,21,133,2,3
	.word	61335
	.byte	10
	.byte	'_Ifx_CPU_DPWE_Bits',0,21,136,2,16,4,11
	.byte	'WE',0,4
	.word	460
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	460
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPWE_Bits',0,21,140,2,3
	.word	61425
	.byte	10
	.byte	'_Ifx_CPU_DSTR_Bits',0,21,143,2,16,4,11
	.byte	'SRE',0,4
	.word	460
	.byte	1,31,2,35,0,11
	.byte	'GAE',0,4
	.word	460
	.byte	1,30,2,35,0,11
	.byte	'LBE',0,4
	.word	460
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	460
	.byte	3,26,2,35,0,11
	.byte	'CRE',0,4
	.word	460
	.byte	1,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	460
	.byte	7,18,2,35,0,11
	.byte	'DTME',0,4
	.word	460
	.byte	1,17,2,35,0,11
	.byte	'LOE',0,4
	.word	460
	.byte	1,16,2,35,0,11
	.byte	'SDE',0,4
	.word	460
	.byte	1,15,2,35,0,11
	.byte	'SCE',0,4
	.word	460
	.byte	1,14,2,35,0,11
	.byte	'CAC',0,4
	.word	460
	.byte	1,13,2,35,0,11
	.byte	'MPE',0,4
	.word	460
	.byte	1,12,2,35,0,11
	.byte	'CLE',0,4
	.word	460
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	460
	.byte	3,8,2,35,0,11
	.byte	'ALN',0,4
	.word	460
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	460
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_CPU_DSTR_Bits',0,21,161,2,3
	.word	61515
	.byte	10
	.byte	'_Ifx_CPU_EXEVT_Bits',0,21,164,2,16,4,11
	.byte	'EVTA',0,4
	.word	460
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	460
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	460
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	460
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	460
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	460
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_EXEVT_Bits',0,21,172,2,3
	.word	61839
	.byte	10
	.byte	'_Ifx_CPU_FCX_Bits',0,21,175,2,16,4,11
	.byte	'FCXO',0,4
	.word	460
	.byte	16,16,2,35,0,11
	.byte	'FCXS',0,4
	.word	460
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	460
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_CPU_FCX_Bits',0,21,180,2,3
	.word	61993
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,21,183,2,16,4,11
	.byte	'TST',0,4
	.word	460
	.byte	1,31,2,35,0,11
	.byte	'TCL',0,4
	.word	460
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	460
	.byte	6,24,2,35,0,11
	.byte	'RM',0,4
	.word	460
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	460
	.byte	8,14,2,35,0,11
	.byte	'FXE',0,4
	.word	460
	.byte	1,13,2,35,0,11
	.byte	'FUE',0,4
	.word	460
	.byte	1,12,2,35,0,11
	.byte	'FZE',0,4
	.word	460
	.byte	1,11,2,35,0,11
	.byte	'FVE',0,4
	.word	460
	.byte	1,10,2,35,0,11
	.byte	'FIE',0,4
	.word	460
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	460
	.byte	3,6,2,35,0,11
	.byte	'FX',0,4
	.word	460
	.byte	1,5,2,35,0,11
	.byte	'FU',0,4
	.word	460
	.byte	1,4,2,35,0,11
	.byte	'FZ',0,4
	.word	460
	.byte	1,3,2,35,0,11
	.byte	'FV',0,4
	.word	460
	.byte	1,2,2,35,0,11
	.byte	'FI',0,4
	.word	460
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	460
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,21,202,2,3
	.word	62099
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,21,205,2,16,4,11
	.byte	'OPC',0,4
	.word	460
	.byte	8,24,2,35,0,11
	.byte	'FMT',0,4
	.word	460
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	460
	.byte	7,16,2,35,0,11
	.byte	'DREG',0,4
	.word	460
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	460
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,21,212,2,3
	.word	62448
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,21,215,2,16,4,11
	.byte	'PC',0,4
	.word	460
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,21,218,2,3
	.word	62608
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,21,221,2,16,4,11
	.byte	'SRC1',0,4
	.word	460
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,21,224,2,3
	.word	62689
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,21,227,2,16,4,11
	.byte	'SRC2',0,4
	.word	460
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,21,230,2,3
	.word	62776
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,21,233,2,16,4,11
	.byte	'SRC3',0,4
	.word	460
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,21,236,2,3
	.word	62863
	.byte	10
	.byte	'_Ifx_CPU_ICNT_Bits',0,21,239,2,16,4,11
	.byte	'CountValue',0,4
	.word	460
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	460
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_ICNT_Bits',0,21,243,2,3
	.word	62950
	.byte	10
	.byte	'_Ifx_CPU_ICR_Bits',0,21,246,2,16,4,11
	.byte	'CCPN',0,4
	.word	460
	.byte	10,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	460
	.byte	5,17,2,35,0,11
	.byte	'IE',0,4
	.word	460
	.byte	1,16,2,35,0,11
	.byte	'PIPN',0,4
	.word	460
	.byte	10,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	460
	.byte	6,0,2,35,0,0,32
	.byte	'Ifx_CPU_ICR_Bits',0,21,253,2,3
	.word	63041
	.byte	10
	.byte	'_Ifx_CPU_ISP_Bits',0,21,128,3,16,4,11
	.byte	'ISP',0,4
	.word	460
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_ISP_Bits',0,21,131,3,3
	.word	63184
	.byte	10
	.byte	'_Ifx_CPU_LCX_Bits',0,21,134,3,16,4,11
	.byte	'LCXO',0,4
	.word	460
	.byte	16,16,2,35,0,11
	.byte	'LCXS',0,4
	.word	460
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	460
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_CPU_LCX_Bits',0,21,139,3,3
	.word	63250
	.byte	10
	.byte	'_Ifx_CPU_M1CNT_Bits',0,21,142,3,16,4,11
	.byte	'CountValue',0,4
	.word	460
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	460
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_M1CNT_Bits',0,21,146,3,3
	.word	63356
	.byte	10
	.byte	'_Ifx_CPU_M2CNT_Bits',0,21,149,3,16,4,11
	.byte	'CountValue',0,4
	.word	460
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	460
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_M2CNT_Bits',0,21,153,3,3
	.word	63449
	.byte	10
	.byte	'_Ifx_CPU_M3CNT_Bits',0,21,156,3,16,4,11
	.byte	'CountValue',0,4
	.word	460
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	460
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_M3CNT_Bits',0,21,160,3,3
	.word	63542
	.byte	10
	.byte	'_Ifx_CPU_PC_Bits',0,21,163,3,16,4,11
	.byte	'reserved_0',0,4
	.word	460
	.byte	1,31,2,35,0,11
	.byte	'PC',0,4
	.word	460
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_PC_Bits',0,21,167,3,3
	.word	63635
	.byte	10
	.byte	'_Ifx_CPU_PCON0_Bits',0,21,170,3,16,4,11
	.byte	'reserved_0',0,4
	.word	460
	.byte	1,31,2,35,0,11
	.byte	'PCBYP',0,4
	.word	460
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	460
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCON0_Bits',0,21,175,3,3
	.word	63720
	.byte	10
	.byte	'_Ifx_CPU_PCON1_Bits',0,21,178,3,16,4,11
	.byte	'PCINV',0,4
	.word	460
	.byte	1,31,2,35,0,11
	.byte	'PBINV',0,4
	.word	460
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	460
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCON1_Bits',0,21,183,3,3
	.word	63836
	.byte	10
	.byte	'_Ifx_CPU_PCON2_Bits',0,21,186,3,16,4,11
	.byte	'PCACHE_SZE',0,4
	.word	460
	.byte	16,16,2,35,0,11
	.byte	'PSCRATCH_SZE',0,4
	.word	460
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCON2_Bits',0,21,190,3,3
	.word	63947
	.byte	10
	.byte	'_Ifx_CPU_PCXI_Bits',0,21,193,3,16,4,11
	.byte	'PCXO',0,4
	.word	460
	.byte	16,16,2,35,0,11
	.byte	'PCXS',0,4
	.word	460
	.byte	4,12,2,35,0,11
	.byte	'UL',0,4
	.word	460
	.byte	1,11,2,35,0,11
	.byte	'PIE',0,4
	.word	460
	.byte	1,10,2,35,0,11
	.byte	'PCPN',0,4
	.word	460
	.byte	10,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCXI_Bits',0,21,200,3,3
	.word	64048
	.byte	10
	.byte	'_Ifx_CPU_PIEAR_Bits',0,21,203,3,16,4,11
	.byte	'TA',0,4
	.word	460
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_PIEAR_Bits',0,21,206,3,3
	.word	64178
	.byte	10
	.byte	'_Ifx_CPU_PIETR_Bits',0,21,209,3,16,4,11
	.byte	'IED',0,4
	.word	460
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	460
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	460
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	460
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	460
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	460
	.byte	6,21,2,35,0,11
	.byte	'IE_DUAL',0,4
	.word	460
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	460
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	460
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	460
	.byte	18,0,2,35,0,0,32
	.byte	'Ifx_CPU_PIETR_Bits',0,21,221,3,3
	.word	64247
	.byte	10
	.byte	'_Ifx_CPU_PMA0_Bits',0,21,224,3,16,4,11
	.byte	'reserved_0',0,4
	.word	460
	.byte	13,19,2,35,0,11
	.byte	'DAC',0,4
	.word	460
	.byte	3,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	460
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PMA0_Bits',0,21,229,3,3
	.word	64476
	.byte	10
	.byte	'_Ifx_CPU_PMA1_Bits',0,21,232,3,16,4,11
	.byte	'reserved_0',0,4
	.word	460
	.byte	14,18,2,35,0,11
	.byte	'CAC',0,4
	.word	460
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	460
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PMA1_Bits',0,21,237,3,3
	.word	64589
	.byte	10
	.byte	'_Ifx_CPU_PMA2_Bits',0,21,240,3,16,4,11
	.byte	'PSI',0,4
	.word	460
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	460
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PMA2_Bits',0,21,244,3,3
	.word	64702
	.byte	10
	.byte	'_Ifx_CPU_PSTR_Bits',0,21,247,3,16,4,11
	.byte	'FRE',0,4
	.word	460
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	460
	.byte	1,30,2,35,0,11
	.byte	'FBE',0,4
	.word	460
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	460
	.byte	9,20,2,35,0,11
	.byte	'FPE',0,4
	.word	460
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	460
	.byte	1,18,2,35,0,11
	.byte	'FME',0,4
	.word	460
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	460
	.byte	17,0,2,35,0,0,32
	.byte	'Ifx_CPU_PSTR_Bits',0,21,129,4,3
	.word	64793
	.byte	10
	.byte	'_Ifx_CPU_PSW_Bits',0,21,132,4,16,4,11
	.byte	'CDC',0,4
	.word	460
	.byte	7,25,2,35,0,11
	.byte	'CDE',0,4
	.word	460
	.byte	1,24,2,35,0,11
	.byte	'GW',0,4
	.word	460
	.byte	1,23,2,35,0,11
	.byte	'IS',0,4
	.word	460
	.byte	1,22,2,35,0,11
	.byte	'IO',0,4
	.word	460
	.byte	2,20,2,35,0,11
	.byte	'PRS',0,4
	.word	460
	.byte	2,18,2,35,0,11
	.byte	'S',0,4
	.word	460
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	460
	.byte	12,5,2,35,0,11
	.byte	'SAV',0,4
	.word	460
	.byte	1,4,2,35,0,11
	.byte	'AV',0,4
	.word	460
	.byte	1,3,2,35,0,11
	.byte	'SV',0,4
	.word	460
	.byte	1,2,2,35,0,11
	.byte	'V',0,4
	.word	460
	.byte	1,1,2,35,0,11
	.byte	'C',0,4
	.word	460
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_PSW_Bits',0,21,147,4,3
	.word	64996
	.byte	10
	.byte	'_Ifx_CPU_SEGEN_Bits',0,21,150,4,16,4,11
	.byte	'ADFLIP',0,4
	.word	460
	.byte	8,24,2,35,0,11
	.byte	'ADTYPE',0,4
	.word	460
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	460
	.byte	21,1,2,35,0,11
	.byte	'AE',0,4
	.word	460
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_SEGEN_Bits',0,21,156,4,3
	.word	65239
	.byte	10
	.byte	'_Ifx_CPU_SMACON_Bits',0,21,159,4,16,4,11
	.byte	'PC',0,4
	.word	460
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	460
	.byte	1,30,2,35,0,11
	.byte	'PT',0,4
	.word	460
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	460
	.byte	5,24,2,35,0,11
	.byte	'DC',0,4
	.word	460
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	460
	.byte	1,22,2,35,0,11
	.byte	'DT',0,4
	.word	460
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	460
	.byte	13,8,2,35,0,11
	.byte	'IODT',0,4
	.word	460
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	460
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_CPU_SMACON_Bits',0,21,171,4,3
	.word	65367
	.byte	10
	.byte	'_Ifx_CPU_SPROT_ACCENA_Bits',0,21,174,4,16,4,11
	.byte	'EN',0,4
	.word	437
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_ACCENA_Bits',0,21,177,4,3
	.word	65608
	.byte	10
	.byte	'_Ifx_CPU_SPROT_ACCENB_Bits',0,21,180,4,16,4,11
	.byte	'reserved_0',0,4
	.word	437
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_ACCENB_Bits',0,21,183,4,3
	.word	65691
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,21,186,4,16,4,11
	.byte	'EN',0,4
	.word	437
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,21,189,4,3
	.word	65782
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,21,192,4,16,4,11
	.byte	'reserved_0',0,4
	.word	437
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,21,195,4,3
	.word	65873
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_LA_Bits',0,21,198,4,16,4,11
	.byte	'reserved_0',0,1
	.word	612
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	437
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_LA_Bits',0,21,202,4,3
	.word	65972
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_UA_Bits',0,21,205,4,16,4,11
	.byte	'reserved_0',0,1
	.word	612
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	437
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_UA_Bits',0,21,209,4,3
	.word	66079
	.byte	10
	.byte	'_Ifx_CPU_SWEVT_Bits',0,21,212,4,16,4,11
	.byte	'EVTA',0,4
	.word	460
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	460
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	460
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	460
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	460
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	460
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_SWEVT_Bits',0,21,220,4,3
	.word	66186
	.byte	10
	.byte	'_Ifx_CPU_SYSCON_Bits',0,21,223,4,16,4,11
	.byte	'FCDSF',0,4
	.word	460
	.byte	1,31,2,35,0,11
	.byte	'PROTEN',0,4
	.word	460
	.byte	1,30,2,35,0,11
	.byte	'TPROTEN',0,4
	.word	460
	.byte	1,29,2,35,0,11
	.byte	'IS',0,4
	.word	460
	.byte	1,28,2,35,0,11
	.byte	'IT',0,4
	.word	460
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	460
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_SYSCON_Bits',0,21,231,4,3
	.word	66340
	.byte	10
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,21,234,4,16,4,11
	.byte	'ASI',0,4
	.word	460
	.byte	5,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	460
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,21,238,4,3
	.word	66501
	.byte	10
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,21,241,4,16,4,11
	.byte	'TEXP0',0,4
	.word	460
	.byte	1,31,2,35,0,11
	.byte	'TEXP1',0,4
	.word	460
	.byte	1,30,2,35,0,11
	.byte	'TEXP2',0,4
	.word	460
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	460
	.byte	13,16,2,35,0,11
	.byte	'TTRAP',0,4
	.word	460
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	460
	.byte	15,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_CON_Bits',0,21,249,4,3
	.word	66599
	.byte	10
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,21,252,4,16,4,11
	.byte	'Timer',0,4
	.word	460
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,21,255,4,3
	.word	66771
	.byte	10
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,21,130,5,16,4,11
	.byte	'ADDR',0,4
	.word	460
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_TR_ADR_Bits',0,21,133,5,3
	.word	66851
	.byte	10
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,21,136,5,16,4,11
	.byte	'EVTA',0,4
	.word	460
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	460
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	460
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	460
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	460
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	460
	.byte	4,20,2,35,0,11
	.byte	'TYP',0,4
	.word	460
	.byte	1,19,2,35,0,11
	.byte	'RNG',0,4
	.word	460
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	460
	.byte	1,17,2,35,0,11
	.byte	'ASI_EN',0,4
	.word	460
	.byte	1,16,2,35,0,11
	.byte	'ASI',0,4
	.word	460
	.byte	5,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	460
	.byte	6,5,2,35,0,11
	.byte	'AST',0,4
	.word	460
	.byte	1,4,2,35,0,11
	.byte	'ALD',0,4
	.word	460
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	460
	.byte	3,0,2,35,0,0,32
	.byte	'Ifx_CPU_TR_EVT_Bits',0,21,153,5,3
	.word	66924
	.byte	10
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,21,156,5,16,4,11
	.byte	'T0',0,4
	.word	460
	.byte	1,31,2,35,0,11
	.byte	'T1',0,4
	.word	460
	.byte	1,30,2,35,0,11
	.byte	'T2',0,4
	.word	460
	.byte	1,29,2,35,0,11
	.byte	'T3',0,4
	.word	460
	.byte	1,28,2,35,0,11
	.byte	'T4',0,4
	.word	460
	.byte	1,27,2,35,0,11
	.byte	'T5',0,4
	.word	460
	.byte	1,26,2,35,0,11
	.byte	'T6',0,4
	.word	460
	.byte	1,25,2,35,0,11
	.byte	'T7',0,4
	.word	460
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	460
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,21,167,5,3
	.word	67242
	.byte	12,21,175,5,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58460
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_A',0,21,180,5,3
	.word	67437
	.byte	12,21,183,5,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58521
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_BIV',0,21,188,5,3
	.word	67496
	.byte	12,21,191,5,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58600
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_BTV',0,21,196,5,3
	.word	67557
	.byte	12,21,199,5,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58686
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CCNT',0,21,204,5,3
	.word	67618
	.byte	12,21,207,5,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58775
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CCTRL',0,21,212,5,3
	.word	67680
	.byte	12,21,215,5,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58921
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_COMPAT',0,21,220,5,3
	.word	67743
	.byte	12,21,223,5,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59048
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CORE_ID',0,21,228,5,3
	.word	67807
	.byte	12,21,231,5,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59146
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_L',0,21,236,5,3
	.word	67872
	.byte	12,21,239,5,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59239
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_U',0,21,244,5,3
	.word	67935
	.byte	12,21,247,5,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59332
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPU_ID',0,21,252,5,3
	.word	67998
	.byte	12,21,255,5,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59439
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPXE',0,21,132,6,3
	.word	68062
	.byte	12,21,135,6,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59526
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CREVT',0,21,140,6,3
	.word	68124
	.byte	12,21,143,6,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59680
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CUS_ID',0,21,148,6,3
	.word	68187
	.byte	12,21,151,6,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59774
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_D',0,21,156,6,3
	.word	68251
	.byte	12,21,159,6,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59837
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DATR',0,21,164,6,3
	.word	68310
	.byte	12,21,167,6,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60055
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DBGSR',0,21,172,6,3
	.word	68372
	.byte	12,21,175,6,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60270
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DBGTCR',0,21,180,6,3
	.word	68435
	.byte	12,21,183,6,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60364
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DCON0',0,21,188,6,3
	.word	68499
	.byte	12,21,191,6,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60480
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DCON2',0,21,196,6,3
	.word	68562
	.byte	12,21,199,6,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60581
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DCX',0,21,204,6,3
	.word	68625
	.byte	12,21,207,6,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60674
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DEADD',0,21,212,6,3
	.word	68686
	.byte	12,21,215,6,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60754
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DIEAR',0,21,220,6,3
	.word	68749
	.byte	12,21,223,6,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60823
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DIETR',0,21,228,6,3
	.word	68812
	.byte	12,21,231,6,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61052
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DMS',0,21,236,6,3
	.word	68875
	.byte	12,21,239,6,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61145
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_L',0,21,244,6,3
	.word	68936
	.byte	12,21,247,6,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61240
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_U',0,21,252,6,3
	.word	68999
	.byte	12,21,255,6,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61335
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPRE',0,21,132,7,3
	.word	69062
	.byte	12,21,135,7,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61425
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPWE',0,21,140,7,3
	.word	69124
	.byte	12,21,143,7,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61515
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DSTR',0,21,148,7,3
	.word	69186
	.byte	12,21,151,7,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61839
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_EXEVT',0,21,156,7,3
	.word	69248
	.byte	12,21,159,7,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61993
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FCX',0,21,164,7,3
	.word	69311
	.byte	12,21,167,7,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62099
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,21,172,7,3
	.word	69372
	.byte	12,21,175,7,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62448
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,21,180,7,3
	.word	69442
	.byte	12,21,183,7,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62608
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,21,188,7,3
	.word	69512
	.byte	12,21,191,7,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62689
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,21,196,7,3
	.word	69581
	.byte	12,21,199,7,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62776
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,21,204,7,3
	.word	69652
	.byte	12,21,207,7,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62863
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,21,212,7,3
	.word	69723
	.byte	12,21,215,7,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62950
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_ICNT',0,21,220,7,3
	.word	69794
	.byte	12,21,223,7,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63041
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_ICR',0,21,228,7,3
	.word	69856
	.byte	12,21,231,7,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63184
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_ISP',0,21,236,7,3
	.word	69917
	.byte	12,21,239,7,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63250
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_LCX',0,21,244,7,3
	.word	69978
	.byte	12,21,247,7,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63356
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_M1CNT',0,21,252,7,3
	.word	70039
	.byte	12,21,255,7,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63449
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_M2CNT',0,21,132,8,3
	.word	70102
	.byte	12,21,135,8,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63542
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_M3CNT',0,21,140,8,3
	.word	70165
	.byte	12,21,143,8,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63635
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PC',0,21,148,8,3
	.word	70228
	.byte	12,21,151,8,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63720
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCON0',0,21,156,8,3
	.word	70288
	.byte	12,21,159,8,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63836
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCON1',0,21,164,8,3
	.word	70351
	.byte	12,21,167,8,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63947
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCON2',0,21,172,8,3
	.word	70414
	.byte	12,21,175,8,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64048
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCXI',0,21,180,8,3
	.word	70477
	.byte	12,21,183,8,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64178
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PIEAR',0,21,188,8,3
	.word	70539
	.byte	12,21,191,8,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64247
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PIETR',0,21,196,8,3
	.word	70602
	.byte	12,21,199,8,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64476
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PMA0',0,21,204,8,3
	.word	70665
	.byte	12,21,207,8,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64589
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PMA1',0,21,212,8,3
	.word	70727
	.byte	12,21,215,8,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64702
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PMA2',0,21,220,8,3
	.word	70789
	.byte	12,21,223,8,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64793
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PSTR',0,21,228,8,3
	.word	70851
	.byte	12,21,231,8,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64996
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PSW',0,21,236,8,3
	.word	70913
	.byte	12,21,239,8,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65239
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SEGEN',0,21,244,8,3
	.word	70974
	.byte	12,21,247,8,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65367
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SMACON',0,21,252,8,3
	.word	71037
	.byte	12,21,255,8,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65608
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_ACCENA',0,21,132,9,3
	.word	71101
	.byte	12,21,135,9,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65691
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_ACCENB',0,21,140,9,3
	.word	71171
	.byte	12,21,143,9,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65782
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA',0,21,148,9,3
	.word	71241
	.byte	12,21,151,9,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65873
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB',0,21,156,9,3
	.word	71315
	.byte	12,21,159,9,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65972
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_LA',0,21,164,9,3
	.word	71389
	.byte	12,21,167,9,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66079
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_UA',0,21,172,9,3
	.word	71459
	.byte	12,21,175,9,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66186
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SWEVT',0,21,180,9,3
	.word	71529
	.byte	12,21,183,9,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66340
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SYSCON',0,21,188,9,3
	.word	71592
	.byte	12,21,191,9,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66501
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TASK_ASI',0,21,196,9,3
	.word	71656
	.byte	12,21,199,9,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66599
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_CON',0,21,204,9,3
	.word	71722
	.byte	12,21,207,9,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66771
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_TIMER',0,21,212,9,3
	.word	71787
	.byte	12,21,215,9,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66851
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TR_ADR',0,21,220,9,3
	.word	71854
	.byte	12,21,223,9,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66924
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TR_EVT',0,21,228,9,3
	.word	71918
	.byte	12,21,231,9,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67242
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TRIG_ACC',0,21,236,9,3
	.word	71982
	.byte	10
	.byte	'_Ifx_CPU_CPR',0,21,247,9,25,8,13
	.byte	'L',0
	.word	67872
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	67935
	.byte	4,2,35,4,0,14
	.word	72048
	.byte	32
	.byte	'Ifx_CPU_CPR',0,21,251,9,3
	.word	72090
	.byte	10
	.byte	'_Ifx_CPU_DPR',0,21,254,9,25,8,13
	.byte	'L',0
	.word	68936
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	68999
	.byte	4,2,35,4,0,14
	.word	72116
	.byte	32
	.byte	'Ifx_CPU_DPR',0,21,130,10,3
	.word	72158
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN',0,21,133,10,25,16,13
	.byte	'LA',0
	.word	71389
	.byte	4,2,35,0,13
	.byte	'UA',0
	.word	71459
	.byte	4,2,35,4,13
	.byte	'ACCENA',0
	.word	71241
	.byte	4,2,35,8,13
	.byte	'ACCENB',0
	.word	71315
	.byte	4,2,35,12,0,14
	.word	72184
	.byte	32
	.byte	'Ifx_CPU_SPROT_RGN',0,21,139,10,3
	.word	72266
	.byte	18,12
	.word	71787
	.byte	19,2,0,10
	.byte	'_Ifx_CPU_TPS',0,21,142,10,25,16,13
	.byte	'CON',0
	.word	71722
	.byte	4,2,35,0,13
	.byte	'TIMER',0
	.word	72298
	.byte	12,2,35,4,0,14
	.word	72307
	.byte	32
	.byte	'Ifx_CPU_TPS',0,21,146,10,3
	.word	72355
	.byte	10
	.byte	'_Ifx_CPU_TR',0,21,149,10,25,8,13
	.byte	'EVT',0
	.word	71918
	.byte	4,2,35,0,13
	.byte	'ADR',0
	.word	71854
	.byte	4,2,35,4,0,14
	.word	72381
	.byte	32
	.byte	'Ifx_CPU_TR',0,21,153,10,3
	.word	72426
	.byte	18,176,32
	.word	612
	.byte	19,175,32,0,18,208,223,1
	.word	612
	.byte	19,207,223,1,0,18,248,1
	.word	612
	.byte	19,247,1,0,18,244,29
	.word	612
	.byte	19,243,29,0,18,188,3
	.word	612
	.byte	19,187,3,0,18,232,3
	.word	612
	.byte	19,231,3,0,18,252,23
	.word	612
	.byte	19,251,23,0,18,228,63
	.word	612
	.byte	19,227,63,0,18,128,1
	.word	72116
	.byte	19,15,0,14
	.word	72541
	.byte	18,128,31
	.word	612
	.byte	19,255,30,0,18,64
	.word	72048
	.byte	19,7,0,14
	.word	72567
	.byte	18,192,31
	.word	612
	.byte	19,191,31,0,18,16
	.word	68062
	.byte	19,3,0,18,16
	.word	69062
	.byte	19,3,0,18,16
	.word	69124
	.byte	19,3,0,18,208,7
	.word	612
	.byte	19,207,7,0,14
	.word	72307
	.byte	18,240,23
	.word	612
	.byte	19,239,23,0,18,64
	.word	72381
	.byte	19,7,0,14
	.word	72646
	.byte	18,192,23
	.word	612
	.byte	19,191,23,0,18,232,1
	.word	612
	.byte	19,231,1,0,18,180,1
	.word	612
	.byte	19,179,1,0,18,172,1
	.word	612
	.byte	19,171,1,0,18,64
	.word	68251
	.byte	19,15,0,18,64
	.word	612
	.byte	19,63,0,18,64
	.word	67437
	.byte	19,15,0,10
	.byte	'_Ifx_CPU',0,21,166,10,25,128,128,4,13
	.byte	'reserved_0',0
	.word	72451
	.byte	176,32,2,35,0,13
	.byte	'SEGEN',0
	.word	70974
	.byte	4,3,35,176,32,13
	.byte	'reserved_1034',0
	.word	72462
	.byte	208,223,1,3,35,180,32,13
	.byte	'TASK_ASI',0
	.word	71656
	.byte	4,4,35,132,128,2,13
	.byte	'reserved_8008',0
	.word	72475
	.byte	248,1,4,35,136,128,2,13
	.byte	'PMA0',0
	.word	70665
	.byte	4,4,35,128,130,2,13
	.byte	'PMA1',0
	.word	70727
	.byte	4,4,35,132,130,2,13
	.byte	'PMA2',0
	.word	70789
	.byte	4,4,35,136,130,2,13
	.byte	'reserved_810C',0
	.word	72486
	.byte	244,29,4,35,140,130,2,13
	.byte	'DCON2',0
	.word	68562
	.byte	4,4,35,128,160,2,13
	.byte	'reserved_9004',0
	.word	5190
	.byte	8,4,35,132,160,2,13
	.byte	'SMACON',0
	.word	71037
	.byte	4,4,35,140,160,2,13
	.byte	'DSTR',0
	.word	69186
	.byte	4,4,35,144,160,2,13
	.byte	'reserved_9014',0
	.word	3371
	.byte	4,4,35,148,160,2,13
	.byte	'DATR',0
	.word	68310
	.byte	4,4,35,152,160,2,13
	.byte	'DEADD',0
	.word	68686
	.byte	4,4,35,156,160,2,13
	.byte	'DIEAR',0
	.word	68749
	.byte	4,4,35,160,160,2,13
	.byte	'DIETR',0
	.word	68812
	.byte	4,4,35,164,160,2,13
	.byte	'reserved_9028',0
	.word	4561
	.byte	24,4,35,168,160,2,13
	.byte	'DCON0',0
	.word	68499
	.byte	4,4,35,192,160,2,13
	.byte	'reserved_9044',0
	.word	72497
	.byte	188,3,4,35,196,160,2,13
	.byte	'PSTR',0
	.word	70851
	.byte	4,4,35,128,164,2,13
	.byte	'PCON1',0
	.word	70351
	.byte	4,4,35,132,164,2,13
	.byte	'PCON2',0
	.word	70414
	.byte	4,4,35,136,164,2,13
	.byte	'PCON0',0
	.word	70288
	.byte	4,4,35,140,164,2,13
	.byte	'PIEAR',0
	.word	70539
	.byte	4,4,35,144,164,2,13
	.byte	'PIETR',0
	.word	70602
	.byte	4,4,35,148,164,2,13
	.byte	'reserved_9218',0
	.word	72508
	.byte	232,3,4,35,152,164,2,13
	.byte	'COMPAT',0
	.word	67743
	.byte	4,4,35,128,168,2,13
	.byte	'reserved_9404',0
	.word	72519
	.byte	252,23,4,35,132,168,2,13
	.byte	'FPU_TRAP_CON',0
	.word	69372
	.byte	4,4,35,128,192,2,13
	.byte	'FPU_TRAP_PC',0
	.word	69512
	.byte	4,4,35,132,192,2,13
	.byte	'FPU_TRAP_OPC',0
	.word	69442
	.byte	4,4,35,136,192,2,13
	.byte	'reserved_A00C',0
	.word	3371
	.byte	4,4,35,140,192,2,13
	.byte	'FPU_TRAP_SRC1',0
	.word	69581
	.byte	4,4,35,144,192,2,13
	.byte	'FPU_TRAP_SRC2',0
	.word	69652
	.byte	4,4,35,148,192,2,13
	.byte	'FPU_TRAP_SRC3',0
	.word	69723
	.byte	4,4,35,152,192,2,13
	.byte	'reserved_A01C',0
	.word	72530
	.byte	228,63,4,35,156,192,2,13
	.byte	'DPR',0
	.word	72551
	.byte	128,1,4,35,128,128,3,13
	.byte	'reserved_C080',0
	.word	72556
	.byte	128,31,4,35,128,129,3,13
	.byte	'CPR',0
	.word	72576
	.byte	64,4,35,128,160,3,13
	.byte	'reserved_D040',0
	.word	72581
	.byte	192,31,4,35,192,160,3,13
	.byte	'CPXE',0
	.word	72592
	.byte	16,4,35,128,192,3,13
	.byte	'DPRE',0
	.word	72601
	.byte	16,4,35,144,192,3,13
	.byte	'DPWE',0
	.word	72610
	.byte	16,4,35,160,192,3,13
	.byte	'reserved_E030',0
	.word	72619
	.byte	208,7,4,35,176,192,3,13
	.byte	'TPS',0
	.word	72630
	.byte	16,4,35,128,200,3,13
	.byte	'reserved_E410',0
	.word	72635
	.byte	240,23,4,35,144,200,3,13
	.byte	'TR',0
	.word	72655
	.byte	64,4,35,128,224,3,13
	.byte	'reserved_F040',0
	.word	72660
	.byte	192,23,4,35,192,224,3,13
	.byte	'CCTRL',0
	.word	67680
	.byte	4,4,35,128,248,3,13
	.byte	'CCNT',0
	.word	67618
	.byte	4,4,35,132,248,3,13
	.byte	'ICNT',0
	.word	69794
	.byte	4,4,35,136,248,3,13
	.byte	'M1CNT',0
	.word	70039
	.byte	4,4,35,140,248,3,13
	.byte	'M2CNT',0
	.word	70102
	.byte	4,4,35,144,248,3,13
	.byte	'M3CNT',0
	.word	70165
	.byte	4,4,35,148,248,3,13
	.byte	'reserved_FC18',0
	.word	72671
	.byte	232,1,4,35,152,248,3,13
	.byte	'DBGSR',0
	.word	68372
	.byte	4,4,35,128,250,3,13
	.byte	'reserved_FD04',0
	.word	3371
	.byte	4,4,35,132,250,3,13
	.byte	'EXEVT',0
	.word	69248
	.byte	4,4,35,136,250,3,13
	.byte	'CREVT',0
	.word	68124
	.byte	4,4,35,140,250,3,13
	.byte	'SWEVT',0
	.word	71529
	.byte	4,4,35,144,250,3,13
	.byte	'reserved_FD14',0
	.word	50124
	.byte	28,4,35,148,250,3,13
	.byte	'TRIG_ACC',0
	.word	71982
	.byte	4,4,35,176,250,3,13
	.byte	'reserved_FD34',0
	.word	5530
	.byte	12,4,35,180,250,3,13
	.byte	'DMS',0
	.word	68875
	.byte	4,4,35,192,250,3,13
	.byte	'DCX',0
	.word	68625
	.byte	4,4,35,196,250,3,13
	.byte	'DBGTCR',0
	.word	68435
	.byte	4,4,35,200,250,3,13
	.byte	'reserved_FD4C',0
	.word	72682
	.byte	180,1,4,35,204,250,3,13
	.byte	'PCXI',0
	.word	70477
	.byte	4,4,35,128,252,3,13
	.byte	'PSW',0
	.word	70913
	.byte	4,4,35,132,252,3,13
	.byte	'PC',0
	.word	70228
	.byte	4,4,35,136,252,3,13
	.byte	'reserved_FE0C',0
	.word	5190
	.byte	8,4,35,140,252,3,13
	.byte	'SYSCON',0
	.word	71592
	.byte	4,4,35,148,252,3,13
	.byte	'CPU_ID',0
	.word	67998
	.byte	4,4,35,152,252,3,13
	.byte	'CORE_ID',0
	.word	67807
	.byte	4,4,35,156,252,3,13
	.byte	'BIV',0
	.word	67496
	.byte	4,4,35,160,252,3,13
	.byte	'BTV',0
	.word	67557
	.byte	4,4,35,164,252,3,13
	.byte	'ISP',0
	.word	69917
	.byte	4,4,35,168,252,3,13
	.byte	'ICR',0
	.word	69856
	.byte	4,4,35,172,252,3,13
	.byte	'reserved_FE30',0
	.word	5190
	.byte	8,4,35,176,252,3,13
	.byte	'FCX',0
	.word	69311
	.byte	4,4,35,184,252,3,13
	.byte	'LCX',0
	.word	69978
	.byte	4,4,35,188,252,3,13
	.byte	'reserved_FE40',0
	.word	50115
	.byte	16,4,35,192,252,3,13
	.byte	'CUS_ID',0
	.word	68187
	.byte	4,4,35,208,252,3,13
	.byte	'reserved_FE54',0
	.word	72693
	.byte	172,1,4,35,212,252,3,13
	.byte	'D',0
	.word	72704
	.byte	64,4,35,128,254,3,13
	.byte	'reserved_FF40',0
	.word	72713
	.byte	64,4,35,192,254,3,13
	.byte	'A',0
	.word	72722
	.byte	64,4,35,128,255,3,13
	.byte	'reserved_FFC0',0
	.word	72713
	.byte	64,4,35,192,255,3,0,14
	.word	72731
	.byte	32
	.byte	'Ifx_CPU',0,21,130,11,3
	.word	74522
	.byte	15,9,127,9,1,16
	.byte	'IfxCpu_Id_0',0,0,16
	.byte	'IfxCpu_Id_1',0,1,16
	.byte	'IfxCpu_Id_none',0,2,0,32
	.byte	'IfxCpu_Id',0,9,132,1,3
	.word	74544
	.byte	32
	.byte	'IfxCpu_ResourceCpu',0,9,161,1,3
	.word	1979
	.byte	10
	.byte	'_Ifx_STM_ACCEN0_Bits',0,22,45,16,4,11
	.byte	'EN0',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	612
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	612
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	612
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	612
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	612
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	612
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	612
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	612
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	612
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	612
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	612
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	612
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	612
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	612
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	612
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	612
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	612
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	612
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	612
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	612
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	612
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	612
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	612
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_STM_ACCEN0_Bits',0,22,79,3
	.word	74642
	.byte	10
	.byte	'_Ifx_STM_ACCEN1_Bits',0,22,82,16,4,11
	.byte	'reserved_0',0,4
	.word	437
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_ACCEN1_Bits',0,22,85,3
	.word	75199
	.byte	10
	.byte	'_Ifx_STM_CAP_Bits',0,22,88,16,4,11
	.byte	'STMCAP63_32',0,4
	.word	437
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_CAP_Bits',0,22,91,3
	.word	75276
	.byte	10
	.byte	'_Ifx_STM_CAPSV_Bits',0,22,94,16,4,11
	.byte	'STMCAP63_32',0,4
	.word	437
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_CAPSV_Bits',0,22,97,3
	.word	75348
	.byte	10
	.byte	'_Ifx_STM_CLC_Bits',0,22,100,16,4,11
	.byte	'DISR',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	437
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_STM_CLC_Bits',0,22,107,3
	.word	75424
	.byte	10
	.byte	'_Ifx_STM_CMCON_Bits',0,22,110,16,4,11
	.byte	'MSIZE0',0,1
	.word	612
	.byte	5,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	612
	.byte	3,0,2,35,0,11
	.byte	'MSTART0',0,1
	.word	612
	.byte	5,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	612
	.byte	3,0,2,35,1,11
	.byte	'MSIZE1',0,1
	.word	612
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	612
	.byte	3,0,2,35,2,11
	.byte	'MSTART1',0,1
	.word	612
	.byte	5,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	612
	.byte	3,0,2,35,3,0,32
	.byte	'Ifx_STM_CMCON_Bits',0,22,120,3
	.word	75565
	.byte	10
	.byte	'_Ifx_STM_CMP_Bits',0,22,123,16,4,11
	.byte	'CMPVAL',0,4
	.word	437
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_CMP_Bits',0,22,126,3
	.word	75783
	.byte	10
	.byte	'_Ifx_STM_ICR_Bits',0,22,129,1,16,4,11
	.byte	'CMP0EN',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'CMP0IR',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'CMP0OS',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'CMP1EN',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'CMP1IR',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'CMP1OS',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	437
	.byte	25,0,2,35,0,0,32
	.byte	'Ifx_STM_ICR_Bits',0,22,139,1,3
	.word	75850
	.byte	10
	.byte	'_Ifx_STM_ID_Bits',0,22,142,1,16,4,11
	.byte	'MODREV',0,1
	.word	612
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	612
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	629
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_STM_ID_Bits',0,22,147,1,3
	.word	76053
	.byte	10
	.byte	'_Ifx_STM_ISCR_Bits',0,22,150,1,16,4,11
	.byte	'CMP0IRR',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'CMP0IRS',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'CMP1IRR',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'CMP1IRS',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	437
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_STM_ISCR_Bits',0,22,157,1,3
	.word	76160
	.byte	10
	.byte	'_Ifx_STM_KRST0_Bits',0,22,160,1,16,4,11
	.byte	'RST',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	437
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_STM_KRST0_Bits',0,22,165,1,3
	.word	76311
	.byte	10
	.byte	'_Ifx_STM_KRST1_Bits',0,22,168,1,16,4,11
	.byte	'RST',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	437
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_STM_KRST1_Bits',0,22,172,1,3
	.word	76422
	.byte	10
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,22,175,1,16,4,11
	.byte	'CLR',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	437
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_STM_KRSTCLR_Bits',0,22,179,1,3
	.word	76514
	.byte	10
	.byte	'_Ifx_STM_OCS_Bits',0,22,182,1,16,4,11
	.byte	'reserved_0',0,4
	.word	437
	.byte	24,8,2,35,0,11
	.byte	'SUS',0,1
	.word	612
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	612
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	612
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	612
	.byte	2,0,2,35,3,0,32
	.byte	'Ifx_STM_OCS_Bits',0,22,189,1,3
	.word	76610
	.byte	10
	.byte	'_Ifx_STM_TIM0_Bits',0,22,192,1,16,4,11
	.byte	'STM31_0',0,4
	.word	437
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM0_Bits',0,22,195,1,3
	.word	76756
	.byte	10
	.byte	'_Ifx_STM_TIM0SV_Bits',0,22,198,1,16,4,11
	.byte	'STM31_0',0,4
	.word	437
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM0SV_Bits',0,22,201,1,3
	.word	76828
	.byte	10
	.byte	'_Ifx_STM_TIM1_Bits',0,22,204,1,16,4,11
	.byte	'STM35_4',0,4
	.word	437
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM1_Bits',0,22,207,1,3
	.word	76904
	.byte	10
	.byte	'_Ifx_STM_TIM2_Bits',0,22,210,1,16,4,11
	.byte	'STM39_8',0,4
	.word	437
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM2_Bits',0,22,213,1,3
	.word	76976
	.byte	10
	.byte	'_Ifx_STM_TIM3_Bits',0,22,216,1,16,4,11
	.byte	'STM43_12',0,4
	.word	437
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM3_Bits',0,22,219,1,3
	.word	77048
	.byte	10
	.byte	'_Ifx_STM_TIM4_Bits',0,22,222,1,16,4,11
	.byte	'STM47_16',0,4
	.word	437
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM4_Bits',0,22,225,1,3
	.word	77121
	.byte	10
	.byte	'_Ifx_STM_TIM5_Bits',0,22,228,1,16,4,11
	.byte	'STM51_20',0,4
	.word	437
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM5_Bits',0,22,231,1,3
	.word	77194
	.byte	10
	.byte	'_Ifx_STM_TIM6_Bits',0,22,234,1,16,4,11
	.byte	'STM63_32',0,4
	.word	437
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM6_Bits',0,22,237,1,3
	.word	77267
	.byte	12,22,245,1,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74642
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ACCEN0',0,22,250,1,3
	.word	77340
	.byte	12,22,253,1,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75199
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ACCEN1',0,22,130,2,3
	.word	77404
	.byte	12,22,133,2,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75276
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CAP',0,22,138,2,3
	.word	77468
	.byte	12,22,141,2,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75348
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CAPSV',0,22,146,2,3
	.word	77529
	.byte	12,22,149,2,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75424
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CLC',0,22,154,2,3
	.word	77592
	.byte	12,22,157,2,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75565
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CMCON',0,22,162,2,3
	.word	77653
	.byte	12,22,165,2,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75783
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CMP',0,22,170,2,3
	.word	77716
	.byte	12,22,173,2,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75850
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ICR',0,22,178,2,3
	.word	77777
	.byte	12,22,181,2,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76053
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ID',0,22,186,2,3
	.word	77838
	.byte	12,22,189,2,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76160
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ISCR',0,22,194,2,3
	.word	77898
	.byte	12,22,197,2,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76311
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_KRST0',0,22,202,2,3
	.word	77960
	.byte	12,22,205,2,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76422
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_KRST1',0,22,210,2,3
	.word	78023
	.byte	12,22,213,2,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76514
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_KRSTCLR',0,22,218,2,3
	.word	78086
	.byte	12,22,221,2,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76610
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_OCS',0,22,226,2,3
	.word	78151
	.byte	12,22,229,2,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76756
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM0',0,22,234,2,3
	.word	78212
	.byte	12,22,237,2,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76828
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM0SV',0,22,242,2,3
	.word	78274
	.byte	12,22,245,2,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76904
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM1',0,22,250,2,3
	.word	78338
	.byte	12,22,253,2,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76976
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM2',0,22,130,3,3
	.word	78400
	.byte	12,22,133,3,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77048
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM3',0,22,138,3,3
	.word	78462
	.byte	12,22,141,3,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77121
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM4',0,22,146,3,3
	.word	78524
	.byte	12,22,149,3,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77194
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM5',0,22,154,3,3
	.word	78586
	.byte	12,22,157,3,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77267
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM6',0,22,162,3,3
	.word	78648
	.byte	15,8,144,1,9,1,16
	.byte	'IfxCpu_CounterMode_normal',0,0,16
	.byte	'IfxCpu_CounterMode_task',0,1,0,32
	.byte	'IfxCpu_CounterMode',0,8,148,1,3
	.word	78710
	.byte	20,8,160,1,9,6,13
	.byte	'counter',0
	.word	2134
	.byte	4,2,35,0,13
	.byte	'overlfow',0
	.word	612
	.byte	1,2,35,4,0,32
	.byte	'IfxCpu_Counter',0,8,164,1,3
	.word	78799
	.byte	20,8,172,1,9,32,13
	.byte	'instruction',0
	.word	78799
	.byte	6,2,35,0,13
	.byte	'clock',0
	.word	78799
	.byte	6,2,35,6,13
	.byte	'counter1',0
	.word	78799
	.byte	6,2,35,12,13
	.byte	'counter2',0
	.word	78799
	.byte	6,2,35,18,13
	.byte	'counter3',0
	.word	78799
	.byte	6,2,35,24,0,32
	.byte	'IfxCpu_Perf',0,8,179,1,3
	.word	78865
	.byte	10
	.byte	'_Ifx_FLASH_ACCEN0_Bits',0,23,45,16,4,11
	.byte	'EN0',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	612
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	612
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	612
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	612
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	612
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	612
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	612
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	612
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	612
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	612
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	612
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	612
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	612
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	612
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	612
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	612
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	612
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	612
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	612
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	612
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	612
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	612
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	612
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_ACCEN0_Bits',0,23,79,3
	.word	78983
	.byte	10
	.byte	'_Ifx_FLASH_ACCEN1_Bits',0,23,82,16,4,11
	.byte	'reserved_0',0,4
	.word	437
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_FLASH_ACCEN1_Bits',0,23,85,3
	.word	79544
	.byte	10
	.byte	'_Ifx_FLASH_CBAB_CFG_Bits',0,23,88,16,4,11
	.byte	'SEL',0,1
	.word	612
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	612
	.byte	2,0,2,35,0,11
	.byte	'CLR',0,1
	.word	612
	.byte	1,7,2,35,1,11
	.byte	'DIS',0,1
	.word	612
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	437
	.byte	22,0,2,35,0,0,32
	.byte	'Ifx_FLASH_CBAB_CFG_Bits',0,23,95,3
	.word	79625
	.byte	10
	.byte	'_Ifx_FLASH_CBAB_STAT_Bits',0,23,98,16,4,11
	.byte	'VLD0',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'VLD1',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'VLD2',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'VLD3',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'VLD4',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'VLD5',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'VLD6',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'VLD7',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'VLD8',0,1
	.word	612
	.byte	1,7,2,35,1,11
	.byte	'VLD9',0,1
	.word	612
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	437
	.byte	22,0,2,35,0,0,32
	.byte	'Ifx_FLASH_CBAB_STAT_Bits',0,23,111,3
	.word	79778
	.byte	10
	.byte	'_Ifx_FLASH_CBAB_TOP_Bits',0,23,114,16,4,11
	.byte	'reserved_0',0,1
	.word	612
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	437
	.byte	19,8,2,35,0,11
	.byte	'ERR',0,1
	.word	612
	.byte	6,2,2,35,3,11
	.byte	'VLD',0,1
	.word	612
	.byte	1,1,2,35,3,11
	.byte	'CLR',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_CBAB_TOP_Bits',0,23,121,3
	.word	80026
	.byte	10
	.byte	'_Ifx_FLASH_COMM0_Bits',0,23,124,16,4,11
	.byte	'STATUS',0,1
	.word	612
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	437
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_FLASH_COMM0_Bits',0,23,128,1,3
	.word	80172
	.byte	10
	.byte	'_Ifx_FLASH_COMM1_Bits',0,23,131,1,16,4,11
	.byte	'STATUS',0,1
	.word	612
	.byte	8,0,2,35,0,11
	.byte	'DATA',0,1
	.word	612
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	629
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_COMM1_Bits',0,23,136,1,3
	.word	80270
	.byte	10
	.byte	'_Ifx_FLASH_COMM2_Bits',0,23,139,1,16,4,11
	.byte	'STATUS',0,1
	.word	612
	.byte	8,0,2,35,0,11
	.byte	'DATA',0,1
	.word	612
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	629
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_COMM2_Bits',0,23,144,1,3
	.word	80386
	.byte	10
	.byte	'_Ifx_FLASH_ECCRD_Bits',0,23,147,1,16,4,11
	.byte	'RCODE',0,4
	.word	437
	.byte	22,10,2,35,0,11
	.byte	'reserved_22',0,2
	.word	629
	.byte	8,2,2,35,2,11
	.byte	'EDCERRINJ',0,1
	.word	612
	.byte	1,1,2,35,3,11
	.byte	'ECCORDIS',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_ECCRD_Bits',0,23,153,1,3
	.word	80502
	.byte	10
	.byte	'_Ifx_FLASH_ECCRP_Bits',0,23,156,1,16,4,11
	.byte	'RCODE',0,4
	.word	437
	.byte	22,10,2,35,0,11
	.byte	'reserved_22',0,2
	.word	629
	.byte	8,2,2,35,2,11
	.byte	'EDCERRINJ',0,1
	.word	612
	.byte	1,1,2,35,3,11
	.byte	'ECCORDIS',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_ECCRP_Bits',0,23,162,1,3
	.word	80642
	.byte	10
	.byte	'_Ifx_FLASH_ECCW_Bits',0,23,165,1,16,4,11
	.byte	'WCODE',0,4
	.word	437
	.byte	22,10,2,35,0,11
	.byte	'reserved_22',0,2
	.word	629
	.byte	8,2,2,35,2,11
	.byte	'DECENCDIS',0,1
	.word	612
	.byte	1,1,2,35,3,11
	.byte	'PECENCDIS',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_ECCW_Bits',0,23,171,1,3
	.word	80782
	.byte	10
	.byte	'_Ifx_FLASH_FCON_Bits',0,23,174,1,16,4,11
	.byte	'WSPFLASH',0,1
	.word	612
	.byte	4,4,2,35,0,11
	.byte	'WSECPF',0,1
	.word	612
	.byte	2,2,2,35,0,11
	.byte	'WSDFLASH',0,2
	.word	629
	.byte	6,4,2,35,0,11
	.byte	'WSECDF',0,1
	.word	612
	.byte	3,1,2,35,1,11
	.byte	'IDLE',0,1
	.word	612
	.byte	1,0,2,35,1,11
	.byte	'ESLDIS',0,1
	.word	612
	.byte	1,7,2,35,2,11
	.byte	'SLEEP',0,1
	.word	612
	.byte	1,6,2,35,2,11
	.byte	'NSAFECC',0,1
	.word	612
	.byte	1,5,2,35,2,11
	.byte	'STALL',0,1
	.word	612
	.byte	1,4,2,35,2,11
	.byte	'RES21',0,1
	.word	612
	.byte	2,2,2,35,2,11
	.byte	'RES23',0,1
	.word	612
	.byte	2,0,2,35,2,11
	.byte	'VOPERM',0,1
	.word	612
	.byte	1,7,2,35,3,11
	.byte	'SQERM',0,1
	.word	612
	.byte	1,6,2,35,3,11
	.byte	'PROERM',0,1
	.word	612
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	612
	.byte	3,2,2,35,3,11
	.byte	'PR5V',0,1
	.word	612
	.byte	1,1,2,35,3,11
	.byte	'EOBM',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_FCON_Bits',0,23,193,1,3
	.word	80921
	.byte	10
	.byte	'_Ifx_FLASH_FPRO_Bits',0,23,196,1,16,4,11
	.byte	'PROINP',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'PRODISP',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'PROIND',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'PRODISD',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'PROINHSMCOTP',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'RES5',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'PROINOTP',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'RES7',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'PROINDBG',0,1
	.word	612
	.byte	1,7,2,35,1,11
	.byte	'PRODISDBG',0,1
	.word	612
	.byte	1,6,2,35,1,11
	.byte	'PROINHSM',0,1
	.word	612
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	612
	.byte	5,0,2,35,1,11
	.byte	'DCFP',0,1
	.word	612
	.byte	1,7,2,35,2,11
	.byte	'DDFP',0,1
	.word	612
	.byte	1,6,2,35,2,11
	.byte	'DDFPX',0,1
	.word	612
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	612
	.byte	1,4,2,35,2,11
	.byte	'DDFD',0,1
	.word	612
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	612
	.byte	1,2,2,35,2,11
	.byte	'ENPE',0,1
	.word	612
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	612
	.byte	8,0,2,35,3,0,32
	.byte	'Ifx_FLASH_FPRO_Bits',0,23,218,1,3
	.word	81283
	.byte	10
	.byte	'_Ifx_FLASH_FSR_Bits',0,23,221,1,16,4,11
	.byte	'FABUSY',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'D0BUSY',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'RES1',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'P0BUSY',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'P1BUSY',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'RES5',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'RES6',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'PROG',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'ERASE',0,1
	.word	612
	.byte	1,7,2,35,1,11
	.byte	'PFPAGE',0,1
	.word	612
	.byte	1,6,2,35,1,11
	.byte	'DFPAGE',0,1
	.word	612
	.byte	1,5,2,35,1,11
	.byte	'OPER',0,1
	.word	612
	.byte	1,4,2,35,1,11
	.byte	'SQER',0,1
	.word	612
	.byte	1,3,2,35,1,11
	.byte	'PROER',0,1
	.word	612
	.byte	1,2,2,35,1,11
	.byte	'PFSBER',0,1
	.word	612
	.byte	1,1,2,35,1,11
	.byte	'PFDBER',0,1
	.word	612
	.byte	1,0,2,35,1,11
	.byte	'PFMBER',0,1
	.word	612
	.byte	1,7,2,35,2,11
	.byte	'RES17',0,1
	.word	612
	.byte	1,6,2,35,2,11
	.byte	'DFSBER',0,1
	.word	612
	.byte	1,5,2,35,2,11
	.byte	'DFDBER',0,1
	.word	612
	.byte	1,4,2,35,2,11
	.byte	'DFTBER',0,1
	.word	612
	.byte	1,3,2,35,2,11
	.byte	'DFMBER',0,1
	.word	612
	.byte	1,2,2,35,2,11
	.byte	'SRIADDERR',0,1
	.word	612
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	629
	.byte	2,7,2,35,2,11
	.byte	'PVER',0,1
	.word	612
	.byte	1,6,2,35,3,11
	.byte	'EVER',0,1
	.word	612
	.byte	1,5,2,35,3,11
	.byte	'SPND',0,1
	.word	612
	.byte	1,4,2,35,3,11
	.byte	'SLM',0,1
	.word	612
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	612
	.byte	1,2,2,35,3,11
	.byte	'ORIER',0,1
	.word	612
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_FSR_Bits',0,23,254,1,3
	.word	81724
	.byte	10
	.byte	'_Ifx_FLASH_ID_Bits',0,23,129,2,16,4,11
	.byte	'MODREV',0,1
	.word	612
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	612
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	629
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_ID_Bits',0,23,134,2,3
	.word	82330
	.byte	10
	.byte	'_Ifx_FLASH_MARD_Bits',0,23,137,2,16,4,11
	.byte	'HMARGIN',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'SELD0',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'SPND',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'SPNDERR',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,2
	.word	629
	.byte	10,1,2,35,0,11
	.byte	'TRAPDIS',0,1
	.word	612
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	629
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_MARD_Bits',0,23,147,2,3
	.word	82441
	.byte	10
	.byte	'_Ifx_FLASH_MARP_Bits',0,23,150,2,16,4,11
	.byte	'SELP0',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'SELP1',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'RES2',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'RES3',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	629
	.byte	11,1,2,35,0,11
	.byte	'TRAPDIS',0,1
	.word	612
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	629
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_MARP_Bits',0,23,159,2,3
	.word	82655
	.byte	10
	.byte	'_Ifx_FLASH_PROCOND_Bits',0,23,162,2,16,4,11
	.byte	'L',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'NSAFECC',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'RAMIN',0,1
	.word	612
	.byte	2,4,2,35,0,11
	.byte	'RAMINSEL',0,1
	.word	612
	.byte	4,0,2,35,0,11
	.byte	'OSCCFG',0,1
	.word	612
	.byte	1,7,2,35,1,11
	.byte	'MODE',0,1
	.word	612
	.byte	2,5,2,35,1,11
	.byte	'APREN',0,1
	.word	612
	.byte	1,4,2,35,1,11
	.byte	'CAP0EN',0,1
	.word	612
	.byte	1,3,2,35,1,11
	.byte	'CAP1EN',0,1
	.word	612
	.byte	1,2,2,35,1,11
	.byte	'CAP2EN',0,1
	.word	612
	.byte	1,1,2,35,1,11
	.byte	'CAP3EN',0,1
	.word	612
	.byte	1,0,2,35,1,11
	.byte	'ESR0CNT',0,2
	.word	629
	.byte	12,4,2,35,2,11
	.byte	'RES29',0,1
	.word	612
	.byte	2,2,2,35,3,11
	.byte	'RES30',0,1
	.word	612
	.byte	1,1,2,35,3,11
	.byte	'RPRO',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_PROCOND_Bits',0,23,179,2,3
	.word	82842
	.byte	10
	.byte	'_Ifx_FLASH_PROCONDBG_Bits',0,23,182,2,16,4,11
	.byte	'OCDSDIS',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'DBGIFLCK',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'EDM',0,1
	.word	612
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	437
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONDBG_Bits',0,23,188,2,3
	.word	83166
	.byte	10
	.byte	'_Ifx_FLASH_PROCONHSM_Bits',0,23,191,2,16,4,11
	.byte	'HSMDBGDIS',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'DBGIFLCK',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'TSTIFLCK',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'HSMTSTDIS',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'RES15',0,2
	.word	629
	.byte	12,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	629
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_PROCONHSM_Bits',0,23,199,2,3
	.word	83309
	.byte	10
	.byte	'_Ifx_FLASH_PROCONHSMCOTP_Bits',0,23,202,2,16,4,11
	.byte	'HSMBOOTEN',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'SSWWAIT',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'HSMDX',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'HSM6X',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'HSM16X',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'HSM17X',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'S6ROM',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'HSMENPINS',0,2
	.word	629
	.byte	2,7,2,35,0,11
	.byte	'HSMENRES',0,1
	.word	612
	.byte	2,5,2,35,1,11
	.byte	'DESTDBG',0,1
	.word	612
	.byte	2,3,2,35,1,11
	.byte	'BLKFLAN',0,1
	.word	612
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	612
	.byte	2,0,2,35,1,11
	.byte	'S16ROM',0,1
	.word	612
	.byte	1,7,2,35,2,11
	.byte	'S17ROM',0,1
	.word	612
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	629
	.byte	14,0,2,35,2,0,32
	.byte	'Ifx_FLASH_PROCONHSMCOTP_Bits',0,23,219,2,3
	.word	83498
	.byte	10
	.byte	'_Ifx_FLASH_PROCONOTP_Bits',0,23,222,2,16,4,11
	.byte	'S0ROM',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'S1ROM',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'S2ROM',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'S3ROM',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'S4ROM',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'S5ROM',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'S6ROM',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'S7ROM',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'S8ROM',0,1
	.word	612
	.byte	1,7,2,35,1,11
	.byte	'S9ROM',0,1
	.word	612
	.byte	1,6,2,35,1,11
	.byte	'S10ROM',0,1
	.word	612
	.byte	1,5,2,35,1,11
	.byte	'S11ROM',0,1
	.word	612
	.byte	1,4,2,35,1,11
	.byte	'S12ROM',0,1
	.word	612
	.byte	1,3,2,35,1,11
	.byte	'S13ROM',0,1
	.word	612
	.byte	1,2,2,35,1,11
	.byte	'S14ROM',0,1
	.word	612
	.byte	1,1,2,35,1,11
	.byte	'S15ROM',0,1
	.word	612
	.byte	1,0,2,35,1,11
	.byte	'S16ROM',0,1
	.word	612
	.byte	1,7,2,35,2,11
	.byte	'S17ROM',0,1
	.word	612
	.byte	1,6,2,35,2,11
	.byte	'S18ROM',0,1
	.word	612
	.byte	1,5,2,35,2,11
	.byte	'S19ROM',0,1
	.word	612
	.byte	1,4,2,35,2,11
	.byte	'S20ROM',0,1
	.word	612
	.byte	1,3,2,35,2,11
	.byte	'S21ROM',0,1
	.word	612
	.byte	1,2,2,35,2,11
	.byte	'S22ROM',0,1
	.word	612
	.byte	1,1,2,35,2,11
	.byte	'S23ROM',0,1
	.word	612
	.byte	1,0,2,35,2,11
	.byte	'S24ROM',0,1
	.word	612
	.byte	1,7,2,35,3,11
	.byte	'S25ROM',0,1
	.word	612
	.byte	1,6,2,35,3,11
	.byte	'S26ROM',0,1
	.word	612
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	612
	.byte	2,3,2,35,3,11
	.byte	'BML',0,1
	.word	612
	.byte	2,1,2,35,3,11
	.byte	'TP',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_PROCONOTP_Bits',0,23,254,2,3
	.word	83861
	.byte	10
	.byte	'_Ifx_FLASH_PROCONP_Bits',0,23,129,3,16,4,11
	.byte	'S0L',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'S1L',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'S2L',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'S3L',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'S4L',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'S5L',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'S6L',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'S7L',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'S8L',0,1
	.word	612
	.byte	1,7,2,35,1,11
	.byte	'S9L',0,1
	.word	612
	.byte	1,6,2,35,1,11
	.byte	'S10L',0,1
	.word	612
	.byte	1,5,2,35,1,11
	.byte	'S11L',0,1
	.word	612
	.byte	1,4,2,35,1,11
	.byte	'S12L',0,1
	.word	612
	.byte	1,3,2,35,1,11
	.byte	'S13L',0,1
	.word	612
	.byte	1,2,2,35,1,11
	.byte	'S14L',0,1
	.word	612
	.byte	1,1,2,35,1,11
	.byte	'S15L',0,1
	.word	612
	.byte	1,0,2,35,1,11
	.byte	'S16L',0,1
	.word	612
	.byte	1,7,2,35,2,11
	.byte	'S17L',0,1
	.word	612
	.byte	1,6,2,35,2,11
	.byte	'S18L',0,1
	.word	612
	.byte	1,5,2,35,2,11
	.byte	'S19L',0,1
	.word	612
	.byte	1,4,2,35,2,11
	.byte	'S20L',0,1
	.word	612
	.byte	1,3,2,35,2,11
	.byte	'S21L',0,1
	.word	612
	.byte	1,2,2,35,2,11
	.byte	'S22L',0,1
	.word	612
	.byte	1,1,2,35,2,11
	.byte	'S23L',0,1
	.word	612
	.byte	1,0,2,35,2,11
	.byte	'S24L',0,1
	.word	612
	.byte	1,7,2,35,3,11
	.byte	'S25L',0,1
	.word	612
	.byte	1,6,2,35,3,11
	.byte	'S26L',0,1
	.word	612
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	612
	.byte	4,1,2,35,3,11
	.byte	'RPRO',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_PROCONP_Bits',0,23,160,3,3
	.word	84456
	.byte	10
	.byte	'_Ifx_FLASH_PROCONWOP_Bits',0,23,163,3,16,4,11
	.byte	'S0WOP',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'S1WOP',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'S2WOP',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'S3WOP',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'S4WOP',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'S5WOP',0,1
	.word	612
	.byte	1,2,2,35,0,11
	.byte	'S6WOP',0,1
	.word	612
	.byte	1,1,2,35,0,11
	.byte	'S7WOP',0,1
	.word	612
	.byte	1,0,2,35,0,11
	.byte	'S8WOP',0,1
	.word	612
	.byte	1,7,2,35,1,11
	.byte	'S9WOP',0,1
	.word	612
	.byte	1,6,2,35,1,11
	.byte	'S10WOP',0,1
	.word	612
	.byte	1,5,2,35,1,11
	.byte	'S11WOP',0,1
	.word	612
	.byte	1,4,2,35,1,11
	.byte	'S12WOP',0,1
	.word	612
	.byte	1,3,2,35,1,11
	.byte	'S13WOP',0,1
	.word	612
	.byte	1,2,2,35,1,11
	.byte	'S14WOP',0,1
	.word	612
	.byte	1,1,2,35,1,11
	.byte	'S15WOP',0,1
	.word	612
	.byte	1,0,2,35,1,11
	.byte	'S16WOP',0,1
	.word	612
	.byte	1,7,2,35,2,11
	.byte	'S17WOP',0,1
	.word	612
	.byte	1,6,2,35,2,11
	.byte	'S18WOP',0,1
	.word	612
	.byte	1,5,2,35,2,11
	.byte	'S19WOP',0,1
	.word	612
	.byte	1,4,2,35,2,11
	.byte	'S20WOP',0,1
	.word	612
	.byte	1,3,2,35,2,11
	.byte	'S21WOP',0,1
	.word	612
	.byte	1,2,2,35,2,11
	.byte	'S22WOP',0,1
	.word	612
	.byte	1,1,2,35,2,11
	.byte	'S23WOP',0,1
	.word	612
	.byte	1,0,2,35,2,11
	.byte	'S24WOP',0,1
	.word	612
	.byte	1,7,2,35,3,11
	.byte	'S25WOP',0,1
	.word	612
	.byte	1,6,2,35,3,11
	.byte	'S26WOP',0,1
	.word	612
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	612
	.byte	4,1,2,35,3,11
	.byte	'DATM',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_PROCONWOP_Bits',0,23,194,3,3
	.word	84980
	.byte	10
	.byte	'_Ifx_FLASH_RDB_CFG0_Bits',0,23,197,3,16,4,11
	.byte	'TAG',0,1
	.word	612
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	437
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG0_Bits',0,23,201,3,3
	.word	85562
	.byte	10
	.byte	'_Ifx_FLASH_RDB_CFG1_Bits',0,23,204,3,16,4,11
	.byte	'TAG',0,1
	.word	612
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	437
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG1_Bits',0,23,208,3,3
	.word	85664
	.byte	10
	.byte	'_Ifx_FLASH_RDB_CFG2_Bits',0,23,211,3,16,4,11
	.byte	'TAG',0,1
	.word	612
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	437
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG2_Bits',0,23,215,3,3
	.word	85766
	.byte	10
	.byte	'_Ifx_FLASH_RRAD_Bits',0,23,218,3,16,4,11
	.byte	'reserved_0',0,1
	.word	612
	.byte	3,5,2,35,0,11
	.byte	'ADD',0,4
	.word	437
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RRAD_Bits',0,23,222,3,3
	.word	85868
	.byte	10
	.byte	'_Ifx_FLASH_RRCT_Bits',0,23,225,3,16,4,11
	.byte	'STRT',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'STP',0,1
	.word	612
	.byte	1,6,2,35,0,11
	.byte	'BUSY',0,1
	.word	612
	.byte	1,5,2,35,0,11
	.byte	'DONE',0,1
	.word	612
	.byte	1,4,2,35,0,11
	.byte	'ERR',0,1
	.word	612
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	612
	.byte	3,0,2,35,0,11
	.byte	'EOBM',0,1
	.word	612
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	612
	.byte	7,0,2,35,1,11
	.byte	'CNT',0,2
	.word	629
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_RRCT_Bits',0,23,236,3,3
	.word	85962
	.byte	10
	.byte	'_Ifx_FLASH_RRD0_Bits',0,23,239,3,16,4,11
	.byte	'DATA',0,4
	.word	437
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RRD0_Bits',0,23,242,3,3
	.word	86172
	.byte	10
	.byte	'_Ifx_FLASH_RRD1_Bits',0,23,245,3,16,4,11
	.byte	'DATA',0,4
	.word	437
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RRD1_Bits',0,23,248,3,3
	.word	86245
	.byte	10
	.byte	'_Ifx_FLASH_UBAB_CFG_Bits',0,23,251,3,16,4,11
	.byte	'SEL',0,1
	.word	612
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	612
	.byte	2,0,2,35,0,11
	.byte	'CLR',0,1
	.word	612
	.byte	1,7,2,35,1,11
	.byte	'DIS',0,1
	.word	612
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	437
	.byte	22,0,2,35,0,0,32
	.byte	'Ifx_FLASH_UBAB_CFG_Bits',0,23,130,4,3
	.word	86318
	.byte	10
	.byte	'_Ifx_FLASH_UBAB_STAT_Bits',0,23,133,4,16,4,11
	.byte	'VLD0',0,1
	.word	612
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	437
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_FLASH_UBAB_STAT_Bits',0,23,137,4,3
	.word	86473
	.byte	10
	.byte	'_Ifx_FLASH_UBAB_TOP_Bits',0,23,140,4,16,4,11
	.byte	'reserved_0',0,1
	.word	612
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	437
	.byte	19,8,2,35,0,11
	.byte	'ERR',0,1
	.word	612
	.byte	6,2,2,35,3,11
	.byte	'VLD',0,1
	.word	612
	.byte	1,1,2,35,3,11
	.byte	'CLR',0,1
	.word	612
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_UBAB_TOP_Bits',0,23,147,4,3
	.word	86578
	.byte	12,23,155,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78983
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ACCEN0',0,23,160,4,3
	.word	86726
	.byte	12,23,163,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79544
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ACCEN1',0,23,168,4,3
	.word	86792
	.byte	12,23,171,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79625
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_CBAB_CFG',0,23,176,4,3
	.word	86858
	.byte	12,23,179,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79778
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_CBAB_STAT',0,23,184,4,3
	.word	86926
	.byte	12,23,187,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80026
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_CBAB_TOP',0,23,192,4,3
	.word	86995
	.byte	12,23,195,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80172
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_COMM0',0,23,200,4,3
	.word	87063
	.byte	12,23,203,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80270
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_COMM1',0,23,208,4,3
	.word	87128
	.byte	12,23,211,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80386
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_COMM2',0,23,216,4,3
	.word	87193
	.byte	12,23,219,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80502
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ECCRD',0,23,224,4,3
	.word	87258
	.byte	12,23,227,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80642
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ECCRP',0,23,232,4,3
	.word	87323
	.byte	12,23,235,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80782
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ECCW',0,23,240,4,3
	.word	87388
	.byte	12,23,243,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80921
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_FCON',0,23,248,4,3
	.word	87452
	.byte	12,23,251,4,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81283
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_FPRO',0,23,128,5,3
	.word	87516
	.byte	12,23,131,5,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81724
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_FSR',0,23,136,5,3
	.word	87580
	.byte	12,23,139,5,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	82330
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ID',0,23,144,5,3
	.word	87643
	.byte	12,23,147,5,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	82441
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_MARD',0,23,152,5,3
	.word	87705
	.byte	12,23,155,5,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	82655
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_MARP',0,23,160,5,3
	.word	87769
	.byte	12,23,163,5,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	82842
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCOND',0,23,168,5,3
	.word	87833
	.byte	12,23,171,5,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	83166
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONDBG',0,23,176,5,3
	.word	87900
	.byte	12,23,179,5,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	83309
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONHSM',0,23,184,5,3
	.word	87969
	.byte	12,23,187,5,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	83498
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONHSMCOTP',0,23,192,5,3
	.word	88038
	.byte	12,23,195,5,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	83861
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONOTP',0,23,200,5,3
	.word	88111
	.byte	12,23,203,5,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	84456
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONP',0,23,208,5,3
	.word	88180
	.byte	12,23,211,5,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	84980
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONWOP',0,23,216,5,3
	.word	88247
	.byte	12,23,219,5,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	85562
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG0',0,23,224,5,3
	.word	88316
	.byte	12,23,227,5,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	85664
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG1',0,23,232,5,3
	.word	88384
	.byte	12,23,235,5,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	85766
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG2',0,23,240,5,3
	.word	88452
	.byte	12,23,243,5,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	85868
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RRAD',0,23,248,5,3
	.word	88520
	.byte	12,23,251,5,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	85962
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RRCT',0,23,128,6,3
	.word	88584
	.byte	12,23,131,6,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86172
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RRD0',0,23,136,6,3
	.word	88648
	.byte	12,23,139,6,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86245
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RRD1',0,23,144,6,3
	.word	88712
	.byte	12,23,147,6,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86318
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_UBAB_CFG',0,23,152,6,3
	.word	88776
	.byte	12,23,155,6,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86473
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_UBAB_STAT',0,23,160,6,3
	.word	88844
	.byte	12,23,163,6,9,4,13
	.byte	'U',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	453
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86578
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_UBAB_TOP',0,23,168,6,3
	.word	88913
	.byte	10
	.byte	'_Ifx_FLASH_CBAB',0,23,179,6,25,12,13
	.byte	'CFG',0
	.word	86858
	.byte	4,2,35,0,13
	.byte	'STAT',0
	.word	86926
	.byte	4,2,35,4,13
	.byte	'TOP',0
	.word	86995
	.byte	4,2,35,8,0,14
	.word	88981
	.byte	32
	.byte	'Ifx_FLASH_CBAB',0,23,184,6,3
	.word	89044
	.byte	10
	.byte	'_Ifx_FLASH_RDB',0,23,187,6,25,12,13
	.byte	'CFG0',0
	.word	88316
	.byte	4,2,35,0,13
	.byte	'CFG1',0
	.word	88384
	.byte	4,2,35,4,13
	.byte	'CFG2',0
	.word	88452
	.byte	4,2,35,8,0,14
	.word	89073
	.byte	32
	.byte	'Ifx_FLASH_RDB',0,23,192,6,3
	.word	89137
	.byte	10
	.byte	'_Ifx_FLASH_UBAB',0,23,195,6,25,12,13
	.byte	'CFG',0
	.word	88776
	.byte	4,2,35,0,13
	.byte	'STAT',0
	.word	88844
	.byte	4,2,35,4,13
	.byte	'TOP',0
	.word	88913
	.byte	4,2,35,8,0,14
	.word	89165
	.byte	32
	.byte	'Ifx_FLASH_UBAB',0,23,200,6,3
	.word	89228
	.byte	32
	.byte	'Ifx_P_ACCEN0_Bits',0,11,79,3
	.word	8943
	.byte	32
	.byte	'Ifx_P_ACCEN1_Bits',0,11,85,3
	.word	8856
	.byte	32
	.byte	'Ifx_P_ESR_Bits',0,11,107,3
	.word	5199
	.byte	32
	.byte	'Ifx_P_ID_Bits',0,11,115,3
	.word	3252
	.byte	32
	.byte	'Ifx_P_IN_Bits',0,11,137,1,3
	.word	4247
	.byte	32
	.byte	'Ifx_P_IOCR0_Bits',0,11,150,1,3
	.word	3380
	.byte	32
	.byte	'Ifx_P_IOCR12_Bits',0,11,163,1,3
	.word	4027
	.byte	32
	.byte	'Ifx_P_IOCR4_Bits',0,11,176,1,3
	.word	3595
	.byte	32
	.byte	'Ifx_P_IOCR8_Bits',0,11,189,1,3
	.word	3810
	.byte	32
	.byte	'Ifx_P_LPCR0_Bits',0,11,197,1,3
	.word	8215
	.byte	32
	.byte	'Ifx_P_LPCR1_Bits',0,11,205,1,3
	.word	8339
	.byte	32
	.byte	'Ifx_P_LPCR1_P21_Bits',0,11,215,1,3
	.word	8423
	.byte	32
	.byte	'Ifx_P_LPCR2_Bits',0,11,229,1,3
	.word	8603
	.byte	32
	.byte	'Ifx_P_OMCR0_Bits',0,11,240,1,3
	.word	6854
	.byte	32
	.byte	'Ifx_P_OMCR12_Bits',0,11,250,1,3
	.word	7378
	.byte	32
	.byte	'Ifx_P_OMCR4_Bits',0,11,133,2,3
	.word	7028
	.byte	32
	.byte	'Ifx_P_OMCR8_Bits',0,11,144,2,3
	.word	7202
	.byte	32
	.byte	'Ifx_P_OMCR_Bits',0,11,166,2,3
	.word	7867
	.byte	32
	.byte	'Ifx_P_OMR_Bits',0,11,203,2,3
	.word	2681
	.byte	32
	.byte	'Ifx_P_OMSR0_Bits',0,11,213,2,3
	.word	6191
	.byte	32
	.byte	'Ifx_P_OMSR12_Bits',0,11,224,2,3
	.word	6679
	.byte	32
	.byte	'Ifx_P_OMSR4_Bits',0,11,235,2,3
	.word	6338
	.byte	32
	.byte	'Ifx_P_OMSR8_Bits',0,11,246,2,3
	.word	6507
	.byte	32
	.byte	'Ifx_P_OMSR_Bits',0,11,140,3,3
	.word	7534
	.byte	32
	.byte	'Ifx_P_OUT_Bits',0,11,162,3,3
	.word	2365
	.byte	32
	.byte	'Ifx_P_PCSR_Bits',0,11,180,3,3
	.word	5905
	.byte	32
	.byte	'Ifx_P_PDISC_Bits',0,11,202,3,3
	.word	5539
	.byte	32
	.byte	'Ifx_P_PDR0_Bits',0,11,223,3,3
	.word	4570
	.byte	32
	.byte	'Ifx_P_PDR1_Bits',0,11,244,3,3
	.word	4874
	.byte	32
	.byte	'Ifx_P_ACCEN0',0,11,129,4,3
	.word	9470
	.byte	32
	.byte	'Ifx_P_ACCEN1',0,11,137,4,3
	.word	8903
	.byte	32
	.byte	'Ifx_P_ESR',0,11,145,4,3
	.word	5490
	.byte	32
	.byte	'Ifx_P_ID',0,11,153,4,3
	.word	3331
	.byte	32
	.byte	'Ifx_P_IN',0,11,161,4,3
	.word	4521
	.byte	32
	.byte	'Ifx_P_IOCR0',0,11,169,4,3
	.word	3555
	.byte	32
	.byte	'Ifx_P_IOCR12',0,11,177,4,3
	.word	4207
	.byte	32
	.byte	'Ifx_P_IOCR4',0,11,185,4,3
	.word	3770
	.byte	32
	.byte	'Ifx_P_IOCR8',0,11,193,4,3
	.word	3987
	.byte	32
	.byte	'Ifx_P_LPCR0',0,11,201,4,3
	.word	8299
	.byte	32
	.byte	'Ifx_P_LPCR1',0,11,210,4,3
	.word	8548
	.byte	32
	.byte	'Ifx_P_LPCR2',0,11,218,4,3
	.word	8807
	.byte	32
	.byte	'Ifx_P_OMCR',0,11,226,4,3
	.word	8175
	.byte	32
	.byte	'Ifx_P_OMCR0',0,11,234,4,3
	.word	6988
	.byte	32
	.byte	'Ifx_P_OMCR12',0,11,242,4,3
	.word	7494
	.byte	32
	.byte	'Ifx_P_OMCR4',0,11,250,4,3
	.word	7162
	.byte	32
	.byte	'Ifx_P_OMCR8',0,11,130,5,3
	.word	7338
	.byte	32
	.byte	'Ifx_P_OMR',0,11,138,5,3
	.word	3212
	.byte	32
	.byte	'Ifx_P_OMSR',0,11,146,5,3
	.word	7827
	.byte	32
	.byte	'Ifx_P_OMSR0',0,11,154,5,3
	.word	6298
	.byte	32
	.byte	'Ifx_P_OMSR12',0,11,162,5,3
	.word	6814
	.byte	32
	.byte	'Ifx_P_OMSR4',0,11,170,5,3
	.word	6467
	.byte	32
	.byte	'Ifx_P_OMSR8',0,11,178,5,3
	.word	6639
	.byte	32
	.byte	'Ifx_P_OUT',0,11,186,5,3
	.word	2641
	.byte	32
	.byte	'Ifx_P_PCSR',0,11,194,5,3
	.word	6151
	.byte	32
	.byte	'Ifx_P_PDISC',0,11,202,5,3
	.word	5865
	.byte	32
	.byte	'Ifx_P_PDR0',0,11,210,5,3
	.word	4834
	.byte	32
	.byte	'Ifx_P_PDR1',0,11,218,5,3
	.word	5150
	.byte	14
	.word	9510
	.byte	32
	.byte	'Ifx_P',0,11,139,6,3
	.word	90575
	.byte	32
	.byte	'IfxPort_InputMode',0,10,89,3
	.word	10123
	.byte	32
	.byte	'IfxPort_Mode',0,10,116,3
	.word	19412
	.byte	32
	.byte	'IfxPort_OutputIdx',0,10,130,1,3
	.word	10398
	.byte	32
	.byte	'IfxPort_OutputMode',0,10,138,1,3
	.word	10328
	.byte	32
	.byte	'IfxPort_PadDriver',0,10,158,1,3
	.word	18138
	.byte	32
	.byte	'IfxPort_State',0,10,178,1,3
	.word	10711
	.byte	32
	.byte	'IfxPort_Pin',0,10,194,1,3
	.word	17900
	.byte	32
	.byte	'IfxScuCcu_PllStepsFunctionHook',0,24,148,1,16
	.word	176
	.byte	20,24,212,5,9,8,13
	.byte	'value',0
	.word	2134
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	2134
	.byte	4,2,35,4,0,32
	.byte	'IfxScuCcu_CcuconRegConfig',0,24,216,5,3
	.word	90808
	.byte	20,24,221,5,9,8,13
	.byte	'pDivider',0
	.word	612
	.byte	1,2,35,0,13
	.byte	'nDivider',0
	.word	612
	.byte	1,2,35,1,13
	.byte	'k2Initial',0
	.word	612
	.byte	1,2,35,2,13
	.byte	'waitTime',0
	.word	233
	.byte	4,2,35,4,0,32
	.byte	'IfxScuCcu_InitialStepConfig',0,24,227,5,3
	.word	90879
	.byte	20,24,231,5,9,12,13
	.byte	'k2Step',0
	.word	612
	.byte	1,2,35,0,13
	.byte	'waitTime',0
	.word	233
	.byte	4,2,35,2,13
	.byte	'hookFunction',0
	.word	90768
	.byte	4,2,35,8,0,32
	.byte	'IfxScuCcu_PllStepsConfig',0,24,236,5,3
	.word	90996
	.byte	3
	.word	173
	.byte	20,24,244,5,9,48,13
	.byte	'ccucon0',0
	.word	90808
	.byte	8,2,35,0,13
	.byte	'ccucon1',0
	.word	90808
	.byte	8,2,35,8,13
	.byte	'ccucon2',0
	.word	90808
	.byte	8,2,35,16,13
	.byte	'ccucon5',0
	.word	90808
	.byte	8,2,35,24,13
	.byte	'ccucon6',0
	.word	90808
	.byte	8,2,35,32,13
	.byte	'ccucon7',0
	.word	90808
	.byte	8,2,35,40,0,32
	.byte	'IfxScuCcu_ClockDistributionConfig',0,24,252,5,3
	.word	91098
	.byte	20,24,128,6,9,8,13
	.byte	'value',0
	.word	2134
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	2134
	.byte	4,2,35,4,0,32
	.byte	'IfxScuCcu_FlashWaitstateConfig',0,24,132,6,3
	.word	91250
	.byte	3
	.word	90996
	.byte	20,24,137,6,9,16,13
	.byte	'numOfPllDividerSteps',0
	.word	612
	.byte	1,2,35,0,13
	.byte	'pllDividerStep',0
	.word	91326
	.byte	4,2,35,4,13
	.byte	'pllInitialStep',0
	.word	90879
	.byte	8,2,35,8,0,32
	.byte	'IfxScuCcu_SysPllConfig',0,24,142,6,3
	.word	91331
	.byte	32
	.byte	'Ifx_SENT_ACCEN0_Bits',0,13,79,3
	.word	12543
	.byte	32
	.byte	'Ifx_SENT_ACCEN1_Bits',0,13,85,3
	.word	12453
	.byte	32
	.byte	'Ifx_SENT_CH_CFDR_Bits',0,13,94,3
	.word	13221
	.byte	32
	.byte	'Ifx_SENT_CH_CPDR_Bits',0,13,101,3
	.word	13113
	.byte	32
	.byte	'Ifx_SENT_CH_INP_Bits',0,13,114,3
	.word	16099
	.byte	32
	.byte	'Ifx_SENT_CH_INTCLR_Bits',0,13,134,1,3
	.word	15487
	.byte	32
	.byte	'Ifx_SENT_CH_INTEN_Bits',0,13,154,1,3
	.word	15793
	.byte	32
	.byte	'Ifx_SENT_CH_INTSET_Bits',0,13,174,1,3
	.word	15180
	.byte	32
	.byte	'Ifx_SENT_CH_INTSTAT_Bits',0,13,194,1,3
	.word	14872
	.byte	32
	.byte	'Ifx_SENT_CH_IOCR_Bits',0,13,216,1,3
	.word	13970
	.byte	32
	.byte	'Ifx_SENT_CH_RCR_Bits',0,13,235,1,3
	.word	13367
	.byte	32
	.byte	'Ifx_SENT_CH_RSR_Bits',0,13,245,1,3
	.word	13659
	.byte	32
	.byte	'Ifx_SENT_CH_SCR_Bits',0,13,128,2,3
	.word	14314
	.byte	32
	.byte	'Ifx_SENT_CH_SDS_Bits',0,13,138,2,3
	.word	13818
	.byte	32
	.byte	'Ifx_SENT_CH_VIEW_Bits',0,13,159,2,3
	.word	14484
	.byte	32
	.byte	'Ifx_SENT_CH_WDT_Bits',0,13,166,2,3
	.word	16288
	.byte	32
	.byte	'Ifx_SENT_CLC_Bits',0,13,178,2,3
	.word	10892
	.byte	32
	.byte	'Ifx_SENT_FDR_Bits',0,13,188,2,3
	.word	11211
	.byte	32
	.byte	'Ifx_SENT_ID_Bits',0,13,196,2,3
	.word	11088
	.byte	32
	.byte	'Ifx_SENT_INTOV_Bits',0,13,208,2,3
	.word	11371
	.byte	32
	.byte	'Ifx_SENT_KRST0_Bits',0,13,216,2,3
	.word	12329
	.byte	32
	.byte	'Ifx_SENT_KRST1_Bits',0,13,223,2,3
	.word	12224
	.byte	32
	.byte	'Ifx_SENT_KRSTCLR_Bits',0,13,230,2,3
	.word	12117
	.byte	32
	.byte	'Ifx_SENT_OCS_Bits',0,13,240,2,3
	.word	11956
	.byte	32
	.byte	'Ifx_SENT_RDR_Bits',0,13,253,2,3
	.word	11752
	.byte	32
	.byte	'Ifx_SENT_RTS_Bits',0,13,131,3,3
	.word	16661
	.byte	32
	.byte	'Ifx_SENT_TPD_Bits',0,13,138,3,3
	.word	11638
	.byte	32
	.byte	'Ifx_SENT_TSR_Bits',0,13,144,3,3
	.word	11557
	.byte	32
	.byte	'Ifx_SENT_ACCEN0',0,13,157,3,3
	.word	13073
	.byte	32
	.byte	'Ifx_SENT_ACCEN1',0,13,165,3,3
	.word	12503
	.byte	32
	.byte	'Ifx_SENT_CH_CFDR',0,13,173,3,3
	.word	13327
	.byte	32
	.byte	'Ifx_SENT_CH_CPDR',0,13,181,3,3
	.word	13181
	.byte	32
	.byte	'Ifx_SENT_CH_INP',0,13,189,3,3
	.word	16248
	.byte	32
	.byte	'Ifx_SENT_CH_INTCLR',0,13,197,3,3
	.word	15753
	.byte	32
	.byte	'Ifx_SENT_CH_INTEN',0,13,205,3,3
	.word	16059
	.byte	32
	.byte	'Ifx_SENT_CH_INTSET',0,13,213,3,3
	.word	15447
	.byte	32
	.byte	'Ifx_SENT_CH_INTSTAT',0,13,221,3,3
	.word	15140
	.byte	32
	.byte	'Ifx_SENT_CH_IOCR',0,13,229,3,3
	.word	14274
	.byte	32
	.byte	'Ifx_SENT_CH_RCR',0,13,237,3,3
	.word	13619
	.byte	32
	.byte	'Ifx_SENT_CH_RSR',0,13,245,3,3
	.word	13778
	.byte	32
	.byte	'Ifx_SENT_CH_SCR',0,13,253,3,3
	.word	14444
	.byte	32
	.byte	'Ifx_SENT_CH_SDS',0,13,133,4,3
	.word	13930
	.byte	32
	.byte	'Ifx_SENT_CH_VIEW',0,13,141,4,3
	.word	14832
	.byte	32
	.byte	'Ifx_SENT_CH_WDT',0,13,149,4,3
	.word	16356
	.byte	32
	.byte	'Ifx_SENT_CLC',0,13,157,4,3
	.word	11048
	.byte	32
	.byte	'Ifx_SENT_FDR',0,13,165,4,3
	.word	11331
	.byte	32
	.byte	'Ifx_SENT_ID',0,13,173,4,3
	.word	11171
	.byte	32
	.byte	'Ifx_SENT_INTOV',0,13,181,4,3
	.word	11517
	.byte	32
	.byte	'Ifx_SENT_KRST0',0,13,189,4,3
	.word	12413
	.byte	32
	.byte	'Ifx_SENT_KRST1',0,13,197,4,3
	.word	12289
	.byte	32
	.byte	'Ifx_SENT_KRSTCLR',0,13,205,4,3
	.word	12184
	.byte	32
	.byte	'Ifx_SENT_OCS',0,13,213,4,3
	.word	12077
	.byte	32
	.byte	'Ifx_SENT_RDR',0,13,221,4,3
	.word	11898
	.byte	32
	.byte	'Ifx_SENT_RTS',0,13,229,4,3
	.word	16702
	.byte	32
	.byte	'Ifx_SENT_TPD',0,13,237,4,3
	.word	11703
	.byte	32
	.byte	'Ifx_SENT_TSR',0,13,245,4,3
	.word	11598
	.byte	14
	.word	16396
	.byte	32
	.byte	'Ifx_SENT_CH',0,13,145,5,3
	.word	92961
	.byte	14
	.word	16760
	.byte	32
	.byte	'Ifx_SENT',0,13,181,5,3
	.word	92987
	.byte	21
	.word	18058
	.byte	32
	.byte	'IfxSent_Sent_In',0,15,65,3
	.word	93010
	.byte	21
	.word	18640
	.byte	32
	.byte	'IfxSent_Spc_Out',0,15,74,3
	.word	93039
	.byte	32
	.byte	'IfxSent_AlternateInput',0,12,94,3
	.word	17301
	.byte	32
	.byte	'IfxSent_ClockDividerMode',0,12,113,3
	.word	20491
	.byte	32
	.byte	'IfxSent_ConfigBit',0,12,121,3
	.word	25187
	.byte	32
	.byte	'IfxSent_DigitalGlitchesLength',0,12,143,1,3
	.word	21036
	.byte	32
	.byte	'IfxSent_ExtendedSerialFrameMode',0,12,151,1,3
	.word	22217
	.byte	32
	.byte	'IfxSent_ExternalTrigger',0,12,167,1,3
	.word	21594
	.byte	32
	.byte	'IfxSent_FrameCheckMode',0,12,175,1,3
	.word	22130
	.byte	32
	.byte	'IfxSent_InterruptNodePointer',0,12,191,1,3
	.word	23085
	.byte	32
	.byte	'IfxSent_Nibble',0,12,205,1,3
	.word	23853
	.byte	15,12,210,1,9,1,16
	.byte	'IfxSent_SleepMode_enable',0,0,16
	.byte	'IfxSent_SleepMode_disable',0,1,0,32
	.byte	'IfxSent_SleepMode',0,12,214,1,3
	.word	93365
	.byte	32
	.byte	'IfxSent_SpcMode',0,12,223,1,3
	.word	22887
	.byte	15,12,227,1,9,1,16
	.byte	'IfxSent_SuspendMode_none',0,0,16
	.byte	'IfxSent_SuspendMode_hard',0,1,16
	.byte	'IfxSent_SuspendMode_soft',0,2,0,32
	.byte	'IfxSent_SuspendMode',0,12,232,1,3
	.word	93479
	.byte	32
	.byte	'IfxSent_TimeBase',0,12,240,1,3
	.word	22807
	.byte	32
	.byte	'IfxSent_TriggerSource',0,12,250,1,3
	.word	22662
	.byte	15,12,128,2,9,1,16
	.byte	'IfxSent_InterruptSource_rsi',0,0,16
	.byte	'IfxSent_InterruptSource_rdi',0,1,16
	.byte	'IfxSent_InterruptSource_rbi',0,2,16
	.byte	'IfxSent_InterruptSource_tdi',0,3,16
	.byte	'IfxSent_InterruptSource_tbi',0,4,16
	.byte	'IfxSent_InterruptSource_fri',0,5,16
	.byte	'IfxSent_InterruptSource_fdi',0,6,16
	.byte	'IfxSent_InterruptSource_nni',0,7,16
	.byte	'IfxSent_InterruptSource_nvi',0,8,16
	.byte	'IfxSent_InterruptSource_crci',0,9,16
	.byte	'IfxSent_InterruptSource_wsi',0,10,16
	.byte	'IfxSent_InterruptSource_sdi',0,11,16
	.byte	'IfxSent_InterruptSource_scri',0,12,16
	.byte	'IfxSent_InterruptSource_wdi',0,13,0,32
	.byte	'IfxSent_InterruptSource',0,12,144,2,3
	.word	93653
	.byte	32
	.byte	'IfxSent_Sent_Enable',0,17,157,3,3
	.word	24257
	.byte	32
	.byte	'IfxSent_Sent',0,17,168,3,3
	.word	20838
	.byte	32
	.byte	'IfxSent_Sent_EnabledInterrupts',0,17,176,3,3
	.word	24771
	.byte	32
	.byte	'IfxSent_Sent_InputOutputControl',0,17,190,3,3
	.word	21881
	.byte	32
	.byte	'IfxSent_Sent_Interrupt',0,17,198,3,3
	.word	24211
	.byte	32
	.byte	'IfxSent_Sent_InterruptNodeControl',0,17,212,3,3
	.word	23452
	.byte	32
	.byte	'IfxSent_Sent_NibbleControl',0,17,226,3,3
	.word	24012
	.byte	32
	.byte	'IfxSent_Sent_Pins',0,17,237,3,3
	.word	23759
	.byte	32
	.byte	'IfxSent_Sent_ReceiveControl',0,17,255,3,3
	.word	22310
	.byte	32
	.byte	'IfxSent_Sent_TransmitControl',0,17,138,4,3
	.word	22973
	.byte	32
	.byte	'IfxSent_Sent_Channel',0,17,151,4,3
	.word	20972
	.byte	32
	.byte	'IfxSent_Sent_ChannelConfig',0,17,170,4,3
	.word	24807
	.byte	32
	.byte	'IfxSent_Sent_Config',0,17,179,4,3
	.word	20864
	.byte	32
	.byte	'IfxSent_Sent_Frame',0,17,188,4,3
	.word	25120
	.byte	32
	.byte	'IfxSent_Sent_SerialMessageFrame',0,17,198,4,3
	.word	25237
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L45:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,39,12,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,36,0,3,8,11,15,62
	.byte	15,0,0,8,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,9,59,0,3,8,0,0,10,19,1,3,8,58,15,59,15
	.byte	57,15,11,15,0,0,11,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,12,23,1,58,15,59,15,57,15,11,15,0,0,13,13
	.byte	0,3,8,73,19,11,15,56,9,0,0,14,53,0,73,19,0,0,15,4,1,58,15,59,15,57,15,11,15,0,0,16,40,0,3,8,28,13,0,0
	.byte	17,11,1,0,0,18,1,1,11,15,73,19,0,0,19,33,0,47,15,0,0,20,19,1,58,15,59,15,57,15,11,15,0,0,21,38,0,73,19
	.byte	0,0,22,46,1,3,8,54,15,39,12,63,12,60,12,0,0,23,5,0,73,19,0,0,24,46,1,3,8,73,19,54,15,39,12,63,12,60,12
	.byte	0,0,25,5,0,3,8,73,19,0,0,26,46,1,49,19,0,0,27,5,0,49,19,0,0,28,46,1,3,8,58,15,59,15,57,15,54,15,39,12
	.byte	63,12,60,12,0,0,29,46,0,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,30,29,1,49,19,0,0,31,11
	.byte	0,49,19,0,0,32,22,0,3,8,58,15,59,15,57,15,73,19,0,0,33,21,0,54,15,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L46:
	.word	.L339-.L338
.L338:
	.half	3
	.word	.L341-.L340
.L340:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Std',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap',0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu_Intrinsics.h',0,1,0,0
	.byte	'IfxScuWdt.h',0,2,0,0
	.byte	'IfxScu_regdef.h',0,3,0,0
	.byte	'IfxSrc.h',0,4,0,0
	.byte	'IfxSrc_regdef.h',0,3,0,0
	.byte	'IfxSrc_cfg.h',0,5,0,0
	.byte	'IfxCpu.h',0,1,0,0
	.byte	'IfxCpu_cfg.h',0,5,0,0
	.byte	'IfxPort.h',0,6,0,0
	.byte	'IfxPort_regdef.h',0,3,0,0
	.byte	'IfxSent.h',0,7,0,0
	.byte	'IfxSent_regdef.h',0,3,0,0
	.byte	'IfxSent_cfg.h',0,5,0,0
	.byte	'IfxSent_PinMap.h',0,8,0,0
	.byte	'Ifx_Types.h',0,1,0,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent\\IfxSent_Sent.h',0,0,0,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent\\IfxSent_Sent.c',0,0,0,0
	.byte	'IfxScu_cfg.h',0,5,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'IfxCpu_regdef.h',0,3,0,0
	.byte	'IfxStm_regdef.h',0,3,0,0
	.byte	'IfxFlash_regdef.h',0,3,0,0
	.byte	'IfxScuCcu.h',0,2,0,0,0
.L341:
.L339:
	.sdecl	'.debug_info',debug,cluster('IfxSent_Sent_deInitModule')
	.sect	'.debug_info'
.L47:
	.word	293
	.half	3
	.word	.L48
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent\\IfxSent_Sent.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L50,.L49
	.byte	2
	.word	.L43
	.byte	3
	.byte	'IfxSent_Sent_deInitModule',0,1,56,6,1,1,1
	.word	.L30,.L82,.L29
	.byte	4
	.byte	'driver',0,1,56,46
	.word	.L83,.L84
	.byte	5
	.word	.L30,.L82
	.byte	6
	.byte	'sentSFR',0,1,58,15
	.word	.L85,.L86
	.byte	6
	.byte	'passwd',0,1,59,15
	.word	.L87,.L88
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxSent_Sent_deInitModule')
	.sect	'.debug_abbrev'
.L48:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxSent_Sent_deInitModule')
	.sect	'.debug_line'
.L49:
	.word	.L343-.L342
.L342:
	.half	3
	.word	.L345-.L344
.L344:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent\\IfxSent_Sent.c',0,0,0,0,0
.L345:
	.byte	5,31,7,0,5,2
	.word	.L30
	.byte	3,57,1,5,57,9
	.half	.L276-.L30
	.byte	3,1,1,5,23,9
	.half	.L275-.L276
	.byte	1,5,31,9
	.half	.L278-.L275
	.byte	3,1,1,5,25,9
	.half	.L279-.L278
	.byte	3,1,1,5,29,9
	.half	.L281-.L279
	.byte	3,1,1,5,1,9
	.half	.L283-.L281
	.byte	3,1,1,7,9
	.half	.L51-.L283
	.byte	0,1,1
.L343:
	.sdecl	'.debug_ranges',debug,cluster('IfxSent_Sent_deInitModule')
	.sect	'.debug_ranges'
.L50:
	.word	-1,.L30,0,.L51-.L30,0,0
	.sdecl	'.debug_info',debug,cluster('IfxSent_Sent_initModule')
	.sect	'.debug_info'
.L52:
	.word	487
	.half	3
	.word	.L53
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent\\IfxSent_Sent.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L55,.L54
	.byte	2
	.word	.L43
	.byte	3
	.byte	'IfxSent_Sent_initModule',0,1,157,2,9
	.word	.L89
	.byte	1,1,1
	.word	.L36,.L90,.L35
	.byte	4
	.byte	'driver',0,1,157,2,47
	.word	.L83,.L91
	.byte	4
	.byte	'config',0,1,157,2,82
	.word	.L92,.L93
	.byte	5
	.word	.L36,.L90
	.byte	6
	.byte	'result',0,1,159,2,15
	.word	.L89,.L94
	.byte	6
	.byte	'sentSFR',0,1,160,2,15
	.word	.L85,.L95
	.byte	5
	.word	.L96,.L90
	.byte	6
	.byte	'passwd',0,1,163,2,15
	.word	.L87,.L97
	.byte	7
	.word	.L98,.L99,.L21
	.byte	8
	.word	.L100,.L101
	.byte	9
	.word	.L102,.L99,.L21
	.byte	0,7
	.word	.L103,.L104,.L22
	.byte	8
	.word	.L105,.L106
	.byte	10
	.word	.L107,.L104,.L22
	.byte	6
	.byte	'passwd',0,2,217,4,12
	.word	.L87,.L108
	.byte	0,0,7
	.word	.L109,.L110,.L111
	.byte	8
	.word	.L112,.L113
	.byte	8
	.word	.L114,.L115
	.byte	9
	.word	.L116,.L110,.L111
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxSent_Sent_initModule')
	.sect	'.debug_abbrev'
.L53:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,10,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxSent_Sent_initModule')
	.sect	'.debug_line'
.L54:
	.word	.L347-.L346
.L346:
	.half	3
	.word	.L349-.L348
.L348:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Std',0
	.byte	0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent\\IfxSent_Sent.c',0,0,0,0
	.byte	'IfxSent.h',0,1,0,0,0
.L349:
	.byte	5,9,7,0,5,2
	.word	.L36
	.byte	3,156,2,1,5,23,9
	.half	.L313-.L36
	.byte	3,2,1,5,31,9
	.half	.L314-.L313
	.byte	3,1,1,5,18,9
	.half	.L315-.L314
	.byte	3,1,1,5,56,9
	.half	.L96-.L315
	.byte	3,2,1,5,22,9
	.half	.L312-.L96
	.byte	1,4,2,5,23,9
	.half	.L99-.L312
	.byte	3,172,3,1,5,29,9
	.half	.L350-.L99
	.byte	1,5,5,9
	.half	.L351-.L350
	.byte	1,4,1,9
	.half	.L21-.L351
	.byte	3,214,124,1,4,2,5,53,7,9
	.half	.L104-.L21
	.byte	3,180,2,1,5,19,9
	.half	.L316-.L104
	.byte	1,5,31,9
	.half	.L318-.L316
	.byte	3,1,1,5,16,9
	.half	.L320-.L318
	.byte	3,1,1,5,22,9
	.half	.L352-.L320
	.byte	1,5,29,9
	.half	.L353-.L352
	.byte	3,1,1,5,18,9
	.half	.L322-.L353
	.byte	3,2,1,5,5,9
	.half	.L319-.L322
	.byte	1,4,1,5,31,7,9
	.half	.L22-.L319
	.byte	3,204,125,1,5,34,9
	.half	.L324-.L22
	.byte	3,1,1,5,27,9
	.half	.L354-.L324
	.byte	1,5,63,7,9
	.half	.L355-.L354
	.byte	1,5,67,9
	.half	.L356-.L355
	.byte	1,5,63,9
	.half	.L24-.L356
	.byte	1,5,19,9
	.half	.L25-.L24
	.byte	1,5,25,9
	.half	.L357-.L25
	.byte	1,5,19,9
	.half	.L358-.L357
	.byte	3,1,1,5,25,9
	.half	.L359-.L358
	.byte	1,5,44,9
	.half	.L360-.L359
	.byte	3,2,1,5,77,9
	.half	.L361-.L360
	.byte	1,5,51,9
	.half	.L326-.L361
	.byte	3,1,1,4,2,5,16,9
	.half	.L110-.L326
	.byte	3,148,3,1,5,22,9
	.half	.L362-.L110
	.byte	1,4,1,5,29,9
	.half	.L111-.L362
	.byte	3,238,124,1,5,5,9
	.half	.L328-.L111
	.byte	3,2,1,5,1,9
	.half	.L26-.L328
	.byte	3,1,1,7,9
	.half	.L56-.L26
	.byte	0,1,1
.L347:
	.sdecl	'.debug_ranges',debug,cluster('IfxSent_Sent_initModule')
	.sect	'.debug_ranges'
.L55:
	.word	-1,.L36,0,.L56-.L36,0,0
	.sdecl	'.debug_info',debug,cluster('IfxSent_Sent_initModuleConfig')
	.sect	'.debug_info'
.L57:
	.word	311
	.half	3
	.word	.L58
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent\\IfxSent_Sent.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L60,.L59
	.byte	2
	.word	.L43
	.byte	3
	.byte	'IfxSent_Sent_initModuleConfig',0,1,183,2,6,1,1,1
	.word	.L38,.L117,.L37
	.byte	4
	.byte	'config',0,1,183,2,57
	.word	.L118,.L119
	.byte	4
	.byte	'sent',0,1,183,2,75
	.word	.L85,.L120
	.byte	5
	.word	.L38,.L117
	.byte	6
	.byte	'defaultModuleConfig',0,1,186,2,31
	.word	.L121,.L122
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxSent_Sent_initModuleConfig')
	.sect	'.debug_abbrev'
.L58:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxSent_Sent_initModuleConfig')
	.sect	'.debug_line'
.L59:
	.word	.L364-.L363
.L363:
	.half	3
	.word	.L366-.L365
.L365:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent\\IfxSent_Sent.c',0,0,0,0,0
.L366:
	.byte	5,6,7,0,5,2
	.word	.L38
	.byte	3,182,2,1,5,53,9
	.half	.L330-.L38
	.byte	3,3,1,5,51,9
	.half	.L367-.L330
	.byte	1,5,22,9
	.half	.L368-.L367
	.byte	3,5,1,5,20,9
	.half	.L369-.L368
	.byte	1,9
	.half	.L370-.L369
	.byte	3,1,1,5,1,9
	.half	.L371-.L370
	.byte	3,1,1,7,9
	.half	.L61-.L371
	.byte	0,1,1
.L364:
	.sdecl	'.debug_ranges',debug,cluster('IfxSent_Sent_initModuleConfig')
	.sect	'.debug_ranges'
.L60:
	.word	-1,.L38,0,.L61-.L38,0,0
	.sdecl	'.debug_info',debug,cluster('IfxSent_Sent_initChannel')
	.sect	'.debug_info'
.L62:
	.word	1260
	.half	3
	.word	.L63
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent\\IfxSent_Sent.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L65,.L64
	.byte	2
	.word	.L43
	.byte	3
	.byte	'IfxSent_Sent_initChannel',0,1,66,9
	.word	.L89
	.byte	1,1,1
	.word	.L32,.L123,.L31
	.byte	4
	.byte	'channel',0,1,66,56
	.word	.L124,.L125
	.byte	4
	.byte	'config',0,1,66,99
	.word	.L126,.L127
	.byte	5
	.word	.L32,.L123
	.byte	6
	.byte	'result',0,1,68,18
	.word	.L89,.L128
	.byte	5
	.word	.L129,.L123
	.byte	6
	.byte	'sentSFR',0,1,71,18
	.word	.L85,.L130
	.byte	6
	.byte	'sentCh',0,1,72,18
	.word	.L131,.L132
	.byte	7
	.word	.L133,.L134,.L135
	.byte	8
	.word	.L136,.L137
	.byte	8
	.word	.L138,.L139
	.byte	9
	.word	.L140,.L134,.L135
	.byte	0,5
	.word	.L141,.L123
	.byte	6
	.byte	'tempWDT',0,1,79,21
	.word	.L142,.L143
	.byte	5
	.word	.L144,.L123
	.byte	6
	.byte	'tempRCR',0,1,84,21
	.word	.L145,.L146
	.byte	7
	.word	.L147,.L148,.L149
	.byte	8
	.word	.L150,.L151
	.byte	8
	.word	.L152,.L153
	.byte	9
	.word	.L154,.L148,.L149
	.byte	0,5
	.word	.L149,.L123
	.byte	6
	.byte	'tempVIEW',0,1,102,22
	.word	.L155,.L156
	.byte	5
	.word	.L157,.L123
	.byte	6
	.byte	'tempIOCR',0,1,114,22
	.word	.L158,.L159
	.byte	5
	.word	.L160,.L123
	.byte	6
	.byte	'tempINP',0,1,126,21
	.word	.L161,.L162
	.byte	5
	.word	.L163,.L3
	.byte	6
	.byte	'timeOut',0,1,149,1,16
	.word	.L87,.L164
	.byte	6
	.byte	'error',0,1,150,1,16
	.word	.L89,.L165
	.byte	5
	.word	.L166,.L3
	.byte	6
	.byte	'tempSCR',0,1,166,1,29
	.word	.L167,.L168
	.byte	0,0,5
	.word	.L3,.L123
	.byte	6
	.byte	'pinsConfig',0,1,182,1,30
	.word	.L169,.L170
	.byte	5
	.word	.L171,.L10
	.byte	6
	.byte	'sentIn',0,1,186,1,32
	.word	.L172,.L173
	.byte	7
	.word	.L174,.L175,.L11
	.byte	8
	.word	.L176,.L177
	.byte	8
	.word	.L178,.L179
	.byte	8
	.word	.L180,.L181
	.byte	10
	.word	.L182,.L175,.L11
	.byte	7
	.word	.L183,.L184,.L185
	.byte	8
	.word	.L186,.L187
	.byte	8
	.word	.L188,.L189
	.byte	8
	.word	.L190,.L191
	.byte	9
	.word	.L192,.L184,.L185
	.byte	0,7
	.word	.L193,.L194,.L11
	.byte	8
	.word	.L195,.L196
	.byte	8
	.word	.L197,.L198
	.byte	8
	.word	.L199,.L200
	.byte	9
	.word	.L201,.L194,.L11
	.byte	0,0,0,5
	.word	.L11,.L10
	.byte	6
	.byte	'spcOut',0,1,193,1,32
	.word	.L202,.L203
	.byte	7
	.word	.L204,.L205,.L10
	.byte	8
	.word	.L206,.L207
	.byte	8
	.word	.L208,.L209
	.byte	8
	.word	.L210,.L211
	.byte	10
	.word	.L212,.L205,.L10
	.byte	7
	.word	.L213,.L214,.L215
	.byte	8
	.word	.L216,.L217
	.byte	8
	.word	.L218,.L219
	.byte	8
	.word	.L220,.L221
	.byte	8
	.word	.L222,.L223
	.byte	9
	.word	.L224,.L214,.L215
	.byte	0,0,0,0,0,5
	.word	.L10,.L16
	.byte	6
	.byte	'tos',0,1,202,1,20
	.word	.L225,.L226
	.byte	5
	.word	.L15,.L16
	.byte	6
	.byte	'src',0,1,206,1,36
	.word	.L227,.L228
	.byte	7
	.word	.L229,.L230,.L17
	.byte	8
	.word	.L231,.L232
	.byte	9
	.word	.L233,.L230,.L17
	.byte	0,7
	.word	.L234,.L235,.L236
	.byte	8
	.word	.L237,.L238
	.byte	8
	.word	.L239,.L240
	.byte	8
	.word	.L241,.L242
	.byte	10
	.word	.L243,.L235,.L236
	.byte	7
	.word	.L244,.L245,.L236
	.byte	8
	.word	.L246,.L247
	.byte	9
	.word	.L248,.L245,.L236
	.byte	0,0,0,7
	.word	.L249,.L236,.L16
	.byte	8
	.word	.L250,.L251
	.byte	9
	.word	.L252,.L236,.L16
	.byte	0,0,0,0,0,0,0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxSent_Sent_initChannel')
	.sect	'.debug_abbrev'
.L63:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,10,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxSent_Sent_initChannel')
	.sect	'.debug_line'
.L64:
	.word	.L373-.L372
.L372:
	.half	3
	.word	.L375-.L374
.L374:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Std',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std',0,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent\\IfxSent_Sent.c',0,0,0,0
	.byte	'IfxSent.h',0,1,0,0
	.byte	'IfxPort.h',0,2,0,0
	.byte	'IfxSrc.h',0,3,0,0,0
.L375:
	.byte	5,9,7,0,5,2
	.word	.L32
	.byte	3,193,0,1,5,25,9
	.half	.L285-.L32
	.byte	3,2,1,5,29,9
	.half	.L286-.L285
	.byte	3,2,1,5,21,9
	.half	.L376-.L286
	.byte	1,5,34,9
	.half	.L129-.L376
	.byte	3,1,1,5,42,9
	.half	.L377-.L129
	.byte	1,5,47,9
	.half	.L287-.L377
	.byte	3,1,1,5,40,9
	.half	.L378-.L287
	.byte	1,5,24,9
	.half	.L289-.L378
	.byte	3,1,1,5,32,9
	.half	.L379-.L289
	.byte	3,1,1,5,24,9
	.half	.L380-.L379
	.byte	1,5,43,9
	.half	.L381-.L380
	.byte	3,2,1,4,2,5,13,9
	.half	.L134-.L381
	.byte	3,248,3,1,5,30,9
	.half	.L284-.L134
	.byte	1,5,35,9
	.half	.L382-.L284
	.byte	1,4,1,5,54,9
	.half	.L135-.L382
	.byte	3,137,124,1,5,73,9
	.half	.L383-.L135
	.byte	1,5,20,9
	.half	.L141-.L383
	.byte	3,3,1,5,28,9
	.half	.L292-.L141
	.byte	3,1,1,5,20,9
	.half	.L384-.L292
	.byte	1,9
	.half	.L385-.L384
	.byte	3,1,1,5,21,9
	.half	.L144-.L385
	.byte	3,3,1,5,45,9
	.half	.L293-.L144
	.byte	3,1,1,5,21,9
	.half	.L386-.L293
	.byte	1,5,45,9
	.half	.L387-.L386
	.byte	3,1,1,5,21,9
	.half	.L388-.L387
	.byte	1,5,45,9
	.half	.L389-.L388
	.byte	3,1,1,5,21,9
	.half	.L390-.L389
	.byte	1,5,45,9
	.half	.L391-.L390
	.byte	3,1,1,5,21,9
	.half	.L392-.L391
	.byte	1,5,45,9
	.half	.L393-.L392
	.byte	3,1,1,5,21,9
	.half	.L394-.L393
	.byte	1,5,45,9
	.half	.L395-.L394
	.byte	3,1,1,5,21,9
	.half	.L396-.L395
	.byte	1,5,45,9
	.half	.L397-.L396
	.byte	3,1,1,5,21,9
	.half	.L398-.L397
	.byte	1,5,45,9
	.half	.L399-.L398
	.byte	3,1,1,5,21,9
	.half	.L400-.L399
	.byte	1,5,45,9
	.half	.L401-.L400
	.byte	3,1,1,5,21,9
	.half	.L402-.L401
	.byte	1,5,45,9
	.half	.L403-.L402
	.byte	3,1,1,5,21,9
	.half	.L404-.L403
	.byte	1,5,45,9
	.half	.L405-.L404
	.byte	3,1,1,5,21,9
	.half	.L406-.L405
	.byte	1,5,45,9
	.half	.L407-.L406
	.byte	3,1,1,5,21,9
	.half	.L408-.L407
	.byte	1,9
	.half	.L409-.L408
	.byte	3,1,1,5,42,9
	.half	.L410-.L409
	.byte	3,2,1,4,2,5,13,9
	.half	.L148-.L410
	.byte	3,239,3,1,5,30,9
	.half	.L411-.L148
	.byte	1,5,35,9
	.half	.L412-.L411
	.byte	1,4,1,5,22,9
	.half	.L149-.L412
	.byte	3,148,124,1,5,45,9
	.half	.L295-.L149
	.byte	3,1,1,5,22,9
	.half	.L413-.L295
	.byte	1,5,45,9
	.half	.L414-.L413
	.byte	3,1,1,5,22,9
	.half	.L415-.L414
	.byte	1,5,45,9
	.half	.L416-.L415
	.byte	3,1,1,5,22,9
	.half	.L417-.L416
	.byte	1,5,45,9
	.half	.L418-.L417
	.byte	3,1,1,5,22,9
	.half	.L419-.L418
	.byte	1,5,45,9
	.half	.L420-.L419
	.byte	3,1,1,5,22,9
	.half	.L421-.L420
	.byte	1,5,45,9
	.half	.L422-.L421
	.byte	3,1,1,5,22,9
	.half	.L423-.L422
	.byte	1,5,45,9
	.half	.L424-.L423
	.byte	3,1,1,5,22,9
	.half	.L425-.L424
	.byte	1,5,45,9
	.half	.L426-.L425
	.byte	3,1,1,5,22,9
	.half	.L427-.L426
	.byte	1,9
	.half	.L428-.L427
	.byte	3,1,1,9
	.half	.L157-.L428
	.byte	3,3,1,5,50,9
	.half	.L297-.L157
	.byte	3,1,1,5,22,9
	.half	.L296-.L297
	.byte	1,5,50,9
	.half	.L429-.L296
	.byte	3,1,1,5,22,9
	.half	.L430-.L429
	.byte	1,5,50,9
	.half	.L431-.L430
	.byte	3,1,1,5,22,9
	.half	.L432-.L431
	.byte	1,5,50,9
	.half	.L433-.L432
	.byte	3,1,1,5,22,9
	.half	.L434-.L433
	.byte	1,5,50,9
	.half	.L435-.L434
	.byte	3,1,1,5,22,9
	.half	.L436-.L435
	.byte	1,5,50,9
	.half	.L437-.L436
	.byte	3,1,1,5,22,9
	.half	.L438-.L437
	.byte	1,5,50,9
	.half	.L439-.L438
	.byte	3,1,1,5,22,9
	.half	.L440-.L439
	.byte	1,5,50,9
	.half	.L441-.L440
	.byte	3,1,1,5,22,9
	.half	.L442-.L441
	.byte	1,9
	.half	.L443-.L442
	.byte	3,1,1,5,21,9
	.half	.L160-.L443
	.byte	3,3,1,5,50,9
	.half	.L299-.L160
	.byte	3,1,1,5,21,9
	.half	.L298-.L299
	.byte	1,5,50,9
	.half	.L444-.L298
	.byte	3,1,1,5,21,9
	.half	.L445-.L444
	.byte	1,5,50,9
	.half	.L446-.L445
	.byte	3,1,1,5,21,9
	.half	.L447-.L446
	.byte	1,5,50,9
	.half	.L448-.L447
	.byte	3,1,1,5,21,9
	.half	.L449-.L448
	.byte	1,5,50,9
	.half	.L450-.L449
	.byte	3,1,1,5,21,9
	.half	.L451-.L450
	.byte	1,5,50,9
	.half	.L452-.L451
	.byte	3,1,1,5,21,9
	.half	.L453-.L452
	.byte	1,5,50,9
	.half	.L454-.L453
	.byte	3,1,1,5,21,9
	.half	.L455-.L454
	.byte	1,5,50,9
	.half	.L456-.L455
	.byte	3,1,1,5,21,9
	.half	.L457-.L456
	.byte	1,9
	.half	.L458-.L457
	.byte	3,1,1,5,48,9
	.half	.L459-.L458
	.byte	3,2,1,5,21,9
	.half	.L300-.L459
	.byte	1,5,31,9
	.half	.L460-.L300
	.byte	3,2,1,5,5,9
	.half	.L461-.L460
	.byte	1,5,24,7,9
	.half	.L462-.L461
	.byte	3,3,1,5,29,9
	.half	.L463-.L462
	.byte	1,5,24,9
	.half	.L464-.L463
	.byte	3,1,1,5,29,9
	.half	.L465-.L464
	.byte	1,5,15,9
	.half	.L2-.L465
	.byte	3,3,1,5,5,9
	.half	.L466-.L2
	.byte	1,5,24,7,9
	.half	.L163-.L466
	.byte	3,2,1,9
	.half	.L301-.L163
	.byte	3,1,1,5,57,9
	.half	.L303-.L301
	.byte	3,3,1,5,20,9
	.half	.L5-.L303
	.byte	3,3,1,5,30,9
	.half	.L4-.L5
	.byte	3,125,1,5,16,9
	.half	.L467-.L4
	.byte	1,5,53,7,9
	.half	.L468-.L467
	.byte	1,5,9,7,9
	.half	.L6-.L468
	.byte	3,6,1,5,19,7,9
	.half	.L469-.L6
	.byte	3,2,1,5,9,9
	.half	.L7-.L469
	.byte	3,3,1,5,28,7,9
	.half	.L166-.L7
	.byte	3,3,1,5,53,9
	.half	.L304-.L166
	.byte	3,1,1,5,28,9
	.half	.L302-.L304
	.byte	1,5,53,9
	.half	.L470-.L302
	.byte	3,1,1,5,28,9
	.half	.L471-.L470
	.byte	1,5,53,9
	.half	.L472-.L471
	.byte	3,1,1,5,28,9
	.half	.L473-.L472
	.byte	1,5,53,9
	.half	.L474-.L473
	.byte	3,1,1,5,28,9
	.half	.L475-.L474
	.byte	1,9
	.half	.L476-.L475
	.byte	3,1,1,5,40,9
	.half	.L477-.L476
	.byte	3,2,1,5,13,9
	.half	.L305-.L477
	.byte	1,5,32,7,9
	.half	.L478-.L305
	.byte	3,3,1,5,37,9
	.half	.L479-.L478
	.byte	1,5,76,9
	.half	.L3-.L479
	.byte	3,5,1,5,5,9
	.half	.L288-.L3
	.byte	3,2,1,5,51,7,9
	.half	.L171-.L288
	.byte	3,2,1,5,9,9
	.half	.L290-.L171
	.byte	3,2,1,5,51,7,9
	.half	.L480-.L290
	.byte	3,2,1,5,71,9
	.half	.L481-.L480
	.byte	1,4,2,5,20,9
	.half	.L175-.L481
	.byte	3,190,3,1,5,5,9
	.half	.L482-.L175
	.byte	1,5,44,7,9
	.half	.L483-.L482
	.byte	3,2,1,5,62,9
	.half	.L484-.L483
	.byte	1,4,3,5,40,9
	.half	.L184-.L484
	.byte	3,72,1,4,2,5,44,9
	.half	.L185-.L184
	.byte	3,57,1,5,62,9
	.half	.L485-.L185
	.byte	1,5,73,9
	.half	.L486-.L485
	.byte	1,5,36,9
	.half	.L487-.L486
	.byte	3,1,1,5,52,9
	.half	.L488-.L487
	.byte	1,5,95,9
	.half	.L489-.L488
	.byte	1,5,13,9
	.half	.L194-.L489
	.byte	3,29,1,5,31,9
	.half	.L490-.L194
	.byte	1,5,37,9
	.half	.L491-.L490
	.byte	1,4,1,5,51,9
	.half	.L11-.L491
	.byte	3,164,124,1,5,9,9
	.half	.L307-.L11
	.byte	3,2,1,5,50,7,9
	.half	.L492-.L307
	.byte	3,2,1,5,71,9
	.half	.L493-.L492
	.byte	1,4,2,5,20,9
	.half	.L205-.L493
	.byte	3,194,3,1,5,5,9
	.half	.L494-.L205
	.byte	1,5,45,7,9
	.half	.L495-.L494
	.byte	3,2,1,5,63,9
	.half	.L496-.L495
	.byte	1,5,92,9
	.half	.L497-.L496
	.byte	1,4,3,5,61,9
	.half	.L214-.L497
	.byte	3,67,1,5,40,9
	.half	.L498-.L214
	.byte	1,4,2,5,44,9
	.half	.L215-.L498
	.byte	3,62,1,5,62,9
	.half	.L499-.L215
	.byte	1,5,73,9
	.half	.L500-.L499
	.byte	1,4,1,5,43,9
	.half	.L10-.L500
	.byte	3,192,124,1,5,31,9
	.half	.L308-.L10
	.byte	3,2,1,5,13,9
	.half	.L501-.L308
	.byte	1,5,55,7,9
	.half	.L502-.L501
	.byte	1,5,70,7,9
	.half	.L15-.L502
	.byte	3,2,1,4,2,5,39,9
	.half	.L230-.L15
	.byte	3,168,3,1,5,5,9
	.half	.L309-.L230
	.byte	1,4,1,5,52,9
	.half	.L17-.L309
	.byte	3,217,124,1,4,4,5,11,9
	.half	.L235-.L17
	.byte	3,197,0,1,5,19,9
	.half	.L503-.L235
	.byte	1,5,17,9
	.half	.L504-.L503
	.byte	1,5,11,9
	.half	.L505-.L504
	.byte	3,1,1,5,17,9
	.half	.L506-.L505
	.byte	1,5,11,9
	.half	.L245-.L506
	.byte	3,103,1,5,17,9
	.half	.L507-.L245
	.byte	1,5,11,9
	.half	.L236-.L507
	.byte	3,18,1,5,16,9
	.half	.L508-.L236
	.byte	1,4,1,5,5,9
	.half	.L16-.L508
	.byte	3,70,1,5,1,9
	.half	.L18-.L16
	.byte	3,1,1,7,9
	.half	.L66-.L18
	.byte	0,1,1
.L373:
	.sdecl	'.debug_ranges',debug,cluster('IfxSent_Sent_initChannel')
	.sect	'.debug_ranges'
.L65:
	.word	-1,.L32,0,.L66-.L32,0,0
	.sdecl	'.debug_info',debug,cluster('IfxSent_Sent_initChannelConfig')
	.sect	'.debug_info'
.L67:
	.word	315
	.half	3
	.word	.L68
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent\\IfxSent_Sent.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L70,.L69
	.byte	2
	.word	.L43
	.byte	3
	.byte	'IfxSent_Sent_initChannelConfig',0,1,216,1,6,1,1,1
	.word	.L34,.L253,.L33
	.byte	4
	.byte	'config',0,1,216,1,65
	.word	.L254,.L255
	.byte	4
	.byte	'driver',0,1,216,1,87
	.word	.L83,.L256
	.byte	5
	.word	.L34,.L253
	.byte	6
	.byte	'defaultChannelConfig',0,1,218,1,38
	.word	.L257,.L258
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxSent_Sent_initChannelConfig')
	.sect	'.debug_abbrev'
.L68:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxSent_Sent_initChannelConfig')
	.sect	'.debug_line'
.L69:
	.word	.L510-.L509
.L509:
	.half	3
	.word	.L512-.L511
.L511:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent\\IfxSent_Sent.c',0,0,0,0,0
.L512:
	.byte	5,6,7,0,5,2
	.word	.L34
	.byte	3,215,1,1,5,61,9
	.half	.L311-.L34
	.byte	3,2,1,5,59,9
	.half	.L513-.L311
	.byte	1,5,22,9
	.half	.L514-.L513
	.byte	3,62,1,5,20,9
	.half	.L515-.L514
	.byte	1,9
	.half	.L516-.L515
	.byte	3,1,1,5,1,9
	.half	.L517-.L516
	.byte	3,1,1,7,9
	.half	.L71-.L517
	.byte	0,1,1
.L510:
	.sdecl	'.debug_ranges',debug,cluster('IfxSent_Sent_initChannelConfig')
	.sect	'.debug_ranges'
.L70:
	.word	-1,.L34,0,.L71-.L34,0,0
	.sdecl	'.debug_info',debug,cluster('IfxSent_Sent_readChannelSerialDataFrame')
	.sect	'.debug_info'
.L72:
	.word	356
	.half	3
	.word	.L73
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent\\IfxSent_Sent.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L75,.L74
	.byte	2
	.word	.L43
	.byte	3
	.byte	'IfxSent_Sent_readChannelSerialDataFrame',0,1,196,2,9
	.word	.L89
	.byte	1,1,1
	.word	.L40,.L259,.L39
	.byte	4
	.byte	'channel',0,1,196,2,71
	.word	.L124,.L260
	.byte	4
	.byte	'frame',0,1,196,2,100
	.word	.L261,.L262
	.byte	5
	.word	.L40,.L259
	.byte	6
	.byte	'result',0,1,198,2,23
	.word	.L89,.L263
	.byte	6
	.byte	'sentSFR',0,1,200,2,23
	.word	.L85,.L264
	.byte	6
	.byte	'ChanIdx',0,1,201,2,23
	.word	.L265,.L266
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxSent_Sent_readChannelSerialDataFrame')
	.sect	'.debug_abbrev'
.L73:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxSent_Sent_readChannelSerialDataFrame')
	.sect	'.debug_line'
.L74:
	.word	.L519-.L518
.L518:
	.half	3
	.word	.L521-.L520
.L520:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent\\IfxSent_Sent.c',0,0,0,0,0
.L521:
	.byte	5,31,7,0,5,2
	.word	.L40
	.byte	3,197,2,1,5,40,9
	.half	.L331-.L40
	.byte	3,2,1,5,48,9
	.half	.L522-.L331
	.byte	1,5,40,9
	.half	.L332-.L522
	.byte	3,1,1,5,39,9
	.half	.L334-.L332
	.byte	3,1,1,5,48,9
	.half	.L523-.L334
	.byte	1,5,25,9
	.half	.L524-.L523
	.byte	1,5,39,9
	.half	.L525-.L524
	.byte	3,1,1,5,48,9
	.half	.L333-.L525
	.byte	1,5,25,9
	.half	.L526-.L333
	.byte	1,5,34,9
	.half	.L527-.L526
	.byte	3,1,1,5,50,9
	.half	.L528-.L527
	.byte	1,5,25,9
	.half	.L529-.L528
	.byte	1,5,5,9
	.half	.L530-.L529
	.byte	3,2,1,5,1,9
	.half	.L27-.L530
	.byte	3,1,1,7,9
	.half	.L76-.L27
	.byte	0,1,1
.L519:
	.sdecl	'.debug_ranges',debug,cluster('IfxSent_Sent_readChannelSerialDataFrame')
	.sect	'.debug_ranges'
.L75:
	.word	-1,.L40,0,.L76-.L40,0,0
	.sdecl	'.debug_info',debug,cluster('IfxSent_Sent_readChannelSerialMessageFrame')
	.sect	'.debug_info'
.L77:
	.word	356
	.half	3
	.word	.L78
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent\\IfxSent_Sent.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L80,.L79
	.byte	2
	.word	.L43
	.byte	3
	.byte	'IfxSent_Sent_readChannelSerialMessageFrame',0,1,210,2,9
	.word	.L89
	.byte	1,1,1
	.word	.L42,.L267,.L41
	.byte	4
	.byte	'channel',0,1,210,2,74
	.word	.L124,.L268
	.byte	4
	.byte	'message',0,1,210,2,116
	.word	.L269,.L270
	.byte	5
	.word	.L42,.L267
	.byte	6
	.byte	'result',0,1,212,2,21
	.word	.L89,.L271
	.byte	6
	.byte	'sentCh',0,1,214,2,21
	.word	.L131,.L272
	.byte	6
	.byte	'sds',0,1,215,2,21
	.word	.L273,.L274
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxSent_Sent_readChannelSerialMessageFrame')
	.sect	'.debug_abbrev'
.L78:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxSent_Sent_readChannelSerialMessageFrame')
	.sect	'.debug_line'
.L79:
	.word	.L532-.L531
.L531:
	.half	3
	.word	.L534-.L533
.L533:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent\\IfxSent_Sent.c',0,0,0,0,0
.L534:
	.byte	5,28,7,0,5,2
	.word	.L42
	.byte	3,211,2,1,5,37,9
	.half	.L335-.L42
	.byte	3,2,1,5,38,9
	.half	.L336-.L335
	.byte	3,3,1,5,32,9
	.half	.L337-.L336
	.byte	3,2,1,5,25,9
	.half	.L535-.L337
	.byte	1,5,32,9
	.half	.L536-.L535
	.byte	3,1,1,5,25,9
	.half	.L537-.L536
	.byte	1,5,51,9
	.half	.L538-.L537
	.byte	3,1,1,5,25,9
	.half	.L539-.L538
	.byte	1,5,32,9
	.half	.L540-.L539
	.byte	3,1,1,5,25,9
	.half	.L541-.L540
	.byte	1,5,5,9
	.half	.L542-.L541
	.byte	3,2,1,5,1,9
	.half	.L28-.L542
	.byte	3,1,1,7,9
	.half	.L81-.L28
	.byte	0,1,1
.L532:
	.sdecl	'.debug_ranges',debug,cluster('IfxSent_Sent_readChannelSerialMessageFrame')
	.sect	'.debug_ranges'
.L80:
	.word	-1,.L42,0,.L81-.L42,0,0
	.sdecl	'.debug_loc',debug,cluster('IfxSent_Sent_deInitModule')
	.sect	'.debug_loc'
.L29:
	.word	-1,.L30,0,.L82-.L30
	.half	2
	.byte	138,0
	.word	0,0
.L84:
	.word	-1,.L30,0,.L275-.L30
	.half	1
	.byte	100
	.word	0,0
.L88:
	.word	-1,.L30,.L275-.L30,.L277-.L30
	.half	1
	.byte	82
	.word	.L278-.L30,.L82-.L30
	.half	1
	.byte	95
	.word	.L277-.L30,.L279-.L30
	.half	1
	.byte	84
	.word	.L282-.L30,.L283-.L30
	.half	1
	.byte	84
	.word	0,0
.L86:
	.word	-1,.L30,.L276-.L30,.L82-.L30
	.half	1
	.byte	111
	.word	.L280-.L30,.L281-.L30
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxSent_Sent_initChannel')
	.sect	'.debug_loc'
.L31:
	.word	-1,.L32,0,.L123-.L32
	.half	2
	.byte	138,0
	.word	0,0
.L200:
	.word	0,0
.L125:
	.word	-1,.L32,0,.L284-.L32
	.half	1
	.byte	100
	.word	0,0
.L139:
	.word	0,0
.L153:
	.word	0,0
.L232:
	.word	0,0
.L198:
	.word	0,0
.L127:
	.word	-1,.L32,0,.L141-.L32
	.half	1
	.byte	101
	.word	.L285-.L32,.L123-.L32
	.half	1
	.byte	108
	.word	0,0
.L165:
	.word	-1,.L32,.L303-.L32,.L3-.L32
	.half	1
	.byte	81
	.word	0,0
.L223:
	.word	0,0
.L179:
	.word	0,0
.L191:
	.word	0,0
.L221:
	.word	0,0
.L181:
	.word	0,0
.L211:
	.word	0,0
.L189:
	.word	0,0
.L219:
	.word	0,0
.L170:
	.word	-1,.L32,.L288-.L32,.L123-.L32
	.half	1
	.byte	109
	.word	0,0
.L187:
	.word	0,0
.L217:
	.word	0,0
.L242:
	.word	0,0
.L128:
	.word	-1,.L32,.L286-.L32,.L123-.L32
	.half	1
	.byte	88
	.word	.L310-.L32,.L123-.L32
	.half	1
	.byte	82
	.word	0,0
.L137:
	.word	0,0
.L151:
	.word	0,0
.L196:
	.word	0,0
.L132:
	.word	-1,.L32,.L289-.L32,.L290-.L32
	.half	1
	.byte	111
	.word	0,0
.L173:
	.word	-1,.L32,.L290-.L32,.L306-.L32
	.half	1
	.byte	111
	.word	0,0
.L177:
	.word	0,0
.L130:
	.word	-1,.L32,.L287-.L32,.L288-.L32
	.half	1
	.byte	109
	.word	.L291-.L32,.L141-.L32
	.half	1
	.byte	100
	.word	0,0
.L203:
	.word	-1,.L32,.L307-.L32,.L10-.L32
	.half	1
	.byte	111
	.word	0,0
.L207:
	.word	0,0
.L209:
	.word	0,0
.L228:
	.word	-1,.L32,.L309-.L32,.L16-.L32
	.half	1
	.byte	111
	.word	0,0
.L247:
	.word	0,0
.L251:
	.word	0,0
.L238:
	.word	0,0
.L162:
	.word	-1,.L32,.L299-.L32,.L300-.L32
	.half	1
	.byte	95
	.word	0,0
.L159:
	.word	-1,.L32,.L297-.L32,.L298-.L32
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L146:
	.word	-1,.L32,.L293-.L32,.L294-.L32
	.half	1
	.byte	95
	.word	0,0
.L168:
	.word	-1,.L32,.L304-.L32,.L305-.L32
	.half	1
	.byte	95
	.word	0,0
.L156:
	.word	-1,.L32,.L295-.L32,.L296-.L32
	.half	1
	.byte	95
	.word	0,0
.L143:
	.word	-1,.L32,.L292-.L32,.L293-.L32
	.half	1
	.byte	95
	.word	0,0
.L164:
	.word	-1,.L32,.L301-.L32,.L302-.L32
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L226:
	.word	-1,.L32,.L308-.L32,.L123-.L32
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L240:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxSent_Sent_initChannelConfig')
	.sect	'.debug_loc'
.L33:
	.word	-1,.L34,0,.L311-.L34
	.half	2
	.byte	138,0
	.word	.L311-.L34,.L253-.L34
	.half	3
	.byte	138,216,0
	.word	.L253-.L34,.L253-.L34
	.half	2
	.byte	138,0
	.word	0,0
.L255:
	.word	-1,.L34,0,.L253-.L34
	.half	1
	.byte	100
	.word	0,0
.L258:
	.word	0,0
.L256:
	.word	-1,.L34,0,.L253-.L34
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxSent_Sent_initModule')
	.sect	'.debug_loc'
.L35:
	.word	-1,.L36,0,.L90-.L36
	.half	2
	.byte	138,0
	.word	0,0
.L93:
	.word	-1,.L36,0,.L312-.L36
	.half	1
	.byte	101
	.word	.L313-.L36,.L90-.L36
	.half	1
	.byte	108
	.word	0,0
.L91:
	.word	-1,.L36,0,.L312-.L36
	.half	1
	.byte	100
	.word	0,0
.L97:
	.word	-1,.L36,.L312-.L36,.L316-.L36
	.half	1
	.byte	82
	.word	.L99-.L36,.L90-.L36
	.half	1
	.byte	89
	.word	.L323-.L36,.L324-.L36
	.half	1
	.byte	84
	.word	.L327-.L36,.L328-.L36
	.half	1
	.byte	84
	.word	0,0
.L108:
	.word	-1,.L36,.L316-.L36,.L317-.L36
	.half	1
	.byte	82
	.word	.L318-.L36,.L319-.L36
	.half	1
	.byte	95
	.word	.L317-.L36,.L320-.L36
	.half	1
	.byte	84
	.word	.L321-.L36,.L322-.L36
	.half	1
	.byte	84
	.word	0,0
.L94:
	.word	-1,.L36,.L314-.L36,.L90-.L36
	.half	1
	.byte	88
	.word	.L329-.L36,.L90-.L36
	.half	1
	.byte	82
	.word	0,0
.L106:
	.word	0,0
.L113:
	.word	0,0
.L101:
	.word	0,0
.L95:
	.word	-1,.L36,.L315-.L36,.L90-.L36
	.half	1
	.byte	111
	.word	.L325-.L36,.L326-.L36
	.half	1
	.byte	100
	.word	0,0
.L115:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxSent_Sent_initModuleConfig')
	.sect	'.debug_loc'
.L37:
	.word	-1,.L38,0,.L330-.L38
	.half	2
	.byte	138,0
	.word	.L330-.L38,.L117-.L38
	.half	2
	.byte	138,16
	.word	.L117-.L38,.L117-.L38
	.half	2
	.byte	138,0
	.word	0,0
.L119:
	.word	-1,.L38,0,.L117-.L38
	.half	1
	.byte	100
	.word	0,0
.L122:
	.word	0,0
.L120:
	.word	-1,.L38,0,.L117-.L38
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxSent_Sent_readChannelSerialDataFrame')
	.sect	'.debug_loc'
.L266:
	.word	-1,.L40,.L334-.L40,.L259-.L40
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L39:
	.word	-1,.L40,0,.L259-.L40
	.half	2
	.byte	138,0
	.word	0,0
.L260:
	.word	-1,.L40,0,.L259-.L40
	.half	1
	.byte	100
	.word	0,0
.L262:
	.word	-1,.L40,0,.L259-.L40
	.half	1
	.byte	101
	.word	0,0
.L263:
	.word	-1,.L40,.L331-.L40,.L259-.L40
	.half	1
	.byte	82
	.word	0,0
.L264:
	.word	-1,.L40,.L332-.L40,.L333-.L40
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxSent_Sent_readChannelSerialMessageFrame')
	.sect	'.debug_loc'
.L41:
	.word	-1,.L42,0,.L267-.L42
	.half	2
	.byte	138,0
	.word	0,0
.L268:
	.word	-1,.L42,0,.L267-.L42
	.half	1
	.byte	100
	.word	0,0
.L270:
	.word	-1,.L42,0,.L267-.L42
	.half	1
	.byte	101
	.word	0,0
.L271:
	.word	-1,.L42,.L335-.L42,.L267-.L42
	.half	1
	.byte	82
	.word	0,0
.L274:
	.word	-1,.L42,.L337-.L42,.L267-.L42
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L272:
	.word	-1,.L42,.L336-.L42,.L267-.L42
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L543:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('IfxSent_Sent_deInitModule')
	.sect	'.debug_frame'
	.word	12
	.word	.L543,.L30,.L82-.L30
	.sdecl	'.debug_frame',debug,cluster('IfxSent_Sent_initChannel')
	.sect	'.debug_frame'
	.word	12
	.word	.L543,.L32,.L123-.L32
	.sdecl	'.debug_frame',debug,cluster('IfxSent_Sent_initChannelConfig')
	.sect	'.debug_frame'
	.word	40
	.word	.L543,.L34,.L253-.L34
	.byte	8,19,8,23,4
	.word	(.L311-.L34)/2
	.byte	19,216,0,22,26,4,19,138,216,0,4
	.word	(.L253-.L311)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('IfxSent_Sent_initModule')
	.sect	'.debug_frame'
	.word	12
	.word	.L543,.L36,.L90-.L36
	.sdecl	'.debug_frame',debug,cluster('IfxSent_Sent_initModuleConfig')
	.sect	'.debug_frame'
	.word	40
	.word	.L543,.L38,.L117-.L38
	.byte	8,19,8,22,8,23,4
	.word	(.L330-.L38)/2
	.byte	19,16,22,26,3,19,138,16,4
	.word	(.L117-.L330)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('IfxSent_Sent_readChannelSerialDataFrame')
	.sect	'.debug_frame'
	.word	20
	.word	.L543,.L40,.L259-.L40
	.byte	8,19,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxSent_Sent_readChannelSerialMessageFrame')
	.sect	'.debug_frame'
	.word	20
	.word	.L543,.L42,.L267-.L42
	.byte	8,18,8,19,8,22,8,23


	; Module end
