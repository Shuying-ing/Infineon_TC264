	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 99277908"
	.compiler_invocation	"ctc --dep-file=Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\.IfxGtm_Tom_PwmHl.o.d --fp-model=c,f,l,n,r,S,T,z -D__CPU__=tc26x -D__CPU_TC26X__ --core=tc1.6.x --iso=99 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\CODE -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Build -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\DataHandling -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\InternalMux -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Asc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Lin -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Spi -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Icu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmBc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmHl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Timer -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TimerWithTrigger -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TPwm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Cam -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Irq -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Dma -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Rdc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Dts -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Eray -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Phy_Pef7071 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Crc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Fft -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\IncrEnc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Pwm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Timer -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim\\In -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Pwm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Trig -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\I2c -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Driver -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Msc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Can -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Io -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Psi5 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Psi5s -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiMaster -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiSlave -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Src -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Adc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Platform -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Platform\\Tricore -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Platform\\Tricore\\Compilers -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Sfr -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Sfr\\TC26B -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Service -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Service\\CpuGeneric -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\seekfree_libraries -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\seekfree_libraries\\common -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\seekfree_peripheral -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\USER -g2 -wW557 --make-target=Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.o -t0 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O0 --default-a1-size=0 --default-a0-size=0 --source --align=0 --switch=auto --error-limit=42 -o Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.src ..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c"
	.compiler_name		"ctc"
	;source	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c'

	
$TC16X
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_getDeadtime',code,cluster('IfxGtm_Tom_PwmHl_getDeadtime')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_getDeadtime'
	.align	2
	
	.global	IfxGtm_Tom_PwmHl_getDeadtime

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	     1  /**
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	     2   * \file IfxGtm_Tom_PwmHl.c
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	     3   * \brief GTM PWMHL details
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	     4   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	     5   * \version iLLD_1_0_1_11_0
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	     6   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	     7   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	     8   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	     9   *                                 IMPORTANT NOTICE
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    10   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    11   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    12   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    13   * the company in which ordinary course of business you are acting and (ii) 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    14   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    15   * terms of use are agreed, use of this file is subject to following:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    16  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    17  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    19  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    20   * Permission is hereby granted, free of charge, to any person or 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    21   * organization obtaining a copy of the software and accompanying 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    22   * documentation covered by this license (the "Software") to use, reproduce,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    23   * display, distribute, execute, and transmit the Software, and to prepare
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    24   * derivative works of the Software, and to permit third-parties to whom the 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    25   * Software is furnished to do so, all subject to the following:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    26  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    27   * The copyright notices in the Software and this entire statement, including
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    28   * the above license grant, this restriction and the following disclaimer, must
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    29   * be included in all copies of the Software, in whole or in part, and all
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    30   * derivative works of the Software, unless such copies or derivative works are
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    31   * solely in the form of machine-executable object code generated by a source
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    32   * language processor.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    33  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    40   * DEALINGS IN THE SOFTWARE.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    41  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    42   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    43   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    44  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    45  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    46  /*----------------------------------Includes----------------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    47  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    48  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    49  #include "IfxGtm_Tom_PwmHl.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    50  #include "_Utilities/Ifx_Assert.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    51  #include "stddef.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    52  #include "string.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    53  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    54  /** \addtogroup IfxLld_Gtm_Tom_PwmHl_PwmHl_StdIf_Functions
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    55   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    56  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    57  /*------------------------Inline Function Prototypes--------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    58  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    59  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    60  /** \brief Inverts the active state
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    61   * \param activeState Active state
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    62   * \return State
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    63   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    64  IFX_INLINE Ifx_ActiveState IfxGtm_Tom_PwmHl_invertActiveState(Ifx_ActiveState activeState);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    65  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    66  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    67  /*-----------------------Private Function Prototypes--------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    68  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    69  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    70  /** \brief Sets switched to OFF
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    71   * \param driver GTM TOM PWM driver
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    72   * \param tOn ON time
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    73   * \param shift Shift value in ticks
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    74   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    75   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    76  IFX_STATIC void IfxGtm_Tom_PwmHl_updateAndShiftOff(IfxGtm_Tom_PwmHl *driver, Ifx_TimerValue *tOn, Ifx_TimerValue *shift);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    77  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    78  /** \brief Updates the x output duty cycle in center aligned and center aligned inverted modes
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    79   * \param driver GTM TOM PWM driver
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    80   * \param tOn T on
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    81   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    82   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    83  IFX_STATIC void IfxGtm_Tom_PwmHl_updateCenterAligned(IfxGtm_Tom_PwmHl *driver, Ifx_TimerValue *tOn);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    84  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    85  /** \brief Updates the x output duty cycle in edge aligned modes (left and right aligned)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    86   * \param driver GTM TOM PWM driver
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    87   * \param tOn T on
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    88   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    89   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    90  IFX_STATIC void IfxGtm_Tom_PwmHl_updateEdgeAligned(IfxGtm_Tom_PwmHl *driver, Ifx_TimerValue *tOn);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    91  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    92  /** \brief Set the outputs to inactive
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    93   * \param driver GTM TOM PWM driver
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    94   * \param tOn T on
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    95   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    96   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    97  IFX_STATIC void IfxGtm_Tom_PwmHl_updateOff(IfxGtm_Tom_PwmHl *driver, Ifx_TimerValue *tOn);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    98  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    99  /** \brief Update Pulse
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   100   * \param driver GTM TOM PWM driver
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   101   * \param tOn ON times. Phase 0 top, phase 1 top, ... phase 0 bottom, phase 1 botteom, ...
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   102   * \param offset Offset value in ticks. Phase 0 top, phase 1 top, ... phase 0 bottom, phase 1 botteom, ...
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   103   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   104   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   105  IFX_STATIC void IfxGtm_Tom_PwmHl_updatePulse(IfxGtm_Tom_PwmHl *driver, float32 *tOn, float32 *offset);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   106  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   107  /** \brief Set Pulse to OFF
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   108   * \param driver GTM TOM PWM driver
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   109   * \param tOn ON times. Phase 0 top, phase 1 top, ... phase 0 bottom, phase 1 botteom, ...
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   110   * \param offset Offset value in ticks. Phase 0 top, phase 1 top, ... phase 0 bottom, phase 1 botteom, ...
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   111   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   112   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   113  IFX_STATIC void IfxGtm_Tom_PwmHl_updatePulseOff(IfxGtm_Tom_PwmHl *driver, float32 *tOn, float32 *offset);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   114  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   115  /** \brief Update Shift Center Aligned
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   116   * \param driver GTM TOM PWM driver
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   117   * \param tOn ON time
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   118   * \param shift Shift value in ticks
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   119   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   120   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   121  IFX_STATIC void IfxGtm_Tom_PwmHl_updateShiftCenterAligned(IfxGtm_Tom_PwmHl *driver, Ifx_TimerValue *tOn, Ifx_TimerValue *shift);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   122  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   123  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   124  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   125  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   126  /*------------------------Private Variables/Constants-------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   127  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   128  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   129  IFX_STATIC IFX_CONST IfxGtm_Tom_PwmHl_Mode IfxGtm_Tom_PwmHl_modes[Ifx_Pwm_Mode_off + 1] = {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   130      {Ifx_Pwm_Mode_centerAligned,         FALSE, &IfxGtm_Tom_PwmHl_updateCenterAligned, &IfxGtm_Tom_PwmHl_updateShiftCenterAligned, &IfxGtm_Tom_PwmHl_updatePulse   },
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   131      {Ifx_Pwm_Mode_centerAlignedInverted, TRUE,  &IfxGtm_Tom_PwmHl_updateCenterAligned, &IfxGtm_Tom_PwmHl_updateShiftCenterAligned, &IfxGtm_Tom_PwmHl_updatePulse   },
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   132      {Ifx_Pwm_Mode_leftAligned,           FALSE, &IfxGtm_Tom_PwmHl_updateEdgeAligned,   &IfxGtm_Tom_PwmHl_updateAndShiftOff,        &IfxGtm_Tom_PwmHl_updatePulse   },
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   133      {Ifx_Pwm_Mode_rightAligned,          TRUE,  &IfxGtm_Tom_PwmHl_updateEdgeAligned,   &IfxGtm_Tom_PwmHl_updateAndShiftOff,        &IfxGtm_Tom_PwmHl_updatePulse   },
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   134      {Ifx_Pwm_Mode_off,                   FALSE, &IfxGtm_Tom_PwmHl_updateOff,           &IfxGtm_Tom_PwmHl_updateAndShiftOff,        &IfxGtm_Tom_PwmHl_updatePulseOff}
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   135  };
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   136  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   137  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   138  /*---------------------Inline Function Implementations------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   139  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   140  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   141  IFX_INLINE Ifx_ActiveState IfxGtm_Tom_PwmHl_invertActiveState(Ifx_ActiveState activeState)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   142  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   143      return activeState == Ifx_ActiveState_low ? Ifx_ActiveState_high : Ifx_ActiveState_low;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   144  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   145  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   146  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   147  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   148  /*-------------------------Function Implementations---------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   149  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   150  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   151  float32 IfxGtm_Tom_PwmHl_getDeadtime(IfxGtm_Tom_PwmHl *driver)
; Function IfxGtm_Tom_PwmHl_getDeadtime
.L149:
IfxGtm_Tom_PwmHl_getDeadtime:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   152  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   153      return IfxStdIf_Timer_tickToS(driver->timer->base.clockFreq, driver->base.deadtime);
	ld.a	a15,[a4]20
.L803:
	ld.w	d15,[a15]6
.L804:
	ld.w	d0,[a4]
.L353:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    45   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    46   * \ingroup library_srvsw_stdif
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    47   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    48   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    49   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    50   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    51   * The figure below shows the standard timer interface.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    52   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    53   * \image html "Timer.png" "Standard timer interface"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    54   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    55   * This interface defines the following features:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    56   * - Timer with configurable frequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    57   * - Configurable counting direction
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    58   * - Optional interrupt on timer event with configurable service request provider and priority
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    59   * - Optional trigger signal with:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    60   *   - Optional interrupt on trigger event with configurable service request provider and priority
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    61   *   - Configurable trigger point
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    62   *   - Configurable trigger edge
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    63   *   - trigger signal can be internal only or forwarded to a port pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    64   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    65  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    66  #ifndef IFXSTDIF_TIMER_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    67  #define IFXSTDIF_TIMER_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    68  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    69  #include "Cpu/Std/Ifx_Types.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    70  #include "Src/Std/IfxSrc.h"     
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    71  #include "Port/Std/IfxPort.h"   
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    72  #include "IfxStdIf.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    73  /** \brief Output event enable / disable */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    74  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    75  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    76      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    77      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    78                                                    *          the output is set to active between time 0 to the trigger point,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    79                                                    *          and is set to inactive between the trigger point and the period.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    81                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    82                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    83                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    84                                                    */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    85  } IfxStdIf_Timer_OutputEvent;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    86  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    87  /** \brief Timer increment direction */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    88  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    89  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    90      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    91      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    92      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    93  } IfxStdIf_Timer_CountDir;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    94  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    95  /** \brief Forward declaration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    96  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    97  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    98  /** \brief Return the timer frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    99   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   100   * \return Return the timer frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   101   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   102  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   103  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   104  /** \brief Return the timer period in ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   105   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   106   * \return Return the timer period in ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   107   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   108  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   109  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   110  /** \brief Return the timer resolution in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   111   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   112   * \return Return the timer resolution in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   113   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   114  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   115  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   116  /** \brief Return the timer trigger point
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   117   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   118   * \return Return the timer timer point
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   119   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   120  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   121  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   122  /** \brief Set the timer frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   123   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   124   * \param frequency Requested timer frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   125   * \retval TRUE The requested frequency could be set
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   126   * \retval FALSE The requested frequency is out of range
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   127   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   128  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   129  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   130  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   131   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   132   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   133   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   134  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   135  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   136  /** \brief Apply requested updates.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   137   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   138   * Such requested update are calls to:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   139   * - IfxStdIf_Timer_setSingleMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setTrigger()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   142   * as well as PWM generation related calls such as:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setDeadtime()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setOnTime()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setupChannels()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   147   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   148   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   149   * one timer period!!!
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   150   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   151   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   152   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   153   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   154   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   155  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   156  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   157  /** \brief Disable updates
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   158   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   159   * The following API action will not be taken in account before applyUpdate is called:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   160   * - IfxStdIf_Timer_setSingleMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_Timer_setTrigger()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   163   * as well as PWM generation related calls such as:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setDeadtime()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   165   * - IfxStdIf_PwmHl_setMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   166   * - IfxStdIf_PwmHl_setOnTime()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   167   * - IfxStdIf_PwmHl_setupChannels()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   168   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   169   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   170   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   171   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   172  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   173  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   174  /** \brief Return the timer input frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   175   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   176   * \return Return the timer input frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   177   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   178  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   179  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   180  /** \brief Immediately start the timer.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   181   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   182   * Please note that other mechanism may avoid the timer to tick, such as when the
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   183   * global (input) clock to the timer block is inactive.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   184   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   185   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   186   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   187  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   188  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   189  /** \brief Set the timer period.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   190   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   191   * Timer_applyUpdate() shall be invoked in order this to take effect.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   192   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   193   * \param period Period value in ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   194   * \retval TRUE The requested period could be set
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   195   * \retval FALSE The requested period is out of range
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   196   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   197  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   198  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   199  /** \brief Stop timer at the end of the period
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   200   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   201   * Timer_applyUpdate() shall be invoked in order this to take effect.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   202   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   203   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   204   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   205   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   206  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   207  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   208  /** \brief Set trigger point.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   209   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   210   * \see Timer_OutputEvent for the definition of the output level.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   211   * Active state is defined by Timer_Config::outputActiveState.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   212   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   213   * Timer_applyUpdate() shall be invoked in order this to take effect.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   214   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   215   * \param triggerPoint Trigger point in ticks from the period start.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   216   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   217   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   218  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   219  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   220  /** \brief Immediately stops the timer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   221   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   222   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   223   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   224  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   225  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   226  /** \brief Return the timer interrupt flag and reset it
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   227   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   228   * \return Return the timer interrupt flag
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   229   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   230  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   231  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   232  /** \brief Return the trigger interrupt flag and reset it
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   233   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   234   * \return Return the trigger interrupt flag
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   235   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   236  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   237  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   238  /** \brief Standard interface object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   239   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   240  struct IfxStdIf_Timer_
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   241  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   256      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   257      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   258      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   259  };
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   260  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   261  /** \brief Trigger configuration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   262  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   263  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   264      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   265      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   266      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   267      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   268      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   269      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   270      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   271      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   272  } IfxStdIf_Timer_TrigConfig;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   273  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   274  /** \brief Timer configuration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   275  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   276  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   277      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   278      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   279      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   280      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   281      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   282      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   283      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   284  } IfxStdIf_Timer_Config;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   285  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   286  /** \addtogroup library_srvsw_stdif_timer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   287   *  \{
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   288   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   289  /** \copydoc IfxStdIf_Timer_GetFrequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   290   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   291   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   292  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   293  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   294      return stdIf->getFrequency(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   295  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   296  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   297  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   298  /** \copydoc IfxStdIf_Timer_GetPeriod
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   299   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   300   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   301  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   302  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   303      return stdIf->getPeriod(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   304  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   305  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   306  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   307  /** \copydoc IfxStdIf_Timer_GetTrigger
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   308   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   309   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   310  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   311  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   312      return stdIf->getTrigger(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   313  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   314  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   315  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   316  /** \copydoc IfxStdIf_Timer_GetResolution
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   317   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   318   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   320  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   321      return stdIf->getResolution(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   322  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   323  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   324  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_SetFrequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   326   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   327   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   328  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   329  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   330      return stdIf->setFrequency(stdIf->driver, frequency);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   331  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   332  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   333  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   334  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   335   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   336   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   337  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   338  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   339      stdIf->updateInputFrequency(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   340  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   341  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   342  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   343  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   344   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   345   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   346  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   347  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   348      stdIf->applyUpdate(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   349  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   350  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   351  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   352  /** \copydoc IfxStdIf_Timer_DisableUpdate
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   353   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   354   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   355  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   356  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   357      stdIf->disableUpdate(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   358  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   359  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   360  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   361  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   362   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   363   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   364  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   365  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   366      return stdIf->getInputFrequency(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   367  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   368  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   369  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   370  /** \copydoc IfxStdIf_Timer_Run
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   371   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   372   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   373  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   374  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   375      stdIf->run(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   376  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   377  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   378  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   379  /** \copydoc IfxStdIf_Timer_SetPeriod
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   380   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   381   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   382  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   383  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   384      return stdIf->setPeriod(stdIf->driver, period);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   385  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   386  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   387  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   388  /** \copydoc IfxStdIf_Timer_SetSingleMode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   389   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   390   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   391  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   392  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   393      stdIf->setSingleMode(stdIf->driver, enabled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   394  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   395  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   397  /** \copydoc IfxStdIf_Timer_SetTrigger
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   398   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   399   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   400  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   401  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   402      stdIf->setTrigger(stdIf->driver, triggerPoint);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   403  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   404  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   405  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   406  /** \copydoc IfxStdIf_Timer_Stop
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   407   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   408   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   409  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   410  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   411      stdIf->stop(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   412  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   413  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   414  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   415  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   416   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   417   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   418  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   419  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   420      return stdIf->ackTimerIrq(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   421  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   422  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   423  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   424  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   425   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   426   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   427  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   428  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   429      return stdIf->ackTriggerIrq(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   430  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   431  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   432  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   433  /** \brief Convert timer ticks to seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   434   * \param  clockFreq Timer clock frequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   435   * \param  ticks time value in ticks to be converted
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   436   * \return Return the converted time in s
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   437   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   438  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   439  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   440      return ticks / clockFreq;
	utof	d0,d0
.L805:
	div.f	d2,d0,d15
.L806:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   440      return ticks / clockFreq;      (inlined)
	j	.L2

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   441  }      (inlined)
.L2:
	j	.L3

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   154  mHl *driver)
.L3:
	ret
.L350:
	
__IfxGtm_Tom_PwmHl_getDeadtime_function_end:
	.size	IfxGtm_Tom_PwmHl_getDeadtime,__IfxGtm_Tom_PwmHl_getDeadtime_function_end-IfxGtm_Tom_PwmHl_getDeadtime
.L206:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_getMinPulse',code,cluster('IfxGtm_Tom_PwmHl_getMinPulse')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_getMinPulse'
	.align	2
	
	.global	IfxGtm_Tom_PwmHl_getMinPulse

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   155  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   156      return IfxStdIf_Timer_tickToS(driver->timer->base.clockFreq, driver->base.minPulse - driver->base.deadtime);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   157  }
; Function IfxGtm_Tom_PwmHl_getMinPulse
.L151:
IfxGtm_Tom_PwmHl_getMinPulse:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   158  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   159  
	ld.a	a15,[a4]20
.L811:
	ld.w	d0,[a15]6
.L812:
	ld.w	d15,[a4]4
.L813:
	ld.w	d1,[a4]
.L814:
	sub	d15,d1
.L361:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    45   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    46   * \ingroup library_srvsw_stdif
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    47   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    48   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    49   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    50   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    51   * The figure below shows the standard timer interface.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    52   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    53   * \image html "Timer.png" "Standard timer interface"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    54   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    55   * This interface defines the following features:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    56   * - Timer with configurable frequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    57   * - Configurable counting direction
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    58   * - Optional interrupt on timer event with configurable service request provider and priority
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    59   * - Optional trigger signal with:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    60   *   - Optional interrupt on trigger event with configurable service request provider and priority
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    61   *   - Configurable trigger point
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    62   *   - Configurable trigger edge
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    63   *   - trigger signal can be internal only or forwarded to a port pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    64   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    65  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    66  #ifndef IFXSTDIF_TIMER_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    67  #define IFXSTDIF_TIMER_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    68  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    69  #include "Cpu/Std/Ifx_Types.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    70  #include "Src/Std/IfxSrc.h"     
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    71  #include "Port/Std/IfxPort.h"   
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    72  #include "IfxStdIf.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    73  /** \brief Output event enable / disable */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    74  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    75  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    76      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    77      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    78                                                    *          the output is set to active between time 0 to the trigger point,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    79                                                    *          and is set to inactive between the trigger point and the period.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    81                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    82                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    83                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    84                                                    */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    85  } IfxStdIf_Timer_OutputEvent;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    86  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    87  /** \brief Timer increment direction */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    88  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    89  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    90      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    91      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    92      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    93  } IfxStdIf_Timer_CountDir;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    94  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    95  /** \brief Forward declaration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    96  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    97  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    98  /** \brief Return the timer frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    99   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   100   * \return Return the timer frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   101   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   102  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   103  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   104  /** \brief Return the timer period in ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   105   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   106   * \return Return the timer period in ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   107   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   108  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   109  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   110  /** \brief Return the timer resolution in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   111   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   112   * \return Return the timer resolution in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   113   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   114  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   115  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   116  /** \brief Return the timer trigger point
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   117   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   118   * \return Return the timer timer point
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   119   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   120  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   121  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   122  /** \brief Set the timer frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   123   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   124   * \param frequency Requested timer frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   125   * \retval TRUE The requested frequency could be set
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   126   * \retval FALSE The requested frequency is out of range
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   127   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   128  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   129  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   130  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   131   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   132   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   133   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   134  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   135  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   136  /** \brief Apply requested updates.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   137   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   138   * Such requested update are calls to:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   139   * - IfxStdIf_Timer_setSingleMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setTrigger()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   142   * as well as PWM generation related calls such as:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setDeadtime()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setOnTime()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setupChannels()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   147   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   148   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   149   * one timer period!!!
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   150   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   151   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   152   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   153   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   154   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   155  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   156  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   157  /** \brief Disable updates
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   158   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   159   * The following API action will not be taken in account before applyUpdate is called:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   160   * - IfxStdIf_Timer_setSingleMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_Timer_setTrigger()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   163   * as well as PWM generation related calls such as:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setDeadtime()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   165   * - IfxStdIf_PwmHl_setMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   166   * - IfxStdIf_PwmHl_setOnTime()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   167   * - IfxStdIf_PwmHl_setupChannels()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   168   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   169   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   170   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   171   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   172  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   173  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   174  /** \brief Return the timer input frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   175   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   176   * \return Return the timer input frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   177   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   178  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   179  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   180  /** \brief Immediately start the timer.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   181   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   182   * Please note that other mechanism may avoid the timer to tick, such as when the
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   183   * global (input) clock to the timer block is inactive.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   184   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   185   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   186   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   187  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   188  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   189  /** \brief Set the timer period.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   190   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   191   * Timer_applyUpdate() shall be invoked in order this to take effect.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   192   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   193   * \param period Period value in ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   194   * \retval TRUE The requested period could be set
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   195   * \retval FALSE The requested period is out of range
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   196   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   197  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   198  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   199  /** \brief Stop timer at the end of the period
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   200   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   201   * Timer_applyUpdate() shall be invoked in order this to take effect.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   202   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   203   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   204   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   205   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   206  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   207  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   208  /** \brief Set trigger point.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   209   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   210   * \see Timer_OutputEvent for the definition of the output level.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   211   * Active state is defined by Timer_Config::outputActiveState.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   212   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   213   * Timer_applyUpdate() shall be invoked in order this to take effect.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   214   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   215   * \param triggerPoint Trigger point in ticks from the period start.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   216   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   217   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   218  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   219  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   220  /** \brief Immediately stops the timer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   221   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   222   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   223   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   224  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   225  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   226  /** \brief Return the timer interrupt flag and reset it
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   227   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   228   * \return Return the timer interrupt flag
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   229   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   230  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   231  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   232  /** \brief Return the trigger interrupt flag and reset it
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   233   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   234   * \return Return the trigger interrupt flag
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   235   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   236  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   237  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   238  /** \brief Standard interface object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   239   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   240  struct IfxStdIf_Timer_
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   241  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   256      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   257      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   258      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   259  };
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   260  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   261  /** \brief Trigger configuration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   262  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   263  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   264      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   265      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   266      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   267      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   268      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   269      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   270      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   271      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   272  } IfxStdIf_Timer_TrigConfig;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   273  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   274  /** \brief Timer configuration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   275  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   276  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   277      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   278      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   279      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   280      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   281      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   282      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   283      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   284  } IfxStdIf_Timer_Config;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   285  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   286  /** \addtogroup library_srvsw_stdif_timer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   287   *  \{
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   288   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   289  /** \copydoc IfxStdIf_Timer_GetFrequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   290   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   291   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   292  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   293  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   294      return stdIf->getFrequency(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   295  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   296  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   297  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   298  /** \copydoc IfxStdIf_Timer_GetPeriod
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   299   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   300   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   301  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   302  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   303      return stdIf->getPeriod(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   304  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   305  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   306  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   307  /** \copydoc IfxStdIf_Timer_GetTrigger
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   308   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   309   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   310  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   311  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   312      return stdIf->getTrigger(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   313  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   314  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   315  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   316  /** \copydoc IfxStdIf_Timer_GetResolution
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   317   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   318   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   320  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   321      return stdIf->getResolution(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   322  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   323  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   324  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_SetFrequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   326   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   327   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   328  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   329  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   330      return stdIf->setFrequency(stdIf->driver, frequency);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   331  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   332  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   333  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   334  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   335   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   336   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   337  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   338  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   339      stdIf->updateInputFrequency(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   340  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   341  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   342  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   343  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   344   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   345   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   346  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   347  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   348      stdIf->applyUpdate(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   349  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   350  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   351  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   352  /** \copydoc IfxStdIf_Timer_DisableUpdate
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   353   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   354   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   355  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   356  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   357      stdIf->disableUpdate(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   358  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   359  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   360  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   361  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   362   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   363   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   364  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   365  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   366      return stdIf->getInputFrequency(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   367  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   368  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   369  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   370  /** \copydoc IfxStdIf_Timer_Run
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   371   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   372   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   373  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   374  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   375      stdIf->run(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   376  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   377  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   378  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   379  /** \copydoc IfxStdIf_Timer_SetPeriod
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   380   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   381   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   382  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   383  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   384      return stdIf->setPeriod(stdIf->driver, period);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   385  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   386  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   387  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   388  /** \copydoc IfxStdIf_Timer_SetSingleMode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   389   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   390   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   391  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   392  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   393      stdIf->setSingleMode(stdIf->driver, enabled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   394  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   395  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   397  /** \copydoc IfxStdIf_Timer_SetTrigger
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   398   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   399   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   400  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   401  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   402      stdIf->setTrigger(stdIf->driver, triggerPoint);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   403  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   404  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   405  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   406  /** \copydoc IfxStdIf_Timer_Stop
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   407   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   408   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   409  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   410  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   411      stdIf->stop(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   412  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   413  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   414  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   415  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   416   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   417   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   418  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   419  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   420      return stdIf->ackTimerIrq(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   421  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   422  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   423  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   424  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   425   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   426   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   427  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   428  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   429      return stdIf->ackTriggerIrq(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   430  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   431  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   432  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   433  /** \brief Convert timer ticks to seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   434   * \param  clockFreq Timer clock frequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   435   * \param  ticks time value in ticks to be converted
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   436   * \return Return the converted time in s
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   437   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   438  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   439  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   440      return ticks / clockFreq;
	utof	d15,d15
.L815:
	div.f	d2,d15,d0
.L816:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   440      return ticks / clockFreq;      (inlined)
	j	.L4

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   441  }      (inlined)
.L4:
	j	.L5

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   160  m_Mode IfxGtm_Tom_PwmHl_getMode(IfxGtm_Tom_PwmHl *driver)
.L5:
	ret
.L359:
	
__IfxGtm_Tom_PwmHl_getMinPulse_function_end:
	.size	IfxGtm_Tom_PwmHl_getMinPulse,__IfxGtm_Tom_PwmHl_getMinPulse_function_end-IfxGtm_Tom_PwmHl_getMinPulse
.L211:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_getMode',code,cluster('IfxGtm_Tom_PwmHl_getMode')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_getMode'
	.align	2
	
	.global	IfxGtm_Tom_PwmHl_getMode

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   161  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   162      return driver->base.mode;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   163  }
; Function IfxGtm_Tom_PwmHl_getMode
.L153:
IfxGtm_Tom_PwmHl_getMode:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   164  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   165  
	ld.bu	d2,[a4]12
.L821:
	j	.L6

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   166  boolean IfxGtm_Tom_PwmHl_init(IfxGtm_Tom_PwmHl *driver, const IfxGtm_Tom_PwmHl_Config *config)
.L6:
	ret
.L365:
	
__IfxGtm_Tom_PwmHl_getMode_function_end:
	.size	IfxGtm_Tom_PwmHl_getMode,__IfxGtm_Tom_PwmHl_getMode_function_end-IfxGtm_Tom_PwmHl_getMode
.L216:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_init',code,cluster('IfxGtm_Tom_PwmHl_init')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_init'
	.align	2
	
	.global	IfxGtm_Tom_PwmHl_init

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   167  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   168      boolean           result       = TRUE;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   169      uint16            channelMask;
; Function IfxGtm_Tom_PwmHl_init
.L155:
IfxGtm_Tom_PwmHl_init:	.type	func
	sub.a	a10,#16
.L489:
	mov.aa	a15,a4
.L491:
	mov.aa	a12,a5
.L492:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   170      uint16            channelsMask = 0;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   171      uint32            channelIndex;
	mov	d9,#1
.L493:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   172      uint16            maskShift    = 0;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   173      IfxGtm_Tom_Timer *timer        = config->timer;
	mov	d8,#0
.L494:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   174  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   175      driver->base.mode             = Ifx_Pwm_Mode_init;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   176      driver->timer                 = timer;
	ld.a	a13,[a12]16
.L495:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   177      driver->base.setMode          = 0;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   178      driver->base.inverted         = FALSE;
	mov	d15,#5
.L649:
	st.b	[a15]12,d15
.L650:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   179      driver->base.ccxActiveState   = config->base.ccxActiveState;
	st.a	[a15]20,a13
.L651:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   180      driver->base.coutxActiveState = config->base.coutxActiveState;
	mov	d15,#0
.L652:
	st.b	[a15]13,d15
.L653:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   181      driver->base.channelCount     = config->base.channelCount;
	mov	d15,#0
.L654:
	st.b	[a15]16,d15
.L655:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   182  
	ld.bu	d15,[a12]12
.L656:
	st.b	[a15]14,d15
.L657:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   183      IfxGtm_Tom_PwmHl_setDeadtime(driver, config->base.deadtime);
	ld.bu	d15,[a12]13
.L658:
	st.b	[a15]15,d15
.L659:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   184      IfxGtm_Tom_PwmHl_setMinPulse(driver, config->base.minPulse);
	ld.bu	d15,[a12]8
.L660:
	st.b	[a15]17,d15
.L661:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   185  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   186      driver->tom = &(timer->gtm->TOM[config->tom]);
	ld.w	d4,[a12]
	mov.aa	a4,a15
	call	IfxGtm_Tom_PwmHl_setDeadtime
.L490:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   187  
	ld.w	d4,[a12]4
	mov.aa	a4,a15
.L496:
	call	IfxGtm_Tom_PwmHl_setMinPulse
.L497:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   188      /* config->ccx[0] is used for the definition of the TGC */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   189      if (config->ccx[0]->channel <= 7)
	ld.bu	d15,[a12]20
.L662:
	mov	d0,#2048
	mul	d15,d0
.L663:
	ld.a	a2,[a13]12
.L664:
	addsc.a	a2,a2,d15,#0
	movh.a	a3,#1
	add.a	a3,a2
	lea	a2,[a3]-32768
.L665:
	st.a	[a15]36,a2
.L666:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   190      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   191          driver->tgc = IfxGtm_Tom_Ch_getTgcPointer(driver->tom, 0);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   192      }
	ld.a	a2,[a12]24
.L667:
	ld.a	a2,[a2]
.L668:
	ld.b	d15,[a2]1
.L669:
	mov	d0,#7
.L670:
	jlt	d0,d15,.L7
.L671:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   193      else
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   194      {
	ld.a	a4,[a15]36
.L672:
	mov	d4,#0
	call	IfxGtm_Tom_Ch_getTgcPointer
.L673:
	st.a	[a15]40,a2
.L674:
	j	.L8
.L7:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   195          driver->tgc = IfxGtm_Tom_Ch_getTgcPointer(driver->tom, 1);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   196      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   197  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   198      maskShift = (config->ccx[0]->channel <= 7) ? 0 : 8;
	ld.a	a4,[a15]36
.L675:
	mov	d4,#1
	call	IfxGtm_Tom_Ch_getTgcPointer
.L676:
	st.a	[a15]40,a2
.L8:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   199  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   200      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, config->base.channelCount <= IFXGTM_TOM_PWMHL_MAX_NUM_CHANNELS);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   201  
	ld.a	a2,[a12]24
.L677:
	ld.a	a2,[a2]
.L678:
	ld.b	d15,[a2]1
.L679:
	mov	d0,#7
.L680:
	jlt	d0,d15,.L9
.L681:
	mov	d10,#0
.L498:
	j	.L10
.L9:
	mov	d10,#8
.L10:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   202      IfxGtm_Tom_Ch_ClkSrc clock = IfxGtm_Tom_Ch_getClockSource(timer->tom, timer->timerChannel);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   203  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   204      for (channelIndex = 0; channelIndex < config->base.channelCount; channelIndex++)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   205      {
	ld.a	a4,[a13]16
.L682:
	ld.b	d4,[a13]29
	call	IfxGtm_Tom_Ch_getClockSource
.L499:
	mov	d11,d2
.L500:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   206          IfxGtm_Tom_Ch channel;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   207          /* CCX */
	mov	d12,#0
.L501:
	j	.L11
.L12:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   208          channel                   = config->ccx[channelIndex]->channel;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   209          driver->ccx[channelIndex] = channel;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   210          channelMask               = 1 << (channel - maskShift);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   211          channelsMask             |= channelMask;
	mul	d15,d12,#4
.L683:
	ld.a	a2,[a12]24
.L684:
	addsc.a	a2,a2,d15,#0
	ld.a	a2,[a2]
.L685:
	ld.b	d13,[a2]1
.L503:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   212  
	addsc.a	a2,a15,d12,#0
.L686:
	st.b	[a2]44,d13
.L687:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   213          /* Initialize the timer part */
	mov	d0,#1
.L688:
	sub	d1,d13,d10
.L689:
	sha	d0,d0,d1
	extr.u	d14,d0,#0,#16
.L504:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   214          IfxGtm_Tom_Ch_setClockSource(driver->tom, channel, clock);
	or	d8,d14
.L690:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   215  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   216          /* Initialize the SOUR reset value and enable the channel */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   217          IfxGtm_Tom_Ch_setSignalLevel(driver->tom, channel, !driver->base.inverted
	ld.a	a4,[a15]36
.L691:
	mov	e4,d11,d13
	call	IfxGtm_Tom_Ch_setClockSource
.L692:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   218              ? config->base.ccxActiveState
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   219              : IfxGtm_Tom_PwmHl_invertActiveState(config->base.ccxActiveState));
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   220          IfxGtm_Tom_Tgc_enableChannels(driver->tgc, channelMask, 0, TRUE); /* Write the SOUR outout with !SL */
	ld.bu	d15,[a15]16
.L693:
	jne	d15,#0,.L13
.L314:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   221          IfxGtm_Tom_Tgc_enableChannelsOutput(driver->tgc, channelMask, 0, TRUE);
	ld.bu	d5,[a12]12
.L315:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   222  
	j	.L14
.L13:
	ld.bu	d15,[a12]12
.L320:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   143      return activeState == Ifx_ActiveState_low ? Ifx_ActiveState_high : Ifx_ActiveState_low;      (inlined)
	jne	d15,#0,.L15
.L694:
	mov	d5,#1
.L695:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   143      return activeState == Ifx_ActiveState_low ? Ifx_ActiveState_high : Ifx_ActiveState_low;      (inlined)
	j	.L16
.L15:
	mov	d5,#0

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   143      return activeState == Ifx_ActiveState_low ? Ifx_ActiveState_high : Ifx_ActiveState_low;      (inlined)
.L16:
	j	.L17

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   144  }      (inlined)
.L17:
.L14:
	ld.a	a4,[a15]36
.L696:
	mov	d4,d13
.L321:
	call	IfxGtm_Tom_Ch_setSignalLevel
.L322:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   223          /* Set the SL to the required level for run time */
	ld.a	a4,[a15]40
.L697:
	mov	d5,#0
.L698:
	mov	d6,#1
	mov	d4,d14
.L505:
	call	IfxGtm_Tom_Tgc_enableChannels
.L506:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   224          IfxGtm_Tom_Ch_setSignalLevel(driver->tom, channel, driver->base.inverted
	ld.a	a4,[a15]40
.L699:
	mov	d5,#0
.L700:
	mov	d6,#1
	mov	d4,d14
.L507:
	call	IfxGtm_Tom_Tgc_enableChannelsOutput
.L508:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   225              ? config->base.ccxActiveState
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   226              : IfxGtm_Tom_PwmHl_invertActiveState(config->base.ccxActiveState));
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   227          IfxGtm_Tom_Ch_setResetSource(driver->tom, channel, IfxGtm_Tom_Ch_ResetEvent_onTrigger);
	ld.bu	d15,[a15]16
.L701:
	jeq	d15,#0,.L18
.L323:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   228          IfxGtm_Tom_Ch_setTriggerOutput(driver->tom, channel, IfxGtm_Tom_Ch_OutputTrigger_forward);
	ld.bu	d5,[a12]12
.L324:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   229          IfxGtm_Tom_Ch_setCounterValue(driver->tom, channel, IfxGtm_Tom_Timer_getOffset(driver->timer));
	j	.L19
.L18:
	ld.bu	d15,[a12]12
.L326:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   143      return activeState == Ifx_ActiveState_low ? Ifx_ActiveState_high : Ifx_ActiveState_low;      (inlined)
	jne	d15,#0,.L20
.L702:
	mov	d5,#1
.L703:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   143      return activeState == Ifx_ActiveState_low ? Ifx_ActiveState_high : Ifx_ActiveState_low;      (inlined)
	j	.L21
.L20:
	mov	d5,#0

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   143      return activeState == Ifx_ActiveState_low ? Ifx_ActiveState_high : Ifx_ActiveState_low;      (inlined)
.L21:
	j	.L22

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   144  }      (inlined)
.L22:
.L19:
	ld.a	a4,[a15]36
.L704:
	mov	d4,d13
.L327:
	call	IfxGtm_Tom_Ch_setSignalLevel
.L328:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   230  
	ld.a	a4,[a15]36
.L705:
	mov	d5,#1
	mov	d4,d13
.L509:
	call	IfxGtm_Tom_Ch_setResetSource
.L510:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   231          /*Initialize the port */
	ld.a	a4,[a15]36
.L706:
	mov	d5,#0
	mov	d4,d13
.L511:
	call	IfxGtm_Tom_Ch_setTriggerOutput
.L512:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   232          if (config->initPins == TRUE)
	ld.a	a4,[a15]20
	call	IfxGtm_Tom_Timer_getOffset
.L707:
	ld.a	a4,[a15]36
.L708:
	mov	e4,d2,d13
	call	IfxGtm_Tom_Ch_setCounterValue
.L709:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   233          {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   234              IfxGtm_PinMap_setTomTout(config->ccx[channelIndex],
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   235                  config->base.outputMode, config->base.outputDriver);
	ld.bu	d15,[a12]32
.L710:
	jne	d15,#1,.L23
.L711:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   236              IfxPort_setPinState(config->ccx[channelIndex]->pin.port, config->ccx[channelIndex]->pin.pinIndex, config->base.ccxActiveState ? IfxPort_State_low : IfxPort_State_high);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   237          }
	mul	d15,d12,#4
.L712:
	ld.a	a2,[a12]24
.L713:
	addsc.a	a2,a2,d15,#0
	ld.a	a4,[a2]
.L714:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   238  
	ld.bu	d4,[a12]10
.L715:
	ld.bu	d5,[a12]11
	call	IfxGtm_PinMap_setTomTout
.L716:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   239          /* COUTX */
	ld.bu	d15,[a12]12
.L717:
	jeq	d15,#0,.L24
.L718:
	movh	d0,#1
.L719:
	j	.L25
.L24:
	mov	d0,#1
.L25:
	mul	d15,d12,#4
.L720:
	ld.a	a2,[a12]24
.L721:
	addsc.a	a2,a2,d15,#0
	ld.a	a2,[a2]
.L722:
	ld.a	a2,[a2]8
.L723:
	mul	d15,d12,#4
.L724:
	ld.a	a4,[a12]24
.L725:
	addsc.a	a4,a4,d15,#0
	ld.a	a4,[a4]
.L726:
	ld.bu	d15,[a4]12
.L330:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    45   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    46   * \defgroup IfxLld_Port_Std_Enum Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    47   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    48   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    49   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    50   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    51   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    52   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    53   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    54   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    55  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    56  #ifndef IFXPORT_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    57  #define IFXPORT_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    58  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    59  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    60  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    61  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    62  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    63  #include "_Impl/IfxPort_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    64  #include "Scu/Std/IfxScuWdt.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    65  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    66  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    67  /*--------------------------------Enumerations--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    68  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    69  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    70  /** \addtogroup IfxLld_Port_Std_Enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    71   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    72  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    73   * HSCT module.declared in MODULE_PORTx.LPCRx
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    74   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    76  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    77      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    78      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    79  } IfxPort_ControlledBy;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    80  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    81  /** \brief Ifx_P output modification modes definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    82   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    83  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    84  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    85      IfxPort_InputMode_undefined    = -1,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    86      IfxPort_InputMode_noPullDevice = 0 << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    87          IfxPort_InputMode_pullDown = 1U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    88          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    89  } IfxPort_InputMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    90  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    91  /** \brief Ifx_P input / output mode definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    92   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    93   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    94   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    95  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    96  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    97      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    98      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    99      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   100      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   101      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   102      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   103      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   104      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   105      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   106      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   107      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   108      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   109      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   110      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   111      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   112      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   113      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   114      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   115      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   116  } IfxPort_Mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   117  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   118  /** \brief Pin output alternate index
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   119   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   120  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   121  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   122      IfxPort_OutputIdx_general  = 0x10U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   123          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   124          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   125          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   126          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   127          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   128          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   129          IfxPort_OutputIdx_alt7 = 0x17U << 3
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   130  } IfxPort_OutputIdx;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   131  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   132  /** \brief Pin output mode definition
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   133   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   134  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   135  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   136      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   137          IfxPort_OutputMode_openDrain = 0x18U << 3
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_OutputMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   139  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   140  /** \brief Pad driver mode definition (strength and slew rate).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   141   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   142   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   143   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   144  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   145  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   146      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   147      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   148      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   149      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   150      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   151      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   152      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   153      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   154      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   155      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   156      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   157      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_PadDriver;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   159  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   160  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   161   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   162  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   163  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   164      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   165      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   166  } IfxPort_PadSupply;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   167  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   168  /** \brief Ifx_P output modification modes definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   169   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   170   * \see Ifx_P.OMR, IfxPort_setPinState()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   171   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   172  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   173  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   174      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   175      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   176      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   177      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   178  } IfxPort_State;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   179  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   180  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   181  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   182  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   183  /*-----------------------------Data Structures--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   184  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   185  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   186  /** \addtogroup IfxLld_Port_Std_DataStructures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   187   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   188  /** \brief Defines a pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   189   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   190  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   191  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   192      Ifx_P *port;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   193      uint8  pinIndex;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   194  } IfxPort_Pin;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   195  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   196  /** \brief To configure pins
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   197   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   198  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   199  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   200      Ifx_P            *port;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   201      uint8             pinIndex;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   202      IfxPort_OutputIdx mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   203      IfxPort_PadDriver padDriver;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   204  } IfxPort_Pin_Config;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   205  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   206  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   207  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   208  /** \addtogroup IfxLld_Port_Std_SinglePin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   209   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   210  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   211  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   212  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   213  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   214  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   215  /** \brief Return the port state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   216   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   217   * \param pinIndex Specifies the pin for which the state should be returned.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   218   * \return Returns TRUE the pin is high; FALSE the pin is low
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   219   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   220   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   221   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   222   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   223   *      // ...
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   224   *    }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   225   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   226   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   227   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   228  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   229  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   230  /** \brief Set the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   231   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   232   * \param pinIndex Specifies the pin to be set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   233   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   234   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   235   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   236   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   237   * IfxPort_setPinHigh(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   238   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   239   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   240   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   241   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   242   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   243  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   244  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   245  /** \brief Reset the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   246   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   247   * \param pinIndex Specifies the pin to be reset.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   248   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   249   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   250   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   251   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   252   * IfxPort_setPinLow(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   253   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   254   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   255   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   256   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   257   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   258  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   259  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   260  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   261   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   262   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   263   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   264   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   265   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   266   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   267   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   268   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   269   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   270   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   271   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   272  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   273  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   274  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   275   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   276   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   277   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   278   * \param index Specifies the alternate (or general purpose) output channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   279   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   280   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   281   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   282   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   283   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   284   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   285   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   286   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   287  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   288  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   289  /** \brief Set / Resets / Toggle the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   290   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   291   * \param pinIndex Specifies the pin to modify.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   292   * \param action Specifies the action: set, reset, toggle.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   293   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   294   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   295   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   296   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   297   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   298   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   299   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   300   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   301   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   302   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   303  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   304  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   305  /** \brief Toggle the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin to be toggled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   308   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   309   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   311   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   312   * IfxPort_togglePin(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   313   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   314   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   315   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   316   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   317   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   318  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   319  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   320  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   321  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   322  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   323  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   324  /** \brief Disable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   325   * This function disables the emergency stop function. A check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   326   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   327   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   328   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   329   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   330   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   331   * /code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   332   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   333   *     {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   334   *         // failed to disable emergency stop for P33.0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   335   *     }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   336   * /endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   337   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   338   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   339   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   340   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   341  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   342  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   343  /** \brief Enable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   344   * This function enables the emergency stop function. A check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   345   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   346   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   347   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   348   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   350   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   351   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   352   *       // failed to enable emergency stop for P33.0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   353   *     }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   354   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   355   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   356   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   357   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   358   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   359  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   360  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   361  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   362   * Also Configures the P40/P41 Port for digital functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   363   * which bydefault support analog functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   364   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   365   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   366   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   367   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   368   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   369   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   370   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   371   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   372   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   373   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   374   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   375  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   376  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   377  /** \brief Configure the pad driver mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   378   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   379   * \param pinIndex Specifies the pin for which the mode will be set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   380   * \param padDriver Specifies the driver mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   381   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   382   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   383   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   384   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   385   * // enable strong 3.3V driver
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   386   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   387   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   388   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   389   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   390  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   391  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   392  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   393  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   394  /** \addtogroup IfxLld_Port_Std_PortGroup
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   395   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   397  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   398  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   399  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   400  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   401  /** \brief Return the port group state
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   402   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   403   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   404   * \param mask selects the pins which should be read (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   405   * \return Returns the selected pin values
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   406   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   407   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   408   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   409   * // read the current value of P33[7:0]
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   410   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   411   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   412   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   413   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   414  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   415  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   416  /** \brief Set the port group state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   417   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   418   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   419   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   420   * \param data specifies the value which should be set
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   421   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   422   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   423   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   424   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   425   * // configure P33.[7:0] as GPIO outputs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   426   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   427   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   428   * // set initial value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   429   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   430   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   431   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   432   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   433  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   434  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   435  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   436  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   437  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   438  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   439  /** \brief Returns the module address of the selected Port module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   440   * \param port Pointer to PORT module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   441   * \return PORT module register address
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   442   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   443  IFX_EXTERN Ifx_P *IfxPort_getAddress(IfxPort_Index port);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   444  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   445  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   446   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   447   * \return port index of IfxModule_IndexMap. return -1 in case of unknown port index.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   448   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   449  IFX_EXTERN IfxPort_Index IfxPort_getIndex(Ifx_P *port);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   450  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   451  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   452   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   453   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   454   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   455   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   456   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   457   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   458   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   459   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   460   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   461   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   462   *  \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   463   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   464   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   465  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   466  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   467  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   468   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   469   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   470   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   471   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   472   * \param index Specifies the alternate (or general purpose) output channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   473   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   474   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   475   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   476   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   477   * // configure P33.[7:0] as GPIO outputs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   478   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   479   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   480   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   481   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   482  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   483  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   484  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   485   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   486   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   487   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   488   * \param padDriver Specifies the pad driver strength.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   489   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   490   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   491   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   492   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   493   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   494   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   495   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   496   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   497   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   498  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   499  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   500  /** \brief set LVDSH mode (configured for Port21)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   501   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   502   * \param pinIndex specifies pin  to be modified
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   503   * \param mode specifes the mode of pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   504   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   505   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   506   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   508  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   509  /** \brief set LVDSM mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   510   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   511   * \param pinIndex specifies pin to be modified
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   512   * \param lvdsPadDriver select speed grade of LVDS Pad
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   513   * \param padSupply select the PAD supply (5/3.3V)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   514   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   515   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   516  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   517  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   518  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   519  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   521  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   523  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   524  /** \brief Disable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   525   * This function disables the emergency stop function. No check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   526   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   527   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   528   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   529   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   530   * \see IfxPort_disableEmergencyStop()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   531   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   532   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   533  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   534  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   535  /** \brief Enable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   536   * This function enables the emergency stop function. No check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   537   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   538   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   539   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   540   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   541   * \see IfxPort_enableEmergencyStop()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   542   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   543   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   544  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   545  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   546  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   547  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   548  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   549  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   550  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   551  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   552      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   553  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   554  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   555  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   556  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   557  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   558      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   559  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   560  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   561  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   562  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   563  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   564      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   565  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   566  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   567  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   568  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   569  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   570      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   571  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   572  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   573  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   574  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   575  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   576      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   577  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   578  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   579  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   580  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   581  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   582      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   583  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   584  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   585  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   586  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   587  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   588      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)(index | mode));
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   589  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   590  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   591  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   592  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   593  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   594      port->OMR.U = action << pinIndex;
	sha	d0,d0,d15
.L727:
	st.w	[a2]4,d0
.L23:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   240      driver->coutx[channelIndex] = channel;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   241          channelMask                 = 1 << (channel - maskShift);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   242          channelsMask               |= channelMask;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   243  
	mul	d15,d12,#4
.L728:
	ld.a	a2,[a12]28
.L729:
	addsc.a	a2,a2,d15,#0
	ld.a	a2,[a2]
.L730:
	ld.b	d13,[a2]1
.L731:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   244          /* Initialize the timer part */
	addsc.a	a2,a15,d12,#0
.L732:
	st.b	[a2]47,d13
.L733:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   245          IfxGtm_Tom_Ch_setClockSource(driver->tom, channel, clock);
	mov	d0,#1
.L734:
	sub	d15,d13,d10
.L735:
	sha	d0,d0,d15
	extr.u	d14,d0,#0,#16
.L736:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   246  
	or	d8,d14
.L737:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   247          /* Initialize the SOUR reset value, SL and enable the channel */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   248          IfxGtm_Tom_Ch_setSignalLevel(driver->tom, channel, driver->base.inverted
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   249              ? IfxGtm_Tom_PwmHl_invertActiveState(config->base.coutxActiveState)
	ld.a	a4,[a15]36
.L738:
	mov	e4,d11,d13
	call	IfxGtm_Tom_Ch_setClockSource
.L739:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   250              : config->base.coutxActiveState);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   251          IfxGtm_Tom_Tgc_enableChannels(driver->tgc, channelMask, 0, TRUE);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   252          IfxGtm_Tom_Tgc_enableChannelsOutput(driver->tgc, channelMask, 0, TRUE);
	ld.bu	d15,[a15]16
.L740:
	jeq	d15,#0,.L26
.L741:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   253  
	ld.bu	d15,[a12]13
.L338:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   143      return activeState == Ifx_ActiveState_low ? Ifx_ActiveState_high : Ifx_ActiveState_low;      (inlined)
	jne	d15,#0,.L27
.L742:
	mov	d5,#1
.L743:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   143      return activeState == Ifx_ActiveState_low ? Ifx_ActiveState_high : Ifx_ActiveState_low;      (inlined)
	j	.L28
.L27:
	mov	d5,#0

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   143      return activeState == Ifx_ActiveState_low ? Ifx_ActiveState_high : Ifx_ActiveState_low;      (inlined)
.L28:
	j	.L29

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   144  }      (inlined)
.L29:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   254          IfxGtm_Tom_Ch_setResetSource(driver->tom, channel, IfxGtm_Tom_Ch_ResetEvent_onTrigger);
	j	.L30
.L26:
	ld.bu	d5,[a12]13
.L30:
	ld.a	a4,[a15]36
.L744:
	mov	d4,d13
.L340:
	call	IfxGtm_Tom_Ch_setSignalLevel
.L341:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   255          IfxGtm_Tom_Ch_setTriggerOutput(driver->tom, channel, IfxGtm_Tom_Ch_OutputTrigger_forward);
	ld.a	a4,[a15]40
.L745:
	mov	d5,#0
.L746:
	mov	d6,#1
	mov	d4,d14
.L513:
	call	IfxGtm_Tom_Tgc_enableChannels
.L514:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   256          IfxGtm_Tom_Ch_setCounterValue(driver->tom, channel, IfxGtm_Tom_Timer_getOffset(driver->timer));
	ld.a	a4,[a15]40
.L747:
	mov	d5,#0
.L748:
	mov	d6,#1
	mov	d4,d14
.L515:
	call	IfxGtm_Tom_Tgc_enableChannelsOutput
.L516:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   257  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   258          /*Initialize the port */
	ld.a	a4,[a15]36
.L749:
	mov	d5,#1
	mov	d4,d13
.L517:
	call	IfxGtm_Tom_Ch_setResetSource
.L518:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   259          if (config->initPins == TRUE)
	ld.a	a4,[a15]36
.L750:
	mov	d5,#0
	mov	d4,d13
.L519:
	call	IfxGtm_Tom_Ch_setTriggerOutput
.L520:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   260          {
	ld.a	a4,[a15]20
	call	IfxGtm_Tom_Timer_getOffset
.L751:
	ld.a	a4,[a15]36
.L752:
	mov	e4,d2,d13
	call	IfxGtm_Tom_Ch_setCounterValue
.L753:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   261              IfxGtm_PinMap_setTomTout(config->coutx[channelIndex],
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   262                  config->base.outputMode, config->base.outputDriver);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   263              IfxPort_setPinState(config->coutx[channelIndex]->pin.port, config->coutx[channelIndex]->pin.pinIndex, config->base.coutxActiveState ? IfxPort_State_low : IfxPort_State_high);
	ld.bu	d15,[a12]32
.L754:
	jne	d15,#1,.L31
.L755:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   264          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   265      }
	mul	d15,d12,#4
.L756:
	ld.a	a2,[a12]28
.L757:
	addsc.a	a2,a2,d15,#0
	ld.a	a4,[a2]
.L758:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   266  
	ld.bu	d4,[a12]10
.L759:
	ld.bu	d5,[a12]11
	call	IfxGtm_PinMap_setTomTout
.L760:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   267      IfxGtm_Tom_PwmHl_setMode(driver, Ifx_Pwm_Mode_off);
	ld.bu	d15,[a12]13
.L761:
	jeq	d15,#0,.L32
.L762:
	movh	d0,#1
.L763:
	j	.L33
.L32:
	mov	d0,#1
.L33:
	mul	d15,d12,#4
.L764:
	ld.a	a2,[a12]28
.L765:
	addsc.a	a2,a2,d15,#0
	ld.a	a2,[a2]
.L766:
	ld.a	a2,[a2]8
.L767:
	mul	d15,d12,#4
.L768:
	ld.a	a4,[a12]28
.L769:
	addsc.a	a4,a4,d15,#0
	ld.a	a4,[a4]
.L770:
	ld.bu	d15,[a4]12
.L342:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    45   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    46   * \defgroup IfxLld_Port_Std_Enum Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    47   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    48   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    49   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    50   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    51   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    52   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    53   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    54   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    55  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    56  #ifndef IFXPORT_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    57  #define IFXPORT_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    58  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    59  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    60  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    61  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    62  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    63  #include "_Impl/IfxPort_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    64  #include "Scu/Std/IfxScuWdt.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    65  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    66  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    67  /*--------------------------------Enumerations--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    68  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    69  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    70  /** \addtogroup IfxLld_Port_Std_Enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    71   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    72  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    73   * HSCT module.declared in MODULE_PORTx.LPCRx
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    74   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    76  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    77      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    78      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    79  } IfxPort_ControlledBy;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    80  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    81  /** \brief Ifx_P output modification modes definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    82   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    83  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    84  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    85      IfxPort_InputMode_undefined    = -1,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    86      IfxPort_InputMode_noPullDevice = 0 << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    87          IfxPort_InputMode_pullDown = 1U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    88          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    89  } IfxPort_InputMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    90  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    91  /** \brief Ifx_P input / output mode definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    92   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    93   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    94   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    95  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    96  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    97      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    98      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    99      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   100      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   101      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   102      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   103      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   104      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   105      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   106      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   107      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   108      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   109      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   110      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   111      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   112      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   113      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   114      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   115      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   116  } IfxPort_Mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   117  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   118  /** \brief Pin output alternate index
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   119   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   120  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   121  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   122      IfxPort_OutputIdx_general  = 0x10U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   123          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   124          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   125          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   126          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   127          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   128          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   129          IfxPort_OutputIdx_alt7 = 0x17U << 3
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   130  } IfxPort_OutputIdx;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   131  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   132  /** \brief Pin output mode definition
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   133   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   134  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   135  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   136      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   137          IfxPort_OutputMode_openDrain = 0x18U << 3
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_OutputMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   139  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   140  /** \brief Pad driver mode definition (strength and slew rate).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   141   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   142   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   143   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   144  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   145  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   146      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   147      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   148      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   149      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   150      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   151      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   152      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   153      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   154      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   155      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   156      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   157      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_PadDriver;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   159  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   160  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   161   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   162  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   163  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   164      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   165      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   166  } IfxPort_PadSupply;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   167  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   168  /** \brief Ifx_P output modification modes definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   169   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   170   * \see Ifx_P.OMR, IfxPort_setPinState()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   171   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   172  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   173  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   174      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   175      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   176      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   177      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   178  } IfxPort_State;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   179  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   180  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   181  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   182  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   183  /*-----------------------------Data Structures--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   184  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   185  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   186  /** \addtogroup IfxLld_Port_Std_DataStructures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   187   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   188  /** \brief Defines a pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   189   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   190  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   191  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   192      Ifx_P *port;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   193      uint8  pinIndex;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   194  } IfxPort_Pin;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   195  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   196  /** \brief To configure pins
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   197   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   198  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   199  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   200      Ifx_P            *port;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   201      uint8             pinIndex;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   202      IfxPort_OutputIdx mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   203      IfxPort_PadDriver padDriver;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   204  } IfxPort_Pin_Config;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   205  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   206  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   207  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   208  /** \addtogroup IfxLld_Port_Std_SinglePin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   209   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   210  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   211  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   212  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   213  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   214  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   215  /** \brief Return the port state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   216   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   217   * \param pinIndex Specifies the pin for which the state should be returned.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   218   * \return Returns TRUE the pin is high; FALSE the pin is low
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   219   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   220   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   221   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   222   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   223   *      // ...
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   224   *    }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   225   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   226   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   227   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   228  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   229  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   230  /** \brief Set the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   231   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   232   * \param pinIndex Specifies the pin to be set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   233   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   234   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   235   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   236   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   237   * IfxPort_setPinHigh(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   238   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   239   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   240   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   241   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   242   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   243  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   244  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   245  /** \brief Reset the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   246   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   247   * \param pinIndex Specifies the pin to be reset.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   248   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   249   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   250   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   251   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   252   * IfxPort_setPinLow(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   253   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   254   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   255   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   256   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   257   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   258  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   259  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   260  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   261   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   262   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   263   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   264   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   265   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   266   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   267   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   268   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   269   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   270   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   271   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   272  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   273  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   274  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   275   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   276   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   277   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   278   * \param index Specifies the alternate (or general purpose) output channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   279   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   280   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   281   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   282   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   283   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   284   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   285   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   286   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   287  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   288  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   289  /** \brief Set / Resets / Toggle the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   290   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   291   * \param pinIndex Specifies the pin to modify.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   292   * \param action Specifies the action: set, reset, toggle.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   293   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   294   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   295   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   296   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   297   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   298   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   299   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   300   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   301   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   302   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   303  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   304  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   305  /** \brief Toggle the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin to be toggled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   308   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   309   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   311   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   312   * IfxPort_togglePin(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   313   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   314   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   315   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   316   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   317   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   318  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   319  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   320  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   321  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   322  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   323  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   324  /** \brief Disable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   325   * This function disables the emergency stop function. A check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   326   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   327   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   328   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   329   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   330   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   331   * /code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   332   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   333   *     {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   334   *         // failed to disable emergency stop for P33.0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   335   *     }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   336   * /endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   337   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   338   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   339   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   340   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   341  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   342  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   343  /** \brief Enable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   344   * This function enables the emergency stop function. A check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   345   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   346   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   347   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   348   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   350   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   351   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   352   *       // failed to enable emergency stop for P33.0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   353   *     }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   354   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   355   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   356   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   357   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   358   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   359  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   360  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   361  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   362   * Also Configures the P40/P41 Port for digital functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   363   * which bydefault support analog functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   364   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   365   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   366   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   367   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   368   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   369   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   370   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   371   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   372   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   373   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   374   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   375  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   376  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   377  /** \brief Configure the pad driver mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   378   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   379   * \param pinIndex Specifies the pin for which the mode will be set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   380   * \param padDriver Specifies the driver mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   381   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   382   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   383   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   384   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   385   * // enable strong 3.3V driver
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   386   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   387   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   388   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   389   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   390  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   391  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   392  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   393  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   394  /** \addtogroup IfxLld_Port_Std_PortGroup
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   395   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   397  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   398  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   399  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   400  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   401  /** \brief Return the port group state
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   402   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   403   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   404   * \param mask selects the pins which should be read (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   405   * \return Returns the selected pin values
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   406   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   407   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   408   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   409   * // read the current value of P33[7:0]
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   410   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   411   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   412   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   413   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   414  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   415  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   416  /** \brief Set the port group state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   417   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   418   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   419   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   420   * \param data specifies the value which should be set
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   421   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   422   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   423   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   424   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   425   * // configure P33.[7:0] as GPIO outputs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   426   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   427   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   428   * // set initial value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   429   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   430   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   431   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   432   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   433  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   434  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   435  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   436  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   437  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   438  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   439  /** \brief Returns the module address of the selected Port module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   440   * \param port Pointer to PORT module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   441   * \return PORT module register address
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   442   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   443  IFX_EXTERN Ifx_P *IfxPort_getAddress(IfxPort_Index port);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   444  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   445  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   446   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   447   * \return port index of IfxModule_IndexMap. return -1 in case of unknown port index.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   448   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   449  IFX_EXTERN IfxPort_Index IfxPort_getIndex(Ifx_P *port);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   450  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   451  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   452   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   453   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   454   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   455   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   456   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   457   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   458   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   459   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   460   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   461   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   462   *  \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   463   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   464   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   465  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   466  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   467  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   468   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   469   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   470   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   471   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   472   * \param index Specifies the alternate (or general purpose) output channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   473   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   474   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   475   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   476   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   477   * // configure P33.[7:0] as GPIO outputs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   478   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   479   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   480   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   481   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   482  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   483  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   484  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   485   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   486   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   487   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   488   * \param padDriver Specifies the pad driver strength.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   489   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   490   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   491   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   492   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   493   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   494   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   495   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   496   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   497   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   498  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   499  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   500  /** \brief set LVDSH mode (configured for Port21)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   501   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   502   * \param pinIndex specifies pin  to be modified
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   503   * \param mode specifes the mode of pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   504   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   505   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   506   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   508  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   509  /** \brief set LVDSM mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   510   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   511   * \param pinIndex specifies pin to be modified
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   512   * \param lvdsPadDriver select speed grade of LVDS Pad
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   513   * \param padSupply select the PAD supply (5/3.3V)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   514   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   515   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   516  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   517  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   518  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   519  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   521  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   523  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   524  /** \brief Disable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   525   * This function disables the emergency stop function. No check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   526   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   527   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   528   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   529   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   530   * \see IfxPort_disableEmergencyStop()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   531   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   532   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   533  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   534  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   535  /** \brief Enable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   536   * This function enables the emergency stop function. No check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   537   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   538   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   539   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   540   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   541   * \see IfxPort_enableEmergencyStop()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   542   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   543   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   544  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   545  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   546  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   547  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   548  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   549  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   550  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   551  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   552      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   553  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   554  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   555  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   556  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   557  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   558      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   559  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   560  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   561  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   562  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   563  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   564      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   565  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   566  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   567  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   568  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   569  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   570      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   571  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   572  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   573  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   574  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   575  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   576      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   577  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   578  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   579  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   580  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   581  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   582      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   583  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   584  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   585  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   586  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   587  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   588      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)(index | mode));
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   589  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   590  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   591  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   592  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   593  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   594      port->OMR.U = action << pinIndex;
	sha	d0,d0,d15
.L771:
	st.w	[a2]4,d0
.L31:
	add	d12,#1
.L11:
	ld.bu	d15,[a12]8
.L772:
	jlt.u	d12,d15,.L12
.L773:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   268  TM_TOM_PWMHL_MAX_NUM_CHANNELS] = {0};
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   269      IfxGtm_Tom_PwmHl_updateOff(driver, tOn);     /* tOn do not need defined values */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   270  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   271      /* Transfer the shadow registers */
	mov	d4,#4
	mov.aa	a4,a15
.L521:
	call	IfxGtm_Tom_PwmHl_setMode
.L343:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   272      IfxGtm_Tom_Tgc_setChannelsForceUpdate(driver->tgc, channelsMask, 0, 0, 0);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   273      IfxGtm_Tom_Tgc_trigger(driver->tgc);
	movh.a	a2,#@his(.1.ini)
	lea	a2,[a2]@los(.1.ini)
	lea	a2,[a2]0
.L774:
	lea	a4,[a10]0
	mov.a	a5,#2
.L34:
	ld.w	d15,[a2+]
	st.w	[a4+],d15
	loop	a5,.L34
.L775:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   274      IfxGtm_Tom_Tgc_setChannelsForceUpdate(driver->tgc, 0, channelsMask, 0, 0);
	lea	a5,[a10]0
	mov.aa	a4,a15
.L522:
	call	IfxGtm_Tom_PwmHl_updateOff
.L523:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   275  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   276      /* Enable timer to update the channels */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   277      for (channelIndex = 0; channelIndex < driver->base.channelCount; channelIndex++)
	ld.a	a4,[a15]40
.L776:
	mov	d5,#0
.L777:
	mov	d6,#0
.L778:
	mov	d7,#0
	mov	d4,d8
.L524:
	call	IfxGtm_Tom_Tgc_setChannelsForceUpdate
.L525:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   278      {
	ld.a	a4,[a15]40
	call	IfxGtm_Tom_Tgc_trigger
.L779:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   279          IfxGtm_Tom_Timer_addToChannelMask(timer, driver->ccx[channelIndex]);
	ld.a	a4,[a15]40
.L780:
	mov	d4,#0
.L781:
	mov	d6,#0
.L782:
	mov	d7,#0
	mov	d5,d8
.L526:
	call	IfxGtm_Tom_Tgc_setChannelsForceUpdate
.L527:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   280          IfxGtm_Tom_Timer_addToChannelMask(timer, driver->coutx[channelIndex]);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   281      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   282  
	mov	d15,#0
.L502:
	j	.L35
.L36:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   283      return result;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   284  }
	addsc.a	a2,a15,d15,#0
	ld.b	d4,[a2]44
	mov.aa	a4,a13
.L528:
	call	IfxGtm_Tom_Timer_addToChannelMask
.L529:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   285  
	addsc.a	a2,a15,d15,#0
	ld.b	d4,[a2]47
	mov.aa	a4,a13
.L530:
	call	IfxGtm_Tom_Timer_addToChannelMask
.L531:
	add	d15,#1
.L35:
	ld.bu	d0,[a15]17
.L783:
	jlt.u	d15,d0,.L36
.L784:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   286  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   287  void IfxGtm_Tom_PwmHl_initConfig(IfxGtm_Tom_PwmHl_Config *config)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   288  {
	mov	d2,d9
.L532:
	j	.L37

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   289      IfxStdIf_PwmHl_initConfig(&config->base);
.L37:
	ret
.L295:
	
__IfxGtm_Tom_PwmHl_init_function_end:
	.size	IfxGtm_Tom_PwmHl_init,__IfxGtm_Tom_PwmHl_init_function_end-IfxGtm_Tom_PwmHl_init
.L196:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_initConfig',code,cluster('IfxGtm_Tom_PwmHl_initConfig')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_initConfig'
	.align	2
	
	.global	IfxGtm_Tom_PwmHl_initConfig

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   290      config->timer    = NULL_PTR;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   291      config->tom      = IfxGtm_Tom_0;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   292      config->ccx      = NULL_PTR;
; Function IfxGtm_Tom_PwmHl_initConfig
.L157:
IfxGtm_Tom_PwmHl_initConfig:	.type	func
	mov.aa	a12,a4
.L534:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   293      config->coutx    = NULL_PTR;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   294      config->initPins = TRUE;
	mov.aa	a4,a12
	call	IfxStdIf_PwmHl_initConfig
.L533:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   295  }
	mov.a	a15,#0
.L789:
	st.a	[a12]16,a15
.L790:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   296  
	mov	d15,#0
.L791:
	st.b	[a12]20,d15
.L792:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   297  
	mov.a	a15,#0
.L793:
	st.a	[a12]24,a15
.L794:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   298  boolean IfxGtm_Tom_PwmHl_setDeadtime(IfxGtm_Tom_PwmHl *driver, float32 deadtime)
	mov.a	a15,#0
.L795:
	st.a	[a12]28,a15
.L796:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   299  {
	mov	d15,#1
.L797:
	st.b	[a12]32,d15
.L798:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   300      Ifx_TimerValue value = IfxStdIf_Timer_sToTick(driver->timer->base.clockFreq, deadtime);
	ret
.L346:
	
__IfxGtm_Tom_PwmHl_initConfig_function_end:
	.size	IfxGtm_Tom_PwmHl_initConfig,__IfxGtm_Tom_PwmHl_initConfig_function_end-IfxGtm_Tom_PwmHl_initConfig
.L201:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_setDeadtime',code,cluster('IfxGtm_Tom_PwmHl_setDeadtime')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_setDeadtime'
	.align	2
	
	.global	IfxGtm_Tom_PwmHl_setDeadtime

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   301      driver->base.deadtime = value;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   302  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   303      return TRUE;
; Function IfxGtm_Tom_PwmHl_setDeadtime
.L159:
IfxGtm_Tom_PwmHl_setDeadtime:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   304  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   305  
	ld.a	a15,[a4]20
.L826:
	ld.w	d15,[a15]6
.L372:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    45   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    46   * \ingroup library_srvsw_stdif
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    47   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    48   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    49   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    50   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    51   * The figure below shows the standard timer interface.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    52   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    53   * \image html "Timer.png" "Standard timer interface"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    54   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    55   * This interface defines the following features:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    56   * - Timer with configurable frequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    57   * - Configurable counting direction
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    58   * - Optional interrupt on timer event with configurable service request provider and priority
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    59   * - Optional trigger signal with:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    60   *   - Optional interrupt on trigger event with configurable service request provider and priority
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    61   *   - Configurable trigger point
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    62   *   - Configurable trigger edge
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    63   *   - trigger signal can be internal only or forwarded to a port pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    64   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    65  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    66  #ifndef IFXSTDIF_TIMER_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    67  #define IFXSTDIF_TIMER_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    68  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    69  #include "Cpu/Std/Ifx_Types.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    70  #include "Src/Std/IfxSrc.h"     
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    71  #include "Port/Std/IfxPort.h"   
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    72  #include "IfxStdIf.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    73  /** \brief Output event enable / disable */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    74  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    75  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    76      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    77      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    78                                                    *          the output is set to active between time 0 to the trigger point,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    79                                                    *          and is set to inactive between the trigger point and the period.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    81                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    82                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    83                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    84                                                    */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    85  } IfxStdIf_Timer_OutputEvent;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    86  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    87  /** \brief Timer increment direction */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    88  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    89  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    90      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    91      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    92      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    93  } IfxStdIf_Timer_CountDir;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    94  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    95  /** \brief Forward declaration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    96  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    97  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    98  /** \brief Return the timer frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    99   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   100   * \return Return the timer frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   101   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   102  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   103  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   104  /** \brief Return the timer period in ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   105   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   106   * \return Return the timer period in ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   107   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   108  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   109  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   110  /** \brief Return the timer resolution in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   111   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   112   * \return Return the timer resolution in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   113   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   114  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   115  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   116  /** \brief Return the timer trigger point
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   117   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   118   * \return Return the timer timer point
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   119   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   120  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   121  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   122  /** \brief Set the timer frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   123   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   124   * \param frequency Requested timer frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   125   * \retval TRUE The requested frequency could be set
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   126   * \retval FALSE The requested frequency is out of range
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   127   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   128  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   129  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   130  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   131   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   132   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   133   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   134  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   135  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   136  /** \brief Apply requested updates.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   137   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   138   * Such requested update are calls to:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   139   * - IfxStdIf_Timer_setSingleMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setTrigger()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   142   * as well as PWM generation related calls such as:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setDeadtime()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setOnTime()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setupChannels()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   147   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   148   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   149   * one timer period!!!
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   150   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   151   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   152   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   153   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   154   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   155  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   156  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   157  /** \brief Disable updates
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   158   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   159   * The following API action will not be taken in account before applyUpdate is called:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   160   * - IfxStdIf_Timer_setSingleMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_Timer_setTrigger()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   163   * as well as PWM generation related calls such as:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setDeadtime()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   165   * - IfxStdIf_PwmHl_setMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   166   * - IfxStdIf_PwmHl_setOnTime()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   167   * - IfxStdIf_PwmHl_setupChannels()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   168   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   169   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   170   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   171   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   172  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   173  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   174  /** \brief Return the timer input frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   175   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   176   * \return Return the timer input frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   177   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   178  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   179  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   180  /** \brief Immediately start the timer.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   181   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   182   * Please note that other mechanism may avoid the timer to tick, such as when the
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   183   * global (input) clock to the timer block is inactive.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   184   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   185   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   186   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   187  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   188  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   189  /** \brief Set the timer period.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   190   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   191   * Timer_applyUpdate() shall be invoked in order this to take effect.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   192   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   193   * \param period Period value in ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   194   * \retval TRUE The requested period could be set
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   195   * \retval FALSE The requested period is out of range
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   196   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   197  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   198  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   199  /** \brief Stop timer at the end of the period
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   200   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   201   * Timer_applyUpdate() shall be invoked in order this to take effect.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   202   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   203   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   204   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   205   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   206  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   207  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   208  /** \brief Set trigger point.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   209   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   210   * \see Timer_OutputEvent for the definition of the output level.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   211   * Active state is defined by Timer_Config::outputActiveState.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   212   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   213   * Timer_applyUpdate() shall be invoked in order this to take effect.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   214   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   215   * \param triggerPoint Trigger point in ticks from the period start.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   216   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   217   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   218  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   219  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   220  /** \brief Immediately stops the timer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   221   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   222   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   223   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   224  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   225  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   226  /** \brief Return the timer interrupt flag and reset it
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   227   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   228   * \return Return the timer interrupt flag
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   229   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   230  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   231  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   232  /** \brief Return the trigger interrupt flag and reset it
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   233   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   234   * \return Return the trigger interrupt flag
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   235   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   236  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   237  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   238  /** \brief Standard interface object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   239   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   240  struct IfxStdIf_Timer_
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   241  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   256      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   257      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   258      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   259  };
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   260  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   261  /** \brief Trigger configuration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   262  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   263  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   264      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   265      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   266      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   267      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   268      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   269      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   270      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   271      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   272  } IfxStdIf_Timer_TrigConfig;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   273  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   274  /** \brief Timer configuration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   275  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   276  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   277      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   278      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   279      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   280      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   281      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   282      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   283      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   284  } IfxStdIf_Timer_Config;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   285  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   286  /** \addtogroup library_srvsw_stdif_timer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   287   *  \{
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   288   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   289  /** \copydoc IfxStdIf_Timer_GetFrequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   290   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   291   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   292  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   293  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   294      return stdIf->getFrequency(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   295  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   296  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   297  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   298  /** \copydoc IfxStdIf_Timer_GetPeriod
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   299   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   300   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   301  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   302  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   303      return stdIf->getPeriod(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   304  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   305  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   306  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   307  /** \copydoc IfxStdIf_Timer_GetTrigger
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   308   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   309   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   310  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   311  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   312      return stdIf->getTrigger(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   313  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   314  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   315  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   316  /** \copydoc IfxStdIf_Timer_GetResolution
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   317   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   318   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   320  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   321      return stdIf->getResolution(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   322  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   323  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   324  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_SetFrequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   326   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   327   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   328  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   329  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   330      return stdIf->setFrequency(stdIf->driver, frequency);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   331  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   332  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   333  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   334  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   335   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   336   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   337  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   338  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   339      stdIf->updateInputFrequency(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   340  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   341  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   342  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   343  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   344   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   345   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   346  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   347  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   348      stdIf->applyUpdate(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   349  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   350  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   351  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   352  /** \copydoc IfxStdIf_Timer_DisableUpdate
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   353   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   354   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   355  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   356  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   357      stdIf->disableUpdate(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   358  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   359  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   360  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   361  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   362   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   363   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   364  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   365  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   366      return stdIf->getInputFrequency(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   367  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   368  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   369  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   370  /** \copydoc IfxStdIf_Timer_Run
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   371   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   372   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   373  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   374  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   375      stdIf->run(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   376  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   377  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   378  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   379  /** \copydoc IfxStdIf_Timer_SetPeriod
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   380   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   381   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   382  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   383  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   384      return stdIf->setPeriod(stdIf->driver, period);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   385  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   386  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   387  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   388  /** \copydoc IfxStdIf_Timer_SetSingleMode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   389   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   390   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   391  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   392  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   393      stdIf->setSingleMode(stdIf->driver, enabled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   394  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   395  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   397  /** \copydoc IfxStdIf_Timer_SetTrigger
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   398   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   399   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   400  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   401  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   402      stdIf->setTrigger(stdIf->driver, triggerPoint);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   403  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   404  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   405  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   406  /** \copydoc IfxStdIf_Timer_Stop
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   407   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   408   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   409  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   410  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   411      stdIf->stop(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   412  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   413  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   414  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   415  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   416   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   417   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   418  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   419  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   420      return stdIf->ackTimerIrq(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   421  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   422  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   423  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   424  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   425   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   426   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   427  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   428  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   429      return stdIf->ackTriggerIrq(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   430  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   431  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   432  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   433  /** \brief Convert timer ticks to seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   434   * \param  clockFreq Timer clock frequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   435   * \param  ticks time value in ticks to be converted
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   436   * \return Return the converted time in s
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   437   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   438  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   439  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   440      return ticks / clockFreq;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   441  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   442  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   443  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   444  /** \brief Convert seconds to timer ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   445   * \param  clockFreq Timer clock frequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   446   * \param  seconds time value in seconds to be converted
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   447   * \return Return the converted time in timer ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   448   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   449  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_sToTick(float32 clockFreq, float32 seconds)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   450  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   451      return seconds * clockFreq;
	mul.f	d15,d4,d15
	ftouz	d15,d15
.L827:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   451      return seconds * clockFreq;      (inlined)
	j	.L38

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   452  }      (inlined)
.L38:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   306  IfxGtm_Tom_PwmHl *driver, float32 minPulse)
	st.w	[a4],d15
.L828:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   307  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   308      Ifx_TimerValue value = IfxStdIf_Timer_sToTick(driver->timer->base.clockFreq, minPulse);
	mov	d2,#1
.L829:
	j	.L39

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   309  
.L39:
	ret
.L367:
	
__IfxGtm_Tom_PwmHl_setDeadtime_function_end:
	.size	IfxGtm_Tom_PwmHl_setDeadtime,__IfxGtm_Tom_PwmHl_setDeadtime_function_end-IfxGtm_Tom_PwmHl_setDeadtime
.L221:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_setMinPulse',code,cluster('IfxGtm_Tom_PwmHl_setMinPulse')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_setMinPulse'
	.align	2
	
	.global	IfxGtm_Tom_PwmHl_setMinPulse

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   310      driver->base.minPulse = value + driver->base.deadtime;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   311      driver->base.maxPulse = driver->timer->base.period - driver->base.minPulse;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   312  
; Function IfxGtm_Tom_PwmHl_setMinPulse
.L161:
IfxGtm_Tom_PwmHl_setMinPulse:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   313      return TRUE;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   314  }
	ld.a	a15,[a4]20
.L834:
	ld.w	d15,[a15]6
.L382:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    45   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    46   * \ingroup library_srvsw_stdif
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    47   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    48   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    49   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    50   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    51   * The figure below shows the standard timer interface.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    52   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    53   * \image html "Timer.png" "Standard timer interface"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    54   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    55   * This interface defines the following features:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    56   * - Timer with configurable frequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    57   * - Configurable counting direction
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    58   * - Optional interrupt on timer event with configurable service request provider and priority
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    59   * - Optional trigger signal with:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    60   *   - Optional interrupt on trigger event with configurable service request provider and priority
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    61   *   - Configurable trigger point
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    62   *   - Configurable trigger edge
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    63   *   - trigger signal can be internal only or forwarded to a port pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    64   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    65  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    66  #ifndef IFXSTDIF_TIMER_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    67  #define IFXSTDIF_TIMER_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    68  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    69  #include "Cpu/Std/Ifx_Types.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    70  #include "Src/Std/IfxSrc.h"     
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    71  #include "Port/Std/IfxPort.h"   
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    72  #include "IfxStdIf.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    73  /** \brief Output event enable / disable */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    74  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    75  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    76      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    77      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    78                                                    *          the output is set to active between time 0 to the trigger point,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    79                                                    *          and is set to inactive between the trigger point and the period.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    81                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    82                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    83                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    84                                                    */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    85  } IfxStdIf_Timer_OutputEvent;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    86  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    87  /** \brief Timer increment direction */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    88  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    89  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    90      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    91      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    92      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    93  } IfxStdIf_Timer_CountDir;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    94  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    95  /** \brief Forward declaration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    96  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    97  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    98  /** \brief Return the timer frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    99   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   100   * \return Return the timer frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   101   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   102  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   103  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   104  /** \brief Return the timer period in ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   105   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   106   * \return Return the timer period in ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   107   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   108  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   109  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   110  /** \brief Return the timer resolution in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   111   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   112   * \return Return the timer resolution in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   113   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   114  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   115  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   116  /** \brief Return the timer trigger point
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   117   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   118   * \return Return the timer timer point
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   119   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   120  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   121  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   122  /** \brief Set the timer frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   123   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   124   * \param frequency Requested timer frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   125   * \retval TRUE The requested frequency could be set
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   126   * \retval FALSE The requested frequency is out of range
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   127   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   128  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   129  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   130  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   131   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   132   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   133   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   134  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   135  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   136  /** \brief Apply requested updates.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   137   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   138   * Such requested update are calls to:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   139   * - IfxStdIf_Timer_setSingleMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setTrigger()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   142   * as well as PWM generation related calls such as:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setDeadtime()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setOnTime()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setupChannels()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   147   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   148   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   149   * one timer period!!!
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   150   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   151   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   152   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   153   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   154   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   155  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   156  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   157  /** \brief Disable updates
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   158   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   159   * The following API action will not be taken in account before applyUpdate is called:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   160   * - IfxStdIf_Timer_setSingleMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_Timer_setTrigger()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   163   * as well as PWM generation related calls such as:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setDeadtime()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   165   * - IfxStdIf_PwmHl_setMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   166   * - IfxStdIf_PwmHl_setOnTime()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   167   * - IfxStdIf_PwmHl_setupChannels()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   168   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   169   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   170   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   171   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   172  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   173  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   174  /** \brief Return the timer input frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   175   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   176   * \return Return the timer input frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   177   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   178  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   179  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   180  /** \brief Immediately start the timer.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   181   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   182   * Please note that other mechanism may avoid the timer to tick, such as when the
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   183   * global (input) clock to the timer block is inactive.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   184   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   185   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   186   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   187  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   188  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   189  /** \brief Set the timer period.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   190   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   191   * Timer_applyUpdate() shall be invoked in order this to take effect.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   192   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   193   * \param period Period value in ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   194   * \retval TRUE The requested period could be set
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   195   * \retval FALSE The requested period is out of range
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   196   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   197  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   198  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   199  /** \brief Stop timer at the end of the period
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   200   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   201   * Timer_applyUpdate() shall be invoked in order this to take effect.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   202   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   203   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   204   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   205   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   206  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   207  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   208  /** \brief Set trigger point.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   209   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   210   * \see Timer_OutputEvent for the definition of the output level.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   211   * Active state is defined by Timer_Config::outputActiveState.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   212   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   213   * Timer_applyUpdate() shall be invoked in order this to take effect.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   214   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   215   * \param triggerPoint Trigger point in ticks from the period start.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   216   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   217   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   218  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   219  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   220  /** \brief Immediately stops the timer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   221   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   222   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   223   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   224  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   225  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   226  /** \brief Return the timer interrupt flag and reset it
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   227   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   228   * \return Return the timer interrupt flag
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   229   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   230  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   231  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   232  /** \brief Return the trigger interrupt flag and reset it
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   233   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   234   * \return Return the trigger interrupt flag
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   235   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   236  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   237  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   238  /** \brief Standard interface object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   239   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   240  struct IfxStdIf_Timer_
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   241  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   256      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   257      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   258      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   259  };
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   260  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   261  /** \brief Trigger configuration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   262  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   263  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   264      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   265      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   266      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   267      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   268      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   269      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   270      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   271      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   272  } IfxStdIf_Timer_TrigConfig;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   273  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   274  /** \brief Timer configuration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   275  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   276  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   277      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   278      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   279      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   280      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   281      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   282      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   283      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   284  } IfxStdIf_Timer_Config;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   285  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   286  /** \addtogroup library_srvsw_stdif_timer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   287   *  \{
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   288   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   289  /** \copydoc IfxStdIf_Timer_GetFrequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   290   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   291   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   292  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   293  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   294      return stdIf->getFrequency(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   295  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   296  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   297  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   298  /** \copydoc IfxStdIf_Timer_GetPeriod
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   299   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   300   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   301  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   302  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   303      return stdIf->getPeriod(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   304  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   305  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   306  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   307  /** \copydoc IfxStdIf_Timer_GetTrigger
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   308   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   309   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   310  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   311  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   312      return stdIf->getTrigger(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   313  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   314  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   315  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   316  /** \copydoc IfxStdIf_Timer_GetResolution
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   317   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   318   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   320  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   321      return stdIf->getResolution(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   322  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   323  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   324  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_SetFrequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   326   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   327   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   328  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   329  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   330      return stdIf->setFrequency(stdIf->driver, frequency);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   331  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   332  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   333  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   334  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   335   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   336   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   337  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   338  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   339      stdIf->updateInputFrequency(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   340  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   341  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   342  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   343  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   344   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   345   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   346  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   347  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   348      stdIf->applyUpdate(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   349  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   350  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   351  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   352  /** \copydoc IfxStdIf_Timer_DisableUpdate
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   353   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   354   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   355  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   356  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   357      stdIf->disableUpdate(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   358  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   359  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   360  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   361  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   362   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   363   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   364  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   365  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   366      return stdIf->getInputFrequency(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   367  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   368  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   369  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   370  /** \copydoc IfxStdIf_Timer_Run
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   371   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   372   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   373  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   374  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   375      stdIf->run(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   376  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   377  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   378  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   379  /** \copydoc IfxStdIf_Timer_SetPeriod
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   380   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   381   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   382  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   383  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   384      return stdIf->setPeriod(stdIf->driver, period);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   385  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   386  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   387  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   388  /** \copydoc IfxStdIf_Timer_SetSingleMode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   389   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   390   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   391  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   392  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   393      stdIf->setSingleMode(stdIf->driver, enabled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   394  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   395  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   397  /** \copydoc IfxStdIf_Timer_SetTrigger
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   398   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   399   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   400  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   401  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   402      stdIf->setTrigger(stdIf->driver, triggerPoint);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   403  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   404  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   405  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   406  /** \copydoc IfxStdIf_Timer_Stop
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   407   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   408   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   409  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   410  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   411      stdIf->stop(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   412  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   413  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   414  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   415  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   416   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   417   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   418  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   419  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   420      return stdIf->ackTimerIrq(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   421  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   422  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   423  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   424  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   425   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   426   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   427  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   428  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   429      return stdIf->ackTriggerIrq(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   430  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   431  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   432  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   433  /** \brief Convert timer ticks to seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   434   * \param  clockFreq Timer clock frequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   435   * \param  ticks time value in ticks to be converted
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   436   * \return Return the converted time in s
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   437   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   438  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   439  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   440      return ticks / clockFreq;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   441  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   442  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   443  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   444  /** \brief Convert seconds to timer ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   445   * \param  clockFreq Timer clock frequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   446   * \param  seconds time value in seconds to be converted
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   447   * \return Return the converted time in timer ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   448   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   449  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_sToTick(float32 clockFreq, float32 seconds)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   450  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   451      return seconds * clockFreq;
	mul.f	d15,d4,d15
	ftouz	d15,d15
.L835:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   451      return seconds * clockFreq;      (inlined)
	j	.L40

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   452  }      (inlined)
.L40:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   315   IfxGtm_Tom_PwmHl_setMode(IfxGtm_Tom_PwmHl *driver, Ifx_Pwm_Mode mode)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   316  {
	ld.w	d0,[a4]
.L836:
	add	d15,d0
.L837:
	st.w	[a4]4,d15
.L838:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   317      boolean                result = TRUE;
	ld.a	a15,[a4]20
.L839:
	ld.w	d0,[a15]
.L840:
	ld.w	d15,[a4]4
.L841:
	sub	d0,d15
.L842:
	st.w	[a4]8,d0
.L843:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   318      IfxGtm_Tom_PwmHl_Base *base   = &driver->base;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   319  
	mov	d2,#1
.L844:
	j	.L41

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   320      if (base->mode != mode)
.L41:
	ret
.L378:
	
__IfxGtm_Tom_PwmHl_setMinPulse_function_end:
	.size	IfxGtm_Tom_PwmHl_setMinPulse,__IfxGtm_Tom_PwmHl_setMinPulse_function_end-IfxGtm_Tom_PwmHl_setMinPulse
.L226:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_setMode',code,cluster('IfxGtm_Tom_PwmHl_setMode')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_setMode'
	.align	2
	
	.global	IfxGtm_Tom_PwmHl_setMode

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   321      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   322          if ((mode > Ifx_Pwm_Mode_off) || (IfxGtm_Tom_PwmHl_modes[mode].update == NULL_PTR))
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   323          {
; Function IfxGtm_Tom_PwmHl_setMode
.L163:
IfxGtm_Tom_PwmHl_setMode:	.type	func
	mov.aa	a15,a4
.L535:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   324              mode   = Ifx_Pwm_Mode_off;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   325              result = FALSE;
	mov	d8,#1
.L536:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   326          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   327  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   328          IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, mode == IfxGtm_Tom_PwmHl_modes[mode].mode);
	ld.bu	d15,[a15]12
.L849:
	jeq	d15,d4,.L42
.L850:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   329  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   330          base->mode             = mode;
	jge.u	d4,#5,.L43
.L851:
	mul	d15,d4,#16
.L852:
	movh.a	a2,#@his(IfxGtm_Tom_PwmHl_modes)
	lea	a2,[a2]@los(IfxGtm_Tom_PwmHl_modes)
.L853:
	addsc.a	a2,a2,d15,#0
.L854:
	ld.w	d15,[a2]4
.L855:
	jne	d15,#0,.L44
.L43:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   331          driver->update         = IfxGtm_Tom_PwmHl_modes[mode].update;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   332          driver->updateAndShift = IfxGtm_Tom_PwmHl_modes[mode].updateAndShift;
	mov	d4,#4
.L856:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   333          driver->updatePulse    = IfxGtm_Tom_PwmHl_modes[mode].updatePulse;
	mov	d8,#0
.L44:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   334  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   335          if (base->mode != Ifx_Pwm_Mode_off)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   336          {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   337              base->inverted = IfxGtm_Tom_PwmHl_modes[mode].inverted;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   338          }
	st.b	[a15]12,d4
.L857:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   339          else
	mul	d15,d4,#16
.L858:
	movh.a	a2,#@his(IfxGtm_Tom_PwmHl_modes)
	lea	a2,[a2]@los(IfxGtm_Tom_PwmHl_modes)
.L859:
	addsc.a	a2,a2,d15,#0
.L860:
	ld.a	a2,[a2]4
.L861:
	st.a	[a15]24,a2
.L862:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   340          {                       /* Keep previous inverted for off mode */
	mul	d15,d4,#16
.L863:
	movh.a	a2,#@his(IfxGtm_Tom_PwmHl_modes)
	lea	a2,[a2]@los(IfxGtm_Tom_PwmHl_modes)
.L864:
	addsc.a	a2,a2,d15,#0
.L865:
	ld.a	a2,[a2]8
.L866:
	st.a	[a15]28,a2
.L867:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   341          }
	mul	d15,d4,#16
.L868:
	movh.a	a2,#@his(IfxGtm_Tom_PwmHl_modes)
	lea	a2,[a2]@los(IfxGtm_Tom_PwmHl_modes)
.L869:
	addsc.a	a2,a2,d15,#0
.L870:
	ld.a	a2,[a2]12
.L871:
	st.a	[a15]32,a2
.L872:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   342  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   343          if (base->inverted)
	ld.bu	d15,[a15]12
.L873:
	jeq	d15,#4,.L45
.L874:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   344          {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   345              driver->ccxTemp   = driver->coutx;
	mul	d15,d4,#16
.L875:
	movh.a	a2,#@his(IfxGtm_Tom_PwmHl_modes)
	lea	a2,[a2]@los(IfxGtm_Tom_PwmHl_modes)
.L876:
	addsc.a	a2,a2,d15,#0
.L877:
	ld.bu	d15,[a2]1
.L878:
	st.b	[a15]16,d15
.L879:
	j	.L46
.L45:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   346              driver->coutxTemp = driver->ccx;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   347          }
.L46:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   348          else
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   349          {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   350              driver->ccxTemp   = driver->ccx;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   351              driver->coutxTemp = driver->coutx;
	ld.bu	d15,[a15]16
.L880:
	jeq	d15,#0,.L47
.L881:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   352          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   353  
	lea	a2,[a15]47
.L882:
	st.a	[a15]52,a2
.L883:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   354          {   /* Workaround to enable the signal inversion required for center aligned inverted
	lea	a2,[a15]44
.L884:
	st.a	[a15]56,a2
.L885:
	j	.L48
.L47:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   355               * and right aligned modes */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   356              /** \note that changing signal level may produce short circuit at the power stage,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   357               * in which case the inverter must be disable during this action. */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   358  
	lea	a2,[a15]44
.L886:
	st.a	[a15]52,a2
.L887:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   359              /* Ifx_Pwm_Mode_centerAligned and Ifx_Pwm_Mode_LeftAligned use inverted=FALSE */
	lea	a2,[a15]47
.L888:
	st.a	[a15]56,a2
.L48:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   360              /* Ifx_Pwm_Mode_centerAlignedInverted and Ifx_Pwm_Mode_RightAligned use inverted=TRUE */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   361              uint32 channelIndex;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   362  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   363              for (channelIndex = 0; channelIndex < driver->base.channelCount; channelIndex++)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   364              {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   365                  IfxGtm_Tom_Ch channel;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   366  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   367                  channel = driver->ccx[channelIndex];
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   368                  IfxGtm_Tom_Ch_setSignalLevel(driver->tom, channel, base->inverted
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   369                      ? base->ccxActiveState
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   370                      : IfxGtm_Tom_PwmHl_invertActiveState(driver->base.ccxActiveState));
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   371  
	mov	d9,#0
.L537:
	j	.L49
.L50:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   372                  channel = driver->coutx[channelIndex];
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   373                  IfxGtm_Tom_Ch_setSignalLevel(driver->tom, channel, base->inverted
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   374                      ? IfxGtm_Tom_PwmHl_invertActiveState(driver->base.coutxActiveState)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   375                      : base->coutxActiveState);
	addsc.a	a2,a15,d9,#0
	ld.b	d4,[a2]44
.L538:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   376              }
	ld.bu	d15,[a15]16
.L889:
	jeq	d15,#0,.L51
.L394:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   377          }
	ld.bu	d5,[a15]14
.L395:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   378      }
	j	.L52
.L51:
	ld.bu	d15,[a15]14
.L398:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   143      return activeState == Ifx_ActiveState_low ? Ifx_ActiveState_high : Ifx_ActiveState_low;      (inlined)
	jne	d15,#0,.L53
.L890:
	mov	d5,#1
.L891:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   143      return activeState == Ifx_ActiveState_low ? Ifx_ActiveState_high : Ifx_ActiveState_low;      (inlined)
	j	.L54
.L53:
	mov	d5,#0

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   143      return activeState == Ifx_ActiveState_low ? Ifx_ActiveState_high : Ifx_ActiveState_low;      (inlined)
.L54:
	j	.L55

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   144  }      (inlined)
.L55:
.L52:
	ld.a	a4,[a15]36
.L399:
	call	IfxGtm_Tom_Ch_setSignalLevel
.L400:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   379  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   380      return result;
	addsc.a	a2,a15,d9,#0
	ld.b	d4,[a2]47
.L539:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   381  }
	ld.bu	d15,[a15]16
.L892:
	jeq	d15,#0,.L56
.L893:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   382  
	ld.bu	d15,[a15]15
.L401:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   143      return activeState == Ifx_ActiveState_low ? Ifx_ActiveState_high : Ifx_ActiveState_low;      (inlined)
	jne	d15,#0,.L57
.L894:
	mov	d5,#1
.L895:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   143      return activeState == Ifx_ActiveState_low ? Ifx_ActiveState_high : Ifx_ActiveState_low;      (inlined)
	j	.L58
.L57:
	mov	d5,#0

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   143      return activeState == Ifx_ActiveState_low ? Ifx_ActiveState_high : Ifx_ActiveState_low;      (inlined)
.L58:
	j	.L59

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   144  }      (inlined)
.L59:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   383  
	j	.L60
.L56:
	ld.bu	d5,[a15]15
.L60:
	ld.a	a4,[a15]36
.L403:
	call	IfxGtm_Tom_Ch_setSignalLevel
.L392:
	add	d9,#1
.L49:
	ld.bu	d15,[a15]17
.L896:
	jlt.u	d9,d15,.L50
.L42:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   384  void IfxGtm_Tom_PwmHl_setOnTime(IfxGtm_Tom_PwmHl *driver, Ifx_TimerValue *tOn)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   385  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   386      driver->update(driver, tOn);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   387  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   388  
	mov	d2,d8
.L540:
	j	.L61

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   389  
.L61:
	ret
.L385:
	
__IfxGtm_Tom_PwmHl_setMode_function_end:
	.size	IfxGtm_Tom_PwmHl_setMode,__IfxGtm_Tom_PwmHl_setMode_function_end-IfxGtm_Tom_PwmHl_setMode
.L231:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_setOnTime',code,cluster('IfxGtm_Tom_PwmHl_setOnTime')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_setOnTime'
	.align	2
	
	.global	IfxGtm_Tom_PwmHl_setOnTime

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   390  void IfxGtm_Tom_PwmHl_setOnTimeAndShift(IfxGtm_Tom_PwmHl *driver, Ifx_TimerValue *tOn, Ifx_TimerValue *shift)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   391  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   392      driver->updateAndShift(driver, tOn, shift);
; Function IfxGtm_Tom_PwmHl_setOnTime
.L165:
IfxGtm_Tom_PwmHl_setOnTime:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   393  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   394  
	ld.a	a15,[a4]24
.L901:
	calli	a15
.L541:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   395  
	ret
.L404:
	
__IfxGtm_Tom_PwmHl_setOnTime_function_end:
	.size	IfxGtm_Tom_PwmHl_setOnTime,__IfxGtm_Tom_PwmHl_setOnTime_function_end-IfxGtm_Tom_PwmHl_setOnTime
.L236:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_setOnTimeAndShift',code,cluster('IfxGtm_Tom_PwmHl_setOnTimeAndShift')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_setOnTimeAndShift'
	.align	2
	
	.global	IfxGtm_Tom_PwmHl_setOnTimeAndShift

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   396  void IfxGtm_Tom_PwmHl_setPulse(IfxGtm_Tom_PwmHl *driver, float32 *tOn, float32 *offset)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   397  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   398      driver->updatePulse(driver, tOn, offset);
; Function IfxGtm_Tom_PwmHl_setOnTimeAndShift
.L167:
IfxGtm_Tom_PwmHl_setOnTimeAndShift:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   399  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   400  
	ld.a	a15,[a4]28
.L906:
	calli	a15
.L542:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   401  
	ret
.L408:
	
__IfxGtm_Tom_PwmHl_setOnTimeAndShift_function_end:
	.size	IfxGtm_Tom_PwmHl_setOnTimeAndShift,__IfxGtm_Tom_PwmHl_setOnTimeAndShift_function_end-IfxGtm_Tom_PwmHl_setOnTimeAndShift
.L241:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_setPulse',code,cluster('IfxGtm_Tom_PwmHl_setPulse')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_setPulse'
	.align	2
	
	.global	IfxGtm_Tom_PwmHl_setPulse

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   402  void IfxGtm_Tom_PwmHl_setupChannels(IfxGtm_Tom_PwmHl *driver, boolean *activeCh, boolean *stuckSt)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   403  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   404      /* Dummy Function for StdIf compile */
; Function IfxGtm_Tom_PwmHl_setPulse
.L169:
IfxGtm_Tom_PwmHl_setPulse:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   405      IFX_UNUSED_PARAMETER(driver)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   406      IFX_UNUSED_PARAMETER(activeCh)
	ld.a	a15,[a4]32
.L911:
	calli	a15
.L543:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   407      IFX_UNUSED_PARAMETER(stuckSt)
	ret
.L412:
	
__IfxGtm_Tom_PwmHl_setPulse_function_end:
	.size	IfxGtm_Tom_PwmHl_setPulse,__IfxGtm_Tom_PwmHl_setPulse_function_end-IfxGtm_Tom_PwmHl_setPulse
.L246:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_setupChannels',code,cluster('IfxGtm_Tom_PwmHl_setupChannels')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_setupChannels'
	.align	2
	
	.global	IfxGtm_Tom_PwmHl_setupChannels

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   408  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   409  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   410  
; Function IfxGtm_Tom_PwmHl_setupChannels
.L171:
IfxGtm_Tom_PwmHl_setupChannels:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   411  boolean IfxGtm_Tom_PwmHl_stdIfPwmHlInit(IfxStdIf_PwmHl *stdif, IfxGtm_Tom_PwmHl *driver)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   412  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   413      /* Ensure the stdif is reset to zeros */
	jz.a	a4,.L62
.L62:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   414      memset(stdif, 0, sizeof(IfxStdIf_PwmHl));
	jz.a	a5,.L63
.L63:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   415  
	jz.a	a6,.L64
.L64:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   416      /* *INDENT-OFF* Note: this file was indented manually by the author. */
	ret
.L417:
	
__IfxGtm_Tom_PwmHl_setupChannels_function_end:
	.size	IfxGtm_Tom_PwmHl_setupChannels,__IfxGtm_Tom_PwmHl_setupChannels_function_end-IfxGtm_Tom_PwmHl_setupChannels
.L251:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_stdIfPwmHlInit',code,cluster('IfxGtm_Tom_PwmHl_stdIfPwmHlInit')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_stdIfPwmHlInit'
	.align	2
	
	.global	IfxGtm_Tom_PwmHl_stdIfPwmHlInit

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   417      /* Set the API link */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   418      stdif->driver               = driver;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   419      stdif->setDeadtime          = (IfxStdIf_PwmHl_SetDeadtime      )&IfxGtm_Tom_PwmHl_setDeadtime;
; Function IfxGtm_Tom_PwmHl_stdIfPwmHlInit
.L173:
IfxGtm_Tom_PwmHl_stdIfPwmHlInit:	.type	func
	mov.aa	a15,a4
.L545:
	mov.aa	a12,a5
.L546:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   420      stdif->getDeadtime          = (IfxStdIf_PwmHl_GetDeadtime      )&IfxGtm_Tom_PwmHl_getDeadtime;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   421      stdif->setMinPulse          = (IfxStdIf_PwmHl_SetMinPulse      )&IfxGtm_Tom_PwmHl_setMinPulse;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   422      stdif->getMinPulse          = (IfxStdIf_PwmHl_GetMinPulse      )&IfxGtm_Tom_PwmHl_getMinPulse;
	mov	d4,#0
.L920:
	mov	d5,#112
	mov.aa	a4,a15
	call	memset
.L544:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   423      stdif->getMode              = (IfxStdIf_PwmHl_GetMode          )&IfxGtm_Tom_PwmHl_getMode;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   424      stdif->setMode              = (IfxStdIf_PwmHl_SetMode          )&IfxGtm_Tom_PwmHl_setMode;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   425      stdif->setOnTime            = (IfxStdIf_PwmHl_SetOnTime        )&IfxGtm_Tom_PwmHl_setOnTime;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   426      stdif->setOnTimeAndShift    = (IfxStdIf_PwmHl_SetOnTimeAndShift)&IfxGtm_Tom_PwmHl_setOnTimeAndShift;
	st.a	[a15],a12
.L921:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   427      stdif->setPulse             = (IfxStdIf_PwmHl_SetPulse         )&IfxGtm_Tom_PwmHl_setPulse;
	movh.a	a2,#@his(IfxGtm_Tom_PwmHl_setDeadtime)
	lea	a2,[a2]@los(IfxGtm_Tom_PwmHl_setDeadtime)
.L922:
	st.a	[a15]4,a2
.L923:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   428      stdif->setupChannels        = (IfxStdIf_PwmHl_SetupChannels    )&IfxGtm_Tom_PwmHl_setupChannels;
	movh.a	a2,#@his(IfxGtm_Tom_PwmHl_getDeadtime)
	lea	a2,[a2]@los(IfxGtm_Tom_PwmHl_getDeadtime)
.L924:
	st.a	[a15]8,a2
.L925:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   429      IfxGtm_Tom_Timer_stdIfTimerInit(&stdif->timer, driver->timer);
	movh.a	a2,#@his(IfxGtm_Tom_PwmHl_setMinPulse)
	lea	a2,[a2]@los(IfxGtm_Tom_PwmHl_setMinPulse)
.L926:
	st.a	[a15]12,a2
.L927:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   430      /* *INDENT-ON* */
	movh.a	a2,#@his(IfxGtm_Tom_PwmHl_getMinPulse)
	lea	a2,[a2]@los(IfxGtm_Tom_PwmHl_getMinPulse)
.L928:
	st.a	[a15]16,a2
.L929:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   431  
	movh.a	a2,#@his(IfxGtm_Tom_PwmHl_getMode)
	lea	a2,[a2]@los(IfxGtm_Tom_PwmHl_getMode)
.L930:
	st.a	[a15]20,a2
.L931:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   432      return TRUE;
	movh.a	a2,#@his(IfxGtm_Tom_PwmHl_setMode)
	lea	a2,[a2]@los(IfxGtm_Tom_PwmHl_setMode)
.L932:
	st.a	[a15]24,a2
.L933:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   433  }
	movh.a	a2,#@his(IfxGtm_Tom_PwmHl_setOnTime)
	lea	a2,[a2]@los(IfxGtm_Tom_PwmHl_setOnTime)
.L934:
	st.a	[a15]28,a2
.L935:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   434  
	movh.a	a2,#@his(IfxGtm_Tom_PwmHl_setOnTimeAndShift)
	lea	a2,[a2]@los(IfxGtm_Tom_PwmHl_setOnTimeAndShift)
.L936:
	st.a	[a15]32,a2
.L937:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   435  
	movh.a	a2,#@his(IfxGtm_Tom_PwmHl_setPulse)
	lea	a2,[a2]@los(IfxGtm_Tom_PwmHl_setPulse)
.L938:
	st.a	[a15]36,a2
.L939:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   436  IFX_STATIC void IfxGtm_Tom_PwmHl_updateAndShiftOff(IfxGtm_Tom_PwmHl *driver, Ifx_TimerValue *tOn, Ifx_TimerValue *shift)
	movh.a	a2,#@his(IfxGtm_Tom_PwmHl_setupChannels)
	lea	a2,[a2]@los(IfxGtm_Tom_PwmHl_setupChannels)
.L940:
	st.a	[a15]40,a2
.L941:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   437  {
	lea	a4,[a15]44
.L942:
	ld.a	a5,[a12]20
	call	IfxGtm_Tom_Timer_stdIfTimerInit
.L943:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   438      IFX_UNUSED_PARAMETER(tOn)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   439      IFX_UNUSED_PARAMETER(shift)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   440  
	mov	d2,#1
.L944:
	j	.L65

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   441      IfxGtm_Tom_PwmHl_updateOff(driver, NULL_PTR);
.L65:
	ret
.L422:
	
__IfxGtm_Tom_PwmHl_stdIfPwmHlInit_function_end:
	.size	IfxGtm_Tom_PwmHl_stdIfPwmHlInit,__IfxGtm_Tom_PwmHl_stdIfPwmHlInit_function_end-IfxGtm_Tom_PwmHl_stdIfPwmHlInit
.L256:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_updateAndShiftOff',code,cluster('IfxGtm_Tom_PwmHl_updateAndShiftOff')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_updateAndShiftOff'
	.align	2
	

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   442  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   443  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   444  
; Function IfxGtm_Tom_PwmHl_updateAndShiftOff
.L175:
IfxGtm_Tom_PwmHl_updateAndShiftOff:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   445  IFX_STATIC void IfxGtm_Tom_PwmHl_updateCenterAligned(IfxGtm_Tom_PwmHl *driver, Ifx_TimerValue *tOn)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   446  {
	jz.a	a5,.L66
.L66:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   447      uint8          channelIndex;
	jz.a	a6,.L67
.L67:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   448      Ifx_TimerValue period;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   449      Ifx_TimerValue deadtime = driver->base.deadtime;
	mov.a	a5,#0
.L548:
	call	IfxGtm_Tom_PwmHl_updateOff
.L547:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   450  
	ret
.L426:
	
__IfxGtm_Tom_PwmHl_updateAndShiftOff_function_end:
	.size	IfxGtm_Tom_PwmHl_updateAndShiftOff,__IfxGtm_Tom_PwmHl_updateAndShiftOff_function_end-IfxGtm_Tom_PwmHl_updateAndShiftOff
.L261:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_updateCenterAligned',code,cluster('IfxGtm_Tom_PwmHl_updateCenterAligned')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_updateCenterAligned'
	.align	2
	

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   451      period = driver->timer->base.period;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   452  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   453      for (channelIndex = 0; channelIndex < driver->base.channelCount; channelIndex++)
; Function IfxGtm_Tom_PwmHl_updateCenterAligned
.L177:
IfxGtm_Tom_PwmHl_updateCenterAligned:	.type	func
	mov.aa	a15,a4
.L549:
	mov.aa	a12,a5
.L550:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   454      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   455          Ifx_TimerValue x;             /* x=period*dutyCycle, x=OnTime+deadTime */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   456          Ifx_TimerValue cm0, cm1;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   457          x = tOn[channelIndex];
	ld.w	d8,[a15]
.L551:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   458  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   459          if (driver->base.inverted != FALSE)
	ld.a	a2,[a15]20
.L953:
	ld.w	d9,[a2]
.L552:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   460          {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   461              x = period - x;
	mov	d14,#0
.L553:
	j	.L68
.L69:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   462          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   463          else
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   464          {}
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   465  
	mul	d15,d14,#4
	addsc.a	a2,a12,d15,#0
	ld.w	d0,[a2]
.L555:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   466          if ((x < driver->base.minPulse) || (x <= deadtime))
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   467          {                       /* For deadtime condition: avoid leading edge of top channel to occur after the trailing edge */
	ld.bu	d15,[a15]16
.L954:
	jeq	d15,#0,.L70
.L955:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   468              x = 0;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   469          }
	sub	d0,d9,d0
.L956:
	j	.L71
.L70:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   470          else if (x > driver->base.maxPulse)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   471          {
.L71:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   472              x = period;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   473          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   474          else
	ld.w	d15,[a15]4
.L957:
	jlt.u	d0,d15,.L72
.L958:
	jlt.u	d8,d0,.L73
.L72:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   475          {}
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   476  
	mov	d0,#0
.L959:
	j	.L74
.L73:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   477          /* Special handling due to GTM issue */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   478          if (x == period)
	ld.w	d15,[a15]8
.L960:
	jge.u	d15,d0,.L75
.L961:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   479          {                       /* 100% duty cycle */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   480              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccxTemp[channelIndex],
	mov	d0,d9
.L962:
	j	.L76
.L75:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   481                  period + 1 /* No compare event */,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   482                  2 /* 1st compare event (issue: expected to be 1) */ + deadtime);
.L76:
.L74:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   483              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->coutxTemp[channelIndex],
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   484                  period + 2 /* No compare event, issues has been seen with +1 */,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   485                  2 /* 1st compare event (issue: expected to be 1) */);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   486          }
	jne	d0,d9,.L77
.L963:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   487          else if (x == 0)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   488          {
	ld.a	a4,[a15]36
.L964:
	ld.a	a2,[a15]52
.L965:
	addsc.a	a2,a2,d14,#0
	ld.b	d4,[a2]0
.L966:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   489              cm0 = 1;
	add	d5,d9,#1
.L967:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   490              cm1 = period + 2;
	add	d6,d8,#2
	call	IfxGtm_Tom_Ch_setCompareShadow
.L556:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   491              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccxTemp[channelIndex], cm0, cm1);
	ld.a	a4,[a15]36
.L968:
	ld.a	a2,[a15]56
.L969:
	addsc.a	a2,a2,d14,#0
	ld.b	d4,[a2]0
.L970:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   492              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->coutxTemp[channelIndex], cm0 + deadtime, cm1);
	add	d5,d9,#2
.L971:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   493          }
	mov	d6,#2
	call	IfxGtm_Tom_Ch_setCompareShadow
.L972:
	j	.L78
.L77:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   494          else
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   495          {                           /* x% duty cycle */
	jne	d0,#0,.L79
.L973:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   496              cm1 = (period - x) / 2; // CM1
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   497              cm0 = (period + x) / 2; // CM0
	mov	d15,#1
.L558:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   498              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccxTemp[channelIndex], cm0, cm1 + deadtime);
	add	d10,d9,#2
.L559:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   499              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->coutxTemp[channelIndex], cm0 + deadtime, cm1);
	ld.a	a4,[a15]36
.L974:
	ld.a	a2,[a15]52
.L975:
	addsc.a	a2,a2,d14,#0
	ld.b	d4,[a2]0
.L976:
	mov	d5,d15
.L560:
	mov	d6,d10
.L561:
	call	IfxGtm_Tom_Ch_setCompareShadow
.L557:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   500          }
	ld.a	a4,[a15]36
.L977:
	ld.a	a2,[a15]56
.L978:
	addsc.a	a2,a2,d14,#0
	ld.b	d4,[a2]0
.L979:
	add	d5,d15,d8
.L980:
	mov	d6,d10
.L562:
	call	IfxGtm_Tom_Ch_setCompareShadow
.L563:
	j	.L80
.L79:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   501      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   502  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   503  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   504  
	sub	d15,d9,d0
.L981:
	mov	d1,#0
	addih	d1,d1,#32768
	mul.u	e12,d15,d1
.L565:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   505  IFX_STATIC void IfxGtm_Tom_PwmHl_updateEdgeAligned(IfxGtm_Tom_PwmHl *driver, Ifx_TimerValue *tOn)
	add	d0,d9
.L564:
	mov	d15,#0
	addih	d15,d15,#32768
	mul.u	e10,d0,d15
.L566:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   506  {
	ld.a	a4,[a15]36
.L982:
	ld.a	a2,[a15]52
.L983:
	addsc.a	a2,a2,d14,#0
	ld.b	d4,[a2]0
.L984:
	add	d6,d13,d8
	mov	d5,d11
.L567:
	call	IfxGtm_Tom_Ch_setCompareShadow
.L568:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   507      uint8          channelIndex;
	ld.a	a4,[a15]36
.L985:
	ld.a	a2,[a15]56
.L986:
	addsc.a	a2,a2,d14,#0
	ld.b	d4,[a2]0
.L987:
	add	d5,d11,d8
.L988:
	mov	d6,d13
.L569:
	call	IfxGtm_Tom_Ch_setCompareShadow
.L80:
.L78:
	add	d14,#1
.L554:
	extr.u	d14,d14,#0,#8
.L68:
	ld.bu	d15,[a15]17
.L989:
	jlt.u	d14,d15,.L69
.L990:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   508      Ifx_TimerValue period;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   509      Ifx_TimerValue deadtime = driver->base.deadtime;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   510  
	ret
.L430:
	
__IfxGtm_Tom_PwmHl_updateCenterAligned_function_end:
	.size	IfxGtm_Tom_PwmHl_updateCenterAligned,__IfxGtm_Tom_PwmHl_updateCenterAligned_function_end-IfxGtm_Tom_PwmHl_updateCenterAligned
.L266:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_updateEdgeAligned',code,cluster('IfxGtm_Tom_PwmHl_updateEdgeAligned')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_updateEdgeAligned'
	.align	2
	

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   511      period = driver->timer->base.period;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   512  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   513      for (channelIndex = 0; channelIndex < driver->base.channelCount; channelIndex++)
; Function IfxGtm_Tom_PwmHl_updateEdgeAligned
.L179:
IfxGtm_Tom_PwmHl_updateEdgeAligned:	.type	func
	mov.aa	a15,a4
.L570:
	mov.aa	a12,a5
.L571:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   514      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   515          Ifx_TimerValue x;             /* x=period*dutyCycle, x=OnTime+deadTime */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   516          Ifx_TimerValue cm0, cm1;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   517          x = tOn[channelIndex];
	ld.w	d9,[a15]
.L572:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   518  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   519          if (driver->base.inverted != FALSE)
	ld.a	a2,[a15]20
.L995:
	ld.w	d10,[a2]
.L573:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   520          {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   521              x = period - x;
	mov	d15,#0
.L574:
	j	.L81
.L82:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   522          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   523          else
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   524          {}
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   525  
	mul	d0,d15,#4
	addsc.a	a2,a12,d0,#0
	ld.w	d8,[a2]
.L576:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   526          if ((x < driver->base.minPulse) || (x <= deadtime))
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   527          {                       /* For deadtime condition: avoid leading edge of top channel to occur after the trailing edge */
	ld.bu	d0,[a15]16
.L996:
	jeq	d0,#0,.L83
.L997:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   528              x = 0;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   529          }
	sub	d8,d10,d8
.L998:
	j	.L84
.L83:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   530          else if (x > driver->base.maxPulse)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   531          {
.L84:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   532              x = period;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   533          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   534          else
	ld.w	d0,[a15]4
.L999:
	jlt.u	d8,d0,.L85
.L1000:
	jlt.u	d9,d8,.L86
.L85:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   535          {}
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   536  
	mov	d8,#0
.L1001:
	j	.L87
.L86:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   537          /* Special handling due to GTM issue */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   538          if (x == period)
	ld.w	d0,[a15]8
.L1002:
	jge.u	d0,d8,.L88
.L1003:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   539          {                       /* 100% duty cycle */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   540              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccxTemp[channelIndex],
	mov	d8,d10
.L1004:
	j	.L89
.L88:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   541                  period + 1 /* No compare event */,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   542                  2 /* 1st compare event (issue: expected to be 1) */ + deadtime);
.L89:
.L87:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   543              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->coutxTemp[channelIndex],
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   544                  period + 2 /* No compare event, issues has been seen with +1 */,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   545                  2 /* 1st compare event (issue: expected to be 1) */);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   546          }
	jne	d8,d10,.L90
.L1005:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   547          else if (x == 0)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   548          {
	ld.a	a4,[a15]36
.L1006:
	ld.a	a2,[a15]52
.L1007:
	addsc.a	a2,a2,d15,#0
	ld.b	d4,[a2]0
.L1008:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   549              cm0 = 1;
	add	d5,d10,#1
.L1009:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   550              cm1 = period + 2;
	add	d6,d9,#2
	call	IfxGtm_Tom_Ch_setCompareShadow
.L1010:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   551              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccxTemp[channelIndex], cm0, cm1);
	ld.a	a4,[a15]36
.L1011:
	ld.a	a2,[a15]56
.L1012:
	addsc.a	a2,a2,d15,#0
	ld.b	d4,[a2]0
.L1013:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   552              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->coutxTemp[channelIndex], cm0 + deadtime, cm1);
	add	d5,d10,#2
.L1014:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   553          }
	mov	d6,#2
	call	IfxGtm_Tom_Ch_setCompareShadow
.L1015:
	j	.L91
.L90:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   554          else
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   555          {                       /* x% duty cycle */
	jne	d8,#0,.L92
.L1016:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   556              cm1 = 2;            // CM1, set to 2 due to a GTM issue. should be 1 according to spec
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   557              cm0 = x;            // CM0, set to x+2 due to a GTM issue. should be x+1 according to spec
	mov	d8,#1
.L577:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   558              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccxTemp[channelIndex], cm0, cm1 + deadtime);
	add	d11,d10,#2
.L578:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   559              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->coutxTemp[channelIndex], cm0 + deadtime, cm1);
	ld.a	a4,[a15]36
.L1017:
	ld.a	a2,[a15]52
.L1018:
	addsc.a	a2,a2,d15,#0
	ld.b	d4,[a2]0
.L1019:
	mov	d5,d8
.L579:
	mov	d6,d11
.L581:
	call	IfxGtm_Tom_Ch_setCompareShadow
.L580:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   560          }
	ld.a	a4,[a15]36
.L1020:
	ld.a	a2,[a15]56
.L1021:
	addsc.a	a2,a2,d15,#0
	ld.b	d4,[a2]0
.L1022:
	add	d5,d8,d9
.L1023:
	mov	d6,d11
.L582:
	call	IfxGtm_Tom_Ch_setCompareShadow
.L583:
	j	.L93
.L92:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   561      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   562  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   563  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   564  
	mov	d11,#2
.L584:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   565  IFX_STATIC void IfxGtm_Tom_PwmHl_updateOff(IfxGtm_Tom_PwmHl *driver, Ifx_TimerValue *tOn)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   566  {
	ld.a	a4,[a15]36
.L1024:
	ld.a	a2,[a15]52
.L1025:
	addsc.a	a2,a2,d15,#0
	ld.b	d4,[a2]0
.L1026:
	add	d6,d11,d9
	mov	d5,d8
.L585:
	call	IfxGtm_Tom_Ch_setCompareShadow
.L586:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   567      IFX_UNUSED_PARAMETER(tOn)
	ld.a	a4,[a15]36
.L1027:
	ld.a	a2,[a15]56
.L1028:
	addsc.a	a2,a2,d15,#0
	ld.b	d4,[a2]0
.L1029:
	add	d5,d8,d9
.L1030:
	mov	d6,d11
.L587:
	call	IfxGtm_Tom_Ch_setCompareShadow
.L93:
.L91:
	add	d15,#1
.L575:
	extr.u	d15,d15,#0,#8
.L81:
	ld.bu	d0,[a15]17
.L1031:
	jlt.u	d15,d0,.L82
.L1032:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   568      uint8 channelIndex;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   569      Ifx_TimerValue period;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   570  
	ret
.L439:
	
__IfxGtm_Tom_PwmHl_updateEdgeAligned_function_end:
	.size	IfxGtm_Tom_PwmHl_updateEdgeAligned,__IfxGtm_Tom_PwmHl_updateEdgeAligned_function_end-IfxGtm_Tom_PwmHl_updateEdgeAligned
.L271:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_updateOff',code,cluster('IfxGtm_Tom_PwmHl_updateOff')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_updateOff'
	.align	2
	

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   571      period = driver->timer->base.period;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   572  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   573      for (channelIndex = 0; channelIndex < driver->base.channelCount; channelIndex++)
; Function IfxGtm_Tom_PwmHl_updateOff
.L181:
IfxGtm_Tom_PwmHl_updateOff:	.type	func
	mov.aa	a15,a4
.L588:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   574      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   575          IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccxTemp[channelIndex],
	jz.a	a5,.L94
.L94:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   576              2 /* 1 will keep the previous level */, period + 2);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   577          IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->coutxTemp[channelIndex], period + 1, 2);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   578      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   579  }
	ld.a	a2,[a15]20
.L1037:
	ld.w	d8,[a2]
.L589:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   580  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   581  
	mov	d15,#0
.L590:
	j	.L95
.L96:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   582  IFX_STATIC void IfxGtm_Tom_PwmHl_updatePulse(IfxGtm_Tom_PwmHl *driver, float32 *tOn, float32 *offset)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   583  {
	ld.a	a4,[a15]36
.L1038:
	ld.a	a2,[a15]52
.L1039:
	addsc.a	a2,a2,d15,#0
	ld.b	d4,[a2]0
.L1040:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   584      uint8          channelIndex;
	mov	d5,#2
.L1041:
	add	d6,d8,#2
	call	IfxGtm_Tom_Ch_setCompareShadow
.L1042:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   585      Ifx_TimerValue period;
	ld.a	a4,[a15]36
.L1043:
	ld.a	a2,[a15]56
.L1044:
	addsc.a	a2,a2,d15,#0
	ld.b	d4,[a2]0
.L1045:
	add	d5,d8,#1
.L1046:
	mov	d6,#2
	call	IfxGtm_Tom_Ch_setCompareShadow
.L1047:
	add	d15,#1
.L591:
	extr.u	d15,d15,#0,#8
.L95:
	ld.bu	d0,[a15]17
.L1048:
	jlt.u	d15,d0,.L96
.L1049:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   586  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   587      period = driver->timer->base.period;
	ret
.L448:
	
__IfxGtm_Tom_PwmHl_updateOff_function_end:
	.size	IfxGtm_Tom_PwmHl_updateOff,__IfxGtm_Tom_PwmHl_updateOff_function_end-IfxGtm_Tom_PwmHl_updateOff
.L276:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_updatePulse',code,cluster('IfxGtm_Tom_PwmHl_updatePulse')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_updatePulse'
	.align	2
	

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   588  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   589      /* Top channels */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   590      for (channelIndex = 0; channelIndex < driver->base.channelCount; channelIndex++)
; Function IfxGtm_Tom_PwmHl_updatePulse
.L183:
IfxGtm_Tom_PwmHl_updatePulse:	.type	func
	mov.aa	a15,a4
.L592:
	mov.aa	a12,a5
.L593:
	mov.aa	a13,a6
.L594:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   591      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   592          Ifx_TimerValue x; /* x=period*dutyCycle, x=OnTime+deadTime */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   593          Ifx_TimerValue o;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   594          Ifx_TimerValue cm0, cm1;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   595  
	ld.a	a2,[a15]20
.L1054:
	ld.w	d8,[a2]
.L595:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   596          x = IfxStdIf_Timer_sToTick(driver->timer->base.clockFreq, tOn[channelIndex]);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   597          o = IfxStdIf_Timer_sToTick(driver->timer->base.clockFreq, offset[channelIndex]);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   598  
	mov	d9,#0
.L596:
	j	.L97
.L98:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   599          if (driver->base.inverted != FALSE)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   600          {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   601              x = period - x;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   602          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   603          else
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   604          {}
	ld.a	a2,[a15]20
.L1055:
	ld.w	d0,[a2]6
.L1056:
	mul	d15,d9,#4
	addsc.a	a2,a12,d15,#0
	ld.w	d1,[a2]
.L463:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    45   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    46   * \ingroup library_srvsw_stdif
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    47   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    48   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    49   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    50   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    51   * The figure below shows the standard timer interface.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    52   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    53   * \image html "Timer.png" "Standard timer interface"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    54   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    55   * This interface defines the following features:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    56   * - Timer with configurable frequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    57   * - Configurable counting direction
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    58   * - Optional interrupt on timer event with configurable service request provider and priority
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    59   * - Optional trigger signal with:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    60   *   - Optional interrupt on trigger event with configurable service request provider and priority
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    61   *   - Configurable trigger point
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    62   *   - Configurable trigger edge
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    63   *   - trigger signal can be internal only or forwarded to a port pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    64   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    65  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    66  #ifndef IFXSTDIF_TIMER_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    67  #define IFXSTDIF_TIMER_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    68  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    69  #include "Cpu/Std/Ifx_Types.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    70  #include "Src/Std/IfxSrc.h"     
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    71  #include "Port/Std/IfxPort.h"   
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    72  #include "IfxStdIf.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    73  /** \brief Output event enable / disable */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    74  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    75  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    76      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    77      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    78                                                    *          the output is set to active between time 0 to the trigger point,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    79                                                    *          and is set to inactive between the trigger point and the period.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    81                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    82                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    83                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    84                                                    */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    85  } IfxStdIf_Timer_OutputEvent;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    86  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    87  /** \brief Timer increment direction */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    88  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    89  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    90      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    91      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    92      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    93  } IfxStdIf_Timer_CountDir;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    94  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    95  /** \brief Forward declaration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    96  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    97  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    98  /** \brief Return the timer frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    99   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   100   * \return Return the timer frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   101   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   102  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   103  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   104  /** \brief Return the timer period in ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   105   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   106   * \return Return the timer period in ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   107   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   108  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   109  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   110  /** \brief Return the timer resolution in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   111   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   112   * \return Return the timer resolution in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   113   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   114  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   115  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   116  /** \brief Return the timer trigger point
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   117   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   118   * \return Return the timer timer point
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   119   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   120  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   121  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   122  /** \brief Set the timer frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   123   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   124   * \param frequency Requested timer frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   125   * \retval TRUE The requested frequency could be set
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   126   * \retval FALSE The requested frequency is out of range
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   127   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   128  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   129  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   130  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   131   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   132   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   133   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   134  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   135  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   136  /** \brief Apply requested updates.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   137   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   138   * Such requested update are calls to:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   139   * - IfxStdIf_Timer_setSingleMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setTrigger()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   142   * as well as PWM generation related calls such as:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setDeadtime()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setOnTime()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setupChannels()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   147   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   148   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   149   * one timer period!!!
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   150   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   151   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   152   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   153   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   154   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   155  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   156  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   157  /** \brief Disable updates
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   158   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   159   * The following API action will not be taken in account before applyUpdate is called:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   160   * - IfxStdIf_Timer_setSingleMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_Timer_setTrigger()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   163   * as well as PWM generation related calls such as:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setDeadtime()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   165   * - IfxStdIf_PwmHl_setMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   166   * - IfxStdIf_PwmHl_setOnTime()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   167   * - IfxStdIf_PwmHl_setupChannels()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   168   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   169   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   170   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   171   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   172  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   173  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   174  /** \brief Return the timer input frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   175   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   176   * \return Return the timer input frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   177   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   178  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   179  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   180  /** \brief Immediately start the timer.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   181   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   182   * Please note that other mechanism may avoid the timer to tick, such as when the
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   183   * global (input) clock to the timer block is inactive.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   184   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   185   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   186   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   187  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   188  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   189  /** \brief Set the timer period.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   190   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   191   * Timer_applyUpdate() shall be invoked in order this to take effect.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   192   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   193   * \param period Period value in ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   194   * \retval TRUE The requested period could be set
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   195   * \retval FALSE The requested period is out of range
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   196   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   197  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   198  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   199  /** \brief Stop timer at the end of the period
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   200   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   201   * Timer_applyUpdate() shall be invoked in order this to take effect.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   202   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   203   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   204   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   205   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   206  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   207  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   208  /** \brief Set trigger point.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   209   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   210   * \see Timer_OutputEvent for the definition of the output level.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   211   * Active state is defined by Timer_Config::outputActiveState.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   212   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   213   * Timer_applyUpdate() shall be invoked in order this to take effect.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   214   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   215   * \param triggerPoint Trigger point in ticks from the period start.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   216   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   217   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   218  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   219  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   220  /** \brief Immediately stops the timer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   221   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   222   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   223   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   224  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   225  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   226  /** \brief Return the timer interrupt flag and reset it
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   227   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   228   * \return Return the timer interrupt flag
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   229   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   230  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   231  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   232  /** \brief Return the trigger interrupt flag and reset it
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   233   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   234   * \return Return the trigger interrupt flag
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   235   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   236  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   237  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   238  /** \brief Standard interface object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   239   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   240  struct IfxStdIf_Timer_
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   241  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   256      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   257      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   258      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   259  };
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   260  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   261  /** \brief Trigger configuration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   262  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   263  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   264      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   265      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   266      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   267      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   268      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   269      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   270      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   271      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   272  } IfxStdIf_Timer_TrigConfig;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   273  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   274  /** \brief Timer configuration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   275  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   276  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   277      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   278      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   279      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   280      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   281      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   282      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   283      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   284  } IfxStdIf_Timer_Config;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   285  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   286  /** \addtogroup library_srvsw_stdif_timer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   287   *  \{
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   288   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   289  /** \copydoc IfxStdIf_Timer_GetFrequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   290   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   291   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   292  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   293  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   294      return stdIf->getFrequency(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   295  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   296  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   297  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   298  /** \copydoc IfxStdIf_Timer_GetPeriod
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   299   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   300   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   301  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   302  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   303      return stdIf->getPeriod(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   304  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   305  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   306  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   307  /** \copydoc IfxStdIf_Timer_GetTrigger
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   308   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   309   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   310  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   311  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   312      return stdIf->getTrigger(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   313  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   314  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   315  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   316  /** \copydoc IfxStdIf_Timer_GetResolution
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   317   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   318   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   320  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   321      return stdIf->getResolution(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   322  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   323  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   324  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_SetFrequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   326   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   327   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   328  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   329  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   330      return stdIf->setFrequency(stdIf->driver, frequency);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   331  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   332  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   333  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   334  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   335   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   336   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   337  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   338  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   339      stdIf->updateInputFrequency(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   340  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   341  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   342  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   343  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   344   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   345   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   346  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   347  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   348      stdIf->applyUpdate(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   349  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   350  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   351  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   352  /** \copydoc IfxStdIf_Timer_DisableUpdate
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   353   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   354   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   355  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   356  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   357      stdIf->disableUpdate(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   358  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   359  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   360  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   361  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   362   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   363   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   364  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   365  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   366      return stdIf->getInputFrequency(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   367  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   368  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   369  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   370  /** \copydoc IfxStdIf_Timer_Run
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   371   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   372   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   373  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   374  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   375      stdIf->run(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   376  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   377  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   378  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   379  /** \copydoc IfxStdIf_Timer_SetPeriod
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   380   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   381   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   382  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   383  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   384      return stdIf->setPeriod(stdIf->driver, period);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   385  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   386  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   387  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   388  /** \copydoc IfxStdIf_Timer_SetSingleMode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   389   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   390   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   391  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   392  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   393      stdIf->setSingleMode(stdIf->driver, enabled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   394  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   395  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   397  /** \copydoc IfxStdIf_Timer_SetTrigger
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   398   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   399   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   400  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   401  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   402      stdIf->setTrigger(stdIf->driver, triggerPoint);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   403  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   404  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   405  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   406  /** \copydoc IfxStdIf_Timer_Stop
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   407   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   408   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   409  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   410  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   411      stdIf->stop(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   412  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   413  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   414  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   415  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   416   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   417   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   418  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   419  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   420      return stdIf->ackTimerIrq(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   421  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   422  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   423  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   424  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   425   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   426   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   427  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   428  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   429      return stdIf->ackTriggerIrq(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   430  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   431  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   432  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   433  /** \brief Convert timer ticks to seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   434   * \param  clockFreq Timer clock frequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   435   * \param  ticks time value in ticks to be converted
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   436   * \return Return the converted time in s
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   437   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   438  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   439  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   440      return ticks / clockFreq;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   441  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   442  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   443  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   444  /** \brief Convert seconds to timer ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   445   * \param  clockFreq Timer clock frequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   446   * \param  seconds time value in seconds to be converted
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   447   * \return Return the converted time in timer ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   448   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   449  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_sToTick(float32 clockFreq, float32 seconds)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   450  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   451      return seconds * clockFreq;
	mul.f	d0,d1,d0
	ftouz	d5,d0
.L598:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   451      return seconds * clockFreq;      (inlined)
	j	.L99

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   452  }      (inlined)
.L99:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   605   {
	ld.a	a2,[a15]20
.L1057:
	ld.w	d0,[a2]6
.L1058:
	mul	d15,d9,#4
	addsc.a	a2,a13,d15,#0
	ld.w	d15,[a2]
.L466:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    45   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    46   * \ingroup library_srvsw_stdif
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    47   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    48   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    49   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    50   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    51   * The figure below shows the standard timer interface.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    52   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    53   * \image html "Timer.png" "Standard timer interface"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    54   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    55   * This interface defines the following features:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    56   * - Timer with configurable frequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    57   * - Configurable counting direction
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    58   * - Optional interrupt on timer event with configurable service request provider and priority
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    59   * - Optional trigger signal with:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    60   *   - Optional interrupt on trigger event with configurable service request provider and priority
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    61   *   - Configurable trigger point
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    62   *   - Configurable trigger edge
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    63   *   - trigger signal can be internal only or forwarded to a port pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    64   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    65  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    66  #ifndef IFXSTDIF_TIMER_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    67  #define IFXSTDIF_TIMER_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    68  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    69  #include "Cpu/Std/Ifx_Types.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    70  #include "Src/Std/IfxSrc.h"     
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    71  #include "Port/Std/IfxPort.h"   
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    72  #include "IfxStdIf.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    73  /** \brief Output event enable / disable */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    74  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    75  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    76      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    77      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    78                                                    *          the output is set to active between time 0 to the trigger point,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    79                                                    *          and is set to inactive between the trigger point and the period.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    81                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    82                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    83                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    84                                                    */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    85  } IfxStdIf_Timer_OutputEvent;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    86  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    87  /** \brief Timer increment direction */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    88  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    89  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    90      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    91      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    92      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    93  } IfxStdIf_Timer_CountDir;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    94  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    95  /** \brief Forward declaration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    96  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    97  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    98  /** \brief Return the timer frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    99   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   100   * \return Return the timer frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   101   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   102  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   103  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   104  /** \brief Return the timer period in ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   105   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   106   * \return Return the timer period in ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   107   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   108  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   109  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   110  /** \brief Return the timer resolution in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   111   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   112   * \return Return the timer resolution in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   113   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   114  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   115  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   116  /** \brief Return the timer trigger point
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   117   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   118   * \return Return the timer timer point
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   119   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   120  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   121  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   122  /** \brief Set the timer frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   123   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   124   * \param frequency Requested timer frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   125   * \retval TRUE The requested frequency could be set
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   126   * \retval FALSE The requested frequency is out of range
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   127   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   128  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   129  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   130  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   131   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   132   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   133   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   134  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   135  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   136  /** \brief Apply requested updates.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   137   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   138   * Such requested update are calls to:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   139   * - IfxStdIf_Timer_setSingleMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setTrigger()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   142   * as well as PWM generation related calls such as:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setDeadtime()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setOnTime()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setupChannels()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   147   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   148   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   149   * one timer period!!!
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   150   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   151   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   152   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   153   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   154   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   155  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   156  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   157  /** \brief Disable updates
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   158   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   159   * The following API action will not be taken in account before applyUpdate is called:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   160   * - IfxStdIf_Timer_setSingleMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_Timer_setTrigger()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   163   * as well as PWM generation related calls such as:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setDeadtime()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   165   * - IfxStdIf_PwmHl_setMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   166   * - IfxStdIf_PwmHl_setOnTime()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   167   * - IfxStdIf_PwmHl_setupChannels()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   168   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   169   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   170   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   171   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   172  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   173  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   174  /** \brief Return the timer input frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   175   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   176   * \return Return the timer input frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   177   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   178  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   179  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   180  /** \brief Immediately start the timer.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   181   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   182   * Please note that other mechanism may avoid the timer to tick, such as when the
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   183   * global (input) clock to the timer block is inactive.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   184   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   185   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   186   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   187  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   188  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   189  /** \brief Set the timer period.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   190   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   191   * Timer_applyUpdate() shall be invoked in order this to take effect.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   192   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   193   * \param period Period value in ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   194   * \retval TRUE The requested period could be set
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   195   * \retval FALSE The requested period is out of range
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   196   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   197  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   198  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   199  /** \brief Stop timer at the end of the period
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   200   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   201   * Timer_applyUpdate() shall be invoked in order this to take effect.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   202   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   203   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   204   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   205   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   206  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   207  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   208  /** \brief Set trigger point.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   209   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   210   * \see Timer_OutputEvent for the definition of the output level.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   211   * Active state is defined by Timer_Config::outputActiveState.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   212   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   213   * Timer_applyUpdate() shall be invoked in order this to take effect.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   214   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   215   * \param triggerPoint Trigger point in ticks from the period start.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   216   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   217   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   218  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   219  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   220  /** \brief Immediately stops the timer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   221   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   222   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   223   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   224  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   225  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   226  /** \brief Return the timer interrupt flag and reset it
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   227   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   228   * \return Return the timer interrupt flag
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   229   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   230  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   231  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   232  /** \brief Return the trigger interrupt flag and reset it
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   233   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   234   * \return Return the trigger interrupt flag
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   235   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   236  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   237  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   238  /** \brief Standard interface object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   239   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   240  struct IfxStdIf_Timer_
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   241  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   256      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   257      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   258      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   259  };
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   260  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   261  /** \brief Trigger configuration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   262  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   263  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   264      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   265      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   266      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   267      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   268      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   269      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   270      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   271      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   272  } IfxStdIf_Timer_TrigConfig;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   273  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   274  /** \brief Timer configuration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   275  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   276  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   277      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   278      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   279      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   280      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   281      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   282      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   283      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   284  } IfxStdIf_Timer_Config;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   285  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   286  /** \addtogroup library_srvsw_stdif_timer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   287   *  \{
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   288   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   289  /** \copydoc IfxStdIf_Timer_GetFrequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   290   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   291   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   292  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   293  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   294      return stdIf->getFrequency(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   295  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   296  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   297  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   298  /** \copydoc IfxStdIf_Timer_GetPeriod
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   299   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   300   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   301  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   302  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   303      return stdIf->getPeriod(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   304  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   305  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   306  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   307  /** \copydoc IfxStdIf_Timer_GetTrigger
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   308   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   309   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   310  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   311  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   312      return stdIf->getTrigger(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   313  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   314  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   315  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   316  /** \copydoc IfxStdIf_Timer_GetResolution
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   317   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   318   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   320  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   321      return stdIf->getResolution(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   322  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   323  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   324  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_SetFrequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   326   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   327   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   328  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   329  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   330      return stdIf->setFrequency(stdIf->driver, frequency);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   331  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   332  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   333  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   334  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   335   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   336   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   337  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   338  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   339      stdIf->updateInputFrequency(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   340  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   341  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   342  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   343  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   344   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   345   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   346  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   347  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   348      stdIf->applyUpdate(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   349  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   350  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   351  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   352  /** \copydoc IfxStdIf_Timer_DisableUpdate
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   353   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   354   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   355  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   356  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   357      stdIf->disableUpdate(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   358  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   359  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   360  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   361  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   362   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   363   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   364  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   365  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   366      return stdIf->getInputFrequency(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   367  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   368  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   369  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   370  /** \copydoc IfxStdIf_Timer_Run
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   371   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   372   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   373  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   374  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   375      stdIf->run(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   376  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   377  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   378  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   379  /** \copydoc IfxStdIf_Timer_SetPeriod
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   380   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   381   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   382  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   383  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   384      return stdIf->setPeriod(stdIf->driver, period);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   385  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   386  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   387  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   388  /** \copydoc IfxStdIf_Timer_SetSingleMode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   389   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   390   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   391  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   392  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   393      stdIf->setSingleMode(stdIf->driver, enabled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   394  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   395  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   397  /** \copydoc IfxStdIf_Timer_SetTrigger
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   398   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   399   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   400  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   401  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   402      stdIf->setTrigger(stdIf->driver, triggerPoint);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   403  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   404  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   405  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   406  /** \copydoc IfxStdIf_Timer_Stop
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   407   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   408   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   409  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   410  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   411      stdIf->stop(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   412  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   413  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   414  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   415  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   416   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   417   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   418  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   419  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   420      return stdIf->ackTimerIrq(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   421  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   422  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   423  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   424  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   425   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   426   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   427  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   428  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   429      return stdIf->ackTriggerIrq(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   430  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   431  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   432  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   433  /** \brief Convert timer ticks to seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   434   * \param  clockFreq Timer clock frequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   435   * \param  ticks time value in ticks to be converted
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   436   * \return Return the converted time in s
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   437   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   438  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   439  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   440      return ticks / clockFreq;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   441  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   442  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   443  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   444  /** \brief Convert seconds to timer ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   445   * \param  clockFreq Timer clock frequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   446   * \param  seconds time value in seconds to be converted
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   447   * \return Return the converted time in timer ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   448   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   449  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_sToTick(float32 clockFreq, float32 seconds)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   450  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   451      return seconds * clockFreq;
	mul.f	d15,d15,d0
	ftouz	d15,d15
.L1059:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   451      return seconds * clockFreq;      (inlined)
	j	.L100

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   452  }      (inlined)
.L100:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   606             x = 0;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   607          }
	ld.bu	d0,[a15]16
.L1060:
	jeq	d0,#0,.L101
.L1061:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   608          else if ((x > driver->base.maxPulse) || (o + x > period))
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   609          {
	sub	d5,d8,d5
.L1062:
	j	.L102
.L101:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   610              x = period;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   611          }
.L102:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   612          else
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   613          {}
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   614  
	ld.w	d0,[a15]4
.L1063:
	jlt.u	d5,d0,.L103
.L1064:
	jge.u	d8,d15,.L104
.L103:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   615          /* Special handling due to GTM issue */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   616          if (x == period)
	mov	d5,#0
.L1065:
	j	.L105
.L104:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   617          {   /* 100% duty cycle */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   618              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccxTemp[channelIndex],
	ld.w	d0,[a15]8
.L1066:
	jlt.u	d0,d5,.L106
.L1067:
	add	d0,d15,d5
.L1068:
	jge.u	d8,d0,.L107
.L106:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   619                  period + 1 /* No compare event */,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   620                  2 /* 1st compare event (issue: expected to be 1)*/);
	mov	d5,d8
.L1069:
	j	.L108
.L107:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   621          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   622          else if (x == 0)
.L108:
.L105:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   623          {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   624              cm0 = 1;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   625              cm1 = period + 2;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   626              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccxTemp[channelIndex], cm0, cm1);
	jne	d5,d8,.L109
.L1070:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   627          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   628          else
	ld.a	a4,[a15]36
.L1071:
	ld.a	a2,[a15]52
.L1072:
	addsc.a	a2,a2,d9,#0
	ld.b	d4,[a2]0
.L1073:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   629          {                /* x% duty cycle */
	add	d5,d8,#1
.L599:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   630              cm1 = 2 + o; // CM1, set to 2 due to a GTM issue. should be 1 according to spec
	mov	d6,#2
	call	IfxGtm_Tom_Ch_setCompareShadow
.L1074:
	j	.L110
.L109:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   631              cm0 = o + x; // CM0, set to x+2 due to a GTM issue. should be x+1 according to spec
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   632              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccxTemp[channelIndex], cm0, cm1);
	jne	d5,#0,.L111
.L1075:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   633          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   634      }
	mov	d5,#1
.L600:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   635  
	add	d6,d8,#2
.L602:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   636      /* Bottom channels */
	ld.a	a4,[a15]36
.L1076:
	ld.a	a2,[a15]52
.L1077:
	addsc.a	a2,a2,d9,#0
	ld.b	d4,[a2]0
.L1078:
	call	IfxGtm_Tom_Ch_setCompareShadow
.L601:
	j	.L112
.L111:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   637      for (channelIndex = 0; channelIndex < driver->base.channelCount; channelIndex++)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   638      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   639          Ifx_TimerValue x; /* x=period*dutyCycle, x=OnTime+deadTime */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   640          Ifx_TimerValue o;
	add	d6,d15,#2
.L604:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   641          Ifx_TimerValue cm0, cm1;
	add	d5,d15
.L603:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   642  
	ld.a	a4,[a15]36
.L1079:
	ld.a	a2,[a15]52
.L1080:
	addsc.a	a2,a2,d9,#0
	ld.b	d4,[a2]0
.L1081:
	call	IfxGtm_Tom_Ch_setCompareShadow
.L112:
.L110:
	add	d9,#1
.L597:
	extr.u	d9,d9,#0,#8
.L97:
	ld.bu	d15,[a15]17
.L1082:
	jlt.u	d9,d15,.L98
.L1083:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   643          x = IfxStdIf_Timer_sToTick(driver->timer->base.clockFreq, tOn[channelIndex + driver->base.channelCount]);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   644          o = IfxStdIf_Timer_sToTick(driver->timer->base.clockFreq, offset[channelIndex + driver->base.channelCount]);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   645  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   646          if (driver->base.inverted != FALSE)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   647          {
	mov	d9,#0
.L1084:
	j	.L113
.L114:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   648              x = period - x;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   649          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   650          else
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   651          {}
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   652  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   653          if (x < driver->base.minPulse)
	ld.a	a2,[a15]20
.L1085:
	ld.w	d1,[a2]6
.L1086:
	ld.bu	d0,[a15]17
.L1087:
	add	d0,d9
.L1088:
	mul	d15,d0,#4
	addsc.a	a2,a12,d15,#0
	ld.w	d0,[a2]
.L471:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    45   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    46   * \ingroup library_srvsw_stdif
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    47   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    48   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    49   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    50   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    51   * The figure below shows the standard timer interface.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    52   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    53   * \image html "Timer.png" "Standard timer interface"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    54   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    55   * This interface defines the following features:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    56   * - Timer with configurable frequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    57   * - Configurable counting direction
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    58   * - Optional interrupt on timer event with configurable service request provider and priority
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    59   * - Optional trigger signal with:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    60   *   - Optional interrupt on trigger event with configurable service request provider and priority
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    61   *   - Configurable trigger point
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    62   *   - Configurable trigger edge
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    63   *   - trigger signal can be internal only or forwarded to a port pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    64   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    65  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    66  #ifndef IFXSTDIF_TIMER_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    67  #define IFXSTDIF_TIMER_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    68  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    69  #include "Cpu/Std/Ifx_Types.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    70  #include "Src/Std/IfxSrc.h"     
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    71  #include "Port/Std/IfxPort.h"   
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    72  #include "IfxStdIf.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    73  /** \brief Output event enable / disable */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    74  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    75  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    76      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    77      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    78                                                    *          the output is set to active between time 0 to the trigger point,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    79                                                    *          and is set to inactive between the trigger point and the period.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    81                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    82                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    83                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    84                                                    */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    85  } IfxStdIf_Timer_OutputEvent;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    86  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    87  /** \brief Timer increment direction */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    88  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    89  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    90      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    91      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    92      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    93  } IfxStdIf_Timer_CountDir;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    94  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    95  /** \brief Forward declaration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    96  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    97  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    98  /** \brief Return the timer frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    99   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   100   * \return Return the timer frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   101   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   102  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   103  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   104  /** \brief Return the timer period in ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   105   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   106   * \return Return the timer period in ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   107   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   108  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   109  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   110  /** \brief Return the timer resolution in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   111   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   112   * \return Return the timer resolution in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   113   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   114  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   115  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   116  /** \brief Return the timer trigger point
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   117   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   118   * \return Return the timer timer point
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   119   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   120  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   121  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   122  /** \brief Set the timer frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   123   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   124   * \param frequency Requested timer frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   125   * \retval TRUE The requested frequency could be set
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   126   * \retval FALSE The requested frequency is out of range
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   127   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   128  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   129  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   130  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   131   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   132   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   133   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   134  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   135  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   136  /** \brief Apply requested updates.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   137   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   138   * Such requested update are calls to:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   139   * - IfxStdIf_Timer_setSingleMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setTrigger()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   142   * as well as PWM generation related calls such as:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setDeadtime()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setOnTime()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setupChannels()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   147   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   148   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   149   * one timer period!!!
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   150   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   151   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   152   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   153   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   154   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   155  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   156  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   157  /** \brief Disable updates
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   158   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   159   * The following API action will not be taken in account before applyUpdate is called:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   160   * - IfxStdIf_Timer_setSingleMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_Timer_setTrigger()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   163   * as well as PWM generation related calls such as:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setDeadtime()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   165   * - IfxStdIf_PwmHl_setMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   166   * - IfxStdIf_PwmHl_setOnTime()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   167   * - IfxStdIf_PwmHl_setupChannels()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   168   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   169   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   170   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   171   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   172  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   173  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   174  /** \brief Return the timer input frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   175   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   176   * \return Return the timer input frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   177   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   178  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   179  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   180  /** \brief Immediately start the timer.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   181   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   182   * Please note that other mechanism may avoid the timer to tick, such as when the
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   183   * global (input) clock to the timer block is inactive.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   184   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   185   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   186   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   187  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   188  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   189  /** \brief Set the timer period.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   190   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   191   * Timer_applyUpdate() shall be invoked in order this to take effect.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   192   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   193   * \param period Period value in ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   194   * \retval TRUE The requested period could be set
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   195   * \retval FALSE The requested period is out of range
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   196   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   197  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   198  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   199  /** \brief Stop timer at the end of the period
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   200   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   201   * Timer_applyUpdate() shall be invoked in order this to take effect.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   202   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   203   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   204   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   205   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   206  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   207  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   208  /** \brief Set trigger point.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   209   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   210   * \see Timer_OutputEvent for the definition of the output level.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   211   * Active state is defined by Timer_Config::outputActiveState.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   212   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   213   * Timer_applyUpdate() shall be invoked in order this to take effect.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   214   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   215   * \param triggerPoint Trigger point in ticks from the period start.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   216   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   217   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   218  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   219  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   220  /** \brief Immediately stops the timer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   221   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   222   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   223   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   224  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   225  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   226  /** \brief Return the timer interrupt flag and reset it
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   227   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   228   * \return Return the timer interrupt flag
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   229   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   230  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   231  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   232  /** \brief Return the trigger interrupt flag and reset it
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   233   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   234   * \return Return the trigger interrupt flag
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   235   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   236  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   237  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   238  /** \brief Standard interface object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   239   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   240  struct IfxStdIf_Timer_
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   241  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   256      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   257      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   258      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   259  };
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   260  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   261  /** \brief Trigger configuration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   262  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   263  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   264      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   265      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   266      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   267      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   268      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   269      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   270      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   271      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   272  } IfxStdIf_Timer_TrigConfig;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   273  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   274  /** \brief Timer configuration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   275  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   276  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   277      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   278      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   279      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   280      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   281      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   282      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   283      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   284  } IfxStdIf_Timer_Config;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   285  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   286  /** \addtogroup library_srvsw_stdif_timer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   287   *  \{
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   288   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   289  /** \copydoc IfxStdIf_Timer_GetFrequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   290   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   291   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   292  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   293  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   294      return stdIf->getFrequency(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   295  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   296  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   297  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   298  /** \copydoc IfxStdIf_Timer_GetPeriod
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   299   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   300   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   301  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   302  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   303      return stdIf->getPeriod(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   304  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   305  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   306  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   307  /** \copydoc IfxStdIf_Timer_GetTrigger
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   308   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   309   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   310  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   311  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   312      return stdIf->getTrigger(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   313  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   314  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   315  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   316  /** \copydoc IfxStdIf_Timer_GetResolution
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   317   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   318   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   320  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   321      return stdIf->getResolution(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   322  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   323  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   324  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_SetFrequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   326   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   327   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   328  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   329  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   330      return stdIf->setFrequency(stdIf->driver, frequency);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   331  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   332  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   333  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   334  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   335   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   336   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   337  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   338  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   339      stdIf->updateInputFrequency(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   340  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   341  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   342  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   343  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   344   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   345   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   346  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   347  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   348      stdIf->applyUpdate(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   349  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   350  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   351  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   352  /** \copydoc IfxStdIf_Timer_DisableUpdate
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   353   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   354   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   355  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   356  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   357      stdIf->disableUpdate(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   358  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   359  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   360  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   361  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   362   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   363   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   364  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   365  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   366      return stdIf->getInputFrequency(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   367  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   368  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   369  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   370  /** \copydoc IfxStdIf_Timer_Run
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   371   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   372   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   373  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   374  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   375      stdIf->run(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   376  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   377  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   378  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   379  /** \copydoc IfxStdIf_Timer_SetPeriod
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   380   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   381   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   382  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   383  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   384      return stdIf->setPeriod(stdIf->driver, period);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   385  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   386  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   387  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   388  /** \copydoc IfxStdIf_Timer_SetSingleMode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   389   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   390   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   391  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   392  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   393      stdIf->setSingleMode(stdIf->driver, enabled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   394  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   395  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   397  /** \copydoc IfxStdIf_Timer_SetTrigger
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   398   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   399   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   400  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   401  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   402      stdIf->setTrigger(stdIf->driver, triggerPoint);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   403  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   404  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   405  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   406  /** \copydoc IfxStdIf_Timer_Stop
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   407   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   408   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   409  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   410  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   411      stdIf->stop(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   412  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   413  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   414  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   415  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   416   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   417   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   418  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   419  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   420      return stdIf->ackTimerIrq(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   421  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   422  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   423  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   424  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   425   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   426   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   427  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   428  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   429      return stdIf->ackTriggerIrq(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   430  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   431  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   432  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   433  /** \brief Convert timer ticks to seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   434   * \param  clockFreq Timer clock frequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   435   * \param  ticks time value in ticks to be converted
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   436   * \return Return the converted time in s
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   437   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   438  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   439  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   440      return ticks / clockFreq;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   441  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   442  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   443  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   444  /** \brief Convert seconds to timer ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   445   * \param  clockFreq Timer clock frequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   446   * \param  seconds time value in seconds to be converted
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   447   * \return Return the converted time in timer ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   448   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   449  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_sToTick(float32 clockFreq, float32 seconds)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   450  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   451      return seconds * clockFreq;
	mul.f	d0,d0,d1
	ftouz	d5,d0
.L606:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   451      return seconds * clockFreq;      (inlined)
	j	.L115

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   452  }      (inlined)
.L115:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   654  lse if (x > driver->base.maxPulse)
	ld.a	a2,[a15]20
.L1089:
	ld.w	d0,[a2]6
.L1090:
	ld.bu	d15,[a15]17
.L1091:
	add	d15,d9
.L1092:
	mul	d15,d15,#4
	addsc.a	a2,a13,d15,#0
	ld.w	d15,[a2]
.L472:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    45   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    46   * \ingroup library_srvsw_stdif
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    47   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    48   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    49   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    50   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    51   * The figure below shows the standard timer interface.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    52   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    53   * \image html "Timer.png" "Standard timer interface"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    54   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    55   * This interface defines the following features:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    56   * - Timer with configurable frequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    57   * - Configurable counting direction
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    58   * - Optional interrupt on timer event with configurable service request provider and priority
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    59   * - Optional trigger signal with:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    60   *   - Optional interrupt on trigger event with configurable service request provider and priority
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    61   *   - Configurable trigger point
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    62   *   - Configurable trigger edge
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    63   *   - trigger signal can be internal only or forwarded to a port pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    64   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    65  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    66  #ifndef IFXSTDIF_TIMER_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    67  #define IFXSTDIF_TIMER_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    68  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    69  #include "Cpu/Std/Ifx_Types.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    70  #include "Src/Std/IfxSrc.h"     
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    71  #include "Port/Std/IfxPort.h"   
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    72  #include "IfxStdIf.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    73  /** \brief Output event enable / disable */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    74  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    75  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    76      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    77      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    78                                                    *          the output is set to active between time 0 to the trigger point,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    79                                                    *          and is set to inactive between the trigger point and the period.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    81                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    82                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    83                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    84                                                    */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    85  } IfxStdIf_Timer_OutputEvent;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    86  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    87  /** \brief Timer increment direction */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    88  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    89  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    90      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    91      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    92      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    93  } IfxStdIf_Timer_CountDir;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    94  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    95  /** \brief Forward declaration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    96  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    97  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    98  /** \brief Return the timer frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    99   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   100   * \return Return the timer frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   101   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   102  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   103  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   104  /** \brief Return the timer period in ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   105   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   106   * \return Return the timer period in ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   107   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   108  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   109  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   110  /** \brief Return the timer resolution in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   111   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   112   * \return Return the timer resolution in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   113   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   114  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   115  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   116  /** \brief Return the timer trigger point
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   117   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   118   * \return Return the timer timer point
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   119   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   120  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   121  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   122  /** \brief Set the timer frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   123   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   124   * \param frequency Requested timer frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   125   * \retval TRUE The requested frequency could be set
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   126   * \retval FALSE The requested frequency is out of range
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   127   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   128  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   129  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   130  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   131   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   132   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   133   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   134  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   135  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   136  /** \brief Apply requested updates.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   137   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   138   * Such requested update are calls to:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   139   * - IfxStdIf_Timer_setSingleMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setTrigger()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   142   * as well as PWM generation related calls such as:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setDeadtime()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setOnTime()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setupChannels()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   147   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   148   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   149   * one timer period!!!
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   150   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   151   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   152   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   153   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   154   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   155  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   156  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   157  /** \brief Disable updates
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   158   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   159   * The following API action will not be taken in account before applyUpdate is called:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   160   * - IfxStdIf_Timer_setSingleMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_Timer_setTrigger()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   163   * as well as PWM generation related calls such as:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setDeadtime()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   165   * - IfxStdIf_PwmHl_setMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   166   * - IfxStdIf_PwmHl_setOnTime()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   167   * - IfxStdIf_PwmHl_setupChannels()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   168   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   169   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   170   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   171   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   172  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   173  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   174  /** \brief Return the timer input frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   175   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   176   * \return Return the timer input frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   177   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   178  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   179  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   180  /** \brief Immediately start the timer.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   181   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   182   * Please note that other mechanism may avoid the timer to tick, such as when the
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   183   * global (input) clock to the timer block is inactive.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   184   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   185   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   186   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   187  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   188  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   189  /** \brief Set the timer period.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   190   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   191   * Timer_applyUpdate() shall be invoked in order this to take effect.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   192   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   193   * \param period Period value in ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   194   * \retval TRUE The requested period could be set
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   195   * \retval FALSE The requested period is out of range
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   196   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   197  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   198  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   199  /** \brief Stop timer at the end of the period
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   200   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   201   * Timer_applyUpdate() shall be invoked in order this to take effect.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   202   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   203   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   204   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   205   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   206  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   207  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   208  /** \brief Set trigger point.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   209   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   210   * \see Timer_OutputEvent for the definition of the output level.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   211   * Active state is defined by Timer_Config::outputActiveState.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   212   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   213   * Timer_applyUpdate() shall be invoked in order this to take effect.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   214   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   215   * \param triggerPoint Trigger point in ticks from the period start.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   216   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   217   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   218  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   219  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   220  /** \brief Immediately stops the timer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   221   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   222   * \return none
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   223   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   224  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   225  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   226  /** \brief Return the timer interrupt flag and reset it
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   227   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   228   * \return Return the timer interrupt flag
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   229   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   230  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   231  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   232  /** \brief Return the trigger interrupt flag and reset it
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   233   * \param stdIf Pointer to the interface driver object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   234   * \return Return the trigger interrupt flag
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   235   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   236  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   237  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   238  /** \brief Standard interface object
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   239   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   240  struct IfxStdIf_Timer_
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   241  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   256      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   257      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   258      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   259  };
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   260  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   261  /** \brief Trigger configuration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   262  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   263  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   264      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   265      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   266      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   267      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   268      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   269      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   270      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   271      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   272  } IfxStdIf_Timer_TrigConfig;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   273  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   274  /** \brief Timer configuration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   275  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   276  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   277      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   278      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   279      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   280      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   281      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   282      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   283      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   284  } IfxStdIf_Timer_Config;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   285  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   286  /** \addtogroup library_srvsw_stdif_timer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   287   *  \{
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   288   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   289  /** \copydoc IfxStdIf_Timer_GetFrequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   290   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   291   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   292  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   293  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   294      return stdIf->getFrequency(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   295  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   296  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   297  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   298  /** \copydoc IfxStdIf_Timer_GetPeriod
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   299   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   300   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   301  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   302  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   303      return stdIf->getPeriod(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   304  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   305  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   306  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   307  /** \copydoc IfxStdIf_Timer_GetTrigger
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   308   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   309   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   310  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   311  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   312      return stdIf->getTrigger(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   313  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   314  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   315  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   316  /** \copydoc IfxStdIf_Timer_GetResolution
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   317   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   318   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   320  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   321      return stdIf->getResolution(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   322  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   323  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   324  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_SetFrequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   326   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   327   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   328  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   329  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   330      return stdIf->setFrequency(stdIf->driver, frequency);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   331  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   332  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   333  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   334  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   335   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   336   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   337  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   338  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   339      stdIf->updateInputFrequency(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   340  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   341  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   342  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   343  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   344   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   345   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   346  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   347  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   348      stdIf->applyUpdate(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   349  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   350  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   351  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   352  /** \copydoc IfxStdIf_Timer_DisableUpdate
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   353   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   354   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   355  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   356  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   357      stdIf->disableUpdate(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   358  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   359  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   360  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   361  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   362   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   363   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   364  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   365  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   366      return stdIf->getInputFrequency(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   367  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   368  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   369  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   370  /** \copydoc IfxStdIf_Timer_Run
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   371   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   372   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   373  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   374  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   375      stdIf->run(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   376  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   377  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   378  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   379  /** \copydoc IfxStdIf_Timer_SetPeriod
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   380   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   381   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   382  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   383  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   384      return stdIf->setPeriod(stdIf->driver, period);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   385  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   386  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   387  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   388  /** \copydoc IfxStdIf_Timer_SetSingleMode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   389   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   390   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   391  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   392  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   393      stdIf->setSingleMode(stdIf->driver, enabled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   394  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   395  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   397  /** \copydoc IfxStdIf_Timer_SetTrigger
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   398   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   399   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   400  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   401  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   402      stdIf->setTrigger(stdIf->driver, triggerPoint);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   403  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   404  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   405  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   406  /** \copydoc IfxStdIf_Timer_Stop
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   407   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   408   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   409  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   410  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   411      stdIf->stop(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   412  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   413  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   414  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   415  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   416   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   417   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   418  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   419  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   420      return stdIf->ackTimerIrq(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   421  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   422  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   423  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   424  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   425   * \param stdIf Standard interface pointer
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   426   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   427  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   428  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   429      return stdIf->ackTriggerIrq(stdIf->driver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   430  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   431  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   432  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   433  /** \brief Convert timer ticks to seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   434   * \param  clockFreq Timer clock frequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   435   * \param  ticks time value in ticks to be converted
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   436   * \return Return the converted time in s
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   437   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   438  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   439  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   440      return ticks / clockFreq;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   441  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   442  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   443  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   444  /** \brief Convert seconds to timer ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   445   * \param  clockFreq Timer clock frequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   446   * \param  seconds time value in seconds to be converted
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   447   * \return Return the converted time in timer ticks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   448   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   449  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_sToTick(float32 clockFreq, float32 seconds)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   450  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   451      return seconds * clockFreq;
	mul.f	d15,d15,d0
	ftouz	d0,d15
.L1093:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   451      return seconds * clockFreq;      (inlined)
	j	.L116

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   452  }      (inlined)
.L116:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   655   driver->base.minPulse)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   656          {
	ld.bu	d15,[a15]16
.L1094:
	jeq	d15,#0,.L117
.L1095:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   657              x = 0;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   658          }
	sub	d5,d8,d5
.L1096:
	j	.L118
.L117:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   659          else if (x > driver->base.maxPulse)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   660          {
.L118:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   661              x = period;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   662          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   663          else
	ld.w	d15,[a15]4
.L1097:
	jge.u	d5,d15,.L119
.L1098:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   664          {}
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   665  
	mov	d5,#0
.L1099:
	j	.L120
.L119:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   666          /* Special handling due to GTM issue */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   667          if (x == period)
	ld.w	d15,[a15]8
.L1100:
	jge.u	d15,d5,.L121
.L1101:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   668          {   /* 100% duty cycle */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   669              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->coutxTemp[channelIndex],
	mov	d5,d8
.L1102:
	j	.L122
.L121:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   670                  period + 2 /* No compare event, issues has been seen with +1 */,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   671                  2 /* 1st compare event (issue: expected to be 1)*/);
.L122:
.L120:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   672          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   673          else if (x == 0)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   674          {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   675              cm0 = 1;
	jne	d5,d8,.L123
.L1103:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   676              cm1 = period + 2;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   677              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->coutxTemp[channelIndex], cm0, cm1);
	ld.a	a4,[a15]36
.L1104:
	ld.a	a2,[a15]56
.L1105:
	addsc.a	a2,a2,d9,#0
	ld.b	d4,[a2]0
.L1106:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   678          }
	add	d5,d8,#2
.L607:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   679          else
	mov	d6,#2
	call	IfxGtm_Tom_Ch_setCompareShadow
.L1107:
	j	.L124
.L123:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   680          {                /* x% duty cycle */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   681              cm1 = 2 + o; // CM1, set to 2 due to a GTM issue. should be 1 according to spec
	jne	d5,#0,.L125
.L1108:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   682              cm0 = o + x; // CM0, set to x+2 due to a GTM issue. should be x+1 according to spec
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   683              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->coutxTemp[channelIndex], cm0, cm1);
	mov	d5,#1
.L608:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   684          }
	add	d6,d8,#2
.L610:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   685      }
	ld.a	a4,[a15]36
.L1109:
	ld.a	a2,[a15]56
.L1110:
	addsc.a	a2,a2,d9,#0
	ld.b	d4,[a2]0
.L1111:
	call	IfxGtm_Tom_Ch_setCompareShadow
.L609:
	j	.L126
.L125:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   686  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   687  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   688  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   689  IFX_STATIC void IfxGtm_Tom_PwmHl_updatePulseOff(IfxGtm_Tom_PwmHl *driver, float32 *tOn, float32 *offset)
	add	d6,d0,#2
.L612:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   690  {
	add	d5,d0
.L611:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   691      IFX_UNUSED_PARAMETER(tOn)
	ld.a	a4,[a15]36
.L1112:
	ld.a	a2,[a15]56
.L1113:
	addsc.a	a2,a2,d9,#0
	ld.b	d4,[a2]0
.L1114:
	call	IfxGtm_Tom_Ch_setCompareShadow
.L126:
.L124:
	add	d9,#1
.L605:
	extr.u	d9,d9,#0,#8
.L113:
	ld.bu	d15,[a15]17
.L1115:
	jlt.u	d9,d15,.L114
.L1116:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   692      IFX_UNUSED_PARAMETER(offset)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   693      IfxGtm_Tom_PwmHl_updateOff(driver, NULL_PTR);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   694  }
	ret
.L453:
	
__IfxGtm_Tom_PwmHl_updatePulse_function_end:
	.size	IfxGtm_Tom_PwmHl_updatePulse,__IfxGtm_Tom_PwmHl_updatePulse_function_end-IfxGtm_Tom_PwmHl_updatePulse
.L281:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_updatePulseOff',code,cluster('IfxGtm_Tom_PwmHl_updatePulseOff')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_updatePulseOff'
	.align	2
	

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   695  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   696  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   697  IFX_STATIC void IfxGtm_Tom_PwmHl_updateShiftCenterAligned(IfxGtm_Tom_PwmHl *driver, Ifx_TimerValue *tOn, Ifx_TimerValue *shift)
; Function IfxGtm_Tom_PwmHl_updatePulseOff
.L185:
IfxGtm_Tom_PwmHl_updatePulseOff:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   698  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   699      uint8          channelIndex;
	jz.a	a5,.L127
.L127:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   700      Ifx_TimerValue period;
	jz.a	a6,.L128
.L128:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   701      Ifx_TimerValue deadtime = driver->base.deadtime;
	mov.a	a5,#0
.L614:
	call	IfxGtm_Tom_PwmHl_updateOff
.L613:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   702  
	ret
.L473:
	
__IfxGtm_Tom_PwmHl_updatePulseOff_function_end:
	.size	IfxGtm_Tom_PwmHl_updatePulseOff,__IfxGtm_Tom_PwmHl_updatePulseOff_function_end-IfxGtm_Tom_PwmHl_updatePulseOff
.L286:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_updateShiftCenterAligned',code,cluster('IfxGtm_Tom_PwmHl_updateShiftCenterAligned')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_updateShiftCenterAligned'
	.align	2
	

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   703      period = driver->timer->base.period;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   704  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   705      for (channelIndex = 0; channelIndex < driver->base.channelCount; channelIndex++)
; Function IfxGtm_Tom_PwmHl_updateShiftCenterAligned
.L187:
IfxGtm_Tom_PwmHl_updateShiftCenterAligned:	.type	func
	mov.aa	a15,a4
.L615:
	mov.aa	a12,a5
.L616:
	mov.aa	a13,a6
.L617:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   706      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   707          Ifx_TimerValue x; /* x=period*dutyCycle, x=OnTime+deadTime */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   708          Ifx_TimerValue s; /* Shift value */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   709          Ifx_TimerValue cm0, cm1;
	ld.w	d8,[a15]
.L618:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   710          x = tOn[channelIndex];
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   711  
	ld.a	a2,[a15]20
.L1125:
	ld.w	d9,[a2]
.L619:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   712          if (driver->base.inverted != FALSE)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   713          {
	mov	d10,#0
.L620:
	j	.L129
.L130:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   714              x = period - x;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   715          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   716          else
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   717          {}
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   718  
	mul	d15,d10,#4
	addsc.a	a2,a12,d15,#0
	ld.w	d2,[a2]
.L622:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   719          if ((x < driver->base.minPulse) || (x <= deadtime))
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   720          {   /* For deadtime condition: avoid leading edge of top channel to occur after the trailing edge */
	ld.bu	d15,[a15]16
.L1126:
	jeq	d15,#0,.L131
.L1127:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   721              x = 0;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   722          }
	sub	d2,d9,d2
.L1128:
	j	.L132
.L131:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   723          else if (x > driver->base.maxPulse)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   724          {
.L132:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   725              x = period;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   726          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   727          else
	ld.w	d15,[a15]4
.L1129:
	jlt.u	d2,d15,.L133
.L1130:
	jlt.u	d8,d2,.L134
.L133:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   728          {}
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   729  
	mov	d2,#0
.L1131:
	j	.L135
.L134:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   730          /* Special handling due to GTM issue */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   731          if (x == period)
	ld.w	d15,[a15]8
.L1132:
	jge.u	d15,d2,.L136
.L1133:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   732          {   /* 100% duty cycle */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   733              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccxTemp[channelIndex],
	mov	d2,d9
.L1134:
	j	.L137
.L136:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   734                  period + 1 /* No compare event */,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   735                  2 /* 1st compare event (issue: expected to be 1)*/ + deadtime);
.L137:
.L135:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   736              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->coutxTemp[channelIndex],
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   737                  period + 2 /* No compare event, issues has been seen with +1 */,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   738                  2 /* 1st compare event (issue: expected to be 1)*/);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   739          }
	jne	d2,d9,.L138
.L1135:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   740          else if (x == 0)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   741          {
	ld.a	a4,[a15]36
.L1136:
	ld.a	a2,[a15]52
.L1137:
	addsc.a	a2,a2,d10,#0
	ld.b	d4,[a2]0
.L1138:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   742              cm0 = 1;
	add	d5,d9,#1
.L1139:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   743              cm1 = period + 2;
	add	d6,d8,#2
	call	IfxGtm_Tom_Ch_setCompareShadow
.L623:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   744              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccxTemp[channelIndex], cm0, cm1);
	ld.a	a4,[a15]36
.L1140:
	ld.a	a2,[a15]56
.L1141:
	addsc.a	a2,a2,d10,#0
	ld.b	d4,[a2]0
.L1142:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   745              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->coutxTemp[channelIndex], cm0 + deadtime, cm1);
	add	d5,d9,#2
.L1143:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   746          }
	mov	d6,#2
	call	IfxGtm_Tom_Ch_setCompareShadow
.L1144:
	j	.L139
.L138:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   747          else
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   748          {                           /* x% duty cycle */
	jne	d2,#0,.L140
.L1145:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   749              s = shift[channelIndex];
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   750  
	mov	d15,#1
.L625:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   751              if (s > 0)
	add	d11,d9,#2
.L626:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   752              {
	ld.a	a4,[a15]36
.L1146:
	ld.a	a2,[a15]52
.L1147:
	addsc.a	a2,a2,d10,#0
	ld.b	d4,[a2]0
.L1148:
	mov	d5,d15
.L627:
	mov	d6,d11
.L628:
	call	IfxGtm_Tom_Ch_setCompareShadow
.L624:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   753                  s = __minX(s, (period - x) / 2 - 1);
	ld.a	a4,[a15]36
.L1149:
	ld.a	a2,[a15]56
.L1150:
	addsc.a	a2,a2,d10,#0
	ld.b	d4,[a2]0
.L1151:
	add	d5,d15,d8
.L1152:
	mov	d6,d11
.L629:
	call	IfxGtm_Tom_Ch_setCompareShadow
.L630:
	j	.L141
.L140:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   754              }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   755              else
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   756              {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   757                  s = __maxX(s, (x - period) / 2 + 1);
	mul	d15,d10,#4
	addsc.a	a2,a13,d15,#0
	ld.w	d15,[a2]
.L632:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   758              }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   759  
	jlt.u	d15,#1,.L142
.L1153:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   760              cm1 = s + (period - x) / 2; // CM1
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   761              cm0 = s + (period + x) / 2; // CM0
	sub	d0,d9,d2
	mov	d1,#0
	addih	d1,d1,#32768
	mul.u	e0,d0,d1
	add	d0,d1,#-1
	jge.u	d15,d0,.L143
	j	.L144
.L143:
	sub	d0,d9,d2
	mov	d1,#0
	addih	d1,d1,#32768
	mul.u	e0,d0,d1
	add	d15,d1,#-1
.L144:
	j	.L145
.L142:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   762              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccxTemp[channelIndex], cm0, cm1 + deadtime);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   763              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->coutxTemp[channelIndex], cm0 + deadtime, cm1);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   764          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   765      }
	sub	d0,d2,d9
	mov	d1,#0
	addih	d1,d1,#32768
	mul.u	e0,d0,d1
	add	d0,d1,#1
	jge.u	d0,d15,.L146
	j	.L147
.L146:
	sub	d15,d2,d9
.L633:
	mov	d0,#0
	addih	d0,d0,#32768
	mul.u	e0,d15,d0
	add	d15,d1,#1
.L147:
.L145:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   766  }

	sub	d0,d9,d2
.L1154:


	mov	d1,#0


	addih	d1,d1,#32768


	mul.u	e0,d0,d1
.L1155:


	add	d11,d15,d1
.L635:


	add	d2,d9
.L631:


	mov	d0,#0


	addih	d0,d0,#32768


	mul.u	e0,d2,d0
.L636:


	add	d15,d1
.L634:


	ld.a	a4,[a15]36
.L1156:


	ld.a	a2,[a15]52
.L1157:


	addsc.a	a2,a2,d10,#0


	ld.b	d4,[a2]0
.L1158:


	add	d6,d11,d8


	mov	d5,d15
.L637:


	call	IfxGtm_Tom_Ch_setCompareShadow
.L638:


	ld.a	a4,[a15]36
.L1159:


	ld.a	a2,[a15]56
.L1160:


	addsc.a	a2,a2,d10,#0


	ld.b	d4,[a2]0
.L1161:


	add	d5,d15,d8
.L1162:


	mov	d6,d11
.L639:


	call	IfxGtm_Tom_Ch_setCompareShadow
.L141:
.L139:
	add	d10,#1
.L621:
	extr.u	d10,d10,#0,#8
.L129:
	ld.bu	d15,[a15]17
.L1163:
	jlt.u	d10,d15,.L130
.L1164:


	ret
.L477:
	
__IfxGtm_Tom_PwmHl_updateShiftCenterAligned_function_end:
	.size	IfxGtm_Tom_PwmHl_updateShiftCenterAligned,__IfxGtm_Tom_PwmHl_updateShiftCenterAligned_function_end-IfxGtm_Tom_PwmHl_updateShiftCenterAligned
.L291:
	; End of function
	
	.sdecl	'.rodata.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_modes',data,rom,cluster('IfxGtm_Tom_PwmHl_modes')
	.sect	'.rodata.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_modes'
	.align	4
IfxGtm_Tom_PwmHl_modes:	.type	object
	.size	IfxGtm_Tom_PwmHl_modes,80
	.space	4
	.word	IfxGtm_Tom_PwmHl_updateCenterAligned,IfxGtm_Tom_PwmHl_updateShiftCenterAligned,IfxGtm_Tom_PwmHl_updatePulse
	.byte	1,1
	.space	2
	.word	IfxGtm_Tom_PwmHl_updateCenterAligned,IfxGtm_Tom_PwmHl_updateShiftCenterAligned,IfxGtm_Tom_PwmHl_updatePulse
	.byte	2
	.space	3
	.word	IfxGtm_Tom_PwmHl_updateEdgeAligned,IfxGtm_Tom_PwmHl_updateAndShiftOff,IfxGtm_Tom_PwmHl_updatePulse
	.byte	3,1
	.space	2
	.word	IfxGtm_Tom_PwmHl_updateEdgeAligned,IfxGtm_Tom_PwmHl_updateAndShiftOff,IfxGtm_Tom_PwmHl_updatePulse
	.byte	4
	.space	3
	.word	IfxGtm_Tom_PwmHl_updateOff,IfxGtm_Tom_PwmHl_updateAndShiftOff,IfxGtm_Tom_PwmHl_updatePulseOff
	.sdecl	'.rodata.IfxGtm_Tom_PwmHl..1.ini',data,rom
	.sect	'.rodata.IfxGtm_Tom_PwmHl..1.ini'
	.align	2
.1.ini:	.type	object
	.size	.1.ini,12
	.space	12
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_getDeadtime'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_getMinPulse'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_getMode'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_setDeadtime'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_setMinPulse'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_setMode'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_setOnTime'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_setOnTimeAndShift'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_setPulse'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_setupChannels'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_updateAndShiftOff'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_updateCenterAligned'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_updateEdgeAligned'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_updateOff'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_updatePulse'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_updatePulseOff'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_updateShiftCenterAligned'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_PwmHl_setDeadtime'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_PwmHl_setMinPulse'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Ch_getTgcPointer'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Ch_getClockSource'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Ch_setClockSource'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Ch_setSignalLevel'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Tgc_enableChannels'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Tgc_enableChannelsOutput'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Ch_setResetSource'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Ch_setTriggerOutput'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Timer_getOffset'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Ch_setCounterValue'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_PinMap_setTomTout'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_PwmHl_setMode'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_PwmHl_updateOff'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Tgc_setChannelsForceUpdate'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Tgc_trigger'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Timer_addToChannelMask'
	.calls	'IfxGtm_Tom_PwmHl_initConfig','IfxStdIf_PwmHl_initConfig'
	.calls	'IfxGtm_Tom_PwmHl_setMode','IfxGtm_Tom_Ch_setSignalLevel'
	.calls	'IfxGtm_Tom_PwmHl_setOnTime','__INDIRECT__'
	.calls	'IfxGtm_Tom_PwmHl_setOnTimeAndShift','__INDIRECT__'
	.calls	'IfxGtm_Tom_PwmHl_setPulse','__INDIRECT__'
	.calls	'IfxGtm_Tom_PwmHl_stdIfPwmHlInit','memset'
	.calls	'IfxGtm_Tom_PwmHl_stdIfPwmHlInit','IfxGtm_Tom_Timer_stdIfTimerInit'
	.calls	'IfxGtm_Tom_PwmHl_updateAndShiftOff','IfxGtm_Tom_PwmHl_updateOff'
	.calls	'IfxGtm_Tom_PwmHl_updateCenterAligned','IfxGtm_Tom_Ch_setCompareShadow'
	.calls	'IfxGtm_Tom_PwmHl_updateEdgeAligned','IfxGtm_Tom_Ch_setCompareShadow'
	.calls	'IfxGtm_Tom_PwmHl_updateOff','IfxGtm_Tom_Ch_setCompareShadow'
	.calls	'IfxGtm_Tom_PwmHl_updatePulse','IfxGtm_Tom_Ch_setCompareShadow'
	.calls	'IfxGtm_Tom_PwmHl_updatePulseOff','IfxGtm_Tom_PwmHl_updateOff'
	.calls	'IfxGtm_Tom_PwmHl_updateShiftCenterAligned','IfxGtm_Tom_Ch_setCompareShadow'
	.calls	'IfxGtm_Tom_PwmHl_getDeadtime','',0
	.calls	'IfxGtm_Tom_PwmHl_getMinPulse','',0
	.calls	'IfxGtm_Tom_PwmHl_getMode','',0
	.calls	'IfxGtm_Tom_PwmHl_init','',16
	.calls	'IfxGtm_Tom_PwmHl_initConfig','',0
	.calls	'IfxGtm_Tom_PwmHl_setDeadtime','',0
	.calls	'IfxGtm_Tom_PwmHl_setMinPulse','',0
	.calls	'IfxGtm_Tom_PwmHl_setMode','',0
	.calls	'IfxGtm_Tom_PwmHl_setOnTime','',0
	.calls	'IfxGtm_Tom_PwmHl_setOnTimeAndShift','',0
	.calls	'IfxGtm_Tom_PwmHl_setPulse','',0
	.calls	'IfxGtm_Tom_PwmHl_setupChannels','',0
	.calls	'IfxGtm_Tom_PwmHl_stdIfPwmHlInit','',0
	.calls	'IfxGtm_Tom_PwmHl_updateAndShiftOff','',0
	.calls	'IfxGtm_Tom_PwmHl_updateCenterAligned','',0
	.calls	'IfxGtm_Tom_PwmHl_updateEdgeAligned','',0
	.calls	'IfxGtm_Tom_PwmHl_updateOff','',0
	.calls	'IfxGtm_Tom_PwmHl_updatePulse','',0
	.calls	'IfxGtm_Tom_PwmHl_updatePulseOff','',0
	.extern	IfxStdIf_PwmHl_initConfig
	.extern	IfxGtm_Tom_Ch_getClockSource
	.extern	IfxGtm_Tom_Ch_getTgcPointer
	.extern	IfxGtm_Tom_Ch_setClockSource
	.extern	IfxGtm_Tom_Ch_setCompareShadow
	.extern	IfxGtm_Tom_Ch_setCounterValue
	.extern	IfxGtm_Tom_Ch_setResetSource
	.extern	IfxGtm_Tom_Ch_setSignalLevel
	.extern	IfxGtm_Tom_Ch_setTriggerOutput
	.extern	IfxGtm_Tom_Tgc_enableChannels
	.extern	IfxGtm_Tom_Tgc_enableChannelsOutput
	.extern	IfxGtm_Tom_Tgc_setChannelsForceUpdate
	.extern	IfxGtm_Tom_Tgc_trigger
	.extern	IfxGtm_PinMap_setTomTout
	.extern	IfxGtm_Tom_Timer_getOffset
	.extern	IfxGtm_Tom_Timer_addToChannelMask
	.extern	IfxGtm_Tom_Timer_stdIfTimerInit
	.extern	memset
	.extern	__INDIRECT__
	.calls	'IfxGtm_Tom_PwmHl_updateShiftCenterAligned','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L189:
	.word	164489
	.half	3
	.word	.L190
	.byte	4
.L188:
	.byte	1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L191
	.byte	2,1,1,3
	.word	181
	.byte	4
	.byte	'Ifx__jump_and_link',0,3,1,61,17,1,1,5
	.byte	'fun',0,1,61,43
	.word	184
	.byte	6,0,7
	.byte	'__fract',0,4,128,1
.L349:
	.byte	7
	.byte	'float',0,4,4,8
	.byte	'Ifx__float_to_fract',0,3,1,152,2,18
	.word	229
	.byte	1,1,5
	.byte	'a',0,1,152,2,44
	.word	241
	.byte	6,0,9
	.byte	'void',0,10
	.word	295
	.byte	3
	.word	301
	.byte	7
	.byte	'unsigned int',0,4,7,4
	.byte	'__ldmst_c',0,3,2,111,17,1,1,5
	.byte	'address',0,2,111,42
	.word	306
	.byte	5
	.byte	'mask',0,2,111,60
	.word	311
	.byte	5
	.byte	'value',0,2,111,75
	.word	311
	.byte	6,0,7
	.byte	'unsigned long long int',0,8,7,3
	.word	295
	.byte	8
	.byte	'__ld64',0,3,2,135,1,19
	.word	389
	.byte	1,1,5
	.byte	'addr',0,2,135,1,32
	.word	415
	.byte	6,0,4
	.byte	'__st64',0,3,2,143,1,17,1,1,5
	.byte	'addr',0,2,143,1,30
	.word	415
	.byte	5
	.byte	'value',0,2,143,1,43
	.word	389
	.byte	6,0,7
	.byte	'int',0,4,5
.L294:
	.byte	7
	.byte	'unsigned char',0,1,8,11
	.byte	'_Ifx_SRC_SRCR_Bits',0,4,45,16,4,12
	.byte	'SRPN',0,1
	.word	508
	.byte	8,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	508
	.byte	2,6,2,35,1,12
	.byte	'SRE',0,1
	.word	508
	.byte	1,5,2,35,1,12
	.byte	'TOS',0,1
	.word	508
	.byte	2,3,2,35,1,12
	.byte	'reserved_13',0,1
	.word	508
	.byte	3,0,2,35,1,12
	.byte	'ECC',0,1
	.word	508
	.byte	6,2,2,35,2,12
	.byte	'reserved_22',0,1
	.word	508
	.byte	2,0,2,35,2,12
	.byte	'SRR',0,1
	.word	508
	.byte	1,7,2,35,3,12
	.byte	'CLRR',0,1
	.word	508
	.byte	1,6,2,35,3,12
	.byte	'SETR',0,1
	.word	508
	.byte	1,5,2,35,3,12
	.byte	'IOV',0,1
	.word	508
	.byte	1,4,2,35,3,12
	.byte	'IOVCLR',0,1
	.word	508
	.byte	1,3,2,35,3,12
	.byte	'SWS',0,1
	.word	508
	.byte	1,2,2,35,3,12
	.byte	'SWSCLR',0,1
	.word	508
	.byte	1,1,2,35,3,12
	.byte	'reserved_31',0,1
	.word	508
	.byte	1,0,2,35,3,0,13,4,70,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	525
	.byte	4,2,35,0,0,10
	.word	815
	.byte	3
	.word	854
	.byte	4
	.byte	'IfxSrc_clearRequest',0,3,3,250,1,17,1,1,5
	.byte	'src',0,3,250,1,60
	.word	859
	.byte	6,0
.L301:
	.byte	7
	.byte	'unsigned short int',0,2,7,11
	.byte	'_Ifx_P_OUT_Bits',0,6,143,3,16,4,12
	.byte	'P0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'P1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'P2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'P3',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'P4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'P5',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'P6',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'P7',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'P8',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'P9',0,1
	.word	508
	.byte	1,6,2,35,1,12
	.byte	'P10',0,1
	.word	508
	.byte	1,5,2,35,1,12
	.byte	'P11',0,1
	.word	508
	.byte	1,4,2,35,1,12
	.byte	'P12',0,1
	.word	508
	.byte	1,3,2,35,1,12
	.byte	'P13',0,1
	.word	508
	.byte	1,2,2,35,1,12
	.byte	'P14',0,1
	.word	508
	.byte	1,1,2,35,1,12
	.byte	'P15',0,1
	.word	508
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	907
	.byte	16,0,2,35,2,0,13,6,181,5,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	929
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMR_Bits',0,6,169,2,16,4,12
	.byte	'PS0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'PS1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'PS2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'PS3',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'PS4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'PS5',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'PS6',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'PS7',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'PS8',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'PS9',0,1
	.word	508
	.byte	1,6,2,35,1,12
	.byte	'PS10',0,1
	.word	508
	.byte	1,5,2,35,1,12
	.byte	'PS11',0,1
	.word	508
	.byte	1,4,2,35,1,12
	.byte	'PS12',0,1
	.word	508
	.byte	1,3,2,35,1,12
	.byte	'PS13',0,1
	.word	508
	.byte	1,2,2,35,1,12
	.byte	'PS14',0,1
	.word	508
	.byte	1,1,2,35,1,12
	.byte	'PS15',0,1
	.word	508
	.byte	1,0,2,35,1,12
	.byte	'PCL0',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'PCL1',0,1
	.word	508
	.byte	1,6,2,35,2,12
	.byte	'PCL2',0,1
	.word	508
	.byte	1,5,2,35,2,12
	.byte	'PCL3',0,1
	.word	508
	.byte	1,4,2,35,2,12
	.byte	'PCL4',0,1
	.word	508
	.byte	1,3,2,35,2,12
	.byte	'PCL5',0,1
	.word	508
	.byte	1,2,2,35,2,12
	.byte	'PCL6',0,1
	.word	508
	.byte	1,1,2,35,2,12
	.byte	'PCL7',0,1
	.word	508
	.byte	1,0,2,35,2,12
	.byte	'PCL8',0,1
	.word	508
	.byte	1,7,2,35,3,12
	.byte	'PCL9',0,1
	.word	508
	.byte	1,6,2,35,3,12
	.byte	'PCL10',0,1
	.word	508
	.byte	1,5,2,35,3,12
	.byte	'PCL11',0,1
	.word	508
	.byte	1,4,2,35,3,12
	.byte	'PCL12',0,1
	.word	508
	.byte	1,3,2,35,3,12
	.byte	'PCL13',0,1
	.word	508
	.byte	1,2,2,35,3,12
	.byte	'PCL14',0,1
	.word	508
	.byte	1,1,2,35,3,12
	.byte	'PCL15',0,1
	.word	508
	.byte	1,0,2,35,3,0,13,6,133,5,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	1245
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_ID_Bits',0,6,110,16,4,12
	.byte	'MODREV',0,1
	.word	508
	.byte	8,0,2,35,0,12
	.byte	'MODTYPE',0,1
	.word	508
	.byte	8,0,2,35,1,12
	.byte	'MODNUMBER',0,2
	.word	907
	.byte	16,0,2,35,2,0,13,6,148,4,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	1816
	.byte	4,2,35,0,0,15,4
	.word	508
	.byte	16,3,0,11
	.byte	'_Ifx_P_IOCR0_Bits',0,6,140,1,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	3,5,2,35,0,12
	.byte	'PC0',0,1
	.word	508
	.byte	5,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	508
	.byte	3,5,2,35,1,12
	.byte	'PC1',0,1
	.word	508
	.byte	5,0,2,35,1,12
	.byte	'reserved_16',0,1
	.word	508
	.byte	3,5,2,35,2,12
	.byte	'PC2',0,1
	.word	508
	.byte	5,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	508
	.byte	3,5,2,35,3,12
	.byte	'PC3',0,1
	.word	508
	.byte	5,0,2,35,3,0,13,6,164,4,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	1944
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_IOCR4_Bits',0,6,166,1,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	3,5,2,35,0,12
	.byte	'PC4',0,1
	.word	508
	.byte	5,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	508
	.byte	3,5,2,35,1,12
	.byte	'PC5',0,1
	.word	508
	.byte	5,0,2,35,1,12
	.byte	'reserved_16',0,1
	.word	508
	.byte	3,5,2,35,2,12
	.byte	'PC6',0,1
	.word	508
	.byte	5,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	508
	.byte	3,5,2,35,3,12
	.byte	'PC7',0,1
	.word	508
	.byte	5,0,2,35,3,0,13,6,180,4,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	2159
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_IOCR8_Bits',0,6,179,1,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	3,5,2,35,0,12
	.byte	'PC8',0,1
	.word	508
	.byte	5,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	508
	.byte	3,5,2,35,1,12
	.byte	'PC9',0,1
	.word	508
	.byte	5,0,2,35,1,12
	.byte	'reserved_16',0,1
	.word	508
	.byte	3,5,2,35,2,12
	.byte	'PC10',0,1
	.word	508
	.byte	5,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	508
	.byte	3,5,2,35,3,12
	.byte	'PC11',0,1
	.word	508
	.byte	5,0,2,35,3,0,13,6,188,4,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	2374
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_IOCR12_Bits',0,6,153,1,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	3,5,2,35,0,12
	.byte	'PC12',0,1
	.word	508
	.byte	5,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	508
	.byte	3,5,2,35,1,12
	.byte	'PC13',0,1
	.word	508
	.byte	5,0,2,35,1,12
	.byte	'reserved_16',0,1
	.word	508
	.byte	3,5,2,35,2,12
	.byte	'PC14',0,1
	.word	508
	.byte	5,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	508
	.byte	3,5,2,35,3,12
	.byte	'PC15',0,1
	.word	508
	.byte	5,0,2,35,3,0,13,6,172,4,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	2591
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_IN_Bits',0,6,118,16,4,12
	.byte	'P0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'P1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'P2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'P3',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'P4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'P5',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'P6',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'P7',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'P8',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'P9',0,1
	.word	508
	.byte	1,6,2,35,1,12
	.byte	'P10',0,1
	.word	508
	.byte	1,5,2,35,1,12
	.byte	'P11',0,1
	.word	508
	.byte	1,4,2,35,1,12
	.byte	'P12',0,1
	.word	508
	.byte	1,3,2,35,1,12
	.byte	'P13',0,1
	.word	508
	.byte	1,2,2,35,1,12
	.byte	'P14',0,1
	.word	508
	.byte	1,1,2,35,1,12
	.byte	'P15',0,1
	.word	508
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	907
	.byte	16,0,2,35,2,0,13,6,156,4,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	2811
	.byte	4,2,35,0,0,15,24
	.word	508
	.byte	16,23,0,11
	.byte	'_Ifx_P_PDR0_Bits',0,6,205,3,16,4,12
	.byte	'PD0',0,1
	.word	508
	.byte	3,5,2,35,0,12
	.byte	'PL0',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'PD1',0,1
	.word	508
	.byte	3,1,2,35,0,12
	.byte	'PL1',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'PD2',0,1
	.word	508
	.byte	3,5,2,35,1,12
	.byte	'PL2',0,1
	.word	508
	.byte	1,4,2,35,1,12
	.byte	'PD3',0,1
	.word	508
	.byte	3,1,2,35,1,12
	.byte	'PL3',0,1
	.word	508
	.byte	1,0,2,35,1,12
	.byte	'PD4',0,1
	.word	508
	.byte	3,5,2,35,2,12
	.byte	'PL4',0,1
	.word	508
	.byte	1,4,2,35,2,12
	.byte	'PD5',0,1
	.word	508
	.byte	3,1,2,35,2,12
	.byte	'PL5',0,1
	.word	508
	.byte	1,0,2,35,2,12
	.byte	'PD6',0,1
	.word	508
	.byte	3,5,2,35,3,12
	.byte	'PL6',0,1
	.word	508
	.byte	1,4,2,35,3,12
	.byte	'PD7',0,1
	.word	508
	.byte	3,1,2,35,3,12
	.byte	'PL7',0,1
	.word	508
	.byte	1,0,2,35,3,0,13,6,205,5,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	3134
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_PDR1_Bits',0,6,226,3,16,4,12
	.byte	'PD8',0,1
	.word	508
	.byte	3,5,2,35,0,12
	.byte	'PL8',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'PD9',0,1
	.word	508
	.byte	3,1,2,35,0,12
	.byte	'PL9',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'PD10',0,1
	.word	508
	.byte	3,5,2,35,1,12
	.byte	'PL10',0,1
	.word	508
	.byte	1,4,2,35,1,12
	.byte	'PD11',0,1
	.word	508
	.byte	3,1,2,35,1,12
	.byte	'PL11',0,1
	.word	508
	.byte	1,0,2,35,1,12
	.byte	'PD12',0,1
	.word	508
	.byte	3,5,2,35,2,12
	.byte	'PL12',0,1
	.word	508
	.byte	1,4,2,35,2,12
	.byte	'PD13',0,1
	.word	508
	.byte	3,1,2,35,2,12
	.byte	'PL13',0,1
	.word	508
	.byte	1,0,2,35,2,12
	.byte	'PD14',0,1
	.word	508
	.byte	3,5,2,35,3,12
	.byte	'PL14',0,1
	.word	508
	.byte	1,4,2,35,3,12
	.byte	'PD15',0,1
	.word	508
	.byte	3,1,2,35,3,12
	.byte	'PL15',0,1
	.word	508
	.byte	1,0,2,35,3,0,13,6,213,5,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	3438
	.byte	4,2,35,0,0,15,8
	.word	508
	.byte	16,7,0,11
	.byte	'_Ifx_P_ESR_Bits',0,6,88,16,4,12
	.byte	'EN0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'EN1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'EN2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'EN3',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'EN4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'EN5',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'EN6',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'EN7',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'EN8',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'EN9',0,1
	.word	508
	.byte	1,6,2,35,1,12
	.byte	'EN10',0,1
	.word	508
	.byte	1,5,2,35,1,12
	.byte	'EN11',0,1
	.word	508
	.byte	1,4,2,35,1,12
	.byte	'EN12',0,1
	.word	508
	.byte	1,3,2,35,1,12
	.byte	'EN13',0,1
	.word	508
	.byte	1,2,2,35,1,12
	.byte	'EN14',0,1
	.word	508
	.byte	1,1,2,35,1,12
	.byte	'EN15',0,1
	.word	508
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	907
	.byte	16,0,2,35,2,0,13,6,140,4,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	3763
	.byte	4,2,35,0,0,15,12
	.word	508
	.byte	16,11,0,11
	.byte	'_Ifx_P_PDISC_Bits',0,6,183,3,16,4,12
	.byte	'PDIS0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'PDIS1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'PDIS2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'PDIS3',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'PDIS4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'PDIS5',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'PDIS6',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'PDIS7',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'PDIS8',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'PDIS9',0,1
	.word	508
	.byte	1,6,2,35,1,12
	.byte	'PDIS10',0,1
	.word	508
	.byte	1,5,2,35,1,12
	.byte	'PDIS11',0,1
	.word	508
	.byte	1,4,2,35,1,12
	.byte	'PDIS12',0,1
	.word	508
	.byte	1,3,2,35,1,12
	.byte	'PDIS13',0,1
	.word	508
	.byte	1,2,2,35,1,12
	.byte	'PDIS14',0,1
	.word	508
	.byte	1,1,2,35,1,12
	.byte	'PDIS15',0,1
	.word	508
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	907
	.byte	16,0,2,35,2,0,13,6,197,5,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	4103
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_PCSR_Bits',0,6,165,3,16,4,12
	.byte	'SEL0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'SEL1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'SEL2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'SEL3',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'SEL4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'SEL5',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'SEL6',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'SEL7',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	508
	.byte	2,6,2,35,1,12
	.byte	'SEL10',0,1
	.word	508
	.byte	1,5,2,35,1,12
	.byte	'SEL11',0,1
	.word	508
	.byte	1,4,2,35,1,12
	.byte	'reserved_12',0,4
	.word	311
	.byte	19,1,2,35,0,12
	.byte	'LCK',0,1
	.word	508
	.byte	1,0,2,35,3,0,13,6,189,5,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	4469
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMSR0_Bits',0,6,206,2,16,4,12
	.byte	'PS0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'PS1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'PS2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'PS3',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	311
	.byte	28,0,2,35,0,0,13,6,149,5,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	4755
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMSR4_Bits',0,6,227,2,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	4,4,2,35,0,12
	.byte	'PS4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'PS5',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'PS6',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'PS7',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	311
	.byte	24,0,2,35,0,0,13,6,165,5,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	4902
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMSR8_Bits',0,6,238,2,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	8,0,2,35,0,12
	.byte	'PS8',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'PS9',0,1
	.word	508
	.byte	1,6,2,35,1,12
	.byte	'PS10',0,1
	.word	508
	.byte	1,5,2,35,1,12
	.byte	'PS11',0,1
	.word	508
	.byte	1,4,2,35,1,12
	.byte	'reserved_12',0,4
	.word	311
	.byte	20,0,2,35,0,0,13,6,173,5,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	5071
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMSR12_Bits',0,6,216,2,16,4,12
	.byte	'reserved_0',0,2
	.word	907
	.byte	12,4,2,35,0,12
	.byte	'PS12',0,1
	.word	508
	.byte	1,3,2,35,1,12
	.byte	'PS13',0,1
	.word	508
	.byte	1,2,2,35,1,12
	.byte	'PS14',0,1
	.word	508
	.byte	1,1,2,35,1,12
	.byte	'PS15',0,1
	.word	508
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	907
	.byte	16,0,2,35,2,0,13,6,157,5,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	5243
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMCR0_Bits',0,6,232,1,16,4,12
	.byte	'reserved_0',0,2
	.word	907
	.byte	16,0,2,35,0,12
	.byte	'PCL0',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'PCL1',0,1
	.word	508
	.byte	1,6,2,35,2,12
	.byte	'PCL2',0,1
	.word	508
	.byte	1,5,2,35,2,12
	.byte	'PCL3',0,1
	.word	508
	.byte	1,4,2,35,2,12
	.byte	'reserved_20',0,2
	.word	907
	.byte	12,0,2,35,2,0,13,6,229,4,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	5418
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMCR4_Bits',0,6,253,1,16,4,12
	.byte	'reserved_0',0,4
	.word	311
	.byte	20,12,2,35,0,12
	.byte	'PCL4',0,1
	.word	508
	.byte	1,3,2,35,2,12
	.byte	'PCL5',0,1
	.word	508
	.byte	1,2,2,35,2,12
	.byte	'PCL6',0,1
	.word	508
	.byte	1,1,2,35,2,12
	.byte	'PCL7',0,1
	.word	508
	.byte	1,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	508
	.byte	8,0,2,35,3,0,13,6,245,4,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	5592
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMCR8_Bits',0,6,136,2,16,4,12
	.byte	'reserved_0',0,4
	.word	311
	.byte	24,8,2,35,0,12
	.byte	'PCL8',0,1
	.word	508
	.byte	1,7,2,35,3,12
	.byte	'PCL9',0,1
	.word	508
	.byte	1,6,2,35,3,12
	.byte	'PCL10',0,1
	.word	508
	.byte	1,5,2,35,3,12
	.byte	'PCL11',0,1
	.word	508
	.byte	1,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	508
	.byte	4,0,2,35,3,0,13,6,253,4,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	5766
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMCR12_Bits',0,6,243,1,16,4,12
	.byte	'reserved_0',0,4
	.word	311
	.byte	28,4,2,35,0,12
	.byte	'PCL12',0,1
	.word	508
	.byte	1,3,2,35,3,12
	.byte	'PCL13',0,1
	.word	508
	.byte	1,2,2,35,3,12
	.byte	'PCL14',0,1
	.word	508
	.byte	1,1,2,35,3,12
	.byte	'PCL15',0,1
	.word	508
	.byte	1,0,2,35,3,0,13,6,237,4,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	5942
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMSR_Bits',0,6,249,2,16,4,12
	.byte	'PS0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'PS1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'PS2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'PS3',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'PS4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'PS5',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'PS6',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'PS7',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'PS8',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'PS9',0,1
	.word	508
	.byte	1,6,2,35,1,12
	.byte	'PS10',0,1
	.word	508
	.byte	1,5,2,35,1,12
	.byte	'PS11',0,1
	.word	508
	.byte	1,4,2,35,1,12
	.byte	'PS12',0,1
	.word	508
	.byte	1,3,2,35,1,12
	.byte	'PS13',0,1
	.word	508
	.byte	1,2,2,35,1,12
	.byte	'PS14',0,1
	.word	508
	.byte	1,1,2,35,1,12
	.byte	'PS15',0,1
	.word	508
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	907
	.byte	16,0,2,35,2,0,13,6,141,5,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	6098
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMCR_Bits',0,6,147,2,16,4,12
	.byte	'reserved_0',0,2
	.word	907
	.byte	16,0,2,35,0,12
	.byte	'PCL0',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'PCL1',0,1
	.word	508
	.byte	1,6,2,35,2,12
	.byte	'PCL2',0,1
	.word	508
	.byte	1,5,2,35,2,12
	.byte	'PCL3',0,1
	.word	508
	.byte	1,4,2,35,2,12
	.byte	'PCL4',0,1
	.word	508
	.byte	1,3,2,35,2,12
	.byte	'PCL5',0,1
	.word	508
	.byte	1,2,2,35,2,12
	.byte	'PCL6',0,1
	.word	508
	.byte	1,1,2,35,2,12
	.byte	'PCL7',0,1
	.word	508
	.byte	1,0,2,35,2,12
	.byte	'PCL8',0,1
	.word	508
	.byte	1,7,2,35,3,12
	.byte	'PCL9',0,1
	.word	508
	.byte	1,6,2,35,3,12
	.byte	'PCL10',0,1
	.word	508
	.byte	1,5,2,35,3,12
	.byte	'PCL11',0,1
	.word	508
	.byte	1,4,2,35,3,12
	.byte	'PCL12',0,1
	.word	508
	.byte	1,3,2,35,3,12
	.byte	'PCL13',0,1
	.word	508
	.byte	1,2,2,35,3,12
	.byte	'PCL14',0,1
	.word	508
	.byte	1,1,2,35,3,12
	.byte	'PCL15',0,1
	.word	508
	.byte	1,0,2,35,3,0,13,6,221,4,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	6431
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_LPCR0_Bits',0,6,192,1,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'PS1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	311
	.byte	30,0,2,35,0,0,13,6,196,4,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	6779
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_LPCR1_Bits',0,6,200,1,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'PS1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	311
	.byte	30,0,2,35,0,0,11
	.byte	'_Ifx_P_LPCR1_P21_Bits',0,6,208,1,16,4,12
	.byte	'RDIS_CTRL',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'RX_DIS',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'TERM',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'LRXTERM',0,1
	.word	508
	.byte	5,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	311
	.byte	24,0,2,35,0,0,13,6,204,4,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	6903
	.byte	4,2,35,0,14
	.byte	'B_P21',0
	.word	6987
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_LPCR2_Bits',0,6,218,1,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	8,0,2,35,0,12
	.byte	'LVDSR',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'LVDSRL',0,1
	.word	508
	.byte	1,6,2,35,1,12
	.byte	'reserved_10',0,1
	.word	508
	.byte	2,4,2,35,1,12
	.byte	'TDIS_CTRL',0,1
	.word	508
	.byte	1,3,2,35,1,12
	.byte	'TX_DIS',0,1
	.word	508
	.byte	1,2,2,35,1,12
	.byte	'TX_PD',0,1
	.word	508
	.byte	1,1,2,35,1,12
	.byte	'TX_PWDPD',0,1
	.word	508
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	907
	.byte	16,0,2,35,2,0,13,6,213,4,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	7167
	.byte	4,2,35,0,0,15,76
	.word	508
	.byte	16,75,0,11
	.byte	'_Ifx_P_ACCEN1_Bits',0,6,82,16,4,12
	.byte	'reserved_0',0,4
	.word	311
	.byte	32,0,2,35,0,0,13,6,132,4,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	7420
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_ACCEN0_Bits',0,6,45,16,4,12
	.byte	'EN0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'EN1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'EN2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'EN3',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'EN4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'EN5',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'EN6',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'EN7',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'EN8',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'EN9',0,1
	.word	508
	.byte	1,6,2,35,1,12
	.byte	'EN10',0,1
	.word	508
	.byte	1,5,2,35,1,12
	.byte	'EN11',0,1
	.word	508
	.byte	1,4,2,35,1,12
	.byte	'EN12',0,1
	.word	508
	.byte	1,3,2,35,1,12
	.byte	'EN13',0,1
	.word	508
	.byte	1,2,2,35,1,12
	.byte	'EN14',0,1
	.word	508
	.byte	1,1,2,35,1,12
	.byte	'EN15',0,1
	.word	508
	.byte	1,0,2,35,1,12
	.byte	'EN16',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'EN17',0,1
	.word	508
	.byte	1,6,2,35,2,12
	.byte	'EN18',0,1
	.word	508
	.byte	1,5,2,35,2,12
	.byte	'EN19',0,1
	.word	508
	.byte	1,4,2,35,2,12
	.byte	'EN20',0,1
	.word	508
	.byte	1,3,2,35,2,12
	.byte	'EN21',0,1
	.word	508
	.byte	1,2,2,35,2,12
	.byte	'EN22',0,1
	.word	508
	.byte	1,1,2,35,2,12
	.byte	'EN23',0,1
	.word	508
	.byte	1,0,2,35,2,12
	.byte	'EN24',0,1
	.word	508
	.byte	1,7,2,35,3,12
	.byte	'EN25',0,1
	.word	508
	.byte	1,6,2,35,3,12
	.byte	'EN26',0,1
	.word	508
	.byte	1,5,2,35,3,12
	.byte	'EN27',0,1
	.word	508
	.byte	1,4,2,35,3,12
	.byte	'EN28',0,1
	.word	508
	.byte	1,3,2,35,3,12
	.byte	'EN29',0,1
	.word	508
	.byte	1,2,2,35,3,12
	.byte	'EN30',0,1
	.word	508
	.byte	1,1,2,35,3,12
	.byte	'EN31',0,1
	.word	508
	.byte	1,0,2,35,3,0,13,6,252,3,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	7507
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P',0,6,229,5,25,128,2,14
	.byte	'OUT',0
	.word	1205
	.byte	4,2,35,0,14
	.byte	'OMR',0
	.word	1776
	.byte	4,2,35,4,14
	.byte	'ID',0
	.word	1895
	.byte	4,2,35,8,14
	.byte	'reserved_C',0
	.word	1935
	.byte	4,2,35,12,14
	.byte	'IOCR0',0
	.word	2119
	.byte	4,2,35,16,14
	.byte	'IOCR4',0
	.word	2334
	.byte	4,2,35,20,14
	.byte	'IOCR8',0
	.word	2551
	.byte	4,2,35,24,14
	.byte	'IOCR12',0
	.word	2771
	.byte	4,2,35,28,14
	.byte	'reserved_20',0
	.word	1935
	.byte	4,2,35,32,14
	.byte	'IN',0
	.word	3085
	.byte	4,2,35,36,14
	.byte	'reserved_28',0
	.word	3125
	.byte	24,2,35,40,14
	.byte	'PDR0',0
	.word	3398
	.byte	4,2,35,64,14
	.byte	'PDR1',0
	.word	3714
	.byte	4,2,35,68,14
	.byte	'reserved_48',0
	.word	3754
	.byte	8,2,35,72,14
	.byte	'ESR',0
	.word	4054
	.byte	4,2,35,80,14
	.byte	'reserved_54',0
	.word	4094
	.byte	12,2,35,84,14
	.byte	'PDISC',0
	.word	4429
	.byte	4,2,35,96,14
	.byte	'PCSR',0
	.word	4715
	.byte	4,2,35,100,14
	.byte	'reserved_68',0
	.word	3754
	.byte	8,2,35,104,14
	.byte	'OMSR0',0
	.word	4862
	.byte	4,2,35,112,14
	.byte	'OMSR4',0
	.word	5031
	.byte	4,2,35,116,14
	.byte	'OMSR8',0
	.word	5203
	.byte	4,2,35,120,14
	.byte	'OMSR12',0
	.word	5378
	.byte	4,2,35,124,14
	.byte	'OMCR0',0
	.word	5552
	.byte	4,3,35,128,1,14
	.byte	'OMCR4',0
	.word	5726
	.byte	4,3,35,132,1,14
	.byte	'OMCR8',0
	.word	5902
	.byte	4,3,35,136,1,14
	.byte	'OMCR12',0
	.word	6058
	.byte	4,3,35,140,1,14
	.byte	'OMSR',0
	.word	6391
	.byte	4,3,35,144,1,14
	.byte	'OMCR',0
	.word	6739
	.byte	4,3,35,148,1,14
	.byte	'reserved_98',0
	.word	3754
	.byte	8,3,35,152,1,14
	.byte	'LPCR0',0
	.word	6863
	.byte	4,3,35,160,1,14
	.byte	'LPCR1',0
	.word	7112
	.byte	4,3,35,164,1,14
	.byte	'LPCR2',0
	.word	7371
	.byte	4,3,35,168,1,14
	.byte	'reserved_A4',0
	.word	7411
	.byte	76,3,35,172,1,14
	.byte	'ACCEN1',0
	.word	7467
	.byte	4,3,35,248,1,14
	.byte	'ACCEN0',0
	.word	8034
	.byte	4,3,35,252,1,0,10
	.word	8074
	.byte	3
	.word	8677
	.byte	17,5,172,1,9,4,18
	.byte	'IfxPort_State_notChanged',0,0,18
	.byte	'IfxPort_State_high',0,1,18
	.byte	'IfxPort_State_low',0,128,128,4,18
	.byte	'IfxPort_State_toggled',0,129,128,4,0
.L329:
	.byte	4
	.byte	'IfxPort_setPinState',0,3,5,208,4,17,1,1
.L331:
	.byte	5
	.byte	'port',0,5,208,4,44
	.word	8682
.L333:
	.byte	5
	.byte	'pinIndex',0,5,208,4,56
	.word	508
.L335:
	.byte	5
	.byte	'action',0,5,208,4,80
	.word	8687
.L337:
	.byte	6,0,19
	.byte	'IfxStdIf_InterfaceDriver',0,8,118,15
	.word	415
	.byte	20
	.word	241
	.byte	1,1,21
	.word	415
	.byte	0,3
	.word	8901
	.byte	19
	.byte	'IfxStdIf_Timer_GetFrequency',0,7,102,19
	.word	8914
.L304:
	.byte	7
	.byte	'unsigned long int',0,4,7,20
	.word	8955
	.byte	1,1,21
	.word	415
	.byte	0,3
	.word	8976
	.byte	19
	.byte	'IfxStdIf_Timer_GetPeriod',0,7,108,26
	.word	8989
	.byte	19
	.byte	'IfxStdIf_Timer_GetResolution',0,7,114,19
	.word	8914
	.byte	19
	.byte	'IfxStdIf_Timer_GetTrigger',0,7,120,26
	.word	8989
	.byte	20
	.word	508
	.byte	1,1,21
	.word	415
	.byte	21
	.word	241
	.byte	0,3
	.word	9098
	.byte	19
	.byte	'IfxStdIf_Timer_SetFrequency',0,7,128,1,19
	.word	9116
	.byte	22,1,1,21
	.word	415
	.byte	0,3
	.word	9158
	.byte	19
	.byte	'IfxStdIf_Timer_UpdateInputFrequency',0,7,134,1,16
	.word	9167
	.byte	19
	.byte	'IfxStdIf_Timer_ApplyUpdate',0,7,155,1,16
	.word	9167
	.byte	19
	.byte	'IfxStdIf_Timer_DisableUpdate',0,7,172,1,16
	.word	9167
	.byte	19
	.byte	'IfxStdIf_Timer_GetInputFrequency',0,7,178,1,19
	.word	8914
	.byte	19
	.byte	'IfxStdIf_Timer_Run',0,7,187,1,16
	.word	9167
	.byte	20
	.word	508
	.byte	1,1,21
	.word	415
	.byte	21
	.word	8955
	.byte	0,3
	.word	9361
	.byte	19
	.byte	'IfxStdIf_Timer_SetPeriod',0,7,197,1,19
	.word	9379
	.byte	22,1,1,21
	.word	415
	.byte	21
	.word	508
	.byte	0,3
	.word	9418
	.byte	19
	.byte	'IfxStdIf_Timer_SetSingleMode',0,7,206,1,16
	.word	9432
	.byte	22,1,1,21
	.word	415
	.byte	21
	.word	8955
	.byte	0,3
	.word	9475
	.byte	19
	.byte	'IfxStdIf_Timer_SetTrigger',0,7,218,1,16
	.word	9489
	.byte	19
	.byte	'IfxStdIf_Timer_Stop',0,7,224,1,16
	.word	9167
	.byte	20
	.word	508
	.byte	1,1,21
	.word	415
	.byte	0,3
	.word	9558
	.byte	19
	.byte	'IfxStdIf_Timer_AckTimerIrq',0,7,230,1,19
	.word	9571
	.byte	19
	.byte	'IfxStdIf_Timer_AckTriggerIrq',0,7,236,1,19
	.word	9571
	.byte	11
	.byte	'IfxStdIf_Timer_',0,7,240,1,8,68,14
	.byte	'driver',0
	.word	8868
	.byte	4,2,35,0,14
	.byte	'getFrequency',0
	.word	8919
	.byte	4,2,35,4,14
	.byte	'getPeriod',0
	.word	8994
	.byte	4,2,35,8,14
	.byte	'getResolution',0
	.word	9027
	.byte	4,2,35,12,14
	.byte	'getTrigger',0
	.word	9064
	.byte	4,2,35,16,14
	.byte	'setFrequency',0
	.word	9121
	.byte	4,2,35,20,14
	.byte	'updateInputFrequency',0
	.word	9172
	.byte	4,2,35,24,14
	.byte	'applyUpdate',0
	.word	9217
	.byte	4,2,35,28,14
	.byte	'disableUpdate',0
	.word	9253
	.byte	4,2,35,32,14
	.byte	'getInputFrequency',0
	.word	9291
	.byte	4,2,35,36,14
	.byte	'run',0
	.word	9333
	.byte	4,2,35,40,14
	.byte	'setPeriod',0
	.word	9384
	.byte	4,2,35,44,14
	.byte	'setSingleMode',0
	.word	9437
	.byte	4,2,35,48,14
	.byte	'setTrigger',0
	.word	9494
	.byte	4,2,35,52,14
	.byte	'stop',0
	.word	9529
	.byte	4,2,35,56,14
	.byte	'ackTimerIrq',0
	.word	9576
	.byte	4,2,35,60,14
	.byte	'ackTriggerIrq',0
	.word	9612
	.byte	4,2,35,64,0,3
	.word	9650
	.byte	8
	.byte	'IfxStdIf_Timer_getInputFrequency',0,3,7,236,2,20
	.word	241
	.byte	1,1,5
	.byte	'stdIf',0,7,236,2,69
	.word	10029
	.byte	6,0,3
	.word	295
	.byte	3
	.word	8901
	.byte	3
	.word	8976
	.byte	3
	.word	8901
	.byte	3
	.word	8976
	.byte	3
	.word	9098
	.byte	3
	.word	9158
	.byte	3
	.word	9158
	.byte	3
	.word	9158
	.byte	3
	.word	8901
	.byte	3
	.word	9158
	.byte	3
	.word	9361
	.byte	3
	.word	9418
	.byte	3
	.word	9475
	.byte	3
	.word	9158
	.byte	3
	.word	9558
	.byte	3
	.word	9558
.L352:
	.byte	8
	.byte	'IfxStdIf_Timer_tickToS',0,3,7,182,3,20
	.word	241
	.byte	1,1
.L354:
	.byte	5
	.byte	'clockFreq',0,7,182,3,51
	.word	241
.L356:
	.byte	5
	.byte	'ticks',0,7,182,3,77
	.word	8955
.L358:
	.byte	6,0
.L371:
	.byte	8
	.byte	'IfxStdIf_Timer_sToTick',0,3,7,193,3,27
	.word	8955
	.byte	1,1
.L373:
	.byte	5
	.byte	'clockFreq',0,7,193,3,58
	.word	241
.L375:
	.byte	5
	.byte	'seconds',0,7,193,3,77
	.word	241
.L377:
	.byte	6,0,7
	.byte	'unsigned int',0,4,7,11
	.byte	'_Ifx_GTM_ATOM_CH_RDADDR_Bits',0,10,171,3,16,4,12
	.byte	'RDADDR0',0,4
	.word	10325
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10325
	.byte	7,16,2,35,0,12
	.byte	'RDADDR1',0,4
	.word	10325
	.byte	9,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	10325
	.byte	7,0,2,35,0,0,13,10,224,35,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	10341
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_CTRL_Bits',0,10,245,2,16,4,12
	.byte	'MODE',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'TB12_SEL',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'ARU_EN',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'ACB',0,4
	.word	10325
	.byte	5,23,2,35,0,12
	.byte	'CMP_CTRL',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'SL',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'CLK_SRC',0,4
	.word	10325
	.byte	3,17,2,35,0,12
	.byte	'reserved_15',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'WR_REQ',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'reserved_17',0,4
	.word	10325
	.byte	3,12,2,35,0,12
	.byte	'RST_CCU0',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	10325
	.byte	3,8,2,35,0,12
	.byte	'TRIGOUT',0,4
	.word	10325
	.byte	1,7,2,35,0,12
	.byte	'SLA',0,4
	.word	10325
	.byte	1,6,2,35,0,12
	.byte	'OSM',0,4
	.word	10325
	.byte	1,5,2,35,0,12
	.byte	'ABM',0,4
	.word	10325
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	10325
	.byte	4,0,2,35,0,0,13,10,184,35,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	10500
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_SOMC_Bits',0,10,180,3,16,4,12
	.byte	'MODE',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'TB12_SEL',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'ARU_EN',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'ACB10',0,4
	.word	10325
	.byte	2,26,2,35,0,12
	.byte	'ACB42',0,4
	.word	10325
	.byte	3,23,2,35,0,12
	.byte	'CMP_CTRL',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'SL',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	10325
	.byte	4,16,2,35,0,12
	.byte	'WR_REQ',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'reserved_17',0,4
	.word	10325
	.byte	7,8,2,35,0,12
	.byte	'TRIGOUT',0,4
	.word	10325
	.byte	1,7,2,35,0,12
	.byte	'SLA',0,4
	.word	10325
	.byte	1,6,2,35,0,12
	.byte	'reserved_26',0,4
	.word	10325
	.byte	1,5,2,35,0,12
	.byte	'ABM',0,4
	.word	10325
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	10325
	.byte	4,0,2,35,0,0,13,10,232,35,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	10913
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_SOMI_Bits',0,10,201,3,16,4,12
	.byte	'MODE',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'ARU_EN',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'ACB0',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10325
	.byte	6,21,2,35,0,12
	.byte	'SL',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	10325
	.byte	20,0,2,35,0,0,13,10,240,35,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	11291
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_SOMP_Bits',0,10,213,3,16,4,12
	.byte	'MODE',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'ARU_EN',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'ADL',0,4
	.word	10325
	.byte	2,26,2,35,0,12
	.byte	'reserved_6',0,4
	.word	10325
	.byte	5,21,2,35,0,12
	.byte	'SL',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'CLK_SRC_SR',0,4
	.word	10325
	.byte	3,17,2,35,0,12
	.byte	'reserved_15',0,4
	.word	10325
	.byte	5,12,2,35,0,12
	.byte	'RST_CCU0',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	10325
	.byte	3,8,2,35,0,12
	.byte	'TRIGOUT',0,4
	.word	10325
	.byte	1,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	10325
	.byte	1,6,2,35,0,12
	.byte	'OSM',0,4
	.word	10325
	.byte	1,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	10325
	.byte	5,0,2,35,0,0,13,10,248,35,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	11496
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_SOMS_Bits',0,10,232,3,16,4,12
	.byte	'MODE',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'ARU_EN',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'ACB0',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10325
	.byte	6,21,2,35,0,12
	.byte	'SL',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'CLK_SRC',0,4
	.word	10325
	.byte	3,17,2,35,0,12
	.byte	'reserved_15',0,4
	.word	10325
	.byte	11,6,2,35,0,12
	.byte	'OSM',0,4
	.word	10325
	.byte	1,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	10325
	.byte	5,0,2,35,0,0,13,10,128,36,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	11845
	.byte	4,2,35,0,0,13,10,177,55,5,4,14
	.byte	'CTRL',0
	.word	10873
	.byte	4,2,35,0,14
	.byte	'SOMC',0
	.word	11251
	.byte	4,2,35,0,14
	.byte	'SOMI',0
	.word	11456
	.byte	4,2,35,0,14
	.byte	'SOMP',0
	.word	11805
	.byte	4,2,35,0,14
	.byte	'SOMS',0
	.word	12067
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_SR0_Bits',0,10,247,3,16,4,12
	.byte	'SR0',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,136,36,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	12184
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_SR1_Bits',0,10,254,3,16,4,12
	.byte	'SR1',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,144,36,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	12295
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_CM0_Bits',0,10,224,2,16,4,12
	.byte	'CM0',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,160,35,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	12406
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_CM1_Bits',0,10,231,2,16,4,12
	.byte	'CM1',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,168,35,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	12517
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_CN0_Bits',0,10,238,2,16,4,12
	.byte	'CN0',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,176,35,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	12628
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_STAT_Bits',0,10,133,4,16,4,12
	.byte	'OL',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	10325
	.byte	15,16,2,35,0,12
	.byte	'ACBI',0,4
	.word	10325
	.byte	5,11,2,35,0,12
	.byte	'DV',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'WRF',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10325
	.byte	1,8,2,35,0,12
	.byte	'ACBO',0,4
	.word	10325
	.byte	5,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10325
	.byte	3,0,2,35,0,0,13,10,152,36,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	12739
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_IRQ_NOTIFY_Bits',0,10,163,3,16,4,12
	.byte	'CCU0TC',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'CCU1TC',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10325
	.byte	30,0,2,35,0,0,13,10,216,35,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	12956
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_IRQ_EN_Bits',0,10,140,3,16,4,12
	.byte	'CCU0TC_IRQ_EN',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'CCU1TC_IRQ_EN',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10325
	.byte	30,0,2,35,0,0,13,10,192,35,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	13094
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_IRQ_FORCINT_Bits',0,10,148,3,16,4,12
	.byte	'TRG_CCU0TC',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'TRG_CCU1TC',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10325
	.byte	30,0,2,35,0,0,13,10,200,35,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	13242
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_IRQ_MODE_Bits',0,10,156,3,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10325
	.byte	30,0,2,35,0,0,13,10,208,35,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	13389
	.byte	4,2,35,0,0,15,16
	.word	508
	.byte	16,15,0,11
	.byte	'_Ifx_GTM_ATOM_CH',0,10,174,55,25,64,14
	.byte	'RDADDR',0
	.word	10460
	.byte	4,2,35,0,23
	.word	12107
	.byte	4,2,35,4,14
	.byte	'SR0',0
	.word	12255
	.byte	4,2,35,8,14
	.byte	'SR1',0
	.word	12366
	.byte	4,2,35,12,14
	.byte	'CM0',0
	.word	12477
	.byte	4,2,35,16,14
	.byte	'CM1',0
	.word	12588
	.byte	4,2,35,20,14
	.byte	'CN0',0
	.word	12699
	.byte	4,2,35,24,14
	.byte	'STAT',0
	.word	12916
	.byte	4,2,35,28,14
	.byte	'IRQ_NOTIFY',0
	.word	13054
	.byte	4,2,35,32,14
	.byte	'IRQ_EN',0
	.word	13202
	.byte	4,2,35,36,14
	.byte	'IRQ_FORCINT',0
	.word	13349
	.byte	4,2,35,40,14
	.byte	'IRQ_MODE',0
	.word	13469
	.byte	4,2,35,44,14
	.byte	'reserved_30',0
	.word	13509
	.byte	16,2,35,48,0,10
	.word	13518
	.byte	3
	.word	13742
	.byte	10
	.word	13518
	.byte	11
	.byte	'_Ifx_GTM_ATOM_AGC_GLB_CTRL_Bits',0,10,159,2,16,4,12
	.byte	'HOST_TRIG',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	10325
	.byte	7,24,2,35,0,12
	.byte	'RST_CH0',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'RST_CH1',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'RST_CH2',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'RST_CH3',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'RST_CH4',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'RST_CH5',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'RST_CH6',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'RST_CH7',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'UPEN_CTRL0',0,4
	.word	10325
	.byte	2,14,2,35,0,12
	.byte	'UPEN_CTRL1',0,4
	.word	10325
	.byte	2,12,2,35,0,12
	.byte	'UPEN_CTRL2',0,4
	.word	10325
	.byte	2,10,2,35,0,12
	.byte	'UPEN_CTRL3',0,4
	.word	10325
	.byte	2,8,2,35,0,12
	.byte	'UPEN_CTRL4',0,4
	.word	10325
	.byte	2,6,2,35,0,12
	.byte	'UPEN_CTRL5',0,4
	.word	10325
	.byte	2,4,2,35,0,12
	.byte	'UPEN_CTRL6',0,4
	.word	10325
	.byte	2,2,2,35,0,12
	.byte	'UPEN_CTRL7',0,4
	.word	10325
	.byte	2,0,2,35,0,0,13,10,128,35,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	13757
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_AGC_ENDIS_CTRL_Bits',0,10,238,1,16,4,12
	.byte	'ENDIS_CTRL0',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'ENDIS_CTRL1',0,4
	.word	10325
	.byte	2,28,2,35,0,12
	.byte	'ENDIS_CTRL2',0,4
	.word	10325
	.byte	2,26,2,35,0,12
	.byte	'ENDIS_CTRL3',0,4
	.word	10325
	.byte	2,24,2,35,0,12
	.byte	'ENDIS_CTRL4',0,4
	.word	10325
	.byte	2,22,2,35,0,12
	.byte	'ENDIS_CTRL5',0,4
	.word	10325
	.byte	2,20,2,35,0,12
	.byte	'ENDIS_CTRL6',0,4
	.word	10325
	.byte	2,18,2,35,0,12
	.byte	'ENDIS_CTRL7',0,4
	.word	10325
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10325
	.byte	16,0,2,35,0,0,13,10,232,34,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	14207
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_AGC_ENDIS_STAT_Bits',0,10,252,1,16,4,12
	.byte	'ENDIS_STAT0',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'ENDIS_STAT1',0,4
	.word	10325
	.byte	2,28,2,35,0,12
	.byte	'ENDIS_STAT2',0,4
	.word	10325
	.byte	2,26,2,35,0,12
	.byte	'ENDIS_STAT3',0,4
	.word	10325
	.byte	2,24,2,35,0,12
	.byte	'ENDIS_STAT4',0,4
	.word	10325
	.byte	2,22,2,35,0,12
	.byte	'ENDIS_STAT5',0,4
	.word	10325
	.byte	2,20,2,35,0,12
	.byte	'ENDIS_STAT6',0,4
	.word	10325
	.byte	2,18,2,35,0,12
	.byte	'ENDIS_STAT7',0,4
	.word	10325
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10325
	.byte	16,0,2,35,0,0,13,10,240,34,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	14495
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_AGC_ACT_TB_Bits',0,10,229,1,16,4,12
	.byte	'ACT_TB',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'TB_TRIG',0,4
	.word	10325
	.byte	1,7,2,35,0,12
	.byte	'TBU_SEL',0,4
	.word	10325
	.byte	2,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	10325
	.byte	5,0,2,35,0,0,13,10,224,34,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	14783
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_AGC_OUTEN_CTRL_Bits',0,10,196,2,16,4,12
	.byte	'OUTEN_CTRL0',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'OUTEN_CTRL1',0,4
	.word	10325
	.byte	2,28,2,35,0,12
	.byte	'OUTEN_CTRL2',0,4
	.word	10325
	.byte	2,26,2,35,0,12
	.byte	'OUTEN_CTRL3',0,4
	.word	10325
	.byte	2,24,2,35,0,12
	.byte	'OUTEN_CTRL4',0,4
	.word	10325
	.byte	2,22,2,35,0,12
	.byte	'OUTEN_CTRL5',0,4
	.word	10325
	.byte	2,20,2,35,0,12
	.byte	'OUTEN_CTRL6',0,4
	.word	10325
	.byte	2,18,2,35,0,12
	.byte	'OUTEN_CTRL7',0,4
	.word	10325
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10325
	.byte	16,0,2,35,0,0,13,10,144,35,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	14939
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_AGC_OUTEN_STAT_Bits',0,10,210,2,16,4,12
	.byte	'OUTEN_STAT0',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'OUTEN_STAT1',0,4
	.word	10325
	.byte	2,28,2,35,0,12
	.byte	'OUTEN_STAT2',0,4
	.word	10325
	.byte	2,26,2,35,0,12
	.byte	'OUTEN_STAT3',0,4
	.word	10325
	.byte	2,24,2,35,0,12
	.byte	'OUTEN_STAT4',0,4
	.word	10325
	.byte	2,22,2,35,0,12
	.byte	'OUTEN_STAT5',0,4
	.word	10325
	.byte	2,20,2,35,0,12
	.byte	'OUTEN_STAT6',0,4
	.word	10325
	.byte	2,18,2,35,0,12
	.byte	'OUTEN_STAT7',0,4
	.word	10325
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10325
	.byte	16,0,2,35,0,0,13,10,152,35,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	15227
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_AGC_FUPD_CTRL_Bits',0,10,138,2,16,4,12
	.byte	'FUPD_CTRL0',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'FUPD_CTRL1',0,4
	.word	10325
	.byte	2,28,2,35,0,12
	.byte	'FUPD_CTRL2',0,4
	.word	10325
	.byte	2,26,2,35,0,12
	.byte	'FUPD_CTRL3',0,4
	.word	10325
	.byte	2,24,2,35,0,12
	.byte	'FUPD_CTRL4',0,4
	.word	10325
	.byte	2,22,2,35,0,12
	.byte	'FUPD_CTRL5',0,4
	.word	10325
	.byte	2,20,2,35,0,12
	.byte	'FUPD_CTRL6',0,4
	.word	10325
	.byte	2,18,2,35,0,12
	.byte	'FUPD_CTRL7',0,4
	.word	10325
	.byte	2,16,2,35,0,12
	.byte	'RSTCN0_CH0',0,4
	.word	10325
	.byte	2,14,2,35,0,12
	.byte	'RSTCN0_CH1',0,4
	.word	10325
	.byte	2,12,2,35,0,12
	.byte	'RSTCN0_CH2',0,4
	.word	10325
	.byte	2,10,2,35,0,12
	.byte	'RSTCN0_CH3',0,4
	.word	10325
	.byte	2,8,2,35,0,12
	.byte	'RSTCN0_CH4',0,4
	.word	10325
	.byte	2,6,2,35,0,12
	.byte	'RSTCN0_CH5',0,4
	.word	10325
	.byte	2,4,2,35,0,12
	.byte	'RSTCN0_CH6',0,4
	.word	10325
	.byte	2,2,2,35,0,12
	.byte	'RSTCN0_CH7',0,4
	.word	10325
	.byte	2,0,2,35,0,0,13,10,248,34,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	15515
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_AGC_INT_TRIG_Bits',0,10,182,2,16,4,12
	.byte	'INT_TRIG0',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'INT_TRIG1',0,4
	.word	10325
	.byte	2,28,2,35,0,12
	.byte	'INT_TRIG2',0,4
	.word	10325
	.byte	2,26,2,35,0,12
	.byte	'INT_TRIG3',0,4
	.word	10325
	.byte	2,24,2,35,0,12
	.byte	'INT_TRIG4',0,4
	.word	10325
	.byte	2,22,2,35,0,12
	.byte	'INT_TRIG5',0,4
	.word	10325
	.byte	2,20,2,35,0,12
	.byte	'INT_TRIG6',0,4
	.word	10325
	.byte	2,18,2,35,0,12
	.byte	'INT_TRIG7',0,4
	.word	10325
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10325
	.byte	16,0,2,35,0,0,13,10,136,35,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	15947
	.byte	4,2,35,0,0,15,32
	.word	508
	.byte	16,31,0,11
	.byte	'_Ifx_GTM_ATOM_AGC',0,10,160,55,25,64,14
	.byte	'GLB_CTRL',0
	.word	14167
	.byte	4,2,35,0,14
	.byte	'ENDIS_CTRL',0
	.word	14455
	.byte	4,2,35,4,14
	.byte	'ENDIS_STAT',0
	.word	14743
	.byte	4,2,35,8,14
	.byte	'ACT_TB',0
	.word	14899
	.byte	4,2,35,12,14
	.byte	'OUTEN_CTRL',0
	.word	15187
	.byte	4,2,35,16,14
	.byte	'OUTEN_STAT',0
	.word	15475
	.byte	4,2,35,20,14
	.byte	'FUPD_CTRL',0
	.word	15907
	.byte	4,2,35,24,14
	.byte	'INT_TRIG',0
	.word	16177
	.byte	4,2,35,28,14
	.byte	'reserved_20',0
	.word	16217
	.byte	32,2,35,32,0,10
	.word	16226
	.byte	10
	.word	13518
	.byte	15,64
	.word	508
	.byte	16,63,0,10
	.word	13518
	.byte	10
	.word	13518
	.byte	10
	.word	13518
	.byte	10
	.word	13518
	.byte	10
	.word	13518
	.byte	10
	.word	13518
	.byte	15,192,8
	.word	508
	.byte	16,191,8,0,11
	.byte	'_Ifx_GTM_ATOM',0,10,166,57,25,128,16,14
	.byte	'CH0',0
	.word	13752
	.byte	64,2,35,0,14
	.byte	'AGC',0
	.word	16423
	.byte	64,2,35,64,14
	.byte	'CH1',0
	.word	16428
	.byte	64,3,35,128,1,14
	.byte	'reserved_C0',0
	.word	16433
	.byte	64,3,35,192,1,14
	.byte	'CH2',0
	.word	16442
	.byte	64,3,35,128,2,14
	.byte	'reserved_140',0
	.word	16433
	.byte	64,3,35,192,2,14
	.byte	'CH3',0
	.word	16447
	.byte	64,3,35,128,3,14
	.byte	'reserved_1C0',0
	.word	16433
	.byte	64,3,35,192,3,14
	.byte	'CH4',0
	.word	16452
	.byte	64,3,35,128,4,14
	.byte	'reserved_240',0
	.word	16433
	.byte	64,3,35,192,4,14
	.byte	'CH5',0
	.word	16457
	.byte	64,3,35,128,5,14
	.byte	'reserved_2C0',0
	.word	16433
	.byte	64,3,35,192,5,14
	.byte	'CH6',0
	.word	16462
	.byte	64,3,35,128,6,14
	.byte	'reserved_340',0
	.word	16433
	.byte	64,3,35,192,6,14
	.byte	'CH7',0
	.word	16467
	.byte	64,3,35,128,7,14
	.byte	'reserved_3C0',0
	.word	16472
	.byte	192,8,3,35,192,7,0,10
	.word	16483
	.byte	3
	.word	16790
	.byte	17,11,222,1,9,1,18
	.byte	'IfxGtm_Atom_Ch_none',0,127,18
	.byte	'IfxGtm_Atom_Ch_0',0,0,18
	.byte	'IfxGtm_Atom_Ch_1',0,1,18
	.byte	'IfxGtm_Atom_Ch_2',0,2,18
	.byte	'IfxGtm_Atom_Ch_3',0,3,18
	.byte	'IfxGtm_Atom_Ch_4',0,4,18
	.byte	'IfxGtm_Atom_Ch_5',0,5,18
	.byte	'IfxGtm_Atom_Ch_6',0,6,18
	.byte	'IfxGtm_Atom_Ch_7',0,7,0,8
	.byte	'IfxGtm_Atom_Ch_getChannelPointer',0,3,9,204,4,29
	.word	13747
	.byte	1,1,5
	.byte	'atom',0,9,204,4,76
	.word	16795
	.byte	5
	.byte	'channel',0,9,204,4,97
	.word	16800
	.byte	6,0,17,13,116,9,1,18
	.byte	'Ifx_ActiveState_low',0,0,18
	.byte	'Ifx_ActiveState_high',0,1,0
.L313:
	.byte	8
	.byte	'IfxGtm_Tom_PwmHl_invertActiveState',0,3,12,141,1,28
	.word	17059
	.byte	1,1
.L316:
	.byte	5
	.byte	'activeState',0,12,141,1,79
	.word	17059
.L318:
	.byte	6,0,24
	.word	501
	.byte	25
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,21
	.word	17180
	.byte	0,10
	.word	311
	.byte	3
	.word	311
	.byte	26
	.byte	'__cmpswapw',0
	.word	17222
	.byte	1,1,1,1,27
	.byte	'p',0
	.word	17227
	.byte	27
	.byte	'value',0
	.word	311
	.byte	27
	.byte	'compare',0
	.word	311
	.byte	0,28
	.word	189
	.byte	29
	.word	215
	.byte	6,0,28
	.word	250
	.byte	29
	.word	282
	.byte	6,0,28
	.word	327
	.byte	29
	.word	344
	.byte	29
	.word	360
	.byte	29
	.word	373
	.byte	6,0,28
	.word	420
	.byte	29
	.word	439
	.byte	6,0,28
	.word	455
	.byte	29
	.word	470
	.byte	29
	.word	484
	.byte	6,0,28
	.word	864
	.byte	29
	.word	892
	.byte	6,0,28
	.word	8790
	.byte	29
	.word	8818
	.byte	29
	.word	8832
	.byte	29
	.word	8850
	.byte	6,0,28
	.word	10034
	.byte	29
	.word	10079
	.byte	6,0,28
	.word	10181
	.byte	29
	.word	10216
	.byte	29
	.word	10235
	.byte	6,0,28
	.word	10252
	.byte	29
	.word	10287
	.byte	29
	.word	10306
	.byte	6,0,17,5,134,1,9,1,18
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,18
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,17,5,144,1,9,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,18
	.byte	'IfxPort_PadDriver_lvdsSpeed1',0,4,18
	.byte	'IfxPort_PadDriver_lvdsSpeed2',0,5,18
	.byte	'IfxPort_PadDriver_lvdsSpeed3',0,6,18
	.byte	'IfxPort_PadDriver_lvdsSpeed4',0,7,18
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,18
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,18
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,18
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,0,30,14,195,1,9,16,14
	.byte	'deadtime',0
	.word	241
	.byte	4,2,35,0,14
	.byte	'minPulse',0
	.word	241
	.byte	4,2,35,4,14
	.byte	'channelCount',0
	.word	508
	.byte	1,2,35,8,14
	.byte	'emergencyEnabled',0
	.word	508
	.byte	1,2,35,9,14
	.byte	'outputMode',0
	.word	17439
	.byte	1,2,35,10,14
	.byte	'outputDriver',0
	.word	17509
	.byte	1,2,35,11,14
	.byte	'ccxActiveState',0
	.word	17059
	.byte	1,2,35,12,14
	.byte	'coutxActiveState',0
	.word	17059
	.byte	1,2,35,13,0,3
	.word	17924
	.byte	31
	.byte	'IfxStdIf_PwmHl_initConfig',0,14,192,2,17,1,1,1,1,5
	.byte	'config',0,14,192,2,66
	.word	18107
	.byte	0,28
	.word	16981
	.byte	29
	.word	17026
	.byte	29
	.word	17040
	.byte	6,0
.L309:
	.byte	17,15,84,9,1,18
	.byte	'IfxGtm_Tom_Ch_ClkSrc_cmuFxclk0',0,0,18
	.byte	'IfxGtm_Tom_Ch_ClkSrc_cmuFxclk1',0,1,18
	.byte	'IfxGtm_Tom_Ch_ClkSrc_cmuFxclk2',0,2,18
	.byte	'IfxGtm_Tom_Ch_ClkSrc_cmuFxclk3',0,3,18
	.byte	'IfxGtm_Tom_Ch_ClkSrc_cmuFxclk4',0,4,18
	.byte	'IfxGtm_Tom_Ch_ClkSrc_noClock',0,5,0,11
	.byte	'_Ifx_GTM_TOM_CH_CTRL_Bits',0,10,249,30,16,4,12
	.byte	'reserved_0',0,4
	.word	10325
	.byte	11,21,2,35,0,12
	.byte	'SL',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'CLK_SRC_SR',0,4
	.word	10325
	.byte	3,17,2,35,0,12
	.byte	'reserved_15',0,4
	.word	10325
	.byte	5,12,2,35,0,12
	.byte	'RST_CCU0',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	10325
	.byte	3,8,2,35,0,12
	.byte	'TRIGOUT',0,4
	.word	10325
	.byte	1,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	10325
	.byte	1,6,2,35,0,12
	.byte	'OSM',0,4
	.word	10325
	.byte	1,5,2,35,0,12
	.byte	'BITREV',0,4
	.word	10325
	.byte	1,4,2,35,0,12
	.byte	'SPEM',0,4
	.word	10325
	.byte	1,3,2,35,0,12
	.byte	'GCM',0,4
	.word	10325
	.byte	1,2,2,35,0,12
	.byte	'reserved_30',0,4
	.word	10325
	.byte	2,0,2,35,0,0,13,10,201,53,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	18383
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_SR0_Bits',0,10,170,31,16,4,12
	.byte	'SR0',0,4
	.word	10325
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10325
	.byte	16,0,2,35,0,0,13,10,241,53,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	18709
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_SR1_Bits',0,10,177,31,16,4,12
	.byte	'SR1',0,4
	.word	10325
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10325
	.byte	16,0,2,35,0,0,13,10,249,53,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	18819
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_CM0_Bits',0,10,228,30,16,4,12
	.byte	'CM0',0,4
	.word	10325
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10325
	.byte	16,0,2,35,0,0,13,10,177,53,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	18929
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_CM1_Bits',0,10,235,30,16,4,12
	.byte	'CM1',0,4
	.word	10325
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10325
	.byte	16,0,2,35,0,0,13,10,185,53,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	19039
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_CN0_Bits',0,10,242,30,16,4,12
	.byte	'CN0',0,4
	.word	10325
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10325
	.byte	16,0,2,35,0,0,13,10,193,53,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	19149
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_STAT_Bits',0,10,184,31,16,4,12
	.byte	'OL',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	10325
	.byte	31,0,2,35,0,0,13,10,129,54,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	19259
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_IRQ_NOTIFY_Bits',0,10,162,31,16,4,12
	.byte	'CCU0TC',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'CCU1TC',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10325
	.byte	30,0,2,35,0,0,13,10,233,53,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	19368
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_IRQ_EN_Bits',0,10,139,31,16,4,12
	.byte	'CCU0TC_IRQ_EN',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'CCU1TC_IRQ_EN',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10325
	.byte	30,0,2,35,0,0,13,10,209,53,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	19505
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_IRQ_FORCINT_Bits',0,10,147,31,16,4,12
	.byte	'TRG_CCU0TC0',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'TRG_CCU1TC0',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10325
	.byte	30,0,2,35,0,0,13,10,217,53,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	19652
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_IRQ_MODE_Bits',0,10,155,31,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10325
	.byte	30,0,2,35,0,0,13,10,225,53,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	19800
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH',0,10,243,56,25,48,14
	.byte	'CTRL',0
	.word	18669
	.byte	4,2,35,0,14
	.byte	'SR0',0
	.word	18779
	.byte	4,2,35,4,14
	.byte	'SR1',0
	.word	18889
	.byte	4,2,35,8,14
	.byte	'CM0',0
	.word	18999
	.byte	4,2,35,12,14
	.byte	'CM1',0
	.word	19109
	.byte	4,2,35,16,14
	.byte	'CN0',0
	.word	19219
	.byte	4,2,35,20,14
	.byte	'STAT',0
	.word	19328
	.byte	4,2,35,24,14
	.byte	'IRQ_NOTIFY',0
	.word	19465
	.byte	4,2,35,28,14
	.byte	'IRQ_EN',0
	.word	19612
	.byte	4,2,35,32,14
	.byte	'IRQ_FORCINT',0
	.word	19760
	.byte	4,2,35,36,14
	.byte	'IRQ_MODE',0
	.word	19879
	.byte	4,2,35,40,14
	.byte	'reserved_2C',0
	.word	1935
	.byte	4,2,35,44,0,10
	.word	19919
	.byte	11
	.byte	'_Ifx_GTM_TOM_TGC0_GLB_CTRL_Bits',0,10,249,31,16,4,12
	.byte	'HOST_TRIG',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	10325
	.byte	7,24,2,35,0,12
	.byte	'RST_CH0',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'RST_CH1',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'RST_CH2',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'RST_CH3',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'RST_CH4',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'RST_CH5',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'RST_CH6',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'RST_CH7',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'UPEN_CTRL0',0,4
	.word	10325
	.byte	2,14,2,35,0,12
	.byte	'UPEN_CTRL1',0,4
	.word	10325
	.byte	2,12,2,35,0,12
	.byte	'UPEN_CTRL2',0,4
	.word	10325
	.byte	2,10,2,35,0,12
	.byte	'UPEN_CTRL3',0,4
	.word	10325
	.byte	2,8,2,35,0,12
	.byte	'UPEN_CTRL4',0,4
	.word	10325
	.byte	2,6,2,35,0,12
	.byte	'UPEN_CTRL5',0,4
	.word	10325
	.byte	2,4,2,35,0,12
	.byte	'UPEN_CTRL6',0,4
	.word	10325
	.byte	2,2,2,35,0,12
	.byte	'UPEN_CTRL7',0,4
	.word	10325
	.byte	2,0,2,35,0,0,13,10,169,54,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	20136
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC0_ACT_TB_Bits',0,10,191,31,16,4,12
	.byte	'ACT_TB',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'TB_TRIG',0,4
	.word	10325
	.byte	1,7,2,35,0,12
	.byte	'TBU_SEL',0,4
	.word	10325
	.byte	2,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	10325
	.byte	5,0,2,35,0,0,13,10,137,54,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	20586
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC0_FUPD_CTRL_Bits',0,10,228,31,16,4,12
	.byte	'FUPD_CTRL0',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'FUPD_CTRL1',0,4
	.word	10325
	.byte	2,28,2,35,0,12
	.byte	'FUPD_CTRL2',0,4
	.word	10325
	.byte	2,26,2,35,0,12
	.byte	'FUPD_CTRL3',0,4
	.word	10325
	.byte	2,24,2,35,0,12
	.byte	'FUPD_CTRL4',0,4
	.word	10325
	.byte	2,22,2,35,0,12
	.byte	'FUPD_CTRL5',0,4
	.word	10325
	.byte	2,20,2,35,0,12
	.byte	'FUPD_CTRL6',0,4
	.word	10325
	.byte	2,18,2,35,0,12
	.byte	'FUPD_CTRL7',0,4
	.word	10325
	.byte	2,16,2,35,0,12
	.byte	'RSTCN0_CH0',0,4
	.word	10325
	.byte	2,14,2,35,0,12
	.byte	'RSTCN0_CH1',0,4
	.word	10325
	.byte	2,12,2,35,0,12
	.byte	'RSTCN0_CH2',0,4
	.word	10325
	.byte	2,10,2,35,0,12
	.byte	'RSTCN0_CH3',0,4
	.word	10325
	.byte	2,8,2,35,0,12
	.byte	'RSTCN0_CH4',0,4
	.word	10325
	.byte	2,6,2,35,0,12
	.byte	'RSTCN0_CH5',0,4
	.word	10325
	.byte	2,4,2,35,0,12
	.byte	'RSTCN0_CH6',0,4
	.word	10325
	.byte	2,2,2,35,0,12
	.byte	'RSTCN0_CH7',0,4
	.word	10325
	.byte	2,0,2,35,0,0,13,10,161,54,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	20742
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC0_INT_TRIG_Bits',0,10,144,32,16,4,12
	.byte	'INT_TRIG0',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'INT_TRIG1',0,4
	.word	10325
	.byte	2,28,2,35,0,12
	.byte	'INT_TRIG2',0,4
	.word	10325
	.byte	2,26,2,35,0,12
	.byte	'INT_TRIG3',0,4
	.word	10325
	.byte	2,24,2,35,0,12
	.byte	'INT_TRIG4',0,4
	.word	10325
	.byte	2,22,2,35,0,12
	.byte	'INT_TRIG5',0,4
	.word	10325
	.byte	2,20,2,35,0,12
	.byte	'INT_TRIG6',0,4
	.word	10325
	.byte	2,18,2,35,0,12
	.byte	'INT_TRIG7',0,4
	.word	10325
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10325
	.byte	16,0,2,35,0,0,13,10,177,54,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	21174
	.byte	4,2,35,0,0,10
	.word	19919
	.byte	11
	.byte	'_Ifx_GTM_TOM_TGC0_ENDIS_CTRL_Bits',0,10,200,31,16,4,12
	.byte	'ENDIS_CTRL0',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'ENDIS_CTRL1',0,4
	.word	10325
	.byte	2,28,2,35,0,12
	.byte	'ENDIS_CTRL2',0,4
	.word	10325
	.byte	2,26,2,35,0,12
	.byte	'ENDIS_CTRL3',0,4
	.word	10325
	.byte	2,24,2,35,0,12
	.byte	'ENDIS_CTRL4',0,4
	.word	10325
	.byte	2,22,2,35,0,12
	.byte	'ENDIS_CTRL5',0,4
	.word	10325
	.byte	2,20,2,35,0,12
	.byte	'ENDIS_CTRL6',0,4
	.word	10325
	.byte	2,18,2,35,0,12
	.byte	'ENDIS_CTRL7',0,4
	.word	10325
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10325
	.byte	16,0,2,35,0,0,13,10,145,54,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	21449
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC0_ENDIS_STAT_Bits',0,10,214,31,16,4,12
	.byte	'ENDIS_STAT0',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'ENDIS_STAT1',0,4
	.word	10325
	.byte	2,28,2,35,0,12
	.byte	'ENDIS_STAT2',0,4
	.word	10325
	.byte	2,26,2,35,0,12
	.byte	'ENDIS_STAT3',0,4
	.word	10325
	.byte	2,24,2,35,0,12
	.byte	'ENDIS_STAT4',0,4
	.word	10325
	.byte	2,22,2,35,0,12
	.byte	'ENDIS_STAT5',0,4
	.word	10325
	.byte	2,20,2,35,0,12
	.byte	'ENDIS_STAT6',0,4
	.word	10325
	.byte	2,18,2,35,0,12
	.byte	'ENDIS_STAT7',0,4
	.word	10325
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10325
	.byte	16,0,2,35,0,0,13,10,153,54,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	21737
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC0_OUTEN_CTRL_Bits',0,10,158,32,16,4,12
	.byte	'OUTEN_CTRL0',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'OUTEN_CTRL1',0,4
	.word	10325
	.byte	2,28,2,35,0,12
	.byte	'OUTEN_CTRL2',0,4
	.word	10325
	.byte	2,26,2,35,0,12
	.byte	'OUTEN_CTRL3',0,4
	.word	10325
	.byte	2,24,2,35,0,12
	.byte	'OUTEN_CTRL4',0,4
	.word	10325
	.byte	2,22,2,35,0,12
	.byte	'OUTEN_CTRL5',0,4
	.word	10325
	.byte	2,20,2,35,0,12
	.byte	'OUTEN_CTRL6',0,4
	.word	10325
	.byte	2,18,2,35,0,12
	.byte	'OUTEN_CTRL7',0,4
	.word	10325
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10325
	.byte	16,0,2,35,0,0,13,10,185,54,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	22025
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC0_OUTEN_STAT_Bits',0,10,172,32,16,4,12
	.byte	'OUTEN_STAT0',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'OUTEN_STAT1',0,4
	.word	10325
	.byte	2,28,2,35,0,12
	.byte	'OUTEN_STAT2',0,4
	.word	10325
	.byte	2,26,2,35,0,12
	.byte	'OUTEN_STAT3',0,4
	.word	10325
	.byte	2,24,2,35,0,12
	.byte	'OUTEN_STAT4',0,4
	.word	10325
	.byte	2,22,2,35,0,12
	.byte	'OUTEN_STAT5',0,4
	.word	10325
	.byte	2,20,2,35,0,12
	.byte	'OUTEN_STAT6',0,4
	.word	10325
	.byte	2,18,2,35,0,12
	.byte	'OUTEN_STAT7',0,4
	.word	10325
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10325
	.byte	16,0,2,35,0,0,13,10,193,54,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	22313
	.byte	4,2,35,0,0,10
	.word	19919
	.byte	10
	.word	19919
	.byte	10
	.word	19919
	.byte	10
	.word	19919
	.byte	10
	.word	19919
	.byte	10
	.word	19919
	.byte	10
	.word	19919
	.byte	11
	.byte	'_Ifx_GTM_TOM_TGC1_GLB_CTRL_Bits',0,10,244,32,16,4,12
	.byte	'HOST_TRIG',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	10325
	.byte	7,24,2,35,0,12
	.byte	'RST_CH0',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'RST_CH1',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'RST_CH2',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'RST_CH3',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'RST_CH4',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'RST_CH5',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'RST_CH6',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'RST_CH7',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'UPEN_CTRL0',0,4
	.word	10325
	.byte	2,14,2,35,0,12
	.byte	'UPEN_CTRL1',0,4
	.word	10325
	.byte	2,12,2,35,0,12
	.byte	'UPEN_CTRL2',0,4
	.word	10325
	.byte	2,10,2,35,0,12
	.byte	'UPEN_CTRL3',0,4
	.word	10325
	.byte	2,8,2,35,0,12
	.byte	'UPEN_CTRL4',0,4
	.word	10325
	.byte	2,6,2,35,0,12
	.byte	'UPEN_CTRL5',0,4
	.word	10325
	.byte	2,4,2,35,0,12
	.byte	'UPEN_CTRL6',0,4
	.word	10325
	.byte	2,2,2,35,0,12
	.byte	'UPEN_CTRL7',0,4
	.word	10325
	.byte	2,0,2,35,0,0,13,10,233,54,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	22636
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC1_ACT_TB_Bits',0,10,186,32,16,4,12
	.byte	'ACT_TB',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'TB_TRIG',0,4
	.word	10325
	.byte	1,7,2,35,0,12
	.byte	'TBU_SEL',0,4
	.word	10325
	.byte	2,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	10325
	.byte	5,0,2,35,0,0,13,10,201,54,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	23086
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC1_FUPD_CTRL_Bits',0,10,223,32,16,4,12
	.byte	'FUPD_CTRL0',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'FUPD_CTRL1',0,4
	.word	10325
	.byte	2,28,2,35,0,12
	.byte	'FUPD_CTRL2',0,4
	.word	10325
	.byte	2,26,2,35,0,12
	.byte	'FUPD_CTRL3',0,4
	.word	10325
	.byte	2,24,2,35,0,12
	.byte	'FUPD_CTRL4',0,4
	.word	10325
	.byte	2,22,2,35,0,12
	.byte	'FUPD_CTRL5',0,4
	.word	10325
	.byte	2,20,2,35,0,12
	.byte	'FUPD_CTRL6',0,4
	.word	10325
	.byte	2,18,2,35,0,12
	.byte	'FUPD_CTRL7',0,4
	.word	10325
	.byte	2,16,2,35,0,12
	.byte	'RSTCN0_CH0',0,4
	.word	10325
	.byte	2,14,2,35,0,12
	.byte	'RSTCN0_CH1',0,4
	.word	10325
	.byte	2,12,2,35,0,12
	.byte	'RSTCN0_CH2',0,4
	.word	10325
	.byte	2,10,2,35,0,12
	.byte	'RSTCN0_CH3',0,4
	.word	10325
	.byte	2,8,2,35,0,12
	.byte	'RSTCN0_CH4',0,4
	.word	10325
	.byte	2,6,2,35,0,12
	.byte	'RSTCN0_CH5',0,4
	.word	10325
	.byte	2,4,2,35,0,12
	.byte	'RSTCN0_CH6',0,4
	.word	10325
	.byte	2,2,2,35,0,12
	.byte	'RSTCN0_CH7',0,4
	.word	10325
	.byte	2,0,2,35,0,0,13,10,225,54,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	23242
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC1_INT_TRIG_Bits',0,10,139,33,16,4,12
	.byte	'INT_TRIG0',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'INT_TRIG1',0,4
	.word	10325
	.byte	2,28,2,35,0,12
	.byte	'INT_TRIG2',0,4
	.word	10325
	.byte	2,26,2,35,0,12
	.byte	'INT_TRIG3',0,4
	.word	10325
	.byte	2,24,2,35,0,12
	.byte	'INT_TRIG4',0,4
	.word	10325
	.byte	2,22,2,35,0,12
	.byte	'INT_TRIG5',0,4
	.word	10325
	.byte	2,20,2,35,0,12
	.byte	'INT_TRIG6',0,4
	.word	10325
	.byte	2,18,2,35,0,12
	.byte	'INT_TRIG7',0,4
	.word	10325
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10325
	.byte	16,0,2,35,0,0,13,10,241,54,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	23674
	.byte	4,2,35,0,0,10
	.word	19919
	.byte	11
	.byte	'_Ifx_GTM_TOM_TGC1_ENDIS_CTRL_Bits',0,10,195,32,16,4,12
	.byte	'ENDIS_CTRL0',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'ENDIS_CTRL1',0,4
	.word	10325
	.byte	2,28,2,35,0,12
	.byte	'ENDIS_CTRL2',0,4
	.word	10325
	.byte	2,26,2,35,0,12
	.byte	'ENDIS_CTRL3',0,4
	.word	10325
	.byte	2,24,2,35,0,12
	.byte	'ENDIS_CTRL4',0,4
	.word	10325
	.byte	2,22,2,35,0,12
	.byte	'ENDIS_CTRL5',0,4
	.word	10325
	.byte	2,20,2,35,0,12
	.byte	'ENDIS_CTRL6',0,4
	.word	10325
	.byte	2,18,2,35,0,12
	.byte	'ENDIS_CTRL7',0,4
	.word	10325
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10325
	.byte	16,0,2,35,0,0,13,10,209,54,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	23949
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC1_ENDIS_STAT_Bits',0,10,209,32,16,4,12
	.byte	'ENDIS_STAT0',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'ENDIS_STAT1',0,4
	.word	10325
	.byte	2,28,2,35,0,12
	.byte	'ENDIS_STAT2',0,4
	.word	10325
	.byte	2,26,2,35,0,12
	.byte	'ENDIS_STAT3',0,4
	.word	10325
	.byte	2,24,2,35,0,12
	.byte	'ENDIS_STAT4',0,4
	.word	10325
	.byte	2,22,2,35,0,12
	.byte	'ENDIS_STAT5',0,4
	.word	10325
	.byte	2,20,2,35,0,12
	.byte	'ENDIS_STAT6',0,4
	.word	10325
	.byte	2,18,2,35,0,12
	.byte	'ENDIS_STAT7',0,4
	.word	10325
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10325
	.byte	16,0,2,35,0,0,13,10,217,54,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	24237
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC1_OUTEN_CTRL_Bits',0,10,153,33,16,4,12
	.byte	'OUTEN_CTRL0',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'OUTEN_CTRL1',0,4
	.word	10325
	.byte	2,28,2,35,0,12
	.byte	'OUTEN_CTRL2',0,4
	.word	10325
	.byte	2,26,2,35,0,12
	.byte	'OUTEN_CTRL3',0,4
	.word	10325
	.byte	2,24,2,35,0,12
	.byte	'OUTEN_CTRL4',0,4
	.word	10325
	.byte	2,22,2,35,0,12
	.byte	'OUTEN_CTRL5',0,4
	.word	10325
	.byte	2,20,2,35,0,12
	.byte	'OUTEN_CTRL6',0,4
	.word	10325
	.byte	2,18,2,35,0,12
	.byte	'OUTEN_CTRL7',0,4
	.word	10325
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10325
	.byte	16,0,2,35,0,0,13,10,249,54,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	24525
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC1_OUTEN_STAT_Bits',0,10,167,33,16,4,12
	.byte	'OUTEN_STAT0',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'OUTEN_STAT1',0,4
	.word	10325
	.byte	2,28,2,35,0,12
	.byte	'OUTEN_STAT2',0,4
	.word	10325
	.byte	2,26,2,35,0,12
	.byte	'OUTEN_STAT3',0,4
	.word	10325
	.byte	2,24,2,35,0,12
	.byte	'OUTEN_STAT4',0,4
	.word	10325
	.byte	2,22,2,35,0,12
	.byte	'OUTEN_STAT5',0,4
	.word	10325
	.byte	2,20,2,35,0,12
	.byte	'OUTEN_STAT6',0,4
	.word	10325
	.byte	2,18,2,35,0,12
	.byte	'OUTEN_STAT7',0,4
	.word	10325
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10325
	.byte	16,0,2,35,0,0,13,10,129,55,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	24813
	.byte	4,2,35,0,0,10
	.word	19919
	.byte	10
	.word	19919
	.byte	10
	.word	19919
	.byte	10
	.word	19919
	.byte	10
	.word	19919
	.byte	10
	.word	19919
	.byte	15,144,8
	.word	508
	.byte	16,143,8,0,11
	.byte	'_Ifx_GTM_TOM',0,10,131,60,25,128,16,14
	.byte	'CH0',0
	.word	20131
	.byte	48,2,35,0,14
	.byte	'TGC0_GLB_CTRL',0
	.word	20546
	.byte	4,2,35,48,14
	.byte	'TGC0_ACT_TB',0
	.word	20702
	.byte	4,2,35,52,14
	.byte	'TGC0_FUPD_CTRL',0
	.word	21134
	.byte	4,2,35,56,14
	.byte	'TGC0_INT_TRIG',0
	.word	21404
	.byte	4,2,35,60,14
	.byte	'CH1',0
	.word	21444
	.byte	48,2,35,64,14
	.byte	'TGC0_ENDIS_CTRL',0
	.word	21697
	.byte	4,2,35,112,14
	.byte	'TGC0_ENDIS_STAT',0
	.word	21985
	.byte	4,2,35,116,14
	.byte	'TGC0_OUTEN_CTRL',0
	.word	22273
	.byte	4,2,35,120,14
	.byte	'TGC0_OUTEN_STAT',0
	.word	22561
	.byte	4,2,35,124,14
	.byte	'CH2',0
	.word	22601
	.byte	48,3,35,128,1,14
	.byte	'reserved_B0',0
	.word	13509
	.byte	16,3,35,176,1,14
	.byte	'CH3',0
	.word	22606
	.byte	48,3,35,192,1,14
	.byte	'reserved_F0',0
	.word	13509
	.byte	16,3,35,240,1,14
	.byte	'CH4',0
	.word	22611
	.byte	48,3,35,128,2,14
	.byte	'reserved_130',0
	.word	13509
	.byte	16,3,35,176,2,14
	.byte	'CH5',0
	.word	22616
	.byte	48,3,35,192,2,14
	.byte	'reserved_170',0
	.word	13509
	.byte	16,3,35,240,2,14
	.byte	'CH6',0
	.word	22621
	.byte	48,3,35,128,3,14
	.byte	'reserved_1B0',0
	.word	13509
	.byte	16,3,35,176,3,14
	.byte	'CH7',0
	.word	22626
	.byte	48,3,35,192,3,14
	.byte	'reserved_1F0',0
	.word	13509
	.byte	16,3,35,240,3,14
	.byte	'CH8',0
	.word	22631
	.byte	48,3,35,128,4,14
	.byte	'TGC1_GLB_CTRL',0
	.word	23046
	.byte	4,3,35,176,4,14
	.byte	'TGC1_ACT_TB',0
	.word	23202
	.byte	4,3,35,180,4,14
	.byte	'TGC1_FUPD_CTRL',0
	.word	23634
	.byte	4,3,35,184,4,14
	.byte	'TGC1_INT_TRIG',0
	.word	23904
	.byte	4,3,35,188,4,14
	.byte	'CH9',0
	.word	23944
	.byte	48,3,35,192,4,14
	.byte	'TGC1_ENDIS_CTRL',0
	.word	24197
	.byte	4,3,35,240,4,14
	.byte	'TGC1_ENDIS_STAT',0
	.word	24485
	.byte	4,3,35,244,4,14
	.byte	'TGC1_OUTEN_CTRL',0
	.word	24773
	.byte	4,3,35,248,4,14
	.byte	'TGC1_OUTEN_STAT',0
	.word	25061
	.byte	4,3,35,252,4,14
	.byte	'CH10',0
	.word	25101
	.byte	48,3,35,128,5,14
	.byte	'reserved_2B0',0
	.word	13509
	.byte	16,3,35,176,5,14
	.byte	'CH11',0
	.word	25106
	.byte	48,3,35,192,5,14
	.byte	'reserved_2F0',0
	.word	13509
	.byte	16,3,35,240,5,14
	.byte	'CH12',0
	.word	25111
	.byte	48,3,35,128,6,14
	.byte	'reserved_330',0
	.word	13509
	.byte	16,3,35,176,6,14
	.byte	'CH13',0
	.word	25116
	.byte	48,3,35,192,6,14
	.byte	'reserved_370',0
	.word	13509
	.byte	16,3,35,240,6,14
	.byte	'CH14',0
	.word	25121
	.byte	48,3,35,128,7,14
	.byte	'reserved_3B0',0
	.word	13509
	.byte	16,3,35,176,7,14
	.byte	'CH15',0
	.word	25126
	.byte	48,3,35,192,7,14
	.byte	'reserved_3F0',0
	.word	25131
	.byte	144,8,3,35,240,7,0,10
	.word	25142
	.byte	3
	.word	26056
.L311:
	.byte	17,11,158,2,9,1,18
	.byte	'IfxGtm_Tom_Ch_none',0,127,18
	.byte	'IfxGtm_Tom_Ch_0',0,0,18
	.byte	'IfxGtm_Tom_Ch_1',0,1,18
	.byte	'IfxGtm_Tom_Ch_2',0,2,18
	.byte	'IfxGtm_Tom_Ch_3',0,3,18
	.byte	'IfxGtm_Tom_Ch_4',0,4,18
	.byte	'IfxGtm_Tom_Ch_5',0,5,18
	.byte	'IfxGtm_Tom_Ch_6',0,6,18
	.byte	'IfxGtm_Tom_Ch_7',0,7,18
	.byte	'IfxGtm_Tom_Ch_8',0,8,18
	.byte	'IfxGtm_Tom_Ch_9',0,9,18
	.byte	'IfxGtm_Tom_Ch_10',0,10,18
	.byte	'IfxGtm_Tom_Ch_11',0,11,18
	.byte	'IfxGtm_Tom_Ch_12',0,12,18
	.byte	'IfxGtm_Tom_Ch_13',0,13,18
	.byte	'IfxGtm_Tom_Ch_14',0,14,18
	.byte	'IfxGtm_Tom_Ch_15',0,15,0,32
	.byte	'IfxGtm_Tom_Ch_getClockSource',0,15,157,1,33
	.word	18181
	.byte	1,1,1,1,5
	.byte	'tom',0,15,157,1,75
	.word	26061
	.byte	5
	.byte	'channel',0,15,157,1,94
	.word	26066
	.byte	0,10
	.word	19919
	.byte	11
	.byte	'IfxGtm_Tom_TGC',0,11,197,2,8,80,14
	.byte	'GLB_CTRL',0
	.word	20546
	.byte	4,2,35,0,14
	.byte	'ACT_TB',0
	.word	20702
	.byte	4,2,35,4,14
	.byte	'FUPD_CTRL',0
	.word	21134
	.byte	4,2,35,8,14
	.byte	'INT_TRIG',0
	.word	21404
	.byte	4,2,35,12,14
	.byte	'xxxCH1',0
	.word	26461
	.byte	48,2,35,16,14
	.byte	'ENDIS_CTRL',0
	.word	21697
	.byte	4,2,35,64,14
	.byte	'ENDIS_STAT',0
	.word	21985
	.byte	4,2,35,68,14
	.byte	'OUTEN_CTRL',0
	.word	22273
	.byte	4,2,35,72,14
	.byte	'OUTEN_STAT',0
	.word	22561
	.byte	4,2,35,76,0,10
	.word	26466
	.byte	3
	.word	26655
	.byte	32
	.byte	'IfxGtm_Tom_Ch_getTgcPointer',0,15,207,1,29
	.word	26660
	.byte	1,1,1,1,5
	.byte	'tom',0,15,207,1,70
	.word	26061
	.byte	5
	.byte	'tgcIndex',0,15,207,1,82
	.word	8955
	.byte	0,31
	.byte	'IfxGtm_Tom_Ch_setClockSource',0,15,250,1,17,1,1,1,1,5
	.byte	'tom',0,15,250,1,59
	.word	26061
	.byte	5
	.byte	'channel',0,15,250,1,78
	.word	26066
	.byte	5
	.byte	'clock',0,15,250,1,108
	.word	18181
	.byte	0,31
	.byte	'IfxGtm_Tom_Ch_setCompareShadow',0,15,156,2,17,1,1,1,1,5
	.byte	'tom',0,15,156,2,61
	.word	26061
	.byte	5
	.byte	'channel',0,15,156,2,80
	.word	26066
	.byte	5
	.byte	'shadowZero',0,15,156,2,96
	.word	8955
	.byte	5
	.byte	'shadowOne',0,15,156,2,115
	.word	8955
	.byte	0,31
	.byte	'IfxGtm_Tom_Ch_setCounterValue',0,15,180,2,17,1,1,1,1,5
	.byte	'tom',0,15,180,2,60
	.word	26061
	.byte	5
	.byte	'channel',0,15,180,2,79
	.word	26066
	.byte	5
	.byte	'value',0,15,180,2,95
	.word	8955
	.byte	0,17,15,104,9,1,18
	.byte	'IfxGtm_Tom_Ch_ResetEvent_onCm0',0,0,18
	.byte	'IfxGtm_Tom_Ch_ResetEvent_onTrigger',0,1,0,31
	.byte	'IfxGtm_Tom_Ch_setResetSource',0,15,222,2,17,1,1,1,1,5
	.byte	'tom',0,15,222,2,59
	.word	26061
	.byte	5
	.byte	'channel',0,15,222,2,78
	.word	26066
	.byte	5
	.byte	'event',0,15,222,2,112
	.word	27017
	.byte	0,31
	.byte	'IfxGtm_Tom_Ch_setSignalLevel',0,15,230,2,17,1,1,1,1,5
	.byte	'tom',0,15,230,2,59
	.word	26061
	.byte	5
	.byte	'channel',0,15,230,2,78
	.word	26066
	.byte	5
	.byte	'activeState',0,15,230,2,103
	.word	17059
	.byte	0,17,15,96,9,1,18
	.byte	'IfxGtm_Tom_Ch_OutputTrigger_forward',0,0,18
	.byte	'IfxGtm_Tom_Ch_OutputTrigger_generate',0,1,0,31
	.byte	'IfxGtm_Tom_Ch_setTriggerOutput',0,15,246,2,17,1,1,1,1,5
	.byte	'tom',0,15,246,2,61
	.word	26061
	.byte	5
	.byte	'channel',0,15,246,2,80
	.word	26066
	.byte	5
	.byte	'trigger',0,15,246,2,117
	.word	27267
	.byte	0,31
	.byte	'IfxGtm_Tom_Tgc_enableChannels',0,15,189,3,17,1,1,1,1,5
	.byte	'tgc',0,15,189,3,64
	.word	26660
	.byte	5
	.byte	'enableMask',0,15,189,3,76
	.word	907
	.byte	5
	.byte	'disableMask',0,15,189,3,95
	.word	907
	.byte	5
	.byte	'immediate',0,15,189,3,116
	.word	508
	.byte	0,31
	.byte	'IfxGtm_Tom_Tgc_enableChannelsOutput',0,15,198,3,17,1,1,1,1,5
	.byte	'tgc',0,15,198,3,70
	.word	26660
	.byte	5
	.byte	'enableMask',0,15,198,3,82
	.word	907
	.byte	5
	.byte	'disableMask',0,15,198,3,101
	.word	907
	.byte	5
	.byte	'immediate',0,15,198,3,122
	.word	508
	.byte	0,31
	.byte	'IfxGtm_Tom_Tgc_setChannelsForceUpdate',0,15,247,3,17,1,1,1,1,5
	.byte	'tgc',0,15,247,3,72
	.word	26660
	.byte	5
	.byte	'enableMask',0,15,247,3,84
	.word	907
	.byte	5
	.byte	'disableMask',0,15,247,3,103
	.word	907
	.byte	5
	.byte	'resetEnableMask',0,15,247,3,123
	.word	907
	.byte	5
	.byte	'resetDisableMask',0,15,247,3,147,1
	.word	907
	.byte	0,31
	.byte	'IfxGtm_Tom_Tgc_trigger',0,15,133,4,17,1,1,1,1,5
	.byte	'tgc',0,15,133,4,57
	.word	26660
	.byte	0,17,11,150,2,9,1,18
	.byte	'IfxGtm_Tom_0',0,0,18
	.byte	'IfxGtm_Tom_1',0,1,0,17,16,86,9,1,18
	.byte	'IfxGtm_ToutSel_a',0,0,18
	.byte	'IfxGtm_ToutSel_b',0,1,18
	.byte	'IfxGtm_ToutSel_c',0,2,18
	.byte	'IfxGtm_ToutSel_d',0,3,18
	.byte	'IfxGtm_ToutSel_e',0,4,0,30,5,190,1,9,8,14
	.byte	'port',0
	.word	8682
	.byte	4,2,35,0,14
	.byte	'pinIndex',0
	.word	508
	.byte	1,2,35,4,0,17,5,120,9,1,18
	.byte	'IfxPort_OutputIdx_general',0,128,1,18
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,18
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,18
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,18
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,18
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,18
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,18
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,30,16,119,15,20,14
	.byte	'tom',0
	.word	27870
	.byte	1,2,35,0,14
	.byte	'channel',0
	.word	26066
	.byte	1,2,35,1,14
	.byte	'toutSel',0
	.word	27907
	.byte	1,2,35,2,14
	.byte	'toutn',0
	.word	8955
	.byte	4,2,35,4,14
	.byte	'pin',0
	.word	28008
	.byte	8,2,35,8,14
	.byte	'select',0
	.word	28047
	.byte	1,2,35,16,0,24
	.word	28264
	.byte	3
	.word	28361
	.byte	31
	.byte	'IfxGtm_PinMap_setTomTout',0,16,142,1,17,1,1,1,1,5
	.byte	'config',0,16,142,1,62
	.word	28366
	.byte	5
	.byte	'outputMode',0,16,142,1,89
	.word	17439
	.byte	5
	.byte	'padDriver',0,16,142,1,119
	.word	17509
	.byte	0,17,7,88,9,1,18
	.byte	'IfxStdIf_Timer_CountDir_up',0,0,18
	.byte	'IfxStdIf_Timer_CountDir_upAndDown',0,1,18
	.byte	'IfxStdIf_Timer_CountDir_down',0,2,0,30,17,149,1,9,12,14
	.byte	'period',0
	.word	8955
	.byte	4,2,35,0,14
	.byte	'triggerEnabled',0
	.word	508
	.byte	1,2,35,4,14
	.byte	'clockFreq',0
	.word	241
	.byte	4,2,35,6,14
	.byte	'countDir',0
	.word	28461
	.byte	1,2,35,10,0,11
	.byte	'_Ifx_GTM_REV_Bits',0,10,213,27,16,4,12
	.byte	'STEP',0,4
	.word	10325
	.byte	8,24,2,35,0,12
	.byte	'NO',0,4
	.word	10325
	.byte	4,20,2,35,0,12
	.byte	'MINOR',0,4
	.word	10325
	.byte	4,16,2,35,0,12
	.byte	'MAJOR',0,4
	.word	10325
	.byte	4,12,2,35,0,12
	.byte	'DEV_CODE0',0,4
	.word	10325
	.byte	4,8,2,35,0,12
	.byte	'DEV_CODE1',0,4
	.word	10325
	.byte	4,4,2,35,0,12
	.byte	'DEV_CODE2',0,4
	.word	10325
	.byte	4,0,2,35,0,0,13,10,249,50,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	28647
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_RST_Bits',0,10,225,27,16,4,12
	.byte	'RST',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	10325
	.byte	31,0,2,35,0,0,13,10,129,51,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	28839
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CTRL_Bits',0,10,201,10,16,4,12
	.byte	'RF_PROT',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'TO_MODE',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10325
	.byte	2,28,2,35,0,12
	.byte	'TO_VAL',0,4
	.word	10325
	.byte	5,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10325
	.byte	23,0,2,35,0,0,13,10,168,39,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	28941
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_AEI_ADDR_XPT_Bits',0,10,114,16,4,12
	.byte	'TO_ADDR',0,4
	.word	10325
	.byte	20,12,2,35,0,12
	.byte	'TO_W1R0',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	10325
	.byte	11,0,2,35,0,0,13,10,232,33,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	29107
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_IRQ_NOTIFY_Bits',0,10,139,23,16,4,12
	.byte	'AEI_TO_XPT',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'AEI_USP_ADDR',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'AEI_IM_ADDR',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'AEI_USP_BE',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10325
	.byte	28,0,2,35,0,0,13,10,137,48,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	29241
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_IRQ_EN_Bits',0,10,240,22,16,4,12
	.byte	'AEI_TO_XPT_IRQ_EN',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'AEI_USP_ADDR_IRQ_EN',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'AEI_IM_ADDR_IRQ_EN',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'AEI_USP_BE_IRQ_EN',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10325
	.byte	28,0,2,35,0,0,13,10,241,47,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	29426
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_IRQ_FORCINT_Bits',0,10,250,22,16,4,12
	.byte	'TRG_AEI_TO_XPT',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'TRG_AEI_USP_ADDR',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'TRG_AEI_IM_ADDR',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'TRG_AEI_USP_BE',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10325
	.byte	28,0,2,35,0,0,13,10,249,47,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	29635
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_IRQ_MODE_Bits',0,10,132,23,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10325
	.byte	30,0,2,35,0,0,13,10,129,48,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	29837
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_EIRQ_EN_Bits',0,10,211,18,16,4,12
	.byte	'AEI_TO_XPT_EIRQ_EN',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'AEI_USP_ADDR_EIRQ_EN',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'AEI_IM_ADDR_EIRQ_EN',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'AEI_USP_BE_EIRQ_EN',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10325
	.byte	28,0,2,35,0,0,13,10,217,45,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	29949
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRIDGE_MODE_Bits',0,10,180,8,16,4,12
	.byte	'BRG_MODE',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'MSK_WR_RSP',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10325
	.byte	6,24,2,35,0,12
	.byte	'MODE_UP_PGR',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'BUFF_OVL',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10325
	.byte	2,20,2,35,0,12
	.byte	'SYNC_INPUT_REG',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10325
	.byte	3,16,2,35,0,12
	.byte	'BRG_RST',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'reserved_17',0,4
	.word	10325
	.byte	7,8,2,35,0,12
	.byte	'BUFF_DPT',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,144,38,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	30163
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRIDGE_PTR1_Bits',0,10,196,8,16,4,12
	.byte	'NEW_TRAN_PTR',0,4
	.word	10325
	.byte	5,27,2,35,0,12
	.byte	'FIRST_RSP_PTR',0,4
	.word	10325
	.byte	5,22,2,35,0,12
	.byte	'TRAN_IN_PGR',0,4
	.word	10325
	.byte	5,17,2,35,0,12
	.byte	'ABT_TRAN_PGR',0,4
	.word	10325
	.byte	5,12,2,35,0,12
	.byte	'FBC',0,4
	.word	10325
	.byte	6,6,2,35,0,12
	.byte	'RSP_TRAN_RDY',0,4
	.word	10325
	.byte	6,0,2,35,0,0,13,10,152,38,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	30477
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRIDGE_PTR2_Bits',0,10,207,8,16,4,12
	.byte	'TRAN_IN_PGR2',0,4
	.word	10325
	.byte	5,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10325
	.byte	27,0,2,35,0,0,13,10,160,38,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	30685
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRIDGE',0,10,222,57,25,12,14
	.byte	'MODE',0
	.word	30437
	.byte	4,2,35,0,14
	.byte	'PTR1',0
	.word	30645
	.byte	4,2,35,4,14
	.byte	'PTR2',0
	.word	30764
	.byte	4,2,35,8,0,10
	.word	30804
	.byte	11
	.byte	'_Ifx_GTM_TIM_AUX_IN_SRC_Bits',0,10,151,29,16,4,12
	.byte	'SRC_CH0',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'SRC_CH1',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'SRC_CH2',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'SRC_CH3',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'SRC_CH4',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'SRC_CH5',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'SRC_CH6',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'SRC_CH7',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10325
	.byte	24,0,2,35,0,0,13,10,153,52,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	30874
	.byte	4,2,35,0,0,15,12
	.word	31084
	.byte	16,2,0,15,180,1
	.word	508
	.byte	16,179,1,0,11
	.byte	'_Ifx_GTM_TBU_CHEN_Bits',0,10,142,29,16,4,12
	.byte	'ENDIS_CH0',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'ENDIS_CH1',0,4
	.word	10325
	.byte	2,28,2,35,0,12
	.byte	'ENDIS_CH2',0,4
	.word	10325
	.byte	2,26,2,35,0,12
	.byte	'reserved_6',0,4
	.word	10325
	.byte	26,0,2,35,0,0,13,10,145,52,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	31144
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU_CH0_CTRL_Bits',0,10,232,28,16,4,12
	.byte	'LOW_RES',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'CH_CLK_SRC',0,4
	.word	10325
	.byte	3,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10325
	.byte	28,0,2,35,0,0,13,10,233,51,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	31299
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU_CH0_BASE_Bits',0,10,225,28,16,4,12
	.byte	'BASE',0,4
	.word	10325
	.byte	27,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	10325
	.byte	5,0,2,35,0,0,13,10,225,51,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	31436
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU_CH1_CTRL_Bits',0,10,247,28,16,4,12
	.byte	'CH_MODE',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'CH_CLK_SRC',0,4
	.word	10325
	.byte	3,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10325
	.byte	28,0,2,35,0,0,13,10,249,51,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	31549
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU_CH1_BASE_Bits',0,10,240,28,16,4,12
	.byte	'BASE',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,241,51,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	31686
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU_CH2_CTRL_Bits',0,10,134,29,16,4,12
	.byte	'CH_MODE',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'CH_CLK_SRC',0,4
	.word	10325
	.byte	3,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10325
	.byte	28,0,2,35,0,0,13,10,137,52,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	31799
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU_CH2_BASE_Bits',0,10,255,28,16,4,12
	.byte	'BASE',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,129,52,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	31936
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU',0,10,225,59,25,28,14
	.byte	'CHEN',0
	.word	31259
	.byte	4,2,35,0,14
	.byte	'CH0_CTRL',0
	.word	31396
	.byte	4,2,35,4,14
	.byte	'CH0_BASE',0
	.word	31509
	.byte	4,2,35,8,14
	.byte	'CH1_CTRL',0
	.word	31646
	.byte	4,2,35,12,14
	.byte	'CH1_BASE',0
	.word	31759
	.byte	4,2,35,16,14
	.byte	'CH2_CTRL',0
	.word	31896
	.byte	4,2,35,20,14
	.byte	'CH2_BASE',0
	.word	32009
	.byte	4,2,35,24,0,10
	.word	32049
	.byte	15,100
	.word	508
	.byte	16,99,0,11
	.byte	'_Ifx_GTM_MON_STATUS_Bits',0,10,246,25,16,4,12
	.byte	'ACT_CMU0',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'ACT_CMU1',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'ACT_CMU2',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'ACT_CMU3',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'ACT_CMU4',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'ACT_CMU5',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'ACT_CMU6',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'ACT_CMU7',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'ACT_CMUFX0',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'ACT_CMUFX1',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'ACT_CMUFX2',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'ACT_CMUFX3',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'ACT_CMUFX4',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10325
	.byte	3,16,2,35,0,12
	.byte	'CMP_ERR',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'reserved_17',0,4
	.word	10325
	.byte	3,12,2,35,0,12
	.byte	'MCS0_ERR',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'MCS1_ERR',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'MCS2_ERR',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10325
	.byte	9,0,2,35,0,0,13,10,249,49,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	32205
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MON_ACTIVITY_0_Bits',0,10,216,25,16,4,12
	.byte	'MCA_0_0',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'MCA_0_1',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'MCA_0_2',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'MCA_0_3',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'MCA_0_4',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'MCA_0_5',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'MCA_0_6',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'MCA_0_7',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'MCA_1_0',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'MCA_1_1',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'MCA_1_2',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'MCA_1_3',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'MCA_1_4',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'MCA_1_5',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'MCA_1_6',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'MCA_1_7',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'MCA_2_0',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'MCA_2_1',0,4
	.word	10325
	.byte	1,14,2,35,0,12
	.byte	'MCA_2_2',0,4
	.word	10325
	.byte	1,13,2,35,0,12
	.byte	'MCA_2_3',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'MCA_2_4',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'MCA_2_5',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'MCA_2_6',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'MCA_2_7',0,4
	.word	10325
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,241,49,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	32695
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MON',0,10,185,59,25,8,14
	.byte	'STATUS',0
	.word	32655
	.byte	4,2,35,0,14
	.byte	'ACTIVITY_0',0
	.word	33210
	.byte	4,2,35,4,0,10
	.word	33250
	.byte	15,120
	.word	508
	.byte	16,119,0,11
	.byte	'_Ifx_GTM_CMP_EN_Bits',0,10,254,8,16,4,12
	.byte	'ABWC0_EN',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'ABWC1_EN',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'ABWC2_EN',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'ABWC3_EN',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'ABWC4_EN',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'ABWC5_EN',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'ABWC6_EN',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'ABWC7_EN',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'ABWC8_EN',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'ABWC9_EN',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'ABWC10_EN',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'ABWC11_EN',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'TBWC0_EN',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'TBWC1_EN',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'TBWC2_EN',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'TBWC3_EN',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'TBWC4_EN',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'TBWC5_EN',0,4
	.word	10325
	.byte	1,14,2,35,0,12
	.byte	'TBWC6_EN',0,4
	.word	10325
	.byte	1,13,2,35,0,12
	.byte	'TBWC7_EN',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'TBWC8_EN',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'TBWC9_EN',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'TBWC10_EN',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'TBWC11_EN',0,4
	.word	10325
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,184,38,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	33320
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMP_IRQ_NOTIFY_Bits',0,10,223,9,16,4,12
	.byte	'ABWC0',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'ABWC1',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'ABWC2',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'ABWC3',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'ABWC4',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'ABWC5',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'ABWC6',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'ABWC7',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'ABWC8',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'ABWC9',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'ABWC10',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'ABWC11',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'TBWC0',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'TBWC1',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'TBWC2',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'TBWC3',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'TBWC4',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'TBWC5',0,4
	.word	10325
	.byte	1,14,2,35,0,12
	.byte	'TBWC6',0,4
	.word	10325
	.byte	1,13,2,35,0,12
	.byte	'TBWC7',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'TBWC8',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'TBWC9',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'TBWC10',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'TBWC11',0,4
	.word	10325
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,216,38,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	33895
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMP_IRQ_EN_Bits',0,10,156,9,16,4,12
	.byte	'ABWC0_EN_IRQ',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'ABWC1_EN_IRQ',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'ABWC2_EN_IRQ',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'ABWC3_EN_IRQ',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'ABWC4_EN_IRQ',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'ABWC5_EN_IRQ',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'ABWC6_EN_IRQ',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'ABWC7_EN_IRQ',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'ABWC8_EN_IRQ',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'ABWC9_EN_IRQ',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'ABWC10_EN_IRQ',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'ABWC11_EN_IRQ',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'TBWC0_EN_IRQ',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'TBWC1_EN_IRQ',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'TBWC2_EN_IRQ',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'TBWC3_EN_IRQ',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'TBWC4_EN_IRQ',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'TBWC5_EN_IRQ',0,4
	.word	10325
	.byte	1,14,2,35,0,12
	.byte	'TBWC6_EN_IRQ',0,4
	.word	10325
	.byte	1,13,2,35,0,12
	.byte	'TBWC7_EN_IRQ',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'TBWC8_EN_IRQ',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'TBWC9_EN_IRQ',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'TBWC10_EN_IRQ',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'TBWC11_EN_IRQ',0,4
	.word	10325
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,192,38,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	34406
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMP_IRQ_FORCINT_Bits',0,10,186,9,16,4,12
	.byte	'TRG_ABWC0',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'TRG_ABWC1',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'TRG_ABWC2',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'TRG_ABWC3',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'TRG_ABWC4',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'TRG_ABWC5',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'TRG_ABWC6',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'TRG_ABWC7',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'TRG_ABWC8',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'TRG_ABWC9',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'TRG_ABWC10',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'TRG_ABWC11',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'TRG_TBWC0',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'TRG_TBWC1',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'TRG_TBWC2',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'TRG_TBWC3',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'TRG_TBWC4',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'TRG_TBWC5',0,4
	.word	10325
	.byte	1,14,2,35,0,12
	.byte	'TRG_TBWC6',0,4
	.word	10325
	.byte	1,13,2,35,0,12
	.byte	'TRG_TBWC7',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'TRG_TBWC8',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'TRG_TBWC9',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'TRG_TBWC10',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'TRG_TBWC11',0,4
	.word	10325
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,200,38,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	35081
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMP_IRQ_MODE_Bits',0,10,216,9,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10325
	.byte	30,0,2,35,0,0,13,10,208,38,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	35689
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMP_EIRQ_EN_Bits',0,10,224,8,16,4,12
	.byte	'ABWC0_EN_EIRQ',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'ABWC1_EN_EIRQ',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'ABWC2_EN_EIRQ',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'ABWC3_EN_EIRQ',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'ABWC4_EN_EIRQ',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'ABWC5_EN_EIRQ',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'ABWC6_EN_EIRQ',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'ABWC7_EN_EIRQ',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'ABWC8_EN_EIRQ',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'ABWC9_EN_EIRQ',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'ABWC10_EN_EIRQ',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'ABWC11_EN_EIRQ',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'TBWC0_EN_EIRQ',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'TBWC1_EN_EIRQ',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'TBWC2_EN_EIRQ',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'TBWC3_EN_EIRQ',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'TBWC4_EN_EIRQ',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'TBWC5_EN_EIRQ',0,4
	.word	10325
	.byte	1,14,2,35,0,12
	.byte	'TBWC6_EN_EIRQ',0,4
	.word	10325
	.byte	1,13,2,35,0,12
	.byte	'TBWC7_EN_EIRQ',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'TBWC8_EN_EIRQ',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'TBWC9_EN_EIRQ',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'TBWC10_EN_EIRQ',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'TBWC11_EN_EIRQ',0,4
	.word	10325
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,176,38,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	35805
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMP',0,10,230,57,25,24,14
	.byte	'EN',0
	.word	33855
	.byte	4,2,35,0,14
	.byte	'IRQ_NOTIFY',0
	.word	34366
	.byte	4,2,35,4,14
	.byte	'IRQ_EN',0
	.word	35041
	.byte	4,2,35,8,14
	.byte	'IRQ_FORCINT',0
	.word	35649
	.byte	4,2,35,12,14
	.byte	'IRQ_MODE',0
	.word	35765
	.byte	4,2,35,16,14
	.byte	'EIRQ_EN',0
	.word	36465
	.byte	4,2,35,20,0,10
	.word	36505
	.byte	15,104
	.word	508
	.byte	16,103,0,11
	.byte	'_Ifx_GTM_ARU_ARU_ACCESS_Bits',0,10,129,1,16,4,12
	.byte	'ADDR',0,4
	.word	10325
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10325
	.byte	3,20,2,35,0,12
	.byte	'RREQ',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'WREQ',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'reserved_14',0,4
	.word	10325
	.byte	18,0,2,35,0,0,13,10,248,33,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	36643
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DATA_H_Bits',0,10,139,1,16,4,12
	.byte	'DATA',0,4
	.word	10325
	.byte	29,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10325
	.byte	3,0,2,35,0,0,13,10,128,34,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	36812
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DATA_L_Bits',0,10,146,1,16,4,12
	.byte	'DATA',0,4
	.word	10325
	.byte	29,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10325
	.byte	3,0,2,35,0,0,13,10,136,34,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	36923
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DBG_ACCESS0_Bits',0,10,153,1,16,4,12
	.byte	'ADDR',0,4
	.word	10325
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10325
	.byte	23,0,2,35,0,0,13,10,144,34,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	37034
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DBG_DATA0_H_Bits',0,10,167,1,16,4,12
	.byte	'DATA',0,4
	.word	10325
	.byte	29,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10325
	.byte	3,0,2,35,0,0,13,10,160,34,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	37149
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DBG_DATA0_L_Bits',0,10,174,1,16,4,12
	.byte	'DATA',0,4
	.word	10325
	.byte	29,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10325
	.byte	3,0,2,35,0,0,13,10,168,34,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	37265
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DBG_ACCESS1_Bits',0,10,160,1,16,4,12
	.byte	'ADDR',0,4
	.word	10325
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10325
	.byte	23,0,2,35,0,0,13,10,152,34,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	37381
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DBG_DATA1_H_Bits',0,10,181,1,16,4,12
	.byte	'DATA',0,4
	.word	10325
	.byte	29,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10325
	.byte	3,0,2,35,0,0,13,10,176,34,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	37496
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DBG_DATA1_L_Bits',0,10,188,1,16,4,12
	.byte	'DATA',0,4
	.word	10325
	.byte	29,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10325
	.byte	3,0,2,35,0,0,13,10,184,34,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	37612
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_IRQ_NOTIFY_Bits',0,10,220,1,16,4,12
	.byte	'NEW_DATA0',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'NEW_DATA1',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'ACC_ACK',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10325
	.byte	29,0,2,35,0,0,13,10,216,34,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	37728
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_IRQ_EN_Bits',0,10,195,1,16,4,12
	.byte	'NEW_DATA0_IRQ_EN',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'NEW_DATA1_IRQ_EN',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'ACC_ACK_IRQ_EN',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10325
	.byte	29,0,2,35,0,0,13,10,192,34,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	37887
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_IRQ_FORCINT_Bits',0,10,204,1,16,4,12
	.byte	'TRG_NEW_DATA0',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'TRG_NEW_DATA',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'TRG_ACC_ACK',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10325
	.byte	29,0,2,35,0,0,13,10,200,34,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	38063
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_IRQ_MODE_Bits',0,10,213,1,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10325
	.byte	30,0,2,35,0,0,13,10,208,34,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	38234
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU',0,10,148,57,25,52,14
	.byte	'ARU_ACCESS',0
	.word	36772
	.byte	4,2,35,0,14
	.byte	'DATA_H',0
	.word	36883
	.byte	4,2,35,4,14
	.byte	'DATA_L',0
	.word	36994
	.byte	4,2,35,8,14
	.byte	'DBG_ACCESS0',0
	.word	37109
	.byte	4,2,35,12,14
	.byte	'DBG_DATA0_H',0
	.word	37225
	.byte	4,2,35,16,14
	.byte	'DBG_DATA0_L',0
	.word	37341
	.byte	4,2,35,20,14
	.byte	'DBG_ACCESS1',0
	.word	37456
	.byte	4,2,35,24,14
	.byte	'DBG_DATA1_H',0
	.word	37572
	.byte	4,2,35,28,14
	.byte	'DBG_DATA1_L',0
	.word	37688
	.byte	4,2,35,32,14
	.byte	'IRQ_NOTIFY',0
	.word	37847
	.byte	4,2,35,36,14
	.byte	'IRQ_EN',0
	.word	38023
	.byte	4,2,35,40,14
	.byte	'IRQ_FORCINT',0
	.word	38194
	.byte	4,2,35,44,14
	.byte	'IRQ_MODE',0
	.word	38310
	.byte	4,2,35,48,0,10
	.word	38350
	.byte	11
	.byte	'_Ifx_GTM_CMU_CLK_EN_Bits',0,10,148,10,16,4,12
	.byte	'EN_CLK0',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'EN_CLK1',0,4
	.word	10325
	.byte	2,28,2,35,0,12
	.byte	'EN_CLK2',0,4
	.word	10325
	.byte	2,26,2,35,0,12
	.byte	'EN_CLK3',0,4
	.word	10325
	.byte	2,24,2,35,0,12
	.byte	'EN_CLK4',0,4
	.word	10325
	.byte	2,22,2,35,0,12
	.byte	'EN_CLK5',0,4
	.word	10325
	.byte	2,20,2,35,0,12
	.byte	'EN_CLK6',0,4
	.word	10325
	.byte	2,18,2,35,0,12
	.byte	'EN_CLK7',0,4
	.word	10325
	.byte	2,16,2,35,0,12
	.byte	'EN_ECLK0',0,4
	.word	10325
	.byte	2,14,2,35,0,12
	.byte	'EN_ECLK1',0,4
	.word	10325
	.byte	2,12,2,35,0,12
	.byte	'EN_ECLK2',0,4
	.word	10325
	.byte	2,10,2,35,0,12
	.byte	'EN_FXCLK',0,4
	.word	10325
	.byte	2,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,248,38,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	38628
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_GCLK_NUM_Bits',0,10,194,10,16,4,12
	.byte	'GCLK_NUM',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,160,39,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	38955
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_GCLK_DEN_Bits',0,10,187,10,16,4,12
	.byte	'GCLK_DEN',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,152,39,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	39072
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_CLK0_5_CTRL_Bits',0,10,253,9,16,4,12
	.byte	'CLK_CNT',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,224,38,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	39189
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_CLK0_5',0,10,200,55,25,4,14
	.byte	'CTRL',0
	.word	39268
	.byte	4,2,35,0,0,15,24
	.word	39308
	.byte	16,5,0,10
	.word	39349
	.byte	11
	.byte	'_Ifx_GTM_CMU_CLK_6_CTRL_Bits',0,10,132,10,16,4,12
	.byte	'CLK_CNT',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'CLK6_SEL',0,4
	.word	10325
	.byte	1,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	10325
	.byte	7,0,2,35,0,0,13,10,232,38,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	39363
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_CLK_6',0,10,206,55,25,4,14
	.byte	'CTRL',0
	.word	39461
	.byte	4,2,35,0,0,10
	.word	39501
	.byte	11
	.byte	'_Ifx_GTM_CMU_CLK_7_CTRL_Bits',0,10,140,10,16,4,12
	.byte	'CLK_CNT',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'CLK7_SEL',0,4
	.word	10325
	.byte	1,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	10325
	.byte	7,0,2,35,0,0,13,10,240,38,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	39546
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_CLK_7',0,10,212,55,25,4,14
	.byte	'CTRL',0
	.word	39644
	.byte	4,2,35,0,0,10
	.word	39684
	.byte	11
	.byte	'_Ifx_GTM_CMU_ECLK_NUM_Bits',0,10,173,10,16,4,12
	.byte	'ECLK_NUM',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,136,39,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	39729
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_ECLK_DEN_Bits',0,10,166,10,16,4,12
	.byte	'ECLK_DEN',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,128,39,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	39846
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_ECLK',0,10,218,55,25,8,14
	.byte	'NUM',0
	.word	39806
	.byte	4,2,35,0,14
	.byte	'DEN',0
	.word	39923
	.byte	4,2,35,4,0,15,24
	.word	39963
	.byte	16,2,0,10
	.word	40014
	.byte	11
	.byte	'_Ifx_GTM_CMU_FXCLK_CTRL_Bits',0,10,180,10,16,4,12
	.byte	'FXCLK_SEL',0,4
	.word	10325
	.byte	4,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10325
	.byte	28,0,2,35,0,0,13,10,144,39,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	40028
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_FXCLK',0,10,225,55,25,4,14
	.byte	'CTRL',0
	.word	40107
	.byte	4,2,35,0,0,10
	.word	40147
	.byte	11
	.byte	'_Ifx_GTM_CMU',0,10,241,57,25,72,14
	.byte	'CLK_EN',0
	.word	38915
	.byte	4,2,35,0,14
	.byte	'GCLK_NUM',0
	.word	39032
	.byte	4,2,35,4,14
	.byte	'GCLK_DEN',0
	.word	39149
	.byte	4,2,35,8,14
	.byte	'CLK0_5',0
	.word	39358
	.byte	24,2,35,12,14
	.byte	'CLK_6',0
	.word	39541
	.byte	4,2,35,36,14
	.byte	'CLK_7',0
	.word	39724
	.byte	4,2,35,40,14
	.byte	'ECLK',0
	.word	40023
	.byte	24,2,35,44,14
	.byte	'FXCLK',0
	.word	40187
	.byte	4,2,35,68,0,10
	.word	40192
	.byte	15,184,1
	.word	508
	.byte	16,183,1,0,11
	.byte	'_Ifx_GTM_BRC_SRC0_ADDR_Bits',0,10,236,4,16,4,12
	.byte	'ADDR',0,4
	.word	10325
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10325
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10325
	.byte	19,0,2,35,0,0,13,10,208,36,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	40355
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC0_DEST_Bits',0,10,245,4,16,4,12
	.byte	'EN_DEST0',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	10325
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	10325
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10325
	.byte	9,0,2,35,0,0,13,10,216,36,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	40511
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC1_ADDR_Bits',0,10,222,5,16,4,12
	.byte	'ADDR',0,4
	.word	10325
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10325
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10325
	.byte	19,0,2,35,0,0,13,10,128,37,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	41084
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC1_DEST_Bits',0,10,231,5,16,4,12
	.byte	'EN_DEST0',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	10325
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	10325
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10325
	.byte	9,0,2,35,0,0,13,10,136,37,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	41240
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC2_ADDR_Bits',0,10,132,6,16,4,12
	.byte	'ADDR',0,4
	.word	10325
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10325
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10325
	.byte	19,0,2,35,0,0,13,10,144,37,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	41813
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC2_DEST_Bits',0,10,141,6,16,4,12
	.byte	'EN_DEST0',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	10325
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	10325
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10325
	.byte	9,0,2,35,0,0,13,10,152,37,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	41969
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC3_ADDR_Bits',0,10,170,6,16,4,12
	.byte	'ADDR',0,4
	.word	10325
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10325
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10325
	.byte	19,0,2,35,0,0,13,10,160,37,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	42542
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC3_DEST_Bits',0,10,179,6,16,4,12
	.byte	'EN_DEST0',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	10325
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	10325
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10325
	.byte	9,0,2,35,0,0,13,10,168,37,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	42698
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC4_ADDR_Bits',0,10,208,6,16,4,12
	.byte	'ADDR',0,4
	.word	10325
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10325
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10325
	.byte	19,0,2,35,0,0,13,10,176,37,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	43271
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC4_DEST_Bits',0,10,217,6,16,4,12
	.byte	'EN_DEST0',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	10325
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	10325
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10325
	.byte	9,0,2,35,0,0,13,10,184,37,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	43427
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC5_ADDR_Bits',0,10,246,6,16,4,12
	.byte	'ADDR',0,4
	.word	10325
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10325
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10325
	.byte	19,0,2,35,0,0,13,10,192,37,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	44000
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC5_DEST_Bits',0,10,255,6,16,4,12
	.byte	'EN_DEST0',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	10325
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	10325
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10325
	.byte	9,0,2,35,0,0,13,10,200,37,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	44156
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC6_ADDR_Bits',0,10,156,7,16,4,12
	.byte	'ADDR',0,4
	.word	10325
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10325
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10325
	.byte	19,0,2,35,0,0,13,10,208,37,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	44729
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC6_DEST_Bits',0,10,165,7,16,4,12
	.byte	'EN_DEST0',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	10325
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	10325
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10325
	.byte	9,0,2,35,0,0,13,10,216,37,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	44885
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC7_ADDR_Bits',0,10,194,7,16,4,12
	.byte	'ADDR',0,4
	.word	10325
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10325
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10325
	.byte	19,0,2,35,0,0,13,10,224,37,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	45458
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC7_DEST_Bits',0,10,203,7,16,4,12
	.byte	'EN_DEST0',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	10325
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	10325
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10325
	.byte	9,0,2,35,0,0,13,10,232,37,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	45614
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC8_ADDR_Bits',0,10,232,7,16,4,12
	.byte	'ADDR',0,4
	.word	10325
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10325
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10325
	.byte	19,0,2,35,0,0,13,10,240,37,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	46187
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC8_DEST_Bits',0,10,241,7,16,4,12
	.byte	'EN_DEST0',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	10325
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	10325
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10325
	.byte	9,0,2,35,0,0,13,10,248,37,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	46343
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC9_ADDR_Bits',0,10,142,8,16,4,12
	.byte	'ADDR',0,4
	.word	10325
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10325
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10325
	.byte	19,0,2,35,0,0,13,10,128,38,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	46916
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC9_DEST_Bits',0,10,151,8,16,4,12
	.byte	'EN_DEST0',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	10325
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	10325
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10325
	.byte	9,0,2,35,0,0,13,10,136,38,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	47072
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC10_ADDR_Bits',0,10,146,5,16,4,12
	.byte	'ADDR',0,4
	.word	10325
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10325
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10325
	.byte	19,0,2,35,0,0,13,10,224,36,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	47645
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC10_DEST_Bits',0,10,155,5,16,4,12
	.byte	'EN_DEST0',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	10325
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	10325
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10325
	.byte	9,0,2,35,0,0,13,10,232,36,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	47802
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC11_ADDR_Bits',0,10,184,5,16,4,12
	.byte	'ADDR',0,4
	.word	10325
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10325
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10325
	.byte	19,0,2,35,0,0,13,10,240,36,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	48376
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC11_DEST_Bits',0,10,193,5,16,4,12
	.byte	'EN_DEST0',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	10325
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	10325
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10325
	.byte	9,0,2,35,0,0,13,10,248,36,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	48533
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_IRQ_NOTIFY_Bits',0,10,210,4,16,4,12
	.byte	'DEST_ERR',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'DID0',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'DID1',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'DID2',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'DID3',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'DID4',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'DID5',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'DID6',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'DID7',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'DID8',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'DID9',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'DID10',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'DID11',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10325
	.byte	19,0,2,35,0,0,13,10,192,36,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	49107
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_IRQ_EN_Bits',0,10,165,4,16,4,12
	.byte	'DEST_ERR_EN',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'DID_EN0',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'DID_EN1',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'DID_EN2',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'DID_EN3',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'DID_EN4',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'DID_EN5',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'DID_EN6',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'DID_EN7',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'DID_EN8',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'DID_EN9',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'DID_EN10',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'DID_EN11',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10325
	.byte	19,0,2,35,0,0,13,10,168,36,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	49420
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_IRQ_FORCINT_Bits',0,10,184,4,16,4,12
	.byte	'TRG_DEST_ERR',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'TRG_DID0',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'TRG_DID1',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'TRG_DID2',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'TRG_DID3',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'TRG_DID4',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'TRG_DID5',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'TRG_DID6',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'TRG_DID7',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'TRG_DID8',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'TRG_DID9',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'TRG_DID10',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'TRG_DID11',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10325
	.byte	19,0,2,35,0,0,13,10,176,36,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	49768
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_IRQ_MODE_Bits',0,10,203,4,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10325
	.byte	30,0,2,35,0,0,13,10,184,36,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	50134
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_RST_Bits',0,10,229,4,16,4,12
	.byte	'RST',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	10325
	.byte	31,0,2,35,0,0,13,10,200,36,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	50250
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_EIRQ_EN_Bits',0,10,146,4,16,4,12
	.byte	'DEST_ERR_EN',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'DID_EN0',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'DID_EN1',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'DID_EN2',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'DID_EN3',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'DID_EN4',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'DID_EN5',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'DID_EN6',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'DID_EN7',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'DID_EN8',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'DID_EN9',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'DID_EN10',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'DID_EN11',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10325
	.byte	19,0,2,35,0,0,13,10,160,36,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	50356
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC',0,10,187,57,25,120,14
	.byte	'SRC0_ADDR',0
	.word	40471
	.byte	4,2,35,0,14
	.byte	'SRC0_DEST',0
	.word	41044
	.byte	4,2,35,4,14
	.byte	'SRC1_ADDR',0
	.word	41200
	.byte	4,2,35,8,14
	.byte	'SRC1_DEST',0
	.word	41773
	.byte	4,2,35,12,14
	.byte	'SRC2_ADDR',0
	.word	41929
	.byte	4,2,35,16,14
	.byte	'SRC2_DEST',0
	.word	42502
	.byte	4,2,35,20,14
	.byte	'SRC3_ADDR',0
	.word	42658
	.byte	4,2,35,24,14
	.byte	'SRC3_DEST',0
	.word	43231
	.byte	4,2,35,28,14
	.byte	'SRC4_ADDR',0
	.word	43387
	.byte	4,2,35,32,14
	.byte	'SRC4_DEST',0
	.word	43960
	.byte	4,2,35,36,14
	.byte	'SRC5_ADDR',0
	.word	44116
	.byte	4,2,35,40,14
	.byte	'SRC5_DEST',0
	.word	44689
	.byte	4,2,35,44,14
	.byte	'SRC6_ADDR',0
	.word	44845
	.byte	4,2,35,48,14
	.byte	'SRC6_DEST',0
	.word	45418
	.byte	4,2,35,52,14
	.byte	'SRC7_ADDR',0
	.word	45574
	.byte	4,2,35,56,14
	.byte	'SRC7_DEST',0
	.word	46147
	.byte	4,2,35,60,14
	.byte	'SRC8_ADDR',0
	.word	46303
	.byte	4,2,35,64,14
	.byte	'SRC8_DEST',0
	.word	46876
	.byte	4,2,35,68,14
	.byte	'SRC9_ADDR',0
	.word	47032
	.byte	4,2,35,72,14
	.byte	'SRC9_DEST',0
	.word	47605
	.byte	4,2,35,76,14
	.byte	'SRC10_ADDR',0
	.word	47762
	.byte	4,2,35,80,14
	.byte	'SRC10_DEST',0
	.word	48336
	.byte	4,2,35,84,14
	.byte	'SRC11_ADDR',0
	.word	48493
	.byte	4,2,35,88,14
	.byte	'SRC11_DEST',0
	.word	49067
	.byte	4,2,35,92,14
	.byte	'IRQ_NOTIFY',0
	.word	49380
	.byte	4,2,35,96,14
	.byte	'IRQ_EN',0
	.word	49728
	.byte	4,2,35,100,14
	.byte	'IRQ_FORCINT',0
	.word	50094
	.byte	4,2,35,104,14
	.byte	'IRQ_MODE',0
	.word	50210
	.byte	4,2,35,108,14
	.byte	'RST',0
	.word	50316
	.byte	4,2,35,112,14
	.byte	'EIRQ_EN',0
	.word	50665
	.byte	4,2,35,116,0,10
	.word	50705
	.byte	15,136,3
	.word	508
	.byte	16,135,3,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_0_Bits',0,10,241,19,16,4,12
	.byte	'ARU_NEW_DATA0_IRQ',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'ARU_NEW_DATA1_IRQ',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'ARU_ACC_ACK_IRQ',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'BRC_IRQ',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'AEI_IRQ',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'CMP_IRQ',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'SPE0_IRQ',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'SPE1_IRQ',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10325
	.byte	8,16,2,35,0,12
	.byte	'PSM0_CH0_IRQ',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'PSM0_CH1_IRQ',0,4
	.word	10325
	.byte	1,14,2,35,0,12
	.byte	'PSM0_CH2_IRQ',0,4
	.word	10325
	.byte	1,13,2,35,0,12
	.byte	'PSM0_CH3_IRQ',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'PSM0_CH4_IRQ',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'PSM0_CH5_IRQ',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'PSM0_CH6_IRQ',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'PSM0_CH7_IRQ',0,4
	.word	10325
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,233,46,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	51306
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_1_Bits',0,10,136,20,16,4,12
	.byte	'DPLL_DCG_IRQ',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'DPLL_EDI_IRQ',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'DPLL_TIN_IRQ',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'DPLL_TAX_IRQ',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'DPLL_SIS_IRQ',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'DPLL_TIS_IRQ',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'DPLL_MSI_IRQ',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'DPLL_MTI_IRQ',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'DPLL_SAS_IRQ',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'DPLL_TAS_IRQ',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'DPLL_PWI_IRQ',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'DPLL_W2I_IRQ',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'DPLL_W1I_IRQ',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'DPLL_GLI_IRQ',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'DPLL_LLI_IRQ',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'DPLL_EI_IRQ',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'DPLL_GL2I_IRQ',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'DPLL_LL2I_IRQ',0,4
	.word	10325
	.byte	1,14,2,35,0,12
	.byte	'DPLL_TE0_IRQ',0,4
	.word	10325
	.byte	1,13,2,35,0,12
	.byte	'DPLL_TE1_IRQ',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'DPLL_TE2_IRQ',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'DPLL_TE3_IRQ',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'DPLL_TE4_IRQ',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'DPLL_CDIT_IRQ',0,4
	.word	10325
	.byte	1,8,2,35,0,12
	.byte	'DPLL_CDIS_IRQ',0,4
	.word	10325
	.byte	1,7,2,35,0,12
	.byte	'DPLL_TORI_IRQ',0,4
	.word	10325
	.byte	1,6,2,35,0,12
	.byte	'DPLL_SORI_IRQ',0,4
	.word	10325
	.byte	1,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	10325
	.byte	5,0,2,35,0,0,13,10,241,46,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	51797
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_2_Bits',0,10,169,20,16,4,12
	.byte	'TIM0_CH0_IRQ',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'TIM0_CH1_IRQ',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'TIM0_CH2_IRQ',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'TIM0_CH3_IRQ',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'TIM0_CH4_IRQ',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'TIM0_CH5_IRQ',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'TIM0_CH6_IRQ',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'TIM0_CH7_IRQ',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'TIM1_CH0_IRQ',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'TIM1_CH1_IRQ',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'TIM1_CH2_IRQ',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'TIM1_CH3_IRQ',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'TIM1_CH4_IRQ',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'TIM1_CH5_IRQ',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'TIM1_CH6_IRQ',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'TIM1_CH7_IRQ',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'TIM2_CH0_IRQ',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'TIM2_CH1_IRQ',0,4
	.word	10325
	.byte	1,14,2,35,0,12
	.byte	'TIM2_CH2_IRQ',0,4
	.word	10325
	.byte	1,13,2,35,0,12
	.byte	'TIM2_CH3_IRQ',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'TIM2_CH4_IRQ',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'TIM2_CH5_IRQ',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'TIM2_CH6_IRQ',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'TIM2_CH7_IRQ',0,4
	.word	10325
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,249,46,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	52545
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_4_Bits',0,10,199,20,16,4,12
	.byte	'MCS0_CH0_IRQ',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'MCS0_CH1_IRQ',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'MCS0_CH2_IRQ',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'MCS0_CH3_IRQ',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'MCS0_CH4_IRQ',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'MCS0_CH5_IRQ',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'MCS0_CH6_IRQ',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'MCS0_CH7_IRQ',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'MCS1_CH0_IRQ',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'MCS1_CH1_IRQ',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'MCS1_CH2_IRQ',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'MCS1_CH3_IRQ',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'MCS1_CH4_IRQ',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'MCS1_CH5_IRQ',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'MCS1_CH6_IRQ',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'MCS1_CH7_IRQ',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'MCS2_CH0_IRQ',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'MCS2_CH1_IRQ',0,4
	.word	10325
	.byte	1,14,2,35,0,12
	.byte	'MCS2_CH2_IRQ',0,4
	.word	10325
	.byte	1,13,2,35,0,12
	.byte	'MCS2_CH3_IRQ',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'MCS2_CH4_IRQ',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'MCS2_CH5_IRQ',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'MCS2_CH6_IRQ',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'MCS2_CH7_IRQ',0,4
	.word	10325
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,129,47,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	53216
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_6_Bits',0,10,229,20,16,4,12
	.byte	'TOM0_CH0_IRQ',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'TOM0_CH1_IRQ',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'TOM0_CH2_IRQ',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'TOM0_CH3_IRQ',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'TOM0_CH4_IRQ',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'TOM0_CH5_IRQ',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'TOM0_CH6_IRQ',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'TOM0_CH7_IRQ',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'TOM0_CH8_IRQ',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'TOM0_CH9_IRQ',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'TOM0_CH10_IRQ',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'TOM0_CH11_IRQ',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'TOM0_CH12_IRQ',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'TOM0_CH13_IRQ',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'TOM0_CH14_IRQ',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'TOM0_CH15_IRQ',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'TOM1_CH0_IRQ',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'TOM1_CH1_IRQ',0,4
	.word	10325
	.byte	1,14,2,35,0,12
	.byte	'TOM1_CH2_IRQ',0,4
	.word	10325
	.byte	1,13,2,35,0,12
	.byte	'TOM1_CH3_IRQ',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'TOM1_CH4_IRQ',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'TOM1_CH5_IRQ',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'TOM1_CH6_IRQ',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'TOM1_CH7_IRQ',0,4
	.word	10325
	.byte	1,8,2,35,0,12
	.byte	'TOM1_CH8_IRQ',0,4
	.word	10325
	.byte	1,7,2,35,0,12
	.byte	'TOM1_CH9_IRQ',0,4
	.word	10325
	.byte	1,6,2,35,0,12
	.byte	'TOM1_CH10_IRQ',0,4
	.word	10325
	.byte	1,5,2,35,0,12
	.byte	'TOM1_CH11_IRQ',0,4
	.word	10325
	.byte	1,4,2,35,0,12
	.byte	'TOM1_CH12_IRQ',0,4
	.word	10325
	.byte	1,3,2,35,0,12
	.byte	'TOM1_CH13_IRQ',0,4
	.word	10325
	.byte	1,2,2,35,0,12
	.byte	'TOM1_CH14_IRQ',0,4
	.word	10325
	.byte	1,1,2,35,0,12
	.byte	'TOM1_CH15_IRQ',0,4
	.word	10325
	.byte	1,0,2,35,0,0,13,10,137,47,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	53887
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_9_Bits',0,10,138,21,16,4,12
	.byte	'ATOM0_CH0_IRQ',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'ATOM0_CH1_IRQ',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'ATOM0_CH2_IRQ',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'ATOM0_CH3_IRQ',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'ATOM0_CH4_IRQ',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'ATOM0_CH5_IRQ',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'ATOM0_CH6_IRQ',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'ATOM0_CH7_IRQ',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'ATOM1_CH0_IRQ',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'ATOM1_CH1_IRQ',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'ATOM1_CH2_IRQ',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'ATOM1_CH3_IRQ',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'ATOM1_CH4_IRQ',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'ATOM1_CH5_IRQ',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'ATOM1_CH6_IRQ',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'ATOM1_CH7_IRQ',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'ATOM2_CH0_IRQ',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'ATOM2_CH1_IRQ',0,4
	.word	10325
	.byte	1,14,2,35,0,12
	.byte	'ATOM2_CH2_IRQ',0,4
	.word	10325
	.byte	1,13,2,35,0,12
	.byte	'ATOM2_CH3_IRQ',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'ATOM2_CH4_IRQ',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'ATOM2_CH5_IRQ',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'ATOM2_CH6_IRQ',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'ATOM2_CH7_IRQ',0,4
	.word	10325
	.byte	1,8,2,35,0,12
	.byte	'ATOM3_CH0_IRQ',0,4
	.word	10325
	.byte	1,7,2,35,0,12
	.byte	'ATOM3_CH1_IRQ',0,4
	.word	10325
	.byte	1,6,2,35,0,12
	.byte	'ATOM3_CH2_IRQ',0,4
	.word	10325
	.byte	1,5,2,35,0,12
	.byte	'ATOM3_CH3_IRQ',0,4
	.word	10325
	.byte	1,4,2,35,0,12
	.byte	'ATOM3_CH4_IRQ',0,4
	.word	10325
	.byte	1,3,2,35,0,12
	.byte	'ATOM3_CH5_IRQ',0,4
	.word	10325
	.byte	1,2,2,35,0,12
	.byte	'ATOM3_CH6_IRQ',0,4
	.word	10325
	.byte	1,1,2,35,0,12
	.byte	'ATOM3_CH7_IRQ',0,4
	.word	10325
	.byte	1,0,2,35,0,0,13,10,145,47,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	54739
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_MEI_Bits',0,10,249,21,16,4,12
	.byte	'GTM_EIRQ',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'BRC_EIRQ',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'FIFO0_EIRQ',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'TIM0_EIRQ',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'TIM1_EIRQ',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'TIM2_EIRQ',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'reserved_7',0,4
	.word	10325
	.byte	5,20,2,35,0,12
	.byte	'MCS0_EIRQ',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'MCS1_EIRQ',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'MCS2_EIRQ',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'reserved_15',0,4
	.word	10325
	.byte	5,12,2,35,0,12
	.byte	'SPE0_EIRQ',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'SPE1_EIRQ',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'reserved_22',0,4
	.word	10325
	.byte	2,8,2,35,0,12
	.byte	'CMP_EIRQ',0,4
	.word	10325
	.byte	1,7,2,35,0,12
	.byte	'DPLL_EIRQ',0,4
	.word	10325
	.byte	1,6,2,35,0,12
	.byte	'reserved_26',0,4
	.word	10325
	.byte	6,0,2,35,0,0,13,10,177,47,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	55611
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_CEI0_Bits',0,10,175,21,16,4,12
	.byte	'FIFO0_CH0_EIRQ',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'FIFO0_CH1_EIRQ',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'FIFO0_CH2_EIRQ',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'FIFO0_CH3_EIRQ',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'FIFO0_CH4_EIRQ',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'FIFO0_CH5_EIRQ',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'FIFO0_CH6_EIRQ',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'FIFO0_CH7_EIRQ',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10325
	.byte	24,0,2,35,0,0,13,10,153,47,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	56069
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_CEI1_Bits',0,10,189,21,16,4,12
	.byte	'TIM0_CH0_EIRQ',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'TIM0_CH1_EIRQ',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'TIM0_CH2_EIRQ',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'TIM0_CH3_EIRQ',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'TIM0_CH4_EIRQ',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'TIM0_CH5_EIRQ',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'TIM0_CH6_EIRQ',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'TIM0_CH7_EIRQ',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'TIM1_CH0_EIRQ',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'TIM1_CH1_EIRQ',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'TIM1_CH2_EIRQ',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'TIM1_CH3_EIRQ',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'TIM1_CH4_EIRQ',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'TIM1_CH5_EIRQ',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'TIM1_CH6_EIRQ',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'TIM1_CH7_EIRQ',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'TIM2_CH0_EIRQ',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'TIM2_CH1_EIRQ',0,4
	.word	10325
	.byte	1,14,2,35,0,12
	.byte	'TIM2_CH2_EIRQ',0,4
	.word	10325
	.byte	1,13,2,35,0,12
	.byte	'TIM2_CH3_EIRQ',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'TIM2_CH4_EIRQ',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'TIM2_CH5_EIRQ',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'TIM2_CH6_EIRQ',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'TIM2_CH7_EIRQ',0,4
	.word	10325
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,161,47,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	56374
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_CEI3_Bits',0,10,219,21,16,4,12
	.byte	'MCS0_CH0_EIRQ',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'MCS0_CH1_EIRQ',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'MCS0_CH2_EIRQ',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'MCS0_CH3_EIRQ',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'MCS0_CH4_EIRQ',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'MCS0_CH5_EIRQ',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'MCS0_CH6_EIRQ',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'MCS0_CH7_EIRQ',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'MCS1_CH0_EIRQ',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'MCS1_CH1_EIRQ',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'MCS1_CH2_EIRQ',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'MCS1_CH3_EIRQ',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'MCS1_CH4_EIRQ',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'MCS1_CH5_EIRQ',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'MCS1_CH6_EIRQ',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'MCS1_CH7_EIRQ',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'MCS2_CH0_EIRQ',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'MCS2_CH1_EIRQ',0,4
	.word	10325
	.byte	1,14,2,35,0,12
	.byte	'MCS2_CH2_EIRQ',0,4
	.word	10325
	.byte	1,13,2,35,0,12
	.byte	'MCS2_CH3_EIRQ',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'MCS2_CH4_EIRQ',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'MCS2_CH5_EIRQ',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'MCS2_CH6_EIRQ',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'MCS2_CH7_EIRQ',0,4
	.word	10325
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,169,47,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	57072
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM',0,10,133,59,25,68,14
	.byte	'IRQG_0',0
	.word	51757
	.byte	4,2,35,0,14
	.byte	'IRQG_1',0
	.word	52505
	.byte	4,2,35,4,14
	.byte	'IRQG_2',0
	.word	53176
	.byte	4,2,35,8,14
	.byte	'reserved_C',0
	.word	1935
	.byte	4,2,35,12,14
	.byte	'IRQG_4',0
	.word	53847
	.byte	4,2,35,16,14
	.byte	'reserved_14',0
	.word	1935
	.byte	4,2,35,20,14
	.byte	'IRQG_6',0
	.word	54699
	.byte	4,2,35,24,14
	.byte	'reserved_1C',0
	.word	3754
	.byte	8,2,35,28,14
	.byte	'IRQG_9',0
	.word	55571
	.byte	4,2,35,36,14
	.byte	'reserved_28',0
	.word	3754
	.byte	8,2,35,40,14
	.byte	'IRQG_MEI',0
	.word	56029
	.byte	4,2,35,48,14
	.byte	'IRQG_CEI0',0
	.word	56334
	.byte	4,2,35,52,14
	.byte	'IRQG_CEI1',0
	.word	57032
	.byte	4,2,35,56,14
	.byte	'reserved_3C',0
	.word	1935
	.byte	4,2,35,60,14
	.byte	'IRQG_CEI3',0
	.word	57730
	.byte	4,2,35,64,0,10
	.word	57770
	.byte	15,188,3
	.word	508
	.byte	16,187,3,0,11
	.byte	'_Ifx_GTM_SPE_CTRL_STAT_Bits',0,10,246,27,16,4,12
	.byte	'SPE_EN',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'SIE0',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'SIE1',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'SIE2',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'TRIG_SEL',0,4
	.word	10325
	.byte	2,26,2,35,0,12
	.byte	'TIM_SEL',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'FSOM',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'SPE_PAT_PTR',0,4
	.word	10325
	.byte	3,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'AIP',0,4
	.word	10325
	.byte	3,17,2,35,0,12
	.byte	'ADIR',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'PIP',0,4
	.word	10325
	.byte	3,13,2,35,0,12
	.byte	'PDIR',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'NIP',0,4
	.word	10325
	.byte	3,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10325
	.byte	1,8,2,35,0,12
	.byte	'FSOL',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,153,51,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	58081
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_PAT_Bits',0,10,204,28,16,4,12
	.byte	'IP0_VAL',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'IP0_PAT',0,4
	.word	10325
	.byte	3,28,2,35,0,12
	.byte	'IP1_VAL',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'IP1_PAT',0,4
	.word	10325
	.byte	3,24,2,35,0,12
	.byte	'IP2_VAL',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'IP2_PAT',0,4
	.word	10325
	.byte	3,20,2,35,0,12
	.byte	'IP3_VAL',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'IP3_PAT',0,4
	.word	10325
	.byte	3,16,2,35,0,12
	.byte	'IP4_VAL',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'IP4_PAT',0,4
	.word	10325
	.byte	3,12,2,35,0,12
	.byte	'IP5_VAL',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'IP5_PAT',0,4
	.word	10325
	.byte	3,8,2,35,0,12
	.byte	'IP6_VAL',0,4
	.word	10325
	.byte	1,7,2,35,0,12
	.byte	'IP6_PAT',0,4
	.word	10325
	.byte	3,4,2,35,0,12
	.byte	'IP7_VAL',0,4
	.word	10325
	.byte	1,3,2,35,0,12
	.byte	'IP7_PAT',0,4
	.word	10325
	.byte	3,0,2,35,0,0,13,10,217,51,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	58439
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_OUT_PAT_Bits',0,10,197,28,16,4,12
	.byte	'SPE_OUT_PAT',0,4
	.word	10325
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10325
	.byte	16,0,2,35,0,0,13,10,209,51,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	58812
	.byte	4,2,35,0,0,15,32
	.word	58891
	.byte	16,7,0,11
	.byte	'_Ifx_GTM_SPE_OUT_CTRL_Bits',0,10,190,28,16,4,12
	.byte	'SPE_OUT_CTRL',0,4
	.word	10325
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10325
	.byte	16,0,2,35,0,0,13,10,201,51,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	58940
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_IRQ_NOTIFY_Bits',0,10,179,28,16,4,12
	.byte	'SPE_NIPD',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'SPE_DCHG',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'SPE_PERR',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'SPE_BIS',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'SPE_RCMP',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10325
	.byte	27,0,2,35,0,0,13,10,193,51,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	59061
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_IRQ_EN_Bits',0,10,150,28,16,4,12
	.byte	'SPE_NIPD_IRQ_EN',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'SPE_DCHG_IRQ_EN',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'SPE_PERR_IRQ_EN',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'SPE_BIS_IRQ_EN',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'SPE_RCMP_IRQ_EN',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10325
	.byte	27,0,2,35,0,0,13,10,169,51,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	59258
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_IRQ_FORCINT_Bits',0,10,161,28,16,4,12
	.byte	'TRG_SPE_NIPD',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'TRG_SPE_DCHG',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'TRG_SPE_PERR',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'TRG_SPE_BIS',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'TRG_SPE_RCMP',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10325
	.byte	27,0,2,35,0,0,13,10,177,51,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	59486
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_IRQ_MODE_Bits',0,10,172,28,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10325
	.byte	30,0,2,35,0,0,13,10,185,51,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	59704
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_EIRQ_EN_Bits',0,10,139,28,16,4,12
	.byte	'SPE_NIPD_EIRQ_EN',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'SPE_DCHG_EIRQ_EN',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'SPE_PERR_EIRQ_EN',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'SPE_BIS_EIRQ_EN',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'SPE_RCMP_EIRQ_EN',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10325
	.byte	27,0,2,35,0,0,13,10,161,51,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	59820
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_CNT_Bits',0,10,239,27,16,4,12
	.byte	'CNT',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,145,51,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	60054
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_CMP_Bits',0,10,232,27,16,4,12
	.byte	'CMP',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,137,51,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	60161
	.byte	4,2,35,0,0,15,56
	.word	508
	.byte	16,55,0,11
	.byte	'_Ifx_GTM_SPE',0,10,208,59,25,128,1,14
	.byte	'CTRL_STAT',0
	.word	58399
	.byte	4,2,35,0,14
	.byte	'PAT',0
	.word	58772
	.byte	4,2,35,4,14
	.byte	'OUT_PAT',0
	.word	58931
	.byte	32,2,35,8,14
	.byte	'OUT_CTRL',0
	.word	59021
	.byte	4,2,35,40,14
	.byte	'IRQ_NOTIFY',0
	.word	59218
	.byte	4,2,35,44,14
	.byte	'IRQ_EN',0
	.word	59446
	.byte	4,2,35,48,14
	.byte	'IRQ_FORCINT',0
	.word	59664
	.byte	4,2,35,52,14
	.byte	'IRQ_MODE',0
	.word	59780
	.byte	4,2,35,56,14
	.byte	'EIRQ_EN',0
	.word	60014
	.byte	4,2,35,60,14
	.byte	'CNT',0
	.word	60121
	.byte	4,2,35,64,14
	.byte	'CMP',0
	.word	60228
	.byte	4,2,35,68,14
	.byte	'reserved_48',0
	.word	60268
	.byte	56,2,35,72,0,15,128,2
	.word	60277
	.byte	16,1,0,10
	.word	60504
	.byte	15,128,12
	.word	508
	.byte	16,255,11,0,11
	.byte	'_Ifx_GTM_MAP_CTRL_Bits',0,10,171,23,16,4,12
	.byte	'TSEL',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'SSL',0,4
	.word	10325
	.byte	3,28,2,35,0,12
	.byte	'LSEL',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10325
	.byte	11,16,2,35,0,12
	.byte	'TSPP0_EN',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'TSPP0_DLD',0,4
	.word	10325
	.byte	1,14,2,35,0,12
	.byte	'reserved_18',0,4
	.word	10325
	.byte	2,12,2,35,0,12
	.byte	'TSPP0_I0V',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'TSPP0_I1V',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'TSPP0_I2V',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10325
	.byte	1,8,2,35,0,12
	.byte	'TSPP1_EN',0,4
	.word	10325
	.byte	1,7,2,35,0,12
	.byte	'TSPP1_DLD',0,4
	.word	10325
	.byte	1,6,2,35,0,12
	.byte	'reserved_26',0,4
	.word	10325
	.byte	2,4,2,35,0,12
	.byte	'TSPP1_I0V',0,4
	.word	10325
	.byte	1,3,2,35,0,12
	.byte	'TSPP1_I1V',0,4
	.word	10325
	.byte	1,2,2,35,0,12
	.byte	'TSPP1_I2V',0,4
	.word	10325
	.byte	1,1,2,35,0,12
	.byte	'reserved_31',0,4
	.word	10325
	.byte	1,0,2,35,0,0,13,10,169,48,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	60530
	.byte	4,2,35,0,0,15,60
	.word	508
	.byte	16,59,0,11
	.byte	'_Ifx_GTM_MCFG_CTRL_Bits',0,10,194,23,16,4,12
	.byte	'MEM0',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'MEM1',0,4
	.word	10325
	.byte	2,28,2,35,0,12
	.byte	'MEM2',0,4
	.word	10325
	.byte	2,26,2,35,0,12
	.byte	'reserved_6',0,4
	.word	10325
	.byte	26,0,2,35,0,0,13,10,177,48,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	60978
	.byte	4,2,35,0,0,15,188,1
	.word	508
	.byte	16,187,1,0,11
	.byte	'_Ifx_GTM_TIM_CH_GPR0_Bits',0,10,248,29,16,4,12
	.byte	'GPR0',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'ECNT',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,225,52,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	61130
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_GPR1_Bits',0,10,255,29,16,4,12
	.byte	'GPR1',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'ECNT',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,233,52,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	61235
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_CNT_Bits',0,10,165,29,16,4,12
	.byte	'CNT',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,161,52,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	61340
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_ECNT_Bits',0,10,208,29,16,4,12
	.byte	'ECNT',0,4
	.word	10325
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10325
	.byte	16,0,2,35,0,0,13,10,185,52,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	61450
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_CNTS_Bits',0,10,172,29,16,4,12
	.byte	'CNTS',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'ECNT',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,169,52,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	61562
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_TDUC_Bits',0,10,177,30,16,4,12
	.byte	'TO_CNT',0,4
	.word	10325
	.byte	8,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10325
	.byte	24,0,2,35,0,0,13,10,145,53,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	61667
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_TDUV_Bits',0,10,184,30,16,4,12
	.byte	'TOV',0,4
	.word	10325
	.byte	8,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10325
	.byte	20,4,2,35,0,12
	.byte	'TCS',0,4
	.word	10325
	.byte	3,1,2,35,0,12
	.byte	'reserved_31',0,4
	.word	10325
	.byte	1,0,2,35,0,0,13,10,153,53,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	61780
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_FLT_RE_Bits',0,10,241,29,16,4,12
	.byte	'FLT_RE',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,217,52,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	61928
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_FLT_FE_Bits',0,10,234,29,16,4,12
	.byte	'FLT_FE',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,209,52,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	62044
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_CTRL_Bits',0,10,179,29,16,4,12
	.byte	'TIM_EN',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'TIM_MODE',0,4
	.word	10325
	.byte	3,28,2,35,0,12
	.byte	'OSM',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'ARU_EN',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'CICTRL',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'TBU0_SEL',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'GPR0_SEL',0,4
	.word	10325
	.byte	2,22,2,35,0,12
	.byte	'GPR1_SEL',0,4
	.word	10325
	.byte	2,20,2,35,0,12
	.byte	'CNTS_SEL',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'DSL',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'ISL',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'ECNT_RESET',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'FLT_EN',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'FLT_CNT_FRQ',0,4
	.word	10325
	.byte	2,13,2,35,0,12
	.byte	'EXT_CAP_EN',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'FLT_MODE_RE',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'FLT_CTR_RE',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'FLT_MODE_FE',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'FLT_CTR_FE',0,4
	.word	10325
	.byte	1,8,2,35,0,12
	.byte	'CLK_SEL',0,4
	.word	10325
	.byte	3,5,2,35,0,12
	.byte	'FR_ECNT_OFL',0,4
	.word	10325
	.byte	1,4,2,35,0,12
	.byte	'EGPR0_SEL',0,4
	.word	10325
	.byte	1,3,2,35,0,12
	.byte	'EGPR1_SEL',0,4
	.word	10325
	.byte	1,2,2,35,0,12
	.byte	'TOCTRL',0,4
	.word	10325
	.byte	2,0,2,35,0,0,13,10,177,52,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	62160
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_ECTRL_Bits',0,10,215,29,16,4,12
	.byte	'EXT_CAP_SRC',0,4
	.word	10325
	.byte	3,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10325
	.byte	29,0,2,35,0,0,13,10,193,52,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	62709
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_IRQ_NOTIFY_Bits',0,10,165,30,16,4,12
	.byte	'NEWVAL',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'ECNTOFL',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'CNTOFL',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'GPROFL',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'TODET',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'GLITCHDET',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'reserved_6',0,4
	.word	10325
	.byte	26,0,2,35,0,0,13,10,137,53,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	62828
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_IRQ_EN_Bits',0,10,134,30,16,4,12
	.byte	'NEWVAL_IRQ_EN',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'ECNTOFL_IRQ_EN',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'CNTOFL_IRQ_EN',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'GPROFL_IRQ_EN',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'TODET_IRQ_EN',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'GLITCHDET_IRQ_EN',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'reserved_6',0,4
	.word	10325
	.byte	26,0,2,35,0,0,13,10,241,52,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	63040
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_IRQ_FORCINT_Bits',0,10,146,30,16,4,12
	.byte	'TRG_NEWVAL',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'TRG_ECNTOFL',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'TRG_CNTOFL',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'TRG_GPROFL',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'TRG_TODET',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'TRG_GLITCHDET',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'reserved_6',0,4
	.word	10325
	.byte	26,0,2,35,0,0,13,10,249,52,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	63290
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_IRQ_MODE_Bits',0,10,158,30,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10325
	.byte	30,0,2,35,0,0,13,10,129,53,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	63527
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_EIRQ_EN_Bits',0,10,222,29,16,4,12
	.byte	'NEWVAL_EIRQ_EN',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'ECNTOFL_EIRQ_EN',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'CNTOFL_EIRQ_EN',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'GPROFL_EIRQ_EN',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'TODET_EIRQ_EN',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'GLITCHDET_EIRQ_EN',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'reserved_6',0,4
	.word	10325
	.byte	26,0,2,35,0,0,13,10,201,52,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	63646
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH',0,10,221,56,25,120,14
	.byte	'GPR0',0
	.word	61195
	.byte	4,2,35,0,14
	.byte	'GPR1',0
	.word	61300
	.byte	4,2,35,4,14
	.byte	'CNT',0
	.word	61410
	.byte	4,2,35,8,14
	.byte	'ECNT',0
	.word	61522
	.byte	4,2,35,12,14
	.byte	'CNTS',0
	.word	61627
	.byte	4,2,35,16,14
	.byte	'TDUC',0
	.word	61740
	.byte	4,2,35,20,14
	.byte	'TDUV',0
	.word	61888
	.byte	4,2,35,24,14
	.byte	'FLT_RE',0
	.word	62004
	.byte	4,2,35,28,14
	.byte	'FLT_FE',0
	.word	62120
	.byte	4,2,35,32,14
	.byte	'CTRL',0
	.word	62669
	.byte	4,2,35,36,14
	.byte	'ECTRL',0
	.word	62788
	.byte	4,2,35,40,14
	.byte	'IRQ_NOTIFY',0
	.word	63000
	.byte	4,2,35,44,14
	.byte	'IRQ_EN',0
	.word	63250
	.byte	4,2,35,48,14
	.byte	'IRQ_FORCINT',0
	.word	63487
	.byte	4,2,35,52,14
	.byte	'IRQ_MODE',0
	.word	63606
	.byte	4,2,35,56,14
	.byte	'EIRQ_EN',0
	.word	63863
	.byte	4,2,35,60,14
	.byte	'reserved_40',0
	.word	60268
	.byte	56,2,35,64,0,10
	.word	63903
	.byte	11
	.byte	'_Ifx_GTM_TIM_IN_SRC_Bits',0,10,193,30,16,4,12
	.byte	'VAL_0',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'MODE_0',0,4
	.word	10325
	.byte	2,28,2,35,0,12
	.byte	'VAL_1',0,4
	.word	10325
	.byte	2,26,2,35,0,12
	.byte	'MODE_1',0,4
	.word	10325
	.byte	2,24,2,35,0,12
	.byte	'VAL_2',0,4
	.word	10325
	.byte	2,22,2,35,0,12
	.byte	'MODE_2',0,4
	.word	10325
	.byte	2,20,2,35,0,12
	.byte	'VAL_3',0,4
	.word	10325
	.byte	2,18,2,35,0,12
	.byte	'MODE_3',0,4
	.word	10325
	.byte	2,16,2,35,0,12
	.byte	'VAL_4',0,4
	.word	10325
	.byte	2,14,2,35,0,12
	.byte	'MODE_4',0,4
	.word	10325
	.byte	2,12,2,35,0,12
	.byte	'VAL_5',0,4
	.word	10325
	.byte	2,10,2,35,0,12
	.byte	'MODE_5',0,4
	.word	10325
	.byte	2,8,2,35,0,12
	.byte	'VAL_6',0,4
	.word	10325
	.byte	2,6,2,35,0,12
	.byte	'MODE_6',0,4
	.word	10325
	.byte	2,4,2,35,0,12
	.byte	'VAL_7',0,4
	.word	10325
	.byte	2,2,2,35,0,12
	.byte	'MODE_7',0,4
	.word	10325
	.byte	2,0,2,35,0,0,13,10,161,53,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	64202
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_RST_Bits',0,10,214,30,16,4,12
	.byte	'RST_CH0',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'RST_CH1',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'RST_CH2',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'RST_CH3',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'RST_CH4',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'RST_CH5',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'RST_CH6',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'RST_CH7',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10325
	.byte	24,0,2,35,0,0,13,10,169,53,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	64554
	.byte	4,2,35,0,0,10
	.word	63903
	.byte	10
	.word	63903
	.byte	10
	.word	63903
	.byte	10
	.word	63903
	.byte	10
	.word	63903
	.byte	10
	.word	63903
	.byte	10
	.word	63903
	.byte	15,136,8
	.word	508
	.byte	16,135,8,0,11
	.byte	'_Ifx_GTM_TIM',0,10,237,59,25,128,16,14
	.byte	'CH0',0
	.word	64197
	.byte	120,2,35,0,14
	.byte	'IN_SRC',0
	.word	64514
	.byte	4,2,35,120,14
	.byte	'RST',0
	.word	64757
	.byte	4,2,35,124,14
	.byte	'CH1',0
	.word	64797
	.byte	120,3,35,128,1,14
	.byte	'reserved_F8',0
	.word	3754
	.byte	8,3,35,248,1,14
	.byte	'CH2',0
	.word	64802
	.byte	120,3,35,128,2,14
	.byte	'reserved_178',0
	.word	3754
	.byte	8,3,35,248,2,14
	.byte	'CH3',0
	.word	64807
	.byte	120,3,35,128,3,14
	.byte	'reserved_1F8',0
	.word	3754
	.byte	8,3,35,248,3,14
	.byte	'CH4',0
	.word	64812
	.byte	120,3,35,128,4,14
	.byte	'reserved_278',0
	.word	3754
	.byte	8,3,35,248,4,14
	.byte	'CH5',0
	.word	64817
	.byte	120,3,35,128,5,14
	.byte	'reserved_2F8',0
	.word	3754
	.byte	8,3,35,248,5,14
	.byte	'CH6',0
	.word	64822
	.byte	120,3,35,128,6,14
	.byte	'reserved_378',0
	.word	3754
	.byte	8,3,35,248,6,14
	.byte	'CH7',0
	.word	64827
	.byte	120,3,35,128,7,14
	.byte	'reserved_3F8',0
	.word	64832
	.byte	136,8,3,35,248,7,0,15,128,48
	.word	64843
	.byte	16,2,0,10
	.word	65165
	.byte	15,128,176,1
	.word	508
	.byte	16,255,175,1,0,15,128,32
	.word	25142
	.byte	16,1,0,10
	.word	65193
	.byte	15,128,128,1
	.word	508
	.byte	16,255,127,0,15,128,64
	.word	16483
	.byte	16,3,0,10
	.word	65220
	.byte	15,128,160,2
	.word	508
	.byte	16,255,159,2,0,11
	.byte	'_Ifx_GTM_F2A_RD_CH_ARU_RD_FIFO_Bits',0,10,235,18,16,4,12
	.byte	'ADDR',0,4
	.word	10325
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10325
	.byte	23,0,2,35,0,0,13,10,233,45,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	65248
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_F2A_RD_CH',0,10,231,55,25,4,14
	.byte	'ARU_RD_FIFO',0
	.word	65329
	.byte	4,2,35,0,0,15,32
	.word	65369
	.byte	16,7,0,10
	.word	65416
	.byte	11
	.byte	'_Ifx_GTM_F2A_STR_CH_STR_CFG_Bits',0,10,242,18,16,4,12
	.byte	'reserved_0',0,4
	.word	10325
	.byte	16,16,2,35,0,12
	.byte	'TMODE',0,4
	.word	10325
	.byte	2,14,2,35,0,12
	.byte	'DIR',0,4
	.word	10325
	.byte	1,13,2,35,0,12
	.byte	'reserved_19',0,4
	.word	10325
	.byte	13,0,2,35,0,0,13,10,241,45,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	65430
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_F2A_STR_CH',0,10,237,55,25,4,14
	.byte	'STR_CFG',0
	.word	65547
	.byte	4,2,35,0,0,15,32
	.word	65587
	.byte	16,7,0,10
	.word	65631
	.byte	11
	.byte	'_Ifx_GTM_F2A_ENABLE_Bits',0,10,221,18,16,4,12
	.byte	'STR0_EN',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'STR1_EN',0,4
	.word	10325
	.byte	2,28,2,35,0,12
	.byte	'STR2_EN',0,4
	.word	10325
	.byte	2,26,2,35,0,12
	.byte	'STR3_EN',0,4
	.word	10325
	.byte	2,24,2,35,0,12
	.byte	'STR4_EN',0,4
	.word	10325
	.byte	2,22,2,35,0,12
	.byte	'STR5_EN',0,4
	.word	10325
	.byte	2,20,2,35,0,12
	.byte	'STR6_EN',0,4
	.word	10325
	.byte	2,18,2,35,0,12
	.byte	'STR7_EN',0,4
	.word	10325
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10325
	.byte	16,0,2,35,0,0,13,10,225,45,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	65645
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_F2A',0,10,247,58,25,68,14
	.byte	'RD_CH',0
	.word	65425
	.byte	32,2,35,0,14
	.byte	'STR_CH',0
	.word	65640
	.byte	32,2,35,32,14
	.byte	'ENABLE',0
	.word	65852
	.byte	4,2,35,64,0,10
	.word	65892
	.byte	11
	.byte	'_Ifx_GTM_AFD_CH_BUF_ACC_Bits',0,10,122,16,4,12
	.byte	'DATA',0,4
	.word	10325
	.byte	29,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10325
	.byte	3,0,2,35,0,0,13,10,240,33,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	65964
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_AFD_CH',0,10,153,55,25,16,14
	.byte	'BUF_ACC',0
	.word	66038
	.byte	4,2,35,0,14
	.byte	'reserved_4',0
	.word	4094
	.byte	12,2,35,4,0,15,128,1
	.word	66078
	.byte	16,7,0,10
	.word	66138
	.byte	11
	.byte	'_Ifx_GTM_AFD',0,10,142,57,25,128,1,14
	.byte	'CH',0
	.word	66148
	.byte	128,1,2,35,0,0,10
	.word	66153
	.byte	15,128,6
	.word	508
	.byte	16,255,5,0,11
	.byte	'_Ifx_GTM_FIFO_CH_CTRL_Bits',0,10,251,18,16,4,12
	.byte	'RBM',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'RAP',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'FLUSH',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'WULOCK',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10325
	.byte	28,0,2,35,0,0,13,10,249,45,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	66203
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_END_ADDR_Bits',0,10,143,19,16,4,12
	.byte	'ADDR',0,4
	.word	10325
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10325
	.byte	22,0,2,35,0,0,13,10,137,46,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	66364
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_START_ADDR_Bits',0,10,210,19,16,4,12
	.byte	'ADDR',0,4
	.word	10325
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10325
	.byte	22,0,2,35,0,0,13,10,201,46,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	66481
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_UPPER_WM_Bits',0,10,227,19,16,4,12
	.byte	'ADDR',0,4
	.word	10325
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10325
	.byte	22,0,2,35,0,0,13,10,217,46,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	66600
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_LOWER_WM_Bits',0,10,196,19,16,4,12
	.byte	'ADDR',0,4
	.word	10325
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10325
	.byte	22,0,2,35,0,0,13,10,185,46,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	66717
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_STATUS_Bits',0,10,217,19,16,4,12
	.byte	'EMPTY',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'FULL',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'LOW_WM',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'UP_WM',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10325
	.byte	28,0,2,35,0,0,13,10,209,46,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	66834
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_FILL_LEVEL_Bits',0,10,150,19,16,4,12
	.byte	'LEVEL',0,4
	.word	10325
	.byte	11,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	10325
	.byte	21,0,2,35,0,0,13,10,145,46,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	67000
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_WR_PTR_Bits',0,10,234,19,16,4,12
	.byte	'ADDR',0,4
	.word	10325
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10325
	.byte	22,0,2,35,0,0,13,10,225,46,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	67120
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_RD_PTR_Bits',0,10,203,19,16,4,12
	.byte	'ADDR',0,4
	.word	10325
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10325
	.byte	22,0,2,35,0,0,13,10,193,46,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	67235
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_IRQ_NOTIFY_Bits',0,10,186,19,16,4,12
	.byte	'FIFO_EMPTY',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'FIFO_FULL',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'FIFO_LWM',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'FIFO_UWM',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10325
	.byte	28,0,2,35,0,0,13,10,177,46,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	67350
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_IRQ_EN_Bits',0,10,157,19,16,4,12
	.byte	'FIFO_EMPTY_IRQ_EN',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'FIFO_FULL_IRQ_EN',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'FIFO_LWM_IRQ_EN',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'FIFO_UWM_IRQ_EN',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10325
	.byte	28,0,2,35,0,0,13,10,153,46,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	67535
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_IRQ_FORCINT_Bits',0,10,167,19,16,4,12
	.byte	'TRG_FIFO_EMPTY',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'TRG_FIFO_FULL',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'TRG_FIFO_LWM',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'TRG_FIFO_UWM',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10325
	.byte	28,0,2,35,0,0,13,10,161,46,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	67744
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_IRQ_MODE_Bits',0,10,177,19,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'DMA_HYSTERESIS',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'DMA_HYST_DIR',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10325
	.byte	28,0,2,35,0,0,13,10,169,46,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	67946
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_EIRQ_EN_Bits',0,10,133,19,16,4,12
	.byte	'FIFO_EMPTY_EIRQ_EN',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'FIFO_FULL_EIRQ_EN',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'FIFO_LWM_EIRQ_EN',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'FIFO_UWM_EIRQ_EN',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'Reserved',0,4
	.word	10325
	.byte	28,0,2,35,0,0,13,10,129,46,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	68116
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH',0,10,243,55,25,64,14
	.byte	'CTRL',0
	.word	66324
	.byte	4,2,35,0,14
	.byte	'END_ADDR',0
	.word	66441
	.byte	4,2,35,4,14
	.byte	'START_ADDR',0
	.word	66560
	.byte	4,2,35,8,14
	.byte	'UPPER_WM',0
	.word	66677
	.byte	4,2,35,12,14
	.byte	'LOWER_WM',0
	.word	66794
	.byte	4,2,35,16,14
	.byte	'STATUS',0
	.word	66960
	.byte	4,2,35,20,14
	.byte	'FILL_LEVEL',0
	.word	67080
	.byte	4,2,35,24,14
	.byte	'WR_PTR',0
	.word	67195
	.byte	4,2,35,28,14
	.byte	'RD_PTR',0
	.word	67310
	.byte	4,2,35,32,14
	.byte	'IRQ_NOTIFY',0
	.word	67495
	.byte	4,2,35,36,14
	.byte	'IRQ_EN',0
	.word	67704
	.byte	4,2,35,40,14
	.byte	'IRQ_FORCINT',0
	.word	67906
	.byte	4,2,35,44,14
	.byte	'IRQ_MODE',0
	.word	68076
	.byte	4,2,35,48,14
	.byte	'EIRQ_EN',0
	.word	68288
	.byte	4,2,35,52,14
	.byte	'reserved_38',0
	.word	3754
	.byte	8,2,35,56,0,15,128,4
	.word	68328
	.byte	16,7,0,10
	.word	68621
	.byte	11
	.byte	'_Ifx_GTM_FIFO',0,10,255,58,25,128,4,14
	.byte	'CH',0
	.word	68631
	.byte	128,4,2,35,0,0,10
	.word	68636
	.byte	15,128,244,3
	.word	508
	.byte	16,255,243,3,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_0_Bits',0,10,144,12,16,4,12
	.byte	'MLT',0,4
	.word	10325
	.byte	10,22,2,35,0,12
	.byte	'IFP',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'SNU',0,4
	.word	10325
	.byte	5,16,2,35,0,12
	.byte	'TNU',0,4
	.word	10325
	.byte	9,7,2,35,0,12
	.byte	'AMS',0,4
	.word	10325
	.byte	1,6,2,35,0,12
	.byte	'AMT',0,4
	.word	10325
	.byte	1,5,2,35,0,12
	.byte	'IDS',0,4
	.word	10325
	.byte	1,4,2,35,0,12
	.byte	'IDT',0,4
	.word	10325
	.byte	1,3,2,35,0,12
	.byte	'SEN',0,4
	.word	10325
	.byte	1,2,2,35,0,12
	.byte	'TEN',0,4
	.word	10325
	.byte	1,1,2,35,0,12
	.byte	'RMO',0,4
	.word	10325
	.byte	1,0,2,35,0,0,13,10,224,40,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	68689
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_1_Bits',0,10,186,12,16,4,12
	.byte	'DMO',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'DEN',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'IDDS',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'COA',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'PIT',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'SGE1',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'DLM1',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'PCM1',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'SGE2',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'DLM2',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'PCM2',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'SYN_NS',0,4
	.word	10325
	.byte	5,16,2,35,0,12
	.byte	'SYN_NT',0,4
	.word	10325
	.byte	5,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'LCD',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'SWR',0,4
	.word	10325
	.byte	1,8,2,35,0,12
	.byte	'SYSF',0,4
	.word	10325
	.byte	1,7,2,35,0,12
	.byte	'TS0_HRS',0,4
	.word	10325
	.byte	1,6,2,35,0,12
	.byte	'TS0_HRT',0,4
	.word	10325
	.byte	1,5,2,35,0,12
	.byte	'SMC',0,4
	.word	10325
	.byte	1,4,2,35,0,12
	.byte	'SSL',0,4
	.word	10325
	.byte	2,2,2,35,0,12
	.byte	'TSL',0,4
	.word	10325
	.byte	2,0,2,35,0,0,13,10,248,40,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	68927
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_2_Bits',0,10,226,12,16,4,12
	.byte	'reserved_0',0,4
	.word	10325
	.byte	8,24,2,35,0,12
	.byte	'AEN0',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'AEN1',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'AEN2',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'AEN3',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'AEN4',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'AEN5',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'AEN6',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'AEN7',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'WAD0',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'WAD1',0,4
	.word	10325
	.byte	1,14,2,35,0,12
	.byte	'WAD2',0,4
	.word	10325
	.byte	1,13,2,35,0,12
	.byte	'WAD3',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'WAD4',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'WAD5',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'WAD6',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'WAD7',0,4
	.word	10325
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,136,41,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	69360
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_3_Bits',0,10,249,12,16,4,12
	.byte	'reserved_0',0,4
	.word	10325
	.byte	8,24,2,35,0,12
	.byte	'AEN8',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'AEN9',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'AEN10',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'AEN11',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'AEN12',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'AEN13',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'AEN14',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'AEN15',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'WAD8',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'WAD9',0,4
	.word	10325
	.byte	1,14,2,35,0,12
	.byte	'WAD10',0,4
	.word	10325
	.byte	1,13,2,35,0,12
	.byte	'WAD11',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'WAD12',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'WAD13',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'WAD14',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'WAD15',0,4
	.word	10325
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,144,41,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	69734
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_4_Bits',0,10,144,13,16,4,12
	.byte	'reserved_0',0,4
	.word	10325
	.byte	8,24,2,35,0,12
	.byte	'AEN16',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'AEN17',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'AEN18',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'AEN19',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'AEN20',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'AEN21',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'AEN22',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'AEN23',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'WAD16',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'WAD17',0,4
	.word	10325
	.byte	1,14,2,35,0,12
	.byte	'WAD18',0,4
	.word	10325
	.byte	1,13,2,35,0,12
	.byte	'WAD19',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'WAD20',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'WAD21',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'WAD22',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'WAD23',0,4
	.word	10325
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,152,41,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	70120
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_ACT_STA_Bits',0,10,230,10,16,4,12
	.byte	'ACT_Ni',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,192,39,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	70510
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_OSW_Bits',0,10,147,16,16,4,12
	.byte	'SWON_S',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'SWON_T',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10325
	.byte	6,24,2,35,0,12
	.byte	'OSS',0,4
	.word	10325
	.byte	2,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10325
	.byte	22,0,2,35,0,0,13,10,175,43,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	70625
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_AOSV_2_Bits',0,10,145,11,16,4,12
	.byte	'AOSV_2A',0,4
	.word	10325
	.byte	8,24,2,35,0,12
	.byte	'AOSV_2B',0,4
	.word	10325
	.byte	8,16,2,35,0,12
	.byte	'AOSV_2C',0,4
	.word	10325
	.byte	8,8,2,35,0,12
	.byte	'AOSV_2D',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,240,39,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	70791
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_APT_Bits',0,10,192,11,16,4,12
	.byte	'reserved_0',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'WAPT',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'APT',0,4
	.word	10325
	.byte	10,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'WAPT_2B',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'APT_2B',0,4
	.word	10325
	.byte	10,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,144,40,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	70940
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_APS_Bits',0,10,162,11,16,4,12
	.byte	'reserved_0',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'WAPS',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'APS',0,4
	.word	10325
	.byte	6,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10325
	.byte	5,19,2,35,0,12
	.byte	'WAPS_1C2',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'APS_1C2',0,4
	.word	10325
	.byte	6,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	10325
	.byte	12,0,2,35,0,0,13,10,248,39,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	71146
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_APT_2C_Bits',0,10,184,11,16,4,12
	.byte	'reserved_0',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'APT_2C',0,4
	.word	10325
	.byte	10,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	10325
	.byte	20,0,2,35,0,0,13,10,152,40,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	71353
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_APS_1C3_Bits',0,10,154,11,16,4,12
	.byte	'reserved_0',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'APS_1C3',0,4
	.word	10325
	.byte	6,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10325
	.byte	24,0,2,35,0,0,13,10,128,40,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	71489
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NUTC_Bits',0,10,132,16,16,4,12
	.byte	'NUTE',0,4
	.word	10325
	.byte	10,22,2,35,0,12
	.byte	'FST',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	10325
	.byte	2,19,2,35,0,12
	.byte	'SYN_T',0,4
	.word	10325
	.byte	3,16,2,35,0,12
	.byte	'SYN_T_OLD',0,4
	.word	10325
	.byte	3,13,2,35,0,12
	.byte	'VTN',0,4
	.word	10325
	.byte	6,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	10325
	.byte	4,3,2,35,0,12
	.byte	'WNUT',0,4
	.word	10325
	.byte	1,2,2,35,0,12
	.byte	'WSYN',0,4
	.word	10325
	.byte	1,1,2,35,0,12
	.byte	'WVTN',0,4
	.word	10325
	.byte	1,0,2,35,0,0,13,10,167,43,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	71626
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NUSC_Bits',0,10,246,15,16,4,12
	.byte	'NUSE',0,4
	.word	10325
	.byte	6,26,2,35,0,12
	.byte	'FSS',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'SYN_S',0,4
	.word	10325
	.byte	6,19,2,35,0,12
	.byte	'SYN_S_OLD',0,4
	.word	10325
	.byte	6,13,2,35,0,12
	.byte	'VSN',0,4
	.word	10325
	.byte	6,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	10325
	.byte	4,3,2,35,0,12
	.byte	'WNUS',0,4
	.word	10325
	.byte	1,2,2,35,0,12
	.byte	'WSYN',0,4
	.word	10325
	.byte	1,1,2,35,0,12
	.byte	'WVSN',0,4
	.word	10325
	.byte	1,0,2,35,0,0,13,10,159,43,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	71875
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NTI_CNT_Bits',0,10,239,15,16,4,12
	.byte	'NTI_CNT',0,4
	.word	10325
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10325
	.byte	22,0,2,35,0,0,13,10,151,43,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	72101
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_IRQ_NOTIFY_Bits',0,10,235,14,16,4,12
	.byte	'PDI',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'PEI',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'TINI',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'TAXI',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'SISI',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'TISI',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'MSI',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'MTI',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'SASI',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'TASI',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'PWI',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'W2I',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'W1I',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'GL1I',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'LL1I',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'EI',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'GL2I',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'LL2I',0,4
	.word	10325
	.byte	1,14,2,35,0,12
	.byte	'TE0I',0,4
	.word	10325
	.byte	1,13,2,35,0,12
	.byte	'TE1I',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'TE2I',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'TE3I',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'TE4I',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'CDTI',0,4
	.word	10325
	.byte	1,8,2,35,0,12
	.byte	'CDSI',0,4
	.word	10325
	.byte	1,7,2,35,0,12
	.byte	'TORI',0,4
	.word	10325
	.byte	1,6,2,35,0,12
	.byte	'SORI',0,4
	.word	10325
	.byte	1,5,2,35,0,12
	.byte	'DCGI',0,4
	.word	10325
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	10325
	.byte	4,0,2,35,0,0,13,10,163,42,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	72217
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_IRQ_EN_Bits',0,10,160,14,16,4,12
	.byte	'PDI_IRQ_EN',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'PEI_IRQ_EN',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'TINI_IRQ_EN',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'TAXI_IRQ_EN',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'SISI_IRQ_EN',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'TISI_IRQ_EN',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'MSI_IRQ_EN',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'MTI_IRQ_EN',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'SASI_IRQ_EN',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'TASI_IRQ_EN',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'PWI_IRQ_EN',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'W2I_IRQ_EN',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'W1I_IRQ_EN',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'GL1I_IRQ_EN',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'LL1I_IRQ_EN',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'EI_IRQ_EN',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'GL2I_IRQ_EN',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'LL2I_IRQ_EN',0,4
	.word	10325
	.byte	1,14,2,35,0,12
	.byte	'TE0I_IRQ_EN',0,4
	.word	10325
	.byte	1,13,2,35,0,12
	.byte	'TE1I_IRQ_EN',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'TE2I_IRQ_EN',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'TE3I_IRQ_EN',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'TE4I_IRQ_EN',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'CDTI_IRQ_EN',0,4
	.word	10325
	.byte	1,8,2,35,0,12
	.byte	'CDSI_IRQ_EN',0,4
	.word	10325
	.byte	1,7,2,35,0,12
	.byte	'TORI',0,4
	.word	10325
	.byte	1,6,2,35,0,12
	.byte	'SORI',0,4
	.word	10325
	.byte	1,5,2,35,0,12
	.byte	'DCGI',0,4
	.word	10325
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	10325
	.byte	4,0,2,35,0,0,13,10,139,42,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	72756
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_IRQ_FORCINT_Bits',0,10,194,14,16,4,12
	.byte	'TRG_PDI',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'TRG_PEI',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'TRG_TINI',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'TRG_TAXI',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'TRG_SISI',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'TRG_TISI',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'TRG_MSI',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'TRG_MTI',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'TRG_SASI',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'TRG_TASI',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'TRG_PWI',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'TRG_W2I',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'TRG_W1I',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'TRG_GL1I',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'TRG_LL1I',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'TRG_EI',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'TRG_GL2I',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'TRG_LL2I',0,4
	.word	10325
	.byte	1,14,2,35,0,12
	.byte	'TRG_TE0I',0,4
	.word	10325
	.byte	1,13,2,35,0,12
	.byte	'TRG_TE1I',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'TRG_TE2I',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'TRG_TE3I',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'TRG_TE4I',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'TRG_CDTI',0,4
	.word	10325
	.byte	1,8,2,35,0,12
	.byte	'TRG_CDSI',0,4
	.word	10325
	.byte	1,7,2,35,0,12
	.byte	'TRG_TORI',0,4
	.word	10325
	.byte	1,6,2,35,0,12
	.byte	'TRG_SORI',0,4
	.word	10325
	.byte	1,5,2,35,0,12
	.byte	'TRG_DCGI',0,4
	.word	10325
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	10325
	.byte	4,0,2,35,0,0,13,10,147,42,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	73466
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_IRQ_MODE_Bits',0,10,228,14,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10325
	.byte	30,0,2,35,0,0,13,10,155,42,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	74118
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_EIRQ_EN_Bits',0,10,218,13,16,4,12
	.byte	'PDI_EIRQ_EN',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'PEI_EIRQ_EN',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'TINI_EIRQ_EN',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'TAXI_EIRQ_EN',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'SISI_EIRQ_EN',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'TISI_EIRQ_EN',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'MSI_EIRQ_EN',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'MTI_EIRQ_EN',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'SASI_EIRQ_EN',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'TASI_EIRQ_EN',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'PWI_EIRQ_EN',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'W2I_EIRQ_EN',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'W1I_EIRQ_EN',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'GL1I_EIRQ_EN',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'LL1I_EIRQ_EN',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'EI_EIRQ_EN',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'GL2I_EIRQ_EN',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'LL2I_EIRQ_EN',0,4
	.word	10325
	.byte	1,14,2,35,0,12
	.byte	'TE0I_EIRQ_EN',0,4
	.word	10325
	.byte	1,13,2,35,0,12
	.byte	'TE1I_EIRQ_EN',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'TE2I_EIRQ_EN',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'TE3I_EIRQ_EN',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'TE4I_EIRQ_EN',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'CDTI_EIRQ_EN',0,4
	.word	10325
	.byte	1,8,2,35,0,12
	.byte	'CDSI_EIRQ_EN',0,4
	.word	10325
	.byte	1,7,2,35,0,12
	.byte	'TORI',0,4
	.word	10325
	.byte	1,6,2,35,0,12
	.byte	'SORI',0,4
	.word	10325
	.byte	1,5,2,35,0,12
	.byte	'DCGI',0,4
	.word	10325
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	10325
	.byte	4,0,2,35,0,0,13,10,218,41,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	74235
	.byte	4,2,35,0,0,15,92
	.word	508
	.byte	16,91,0,11
	.byte	'_Ifx_GTM_DPLL_INC_CNT1_Bits',0,10,145,14,16,4,12
	.byte	'INC_CNT1',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,250,41,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	74980
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_INC_CNT2_Bits',0,10,153,14,16,4,12
	.byte	'INC_CNT2',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,131,42,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	75098
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_APT_SYNC_Bits',0,10,204,11,16,4,12
	.byte	'APT_2B_EXT',0,4
	.word	10325
	.byte	6,26,2,35,0,12
	.byte	'APT_2B_STATUS',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'reserved_7',0,4
	.word	10325
	.byte	7,18,2,35,0,12
	.byte	'APT_2B_OLD',0,4
	.word	10325
	.byte	10,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,160,40,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	75216
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_APS_SYNC_Bits',0,10,174,11,16,4,12
	.byte	'APS_1C2_EXT',0,4
	.word	10325
	.byte	6,26,2,35,0,12
	.byte	'APS_1C2_STATUS',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'reserved_7',0,4
	.word	10325
	.byte	7,18,2,35,0,12
	.byte	'APS_1C2_OLD',0,4
	.word	10325
	.byte	6,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	10325
	.byte	12,0,2,35,0,0,13,10,136,40,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	75405
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TBU_TS0_T_Bits',0,10,212,17,16,4,12
	.byte	'TBU_TS0_T',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,225,44,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	75597
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TBU_TS0_S_Bits',0,10,205,17,16,4,12
	.byte	'TBU_TS0_S',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,217,44,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	75717
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_ADD_IN_LD1_Bits',0,10,251,10,16,4,12
	.byte	'ADD_IN_LD_1',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,216,39,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	75837
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_ADD_IN_LD2_Bits',0,10,130,11,16,4,12
	.byte	'ADD_IN_LD_2',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,224,39,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	75960
	.byte	4,2,35,0,0,15,44
	.word	508
	.byte	16,43,0,11
	.byte	'_Ifx_GTM_DPLL_STATUS_Bits',0,10,169,17,16,4,12
	.byte	'reserved_0',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'CSO',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'CTO',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'CRO',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'RCS',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'RCT',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'PSE',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'SOR',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'MS',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'TOR',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'MT',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'RAM2_ERR',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10325
	.byte	2,17,2,35,0,12
	.byte	'LOW_RES',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'CSVS',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'CSVT',0,4
	.word	10325
	.byte	1,14,2,35,0,12
	.byte	'CAIP2',0,4
	.word	10325
	.byte	1,13,2,35,0,12
	.byte	'CAIP1',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'ISN',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'ITN',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'BWD2',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'BWD1',0,4
	.word	10325
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	1,7,2,35,0,12
	.byte	'LOCK2',0,4
	.word	10325
	.byte	1,6,2,35,0,12
	.byte	'SYS',0,4
	.word	10325
	.byte	1,5,2,35,0,12
	.byte	'SYT',0,4
	.word	10325
	.byte	1,4,2,35,0,12
	.byte	'FSD',0,4
	.word	10325
	.byte	1,3,2,35,0,12
	.byte	'FTD',0,4
	.word	10325
	.byte	1,2,2,35,0,12
	.byte	'LOCK1',0,4
	.word	10325
	.byte	1,1,2,35,0,12
	.byte	'ERR',0,4
	.word	10325
	.byte	1,0,2,35,0,0,13,10,209,44,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	76092
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_ID_PMTR_Bits',0,10,138,14,16,4,12
	.byte	'ID_PMTR_x',0,4
	.word	10325
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10325
	.byte	23,0,2,35,0,0,13,10,242,41,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	76679
	.byte	4,2,35,0,0,15,96
	.word	76756
	.byte	16,23,0,15,128,1
	.word	508
	.byte	16,127,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_0_SHADOW_TRIGGER_Bits',0,10,173,12,16,4,12
	.byte	'MLT',0,4
	.word	10325
	.byte	10,22,2,35,0,12
	.byte	'IFP',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	10325
	.byte	15,6,2,35,0,12
	.byte	'AMT',0,4
	.word	10325
	.byte	1,5,2,35,0,12
	.byte	'IDS',0,4
	.word	10325
	.byte	1,4,2,35,0,12
	.byte	'IDT',0,4
	.word	10325
	.byte	1,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10325
	.byte	2,1,2,35,0,12
	.byte	'RMO',0,4
	.word	10325
	.byte	1,0,2,35,0,0,13,10,240,40,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	76815
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_0_SHADOW_STATE_Bits',0,10,160,12,16,4,12
	.byte	'reserved_0',0,4
	.word	10325
	.byte	10,22,2,35,0,12
	.byte	'IFP',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	10325
	.byte	14,7,2,35,0,12
	.byte	'AMS',0,4
	.word	10325
	.byte	1,6,2,35,0,12
	.byte	'reserved_26',0,4
	.word	10325
	.byte	1,5,2,35,0,12
	.byte	'IDS',0,4
	.word	10325
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	10325
	.byte	3,1,2,35,0,12
	.byte	'RMO',0,4
	.word	10325
	.byte	1,0,2,35,0,0,13,10,232,40,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77039
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_1_SHADOW_TRIGGER_Bits',0,10,213,12,16,4,12
	.byte	'DMO',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	10325
	.byte	2,29,2,35,0,12
	.byte	'COA',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'PIT',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'SGE1',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'DLM1',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'PCM1',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10325
	.byte	24,0,2,35,0,0,13,10,128,41,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77276
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CRTL_1_SHADOW_STATE_Bits',0,10,128,12,16,4,12
	.byte	'DMO',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	10325
	.byte	2,29,2,35,0,12
	.byte	'COA',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'PIT',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'SGE1',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'DLM1',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'PCM1',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'SGE2',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'DLM2',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'PCM2',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'SYN_NS',0,4
	.word	10325
	.byte	21,0,2,35,0,0,13,10,216,40,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77501
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RAM_INI_Bits',0,10,228,16,16,4,12
	.byte	'INIT_1A',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'INIT_1B',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'INIT_2',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'INIT_RAM',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10325
	.byte	27,0,2,35,0,0,13,10,135,44,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77768
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PSA_Bits',0,10,165,16,16,4,12
	.byte	'PSA',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,191,43,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77962
	.byte	4,2,35,0,0,15,96
	.word	78030
	.byte	16,23,0,11
	.byte	'_Ifx_GTM_DPLL_DLA_Bits',0,10,167,13,16,4,12
	.byte	'DLA',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,160,41,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78079
	.byte	4,2,35,0,0,15,96
	.word	78147
	.byte	16,23,0,11
	.byte	'_Ifx_GTM_DPLL_NA_Bits',0,10,189,15,16,4,12
	.byte	'DB',0,4
	.word	10325
	.byte	10,22,2,35,0,12
	.byte	'DW',0,4
	.word	10325
	.byte	10,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	10325
	.byte	12,0,2,35,0,0,13,10,223,42,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78196
	.byte	4,2,35,0,0,15,96
	.word	78276
	.byte	16,23,0,11
	.byte	'_Ifx_GTM_DPLL_DTA_Bits',0,10,195,13,16,4,12
	.byte	'DTA',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,192,41,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78325
	.byte	4,2,35,0,0,15,96
	.word	78393
	.byte	16,23,0,11
	.byte	'_Ifx_GTM_DPLL_TS_T_0_Bits',0,10,149,18,16,4,12
	.byte	'TRIGGER_TS',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,169,45,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78442
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TS_T_1_Bits',0,10,156,18,16,4,12
	.byte	'TRIGGER_TS',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,177,45,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78560
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_FTV_T_Bits',0,10,131,14,16,4,12
	.byte	'TRIGGER_FT',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,234,41,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78678
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TS_S_0_Bits',0,10,135,18,16,4,12
	.byte	'STATE_TS',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,153,45,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78795
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TS_S_1_Bits',0,10,142,18,16,4,12
	.byte	'STATE_TS',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,161,45,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78911
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_FTV_S_Bits',0,10,252,13,16,4,12
	.byte	'STATE_FT',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,226,41,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79027
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_THMI_Bits',0,10,226,17,16,4,12
	.byte	'THMI',0,4
	.word	10325
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10325
	.byte	16,0,2,35,0,0,13,10,241,44,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79142
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_THMA_Bits',0,10,219,17,16,4,12
	.byte	'THMA',0,4
	.word	10325
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10325
	.byte	16,0,2,35,0,0,13,10,233,44,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79252
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_THVAL_Bits',0,10,233,17,16,4,12
	.byte	'THVAL',0,4
	.word	10325
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10325
	.byte	16,0,2,35,0,0,13,10,249,44,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79362
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TOV_Bits',0,10,247,17,16,4,12
	.byte	'DB',0,4
	.word	10325
	.byte	10,22,2,35,0,12
	.byte	'DW',0,4
	.word	10325
	.byte	6,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10325
	.byte	16,0,2,35,0,0,13,10,137,45,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79474
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TOV_S_Bits',0,10,255,17,16,4,12
	.byte	'DB',0,4
	.word	10325
	.byte	10,22,2,35,0,12
	.byte	'DW',0,4
	.word	10325
	.byte	6,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10325
	.byte	16,0,2,35,0,0,13,10,145,45,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79595
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_ADD_IN_CAL1_Bits',0,10,237,10,16,4,12
	.byte	'ADD_IN_CAL_1',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,200,39,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79718
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_ADD_IN_CAL2_Bits',0,10,244,10,16,4,12
	.byte	'ADD_IN_CAL_2',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,208,39,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79843
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_MPVAL1_Bits',0,10,172,15,16,4,12
	.byte	'MPVAL1',0,4
	.word	10325
	.byte	16,16,2,35,0,12
	.byte	'SIX1',0,4
	.word	10325
	.byte	8,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,206,42,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79968
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_MPVAL2_Bits',0,10,181,15,16,4,12
	.byte	'MPVAL2',0,4
	.word	10325
	.byte	16,16,2,35,0,12
	.byte	'SIX2',0,4
	.word	10325
	.byte	8,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,215,42,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	80098
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NMB_T_TAR_Bits',0,10,225,15,16,4,12
	.byte	'NMB_T_TAR',0,4
	.word	10325
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10325
	.byte	16,0,2,35,0,0,13,10,135,43,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	80228
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NMB_T_TAR_OLD_Bits',0,10,232,15,16,4,12
	.byte	'NMB_T_TAR_OLD',0,4
	.word	10325
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10325
	.byte	16,0,2,35,0,0,13,10,143,43,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	80348
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NMB_S_TAR_Bits',0,10,204,15,16,4,12
	.byte	'NMB_S_TAR',0,4
	.word	10325
	.byte	20,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	10325
	.byte	12,0,2,35,0,0,13,10,239,42,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	80476
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NMB_S_TAR_OLD_Bits',0,10,211,15,16,4,12
	.byte	'NMB_S_TAR_OLD',0,4
	.word	10325
	.byte	20,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	10325
	.byte	12,0,2,35,0,0,13,10,247,42,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	80596
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RCDT_TX_Bits',0,10,254,16,16,4,12
	.byte	'RCDT_TX',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,160,44,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	80724
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RCDT_SX_Bits',0,10,239,16,16,4,12
	.byte	'RCDT_SX',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,143,44,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	80840
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RCDT_TX_NOM_Bits',0,10,134,17,16,4,12
	.byte	'RCDT_TX_NOM',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,169,44,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	80956
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RCDT_SX_NOM_Bits',0,10,247,16,16,4,12
	.byte	'RCDT_SX_NOM',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,152,44,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81080
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RDT_T_ACT_Bits',0,10,155,17,16,4,12
	.byte	'RDT_T_ACT',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,193,44,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81204
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RDT_S_ACT_Bits',0,10,141,17,16,4,12
	.byte	'RDT_S_ACT',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,185,44,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81324
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_DT_T_ACT_Bits',0,10,188,13,16,4,12
	.byte	'DT_T_ACT',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,184,41,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81444
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_DT_S_ACT_Bits',0,10,174,13,16,4,12
	.byte	'DT_S_ACT',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,176,41,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81562
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_EDT_T_Bits',0,10,211,13,16,4,12
	.byte	'EDT_T',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,210,41,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81680
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_MEDT_T_Bits',0,10,150,15,16,4,12
	.byte	'MEDT_T',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,181,42,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81792
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_EDT_S_Bits',0,10,203,13,16,4,12
	.byte	'EDT_S',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,201,41,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81906
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_MEDT_S_Bits',0,10,142,15,16,4,12
	.byte	'MEDT_S',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,172,42,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82018
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CDT_TX_Bits',0,10,228,11,16,4,12
	.byte	'CDT_TX',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,184,40,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82132
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CDT_SX_Bits',0,10,214,11,16,4,12
	.byte	'CDT_SX',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,168,40,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82246
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CDT_TX_NOM_Bits',0,10,235,11,16,4,12
	.byte	'CDT_TX_NOM',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,192,40,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82360
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CDT_SX_NOM_Bits',0,10,221,11,16,4,12
	.byte	'CDT_SX_NOM',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,176,40,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82482
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TLR_Bits',0,10,240,17,16,4,12
	.byte	'TLR',0,4
	.word	10325
	.byte	8,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10325
	.byte	24,0,2,35,0,0,13,10,129,45,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82604
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_SLR_Bits',0,10,162,17,16,4,12
	.byte	'SLR',0,4
	.word	10325
	.byte	8,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10325
	.byte	24,0,2,35,0,0,13,10,201,44,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82711
	.byte	4,2,35,0,0,15,88
	.word	508
	.byte	16,87,0,11
	.byte	'_Ifx_GTM_DPLL_PDT_T_Bits',0,10,157,16,16,4,12
	.byte	'DB',0,4
	.word	10325
	.byte	14,18,2,35,0,12
	.byte	'DW',0,4
	.word	10325
	.byte	10,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,183,43,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82827
	.byte	4,2,35,0,0,15,96
	.word	82910
	.byte	16,23,0,15,96
	.word	508
	.byte	16,95,0,11
	.byte	'_Ifx_GTM_DPLL_MLS1_Bits',0,10,157,15,16,4,12
	.byte	'MLS1',0,4
	.word	10325
	.byte	18,14,2,35,0,12
	.byte	'reserved_18',0,4
	.word	10325
	.byte	14,0,2,35,0,0,13,10,189,42,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82968
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_MLS2_Bits',0,10,164,15,16,4,12
	.byte	'MLS2',0,4
	.word	10325
	.byte	18,14,2,35,0,12
	.byte	'reserved_18',0,4
	.word	10325
	.byte	14,0,2,35,0,0,13,10,197,42,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	83078
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CNT_NUM1_Bits',0,10,242,11,16,4,12
	.byte	'CNT_NUM_1',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,200,40,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	83188
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CNT_NUM2_Bits',0,10,249,11,16,4,12
	.byte	'CNT_NUM_2',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,208,40,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	83307
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PVT_Bits',0,10,221,16,16,4,12
	.byte	'PVT',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,255,43,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	83426
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PSTC_Bits',0,10,200,16,16,4,12
	.byte	'PSTC',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,231,43,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	83534
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PSSC_Bits',0,10,179,16,16,4,12
	.byte	'PSSC',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,207,43,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	83644
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PSTM_0_Bits',0,10,207,16,16,4,12
	.byte	'PSTM',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,239,43,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	83754
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PSTM_1_Bits',0,10,214,16,16,4,12
	.byte	'PSTM',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,247,43,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	83866
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PSSM_0_Bits',0,10,186,16,16,4,12
	.byte	'PSSM',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,215,43,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	83978
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PSSM_1_Bits',0,10,193,16,16,4,12
	.byte	'PSSM',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,223,43,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	84090
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NMB_T_Bits',0,10,218,15,16,4,12
	.byte	'NMB_T',0,4
	.word	10325
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10325
	.byte	16,0,2,35,0,0,13,10,255,42,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	84202
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NMB_S_Bits',0,10,197,15,16,4,12
	.byte	'NMB_S',0,4
	.word	10325
	.byte	20,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	10325
	.byte	12,0,2,35,0,0,13,10,231,42,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	84314
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RDT_S_Bits',0,10,148,17,16,4,12
	.byte	'RDT_S',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,177,44,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	84426
	.byte	4,2,35,0,0,15,128,2
	.word	84498
	.byte	16,63,0,11
	.byte	'_Ifx_GTM_DPLL_TSF_S_Bits',0,10,170,18,16,4,12
	.byte	'TSF_S',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,193,45,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	84548
	.byte	4,2,35,0,0,15,128,2
	.word	84620
	.byte	16,63,0,11
	.byte	'_Ifx_GTM_DPLL_ADT_S_Bits',0,10,137,11,16,4,12
	.byte	'PD_S',0,4
	.word	10325
	.byte	16,16,2,35,0,12
	.byte	'NS',0,4
	.word	10325
	.byte	6,10,2,35,0,12
	.byte	'reserved_22',0,4
	.word	10325
	.byte	10,0,2,35,0,0,13,10,232,39,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	84670
	.byte	4,2,35,0,0,15,128,2
	.word	84755
	.byte	16,63,0,11
	.byte	'_Ifx_GTM_DPLL_DT_S_Bits',0,10,181,13,16,4,12
	.byte	'DT_S',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,168,41,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	84805
	.byte	4,2,35,0,0,15,128,2
	.word	84875
	.byte	16,63,0,15,128,8
	.word	508
	.byte	16,255,7,0,11
	.byte	'_Ifx_GTM_DPLL_TSAC_Bits',0,10,163,18,16,4,12
	.byte	'TSAC',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,185,45,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	84936
	.byte	4,2,35,0,0,15,96
	.word	85006
	.byte	16,23,0,11
	.byte	'_Ifx_GTM_DPLL_PSAC_Bits',0,10,172,16,16,4,12
	.byte	'PSAC',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,199,43,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	85055
	.byte	4,2,35,0,0,15,96
	.word	85125
	.byte	16,23,0,11
	.byte	'_Ifx_GTM_DPLL_ACB_Bits',0,10,217,10,16,4,12
	.byte	'ACB_0',0,4
	.word	10325
	.byte	5,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10325
	.byte	3,24,2,35,0,12
	.byte	'ACB_1',0,4
	.word	10325
	.byte	5,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10325
	.byte	3,16,2,35,0,12
	.byte	'ACB_2',0,4
	.word	10325
	.byte	5,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	10325
	.byte	3,8,2,35,0,12
	.byte	'ACB_3',0,4
	.word	10325
	.byte	5,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10325
	.byte	3,0,2,35,0,0,13,10,184,39,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	85174
	.byte	4,2,35,0,0,15,24
	.word	85363
	.byte	16,5,0,11
	.byte	'_Ifx_GTM_DPLL',0,10,254,57,25,152,30,14
	.byte	'CTRL_0',0
	.word	68887
	.byte	4,2,35,0,14
	.byte	'CTRL_1',0
	.word	69320
	.byte	4,2,35,4,14
	.byte	'CTRL_2',0
	.word	69694
	.byte	4,2,35,8,14
	.byte	'CTRL_3',0
	.word	70080
	.byte	4,2,35,12,14
	.byte	'CTRL_4',0
	.word	70470
	.byte	4,2,35,16,14
	.byte	'reserved_14',0
	.word	1935
	.byte	4,2,35,20,14
	.byte	'ACT_STA',0
	.word	70585
	.byte	4,2,35,24,14
	.byte	'OSW',0
	.word	70751
	.byte	4,2,35,28,14
	.byte	'AOSV_2',0
	.word	70900
	.byte	4,2,35,32,14
	.byte	'APT',0
	.word	71106
	.byte	4,2,35,36,14
	.byte	'APS',0
	.word	71313
	.byte	4,2,35,40,14
	.byte	'APT_2C',0
	.word	71449
	.byte	4,2,35,44,14
	.byte	'APS_1C3',0
	.word	71586
	.byte	4,2,35,48,14
	.byte	'NUTC',0
	.word	71835
	.byte	4,2,35,52,14
	.byte	'NUSC',0
	.word	72061
	.byte	4,2,35,56,14
	.byte	'NTI_CNT',0
	.word	72177
	.byte	4,2,35,60,14
	.byte	'IRQ_NOTIFY',0
	.word	72716
	.byte	4,2,35,64,14
	.byte	'IRQ_EN',0
	.word	73426
	.byte	4,2,35,68,14
	.byte	'IRQ_FORCINT',0
	.word	74078
	.byte	4,2,35,72,14
	.byte	'IRQ_MODE',0
	.word	74195
	.byte	4,2,35,76,14
	.byte	'EIRQ_EN',0
	.word	74931
	.byte	4,2,35,80,14
	.byte	'reserved_54',0
	.word	74971
	.byte	92,2,35,84,14
	.byte	'INC_CNT1',0
	.word	75058
	.byte	4,3,35,176,1,14
	.byte	'INC_CNT2',0
	.word	75176
	.byte	4,3,35,180,1,14
	.byte	'APT_SYNC',0
	.word	75365
	.byte	4,3,35,184,1,14
	.byte	'APS_SYNC',0
	.word	75557
	.byte	4,3,35,188,1,14
	.byte	'TBU_TS0_T',0
	.word	75677
	.byte	4,3,35,192,1,14
	.byte	'TBU_TS0_S',0
	.word	75797
	.byte	4,3,35,196,1,14
	.byte	'ADD_IN_LD1',0
	.word	75920
	.byte	4,3,35,200,1,14
	.byte	'ADD_IN_LD2',0
	.word	76043
	.byte	4,3,35,204,1,14
	.byte	'reserved_D0',0
	.word	76083
	.byte	44,3,35,208,1,14
	.byte	'STATUS',0
	.word	76639
	.byte	4,3,35,252,1,14
	.byte	'ID_PMTR',0
	.word	76796
	.byte	96,3,35,128,2,14
	.byte	'reserved_160',0
	.word	76805
	.byte	128,1,3,35,224,2,14
	.byte	'CTRL_0_SHADOW_TRIGGER',0
	.word	76999
	.byte	4,3,35,224,3,14
	.byte	'CTRL_0_SHADOW_STATE',0
	.word	77236
	.byte	4,3,35,228,3,14
	.byte	'CTRL_1_SHADOW_TRIGGER',0
	.word	77461
	.byte	4,3,35,232,3,14
	.byte	'CRTL_1_SHADOW_STATE',0
	.word	77728
	.byte	4,3,35,236,3,14
	.byte	'reserved_1F0',0
	.word	4094
	.byte	12,3,35,240,3,14
	.byte	'RAM_INI',0
	.word	77922
	.byte	4,3,35,252,3,14
	.byte	'PSA',0
	.word	78070
	.byte	96,3,35,128,4,14
	.byte	'reserved_260',0
	.word	16217
	.byte	32,3,35,224,4,14
	.byte	'DLA',0
	.word	78187
	.byte	96,3,35,128,5,14
	.byte	'reserved_2E0',0
	.word	16217
	.byte	32,3,35,224,5,14
	.byte	'NA',0
	.word	78316
	.byte	96,3,35,128,6,14
	.byte	'reserved_360',0
	.word	16217
	.byte	32,3,35,224,6,14
	.byte	'DTA',0
	.word	78433
	.byte	96,3,35,128,7,14
	.byte	'reserved_3E0',0
	.word	16217
	.byte	32,3,35,224,7,14
	.byte	'TS_T_0',0
	.word	78520
	.byte	4,3,35,128,8,14
	.byte	'TS_T_1',0
	.word	78638
	.byte	4,3,35,132,8,14
	.byte	'FTV_T',0
	.word	78755
	.byte	4,3,35,136,8,14
	.byte	'reserved_40C',0
	.word	1935
	.byte	4,3,35,140,8,14
	.byte	'TS_S_0',0
	.word	78871
	.byte	4,3,35,144,8,14
	.byte	'TS_S_1',0
	.word	78987
	.byte	4,3,35,148,8,14
	.byte	'FTV_S',0
	.word	79102
	.byte	4,3,35,152,8,14
	.byte	'reserved_41C',0
	.word	1935
	.byte	4,3,35,156,8,14
	.byte	'THMI',0
	.word	79212
	.byte	4,3,35,160,8,14
	.byte	'THMA',0
	.word	79322
	.byte	4,3,35,164,8,14
	.byte	'THVAL',0
	.word	79434
	.byte	4,3,35,168,8,14
	.byte	'reserved_42C',0
	.word	1935
	.byte	4,3,35,172,8,14
	.byte	'TOV',0
	.word	79555
	.byte	4,3,35,176,8,14
	.byte	'TOV_S',0
	.word	79678
	.byte	4,3,35,180,8,14
	.byte	'ADD_IN_CAL1',0
	.word	79803
	.byte	4,3,35,184,8,14
	.byte	'ADD_IN_CAL2',0
	.word	79928
	.byte	4,3,35,188,8,14
	.byte	'MPVAL1',0
	.word	80058
	.byte	4,3,35,192,8,14
	.byte	'MPVAL2',0
	.word	80188
	.byte	4,3,35,196,8,14
	.byte	'NMB_T_TAR',0
	.word	80308
	.byte	4,3,35,200,8,14
	.byte	'NMB_T_TAR_OLD',0
	.word	80436
	.byte	4,3,35,204,8,14
	.byte	'NMB_S_TAR',0
	.word	80556
	.byte	4,3,35,208,8,14
	.byte	'NMB_S_TAR_OLD',0
	.word	80684
	.byte	4,3,35,212,8,14
	.byte	'reserved_458',0
	.word	3754
	.byte	8,3,35,216,8,14
	.byte	'RCDT_TX',0
	.word	80800
	.byte	4,3,35,224,8,14
	.byte	'RCDT_SX',0
	.word	80916
	.byte	4,3,35,228,8,14
	.byte	'RCDT_TX_NOM',0
	.word	81040
	.byte	4,3,35,232,8,14
	.byte	'RCDT_SX_NOM',0
	.word	81164
	.byte	4,3,35,236,8,14
	.byte	'RDT_T_ACT',0
	.word	81284
	.byte	4,3,35,240,8,14
	.byte	'RDT_S_ACT',0
	.word	81404
	.byte	4,3,35,244,8,14
	.byte	'DT_T_ACT',0
	.word	81522
	.byte	4,3,35,248,8,14
	.byte	'DT_S_ACT',0
	.word	81640
	.byte	4,3,35,252,8,14
	.byte	'EDT_T',0
	.word	81752
	.byte	4,3,35,128,9,14
	.byte	'MEDT_T',0
	.word	81866
	.byte	4,3,35,132,9,14
	.byte	'EDT_S',0
	.word	81978
	.byte	4,3,35,136,9,14
	.byte	'MEDT_S',0
	.word	82092
	.byte	4,3,35,140,9,14
	.byte	'CDT_TX',0
	.word	82206
	.byte	4,3,35,144,9,14
	.byte	'CDT_SX',0
	.word	82320
	.byte	4,3,35,148,9,14
	.byte	'CDT_TX_NOM',0
	.word	82442
	.byte	4,3,35,152,9,14
	.byte	'CDT_SX_NOM',0
	.word	82564
	.byte	4,3,35,156,9,14
	.byte	'TLR',0
	.word	82671
	.byte	4,3,35,160,9,14
	.byte	'SLR',0
	.word	82778
	.byte	4,3,35,164,9,14
	.byte	'reserved_4A8',0
	.word	82818
	.byte	88,3,35,168,9,14
	.byte	'PDT_T',0
	.word	82950
	.byte	96,3,35,128,10,14
	.byte	'reserved_560',0
	.word	82959
	.byte	96,3,35,224,10,14
	.byte	'MLS1',0
	.word	83038
	.byte	4,3,35,192,11,14
	.byte	'MLS2',0
	.word	83148
	.byte	4,3,35,196,11,14
	.byte	'CNT_NUM1',0
	.word	83267
	.byte	4,3,35,200,11,14
	.byte	'CNT_NUM2',0
	.word	83386
	.byte	4,3,35,204,11,14
	.byte	'PVT',0
	.word	83494
	.byte	4,3,35,208,11,14
	.byte	'reserved_5D4',0
	.word	4094
	.byte	12,3,35,212,11,14
	.byte	'PSTC',0
	.word	83604
	.byte	4,3,35,224,11,14
	.byte	'PSSC',0
	.word	83714
	.byte	4,3,35,228,11,14
	.byte	'PSTM_0',0
	.word	83826
	.byte	4,3,35,232,11,14
	.byte	'PSTM_1',0
	.word	83938
	.byte	4,3,35,236,11,14
	.byte	'PSSM_0',0
	.word	84050
	.byte	4,3,35,240,11,14
	.byte	'PSSM_1',0
	.word	84162
	.byte	4,3,35,244,11,14
	.byte	'NMB_T',0
	.word	84274
	.byte	4,3,35,248,11,14
	.byte	'NMB_S',0
	.word	84386
	.byte	4,3,35,252,11,14
	.byte	'RDT_S',0
	.word	84538
	.byte	128,2,3,35,128,12,14
	.byte	'TSF_S',0
	.word	84660
	.byte	128,2,3,35,128,14,14
	.byte	'ADT_S',0
	.word	84795
	.byte	128,2,3,35,128,16,14
	.byte	'DT_S',0
	.word	84915
	.byte	128,2,3,35,128,18,14
	.byte	'reserved_A00',0
	.word	84925
	.byte	128,8,3,35,128,20,14
	.byte	'TSAC',0
	.word	85046
	.byte	96,3,35,128,28,14
	.byte	'reserved_E60',0
	.word	16217
	.byte	32,3,35,224,28,14
	.byte	'PSAC',0
	.word	85165
	.byte	96,3,35,128,29,14
	.byte	'reserved_EE0',0
	.word	16217
	.byte	32,3,35,224,29,14
	.byte	'ACB',0
	.word	85403
	.byte	24,3,35,128,30,0,10
	.word	85412
	.byte	15,232,225,1
	.word	508
	.byte	16,231,225,1,0,11
	.byte	'_Ifx_GTM_MCS_CH_R0_Bits',0,10,198,24,16,4,12
	.byte	'DATA',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,137,49,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	87607
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_R1_Bits',0,10,205,24,16,4,12
	.byte	'DATA',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,145,49,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	87717
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_R2_Bits',0,10,212,24,16,4,12
	.byte	'DATA',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,153,49,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	87827
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_R3_Bits',0,10,219,24,16,4,12
	.byte	'DATA',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,161,49,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	87937
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_R4_Bits',0,10,226,24,16,4,12
	.byte	'DATA',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,169,49,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	88047
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_R5_Bits',0,10,233,24,16,4,12
	.byte	'DATA',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,177,49,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	88157
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_R6_Bits',0,10,240,24,16,4,12
	.byte	'DATA',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,185,49,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	88267
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_R7_Bits',0,10,247,24,16,4,12
	.byte	'DATA',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,193,49,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	88377
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_CTRL_Bits',0,10,130,24,16,4,12
	.byte	'EN',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'IRQ',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'ERR',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'CY',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'Z',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'V',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'N',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'CAT',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'CWT',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10325
	.byte	6,16,2,35,0,12
	.byte	'SP_CNT',0,4
	.word	10325
	.byte	3,13,2,35,0,12
	.byte	'reserved_19',0,4
	.word	10325
	.byte	13,0,2,35,0,0,13,10,209,48,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	88487
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_ACB_Bits',0,10,247,23,16,4,12
	.byte	'ACB0',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'ACB1',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'ACB2',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'ACB3',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'ACB4',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10325
	.byte	27,0,2,35,0,0,13,10,201,48,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	88773
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH0_CTRG_Bits',0,10,203,23,16,4,12
	.byte	'TRG0',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'TRG1',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'TRG2',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'TRG3',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'TRG4',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'TRG5',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'TRG6',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'TRG7',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'TRG8',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'TRG9',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'TRG10',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'TRG11',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'TRG12',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'TRG13',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'TRG14',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'TRG15',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10325
	.byte	16,0,2,35,0,0,13,10,185,48,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	88947
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH0_STRG_Bits',0,10,225,23,16,4,12
	.byte	'TRG0',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'TRG1',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'TRG2',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'TRG3',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'TRG4',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'TRG5',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'TRG6',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'TRG7',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'TRG8',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'TRG9',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'TRG10',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'TRG11',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'TRG12',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'TRG13',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'TRG14',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'TRG15',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10325
	.byte	16,0,2,35,0,0,13,10,193,48,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	89306
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_PC_Bits',0,10,191,24,16,4,12
	.byte	'PC',0,4
	.word	10325
	.byte	14,18,2,35,0,12
	.byte	'reserved_14',0,4
	.word	10325
	.byte	18,0,2,35,0,0,13,10,129,49,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	89665
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_IRQ_NOTIFY_Bits',0,10,182,24,16,4,12
	.byte	'MCS_IRQ',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'STK_ERR_IRQ',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'MEM_ERR_IRQ',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10325
	.byte	29,0,2,35,0,0,13,10,249,48,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	89773
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_IRQ_EN_Bits',0,10,157,24,16,4,12
	.byte	'MCS_IRQ_EN',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'STK_ERR_IRQ_EN',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'MEM_ERR_IRQ_EN',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10325
	.byte	29,0,2,35,0,0,13,10,225,48,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	89939
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_IRQ_FORCINT_Bits',0,10,166,24,16,4,12
	.byte	'TRG_MCS_IRQ',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'TRG_STK_ERR_IRQ',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'TRG_MEM_ERR_IRQ',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10325
	.byte	29,0,2,35,0,0,13,10,233,48,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	90110
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_IRQ_MODE_Bits',0,10,175,24,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10325
	.byte	30,0,2,35,0,0,13,10,241,48,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	90289
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_EIRQ_EN_Bits',0,10,148,24,16,4,12
	.byte	'MCS_EIRQ_EN',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'STK_ERR_EIRQ_EN',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'MEM_ERR_EIRQ_EN',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10325
	.byte	29,0,2,35,0,0,13,10,217,48,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	90408
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH0',0,10,197,56,25,88,14
	.byte	'R0',0
	.word	87677
	.byte	4,2,35,0,14
	.byte	'R1',0
	.word	87787
	.byte	4,2,35,4,14
	.byte	'R2',0
	.word	87897
	.byte	4,2,35,8,14
	.byte	'R3',0
	.word	88007
	.byte	4,2,35,12,14
	.byte	'R4',0
	.word	88117
	.byte	4,2,35,16,14
	.byte	'R5',0
	.word	88227
	.byte	4,2,35,20,14
	.byte	'R6',0
	.word	88337
	.byte	4,2,35,24,14
	.byte	'R7',0
	.word	88447
	.byte	4,2,35,28,14
	.byte	'CTRL',0
	.word	88733
	.byte	4,2,35,32,14
	.byte	'ACB',0
	.word	88907
	.byte	4,2,35,36,14
	.byte	'CTRG',0
	.word	89266
	.byte	4,2,35,40,14
	.byte	'STRG',0
	.word	89625
	.byte	4,2,35,44,14
	.byte	'reserved_30',0
	.word	13509
	.byte	16,2,35,48,14
	.byte	'PC',0
	.word	89733
	.byte	4,2,35,64,14
	.byte	'IRQ_NOTIFY',0
	.word	89899
	.byte	4,2,35,68,14
	.byte	'IRQ_EN',0
	.word	90070
	.byte	4,2,35,72,14
	.byte	'IRQ_FORCINT',0
	.word	90249
	.byte	4,2,35,76,14
	.byte	'IRQ_MODE',0
	.word	90368
	.byte	4,2,35,80,14
	.byte	'EIRQ_EN',0
	.word	90543
	.byte	4,2,35,84,0,10
	.word	90583
	.byte	15,28
	.word	508
	.byte	16,27,0,11
	.byte	'_Ifx_GTM_MCS_CTRL_Bits',0,10,254,24,16,4,12
	.byte	'SCHED',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'HLT_SP_OFL',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10325
	.byte	14,16,2,35,0,12
	.byte	'RAM_RST',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'reserved_17',0,4
	.word	10325
	.byte	15,0,2,35,0,0,13,10,201,49,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	90897
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_RST_Bits',0,10,150,25,16,4,12
	.byte	'RST0',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'RST1',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'RST2',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'RST3',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'RST4',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'RST5',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'RST6',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'RST7',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'CAT0',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'CAT1',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'CAT2',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'CAT3',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'CAT4',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'CAT5',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'CAT6',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'CAT7',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'CWT0',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'CWT1',0,4
	.word	10325
	.byte	1,14,2,35,0,12
	.byte	'CWT2',0,4
	.word	10325
	.byte	1,13,2,35,0,12
	.byte	'CWT3',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'CWT4',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'CWT5',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'CWT6',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'CWT7',0,4
	.word	10325
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,217,49,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	91070
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_ERR_Bits',0,10,136,25,16,4,12
	.byte	'ERR0',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'ERR1',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'ERR2',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'ERR3',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'ERR4',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'ERR5',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'ERR6',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'ERR7',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10325
	.byte	24,0,2,35,0,0,13,10,209,49,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	91546
	.byte	4,2,35,0,0,15,40
	.word	508
	.byte	16,39,0,11
	.byte	'_Ifx_GTM_MCS_CH',0,10,174,56,25,128,1,14
	.byte	'R0',0
	.word	87677
	.byte	4,2,35,0,14
	.byte	'R1',0
	.word	87787
	.byte	4,2,35,4,14
	.byte	'R2',0
	.word	87897
	.byte	4,2,35,8,14
	.byte	'R3',0
	.word	88007
	.byte	4,2,35,12,14
	.byte	'R4',0
	.word	88117
	.byte	4,2,35,16,14
	.byte	'R5',0
	.word	88227
	.byte	4,2,35,20,14
	.byte	'R6',0
	.word	88337
	.byte	4,2,35,24,14
	.byte	'R7',0
	.word	88447
	.byte	4,2,35,28,14
	.byte	'CTRL',0
	.word	88733
	.byte	4,2,35,32,14
	.byte	'ACB',0
	.word	88907
	.byte	4,2,35,36,14
	.byte	'reserved_28',0
	.word	3125
	.byte	24,2,35,40,14
	.byte	'PC',0
	.word	89733
	.byte	4,2,35,64,14
	.byte	'IRQ_NOTIFY',0
	.word	89899
	.byte	4,2,35,68,14
	.byte	'IRQ_EN',0
	.word	90070
	.byte	4,2,35,72,14
	.byte	'IRQ_FORCINT',0
	.word	90249
	.byte	4,2,35,76,14
	.byte	'IRQ_MODE',0
	.word	90368
	.byte	4,2,35,80,14
	.byte	'EIRQ_EN',0
	.word	90543
	.byte	4,2,35,84,14
	.byte	'reserved_58',0
	.word	91765
	.byte	40,2,35,88,0,10
	.word	91774
	.byte	10
	.word	91774
	.byte	10
	.word	91774
	.byte	10
	.word	91774
	.byte	10
	.word	91774
	.byte	10
	.word	91774
	.byte	10
	.word	91774
	.byte	15,128,24
	.word	508
	.byte	16,255,23,0,11
	.byte	'_Ifx_GTM_MCS',0,10,167,59,25,128,32,14
	.byte	'CH0',0
	.word	90883
	.byte	88,2,35,0,14
	.byte	'reserved_58',0
	.word	90888
	.byte	28,2,35,88,14
	.byte	'CTRL',0
	.word	91030
	.byte	4,2,35,116,14
	.byte	'RST',0
	.word	91506
	.byte	4,2,35,120,14
	.byte	'ERR',0
	.word	91725
	.byte	4,2,35,124,14
	.byte	'CH1',0
	.word	92067
	.byte	128,1,3,35,128,1,14
	.byte	'CH2',0
	.word	92072
	.byte	128,1,3,35,128,2,14
	.byte	'CH3',0
	.word	92077
	.byte	128,1,3,35,128,3,14
	.byte	'CH4',0
	.word	92082
	.byte	128,1,3,35,128,4,14
	.byte	'CH5',0
	.word	92087
	.byte	128,1,3,35,128,5,14
	.byte	'CH6',0
	.word	92092
	.byte	128,1,3,35,128,6,14
	.byte	'CH7',0
	.word	92097
	.byte	128,1,3,35,128,7,14
	.byte	'reserved_400',0
	.word	92102
	.byte	128,24,3,35,128,8,0,15,128,96
	.word	92113
	.byte	16,2,0,10
	.word	92337
	.byte	15,128,154,27
	.word	508
	.byte	16,255,153,27,0,11
	.byte	'_Ifx_GTM_CLC_Bits',0,10,214,8,16,4,12
	.byte	'DISR',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'DISS',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'EDIS',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10325
	.byte	28,0,2,35,0,0,13,10,168,38,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	92365
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_INOUTSEL_TIM_INSEL_Bits',0,10,227,22,16,4,12
	.byte	'CH0SEL',0,4
	.word	10325
	.byte	4,28,2,35,0,12
	.byte	'CH1SEL',0,4
	.word	10325
	.byte	4,24,2,35,0,12
	.byte	'CH2SEL',0,4
	.word	10325
	.byte	4,20,2,35,0,12
	.byte	'CH3SEL',0,4
	.word	10325
	.byte	4,16,2,35,0,12
	.byte	'CH4SEL',0,4
	.word	10325
	.byte	4,12,2,35,0,12
	.byte	'CH5SEL',0,4
	.word	10325
	.byte	4,8,2,35,0,12
	.byte	'CH6SEL',0,4
	.word	10325
	.byte	4,4,2,35,0,12
	.byte	'CH7SEL',0,4
	.word	10325
	.byte	4,0,2,35,0,0,13,10,233,47,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	92522
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_INOUTSEL_TIM',0,10,168,56,25,4,14
	.byte	'INSEL',0
	.word	92706
	.byte	4,2,35,0,0,15,12
	.word	92746
	.byte	16,2,0,10
	.word	92790
	.byte	15,20
	.word	508
	.byte	16,19,0,11
	.byte	'_Ifx_GTM_INOUTSEL_T_OUTSEL_Bits',0,10,206,22,16,4,12
	.byte	'SEL0',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'SEL1',0,4
	.word	10325
	.byte	2,28,2,35,0,12
	.byte	'SEL2',0,4
	.word	10325
	.byte	2,26,2,35,0,12
	.byte	'SEL3',0,4
	.word	10325
	.byte	2,24,2,35,0,12
	.byte	'SEL4',0,4
	.word	10325
	.byte	2,22,2,35,0,12
	.byte	'SEL5',0,4
	.word	10325
	.byte	2,20,2,35,0,12
	.byte	'SEL6',0,4
	.word	10325
	.byte	2,18,2,35,0,12
	.byte	'SEL7',0,4
	.word	10325
	.byte	2,16,2,35,0,12
	.byte	'SEL8',0,4
	.word	10325
	.byte	2,14,2,35,0,12
	.byte	'SEL9',0,4
	.word	10325
	.byte	2,12,2,35,0,12
	.byte	'SEL10',0,4
	.word	10325
	.byte	2,10,2,35,0,12
	.byte	'SEL11',0,4
	.word	10325
	.byte	2,8,2,35,0,12
	.byte	'SEL12',0,4
	.word	10325
	.byte	2,6,2,35,0,12
	.byte	'SEL13',0,4
	.word	10325
	.byte	2,4,2,35,0,12
	.byte	'SEL14',0,4
	.word	10325
	.byte	2,2,2,35,0,12
	.byte	'SEL15',0,4
	.word	10325
	.byte	2,0,2,35,0,0,13,10,225,47,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	92813
	.byte	4,2,35,0,0,15,40
	.word	93114
	.byte	16,9,0,11
	.byte	'_Ifx_GTM_INOUTSEL_T',0,10,162,56,25,40,14
	.byte	'OUTSEL',0
	.word	93154
	.byte	40,2,35,0,0,10
	.word	93163
	.byte	15,36
	.word	508
	.byte	16,35,0,11
	.byte	'_Ifx_GTM_INOUTSEL_DSADC_INSEL_Bits',0,10,157,22,16,4,12
	.byte	'INSEL0',0,4
	.word	10325
	.byte	4,28,2,35,0,12
	.byte	'INSEL1',0,4
	.word	10325
	.byte	4,24,2,35,0,12
	.byte	'INSEL2',0,4
	.word	10325
	.byte	4,20,2,35,0,12
	.byte	'INSEL3',0,4
	.word	10325
	.byte	4,16,2,35,0,12
	.byte	'INSEL4',0,4
	.word	10325
	.byte	4,12,2,35,0,12
	.byte	'INSEL5',0,4
	.word	10325
	.byte	4,8,2,35,0,12
	.byte	'INSEL6',0,4
	.word	10325
	.byte	4,4,2,35,0,12
	.byte	'INSEL7',0,4
	.word	10325
	.byte	4,0,2,35,0,0,13,10,193,47,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	93220
	.byte	4,2,35,0,0,15,12
	.word	93406
	.byte	16,2,0,11
	.byte	'_Ifx_GTM_INOUTSEL_DSADC_OUTSEL_Bits',0,10,170,22,16,4,12
	.byte	'SEL0',0,4
	.word	10325
	.byte	3,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10325
	.byte	5,24,2,35,0,12
	.byte	'SEL2',0,4
	.word	10325
	.byte	3,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'SEL3',0,4
	.word	10325
	.byte	3,17,2,35,0,12
	.byte	'reserved_15',0,4
	.word	10325
	.byte	17,0,2,35,0,0,13,10,201,47,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	93455
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_INOUTSEL_DSADC',0,10,141,56,25,24,14
	.byte	'INSEL',0
	.word	93446
	.byte	12,2,35,0,14
	.byte	'OUTSEL00',0
	.word	93614
	.byte	4,2,35,12,14
	.byte	'reserved_10',0
	.word	1935
	.byte	4,2,35,16,14
	.byte	'OUTSEL10',0
	.word	93614
	.byte	4,2,35,20,0,10
	.word	93654
	.byte	11
	.byte	'_Ifx_GTM_INOUTSEL_CAN_OUTSEL_Bits',0,10,144,22,16,4,12
	.byte	'SEL0',0,4
	.word	10325
	.byte	4,28,2,35,0,12
	.byte	'SEL1',0,4
	.word	10325
	.byte	4,24,2,35,0,12
	.byte	'SEL2',0,4
	.word	10325
	.byte	4,20,2,35,0,12
	.byte	'SEL3',0,4
	.word	10325
	.byte	4,16,2,35,0,12
	.byte	'SEL4',0,4
	.word	10325
	.byte	4,12,2,35,0,12
	.byte	'SEL5',0,4
	.word	10325
	.byte	4,8,2,35,0,12
	.byte	'SEL6',0,4
	.word	10325
	.byte	4,4,2,35,0,12
	.byte	'SEL7',0,4
	.word	10325
	.byte	4,0,2,35,0,0,13,10,185,47,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	93762
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_INOUTSEL_CAN',0,10,135,56,25,4,14
	.byte	'OUTSEL',0
	.word	93931
	.byte	4,2,35,0,0,10
	.word	93971
	.byte	11
	.byte	'_Ifx_GTM_INOUTSEL_PSI5_OUTSEL0_Bits',0,10,181,22,16,4,12
	.byte	'SEL0',0,4
	.word	10325
	.byte	4,28,2,35,0,12
	.byte	'SEL1',0,4
	.word	10325
	.byte	4,24,2,35,0,12
	.byte	'SEL2',0,4
	.word	10325
	.byte	4,20,2,35,0,12
	.byte	'SEL3',0,4
	.word	10325
	.byte	4,16,2,35,0,12
	.byte	'SEL4',0,4
	.word	10325
	.byte	4,12,2,35,0,12
	.byte	'SEL5',0,4
	.word	10325
	.byte	4,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	8,0,2,35,0,0,13,10,209,47,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	94021
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_INOUTSEL_PSI5',0,10,150,56,25,4,14
	.byte	'OUTSEL0',0
	.word	94183
	.byte	4,2,35,0,0,10
	.word	94223
	.byte	11
	.byte	'_Ifx_GTM_INOUTSEL_PSI5S_OUTSEL_Bits',0,10,193,22,16,4,12
	.byte	'SEL0',0,4
	.word	10325
	.byte	4,28,2,35,0,12
	.byte	'SEL1',0,4
	.word	10325
	.byte	4,24,2,35,0,12
	.byte	'SEL2',0,4
	.word	10325
	.byte	4,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	10325
	.byte	4,16,2,35,0,12
	.byte	'SEL4',0,4
	.word	10325
	.byte	4,12,2,35,0,12
	.byte	'SEL5',0,4
	.word	10325
	.byte	4,8,2,35,0,12
	.byte	'SEL6',0,4
	.word	10325
	.byte	4,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	10325
	.byte	4,0,2,35,0,0,13,10,217,47,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	94275
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_INOUTSEL_PSI5S',0,10,156,56,25,4,14
	.byte	'OUTSEL',0
	.word	94460
	.byte	4,2,35,0,0,10
	.word	94500
	.byte	11
	.byte	'_Ifx_GTM_INOUTSEL',0,10,153,59,25,156,1,14
	.byte	'TIM',0
	.word	92799
	.byte	12,2,35,0,14
	.byte	'reserved_C',0
	.word	92804
	.byte	20,2,35,12,14
	.byte	'T',0
	.word	93206
	.byte	40,2,35,32,14
	.byte	'reserved_48',0
	.word	93211
	.byte	36,2,35,72,14
	.byte	'DSADC',0
	.word	93757
	.byte	24,2,35,108,14
	.byte	'reserved_84',0
	.word	4094
	.byte	12,3,35,132,1,14
	.byte	'CAN',0
	.word	94016
	.byte	4,3,35,144,1,14
	.byte	'PSI5',0
	.word	94270
	.byte	4,3,35,148,1,14
	.byte	'PSI5S',0
	.word	94547
	.byte	4,3,35,152,1,0,10
	.word	94552
	.byte	11
	.byte	'_Ifx_GTM_ADCTRIG0OUT0_Bits',0,10,92,16,4,12
	.byte	'SEL0',0,4
	.word	10325
	.byte	4,28,2,35,0,12
	.byte	'SEL1',0,4
	.word	10325
	.byte	4,24,2,35,0,12
	.byte	'SEL2',0,4
	.word	10325
	.byte	4,20,2,35,0,12
	.byte	'SEL3',0,4
	.word	10325
	.byte	4,16,2,35,0,12
	.byte	'SEL4',0,4
	.word	10325
	.byte	4,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	10325
	.byte	12,0,2,35,0,0,13,10,216,33,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	94730
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ADCTRIG1OUT0_Bits',0,10,103,16,4,12
	.byte	'SEL0',0,4
	.word	10325
	.byte	4,28,2,35,0,12
	.byte	'SEL1',0,4
	.word	10325
	.byte	4,24,2,35,0,12
	.byte	'SEL2',0,4
	.word	10325
	.byte	4,20,2,35,0,12
	.byte	'SEL3',0,4
	.word	10325
	.byte	4,16,2,35,0,12
	.byte	'SEL4',0,4
	.word	10325
	.byte	4,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	10325
	.byte	12,0,2,35,0,0,13,10,224,33,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	94906
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OTBU0T_Bits',0,10,148,27,16,4,12
	.byte	'CV',0,4
	.word	10325
	.byte	27,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	10325
	.byte	1,4,2,35,0,12
	.byte	'CM',0,4
	.word	10325
	.byte	2,2,2,35,0,12
	.byte	'reserved_30',0,4
	.word	10325
	.byte	2,0,2,35,0,0,13,10,201,50,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	95082
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OTBU1T_Bits',0,10,157,27,16,4,12
	.byte	'CV',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	4,4,2,35,0,12
	.byte	'EN',0,4
	.word	10325
	.byte	1,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10325
	.byte	3,0,2,35,0,0,13,10,209,50,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	95224
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OTBU2T_Bits',0,10,166,27,16,4,12
	.byte	'CV',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10325
	.byte	4,4,2,35,0,12
	.byte	'EN',0,4
	.word	10325
	.byte	1,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10325
	.byte	3,0,2,35,0,0,13,10,217,50,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	95366
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OTSS_Bits',0,10,202,27,16,4,12
	.byte	'OTGB0',0,4
	.word	10325
	.byte	4,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10325
	.byte	4,24,2,35,0,12
	.byte	'OTGB1',0,4
	.word	10325
	.byte	4,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	10325
	.byte	4,16,2,35,0,12
	.byte	'OTGB2',0,4
	.word	10325
	.byte	4,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	10325
	.byte	12,0,2,35,0,0,13,10,241,50,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	95508
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OTSC0_Bits',0,10,175,27,16,4,12
	.byte	'B0LMT',0,4
	.word	10325
	.byte	3,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'B0LMI',0,4
	.word	10325
	.byte	4,24,2,35,0,12
	.byte	'B0HMT',0,4
	.word	10325
	.byte	3,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'B0HMI',0,4
	.word	10325
	.byte	4,16,2,35,0,12
	.byte	'B1LMT',0,4
	.word	10325
	.byte	3,13,2,35,0,12
	.byte	'reserved_19',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'B1LMI',0,4
	.word	10325
	.byte	4,8,2,35,0,12
	.byte	'B1HMT',0,4
	.word	10325
	.byte	3,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	10325
	.byte	1,4,2,35,0,12
	.byte	'B1HMI',0,4
	.word	10325
	.byte	4,0,2,35,0,0,13,10,225,50,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	95693
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OTSC1_Bits',0,10,192,27,16,4,12
	.byte	'MCS',0,4
	.word	10325
	.byte	4,28,2,35,0,12
	.byte	'MI',0,4
	.word	10325
	.byte	4,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'MOE',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10325
	.byte	22,0,2,35,0,0,13,10,233,50,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	95987
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ODA_Bits',0,10,140,27,16,4,12
	.byte	'DDREN',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'DREN',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10325
	.byte	30,0,2,35,0,0,13,10,193,50,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	96143
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OCS_Bits',0,10,130,27,16,4,12
	.byte	'reserved_0',0,4
	.word	10325
	.byte	24,8,2,35,0,12
	.byte	'SUS',0,4
	.word	10325
	.byte	4,4,2,35,0,12
	.byte	'SUS_P',0,4
	.word	10325
	.byte	1,3,2,35,0,12
	.byte	'SUSSTA',0,4
	.word	10325
	.byte	1,2,2,35,0,12
	.byte	'reserved_30',0,4
	.word	10325
	.byte	2,0,2,35,0,0,13,10,185,50,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	96263
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_KRSTCLR_Bits',0,10,164,23,16,4,12
	.byte	'CLR',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	10325
	.byte	31,0,2,35,0,0,13,10,161,48,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	96423
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_KRST1_Bits',0,10,157,23,16,4,12
	.byte	'RST',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	10325
	.byte	31,0,2,35,0,0,13,10,153,48,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	96529
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_KRST0_Bits',0,10,149,23,16,4,12
	.byte	'RST',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'RSTSTAT',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10325
	.byte	30,0,2,35,0,0,13,10,145,48,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	96633
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ACCEN1_Bits',0,10,86,16,4,12
	.byte	'reserved_0',0,4
	.word	10325
	.byte	32,0,2,35,0,0,13,10,208,33,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	96756
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ACCEN0_Bits',0,10,49,16,4,12
	.byte	'EN0',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'EN1',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'EN2',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'EN3',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'EN4',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'EN5',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'EN6',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'EN7',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'EN8',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'EN9',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'EN10',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'EN11',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'EN12',0,4
	.word	10325
	.byte	1,19,2,35,0,12
	.byte	'EN13',0,4
	.word	10325
	.byte	1,18,2,35,0,12
	.byte	'EN14',0,4
	.word	10325
	.byte	1,17,2,35,0,12
	.byte	'EN15',0,4
	.word	10325
	.byte	1,16,2,35,0,12
	.byte	'EN16',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'EN17',0,4
	.word	10325
	.byte	1,14,2,35,0,12
	.byte	'EN18',0,4
	.word	10325
	.byte	1,13,2,35,0,12
	.byte	'EN19',0,4
	.word	10325
	.byte	1,12,2,35,0,12
	.byte	'EN20',0,4
	.word	10325
	.byte	1,11,2,35,0,12
	.byte	'EN21',0,4
	.word	10325
	.byte	1,10,2,35,0,12
	.byte	'EN22',0,4
	.word	10325
	.byte	1,9,2,35,0,12
	.byte	'EN23',0,4
	.word	10325
	.byte	1,8,2,35,0,12
	.byte	'EN24',0,4
	.word	10325
	.byte	1,7,2,35,0,12
	.byte	'EN25',0,4
	.word	10325
	.byte	1,6,2,35,0,12
	.byte	'EN26',0,4
	.word	10325
	.byte	1,5,2,35,0,12
	.byte	'EN27',0,4
	.word	10325
	.byte	1,4,2,35,0,12
	.byte	'EN28',0,4
	.word	10325
	.byte	1,3,2,35,0,12
	.byte	'EN29',0,4
	.word	10325
	.byte	1,2,2,35,0,12
	.byte	'EN30',0,4
	.word	10325
	.byte	1,1,2,35,0,12
	.byte	'EN31',0,4
	.word	10325
	.byte	1,0,2,35,0,0,13,10,200,33,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	96845
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DXOUTCON_Bits',0,10,198,18,16,4,12
	.byte	'OUT00',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'OUT01',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'OUT02',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10325
	.byte	5,24,2,35,0,12
	.byte	'OUT10',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'OUT11',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'OUT12',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	10325
	.byte	21,0,2,35,0,0,13,10,209,45,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	97414
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TRIGOUT_Bits',0,10,181,33,16,4,12
	.byte	'INT0',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'INT1',0,4
	.word	10325
	.byte	2,28,2,35,0,12
	.byte	'TRIG0',0,4
	.word	10325
	.byte	2,26,2,35,0,12
	.byte	'TRIG1',0,4
	.word	10325
	.byte	2,24,2,35,0,12
	.byte	'TRIG2',0,4
	.word	10325
	.byte	2,22,2,35,0,12
	.byte	'TRIG3',0,4
	.word	10325
	.byte	2,20,2,35,0,12
	.byte	'TRIG4',0,4
	.word	10325
	.byte	2,18,2,35,0,12
	.byte	'TRIG5',0,4
	.word	10325
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10325
	.byte	16,0,2,35,0,0,13,10,137,55,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	97631
	.byte	4,2,35,0,0,15,12
	.word	97817
	.byte	16,2,0,15,52
	.word	508
	.byte	16,51,0,11
	.byte	'_Ifx_GTM_MCSINTSTAT_Bits',0,10,198,25,16,4,12
	.byte	'MCS000',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'MCS001',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'MCS010',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'MCS011',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'MCS100',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'MCS101',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'MCS110',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'MCS111',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'MCS200',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'MCS201',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'MCS210',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'MCS211',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	10325
	.byte	20,0,2,35,0,0,13,10,233,49,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	97875
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCSINTCLR_Bits',0,10,180,25,16,4,12
	.byte	'MCS000',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'MCS001',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'MCS010',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'MCS011',0,4
	.word	10325
	.byte	1,28,2,35,0,12
	.byte	'MCS100',0,4
	.word	10325
	.byte	1,27,2,35,0,12
	.byte	'MCS101',0,4
	.word	10325
	.byte	1,26,2,35,0,12
	.byte	'MCS110',0,4
	.word	10325
	.byte	1,25,2,35,0,12
	.byte	'MCS111',0,4
	.word	10325
	.byte	1,24,2,35,0,12
	.byte	'MCS200',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'MCS201',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'MCS210',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'MCS211',0,4
	.word	10325
	.byte	1,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	10325
	.byte	20,0,2,35,0,0,13,10,225,49,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	98186
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DXINCON_Bits',0,10,177,18,16,4,12
	.byte	'IN00',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'IN01',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'IN02',0,4
	.word	10325
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10325
	.byte	5,24,2,35,0,12
	.byte	'IN10',0,4
	.word	10325
	.byte	1,23,2,35,0,12
	.byte	'IN11',0,4
	.word	10325
	.byte	1,22,2,35,0,12
	.byte	'IN12',0,4
	.word	10325
	.byte	1,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	10325
	.byte	5,16,2,35,0,12
	.byte	'DSS00',0,4
	.word	10325
	.byte	1,15,2,35,0,12
	.byte	'DSS01',0,4
	.word	10325
	.byte	1,14,2,35,0,12
	.byte	'DSS02',0,4
	.word	10325
	.byte	1,13,2,35,0,12
	.byte	'reserved_19',0,4
	.word	10325
	.byte	5,8,2,35,0,12
	.byte	'DSS10',0,4
	.word	10325
	.byte	1,7,2,35,0,12
	.byte	'DSS11',0,4
	.word	10325
	.byte	1,6,2,35,0,12
	.byte	'DSS12',0,4
	.word	10325
	.byte	1,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	10325
	.byte	5,0,2,35,0,0,13,10,201,45,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	98496
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DATAIN_Bits',0,10,211,10,16,4,12
	.byte	'DATA',0,4
	.word	10325
	.byte	32,0,2,35,0,0,13,10,176,39,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	98854
	.byte	4,2,35,0,0,15,12
	.word	98898
	.byte	16,2,0,11
	.byte	'_Ifx_GTM_MSCSET_CON0_Bits',0,10,206,26,16,4,12
	.byte	'SEL0',0,4
	.word	10325
	.byte	5,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10325
	.byte	3,24,2,35,0,12
	.byte	'SEL1',0,4
	.word	10325
	.byte	5,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10325
	.byte	3,16,2,35,0,12
	.byte	'SEL2',0,4
	.word	10325
	.byte	5,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	10325
	.byte	3,8,2,35,0,12
	.byte	'SEL3',0,4
	.word	10325
	.byte	5,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10325
	.byte	3,0,2,35,0,0,13,10,153,50,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	98947
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MSCSET_CON1_Bits',0,10,219,26,16,4,12
	.byte	'SEL4',0,4
	.word	10325
	.byte	5,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10325
	.byte	3,24,2,35,0,12
	.byte	'SEL5',0,4
	.word	10325
	.byte	5,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10325
	.byte	3,16,2,35,0,12
	.byte	'SEL6',0,4
	.word	10325
	.byte	5,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	10325
	.byte	3,8,2,35,0,12
	.byte	'SEL7',0,4
	.word	10325
	.byte	5,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10325
	.byte	3,0,2,35,0,0,13,10,161,50,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	99175
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MSCSET_CON2_Bits',0,10,232,26,16,4,12
	.byte	'SEL8',0,4
	.word	10325
	.byte	5,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10325
	.byte	3,24,2,35,0,12
	.byte	'SEL9',0,4
	.word	10325
	.byte	5,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10325
	.byte	3,16,2,35,0,12
	.byte	'SEL10',0,4
	.word	10325
	.byte	5,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	10325
	.byte	3,8,2,35,0,12
	.byte	'SEL11',0,4
	.word	10325
	.byte	5,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10325
	.byte	3,0,2,35,0,0,13,10,169,50,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	99403
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MSCSET_CON3_Bits',0,10,245,26,16,4,12
	.byte	'SEL12',0,4
	.word	10325
	.byte	5,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10325
	.byte	3,24,2,35,0,12
	.byte	'SEL13',0,4
	.word	10325
	.byte	5,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10325
	.byte	3,16,2,35,0,12
	.byte	'SEL14',0,4
	.word	10325
	.byte	5,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	10325
	.byte	3,8,2,35,0,12
	.byte	'SEL15',0,4
	.word	10325
	.byte	5,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10325
	.byte	3,0,2,35,0,0,13,10,177,50,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	99633
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MSCSET',0,10,199,59,25,16,14
	.byte	'CON0',0
	.word	99135
	.byte	4,2,35,0,14
	.byte	'CON1',0
	.word	99363
	.byte	4,2,35,4,14
	.byte	'CON2',0
	.word	99593
	.byte	4,2,35,8,14
	.byte	'CON3',0
	.word	99825
	.byte	4,2,35,12,0,15,64
	.word	99865
	.byte	16,3,0,10
	.word	99944
	.byte	11
	.byte	'_Ifx_GTM_MSCIN_INLCON_Bits',0,10,185,26,16,4,12
	.byte	'SEL0',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'SEL1',0,4
	.word	10325
	.byte	2,28,2,35,0,12
	.byte	'SEL2',0,4
	.word	10325
	.byte	2,26,2,35,0,12
	.byte	'SEL3',0,4
	.word	10325
	.byte	2,24,2,35,0,12
	.byte	'SEL4',0,4
	.word	10325
	.byte	2,22,2,35,0,12
	.byte	'SEL5',0,4
	.word	10325
	.byte	2,20,2,35,0,12
	.byte	'SEL6',0,4
	.word	10325
	.byte	2,18,2,35,0,12
	.byte	'SEL7',0,4
	.word	10325
	.byte	2,16,2,35,0,12
	.byte	'SEL8',0,4
	.word	10325
	.byte	2,14,2,35,0,12
	.byte	'SEL9',0,4
	.word	10325
	.byte	2,12,2,35,0,12
	.byte	'SEL10',0,4
	.word	10325
	.byte	2,10,2,35,0,12
	.byte	'SEL11',0,4
	.word	10325
	.byte	2,8,2,35,0,12
	.byte	'SEL12',0,4
	.word	10325
	.byte	2,6,2,35,0,12
	.byte	'SEL13',0,4
	.word	10325
	.byte	2,4,2,35,0,12
	.byte	'SEL14',0,4
	.word	10325
	.byte	2,2,2,35,0,12
	.byte	'SEL15',0,4
	.word	10325
	.byte	2,0,2,35,0,0,13,10,145,50,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	99958
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MSCIN_INHCON_Bits',0,10,164,26,16,4,12
	.byte	'SEL0',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'SEL1',0,4
	.word	10325
	.byte	2,28,2,35,0,12
	.byte	'SEL2',0,4
	.word	10325
	.byte	2,26,2,35,0,12
	.byte	'SEL3',0,4
	.word	10325
	.byte	2,24,2,35,0,12
	.byte	'SEL4',0,4
	.word	10325
	.byte	2,22,2,35,0,12
	.byte	'SEL5',0,4
	.word	10325
	.byte	2,20,2,35,0,12
	.byte	'SEL6',0,4
	.word	10325
	.byte	2,18,2,35,0,12
	.byte	'SEL7',0,4
	.word	10325
	.byte	2,16,2,35,0,12
	.byte	'SEL8',0,4
	.word	10325
	.byte	2,14,2,35,0,12
	.byte	'SEL9',0,4
	.word	10325
	.byte	2,12,2,35,0,12
	.byte	'SEL10',0,4
	.word	10325
	.byte	2,10,2,35,0,12
	.byte	'SEL11',0,4
	.word	10325
	.byte	2,8,2,35,0,12
	.byte	'SEL12',0,4
	.word	10325
	.byte	2,6,2,35,0,12
	.byte	'SEL13',0,4
	.word	10325
	.byte	2,4,2,35,0,12
	.byte	'SEL14',0,4
	.word	10325
	.byte	2,2,2,35,0,12
	.byte	'SEL15',0,4
	.word	10325
	.byte	2,0,2,35,0,0,13,10,137,50,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	100294
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MSCIN',0,10,192,59,25,8,14
	.byte	'INLCON',0
	.word	100254
	.byte	4,2,35,0,14
	.byte	'INHCON',0
	.word	100590
	.byte	4,2,35,4,0,15,16
	.word	100630
	.byte	16,1,0,10
	.word	100684
	.byte	11
	.byte	'_Ifx_GTM_MSC0INLEXTCON_Bits',0,10,143,26,16,4,12
	.byte	'SEL0',0,4
	.word	10325
	.byte	2,30,2,35,0,12
	.byte	'SEL1',0,4
	.word	10325
	.byte	2,28,2,35,0,12
	.byte	'SEL2',0,4
	.word	10325
	.byte	2,26,2,35,0,12
	.byte	'SEL3',0,4
	.word	10325
	.byte	2,24,2,35,0,12
	.byte	'SEL4',0,4
	.word	10325
	.byte	2,22,2,35,0,12
	.byte	'SEL5',0,4
	.word	10325
	.byte	2,20,2,35,0,12
	.byte	'SEL6',0,4
	.word	10325
	.byte	2,18,2,35,0,12
	.byte	'SEL7',0,4
	.word	10325
	.byte	2,16,2,35,0,12
	.byte	'SEL8',0,4
	.word	10325
	.byte	2,14,2,35,0,12
	.byte	'SEL9',0,4
	.word	10325
	.byte	2,12,2,35,0,12
	.byte	'SEL10',0,4
	.word	10325
	.byte	2,10,2,35,0,12
	.byte	'SEL11',0,4
	.word	10325
	.byte	2,8,2,35,0,12
	.byte	'SEL12',0,4
	.word	10325
	.byte	2,6,2,35,0,12
	.byte	'SEL13',0,4
	.word	10325
	.byte	2,4,2,35,0,12
	.byte	'SEL14',0,4
	.word	10325
	.byte	2,2,2,35,0,12
	.byte	'SEL15',0,4
	.word	10325
	.byte	2,0,2,35,0,0,13,10,129,50,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	100698
	.byte	4,2,35,0,0,15,140,1
	.word	508
	.byte	16,139,1,0,11
	.byte	'_Ifx_GTM',0,10,190,60,25,128,128,40,14
	.byte	'REV',0
	.word	28799
	.byte	4,2,35,0,14
	.byte	'RST',0
	.word	28901
	.byte	4,2,35,4,14
	.byte	'CTRL',0
	.word	29067
	.byte	4,2,35,8,14
	.byte	'AEI_ADDR_XPT',0
	.word	29201
	.byte	4,2,35,12,14
	.byte	'IRQ_NOTIFY',0
	.word	29386
	.byte	4,2,35,16,14
	.byte	'IRQ_EN',0
	.word	29595
	.byte	4,2,35,20,14
	.byte	'IRQ_FORCINT',0
	.word	29797
	.byte	4,2,35,24,14
	.byte	'IRQ_MODE',0
	.word	29909
	.byte	4,2,35,28,14
	.byte	'EIRQ_EN',0
	.word	30123
	.byte	4,2,35,32,14
	.byte	'reserved_24',0
	.word	4094
	.byte	12,2,35,36,14
	.byte	'BRIDGE',0
	.word	30869
	.byte	12,2,35,48,14
	.byte	'reserved_3C',0
	.word	1935
	.byte	4,2,35,60,14
	.byte	'TIM_AUX_IN_SRC',0
	.word	31124
	.byte	12,2,35,64,14
	.byte	'reserved_4C',0
	.word	31133
	.byte	180,1,2,35,76,14
	.byte	'TBU',0
	.word	32191
	.byte	28,3,35,128,2,14
	.byte	'reserved_11C',0
	.word	32196
	.byte	100,3,35,156,2,14
	.byte	'MON',0
	.word	33306
	.byte	8,3,35,128,3,14
	.byte	'reserved_188',0
	.word	33311
	.byte	120,3,35,136,3,14
	.byte	'CMP',0
	.word	36629
	.byte	24,3,35,128,4,14
	.byte	'reserved_218',0
	.word	36634
	.byte	104,3,35,152,4,14
	.byte	'ARU',0
	.word	38623
	.byte	52,3,35,128,5,14
	.byte	'reserved_2B4',0
	.word	7411
	.byte	76,3,35,180,5,14
	.byte	'CMU',0
	.word	40339
	.byte	72,3,35,128,6,14
	.byte	'reserved_348',0
	.word	40344
	.byte	184,1,3,35,200,6,14
	.byte	'BRC',0
	.word	51290
	.byte	120,3,35,128,8,14
	.byte	'reserved_478',0
	.word	51295
	.byte	136,3,3,35,248,8,14
	.byte	'ICM',0
	.word	58065
	.byte	68,3,35,128,12,14
	.byte	'reserved_644',0
	.word	58070
	.byte	188,3,3,35,196,12,14
	.byte	'SPE',0
	.word	60514
	.byte	128,2,3,35,128,16,14
	.byte	'reserved_900',0
	.word	60519
	.byte	128,12,3,35,128,18,14
	.byte	'MAP_CTRL',0
	.word	60929
	.byte	4,3,35,128,30,14
	.byte	'reserved_F04',0
	.word	60969
	.byte	60,3,35,132,30,14
	.byte	'MCFG_CTRL',0
	.word	61079
	.byte	4,3,35,192,30,14
	.byte	'reserved_F44',0
	.word	61119
	.byte	188,1,3,35,196,30,14
	.byte	'TIM',0
	.word	65175
	.byte	128,48,3,35,128,32,14
	.byte	'reserved_2800',0
	.word	65180
	.byte	128,176,1,3,35,128,80,14
	.byte	'TOM',0
	.word	65203
	.byte	128,32,4,35,128,128,2,14
	.byte	'reserved_9000',0
	.word	65208
	.byte	128,128,1,4,35,128,160,2,14
	.byte	'ATOM',0
	.word	65230
	.byte	128,64,4,35,128,160,3,14
	.byte	'reserved_F000',0
	.word	65235
	.byte	128,160,2,4,35,128,224,3,14
	.byte	'F2A0',0
	.word	65959
	.byte	68,4,35,128,128,6,14
	.byte	'reserved_18044',0
	.word	60969
	.byte	60,4,35,196,128,6,14
	.byte	'AFD0',0
	.word	66187
	.byte	128,1,4,35,128,129,6,14
	.byte	'reserved_18100',0
	.word	66192
	.byte	128,6,4,35,128,130,6,14
	.byte	'FIFO0',0
	.word	68671
	.byte	128,4,4,35,128,136,6,14
	.byte	'reserved_18600',0
	.word	68676
	.byte	128,244,3,4,35,128,140,6,14
	.byte	'DPLL',0
	.word	87589
	.byte	152,30,4,35,128,128,10,14
	.byte	'reserved_28F18',0
	.word	87594
	.byte	232,225,1,4,35,152,158,10,14
	.byte	'MCS',0
	.word	92347
	.byte	128,96,4,35,128,128,12,14
	.byte	'reserved_33000',0
	.word	92352
	.byte	128,154,27,4,35,128,224,12,14
	.byte	'CLC',0
	.word	92482
	.byte	4,4,35,128,250,39,14
	.byte	'reserved_9FD04',0
	.word	4094
	.byte	12,4,35,132,250,39,14
	.byte	'INOUTSEL',0
	.word	94725
	.byte	156,1,4,35,144,250,39,14
	.byte	'reserved_9FDAC',0
	.word	1935
	.byte	4,4,35,172,251,39,14
	.byte	'ADCTRIG0OUT0',0
	.word	94866
	.byte	4,4,35,176,251,39,14
	.byte	'reserved_9FDB4',0
	.word	1935
	.byte	4,4,35,180,251,39,14
	.byte	'ADCTRIG1OUT0',0
	.word	95042
	.byte	4,4,35,184,251,39,14
	.byte	'reserved_9FDBC',0
	.word	3754
	.byte	8,4,35,188,251,39,14
	.byte	'OTBU0T',0
	.word	95184
	.byte	4,4,35,196,251,39,14
	.byte	'OTBU1T',0
	.word	95326
	.byte	4,4,35,200,251,39,14
	.byte	'OTBU2T',0
	.word	95468
	.byte	4,4,35,204,251,39,14
	.byte	'OTSS',0
	.word	95653
	.byte	4,4,35,208,251,39,14
	.byte	'OTSC0',0
	.word	95947
	.byte	4,4,35,212,251,39,14
	.byte	'OTSC1',0
	.word	96103
	.byte	4,4,35,216,251,39,14
	.byte	'ODA',0
	.word	96223
	.byte	4,4,35,220,251,39,14
	.byte	'reserved_9FDE0',0
	.word	3754
	.byte	8,4,35,224,251,39,14
	.byte	'OCS',0
	.word	96383
	.byte	4,4,35,232,251,39,14
	.byte	'KRSTCLR',0
	.word	96489
	.byte	4,4,35,236,251,39,14
	.byte	'KRST1',0
	.word	96593
	.byte	4,4,35,240,251,39,14
	.byte	'KRST0',0
	.word	96716
	.byte	4,4,35,244,251,39,14
	.byte	'ACCEN1',0
	.word	96805
	.byte	4,4,35,248,251,39,14
	.byte	'ACCEN0',0
	.word	97374
	.byte	4,4,35,252,251,39,14
	.byte	'DXOUTCON',0
	.word	97591
	.byte	4,4,35,128,252,39,14
	.byte	'TRIGOUT0',0
	.word	97857
	.byte	12,4,35,132,252,39,14
	.byte	'reserved_9FE10',0
	.word	97866
	.byte	52,4,35,144,252,39,14
	.byte	'TRIGOUT1',0
	.word	97857
	.byte	12,4,35,196,252,39,14
	.byte	'reserved_9FE50',0
	.word	16217
	.byte	32,4,35,208,252,39,14
	.byte	'MCSINTSTAT',0
	.word	98146
	.byte	4,4,35,240,252,39,14
	.byte	'MCSINTCLR',0
	.word	98456
	.byte	4,4,35,244,252,39,14
	.byte	'reserved_9FE78',0
	.word	3125
	.byte	24,4,35,248,252,39,14
	.byte	'DXINCON',0
	.word	98814
	.byte	4,4,35,144,253,39,14
	.byte	'DATAIN0',0
	.word	98938
	.byte	12,4,35,148,253,39,14
	.byte	'reserved_9FEA0',0
	.word	97866
	.byte	52,4,35,160,253,39,14
	.byte	'DATAIN1',0
	.word	98938
	.byte	12,4,35,212,253,39,14
	.byte	'reserved_9FEE0',0
	.word	16217
	.byte	32,4,35,224,253,39,14
	.byte	'MSCSET_1S',0
	.word	99953
	.byte	64,4,35,128,254,39,14
	.byte	'reserved_9FF40',0
	.word	16217
	.byte	32,4,35,192,254,39,14
	.byte	'MSCIN',0
	.word	100693
	.byte	16,4,35,224,254,39,14
	.byte	'MSC0INLEXTCON',0
	.word	100995
	.byte	4,4,35,240,254,39,14
	.byte	'reserved_9FF74',0
	.word	101035
	.byte	140,1,4,35,244,254,39,0,10
	.word	101046
	.byte	3
	.word	102901
	.byte	15,8
	.word	26660
	.byte	16,1,0,15,4
	.word	907
	.byte	16,1,0,15,8
	.word	8955
	.byte	16,1,0,30,17,163,1,9,56,14
	.byte	'base',0
	.word	28563
	.byte	12,2,35,0,14
	.byte	'gtm',0
	.word	102906
	.byte	4,2,35,12,14
	.byte	'tom',0
	.word	26061
	.byte	4,2,35,16,14
	.byte	'tgc',0
	.word	102911
	.byte	8,2,35,20,14
	.byte	'tomIndex',0
	.word	27870
	.byte	1,2,35,28,14
	.byte	'timerChannel',0
	.word	26066
	.byte	1,2,35,29,14
	.byte	'triggerChannel',0
	.word	26066
	.byte	1,2,35,30,14
	.byte	'channelsMask',0
	.word	102920
	.byte	4,2,35,32,14
	.byte	'offset',0
	.word	8955
	.byte	4,2,35,36,14
	.byte	'tgcGlobalControlDisableUpdate',0
	.word	102929
	.byte	8,2,35,40,14
	.byte	'tgcGlobalControlApplyUpdate',0
	.word	102929
	.byte	8,2,35,48,0
.L307:
	.byte	3
	.word	102938
	.byte	32
	.byte	'IfxGtm_Tom_Timer_getOffset',0,17,207,1,27
	.word	8955
	.byte	1,1,1,1,5
	.byte	'driver',0,17,207,1,72
	.word	103176
	.byte	0,31
	.byte	'IfxGtm_Tom_Timer_addToChannelMask',0,17,137,2,17,1,1,1,1,5
	.byte	'driver',0,17,137,2,69
	.word	103176
	.byte	5
	.byte	'channel',0,17,137,2,91
	.word	26066
	.byte	0,32
	.byte	'IfxGtm_Tom_Timer_stdIfTimerInit',0,17,232,2,20
	.word	508
	.byte	1,1,1,1,5
	.byte	'stdif',0,17,232,2,68
	.word	10029
	.byte	5
	.byte	'driver',0,17,232,2,93
	.word	103176
	.byte	0
.L364:
	.byte	17,13,178,1,9,1,18
	.byte	'Ifx_Pwm_Mode_centerAligned',0,0,18
	.byte	'Ifx_Pwm_Mode_centerAlignedInverted',0,1,18
	.byte	'Ifx_Pwm_Mode_leftAligned',0,2,18
	.byte	'Ifx_Pwm_Mode_rightAligned',0,3,18
	.byte	'Ifx_Pwm_Mode_off',0,4,18
	.byte	'Ifx_Pwm_Mode_init',0,5,18
	.byte	'Ifx_Pwm_Mode_count',0,6,0,7
	.byte	'char',0,1,6,30,18,171,1,9,20,14
	.byte	'deadtime',0
	.word	8955
	.byte	4,2,35,0,14
	.byte	'minPulse',0
	.word	8955
	.byte	4,2,35,4,14
	.byte	'maxPulse',0
	.word	8955
	.byte	4,2,35,8,14
	.byte	'mode',0
	.word	103392
	.byte	1,2,35,12,14
	.byte	'setMode',0
	.word	103580
	.byte	1,2,35,13,14
	.byte	'ccxActiveState',0
	.word	17059
	.byte	1,2,35,14,14
	.byte	'coutxActiveState',0
	.word	17059
	.byte	1,2,35,15,14
	.byte	'inverted',0
	.word	508
	.byte	1,2,35,16,14
	.byte	'channelCount',0
	.word	508
	.byte	1,2,35,17,0,3
	.word	.L640-.L189
	.byte	3
	.word	8955
	.byte	22,1,1,21
	.word	103770
	.byte	21
	.word	103775
	.byte	0,3
	.word	103780
	.byte	19
	.byte	'IfxGtm_Tom_PwmHl_Update',0,18,157,1,35
	.word	103794
	.byte	22,1,1,21
	.word	103770
	.byte	21
	.word	103775
	.byte	21
	.word	103775
	.byte	0,3
	.word	103832
	.byte	19
	.byte	'IfxGtm_Tom_PwmHl_UpdateShift',0,18,159,1,35
	.word	103851
	.byte	3
	.word	241
	.byte	22,1,1,21
	.word	103770
	.byte	21
	.word	103894
	.byte	21
	.word	103894
	.byte	0,3
	.word	103899
	.byte	19
	.byte	'IfxGtm_Tom_PwmHl_UpdatePulse',0,18,161,1,35
	.word	103918
	.byte	15,3
	.word	26066
	.byte	16,2,0,3
	.word	26066
.L640:
	.byte	11
	.byte	'IfxGtm_Tom_PwmHl_s',0,18,214,1,8,60,14
	.byte	'base',0
	.word	103588
	.byte	20,2,35,0,14
	.byte	'timer',0
	.word	103176
	.byte	4,2,35,20,14
	.byte	'update',0
	.word	103799
	.byte	4,2,35,24,14
	.byte	'updateAndShift',0
	.word	103856
	.byte	4,2,35,28,14
	.byte	'updatePulse',0
	.word	103923
	.byte	4,2,35,32,14
	.byte	'tom',0
	.word	26061
	.byte	4,2,35,36,14
	.byte	'tgc',0
	.word	26660
	.byte	4,2,35,40,14
	.byte	'ccx',0
	.word	103961
	.byte	3,2,35,44,14
	.byte	'coutx',0
	.word	103961
	.byte	3,2,35,47,14
	.byte	'ccxTemp',0
	.word	103970
	.byte	4,2,35,52,14
	.byte	'coutxTemp',0
	.word	103970
	.byte	4,2,35,56,0
.L296:
	.byte	3
	.word	103975
	.byte	3
	.word	103780
	.byte	3
	.word	103832
	.byte	3
	.word	103899
	.byte	19
	.byte	'IfxGtm_Tom_ToutMapP',0,16,138,1,29
	.word	28366
	.byte	24
	.word	104201
	.byte	3
	.word	104230
	.byte	30,18,190,1,9,36,14
	.byte	'base',0
	.word	17924
	.byte	16,2,35,0,14
	.byte	'timer',0
	.word	103176
	.byte	4,2,35,16,14
	.byte	'tom',0
	.word	27870
	.byte	1,2,35,20,14
	.byte	'ccx',0
	.word	104235
	.byte	4,2,35,24,14
	.byte	'coutx',0
	.word	104235
	.byte	4,2,35,28,14
	.byte	'initPins',0
	.word	508
	.byte	1,2,35,32,0,24
	.word	104240
.L298:
	.byte	3
	.word	104335
	.byte	24
	.word	28264
	.byte	3
	.word	104345
.L344:
	.byte	15,12
	.word	8955
	.byte	16,2,0
.L347:
	.byte	3
	.word	104240
.L389:
	.byte	3
	.word	103588
.L406:
	.byte	3
	.word	8955
.L414:
	.byte	3
	.word	241
.L419:
	.byte	3
	.word	508
	.byte	19
	.byte	'IfxStdIf_PwmHl_SetDeadtime',0,14,89,19
	.word	9116
	.byte	19
	.byte	'IfxStdIf_PwmHl_GetDeadtime',0,14,97,19
	.word	8914
	.byte	19
	.byte	'IfxStdIf_PwmHl_SetMinPulse',0,14,105,19
	.word	9116
	.byte	19
	.byte	'IfxStdIf_PwmHl_GetMinPulse',0,14,113,19
	.word	8914
	.byte	20
	.word	103392
	.byte	1,1,21
	.word	415
	.byte	0,3
	.word	104529
	.byte	19
	.byte	'IfxStdIf_PwmHl_GetMode',0,14,121,24
	.word	104542
	.byte	20
	.word	508
	.byte	1,1,21
	.word	415
	.byte	21
	.word	103392
	.byte	0,3
	.word	104578
	.byte	19
	.byte	'IfxStdIf_PwmHl_SetMode',0,14,129,1,19
	.word	104596
	.byte	22,1,1,21
	.word	415
	.byte	21
	.word	103775
	.byte	0,3
	.word	104633
	.byte	19
	.byte	'IfxStdIf_PwmHl_SetOnTime',0,14,136,1,16
	.word	104647
	.byte	22,1,1,21
	.word	415
	.byte	21
	.word	103775
	.byte	21
	.word	103775
	.byte	0,3
	.word	104686
	.byte	19
	.byte	'IfxStdIf_PwmHl_SetOnTimeAndShift',0,14,144,1,16
	.word	104705
	.byte	22,1,1,21
	.word	415
	.byte	21
	.word	103894
	.byte	21
	.word	103894
	.byte	0,3
	.word	104752
	.byte	19
	.byte	'IfxStdIf_PwmHl_SetPulse',0,14,152,1,16
	.word	104771
	.byte	3
	.word	508
	.byte	22,1,1,21
	.word	415
	.byte	21
	.word	104809
	.byte	21
	.word	104809
	.byte	0,3
	.word	104814
	.byte	19
	.byte	'IfxStdIf_PwmHl_SetupChannels',0,14,171,1,16
	.word	104833
	.byte	11
	.byte	'IfxStdIf_PwmHl_',0,14,175,1,8,112,14
	.byte	'driver',0
	.word	8868
	.byte	4,2,35,0,14
	.byte	'setDeadtime',0
	.word	104389
	.byte	4,2,35,4,14
	.byte	'getDeadtime',0
	.word	104424
	.byte	4,2,35,8,14
	.byte	'setMinPulse',0
	.word	104459
	.byte	4,2,35,12,14
	.byte	'getMinPulse',0
	.word	104494
	.byte	4,2,35,16,14
	.byte	'getMode',0
	.word	104547
	.byte	4,2,35,20,14
	.byte	'setMode',0
	.word	104601
	.byte	4,2,35,24,14
	.byte	'setOnTime',0
	.word	104652
	.byte	4,2,35,28,14
	.byte	'setOnTimeAndShift',0
	.word	104710
	.byte	4,2,35,32,14
	.byte	'setPulse',0
	.word	104776
	.byte	4,2,35,36,14
	.byte	'setupChannels',0
	.word	104838
	.byte	4,2,35,40,14
	.byte	'timer',0
	.word	9650
	.byte	68,2,35,44,0
.L423:
	.byte	3
	.word	104876
	.byte	3
	.word	9098
	.byte	3
	.word	8901
	.byte	3
	.word	9098
	.byte	3
	.word	8901
	.byte	3
	.word	104529
	.byte	3
	.word	104578
	.byte	3
	.word	104633
	.byte	3
	.word	104686
	.byte	3
	.word	104752
	.byte	3
	.word	104814
	.byte	32
	.byte	'memset',0,19,56,17
	.word	415
	.byte	1,1,1,1,33,19,56,33
	.word	415
	.byte	33,19,56,36
	.word	501
	.byte	33,19,56,41
	.word	311
	.byte	0,28
	.word	17110
	.byte	29
	.word	17157
	.byte	6,0,34
	.byte	'__INDIRECT__',0,12,1,1,1,1,1,7
	.byte	'short int',0,2,5,19
	.byte	'__wchar_t',0,12,1,1
	.word	105266
	.byte	19
	.byte	'__size_t',0,12,1,1
	.word	311
	.byte	19
	.byte	'__ptrdiff_t',0,12,1,1
	.word	501
	.byte	35,1,3
	.word	105334
	.byte	19
	.byte	'__codeptr',0,12,1,1
	.word	105336
	.byte	19
	.byte	'size_t',0,20,24,25
	.word	311
	.byte	19
	.byte	'boolean',0,21,101,29
	.word	508
	.byte	19
	.byte	'uint8',0,21,105,29
	.word	508
	.byte	19
	.byte	'uint16',0,21,109,29
	.word	907
	.byte	19
	.byte	'uint32',0,21,113,29
	.word	8955
	.byte	19
	.byte	'uint64',0,21,118,29
	.word	389
	.byte	19
	.byte	'sint8',0,21,122,29
	.word	103580
	.byte	19
	.byte	'sint16',0,21,126,29
	.word	105266
	.byte	7
	.byte	'long int',0,4,5,19
	.byte	'sint32',0,21,131,1,29
	.word	105478
	.byte	7
	.byte	'long long int',0,8,5,19
	.byte	'sint64',0,21,138,1,29
	.word	105506
	.byte	19
	.byte	'float32',0,21,167,1,29
	.word	241
	.byte	19
	.byte	'pvoid',0,13,57,28
	.word	415
	.byte	19
	.byte	'Ifx_TickTime',0,13,79,28
	.word	105506
	.byte	19
	.byte	'Ifx_Priority',0,13,103,16
	.word	907
	.byte	19
	.byte	'Ifx_TimerValue',0,13,104,16
	.word	8955
	.byte	19
	.byte	'Ifx_ActiveState',0,13,120,3
	.word	17059
	.byte	19
	.byte	'Ifx_Pwm_Mode',0,13,187,1,3
	.word	103392
	.byte	17,22,69,9,1,18
	.byte	'IfxSrc_Tos_cpu0',0,0,18
	.byte	'IfxSrc_Tos_cpu1',0,1,18
	.byte	'IfxSrc_Tos_dma',0,3,0,19
	.byte	'IfxSrc_Tos',0,22,74,3
	.word	105681
	.byte	19
	.byte	'Ifx_SRC_SRCR_Bits',0,4,62,3
	.word	525
	.byte	19
	.byte	'Ifx_SRC_SRCR',0,4,75,3
	.word	815
	.byte	11
	.byte	'_Ifx_SRC_AGBT',0,4,86,25,4,14
	.byte	'SR',0
	.word	815
	.byte	4,2,35,0,0,10
	.word	105806
	.byte	19
	.byte	'Ifx_SRC_AGBT',0,4,89,3
	.word	105838
	.byte	11
	.byte	'_Ifx_SRC_ASCLIN',0,4,92,25,12,14
	.byte	'TX',0
	.word	815
	.byte	4,2,35,0,14
	.byte	'RX',0
	.word	815
	.byte	4,2,35,4,14
	.byte	'ERR',0
	.word	815
	.byte	4,2,35,8,0,10
	.word	105864
	.byte	19
	.byte	'Ifx_SRC_ASCLIN',0,4,97,3
	.word	105923
	.byte	11
	.byte	'_Ifx_SRC_BCUSPB',0,4,100,25,4,14
	.byte	'SBSRC',0
	.word	815
	.byte	4,2,35,0,0,10
	.word	105951
	.byte	19
	.byte	'Ifx_SRC_BCUSPB',0,4,103,3
	.word	105988
	.byte	15,64
	.word	815
	.byte	16,15,0,11
	.byte	'_Ifx_SRC_CAN',0,4,106,25,64,14
	.byte	'INT',0
	.word	106016
	.byte	64,2,35,0,0,10
	.word	106025
	.byte	19
	.byte	'Ifx_SRC_CAN',0,4,109,3
	.word	106057
	.byte	11
	.byte	'_Ifx_SRC_CCU6',0,4,112,25,16,14
	.byte	'SR0',0
	.word	815
	.byte	4,2,35,0,14
	.byte	'SR1',0
	.word	815
	.byte	4,2,35,4,14
	.byte	'SR2',0
	.word	815
	.byte	4,2,35,8,14
	.byte	'SR3',0
	.word	815
	.byte	4,2,35,12,0,10
	.word	106082
	.byte	19
	.byte	'Ifx_SRC_CCU6',0,4,118,3
	.word	106154
	.byte	15,8
	.word	815
	.byte	16,1,0,11
	.byte	'_Ifx_SRC_CERBERUS',0,4,121,25,8,14
	.byte	'SR',0
	.word	106180
	.byte	8,2,35,0,0,10
	.word	106189
	.byte	19
	.byte	'Ifx_SRC_CERBERUS',0,4,124,3
	.word	106225
	.byte	11
	.byte	'_Ifx_SRC_CIF',0,4,127,25,16,14
	.byte	'MI',0
	.word	815
	.byte	4,2,35,0,14
	.byte	'MIEP',0
	.word	815
	.byte	4,2,35,4,14
	.byte	'ISP',0
	.word	815
	.byte	4,2,35,8,14
	.byte	'MJPEG',0
	.word	815
	.byte	4,2,35,12,0,10
	.word	106255
	.byte	19
	.byte	'Ifx_SRC_CIF',0,4,133,1,3
	.word	106328
	.byte	11
	.byte	'_Ifx_SRC_CPU',0,4,136,1,25,4,14
	.byte	'SBSRC',0
	.word	815
	.byte	4,2,35,0,0,10
	.word	106354
	.byte	19
	.byte	'Ifx_SRC_CPU',0,4,139,1,3
	.word	106389
	.byte	15,192,1
	.word	815
	.byte	16,47,0,11
	.byte	'_Ifx_SRC_DMA',0,4,142,1,25,208,1,14
	.byte	'ERR',0
	.word	815
	.byte	4,2,35,0,14
	.byte	'reserved_4',0
	.word	4094
	.byte	12,2,35,4,14
	.byte	'CH',0
	.word	106415
	.byte	192,1,2,35,16,0,10
	.word	106425
	.byte	19
	.byte	'Ifx_SRC_DMA',0,4,147,1,3
	.word	106492
	.byte	11
	.byte	'_Ifx_SRC_DSADC',0,4,150,1,25,8,14
	.byte	'SRM',0
	.word	815
	.byte	4,2,35,0,14
	.byte	'SRA',0
	.word	815
	.byte	4,2,35,4,0,10
	.word	106518
	.byte	19
	.byte	'Ifx_SRC_DSADC',0,4,154,1,3
	.word	106566
	.byte	11
	.byte	'_Ifx_SRC_EMEM',0,4,157,1,25,4,14
	.byte	'SR',0
	.word	815
	.byte	4,2,35,0,0,10
	.word	106594
	.byte	19
	.byte	'Ifx_SRC_EMEM',0,4,160,1,3
	.word	106627
	.byte	11
	.byte	'_Ifx_SRC_ERAY',0,4,163,1,25,80,14
	.byte	'INT',0
	.word	106180
	.byte	8,2,35,0,14
	.byte	'TINT',0
	.word	106180
	.byte	8,2,35,8,14
	.byte	'NDAT',0
	.word	106180
	.byte	8,2,35,16,14
	.byte	'MBSC',0
	.word	106180
	.byte	8,2,35,24,14
	.byte	'OBUSY',0
	.word	815
	.byte	4,2,35,32,14
	.byte	'IBUSY',0
	.word	815
	.byte	4,2,35,36,14
	.byte	'reserved_28',0
	.word	91765
	.byte	40,2,35,40,0,10
	.word	106654
	.byte	19
	.byte	'Ifx_SRC_ERAY',0,4,172,1,3
	.word	106781
	.byte	11
	.byte	'_Ifx_SRC_ETH',0,4,175,1,25,4,14
	.byte	'SR',0
	.word	815
	.byte	4,2,35,0,0,10
	.word	106808
	.byte	19
	.byte	'Ifx_SRC_ETH',0,4,178,1,3
	.word	106840
	.byte	11
	.byte	'_Ifx_SRC_FCE',0,4,181,1,25,4,14
	.byte	'SR',0
	.word	815
	.byte	4,2,35,0,0,10
	.word	106866
	.byte	19
	.byte	'Ifx_SRC_FCE',0,4,184,1,3
	.word	106898
	.byte	11
	.byte	'_Ifx_SRC_FFT',0,4,187,1,25,12,14
	.byte	'DONE',0
	.word	815
	.byte	4,2,35,0,14
	.byte	'ERR',0
	.word	815
	.byte	4,2,35,4,14
	.byte	'RFS',0
	.word	815
	.byte	4,2,35,8,0,10
	.word	106924
	.byte	19
	.byte	'Ifx_SRC_FFT',0,4,192,1,3
	.word	106984
	.byte	11
	.byte	'_Ifx_SRC_GPSR',0,4,195,1,25,32,14
	.byte	'SR0',0
	.word	815
	.byte	4,2,35,0,14
	.byte	'SR1',0
	.word	815
	.byte	4,2,35,4,14
	.byte	'SR2',0
	.word	815
	.byte	4,2,35,8,14
	.byte	'SR3',0
	.word	815
	.byte	4,2,35,12,14
	.byte	'reserved_10',0
	.word	13509
	.byte	16,2,35,16,0,10
	.word	107010
	.byte	19
	.byte	'Ifx_SRC_GPSR',0,4,202,1,3
	.word	107104
	.byte	11
	.byte	'_Ifx_SRC_GPT12',0,4,205,1,25,48,14
	.byte	'CIRQ',0
	.word	815
	.byte	4,2,35,0,14
	.byte	'T2',0
	.word	815
	.byte	4,2,35,4,14
	.byte	'T3',0
	.word	815
	.byte	4,2,35,8,14
	.byte	'T4',0
	.word	815
	.byte	4,2,35,12,14
	.byte	'T5',0
	.word	815
	.byte	4,2,35,16,14
	.byte	'T6',0
	.word	815
	.byte	4,2,35,20,14
	.byte	'reserved_18',0
	.word	3125
	.byte	24,2,35,24,0,10
	.word	107131
	.byte	19
	.byte	'Ifx_SRC_GPT12',0,4,214,1,3
	.word	107248
	.byte	15,12
	.word	815
	.byte	16,2,0,15,32
	.word	815
	.byte	16,7,0,15,32
	.word	107285
	.byte	16,0,0,15,108
	.word	815
	.byte	16,26,0,15,96
	.word	107285
	.byte	16,2,0,15,160,3
	.word	508
	.byte	16,159,3,0,15,64
	.word	107285
	.byte	16,1,0,15,192,3
	.word	508
	.byte	16,191,3,0,15,16
	.word	815
	.byte	16,3,0,15,64
	.word	107352
	.byte	16,3,0,15,192,2
	.word	508
	.byte	16,191,2,0,11
	.byte	'_Ifx_SRC_GTM',0,4,217,1,25,204,18,14
	.byte	'AEIIRQ',0
	.word	815
	.byte	4,2,35,0,14
	.byte	'ARUIRQ',0
	.word	107276
	.byte	12,2,35,4,14
	.byte	'reserved_10',0
	.word	1935
	.byte	4,2,35,16,14
	.byte	'BRCIRQ',0
	.word	815
	.byte	4,2,35,20,14
	.byte	'CMPIRQ',0
	.word	815
	.byte	4,2,35,24,14
	.byte	'SPEIRQ',0
	.word	106180
	.byte	8,2,35,28,14
	.byte	'reserved_24',0
	.word	3754
	.byte	8,2,35,36,14
	.byte	'PSM',0
	.word	107294
	.byte	32,2,35,44,14
	.byte	'reserved_4C',0
	.word	82818
	.byte	88,2,35,76,14
	.byte	'DPLL',0
	.word	107303
	.byte	108,3,35,164,1,14
	.byte	'reserved_110',0
	.word	82959
	.byte	96,3,35,144,2,14
	.byte	'ERR',0
	.word	815
	.byte	4,3,35,240,2,14
	.byte	'reserved_174',0
	.word	4094
	.byte	12,3,35,244,2,14
	.byte	'TIM',0
	.word	107312
	.byte	96,3,35,128,3,14
	.byte	'reserved_1E0',0
	.word	107321
	.byte	160,3,3,35,224,3,14
	.byte	'MCS',0
	.word	107312
	.byte	96,3,35,128,7,14
	.byte	'reserved_3E0',0
	.word	107321
	.byte	160,3,3,35,224,7,14
	.byte	'TOM',0
	.word	107332
	.byte	64,3,35,128,11,14
	.byte	'reserved_5C0',0
	.word	107341
	.byte	192,3,3,35,192,11,14
	.byte	'ATOM',0
	.word	107361
	.byte	64,3,35,128,15,14
	.byte	'reserved_7C0',0
	.word	107370
	.byte	192,2,3,35,192,15,14
	.byte	'MCSW0',0
	.word	107276
	.byte	12,3,35,128,18,14
	.byte	'reserved_90C',0
	.word	97866
	.byte	52,3,35,140,18,14
	.byte	'MCSW1',0
	.word	107276
	.byte	12,3,35,192,18,0,10
	.word	107381
	.byte	19
	.byte	'Ifx_SRC_GTM',0,4,243,1,3
	.word	107841
	.byte	11
	.byte	'_Ifx_SRC_HSCT',0,4,246,1,25,4,14
	.byte	'SR',0
	.word	815
	.byte	4,2,35,0,0,10
	.word	107867
	.byte	19
	.byte	'Ifx_SRC_HSCT',0,4,249,1,3
	.word	107900
	.byte	11
	.byte	'_Ifx_SRC_HSSL',0,4,252,1,25,16,14
	.byte	'COK',0
	.word	815
	.byte	4,2,35,0,14
	.byte	'RDI',0
	.word	815
	.byte	4,2,35,4,14
	.byte	'ERR',0
	.word	815
	.byte	4,2,35,8,14
	.byte	'TRG',0
	.word	815
	.byte	4,2,35,12,0,10
	.word	107927
	.byte	19
	.byte	'Ifx_SRC_HSSL',0,4,130,2,3
	.word	108000
	.byte	11
	.byte	'_Ifx_SRC_I2C',0,4,133,2,25,80,14
	.byte	'BREQ',0
	.word	815
	.byte	4,2,35,0,14
	.byte	'LBREQ',0
	.word	815
	.byte	4,2,35,4,14
	.byte	'SREQ',0
	.word	815
	.byte	4,2,35,8,14
	.byte	'LSREQ',0
	.word	815
	.byte	4,2,35,12,14
	.byte	'ERR',0
	.word	815
	.byte	4,2,35,16,14
	.byte	'P',0
	.word	815
	.byte	4,2,35,20,14
	.byte	'reserved_18',0
	.word	60268
	.byte	56,2,35,24,0,10
	.word	108027
	.byte	19
	.byte	'Ifx_SRC_I2C',0,4,142,2,3
	.word	108150
	.byte	11
	.byte	'_Ifx_SRC_LMU',0,4,145,2,25,4,14
	.byte	'SR',0
	.word	815
	.byte	4,2,35,0,0,10
	.word	108176
	.byte	19
	.byte	'Ifx_SRC_LMU',0,4,148,2,3
	.word	108208
	.byte	11
	.byte	'_Ifx_SRC_MSC',0,4,151,2,25,20,14
	.byte	'SR0',0
	.word	815
	.byte	4,2,35,0,14
	.byte	'SR1',0
	.word	815
	.byte	4,2,35,4,14
	.byte	'SR2',0
	.word	815
	.byte	4,2,35,8,14
	.byte	'SR3',0
	.word	815
	.byte	4,2,35,12,14
	.byte	'SR4',0
	.word	815
	.byte	4,2,35,16,0,10
	.word	108234
	.byte	19
	.byte	'Ifx_SRC_MSC',0,4,158,2,3
	.word	108319
	.byte	11
	.byte	'_Ifx_SRC_PMU',0,4,161,2,25,4,14
	.byte	'SR',0
	.word	815
	.byte	4,2,35,0,0,10
	.word	108345
	.byte	19
	.byte	'Ifx_SRC_PMU',0,4,164,2,3
	.word	108377
	.byte	11
	.byte	'_Ifx_SRC_PSI5',0,4,167,2,25,32,14
	.byte	'SR',0
	.word	107285
	.byte	32,2,35,0,0,10
	.word	108403
	.byte	19
	.byte	'Ifx_SRC_PSI5',0,4,170,2,3
	.word	108436
	.byte	11
	.byte	'_Ifx_SRC_PSI5S',0,4,173,2,25,32,14
	.byte	'SR',0
	.word	107285
	.byte	32,2,35,0,0,10
	.word	108463
	.byte	19
	.byte	'Ifx_SRC_PSI5S',0,4,176,2,3
	.word	108497
	.byte	11
	.byte	'_Ifx_SRC_QSPI',0,4,179,2,25,24,14
	.byte	'TX',0
	.word	815
	.byte	4,2,35,0,14
	.byte	'RX',0
	.word	815
	.byte	4,2,35,4,14
	.byte	'ERR',0
	.word	815
	.byte	4,2,35,8,14
	.byte	'PT',0
	.word	815
	.byte	4,2,35,12,14
	.byte	'HC',0
	.word	815
	.byte	4,2,35,16,14
	.byte	'U',0
	.word	815
	.byte	4,2,35,20,0,10
	.word	108525
	.byte	19
	.byte	'Ifx_SRC_QSPI',0,4,187,2,3
	.word	108618
	.byte	11
	.byte	'_Ifx_SRC_SCR',0,4,190,2,25,4,14
	.byte	'SR',0
	.word	815
	.byte	4,2,35,0,0,10
	.word	108645
	.byte	19
	.byte	'Ifx_SRC_SCR',0,4,193,2,3
	.word	108677
	.byte	11
	.byte	'_Ifx_SRC_SCU',0,4,196,2,25,20,14
	.byte	'DTS',0
	.word	815
	.byte	4,2,35,0,14
	.byte	'ERU',0
	.word	107352
	.byte	16,2,35,4,0,10
	.word	108703
	.byte	19
	.byte	'Ifx_SRC_SCU',0,4,200,2,3
	.word	108749
	.byte	15,24
	.word	815
	.byte	16,5,0,11
	.byte	'_Ifx_SRC_SENT',0,4,203,2,25,24,14
	.byte	'SR',0
	.word	108775
	.byte	24,2,35,0,0,10
	.word	108784
	.byte	19
	.byte	'Ifx_SRC_SENT',0,4,206,2,3
	.word	108817
	.byte	11
	.byte	'_Ifx_SRC_SMU',0,4,209,2,25,12,14
	.byte	'SR',0
	.word	107276
	.byte	12,2,35,0,0,10
	.word	108844
	.byte	19
	.byte	'Ifx_SRC_SMU',0,4,212,2,3
	.word	108876
	.byte	11
	.byte	'_Ifx_SRC_STM',0,4,215,2,25,8,14
	.byte	'SR0',0
	.word	815
	.byte	4,2,35,0,14
	.byte	'SR1',0
	.word	815
	.byte	4,2,35,4,0,10
	.word	108902
	.byte	19
	.byte	'Ifx_SRC_STM',0,4,219,2,3
	.word	108948
	.byte	11
	.byte	'_Ifx_SRC_VADCCG',0,4,222,2,25,16,14
	.byte	'SR0',0
	.word	815
	.byte	4,2,35,0,14
	.byte	'SR1',0
	.word	815
	.byte	4,2,35,4,14
	.byte	'SR2',0
	.word	815
	.byte	4,2,35,8,14
	.byte	'SR3',0
	.word	815
	.byte	4,2,35,12,0,10
	.word	108974
	.byte	19
	.byte	'Ifx_SRC_VADCCG',0,4,228,2,3
	.word	109049
	.byte	11
	.byte	'_Ifx_SRC_VADCG',0,4,231,2,25,16,14
	.byte	'SR0',0
	.word	815
	.byte	4,2,35,0,14
	.byte	'SR1',0
	.word	815
	.byte	4,2,35,4,14
	.byte	'SR2',0
	.word	815
	.byte	4,2,35,8,14
	.byte	'SR3',0
	.word	815
	.byte	4,2,35,12,0,10
	.word	109078
	.byte	19
	.byte	'Ifx_SRC_VADCG',0,4,237,2,3
	.word	109152
	.byte	11
	.byte	'_Ifx_SRC_XBAR',0,4,240,2,25,4,14
	.byte	'SRC',0
	.word	815
	.byte	4,2,35,0,0,10
	.word	109180
	.byte	19
	.byte	'Ifx_SRC_XBAR',0,4,243,2,3
	.word	109214
	.byte	15,4
	.word	105806
	.byte	16,0,0,10
	.word	109241
	.byte	11
	.byte	'_Ifx_SRC_GAGBT',0,4,128,3,25,4,14
	.byte	'AGBT',0
	.word	109250
	.byte	4,2,35,0,0,10
	.word	109255
	.byte	19
	.byte	'Ifx_SRC_GAGBT',0,4,131,3,3
	.word	109291
	.byte	15,48
	.word	105864
	.byte	16,3,0,10
	.word	109319
	.byte	11
	.byte	'_Ifx_SRC_GASCLIN',0,4,134,3,25,48,14
	.byte	'ASCLIN',0
	.word	109328
	.byte	48,2,35,0,0,10
	.word	109333
	.byte	19
	.byte	'Ifx_SRC_GASCLIN',0,4,137,3,3
	.word	109373
	.byte	10
	.word	105951
	.byte	11
	.byte	'_Ifx_SRC_GBCU',0,4,140,3,25,4,14
	.byte	'SPB',0
	.word	109403
	.byte	4,2,35,0,0,10
	.word	109408
	.byte	19
	.byte	'Ifx_SRC_GBCU',0,4,143,3,3
	.word	109442
	.byte	15,64
	.word	106025
	.byte	16,0,0,10
	.word	109469
	.byte	11
	.byte	'_Ifx_SRC_GCAN',0,4,146,3,25,64,14
	.byte	'CAN',0
	.word	109478
	.byte	64,2,35,0,0,10
	.word	109483
	.byte	19
	.byte	'Ifx_SRC_GCAN',0,4,149,3,3
	.word	109517
	.byte	15,32
	.word	106082
	.byte	16,1,0,10
	.word	109544
	.byte	11
	.byte	'_Ifx_SRC_GCCU6',0,4,152,3,25,32,14
	.byte	'CCU6',0
	.word	109553
	.byte	32,2,35,0,0,10
	.word	109558
	.byte	19
	.byte	'Ifx_SRC_GCCU6',0,4,155,3,3
	.word	109594
	.byte	10
	.word	106189
	.byte	11
	.byte	'_Ifx_SRC_GCERBERUS',0,4,158,3,25,8,14
	.byte	'CERBERUS',0
	.word	109622
	.byte	8,2,35,0,0,10
	.word	109627
	.byte	19
	.byte	'Ifx_SRC_GCERBERUS',0,4,161,3,3
	.word	109671
	.byte	15,16
	.word	106255
	.byte	16,0,0,10
	.word	109703
	.byte	11
	.byte	'_Ifx_SRC_GCIF',0,4,164,3,25,16,14
	.byte	'CIF',0
	.word	109712
	.byte	16,2,35,0,0,10
	.word	109717
	.byte	19
	.byte	'Ifx_SRC_GCIF',0,4,167,3,3
	.word	109751
	.byte	15,8
	.word	106354
	.byte	16,1,0,10
	.word	109778
	.byte	11
	.byte	'_Ifx_SRC_GCPU',0,4,170,3,25,8,14
	.byte	'CPU',0
	.word	109787
	.byte	8,2,35,0,0,10
	.word	109792
	.byte	19
	.byte	'Ifx_SRC_GCPU',0,4,173,3,3
	.word	109826
	.byte	15,208,1
	.word	106425
	.byte	16,0,0,10
	.word	109853
	.byte	11
	.byte	'_Ifx_SRC_GDMA',0,4,176,3,25,208,1,14
	.byte	'DMA',0
	.word	109863
	.byte	208,1,2,35,0,0,10
	.word	109868
	.byte	19
	.byte	'Ifx_SRC_GDMA',0,4,179,3,3
	.word	109904
	.byte	10
	.word	106518
	.byte	10
	.word	106518
	.byte	10
	.word	106518
	.byte	11
	.byte	'_Ifx_SRC_GDSADC',0,4,182,3,25,32,14
	.byte	'DSADC0',0
	.word	109931
	.byte	8,2,35,0,14
	.byte	'reserved_8',0
	.word	3754
	.byte	8,2,35,8,14
	.byte	'DSADC2',0
	.word	109936
	.byte	8,2,35,16,14
	.byte	'DSADC3',0
	.word	109941
	.byte	8,2,35,24,0,10
	.word	109946
	.byte	19
	.byte	'Ifx_SRC_GDSADC',0,4,188,3,3
	.word	110037
	.byte	15,4
	.word	106594
	.byte	16,0,0,10
	.word	110066
	.byte	11
	.byte	'_Ifx_SRC_GEMEM',0,4,191,3,25,4,14
	.byte	'EMEM',0
	.word	110075
	.byte	4,2,35,0,0,10
	.word	110080
	.byte	19
	.byte	'Ifx_SRC_GEMEM',0,4,194,3,3
	.word	110116
	.byte	15,80
	.word	106654
	.byte	16,0,0,10
	.word	110144
	.byte	11
	.byte	'_Ifx_SRC_GERAY',0,4,197,3,25,80,14
	.byte	'ERAY',0
	.word	110153
	.byte	80,2,35,0,0,10
	.word	110158
	.byte	19
	.byte	'Ifx_SRC_GERAY',0,4,200,3,3
	.word	110194
	.byte	15,4
	.word	106808
	.byte	16,0,0,10
	.word	110222
	.byte	11
	.byte	'_Ifx_SRC_GETH',0,4,203,3,25,4,14
	.byte	'ETH',0
	.word	110231
	.byte	4,2,35,0,0,10
	.word	110236
	.byte	19
	.byte	'Ifx_SRC_GETH',0,4,206,3,3
	.word	110270
	.byte	15,4
	.word	106866
	.byte	16,0,0,10
	.word	110297
	.byte	11
	.byte	'_Ifx_SRC_GFCE',0,4,209,3,25,4,14
	.byte	'FCE',0
	.word	110306
	.byte	4,2,35,0,0,10
	.word	110311
	.byte	19
	.byte	'Ifx_SRC_GFCE',0,4,212,3,3
	.word	110345
	.byte	15,12
	.word	106924
	.byte	16,0,0,10
	.word	110372
	.byte	11
	.byte	'_Ifx_SRC_GFFT',0,4,215,3,25,12,14
	.byte	'FFT',0
	.word	110381
	.byte	12,2,35,0,0,10
	.word	110386
	.byte	19
	.byte	'Ifx_SRC_GFFT',0,4,218,3,3
	.word	110420
	.byte	15,64
	.word	107010
	.byte	16,1,0,10
	.word	110447
	.byte	11
	.byte	'_Ifx_SRC_GGPSR',0,4,221,3,25,64,14
	.byte	'GPSR',0
	.word	110456
	.byte	64,2,35,0,0,10
	.word	110461
	.byte	19
	.byte	'Ifx_SRC_GGPSR',0,4,224,3,3
	.word	110497
	.byte	15,48
	.word	107131
	.byte	16,0,0,10
	.word	110525
	.byte	11
	.byte	'_Ifx_SRC_GGPT12',0,4,227,3,25,48,14
	.byte	'GPT12',0
	.word	110534
	.byte	48,2,35,0,0,10
	.word	110539
	.byte	19
	.byte	'Ifx_SRC_GGPT12',0,4,230,3,3
	.word	110577
	.byte	15,204,18
	.word	107381
	.byte	16,0,0,10
	.word	110606
	.byte	11
	.byte	'_Ifx_SRC_GGTM',0,4,233,3,25,204,18,14
	.byte	'GTM',0
	.word	110616
	.byte	204,18,2,35,0,0,10
	.word	110621
	.byte	19
	.byte	'Ifx_SRC_GGTM',0,4,236,3,3
	.word	110657
	.byte	15,4
	.word	107867
	.byte	16,0,0,10
	.word	110684
	.byte	11
	.byte	'_Ifx_SRC_GHSCT',0,4,239,3,25,4,14
	.byte	'HSCT',0
	.word	110693
	.byte	4,2,35,0,0,10
	.word	110698
	.byte	19
	.byte	'Ifx_SRC_GHSCT',0,4,242,3,3
	.word	110734
	.byte	15,64
	.word	107927
	.byte	16,3,0,10
	.word	110762
	.byte	11
	.byte	'_Ifx_SRC_GHSSL',0,4,245,3,25,68,14
	.byte	'HSSL',0
	.word	110771
	.byte	64,2,35,0,14
	.byte	'EXI',0
	.word	815
	.byte	4,2,35,64,0,10
	.word	110776
	.byte	19
	.byte	'Ifx_SRC_GHSSL',0,4,249,3,3
	.word	110825
	.byte	15,80
	.word	108027
	.byte	16,0,0,10
	.word	110853
	.byte	11
	.byte	'_Ifx_SRC_GI2C',0,4,252,3,25,80,14
	.byte	'I2C',0
	.word	110862
	.byte	80,2,35,0,0,10
	.word	110867
	.byte	19
	.byte	'Ifx_SRC_GI2C',0,4,255,3,3
	.word	110901
	.byte	15,4
	.word	108176
	.byte	16,0,0,10
	.word	110928
	.byte	11
	.byte	'_Ifx_SRC_GLMU',0,4,130,4,25,4,14
	.byte	'LMU',0
	.word	110937
	.byte	4,2,35,0,0,10
	.word	110942
	.byte	19
	.byte	'Ifx_SRC_GLMU',0,4,133,4,3
	.word	110976
	.byte	15,40
	.word	108234
	.byte	16,1,0,10
	.word	111003
	.byte	11
	.byte	'_Ifx_SRC_GMSC',0,4,136,4,25,40,14
	.byte	'MSC',0
	.word	111012
	.byte	40,2,35,0,0,10
	.word	111017
	.byte	19
	.byte	'Ifx_SRC_GMSC',0,4,139,4,3
	.word	111051
	.byte	15,8
	.word	108345
	.byte	16,1,0,10
	.word	111078
	.byte	11
	.byte	'_Ifx_SRC_GPMU',0,4,142,4,25,8,14
	.byte	'PMU',0
	.word	111087
	.byte	8,2,35,0,0,10
	.word	111092
	.byte	19
	.byte	'Ifx_SRC_GPMU',0,4,145,4,3
	.word	111126
	.byte	15,32
	.word	108403
	.byte	16,0,0,10
	.word	111153
	.byte	11
	.byte	'_Ifx_SRC_GPSI5',0,4,148,4,25,32,14
	.byte	'PSI5',0
	.word	111162
	.byte	32,2,35,0,0,10
	.word	111167
	.byte	19
	.byte	'Ifx_SRC_GPSI5',0,4,151,4,3
	.word	111203
	.byte	15,32
	.word	108463
	.byte	16,0,0,10
	.word	111231
	.byte	11
	.byte	'_Ifx_SRC_GPSI5S',0,4,154,4,25,32,14
	.byte	'PSI5S',0
	.word	111240
	.byte	32,2,35,0,0,10
	.word	111245
	.byte	19
	.byte	'Ifx_SRC_GPSI5S',0,4,157,4,3
	.word	111283
	.byte	15,96
	.word	108525
	.byte	16,3,0,10
	.word	111312
	.byte	11
	.byte	'_Ifx_SRC_GQSPI',0,4,160,4,25,96,14
	.byte	'QSPI',0
	.word	111321
	.byte	96,2,35,0,0,10
	.word	111326
	.byte	19
	.byte	'Ifx_SRC_GQSPI',0,4,163,4,3
	.word	111362
	.byte	15,4
	.word	108645
	.byte	16,0,0,10
	.word	111390
	.byte	11
	.byte	'_Ifx_SRC_GSCR',0,4,166,4,25,4,14
	.byte	'SCR',0
	.word	111399
	.byte	4,2,35,0,0,10
	.word	111404
	.byte	19
	.byte	'Ifx_SRC_GSCR',0,4,169,4,3
	.word	111438
	.byte	10
	.word	108703
	.byte	11
	.byte	'_Ifx_SRC_GSCU',0,4,172,4,25,20,14
	.byte	'SCU',0
	.word	111465
	.byte	20,2,35,0,0,10
	.word	111470
	.byte	19
	.byte	'Ifx_SRC_GSCU',0,4,175,4,3
	.word	111504
	.byte	15,24
	.word	108784
	.byte	16,0,0,10
	.word	111531
	.byte	11
	.byte	'_Ifx_SRC_GSENT',0,4,178,4,25,24,14
	.byte	'SENT',0
	.word	111540
	.byte	24,2,35,0,0,10
	.word	111545
	.byte	19
	.byte	'Ifx_SRC_GSENT',0,4,181,4,3
	.word	111581
	.byte	15,12
	.word	108844
	.byte	16,0,0,10
	.word	111609
	.byte	11
	.byte	'_Ifx_SRC_GSMU',0,4,184,4,25,12,14
	.byte	'SMU',0
	.word	111618
	.byte	12,2,35,0,0,10
	.word	111623
	.byte	19
	.byte	'Ifx_SRC_GSMU',0,4,187,4,3
	.word	111657
	.byte	15,16
	.word	108902
	.byte	16,1,0,10
	.word	111684
	.byte	11
	.byte	'_Ifx_SRC_GSTM',0,4,190,4,25,16,14
	.byte	'STM',0
	.word	111693
	.byte	16,2,35,0,0,10
	.word	111698
	.byte	19
	.byte	'Ifx_SRC_GSTM',0,4,193,4,3
	.word	111732
	.byte	15,64
	.word	109078
	.byte	16,3,0,10
	.word	111759
	.byte	15,224,1
	.word	508
	.byte	16,223,1,0,15,32
	.word	108974
	.byte	16,1,0,10
	.word	111784
	.byte	11
	.byte	'_Ifx_SRC_GVADC',0,4,196,4,25,192,2,14
	.byte	'G',0
	.word	111768
	.byte	64,2,35,0,14
	.byte	'reserved_40',0
	.word	111773
	.byte	224,1,2,35,64,14
	.byte	'CG',0
	.word	111793
	.byte	32,3,35,160,2,0,10
	.word	111798
	.byte	19
	.byte	'Ifx_SRC_GVADC',0,4,201,4,3
	.word	111867
	.byte	10
	.word	109180
	.byte	11
	.byte	'_Ifx_SRC_GXBAR',0,4,204,4,25,4,14
	.byte	'XBAR',0
	.word	111895
	.byte	4,2,35,0,0,10
	.word	111900
	.byte	19
	.byte	'Ifx_SRC_GXBAR',0,4,207,4,3
	.word	111936
	.byte	19
	.byte	'Ifx_P_ACCEN0_Bits',0,6,79,3
	.word	7507
	.byte	19
	.byte	'Ifx_P_ACCEN1_Bits',0,6,85,3
	.word	7420
	.byte	19
	.byte	'Ifx_P_ESR_Bits',0,6,107,3
	.word	3763
	.byte	19
	.byte	'Ifx_P_ID_Bits',0,6,115,3
	.word	1816
	.byte	19
	.byte	'Ifx_P_IN_Bits',0,6,137,1,3
	.word	2811
	.byte	19
	.byte	'Ifx_P_IOCR0_Bits',0,6,150,1,3
	.word	1944
	.byte	19
	.byte	'Ifx_P_IOCR12_Bits',0,6,163,1,3
	.word	2591
	.byte	19
	.byte	'Ifx_P_IOCR4_Bits',0,6,176,1,3
	.word	2159
	.byte	19
	.byte	'Ifx_P_IOCR8_Bits',0,6,189,1,3
	.word	2374
	.byte	19
	.byte	'Ifx_P_LPCR0_Bits',0,6,197,1,3
	.word	6779
	.byte	19
	.byte	'Ifx_P_LPCR1_Bits',0,6,205,1,3
	.word	6903
	.byte	19
	.byte	'Ifx_P_LPCR1_P21_Bits',0,6,215,1,3
	.word	6987
	.byte	19
	.byte	'Ifx_P_LPCR2_Bits',0,6,229,1,3
	.word	7167
	.byte	19
	.byte	'Ifx_P_OMCR0_Bits',0,6,240,1,3
	.word	5418
	.byte	19
	.byte	'Ifx_P_OMCR12_Bits',0,6,250,1,3
	.word	5942
	.byte	19
	.byte	'Ifx_P_OMCR4_Bits',0,6,133,2,3
	.word	5592
	.byte	19
	.byte	'Ifx_P_OMCR8_Bits',0,6,144,2,3
	.word	5766
	.byte	19
	.byte	'Ifx_P_OMCR_Bits',0,6,166,2,3
	.word	6431
	.byte	19
	.byte	'Ifx_P_OMR_Bits',0,6,203,2,3
	.word	1245
	.byte	19
	.byte	'Ifx_P_OMSR0_Bits',0,6,213,2,3
	.word	4755
	.byte	19
	.byte	'Ifx_P_OMSR12_Bits',0,6,224,2,3
	.word	5243
	.byte	19
	.byte	'Ifx_P_OMSR4_Bits',0,6,235,2,3
	.word	4902
	.byte	19
	.byte	'Ifx_P_OMSR8_Bits',0,6,246,2,3
	.word	5071
	.byte	19
	.byte	'Ifx_P_OMSR_Bits',0,6,140,3,3
	.word	6098
	.byte	19
	.byte	'Ifx_P_OUT_Bits',0,6,162,3,3
	.word	929
	.byte	19
	.byte	'Ifx_P_PCSR_Bits',0,6,180,3,3
	.word	4469
	.byte	19
	.byte	'Ifx_P_PDISC_Bits',0,6,202,3,3
	.word	4103
	.byte	19
	.byte	'Ifx_P_PDR0_Bits',0,6,223,3,3
	.word	3134
	.byte	19
	.byte	'Ifx_P_PDR1_Bits',0,6,244,3,3
	.word	3438
	.byte	19
	.byte	'Ifx_P_ACCEN0',0,6,129,4,3
	.word	8034
	.byte	19
	.byte	'Ifx_P_ACCEN1',0,6,137,4,3
	.word	7467
	.byte	19
	.byte	'Ifx_P_ESR',0,6,145,4,3
	.word	4054
	.byte	19
	.byte	'Ifx_P_ID',0,6,153,4,3
	.word	1895
	.byte	19
	.byte	'Ifx_P_IN',0,6,161,4,3
	.word	3085
	.byte	19
	.byte	'Ifx_P_IOCR0',0,6,169,4,3
	.word	2119
	.byte	19
	.byte	'Ifx_P_IOCR12',0,6,177,4,3
	.word	2771
	.byte	19
	.byte	'Ifx_P_IOCR4',0,6,185,4,3
	.word	2334
	.byte	19
	.byte	'Ifx_P_IOCR8',0,6,193,4,3
	.word	2551
	.byte	19
	.byte	'Ifx_P_LPCR0',0,6,201,4,3
	.word	6863
	.byte	19
	.byte	'Ifx_P_LPCR1',0,6,210,4,3
	.word	7112
	.byte	19
	.byte	'Ifx_P_LPCR2',0,6,218,4,3
	.word	7371
	.byte	19
	.byte	'Ifx_P_OMCR',0,6,226,4,3
	.word	6739
	.byte	19
	.byte	'Ifx_P_OMCR0',0,6,234,4,3
	.word	5552
	.byte	19
	.byte	'Ifx_P_OMCR12',0,6,242,4,3
	.word	6058
	.byte	19
	.byte	'Ifx_P_OMCR4',0,6,250,4,3
	.word	5726
	.byte	19
	.byte	'Ifx_P_OMCR8',0,6,130,5,3
	.word	5902
	.byte	19
	.byte	'Ifx_P_OMR',0,6,138,5,3
	.word	1776
	.byte	19
	.byte	'Ifx_P_OMSR',0,6,146,5,3
	.word	6391
	.byte	19
	.byte	'Ifx_P_OMSR0',0,6,154,5,3
	.word	4862
	.byte	19
	.byte	'Ifx_P_OMSR12',0,6,162,5,3
	.word	5378
	.byte	19
	.byte	'Ifx_P_OMSR4',0,6,170,5,3
	.word	5031
	.byte	19
	.byte	'Ifx_P_OMSR8',0,6,178,5,3
	.word	5203
	.byte	19
	.byte	'Ifx_P_OUT',0,6,186,5,3
	.word	1205
	.byte	19
	.byte	'Ifx_P_PCSR',0,6,194,5,3
	.word	4715
	.byte	19
	.byte	'Ifx_P_PDISC',0,6,202,5,3
	.word	4429
	.byte	19
	.byte	'Ifx_P_PDR0',0,6,210,5,3
	.word	3398
	.byte	19
	.byte	'Ifx_P_PDR1',0,6,218,5,3
	.word	3714
	.byte	10
	.word	8074
	.byte	19
	.byte	'Ifx_P',0,6,139,6,3
	.word	113282
	.byte	17,23,254,10,9,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,18
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,19
	.byte	'IfxScu_WDTCON1_IR',0,23,131,11,3
	.word	113302
	.byte	11
	.byte	'_Ifx_SCU_ACCEN0_Bits',0,24,45,16,4,12
	.byte	'EN0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'EN1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'EN2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'EN3',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'EN4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'EN5',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'EN6',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'EN7',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'EN8',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'EN9',0,1
	.word	508
	.byte	1,6,2,35,1,12
	.byte	'EN10',0,1
	.word	508
	.byte	1,5,2,35,1,12
	.byte	'EN11',0,1
	.word	508
	.byte	1,4,2,35,1,12
	.byte	'EN12',0,1
	.word	508
	.byte	1,3,2,35,1,12
	.byte	'EN13',0,1
	.word	508
	.byte	1,2,2,35,1,12
	.byte	'EN14',0,1
	.word	508
	.byte	1,1,2,35,1,12
	.byte	'EN15',0,1
	.word	508
	.byte	1,0,2,35,1,12
	.byte	'EN16',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'EN17',0,1
	.word	508
	.byte	1,6,2,35,2,12
	.byte	'EN18',0,1
	.word	508
	.byte	1,5,2,35,2,12
	.byte	'EN19',0,1
	.word	508
	.byte	1,4,2,35,2,12
	.byte	'EN20',0,1
	.word	508
	.byte	1,3,2,35,2,12
	.byte	'EN21',0,1
	.word	508
	.byte	1,2,2,35,2,12
	.byte	'EN22',0,1
	.word	508
	.byte	1,1,2,35,2,12
	.byte	'EN23',0,1
	.word	508
	.byte	1,0,2,35,2,12
	.byte	'EN24',0,1
	.word	508
	.byte	1,7,2,35,3,12
	.byte	'EN25',0,1
	.word	508
	.byte	1,6,2,35,3,12
	.byte	'EN26',0,1
	.word	508
	.byte	1,5,2,35,3,12
	.byte	'EN27',0,1
	.word	508
	.byte	1,4,2,35,3,12
	.byte	'EN28',0,1
	.word	508
	.byte	1,3,2,35,3,12
	.byte	'EN29',0,1
	.word	508
	.byte	1,2,2,35,3,12
	.byte	'EN30',0,1
	.word	508
	.byte	1,1,2,35,3,12
	.byte	'EN31',0,1
	.word	508
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_ACCEN0_Bits',0,24,79,3
	.word	113424
	.byte	11
	.byte	'_Ifx_SCU_ACCEN1_Bits',0,24,82,16,4,12
	.byte	'reserved_0',0,4
	.word	311
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_SCU_ACCEN1_Bits',0,24,85,3
	.word	113981
	.byte	11
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,24,88,16,4,12
	.byte	'STM0DIS',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'STM1DIS',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'STM2DIS',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,4
	.word	311
	.byte	29,0,2,35,0,0,19
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,24,94,3
	.word	114058
	.byte	11
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,24,97,16,4,12
	.byte	'BAUD1DIV',0,1
	.word	508
	.byte	4,4,2,35,0,12
	.byte	'BAUD2DIV',0,1
	.word	508
	.byte	4,0,2,35,0,12
	.byte	'SRIDIV',0,1
	.word	508
	.byte	4,4,2,35,1,12
	.byte	'LPDIV',0,1
	.word	508
	.byte	4,0,2,35,1,12
	.byte	'SPBDIV',0,1
	.word	508
	.byte	4,4,2,35,2,12
	.byte	'FSI2DIV',0,1
	.word	508
	.byte	2,2,2,35,2,12
	.byte	'reserved_22',0,1
	.word	508
	.byte	2,0,2,35,2,12
	.byte	'FSIDIV',0,1
	.word	508
	.byte	2,6,2,35,3,12
	.byte	'reserved_26',0,1
	.word	508
	.byte	2,4,2,35,3,12
	.byte	'CLKSEL',0,1
	.word	508
	.byte	2,2,2,35,3,12
	.byte	'UP',0,1
	.word	508
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	508
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_CCUCON0_Bits',0,24,111,3
	.word	114194
	.byte	11
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,24,114,16,4,12
	.byte	'CANDIV',0,1
	.word	508
	.byte	4,4,2,35,0,12
	.byte	'ERAYDIV',0,1
	.word	508
	.byte	4,0,2,35,0,12
	.byte	'STMDIV',0,1
	.word	508
	.byte	4,4,2,35,1,12
	.byte	'GTMDIV',0,1
	.word	508
	.byte	4,0,2,35,1,12
	.byte	'ETHDIV',0,1
	.word	508
	.byte	4,4,2,35,2,12
	.byte	'ASCLINFDIV',0,1
	.word	508
	.byte	4,0,2,35,2,12
	.byte	'ASCLINSDIV',0,1
	.word	508
	.byte	4,4,2,35,3,12
	.byte	'INSEL',0,1
	.word	508
	.byte	2,2,2,35,3,12
	.byte	'UP',0,1
	.word	508
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	508
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_CCUCON1_Bits',0,24,126,3
	.word	114474
	.byte	11
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,24,129,1,16,4,12
	.byte	'BBBDIV',0,1
	.word	508
	.byte	4,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	311
	.byte	26,2,2,35,0,12
	.byte	'UP',0,1
	.word	508
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	508
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_CCUCON2_Bits',0,24,135,1,3
	.word	114712
	.byte	11
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,24,138,1,16,4,12
	.byte	'PLLDIV',0,1
	.word	508
	.byte	6,2,2,35,0,12
	.byte	'PLLSEL',0,1
	.word	508
	.byte	2,0,2,35,0,12
	.byte	'PLLERAYDIV',0,1
	.word	508
	.byte	6,2,2,35,1,12
	.byte	'PLLERAYSEL',0,1
	.word	508
	.byte	2,0,2,35,1,12
	.byte	'SRIDIV',0,1
	.word	508
	.byte	6,2,2,35,2,12
	.byte	'SRISEL',0,1
	.word	508
	.byte	2,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	508
	.byte	5,3,2,35,3,12
	.byte	'SLCK',0,1
	.word	508
	.byte	1,2,2,35,3,12
	.byte	'UP',0,1
	.word	508
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	508
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_CCUCON3_Bits',0,24,150,1,3
	.word	114840
	.byte	11
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,24,153,1,16,4,12
	.byte	'SPBDIV',0,1
	.word	508
	.byte	6,2,2,35,0,12
	.byte	'SPBSEL',0,1
	.word	508
	.byte	2,0,2,35,0,12
	.byte	'GTMDIV',0,1
	.word	508
	.byte	6,2,2,35,1,12
	.byte	'GTMSEL',0,1
	.word	508
	.byte	2,0,2,35,1,12
	.byte	'STMDIV',0,1
	.word	508
	.byte	6,2,2,35,2,12
	.byte	'STMSEL',0,1
	.word	508
	.byte	2,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	508
	.byte	5,3,2,35,3,12
	.byte	'SLCK',0,1
	.word	508
	.byte	1,2,2,35,3,12
	.byte	'UP',0,1
	.word	508
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	508
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_CCUCON4_Bits',0,24,165,1,3
	.word	115083
	.byte	11
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,24,168,1,16,4,12
	.byte	'MAXDIV',0,1
	.word	508
	.byte	4,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	311
	.byte	26,2,2,35,0,12
	.byte	'UP',0,1
	.word	508
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	508
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_CCUCON5_Bits',0,24,174,1,3
	.word	115318
	.byte	11
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,24,177,1,16,4,12
	.byte	'CPU0DIV',0,1
	.word	508
	.byte	6,2,2,35,0,12
	.byte	'reserved_6',0,4
	.word	311
	.byte	26,0,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON6_Bits',0,24,181,1,3
	.word	115446
	.byte	11
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,24,184,1,16,4,12
	.byte	'CPU1DIV',0,1
	.word	508
	.byte	6,2,2,35,0,12
	.byte	'reserved_6',0,4
	.word	311
	.byte	26,0,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON7_Bits',0,24,188,1,3
	.word	115546
	.byte	11
	.byte	'_Ifx_SCU_CHIPID_Bits',0,24,191,1,16,4,12
	.byte	'CHREV',0,1
	.word	508
	.byte	6,2,2,35,0,12
	.byte	'CHTEC',0,1
	.word	508
	.byte	2,0,2,35,0,12
	.byte	'CHID',0,1
	.word	508
	.byte	8,0,2,35,1,12
	.byte	'EEA',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'UCODE',0,1
	.word	508
	.byte	7,0,2,35,2,12
	.byte	'FSIZE',0,1
	.word	508
	.byte	4,4,2,35,3,12
	.byte	'SP',0,1
	.word	508
	.byte	2,2,2,35,3,12
	.byte	'SEC',0,1
	.word	508
	.byte	1,1,2,35,3,12
	.byte	'reserved_31',0,1
	.word	508
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_CHIPID_Bits',0,24,202,1,3
	.word	115646
	.byte	11
	.byte	'_Ifx_SCU_DTSCON_Bits',0,24,205,1,16,4,12
	.byte	'PWD',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'START',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	508
	.byte	2,4,2,35,0,12
	.byte	'CAL',0,4
	.word	311
	.byte	20,8,2,35,0,12
	.byte	'reserved_24',0,1
	.word	508
	.byte	7,1,2,35,3,12
	.byte	'SLCK',0,1
	.word	508
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_DTSCON_Bits',0,24,213,1,3
	.word	115854
	.byte	11
	.byte	'_Ifx_SCU_DTSLIM_Bits',0,24,216,1,16,4,12
	.byte	'LOWER',0,2
	.word	907
	.byte	10,6,2,35,0,12
	.byte	'reserved_10',0,1
	.word	508
	.byte	5,1,2,35,1,12
	.byte	'LLU',0,1
	.word	508
	.byte	1,0,2,35,1,12
	.byte	'UPPER',0,2
	.word	907
	.byte	10,6,2,35,2,12
	.byte	'reserved_26',0,1
	.word	508
	.byte	4,2,2,35,3,12
	.byte	'SLCK',0,1
	.word	508
	.byte	1,1,2,35,3,12
	.byte	'UOF',0,1
	.word	508
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_DTSLIM_Bits',0,24,225,1,3
	.word	116019
	.byte	11
	.byte	'_Ifx_SCU_DTSSTAT_Bits',0,24,228,1,16,4,12
	.byte	'RESULT',0,2
	.word	907
	.byte	10,6,2,35,0,12
	.byte	'reserved_10',0,1
	.word	508
	.byte	4,2,2,35,1,12
	.byte	'RDY',0,1
	.word	508
	.byte	1,1,2,35,1,12
	.byte	'BUSY',0,1
	.word	508
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	907
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_DTSSTAT_Bits',0,24,235,1,3
	.word	116202
	.byte	11
	.byte	'_Ifx_SCU_EICR_Bits',0,24,238,1,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	4,4,2,35,0,12
	.byte	'EXIS0',0,1
	.word	508
	.byte	3,1,2,35,0,12
	.byte	'reserved_7',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'FEN0',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'REN0',0,1
	.word	508
	.byte	1,6,2,35,1,12
	.byte	'LDEN0',0,1
	.word	508
	.byte	1,5,2,35,1,12
	.byte	'EIEN0',0,1
	.word	508
	.byte	1,4,2,35,1,12
	.byte	'INP0',0,1
	.word	508
	.byte	3,1,2,35,1,12
	.byte	'reserved_15',0,4
	.word	311
	.byte	5,12,2,35,0,12
	.byte	'EXIS1',0,1
	.word	508
	.byte	3,1,2,35,2,12
	.byte	'reserved_23',0,1
	.word	508
	.byte	1,0,2,35,2,12
	.byte	'FEN1',0,1
	.word	508
	.byte	1,7,2,35,3,12
	.byte	'REN1',0,1
	.word	508
	.byte	1,6,2,35,3,12
	.byte	'LDEN1',0,1
	.word	508
	.byte	1,5,2,35,3,12
	.byte	'EIEN1',0,1
	.word	508
	.byte	1,4,2,35,3,12
	.byte	'INP1',0,1
	.word	508
	.byte	3,1,2,35,3,12
	.byte	'reserved_31',0,1
	.word	508
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EICR_Bits',0,24,129,2,3
	.word	116356
	.byte	11
	.byte	'_Ifx_SCU_EIFR_Bits',0,24,132,2,16,4,12
	.byte	'INTF0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'INTF1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'INTF2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'INTF3',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'INTF4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'INTF5',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'INTF6',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'INTF7',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	311
	.byte	24,0,2,35,0,0,19
	.byte	'Ifx_SCU_EIFR_Bits',0,24,143,2,3
	.word	116720
	.byte	11
	.byte	'_Ifx_SCU_EMSR_Bits',0,24,146,2,16,4,12
	.byte	'POL',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'MODE',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'ENON',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'PSEL',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,2
	.word	907
	.byte	12,0,2,35,0,12
	.byte	'EMSF',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'SEMSF',0,1
	.word	508
	.byte	1,6,2,35,2,12
	.byte	'reserved_18',0,1
	.word	508
	.byte	6,0,2,35,2,12
	.byte	'EMSFM',0,1
	.word	508
	.byte	2,6,2,35,3,12
	.byte	'SEMSFM',0,1
	.word	508
	.byte	2,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	508
	.byte	4,0,2,35,3,0,19
	.byte	'Ifx_SCU_EMSR_Bits',0,24,159,2,3
	.word	116931
	.byte	11
	.byte	'_Ifx_SCU_ESRCFG_Bits',0,24,162,2,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	7,1,2,35,0,12
	.byte	'EDCON',0,2
	.word	907
	.byte	2,7,2,35,0,12
	.byte	'reserved_9',0,4
	.word	311
	.byte	23,0,2,35,0,0,19
	.byte	'Ifx_SCU_ESRCFG_Bits',0,24,167,2,3
	.word	117183
	.byte	11
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,24,170,2,16,4,12
	.byte	'ARI',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'ARC',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	311
	.byte	30,0,2,35,0,0,19
	.byte	'Ifx_SCU_ESROCFG_Bits',0,24,175,2,3
	.word	117301
	.byte	11
	.byte	'_Ifx_SCU_EVR13CON_Bits',0,24,178,2,16,4,12
	.byte	'reserved_0',0,4
	.word	311
	.byte	28,4,2,35,0,12
	.byte	'EVR13OFF',0,1
	.word	508
	.byte	1,3,2,35,3,12
	.byte	'BPEVR13OFF',0,1
	.word	508
	.byte	1,2,2,35,3,12
	.byte	'reserved_30',0,1
	.word	508
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	508
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVR13CON_Bits',0,24,185,2,3
	.word	117412
	.byte	11
	.byte	'_Ifx_SCU_EVR33CON_Bits',0,24,188,2,16,4,12
	.byte	'reserved_0',0,4
	.word	311
	.byte	28,4,2,35,0,12
	.byte	'EVR33OFF',0,1
	.word	508
	.byte	1,3,2,35,3,12
	.byte	'BPEVR33OFF',0,1
	.word	508
	.byte	1,2,2,35,3,12
	.byte	'reserved_30',0,1
	.word	508
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	508
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVR33CON_Bits',0,24,195,2,3
	.word	117575
	.byte	11
	.byte	'_Ifx_SCU_EVRADCSTAT_Bits',0,24,198,2,16,4,12
	.byte	'ADC13V',0,1
	.word	508
	.byte	8,0,2,35,0,12
	.byte	'ADC33V',0,1
	.word	508
	.byte	8,0,2,35,1,12
	.byte	'ADCSWDV',0,1
	.word	508
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	508
	.byte	7,1,2,35,3,12
	.byte	'VAL',0,1
	.word	508
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRADCSTAT_Bits',0,24,205,2,3
	.word	117738
	.byte	11
	.byte	'_Ifx_SCU_EVRDVSTAT_Bits',0,24,208,2,16,4,12
	.byte	'DVS13TRIM',0,1
	.word	508
	.byte	8,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	508
	.byte	8,0,2,35,1,12
	.byte	'DVS33TRIM',0,1
	.word	508
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	508
	.byte	7,1,2,35,3,12
	.byte	'VAL',0,1
	.word	508
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRDVSTAT_Bits',0,24,215,2,3
	.word	117896
	.byte	11
	.byte	'_Ifx_SCU_EVRMONCTRL_Bits',0,24,218,2,16,4,12
	.byte	'EVR13OVMOD',0,1
	.word	508
	.byte	2,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	508
	.byte	2,4,2,35,0,12
	.byte	'EVR13UVMOD',0,1
	.word	508
	.byte	2,2,2,35,0,12
	.byte	'reserved_6',0,1
	.word	508
	.byte	2,0,2,35,0,12
	.byte	'EVR33OVMOD',0,1
	.word	508
	.byte	2,6,2,35,1,12
	.byte	'reserved_10',0,1
	.word	508
	.byte	2,4,2,35,1,12
	.byte	'EVR33UVMOD',0,1
	.word	508
	.byte	2,2,2,35,1,12
	.byte	'reserved_14',0,1
	.word	508
	.byte	2,0,2,35,1,12
	.byte	'SWDOVMOD',0,1
	.word	508
	.byte	2,6,2,35,2,12
	.byte	'reserved_18',0,1
	.word	508
	.byte	2,4,2,35,2,12
	.byte	'SWDUVMOD',0,1
	.word	508
	.byte	2,2,2,35,2,12
	.byte	'reserved_22',0,2
	.word	907
	.byte	10,0,2,35,2,0,19
	.byte	'Ifx_SCU_EVRMONCTRL_Bits',0,24,232,2,3
	.word	118061
	.byte	11
	.byte	'_Ifx_SCU_EVROSCCTRL_Bits',0,24,235,2,16,4,12
	.byte	'OSCTRIM',0,2
	.word	907
	.byte	10,6,2,35,0,12
	.byte	'OSCPTAT',0,1
	.word	508
	.byte	6,0,2,35,1,12
	.byte	'OSCANASEL',0,1
	.word	508
	.byte	4,4,2,35,2,12
	.byte	'HPBGTRIM',0,2
	.word	907
	.byte	7,5,2,35,2,12
	.byte	'HPBGCLKEN',0,1
	.word	508
	.byte	1,4,2,35,3,12
	.byte	'OSC3V3',0,1
	.word	508
	.byte	1,3,2,35,3,12
	.byte	'reserved_29',0,1
	.word	508
	.byte	2,1,2,35,3,12
	.byte	'LCK',0,1
	.word	508
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVROSCCTRL_Bits',0,24,245,2,3
	.word	118390
	.byte	11
	.byte	'_Ifx_SCU_EVROVMON_Bits',0,24,248,2,16,4,12
	.byte	'EVR13OVVAL',0,1
	.word	508
	.byte	8,0,2,35,0,12
	.byte	'EVR33OVVAL',0,1
	.word	508
	.byte	8,0,2,35,1,12
	.byte	'SWDOVVAL',0,1
	.word	508
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	508
	.byte	7,1,2,35,3,12
	.byte	'LCK',0,1
	.word	508
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVROVMON_Bits',0,24,255,2,3
	.word	118611
	.byte	11
	.byte	'_Ifx_SCU_EVRRSTCON_Bits',0,24,130,3,16,4,12
	.byte	'RST13TRIM',0,1
	.word	508
	.byte	8,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	311
	.byte	16,8,2,35,0,12
	.byte	'RST13OFF',0,1
	.word	508
	.byte	1,7,2,35,3,12
	.byte	'BPRST13OFF',0,1
	.word	508
	.byte	1,6,2,35,3,12
	.byte	'RST33OFF',0,1
	.word	508
	.byte	1,5,2,35,3,12
	.byte	'BPRST33OFF',0,1
	.word	508
	.byte	1,4,2,35,3,12
	.byte	'RSTSWDOFF',0,1
	.word	508
	.byte	1,3,2,35,3,12
	.byte	'BPRSTSWDOFF',0,1
	.word	508
	.byte	1,2,2,35,3,12
	.byte	'reserved_30',0,1
	.word	508
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	508
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRRSTCON_Bits',0,24,142,3,3
	.word	118774
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCOEFF1_Bits',0,24,145,3,16,4,12
	.byte	'SD5P',0,1
	.word	508
	.byte	8,0,2,35,0,12
	.byte	'SD5I',0,1
	.word	508
	.byte	8,0,2,35,1,12
	.byte	'SD5D',0,1
	.word	508
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	508
	.byte	7,1,2,35,3,12
	.byte	'LCK',0,1
	.word	508
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRSDCOEFF1_Bits',0,24,152,3,3
	.word	119046
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCOEFF2_Bits',0,24,155,3,16,4,12
	.byte	'SD33P',0,1
	.word	508
	.byte	8,0,2,35,0,12
	.byte	'SD33I',0,1
	.word	508
	.byte	8,0,2,35,1,12
	.byte	'SD33D',0,1
	.word	508
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	508
	.byte	7,1,2,35,3,12
	.byte	'LCK',0,1
	.word	508
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRSDCOEFF2_Bits',0,24,162,3,3
	.word	119199
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCOEFF3_Bits',0,24,165,3,16,4,12
	.byte	'CT5REG0',0,1
	.word	508
	.byte	8,0,2,35,0,12
	.byte	'CT5REG1',0,1
	.word	508
	.byte	8,0,2,35,1,12
	.byte	'CT5REG2',0,1
	.word	508
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	508
	.byte	7,1,2,35,3,12
	.byte	'LCK',0,1
	.word	508
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRSDCOEFF3_Bits',0,24,172,3,3
	.word	119355
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCOEFF4_Bits',0,24,175,3,16,4,12
	.byte	'CT5REG3',0,1
	.word	508
	.byte	8,0,2,35,0,12
	.byte	'CT5REG4',0,1
	.word	508
	.byte	8,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	907
	.byte	15,1,2,35,2,12
	.byte	'LCK',0,1
	.word	508
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRSDCOEFF4_Bits',0,24,181,3,3
	.word	119517
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCOEFF5_Bits',0,24,184,3,16,4,12
	.byte	'CT33REG0',0,1
	.word	508
	.byte	8,0,2,35,0,12
	.byte	'CT33REG1',0,1
	.word	508
	.byte	8,0,2,35,1,12
	.byte	'CT33REG2',0,1
	.word	508
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	508
	.byte	7,1,2,35,3,12
	.byte	'LCK',0,1
	.word	508
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRSDCOEFF5_Bits',0,24,191,3,3
	.word	119660
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCOEFF6_Bits',0,24,194,3,16,4,12
	.byte	'CT33REG3',0,1
	.word	508
	.byte	8,0,2,35,0,12
	.byte	'CT33REG4',0,1
	.word	508
	.byte	8,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	907
	.byte	15,1,2,35,2,12
	.byte	'LCK',0,1
	.word	508
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRSDCOEFF6_Bits',0,24,200,3,3
	.word	119825
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCTRL1_Bits',0,24,203,3,16,4,12
	.byte	'SDFREQSPRD',0,2
	.word	907
	.byte	16,0,2,35,0,12
	.byte	'SDFREQ',0,1
	.word	508
	.byte	8,0,2,35,2,12
	.byte	'SDSTEP',0,1
	.word	508
	.byte	4,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	508
	.byte	2,2,2,35,3,12
	.byte	'SDSAMPLE',0,1
	.word	508
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	508
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRSDCTRL1_Bits',0,24,211,3,3
	.word	119970
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCTRL2_Bits',0,24,214,3,16,4,12
	.byte	'DRVP',0,1
	.word	508
	.byte	8,0,2,35,0,12
	.byte	'SDMINMAXDC',0,1
	.word	508
	.byte	8,0,2,35,1,12
	.byte	'DRVN',0,1
	.word	508
	.byte	8,0,2,35,2,12
	.byte	'SDLUT',0,1
	.word	508
	.byte	6,2,2,35,3,12
	.byte	'reserved_30',0,1
	.word	508
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	508
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRSDCTRL2_Bits',0,24,222,3,3
	.word	120151
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCTRL3_Bits',0,24,225,3,16,4,12
	.byte	'SDPWMPRE',0,1
	.word	508
	.byte	8,0,2,35,0,12
	.byte	'SDPID',0,1
	.word	508
	.byte	8,0,2,35,1,12
	.byte	'SDVOKLVL',0,1
	.word	508
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	508
	.byte	7,1,2,35,3,12
	.byte	'LCK',0,1
	.word	508
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRSDCTRL3_Bits',0,24,232,3,3
	.word	120325
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCTRL4_Bits',0,24,235,3,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	8,0,2,35,0,12
	.byte	'SYNCDIV',0,1
	.word	508
	.byte	3,5,2,35,1,12
	.byte	'reserved_11',0,4
	.word	311
	.byte	20,1,2,35,0,12
	.byte	'LCK',0,1
	.word	508
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRSDCTRL4_Bits',0,24,241,3,3
	.word	120485
	.byte	11
	.byte	'_Ifx_SCU_EVRSTAT_Bits',0,24,244,3,16,4,12
	.byte	'EVR13',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'OV13',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'EVR33',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'OV33',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'OVSWD',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'UV13',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'UV33',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'UVSWD',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'EXTPASS13',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'EXTPASS33',0,1
	.word	508
	.byte	1,6,2,35,1,12
	.byte	'BGPROK',0,1
	.word	508
	.byte	1,5,2,35,1,12
	.byte	'reserved_11',0,4
	.word	311
	.byte	21,0,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSTAT_Bits',0,24,130,4,3
	.word	120629
	.byte	11
	.byte	'_Ifx_SCU_EVRTRIM_Bits',0,24,133,4,16,4,12
	.byte	'EVR13TRIM',0,1
	.word	508
	.byte	8,0,2,35,0,12
	.byte	'SDVOUTSEL',0,1
	.word	508
	.byte	8,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	907
	.byte	15,1,2,35,2,12
	.byte	'LCK',0,1
	.word	508
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRTRIM_Bits',0,24,139,4,3
	.word	120903
	.byte	11
	.byte	'_Ifx_SCU_EVRUVMON_Bits',0,24,142,4,16,4,12
	.byte	'EVR13UVVAL',0,1
	.word	508
	.byte	8,0,2,35,0,12
	.byte	'EVR33UVVAL',0,1
	.word	508
	.byte	8,0,2,35,1,12
	.byte	'SWDUVVAL',0,1
	.word	508
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	508
	.byte	7,1,2,35,3,12
	.byte	'LCK',0,1
	.word	508
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRUVMON_Bits',0,24,149,4,3
	.word	121042
	.byte	11
	.byte	'_Ifx_SCU_EXTCON_Bits',0,24,152,4,16,4,12
	.byte	'EN0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'SEL0',0,1
	.word	508
	.byte	4,2,2,35,0,12
	.byte	'reserved_6',0,2
	.word	907
	.byte	10,0,2,35,0,12
	.byte	'EN1',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'NSEL',0,1
	.word	508
	.byte	1,6,2,35,2,12
	.byte	'SEL1',0,1
	.word	508
	.byte	4,2,2,35,2,12
	.byte	'reserved_22',0,1
	.word	508
	.byte	2,0,2,35,2,12
	.byte	'DIV1',0,1
	.word	508
	.byte	8,0,2,35,3,0,19
	.byte	'Ifx_SCU_EXTCON_Bits',0,24,163,4,3
	.word	121205
	.byte	11
	.byte	'_Ifx_SCU_FDR_Bits',0,24,166,4,16,4,12
	.byte	'STEP',0,2
	.word	907
	.byte	10,6,2,35,0,12
	.byte	'reserved_10',0,1
	.word	508
	.byte	4,2,2,35,1,12
	.byte	'DM',0,1
	.word	508
	.byte	2,0,2,35,1,12
	.byte	'RESULT',0,2
	.word	907
	.byte	10,6,2,35,2,12
	.byte	'reserved_26',0,1
	.word	508
	.byte	5,1,2,35,3,12
	.byte	'DISCLK',0,1
	.word	508
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_FDR_Bits',0,24,174,4,3
	.word	121423
	.byte	11
	.byte	'_Ifx_SCU_FMR_Bits',0,24,177,4,16,4,12
	.byte	'FS0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'FS1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'FS2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'FS3',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'FS4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'FS5',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'FS6',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'FS7',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	508
	.byte	8,0,2,35,1,12
	.byte	'FC0',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'FC1',0,1
	.word	508
	.byte	1,6,2,35,2,12
	.byte	'FC2',0,1
	.word	508
	.byte	1,5,2,35,2,12
	.byte	'FC3',0,1
	.word	508
	.byte	1,4,2,35,2,12
	.byte	'FC4',0,1
	.word	508
	.byte	1,3,2,35,2,12
	.byte	'FC5',0,1
	.word	508
	.byte	1,2,2,35,2,12
	.byte	'FC6',0,1
	.word	508
	.byte	1,1,2,35,2,12
	.byte	'FC7',0,1
	.word	508
	.byte	1,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	508
	.byte	8,0,2,35,3,0,19
	.byte	'Ifx_SCU_FMR_Bits',0,24,197,4,3
	.word	121586
	.byte	11
	.byte	'_Ifx_SCU_ID_Bits',0,24,200,4,16,4,12
	.byte	'MODREV',0,1
	.word	508
	.byte	8,0,2,35,0,12
	.byte	'MODTYPE',0,1
	.word	508
	.byte	8,0,2,35,1,12
	.byte	'MODNUMBER',0,2
	.word	907
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_ID_Bits',0,24,205,4,3
	.word	121922
	.byte	11
	.byte	'_Ifx_SCU_IGCR_Bits',0,24,208,4,16,4,12
	.byte	'IPEN00',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'IPEN01',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'IPEN02',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'IPEN03',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'IPEN04',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'IPEN05',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'IPEN06',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'IPEN07',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	508
	.byte	5,3,2,35,1,12
	.byte	'GEEN0',0,1
	.word	508
	.byte	1,2,2,35,1,12
	.byte	'IGP0',0,1
	.word	508
	.byte	2,0,2,35,1,12
	.byte	'IPEN10',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'IPEN11',0,1
	.word	508
	.byte	1,6,2,35,2,12
	.byte	'IPEN12',0,1
	.word	508
	.byte	1,5,2,35,2,12
	.byte	'IPEN13',0,1
	.word	508
	.byte	1,4,2,35,2,12
	.byte	'IPEN14',0,1
	.word	508
	.byte	1,3,2,35,2,12
	.byte	'IPEN15',0,1
	.word	508
	.byte	1,2,2,35,2,12
	.byte	'IPEN16',0,1
	.word	508
	.byte	1,1,2,35,2,12
	.byte	'IPEN17',0,1
	.word	508
	.byte	1,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	508
	.byte	5,3,2,35,3,12
	.byte	'GEEN1',0,1
	.word	508
	.byte	1,2,2,35,3,12
	.byte	'IGP1',0,1
	.word	508
	.byte	2,0,2,35,3,0,19
	.byte	'Ifx_SCU_IGCR_Bits',0,24,232,4,3
	.word	122029
	.byte	11
	.byte	'_Ifx_SCU_IN_Bits',0,24,235,4,16,4,12
	.byte	'P0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'P1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	311
	.byte	30,0,2,35,0,0,19
	.byte	'Ifx_SCU_IN_Bits',0,24,240,4,3
	.word	122481
	.byte	11
	.byte	'_Ifx_SCU_IOCR_Bits',0,24,243,4,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	4,4,2,35,0,12
	.byte	'PC0',0,1
	.word	508
	.byte	4,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	508
	.byte	4,4,2,35,1,12
	.byte	'PC1',0,1
	.word	508
	.byte	4,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	907
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_IOCR_Bits',0,24,250,4,3
	.word	122580
	.byte	11
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,24,253,4,16,4,12
	.byte	'LBISTREQ',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'LBISTREQP',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'PATTERNS',0,2
	.word	907
	.byte	14,0,2,35,0,12
	.byte	'reserved_16',0,2
	.word	907
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,24,131,5,3
	.word	122730
	.byte	11
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,24,134,5,16,4,12
	.byte	'SEED',0,4
	.word	311
	.byte	23,9,2,35,0,12
	.byte	'reserved_23',0,1
	.word	508
	.byte	1,0,2,35,2,12
	.byte	'SPLITSH',0,1
	.word	508
	.byte	3,5,2,35,3,12
	.byte	'BODY',0,1
	.word	508
	.byte	1,4,2,35,3,12
	.byte	'LBISTFREQU',0,1
	.word	508
	.byte	4,0,2,35,3,0,19
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,24,141,5,3
	.word	122879
	.byte	11
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,24,144,5,16,4,12
	.byte	'SIGNATURE',0,4
	.word	311
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,1
	.word	508
	.byte	7,1,2,35,3,12
	.byte	'LBISTDONE',0,1
	.word	508
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,24,149,5,3
	.word	123040
	.byte	11
	.byte	'_Ifx_SCU_LCLCON_Bits',0,24,152,5,16,4,12
	.byte	'reserved_0',0,2
	.word	907
	.byte	16,0,2,35,0,12
	.byte	'LS',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'reserved_17',0,2
	.word	907
	.byte	14,1,2,35,2,12
	.byte	'LSEN',0,1
	.word	508
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_LCLCON_Bits',0,24,158,5,3
	.word	123170
	.byte	11
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,24,161,5,16,4,12
	.byte	'LCLT0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'LCLT1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	311
	.byte	30,0,2,35,0,0,19
	.byte	'Ifx_SCU_LCLTEST_Bits',0,24,166,5,3
	.word	123302
	.byte	11
	.byte	'_Ifx_SCU_MANID_Bits',0,24,169,5,16,4,12
	.byte	'DEPT',0,1
	.word	508
	.byte	5,3,2,35,0,12
	.byte	'MANUF',0,2
	.word	907
	.byte	11,0,2,35,0,12
	.byte	'reserved_16',0,2
	.word	907
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_MANID_Bits',0,24,174,5,3
	.word	123417
	.byte	11
	.byte	'_Ifx_SCU_OMR_Bits',0,24,177,5,16,4,12
	.byte	'PS0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'PS1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,2
	.word	907
	.byte	14,0,2,35,0,12
	.byte	'PCL0',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'PCL1',0,1
	.word	508
	.byte	1,6,2,35,2,12
	.byte	'reserved_18',0,2
	.word	907
	.byte	14,0,2,35,2,0,19
	.byte	'Ifx_SCU_OMR_Bits',0,24,185,5,3
	.word	123528
	.byte	11
	.byte	'_Ifx_SCU_OSCCON_Bits',0,24,188,5,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'PLLLV',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'OSCRES',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'GAINSEL',0,1
	.word	508
	.byte	2,3,2,35,0,12
	.byte	'MODE',0,1
	.word	508
	.byte	2,1,2,35,0,12
	.byte	'SHBY',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'PLLHV',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'reserved_9',0,1
	.word	508
	.byte	1,6,2,35,1,12
	.byte	'X1D',0,1
	.word	508
	.byte	1,5,2,35,1,12
	.byte	'X1DEN',0,1
	.word	508
	.byte	1,4,2,35,1,12
	.byte	'reserved_12',0,1
	.word	508
	.byte	4,0,2,35,1,12
	.byte	'OSCVAL',0,1
	.word	508
	.byte	5,3,2,35,2,12
	.byte	'reserved_21',0,1
	.word	508
	.byte	2,1,2,35,2,12
	.byte	'APREN',0,1
	.word	508
	.byte	1,0,2,35,2,12
	.byte	'CAP0EN',0,1
	.word	508
	.byte	1,7,2,35,3,12
	.byte	'CAP1EN',0,1
	.word	508
	.byte	1,6,2,35,3,12
	.byte	'CAP2EN',0,1
	.word	508
	.byte	1,5,2,35,3,12
	.byte	'CAP3EN',0,1
	.word	508
	.byte	1,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	508
	.byte	4,0,2,35,3,0,19
	.byte	'Ifx_SCU_OSCCON_Bits',0,24,209,5,3
	.word	123686
	.byte	11
	.byte	'_Ifx_SCU_OUT_Bits',0,24,212,5,16,4,12
	.byte	'P0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'P1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	311
	.byte	30,0,2,35,0,0,19
	.byte	'Ifx_SCU_OUT_Bits',0,24,217,5,3
	.word	124098
	.byte	11
	.byte	'_Ifx_SCU_OVCCON_Bits',0,24,220,5,16,4,12
	.byte	'CSEL0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'CSEL1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'CSEL2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,2
	.word	907
	.byte	13,0,2,35,0,12
	.byte	'OVSTRT',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'OVSTP',0,1
	.word	508
	.byte	1,6,2,35,2,12
	.byte	'DCINVAL',0,1
	.word	508
	.byte	1,5,2,35,2,12
	.byte	'reserved_19',0,1
	.word	508
	.byte	5,0,2,35,2,12
	.byte	'OVCONF',0,1
	.word	508
	.byte	1,7,2,35,3,12
	.byte	'POVCONF',0,1
	.word	508
	.byte	1,6,2,35,3,12
	.byte	'reserved_26',0,1
	.word	508
	.byte	6,0,2,35,3,0,19
	.byte	'Ifx_SCU_OVCCON_Bits',0,24,233,5,3
	.word	124199
	.byte	11
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,24,236,5,16,4,12
	.byte	'OVEN0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'OVEN1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'OVEN2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,4
	.word	311
	.byte	29,0,2,35,0,0,19
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,24,242,5,3
	.word	124466
	.byte	11
	.byte	'_Ifx_SCU_PDISC_Bits',0,24,245,5,16,4,12
	.byte	'PDIS0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'PDIS1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	311
	.byte	30,0,2,35,0,0,19
	.byte	'Ifx_SCU_PDISC_Bits',0,24,250,5,3
	.word	124602
	.byte	11
	.byte	'_Ifx_SCU_PDR_Bits',0,24,253,5,16,4,12
	.byte	'PD0',0,1
	.word	508
	.byte	3,5,2,35,0,12
	.byte	'PL0',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'PD1',0,1
	.word	508
	.byte	3,1,2,35,0,12
	.byte	'PL1',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	311
	.byte	24,0,2,35,0,0,19
	.byte	'Ifx_SCU_PDR_Bits',0,24,132,6,3
	.word	124713
	.byte	11
	.byte	'_Ifx_SCU_PDRR_Bits',0,24,135,6,16,4,12
	.byte	'PDR0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'PDR1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'PDR2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'PDR3',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'PDR4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'PDR5',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'PDR6',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'PDR7',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	311
	.byte	24,0,2,35,0,0,19
	.byte	'Ifx_SCU_PDRR_Bits',0,24,146,6,3
	.word	124846
	.byte	11
	.byte	'_Ifx_SCU_PLLCON0_Bits',0,24,149,6,16,4,12
	.byte	'VCOBYP',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'VCOPWD',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'MODEN',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'SETFINDIS',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'CLRFINDIS',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'OSCDISCDIS',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'reserved_7',0,2
	.word	907
	.byte	2,7,2,35,0,12
	.byte	'NDIV',0,1
	.word	508
	.byte	7,0,2,35,1,12
	.byte	'PLLPWD',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'reserved_17',0,1
	.word	508
	.byte	1,6,2,35,2,12
	.byte	'RESLD',0,1
	.word	508
	.byte	1,5,2,35,2,12
	.byte	'reserved_19',0,1
	.word	508
	.byte	5,0,2,35,2,12
	.byte	'PDIV',0,1
	.word	508
	.byte	4,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	508
	.byte	4,0,2,35,3,0,19
	.byte	'Ifx_SCU_PLLCON0_Bits',0,24,166,6,3
	.word	125049
	.byte	11
	.byte	'_Ifx_SCU_PLLCON1_Bits',0,24,169,6,16,4,12
	.byte	'K2DIV',0,1
	.word	508
	.byte	7,1,2,35,0,12
	.byte	'reserved_7',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'K3DIV',0,1
	.word	508
	.byte	7,1,2,35,1,12
	.byte	'reserved_15',0,1
	.word	508
	.byte	1,0,2,35,1,12
	.byte	'K1DIV',0,1
	.word	508
	.byte	7,1,2,35,2,12
	.byte	'reserved_23',0,2
	.word	907
	.byte	9,0,2,35,2,0,19
	.byte	'Ifx_SCU_PLLCON1_Bits',0,24,177,6,3
	.word	125405
	.byte	11
	.byte	'_Ifx_SCU_PLLCON2_Bits',0,24,180,6,16,4,12
	.byte	'MODCFG',0,2
	.word	907
	.byte	16,0,2,35,0,12
	.byte	'reserved_16',0,2
	.word	907
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_PLLCON2_Bits',0,24,184,6,3
	.word	125583
	.byte	11
	.byte	'_Ifx_SCU_PLLERAYCON0_Bits',0,24,187,6,16,4,12
	.byte	'VCOBYP',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'VCOPWD',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	508
	.byte	2,4,2,35,0,12
	.byte	'SETFINDIS',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'CLRFINDIS',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'OSCDISCDIS',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'reserved_7',0,2
	.word	907
	.byte	2,7,2,35,0,12
	.byte	'NDIV',0,1
	.word	508
	.byte	5,2,2,35,1,12
	.byte	'reserved_14',0,1
	.word	508
	.byte	2,0,2,35,1,12
	.byte	'PLLPWD',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'reserved_17',0,1
	.word	508
	.byte	1,6,2,35,2,12
	.byte	'RESLD',0,1
	.word	508
	.byte	1,5,2,35,2,12
	.byte	'reserved_19',0,1
	.word	508
	.byte	5,0,2,35,2,12
	.byte	'PDIV',0,1
	.word	508
	.byte	4,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	508
	.byte	4,0,2,35,3,0,19
	.byte	'Ifx_SCU_PLLERAYCON0_Bits',0,24,204,6,3
	.word	125683
	.byte	11
	.byte	'_Ifx_SCU_PLLERAYCON1_Bits',0,24,207,6,16,4,12
	.byte	'K2DIV',0,1
	.word	508
	.byte	7,1,2,35,0,12
	.byte	'reserved_7',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'K3DIV',0,1
	.word	508
	.byte	4,4,2,35,1,12
	.byte	'reserved_12',0,1
	.word	508
	.byte	4,0,2,35,1,12
	.byte	'K1DIV',0,1
	.word	508
	.byte	7,1,2,35,2,12
	.byte	'reserved_23',0,2
	.word	907
	.byte	9,0,2,35,2,0,19
	.byte	'Ifx_SCU_PLLERAYCON1_Bits',0,24,215,6,3
	.word	126053
	.byte	11
	.byte	'_Ifx_SCU_PLLERAYSTAT_Bits',0,24,218,6,16,4,12
	.byte	'VCOBYST',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'PWDSTAT',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'VCOLOCK',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'FINDIS',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'K1RDY',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'K2RDY',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'reserved_6',0,4
	.word	311
	.byte	26,0,2,35,0,0,19
	.byte	'Ifx_SCU_PLLERAYSTAT_Bits',0,24,227,6,3
	.word	126239
	.byte	11
	.byte	'_Ifx_SCU_PLLSTAT_Bits',0,24,230,6,16,4,12
	.byte	'VCOBYST',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'VCOLOCK',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'FINDIS',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'K1RDY',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'K2RDY',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'reserved_6',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'MODRUN',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	311
	.byte	24,0,2,35,0,0,19
	.byte	'Ifx_SCU_PLLSTAT_Bits',0,24,241,6,3
	.word	126437
	.byte	11
	.byte	'_Ifx_SCU_PMCSR_Bits',0,24,244,6,16,4,12
	.byte	'REQSLP',0,1
	.word	508
	.byte	2,6,2,35,0,12
	.byte	'SMUSLP',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,1
	.word	508
	.byte	5,0,2,35,0,12
	.byte	'PMST',0,1
	.word	508
	.byte	3,5,2,35,1,12
	.byte	'reserved_11',0,4
	.word	311
	.byte	21,0,2,35,0,0,19
	.byte	'Ifx_SCU_PMCSR_Bits',0,24,251,6,3
	.word	126670
	.byte	11
	.byte	'_Ifx_SCU_PMSWCR0_Bits',0,24,254,6,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'ESR1WKEN',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'PINAWKEN',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'PINBWKEN',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'ESR0DFEN',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'ESR0EDCON',0,1
	.word	508
	.byte	2,1,2,35,0,12
	.byte	'ESR1DFEN',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'ESR1EDCON',0,1
	.word	508
	.byte	2,6,2,35,1,12
	.byte	'PINADFEN',0,1
	.word	508
	.byte	1,5,2,35,1,12
	.byte	'PINAEDCON',0,1
	.word	508
	.byte	2,3,2,35,1,12
	.byte	'PINBDFEN',0,1
	.word	508
	.byte	1,2,2,35,1,12
	.byte	'PINBEDCON',0,1
	.word	508
	.byte	2,0,2,35,1,12
	.byte	'SCREN',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'STBYRAMSEL',0,1
	.word	508
	.byte	2,5,2,35,2,12
	.byte	'SCRCLKSEL',0,1
	.word	508
	.byte	1,4,2,35,2,12
	.byte	'SCRWKEN',0,1
	.word	508
	.byte	1,3,2,35,2,12
	.byte	'TRISTEN',0,1
	.word	508
	.byte	1,2,2,35,2,12
	.byte	'TRISTREQ',0,1
	.word	508
	.byte	1,1,2,35,2,12
	.byte	'PORSTDF',0,1
	.word	508
	.byte	1,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	508
	.byte	1,7,2,35,3,12
	.byte	'DCDCSYNC',0,1
	.word	508
	.byte	1,6,2,35,3,12
	.byte	'reserved_26',0,1
	.word	508
	.byte	3,3,2,35,3,12
	.byte	'ESR0TRIST',0,1
	.word	508
	.byte	1,2,2,35,3,12
	.byte	'reserved_30',0,1
	.word	508
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	508
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_PMSWCR0_Bits',0,24,153,7,3
	.word	126822
	.byte	11
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,24,156,7,16,4,12
	.byte	'SCRSTEN',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'SCRSTREQ',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	508
	.byte	6,0,2,35,0,12
	.byte	'CPUIDLSEL',0,1
	.word	508
	.byte	3,5,2,35,1,12
	.byte	'reserved_11',0,1
	.word	508
	.byte	1,4,2,35,1,12
	.byte	'IRADIS',0,1
	.word	508
	.byte	1,3,2,35,1,12
	.byte	'reserved_13',0,1
	.word	508
	.byte	3,0,2,35,1,12
	.byte	'SCRCFG',0,1
	.word	508
	.byte	8,0,2,35,2,12
	.byte	'CPUSEL',0,1
	.word	508
	.byte	3,5,2,35,3,12
	.byte	'STBYEVEN',0,1
	.word	508
	.byte	1,4,2,35,3,12
	.byte	'STBYEV',0,1
	.word	508
	.byte	3,1,2,35,3,12
	.byte	'LCK',0,1
	.word	508
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,24,170,7,3
	.word	127389
	.byte	11
	.byte	'_Ifx_SCU_PMSWCR2_Bits',0,24,173,7,16,4,12
	.byte	'SCRINT',0,1
	.word	508
	.byte	8,0,2,35,0,12
	.byte	'BUSY',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'SCRECC',0,1
	.word	508
	.byte	1,6,2,35,1,12
	.byte	'SCRWDT',0,1
	.word	508
	.byte	1,5,2,35,1,12
	.byte	'SCRRST',0,1
	.word	508
	.byte	1,4,2,35,1,12
	.byte	'reserved_12',0,1
	.word	508
	.byte	4,0,2,35,1,12
	.byte	'TCINT',0,1
	.word	508
	.byte	8,0,2,35,2,12
	.byte	'TCINTREQ',0,1
	.word	508
	.byte	1,7,2,35,3,12
	.byte	'SMURST',0,1
	.word	508
	.byte	1,6,2,35,3,12
	.byte	'RST',0,1
	.word	508
	.byte	1,5,2,35,3,12
	.byte	'reserved_27',0,1
	.word	508
	.byte	4,1,2,35,3,12
	.byte	'LCK',0,1
	.word	508
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_PMSWCR2_Bits',0,24,187,7,3
	.word	127683
	.byte	11
	.byte	'_Ifx_SCU_PMSWSTAT_Bits',0,24,190,7,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	2,6,2,35,0,12
	.byte	'ESR1WKP',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'ESR1OVRUN',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'PINAWKP',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'PINAOVRUN',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'PINBWKP',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'PINBOVRUN',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'PORSTDF',0,1
	.word	508
	.byte	1,6,2,35,1,12
	.byte	'HWCFGEVR',0,1
	.word	508
	.byte	3,3,2,35,1,12
	.byte	'STBYRAM',0,1
	.word	508
	.byte	2,1,2,35,1,12
	.byte	'TRIST',0,1
	.word	508
	.byte	1,0,2,35,1,12
	.byte	'SCRST',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'SCRWKP',0,1
	.word	508
	.byte	1,6,2,35,2,12
	.byte	'SCR',0,1
	.word	508
	.byte	1,5,2,35,2,12
	.byte	'SCRWKEN',0,1
	.word	508
	.byte	1,4,2,35,2,12
	.byte	'ESR1WKEN',0,1
	.word	508
	.byte	1,3,2,35,2,12
	.byte	'PINAWKEN',0,1
	.word	508
	.byte	1,2,2,35,2,12
	.byte	'PINBWKEN',0,1
	.word	508
	.byte	1,1,2,35,2,12
	.byte	'reserved_23',0,2
	.word	907
	.byte	4,5,2,35,2,12
	.byte	'ESR0TRIST',0,1
	.word	508
	.byte	1,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	508
	.byte	4,0,2,35,3,0,19
	.byte	'Ifx_SCU_PMSWSTAT_Bits',0,24,214,7,3
	.word	127961
	.byte	11
	.byte	'_Ifx_SCU_PMSWSTATCLR_Bits',0,24,217,7,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	2,6,2,35,0,12
	.byte	'ESR1WKPCLR',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'ESR1OVRUNCLR',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'PINAWKPCLR',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'PINAOVRUNCLR',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'PINBWKPCLR',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'PINBOVRUNCLR',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	508
	.byte	8,0,2,35,1,12
	.byte	'SCRSTCLR',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'SCRWKPCLR',0,1
	.word	508
	.byte	1,6,2,35,2,12
	.byte	'reserved_18',0,2
	.word	907
	.byte	14,0,2,35,2,0,19
	.byte	'Ifx_SCU_PMSWSTATCLR_Bits',0,24,230,7,3
	.word	128457
	.byte	11
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,24,233,7,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'CLRC',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,2
	.word	907
	.byte	10,4,2,35,0,12
	.byte	'CSS0',0,1
	.word	508
	.byte	1,3,2,35,1,12
	.byte	'CSS1',0,1
	.word	508
	.byte	1,2,2,35,1,12
	.byte	'CSS2',0,1
	.word	508
	.byte	1,1,2,35,1,12
	.byte	'reserved_15',0,1
	.word	508
	.byte	1,0,2,35,1,12
	.byte	'USRINFO',0,2
	.word	907
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_RSTCON2_Bits',0,24,243,7,3
	.word	128770
	.byte	11
	.byte	'_Ifx_SCU_RSTCON_Bits',0,24,246,7,16,4,12
	.byte	'ESR0',0,1
	.word	508
	.byte	2,6,2,35,0,12
	.byte	'ESR1',0,1
	.word	508
	.byte	2,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	508
	.byte	2,2,2,35,0,12
	.byte	'SMU',0,1
	.word	508
	.byte	2,0,2,35,0,12
	.byte	'SW',0,1
	.word	508
	.byte	2,6,2,35,1,12
	.byte	'STM0',0,1
	.word	508
	.byte	2,4,2,35,1,12
	.byte	'STM1',0,1
	.word	508
	.byte	2,2,2,35,1,12
	.byte	'STM2',0,1
	.word	508
	.byte	2,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	907
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_RSTCON_Bits',0,24,129,8,3
	.word	128979
	.byte	11
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,24,132,8,16,4,12
	.byte	'ESR0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'ESR1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'SMU',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'SW',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'STM0',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'STM1',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'STM2',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	508
	.byte	8,0,2,35,1,12
	.byte	'PORST',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'reserved_17',0,1
	.word	508
	.byte	1,6,2,35,2,12
	.byte	'CB0',0,1
	.word	508
	.byte	1,5,2,35,2,12
	.byte	'CB1',0,1
	.word	508
	.byte	1,4,2,35,2,12
	.byte	'CB3',0,1
	.word	508
	.byte	1,3,2,35,2,12
	.byte	'reserved_21',0,1
	.word	508
	.byte	2,1,2,35,2,12
	.byte	'EVR13',0,1
	.word	508
	.byte	1,0,2,35,2,12
	.byte	'EVR33',0,1
	.word	508
	.byte	1,7,2,35,3,12
	.byte	'SWD',0,1
	.word	508
	.byte	1,6,2,35,3,12
	.byte	'reserved_26',0,1
	.word	508
	.byte	2,4,2,35,3,12
	.byte	'STBYR',0,1
	.word	508
	.byte	1,3,2,35,3,12
	.byte	'reserved_29',0,1
	.word	508
	.byte	3,0,2,35,3,0,19
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,24,155,8,3
	.word	129190
	.byte	11
	.byte	'_Ifx_SCU_SAFECON_Bits',0,24,158,8,16,4,12
	.byte	'HBT',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,4
	.word	311
	.byte	31,0,2,35,0,0,19
	.byte	'Ifx_SCU_SAFECON_Bits',0,24,162,8,3
	.word	129622
	.byte	11
	.byte	'_Ifx_SCU_STSTAT_Bits',0,24,165,8,16,4,12
	.byte	'HWCFG',0,1
	.word	508
	.byte	8,0,2,35,0,12
	.byte	'FTM',0,1
	.word	508
	.byte	7,1,2,35,1,12
	.byte	'MODE',0,1
	.word	508
	.byte	1,0,2,35,1,12
	.byte	'FCBAE',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'LUDIS',0,1
	.word	508
	.byte	1,6,2,35,2,12
	.byte	'reserved_18',0,1
	.word	508
	.byte	1,5,2,35,2,12
	.byte	'TRSTL',0,1
	.word	508
	.byte	1,4,2,35,2,12
	.byte	'SPDEN',0,1
	.word	508
	.byte	1,3,2,35,2,12
	.byte	'reserved_21',0,1
	.word	508
	.byte	3,0,2,35,2,12
	.byte	'RAMINT',0,1
	.word	508
	.byte	1,7,2,35,3,12
	.byte	'reserved_25',0,1
	.word	508
	.byte	7,0,2,35,3,0,19
	.byte	'Ifx_SCU_STSTAT_Bits',0,24,178,8,3
	.word	129718
	.byte	11
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,24,181,8,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'SWRSTREQ',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	311
	.byte	30,0,2,35,0,0,19
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,24,186,8,3
	.word	129978
	.byte	11
	.byte	'_Ifx_SCU_SYSCON_Bits',0,24,189,8,16,4,12
	.byte	'CCTRIG0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'RAMINTM',0,1
	.word	508
	.byte	2,4,2,35,0,12
	.byte	'SETLUDIS',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'reserved_5',0,1
	.word	508
	.byte	3,0,2,35,0,12
	.byte	'DATM',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'reserved_9',0,4
	.word	311
	.byte	23,0,2,35,0,0,19
	.byte	'Ifx_SCU_SYSCON_Bits',0,24,198,8,3
	.word	130103
	.byte	11
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,24,201,8,16,4,12
	.byte	'ESR0T',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'ESR1T',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'SMUT',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	311
	.byte	28,0,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,24,208,8,3
	.word	130300
	.byte	11
	.byte	'_Ifx_SCU_TRAPDIS_Bits',0,24,211,8,16,4,12
	.byte	'ESR0T',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'ESR1T',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'SMUT',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	311
	.byte	28,0,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPDIS_Bits',0,24,218,8,3
	.word	130453
	.byte	11
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,24,221,8,16,4,12
	.byte	'ESR0T',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'ESR1T',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'SMUT',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	311
	.byte	28,0,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPSET_Bits',0,24,228,8,3
	.word	130606
	.byte	11
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,24,231,8,16,4,12
	.byte	'ESR0T',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'ESR1T',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'SMUT',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	311
	.byte	28,0,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,24,238,8,3
	.word	130759
	.byte	11
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,24,241,8,16,4,12
	.byte	'ENDINIT',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'LCK',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'PW',0,4
	.word	10325
	.byte	14,16,2,35,0,12
	.byte	'REL',0,4
	.word	10325
	.byte	16,0,2,35,0,0,19
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,24,247,8,3
	.word	130914
	.byte	11
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,24,250,8,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	2,6,2,35,0,12
	.byte	'IR0',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'DR',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'IR1',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'UR',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'PAR',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'TCR',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'TCTR',0,1
	.word	508
	.byte	7,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	907
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,24,134,9,3
	.word	131044
	.byte	11
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,24,137,9,16,4,12
	.byte	'AE',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'OE',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'IS0',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'DS',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'TO',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'IS1',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'US',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'PAS',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'TCS',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'TCT',0,1
	.word	508
	.byte	7,0,2,35,1,12
	.byte	'TIM',0,2
	.word	907
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,24,150,9,3
	.word	131282
	.byte	11
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,24,153,9,16,4,12
	.byte	'ENDINIT',0,4
	.word	10325
	.byte	1,31,2,35,0,12
	.byte	'LCK',0,4
	.word	10325
	.byte	1,30,2,35,0,12
	.byte	'PW',0,4
	.word	10325
	.byte	14,16,2,35,0,12
	.byte	'REL',0,4
	.word	10325
	.byte	16,0,2,35,0,0,19
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,24,159,9,3
	.word	131505
	.byte	11
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,24,162,9,16,4,12
	.byte	'CLRIRF',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'IR0',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'DR',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'IR1',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'UR',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'PAR',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'TCR',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'TCTR',0,1
	.word	508
	.byte	7,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	907
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,24,175,9,3
	.word	131631
	.byte	11
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,24,178,9,16,4,12
	.byte	'AE',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'OE',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'IS0',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'DS',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'TO',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'IS1',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'US',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'PAS',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'TCS',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'TCT',0,1
	.word	508
	.byte	7,0,2,35,1,12
	.byte	'TIM',0,2
	.word	907
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,24,191,9,3
	.word	131883
	.byte	13,24,199,9,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	113424
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_ACCEN0',0,24,204,9,3
	.word	132102
	.byte	13,24,207,9,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	113981
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_ACCEN1',0,24,212,9,3
	.word	132166
	.byte	13,24,215,9,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	114058
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_ARSTDIS',0,24,220,9,3
	.word	132230
	.byte	13,24,223,9,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	114194
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON0',0,24,228,9,3
	.word	132295
	.byte	13,24,231,9,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	114474
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON1',0,24,236,9,3
	.word	132360
	.byte	13,24,239,9,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	114712
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON2',0,24,244,9,3
	.word	132425
	.byte	13,24,247,9,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	114840
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON3',0,24,252,9,3
	.word	132490
	.byte	13,24,255,9,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	115083
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON4',0,24,132,10,3
	.word	132555
	.byte	13,24,135,10,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	115318
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON5',0,24,140,10,3
	.word	132620
	.byte	13,24,143,10,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	115446
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON6',0,24,148,10,3
	.word	132685
	.byte	13,24,151,10,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	115546
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON7',0,24,156,10,3
	.word	132750
	.byte	13,24,159,10,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	115646
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CHIPID',0,24,164,10,3
	.word	132815
	.byte	13,24,167,10,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	115854
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_DTSCON',0,24,172,10,3
	.word	132879
	.byte	13,24,175,10,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	116019
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_DTSLIM',0,24,180,10,3
	.word	132943
	.byte	13,24,183,10,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	116202
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_DTSSTAT',0,24,188,10,3
	.word	133007
	.byte	13,24,191,10,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	116356
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EICR',0,24,196,10,3
	.word	133072
	.byte	13,24,199,10,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	116720
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EIFR',0,24,204,10,3
	.word	133134
	.byte	13,24,207,10,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	116931
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EMSR',0,24,212,10,3
	.word	133196
	.byte	13,24,215,10,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	117183
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_ESRCFG',0,24,220,10,3
	.word	133258
	.byte	13,24,223,10,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	117301
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_ESROCFG',0,24,228,10,3
	.word	133322
	.byte	13,24,231,10,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	117412
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVR13CON',0,24,236,10,3
	.word	133387
	.byte	13,24,239,10,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	117575
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVR33CON',0,24,244,10,3
	.word	133453
	.byte	13,24,247,10,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	117738
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRADCSTAT',0,24,252,10,3
	.word	133519
	.byte	13,24,255,10,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	117896
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRDVSTAT',0,24,132,11,3
	.word	133587
	.byte	13,24,135,11,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	118061
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRMONCTRL',0,24,140,11,3
	.word	133654
	.byte	13,24,143,11,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	118390
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVROSCCTRL',0,24,148,11,3
	.word	133722
	.byte	13,24,151,11,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	118611
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVROVMON',0,24,156,11,3
	.word	133790
	.byte	13,24,159,11,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	118774
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRRSTCON',0,24,164,11,3
	.word	133856
	.byte	13,24,167,11,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	119046
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSDCOEFF1',0,24,172,11,3
	.word	133923
	.byte	13,24,175,11,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	119199
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSDCOEFF2',0,24,180,11,3
	.word	133992
	.byte	13,24,183,11,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	119355
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSDCOEFF3',0,24,188,11,3
	.word	134061
	.byte	13,24,191,11,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	119517
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSDCOEFF4',0,24,196,11,3
	.word	134130
	.byte	13,24,199,11,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	119660
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSDCOEFF5',0,24,204,11,3
	.word	134199
	.byte	13,24,207,11,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	119825
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSDCOEFF6',0,24,212,11,3
	.word	134268
	.byte	13,24,215,11,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	119970
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSDCTRL1',0,24,220,11,3
	.word	134337
	.byte	13,24,223,11,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	120151
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSDCTRL2',0,24,228,11,3
	.word	134405
	.byte	13,24,231,11,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	120325
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSDCTRL3',0,24,236,11,3
	.word	134473
	.byte	13,24,239,11,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	120485
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSDCTRL4',0,24,244,11,3
	.word	134541
	.byte	13,24,247,11,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	120629
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSTAT',0,24,252,11,3
	.word	134609
	.byte	13,24,255,11,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	120903
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRTRIM',0,24,132,12,3
	.word	134674
	.byte	13,24,135,12,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	121042
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRUVMON',0,24,140,12,3
	.word	134739
	.byte	13,24,143,12,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	121205
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EXTCON',0,24,148,12,3
	.word	134805
	.byte	13,24,151,12,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	121423
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_FDR',0,24,156,12,3
	.word	134869
	.byte	13,24,159,12,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	121586
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_FMR',0,24,164,12,3
	.word	134930
	.byte	13,24,167,12,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	121922
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_ID',0,24,172,12,3
	.word	134991
	.byte	13,24,175,12,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	122029
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_IGCR',0,24,180,12,3
	.word	135051
	.byte	13,24,183,12,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	122481
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_IN',0,24,188,12,3
	.word	135113
	.byte	13,24,191,12,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	122580
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_IOCR',0,24,196,12,3
	.word	135173
	.byte	13,24,199,12,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	122730
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_LBISTCTRL0',0,24,204,12,3
	.word	135235
	.byte	13,24,207,12,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	122879
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_LBISTCTRL1',0,24,212,12,3
	.word	135303
	.byte	13,24,215,12,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	123040
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_LBISTCTRL2',0,24,220,12,3
	.word	135371
	.byte	13,24,223,12,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	123170
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_LCLCON',0,24,228,12,3
	.word	135439
	.byte	13,24,231,12,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	123302
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_LCLTEST',0,24,236,12,3
	.word	135503
	.byte	13,24,239,12,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	123417
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_MANID',0,24,244,12,3
	.word	135568
	.byte	13,24,247,12,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	123528
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_OMR',0,24,252,12,3
	.word	135631
	.byte	13,24,255,12,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	123686
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_OSCCON',0,24,132,13,3
	.word	135692
	.byte	13,24,135,13,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	124098
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_OUT',0,24,140,13,3
	.word	135756
	.byte	13,24,143,13,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	124199
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_OVCCON',0,24,148,13,3
	.word	135817
	.byte	13,24,151,13,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	124466
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_OVCENABLE',0,24,156,13,3
	.word	135881
	.byte	13,24,159,13,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	124602
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PDISC',0,24,164,13,3
	.word	135948
	.byte	13,24,167,13,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	124713
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PDR',0,24,172,13,3
	.word	136011
	.byte	13,24,175,13,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	124846
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PDRR',0,24,180,13,3
	.word	136072
	.byte	13,24,183,13,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	125049
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PLLCON0',0,24,188,13,3
	.word	136134
	.byte	13,24,191,13,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	125405
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PLLCON1',0,24,196,13,3
	.word	136199
	.byte	13,24,199,13,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	125583
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PLLCON2',0,24,204,13,3
	.word	136264
	.byte	13,24,207,13,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	125683
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PLLERAYCON0',0,24,212,13,3
	.word	136329
	.byte	13,24,215,13,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	126053
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PLLERAYCON1',0,24,220,13,3
	.word	136398
	.byte	13,24,223,13,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	126239
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PLLERAYSTAT',0,24,228,13,3
	.word	136467
	.byte	13,24,231,13,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	126437
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PLLSTAT',0,24,236,13,3
	.word	136536
	.byte	13,24,239,13,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	126670
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PMCSR',0,24,244,13,3
	.word	136601
	.byte	13,24,247,13,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	126822
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PMSWCR0',0,24,252,13,3
	.word	136664
	.byte	13,24,255,13,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	127389
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PMSWCR1',0,24,132,14,3
	.word	136729
	.byte	13,24,135,14,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	127683
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PMSWCR2',0,24,140,14,3
	.word	136794
	.byte	13,24,143,14,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	127961
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PMSWSTAT',0,24,148,14,3
	.word	136859
	.byte	13,24,151,14,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	128457
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PMSWSTATCLR',0,24,156,14,3
	.word	136925
	.byte	13,24,159,14,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	128979
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_RSTCON',0,24,164,14,3
	.word	136994
	.byte	13,24,167,14,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	128770
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_RSTCON2',0,24,172,14,3
	.word	137058
	.byte	13,24,175,14,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	129190
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_RSTSTAT',0,24,180,14,3
	.word	137123
	.byte	13,24,183,14,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	129622
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_SAFECON',0,24,188,14,3
	.word	137188
	.byte	13,24,191,14,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	129718
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_STSTAT',0,24,196,14,3
	.word	137253
	.byte	13,24,199,14,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	129978
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_SWRSTCON',0,24,204,14,3
	.word	137317
	.byte	13,24,207,14,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	130103
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_SYSCON',0,24,212,14,3
	.word	137383
	.byte	13,24,215,14,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	130300
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPCLR',0,24,220,14,3
	.word	137447
	.byte	13,24,223,14,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	130453
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPDIS',0,24,228,14,3
	.word	137512
	.byte	13,24,231,14,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	130606
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPSET',0,24,236,14,3
	.word	137577
	.byte	13,24,239,14,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	130759
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPSTAT',0,24,244,14,3
	.word	137642
	.byte	13,24,247,14,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	130914
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_WDTCPU_CON0',0,24,252,14,3
	.word	137708
	.byte	13,24,255,14,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	131044
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_WDTCPU_CON1',0,24,132,15,3
	.word	137777
	.byte	13,24,135,15,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	131282
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_WDTCPU_SR',0,24,140,15,3
	.word	137846
	.byte	13,24,143,15,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	131505
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_WDTS_CON0',0,24,148,15,3
	.word	137913
	.byte	13,24,151,15,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	131631
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_WDTS_CON1',0,24,156,15,3
	.word	137980
	.byte	13,24,159,15,9,4,14
	.byte	'U',0
	.word	311
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	131883
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_WDTS_SR',0,24,164,15,3
	.word	138047
	.byte	11
	.byte	'_Ifx_SCU_WDTCPU',0,24,175,15,25,12,14
	.byte	'CON0',0
	.word	137708
	.byte	4,2,35,0,14
	.byte	'CON1',0
	.word	137777
	.byte	4,2,35,4,14
	.byte	'SR',0
	.word	137846
	.byte	4,2,35,8,0,10
	.word	138112
	.byte	19
	.byte	'Ifx_SCU_WDTCPU',0,24,180,15,3
	.word	138175
	.byte	11
	.byte	'_Ifx_SCU_WDTS',0,24,183,15,25,12,14
	.byte	'CON0',0
	.word	137913
	.byte	4,2,35,0,14
	.byte	'CON1',0
	.word	137980
	.byte	4,2,35,4,14
	.byte	'SR',0
	.word	138047
	.byte	4,2,35,8,0,10
	.word	138204
	.byte	19
	.byte	'Ifx_SCU_WDTS',0,24,188,15,3
	.word	138265
	.byte	17,5,83,9,1,18
	.byte	'IfxPort_InputMode_undefined',0,127,18
	.byte	'IfxPort_InputMode_noPullDevice',0,0,18
	.byte	'IfxPort_InputMode_pullDown',0,8,18
	.byte	'IfxPort_InputMode_pullUp',0,16,0,19
	.byte	'IfxPort_InputMode',0,5,89,3
	.word	138292
	.byte	19
	.byte	'IfxPort_OutputIdx',0,5,130,1,3
	.word	28047
	.byte	19
	.byte	'IfxPort_OutputMode',0,5,138,1,3
	.word	17439
	.byte	19
	.byte	'IfxPort_PadDriver',0,5,158,1,3
	.word	17509
	.byte	19
	.byte	'IfxPort_State',0,5,178,1,3
	.word	8687
	.byte	19
	.byte	'IfxPort_Pin',0,5,194,1,3
	.word	28008
	.byte	19
	.byte	'IfxStdIf_Timer_CountDir',0,7,93,3
	.word	28461
	.byte	19
	.byte	'IfxStdIf_Timer',0,7,96,32
	.word	9650
	.byte	30,7,134,2,9,16,14
	.byte	'enabled',0
	.word	508
	.byte	1,2,35,0,14
	.byte	'triggerPoint',0
	.word	8955
	.byte	4,2,35,2,14
	.byte	'isrPriority',0
	.word	907
	.byte	2,2,35,6,14
	.byte	'isrProvider',0
	.word	105681
	.byte	1,2,35,8,14
	.byte	'outputMode',0
	.word	17439
	.byte	1,2,35,9,14
	.byte	'outputDriver',0
	.word	17509
	.byte	1,2,35,10,14
	.byte	'risingEdgeAtPeriod',0
	.word	508
	.byte	1,2,35,11,14
	.byte	'outputEnabled',0
	.word	508
	.byte	1,2,35,12,0,19
	.byte	'IfxStdIf_Timer_TrigConfig',0,7,144,2,3
	.word	138624
	.byte	30,7,147,2,9,36,14
	.byte	'frequency',0
	.word	241
	.byte	4,2,35,0,14
	.byte	'isrPriority',0
	.word	907
	.byte	2,2,35,4,14
	.byte	'isrProvider',0
	.word	105681
	.byte	1,2,35,6,14
	.byte	'minResolution',0
	.word	241
	.byte	4,2,35,8,14
	.byte	'trigger',0
	.word	138624
	.byte	16,2,35,12,14
	.byte	'countDir',0
	.word	28461
	.byte	1,2,35,28,14
	.byte	'startOffset',0
	.word	241
	.byte	4,2,35,30,0,19
	.byte	'IfxStdIf_Timer_Config',0,7,156,2,3
	.word	138840
	.byte	19
	.byte	'IfxStdIf_PwmHl',0,14,81,32
	.word	104876
	.byte	19
	.byte	'IfxStdIf_PwmHl_Config',0,14,207,1,3
	.word	17924
	.byte	19
	.byte	'Ifx_GTM_ACCEN0_Bits',0,10,83,3
	.word	96845
	.byte	19
	.byte	'Ifx_GTM_ACCEN1_Bits',0,10,89,3
	.word	96756
	.byte	19
	.byte	'Ifx_GTM_ADCTRIG0OUT0_Bits',0,10,100,3
	.word	94730
	.byte	19
	.byte	'Ifx_GTM_ADCTRIG1OUT0_Bits',0,10,111,3
	.word	94906
	.byte	19
	.byte	'Ifx_GTM_AEI_ADDR_XPT_Bits',0,10,119,3
	.word	29107
	.byte	19
	.byte	'Ifx_GTM_AFD_CH_BUF_ACC_Bits',0,10,126,3
	.word	65964
	.byte	19
	.byte	'Ifx_GTM_ARU_ARU_ACCESS_Bits',0,10,136,1,3
	.word	36643
	.byte	19
	.byte	'Ifx_GTM_ARU_DATA_H_Bits',0,10,143,1,3
	.word	36812
	.byte	19
	.byte	'Ifx_GTM_ARU_DATA_L_Bits',0,10,150,1,3
	.word	36923
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_ACCESS0_Bits',0,10,157,1,3
	.word	37034
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_ACCESS1_Bits',0,10,164,1,3
	.word	37381
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_DATA0_H_Bits',0,10,171,1,3
	.word	37149
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_DATA0_L_Bits',0,10,178,1,3
	.word	37265
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_DATA1_H_Bits',0,10,185,1,3
	.word	37496
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_DATA1_L_Bits',0,10,192,1,3
	.word	37612
	.byte	19
	.byte	'Ifx_GTM_ARU_IRQ_EN_Bits',0,10,201,1,3
	.word	37887
	.byte	19
	.byte	'Ifx_GTM_ARU_IRQ_FORCINT_Bits',0,10,210,1,3
	.word	38063
	.byte	19
	.byte	'Ifx_GTM_ARU_IRQ_MODE_Bits',0,10,217,1,3
	.word	38234
	.byte	19
	.byte	'Ifx_GTM_ARU_IRQ_NOTIFY_Bits',0,10,226,1,3
	.word	37728
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_ACT_TB_Bits',0,10,235,1,3
	.word	14783
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_ENDIS_CTRL_Bits',0,10,249,1,3
	.word	14207
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_ENDIS_STAT_Bits',0,10,135,2,3
	.word	14495
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_FUPD_CTRL_Bits',0,10,156,2,3
	.word	15515
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_GLB_CTRL_Bits',0,10,179,2,3
	.word	13757
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_INT_TRIG_Bits',0,10,193,2,3
	.word	15947
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_OUTEN_CTRL_Bits',0,10,207,2,3
	.word	14939
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_OUTEN_STAT_Bits',0,10,221,2,3
	.word	15227
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_CM0_Bits',0,10,228,2,3
	.word	12406
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_CM1_Bits',0,10,235,2,3
	.word	12517
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_CN0_Bits',0,10,242,2,3
	.word	12628
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_CTRL_Bits',0,10,137,3,3
	.word	10500
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_IRQ_EN_Bits',0,10,145,3,3
	.word	13094
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_IRQ_FORCINT_Bits',0,10,153,3,3
	.word	13242
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_IRQ_MODE_Bits',0,10,160,3,3
	.word	13389
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_IRQ_NOTIFY_Bits',0,10,168,3,3
	.word	12956
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_RDADDR_Bits',0,10,177,3,3
	.word	10341
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SOMC_Bits',0,10,198,3,3
	.word	10913
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SOMI_Bits',0,10,210,3,3
	.word	11291
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SOMP_Bits',0,10,229,3,3
	.word	11496
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SOMS_Bits',0,10,244,3,3
	.word	11845
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SR0_Bits',0,10,251,3,3
	.word	12184
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SR1_Bits',0,10,130,4,3
	.word	12295
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_STAT_Bits',0,10,143,4,3
	.word	12739
	.byte	19
	.byte	'Ifx_GTM_BRC_EIRQ_EN_Bits',0,10,162,4,3
	.word	50356
	.byte	19
	.byte	'Ifx_GTM_BRC_IRQ_EN_Bits',0,10,181,4,3
	.word	49420
	.byte	19
	.byte	'Ifx_GTM_BRC_IRQ_FORCINT_Bits',0,10,200,4,3
	.word	49768
	.byte	19
	.byte	'Ifx_GTM_BRC_IRQ_MODE_Bits',0,10,207,4,3
	.word	50134
	.byte	19
	.byte	'Ifx_GTM_BRC_IRQ_NOTIFY_Bits',0,10,226,4,3
	.word	49107
	.byte	19
	.byte	'Ifx_GTM_BRC_RST_Bits',0,10,233,4,3
	.word	50250
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC0_ADDR_Bits',0,10,242,4,3
	.word	40355
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC0_DEST_Bits',0,10,143,5,3
	.word	40511
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC10_ADDR_Bits',0,10,152,5,3
	.word	47645
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC10_DEST_Bits',0,10,181,5,3
	.word	47802
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC11_ADDR_Bits',0,10,190,5,3
	.word	48376
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC11_DEST_Bits',0,10,219,5,3
	.word	48533
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC1_ADDR_Bits',0,10,228,5,3
	.word	41084
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC1_DEST_Bits',0,10,129,6,3
	.word	41240
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC2_ADDR_Bits',0,10,138,6,3
	.word	41813
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC2_DEST_Bits',0,10,167,6,3
	.word	41969
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC3_ADDR_Bits',0,10,176,6,3
	.word	42542
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC3_DEST_Bits',0,10,205,6,3
	.word	42698
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC4_ADDR_Bits',0,10,214,6,3
	.word	43271
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC4_DEST_Bits',0,10,243,6,3
	.word	43427
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC5_ADDR_Bits',0,10,252,6,3
	.word	44000
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC5_DEST_Bits',0,10,153,7,3
	.word	44156
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC6_ADDR_Bits',0,10,162,7,3
	.word	44729
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC6_DEST_Bits',0,10,191,7,3
	.word	44885
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC7_ADDR_Bits',0,10,200,7,3
	.word	45458
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC7_DEST_Bits',0,10,229,7,3
	.word	45614
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC8_ADDR_Bits',0,10,238,7,3
	.word	46187
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC8_DEST_Bits',0,10,139,8,3
	.word	46343
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC9_ADDR_Bits',0,10,148,8,3
	.word	46916
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC9_DEST_Bits',0,10,177,8,3
	.word	47072
	.byte	19
	.byte	'Ifx_GTM_BRIDGE_MODE_Bits',0,10,193,8,3
	.word	30163
	.byte	19
	.byte	'Ifx_GTM_BRIDGE_PTR1_Bits',0,10,204,8,3
	.word	30477
	.byte	19
	.byte	'Ifx_GTM_BRIDGE_PTR2_Bits',0,10,211,8,3
	.word	30685
	.byte	19
	.byte	'Ifx_GTM_CLC_Bits',0,10,221,8,3
	.word	92365
	.byte	19
	.byte	'Ifx_GTM_CMP_EIRQ_EN_Bits',0,10,251,8,3
	.word	35805
	.byte	19
	.byte	'Ifx_GTM_CMP_EN_Bits',0,10,153,9,3
	.word	33320
	.byte	19
	.byte	'Ifx_GTM_CMP_IRQ_EN_Bits',0,10,183,9,3
	.word	34406
	.byte	19
	.byte	'Ifx_GTM_CMP_IRQ_FORCINT_Bits',0,10,213,9,3
	.word	35081
	.byte	19
	.byte	'Ifx_GTM_CMP_IRQ_MODE_Bits',0,10,220,9,3
	.word	35689
	.byte	19
	.byte	'Ifx_GTM_CMP_IRQ_NOTIFY_Bits',0,10,250,9,3
	.word	33895
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK0_5_CTRL_Bits',0,10,129,10,3
	.word	39189
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK_6_CTRL_Bits',0,10,137,10,3
	.word	39363
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK_7_CTRL_Bits',0,10,145,10,3
	.word	39546
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK_EN_Bits',0,10,163,10,3
	.word	38628
	.byte	19
	.byte	'Ifx_GTM_CMU_ECLK_DEN_Bits',0,10,170,10,3
	.word	39846
	.byte	19
	.byte	'Ifx_GTM_CMU_ECLK_NUM_Bits',0,10,177,10,3
	.word	39729
	.byte	19
	.byte	'Ifx_GTM_CMU_FXCLK_CTRL_Bits',0,10,184,10,3
	.word	40028
	.byte	19
	.byte	'Ifx_GTM_CMU_GCLK_DEN_Bits',0,10,191,10,3
	.word	39072
	.byte	19
	.byte	'Ifx_GTM_CMU_GCLK_NUM_Bits',0,10,198,10,3
	.word	38955
	.byte	19
	.byte	'Ifx_GTM_CTRL_Bits',0,10,208,10,3
	.word	28941
	.byte	19
	.byte	'Ifx_GTM_DATAIN_Bits',0,10,214,10,3
	.word	98854
	.byte	19
	.byte	'Ifx_GTM_DPLL_ACB_Bits',0,10,227,10,3
	.word	85174
	.byte	19
	.byte	'Ifx_GTM_DPLL_ACT_STA_Bits',0,10,234,10,3
	.word	70510
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADD_IN_CAL1_Bits',0,10,241,10,3
	.word	79718
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADD_IN_CAL2_Bits',0,10,248,10,3
	.word	79843
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADD_IN_LD1_Bits',0,10,255,10,3
	.word	75837
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADD_IN_LD2_Bits',0,10,134,11,3
	.word	75960
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADT_S_Bits',0,10,142,11,3
	.word	84670
	.byte	19
	.byte	'Ifx_GTM_DPLL_AOSV_2_Bits',0,10,151,11,3
	.word	70791
	.byte	19
	.byte	'Ifx_GTM_DPLL_APS_1C3_Bits',0,10,159,11,3
	.word	71489
	.byte	19
	.byte	'Ifx_GTM_DPLL_APS_Bits',0,10,171,11,3
	.word	71146
	.byte	19
	.byte	'Ifx_GTM_DPLL_APS_SYNC_Bits',0,10,181,11,3
	.word	75405
	.byte	19
	.byte	'Ifx_GTM_DPLL_APT_2C_Bits',0,10,189,11,3
	.word	71353
	.byte	19
	.byte	'Ifx_GTM_DPLL_APT_Bits',0,10,201,11,3
	.word	70940
	.byte	19
	.byte	'Ifx_GTM_DPLL_APT_SYNC_Bits',0,10,211,11,3
	.word	75216
	.byte	19
	.byte	'Ifx_GTM_DPLL_CDT_SX_Bits',0,10,218,11,3
	.word	82246
	.byte	19
	.byte	'Ifx_GTM_DPLL_CDT_SX_NOM_Bits',0,10,225,11,3
	.word	82482
	.byte	19
	.byte	'Ifx_GTM_DPLL_CDT_TX_Bits',0,10,232,11,3
	.word	82132
	.byte	19
	.byte	'Ifx_GTM_DPLL_CDT_TX_NOM_Bits',0,10,239,11,3
	.word	82360
	.byte	19
	.byte	'Ifx_GTM_DPLL_CNT_NUM1_Bits',0,10,246,11,3
	.word	83188
	.byte	19
	.byte	'Ifx_GTM_DPLL_CNT_NUM2_Bits',0,10,253,11,3
	.word	83307
	.byte	19
	.byte	'Ifx_GTM_DPLL_CRTL_1_SHADOW_STATE_Bits',0,10,141,12,3
	.word	77501
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_0_Bits',0,10,157,12,3
	.word	68689
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_0_SHADOW_STATE_Bits',0,10,170,12,3
	.word	77039
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_0_SHADOW_TRIGGER_Bits',0,10,183,12,3
	.word	76815
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_1_Bits',0,10,210,12,3
	.word	68927
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_1_SHADOW_TRIGGER_Bits',0,10,223,12,3
	.word	77276
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_2_Bits',0,10,246,12,3
	.word	69360
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_3_Bits',0,10,141,13,3
	.word	69734
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_4_Bits',0,10,164,13,3
	.word	70120
	.byte	19
	.byte	'Ifx_GTM_DPLL_DLA_Bits',0,10,171,13,3
	.word	78079
	.byte	19
	.byte	'Ifx_GTM_DPLL_DT_S_ACT_Bits',0,10,178,13,3
	.word	81562
	.byte	19
	.byte	'Ifx_GTM_DPLL_DT_S_Bits',0,10,185,13,3
	.word	84805
	.byte	19
	.byte	'Ifx_GTM_DPLL_DT_T_ACT_Bits',0,10,192,13,3
	.word	81444
	.byte	19
	.byte	'Ifx_GTM_DPLL_DTA_Bits',0,10,199,13,3
	.word	78325
	.byte	19
	.byte	'Ifx_GTM_DPLL_EDT_S_Bits',0,10,207,13,3
	.word	81906
	.byte	19
	.byte	'Ifx_GTM_DPLL_EDT_T_Bits',0,10,215,13,3
	.word	81680
	.byte	19
	.byte	'Ifx_GTM_DPLL_EIRQ_EN_Bits',0,10,249,13,3
	.word	74235
	.byte	19
	.byte	'Ifx_GTM_DPLL_FTV_S_Bits',0,10,128,14,3
	.word	79027
	.byte	19
	.byte	'Ifx_GTM_DPLL_FTV_T_Bits',0,10,135,14,3
	.word	78678
	.byte	19
	.byte	'Ifx_GTM_DPLL_ID_PMTR_Bits',0,10,142,14,3
	.word	76679
	.byte	19
	.byte	'Ifx_GTM_DPLL_INC_CNT1_Bits',0,10,149,14,3
	.word	74980
	.byte	19
	.byte	'Ifx_GTM_DPLL_INC_CNT2_Bits',0,10,157,14,3
	.word	75098
	.byte	19
	.byte	'Ifx_GTM_DPLL_IRQ_EN_Bits',0,10,191,14,3
	.word	72756
	.byte	19
	.byte	'Ifx_GTM_DPLL_IRQ_FORCINT_Bits',0,10,225,14,3
	.word	73466
	.byte	19
	.byte	'Ifx_GTM_DPLL_IRQ_MODE_Bits',0,10,232,14,3
	.word	74118
	.byte	19
	.byte	'Ifx_GTM_DPLL_IRQ_NOTIFY_Bits',0,10,138,15,3
	.word	72217
	.byte	19
	.byte	'Ifx_GTM_DPLL_MEDT_S_Bits',0,10,146,15,3
	.word	82018
	.byte	19
	.byte	'Ifx_GTM_DPLL_MEDT_T_Bits',0,10,154,15,3
	.word	81792
	.byte	19
	.byte	'Ifx_GTM_DPLL_MLS1_Bits',0,10,161,15,3
	.word	82968
	.byte	19
	.byte	'Ifx_GTM_DPLL_MLS2_Bits',0,10,168,15,3
	.word	83078
	.byte	19
	.byte	'Ifx_GTM_DPLL_MPVAL1_Bits',0,10,177,15,3
	.word	79968
	.byte	19
	.byte	'Ifx_GTM_DPLL_MPVAL2_Bits',0,10,186,15,3
	.word	80098
	.byte	19
	.byte	'Ifx_GTM_DPLL_NA_Bits',0,10,194,15,3
	.word	78196
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_S_Bits',0,10,201,15,3
	.word	84314
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_S_TAR_Bits',0,10,208,15,3
	.word	80476
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_S_TAR_OLD_Bits',0,10,215,15,3
	.word	80596
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_T_Bits',0,10,222,15,3
	.word	84202
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_T_TAR_Bits',0,10,229,15,3
	.word	80228
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_T_TAR_OLD_Bits',0,10,236,15,3
	.word	80348
	.byte	19
	.byte	'Ifx_GTM_DPLL_NTI_CNT_Bits',0,10,243,15,3
	.word	72101
	.byte	19
	.byte	'Ifx_GTM_DPLL_NUSC_Bits',0,10,129,16,3
	.word	71875
	.byte	19
	.byte	'Ifx_GTM_DPLL_NUTC_Bits',0,10,144,16,3
	.word	71626
	.byte	19
	.byte	'Ifx_GTM_DPLL_OSW_Bits',0,10,154,16,3
	.word	70625
	.byte	19
	.byte	'Ifx_GTM_DPLL_PDT_T_Bits',0,10,162,16,3
	.word	82827
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSA_Bits',0,10,169,16,3
	.word	77962
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSAC_Bits',0,10,176,16,3
	.word	85055
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSSC_Bits',0,10,183,16,3
	.word	83644
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSSM_0_Bits',0,10,190,16,3
	.word	83978
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSSM_1_Bits',0,10,197,16,3
	.word	84090
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSTC_Bits',0,10,204,16,3
	.word	83534
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSTM_0_Bits',0,10,211,16,3
	.word	83754
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSTM_1_Bits',0,10,218,16,3
	.word	83866
	.byte	19
	.byte	'Ifx_GTM_DPLL_PVT_Bits',0,10,225,16,3
	.word	83426
	.byte	19
	.byte	'Ifx_GTM_DPLL_RAM_INI_Bits',0,10,236,16,3
	.word	77768
	.byte	19
	.byte	'Ifx_GTM_DPLL_RCDT_SX_Bits',0,10,243,16,3
	.word	80840
	.byte	19
	.byte	'Ifx_GTM_DPLL_RCDT_SX_NOM_Bits',0,10,251,16,3
	.word	81080
	.byte	19
	.byte	'Ifx_GTM_DPLL_RCDT_TX_Bits',0,10,130,17,3
	.word	80724
	.byte	19
	.byte	'Ifx_GTM_DPLL_RCDT_TX_NOM_Bits',0,10,138,17,3
	.word	80956
	.byte	19
	.byte	'Ifx_GTM_DPLL_RDT_S_ACT_Bits',0,10,145,17,3
	.word	81324
	.byte	19
	.byte	'Ifx_GTM_DPLL_RDT_S_Bits',0,10,152,17,3
	.word	84426
	.byte	19
	.byte	'Ifx_GTM_DPLL_RDT_T_ACT_Bits',0,10,159,17,3
	.word	81204
	.byte	19
	.byte	'Ifx_GTM_DPLL_SLR_Bits',0,10,166,17,3
	.word	82711
	.byte	19
	.byte	'Ifx_GTM_DPLL_STATUS_Bits',0,10,202,17,3
	.word	76092
	.byte	19
	.byte	'Ifx_GTM_DPLL_TBU_TS0_S_Bits',0,10,209,17,3
	.word	75717
	.byte	19
	.byte	'Ifx_GTM_DPLL_TBU_TS0_T_Bits',0,10,216,17,3
	.word	75597
	.byte	19
	.byte	'Ifx_GTM_DPLL_THMA_Bits',0,10,223,17,3
	.word	79252
	.byte	19
	.byte	'Ifx_GTM_DPLL_THMI_Bits',0,10,230,17,3
	.word	79142
	.byte	19
	.byte	'Ifx_GTM_DPLL_THVAL_Bits',0,10,237,17,3
	.word	79362
	.byte	19
	.byte	'Ifx_GTM_DPLL_TLR_Bits',0,10,244,17,3
	.word	82604
	.byte	19
	.byte	'Ifx_GTM_DPLL_TOV_Bits',0,10,252,17,3
	.word	79474
	.byte	19
	.byte	'Ifx_GTM_DPLL_TOV_S_Bits',0,10,132,18,3
	.word	79595
	.byte	19
	.byte	'Ifx_GTM_DPLL_TS_S_0_Bits',0,10,139,18,3
	.word	78795
	.byte	19
	.byte	'Ifx_GTM_DPLL_TS_S_1_Bits',0,10,146,18,3
	.word	78911
	.byte	19
	.byte	'Ifx_GTM_DPLL_TS_T_0_Bits',0,10,153,18,3
	.word	78442
	.byte	19
	.byte	'Ifx_GTM_DPLL_TS_T_1_Bits',0,10,160,18,3
	.word	78560
	.byte	19
	.byte	'Ifx_GTM_DPLL_TSAC_Bits',0,10,167,18,3
	.word	84936
	.byte	19
	.byte	'Ifx_GTM_DPLL_TSF_S_Bits',0,10,174,18,3
	.word	84548
	.byte	19
	.byte	'Ifx_GTM_DXINCON_Bits',0,10,195,18,3
	.word	98496
	.byte	19
	.byte	'Ifx_GTM_DXOUTCON_Bits',0,10,208,18,3
	.word	97414
	.byte	19
	.byte	'Ifx_GTM_EIRQ_EN_Bits',0,10,218,18,3
	.word	29949
	.byte	19
	.byte	'Ifx_GTM_F2A_ENABLE_Bits',0,10,232,18,3
	.word	65645
	.byte	19
	.byte	'Ifx_GTM_F2A_RD_CH_ARU_RD_FIFO_Bits',0,10,239,18,3
	.word	65248
	.byte	19
	.byte	'Ifx_GTM_F2A_STR_CH_STR_CFG_Bits',0,10,248,18,3
	.word	65430
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_CTRL_Bits',0,10,130,19,3
	.word	66203
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_EIRQ_EN_Bits',0,10,140,19,3
	.word	68116
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_END_ADDR_Bits',0,10,147,19,3
	.word	66364
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_FILL_LEVEL_Bits',0,10,154,19,3
	.word	67000
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_IRQ_EN_Bits',0,10,164,19,3
	.word	67535
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_IRQ_FORCINT_Bits',0,10,174,19,3
	.word	67744
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_IRQ_MODE_Bits',0,10,183,19,3
	.word	67946
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_IRQ_NOTIFY_Bits',0,10,193,19,3
	.word	67350
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_LOWER_WM_Bits',0,10,200,19,3
	.word	66717
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_RD_PTR_Bits',0,10,207,19,3
	.word	67235
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_START_ADDR_Bits',0,10,214,19,3
	.word	66481
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_STATUS_Bits',0,10,224,19,3
	.word	66834
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_UPPER_WM_Bits',0,10,231,19,3
	.word	66600
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_WR_PTR_Bits',0,10,238,19,3
	.word	67120
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_0_Bits',0,10,133,20,3
	.word	51306
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_1_Bits',0,10,166,20,3
	.word	51797
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_2_Bits',0,10,196,20,3
	.word	52545
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_4_Bits',0,10,226,20,3
	.word	53216
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_6_Bits',0,10,135,21,3
	.word	53887
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_9_Bits',0,10,172,21,3
	.word	54739
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CEI0_Bits',0,10,186,21,3
	.word	56069
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CEI1_Bits',0,10,216,21,3
	.word	56374
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CEI3_Bits',0,10,246,21,3
	.word	57072
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_MEI_Bits',0,10,141,22,3
	.word	55611
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_CAN_OUTSEL_Bits',0,10,154,22,3
	.word	93762
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_DSADC_INSEL_Bits',0,10,167,22,3
	.word	93220
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_DSADC_OUTSEL_Bits',0,10,178,22,3
	.word	93455
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_PSI5_OUTSEL0_Bits',0,10,190,22,3
	.word	94021
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_PSI5S_OUTSEL_Bits',0,10,203,22,3
	.word	94275
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_T_OUTSEL_Bits',0,10,224,22,3
	.word	92813
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_TIM_INSEL_Bits',0,10,237,22,3
	.word	92522
	.byte	19
	.byte	'Ifx_GTM_IRQ_EN_Bits',0,10,247,22,3
	.word	29426
	.byte	19
	.byte	'Ifx_GTM_IRQ_FORCINT_Bits',0,10,129,23,3
	.word	29635
	.byte	19
	.byte	'Ifx_GTM_IRQ_MODE_Bits',0,10,136,23,3
	.word	29837
	.byte	19
	.byte	'Ifx_GTM_IRQ_NOTIFY_Bits',0,10,146,23,3
	.word	29241
	.byte	19
	.byte	'Ifx_GTM_KRST0_Bits',0,10,154,23,3
	.word	96633
	.byte	19
	.byte	'Ifx_GTM_KRST1_Bits',0,10,161,23,3
	.word	96529
	.byte	19
	.byte	'Ifx_GTM_KRSTCLR_Bits',0,10,168,23,3
	.word	96423
	.byte	19
	.byte	'Ifx_GTM_MAP_CTRL_Bits',0,10,191,23,3
	.word	60530
	.byte	19
	.byte	'Ifx_GTM_MCFG_CTRL_Bits',0,10,200,23,3
	.word	60978
	.byte	19
	.byte	'Ifx_GTM_MCS_CH0_CTRG_Bits',0,10,222,23,3
	.word	88947
	.byte	19
	.byte	'Ifx_GTM_MCS_CH0_STRG_Bits',0,10,244,23,3
	.word	89306
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_ACB_Bits',0,10,255,23,3
	.word	88773
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_CTRL_Bits',0,10,145,24,3
	.word	88487
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_EIRQ_EN_Bits',0,10,154,24,3
	.word	90408
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_IRQ_EN_Bits',0,10,163,24,3
	.word	89939
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_IRQ_FORCINT_Bits',0,10,172,24,3
	.word	90110
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_IRQ_MODE_Bits',0,10,179,24,3
	.word	90289
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_IRQ_NOTIFY_Bits',0,10,188,24,3
	.word	89773
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_PC_Bits',0,10,195,24,3
	.word	89665
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R0_Bits',0,10,202,24,3
	.word	87607
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R1_Bits',0,10,209,24,3
	.word	87717
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R2_Bits',0,10,216,24,3
	.word	87827
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R3_Bits',0,10,223,24,3
	.word	87937
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R4_Bits',0,10,230,24,3
	.word	88047
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R5_Bits',0,10,237,24,3
	.word	88157
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R6_Bits',0,10,244,24,3
	.word	88267
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R7_Bits',0,10,251,24,3
	.word	88377
	.byte	19
	.byte	'Ifx_GTM_MCS_CTRL_Bits',0,10,133,25,3
	.word	90897
	.byte	19
	.byte	'Ifx_GTM_MCS_ERR_Bits',0,10,147,25,3
	.word	91546
	.byte	19
	.byte	'Ifx_GTM_MCS_RST_Bits',0,10,177,25,3
	.word	91070
	.byte	19
	.byte	'Ifx_GTM_MCSINTCLR_Bits',0,10,195,25,3
	.word	98186
	.byte	19
	.byte	'Ifx_GTM_MCSINTSTAT_Bits',0,10,213,25,3
	.word	97875
	.byte	19
	.byte	'Ifx_GTM_MON_ACTIVITY_0_Bits',0,10,243,25,3
	.word	32695
	.byte	19
	.byte	'Ifx_GTM_MON_STATUS_Bits',0,10,140,26,3
	.word	32205
	.byte	19
	.byte	'Ifx_GTM_MSC0INLEXTCON_Bits',0,10,161,26,3
	.word	100698
	.byte	19
	.byte	'Ifx_GTM_MSCIN_INHCON_Bits',0,10,182,26,3
	.word	100294
	.byte	19
	.byte	'Ifx_GTM_MSCIN_INLCON_Bits',0,10,203,26,3
	.word	99958
	.byte	19
	.byte	'Ifx_GTM_MSCSET_CON0_Bits',0,10,216,26,3
	.word	98947
	.byte	19
	.byte	'Ifx_GTM_MSCSET_CON1_Bits',0,10,229,26,3
	.word	99175
	.byte	19
	.byte	'Ifx_GTM_MSCSET_CON2_Bits',0,10,242,26,3
	.word	99403
	.byte	19
	.byte	'Ifx_GTM_MSCSET_CON3_Bits',0,10,255,26,3
	.word	99633
	.byte	19
	.byte	'Ifx_GTM_OCS_Bits',0,10,137,27,3
	.word	96263
	.byte	19
	.byte	'Ifx_GTM_ODA_Bits',0,10,145,27,3
	.word	96143
	.byte	19
	.byte	'Ifx_GTM_OTBU0T_Bits',0,10,154,27,3
	.word	95082
	.byte	19
	.byte	'Ifx_GTM_OTBU1T_Bits',0,10,163,27,3
	.word	95224
	.byte	19
	.byte	'Ifx_GTM_OTBU2T_Bits',0,10,172,27,3
	.word	95366
	.byte	19
	.byte	'Ifx_GTM_OTSC0_Bits',0,10,189,27,3
	.word	95693
	.byte	19
	.byte	'Ifx_GTM_OTSC1_Bits',0,10,199,27,3
	.word	95987
	.byte	19
	.byte	'Ifx_GTM_OTSS_Bits',0,10,210,27,3
	.word	95508
	.byte	19
	.byte	'Ifx_GTM_REV_Bits',0,10,222,27,3
	.word	28647
	.byte	19
	.byte	'Ifx_GTM_RST_Bits',0,10,229,27,3
	.word	28839
	.byte	19
	.byte	'Ifx_GTM_SPE_CMP_Bits',0,10,236,27,3
	.word	60161
	.byte	19
	.byte	'Ifx_GTM_SPE_CNT_Bits',0,10,243,27,3
	.word	60054
	.byte	19
	.byte	'Ifx_GTM_SPE_CTRL_STAT_Bits',0,10,136,28,3
	.word	58081
	.byte	19
	.byte	'Ifx_GTM_SPE_EIRQ_EN_Bits',0,10,147,28,3
	.word	59820
	.byte	19
	.byte	'Ifx_GTM_SPE_IRQ_EN_Bits',0,10,158,28,3
	.word	59258
	.byte	19
	.byte	'Ifx_GTM_SPE_IRQ_FORCINT_Bits',0,10,169,28,3
	.word	59486
	.byte	19
	.byte	'Ifx_GTM_SPE_IRQ_MODE_Bits',0,10,176,28,3
	.word	59704
	.byte	19
	.byte	'Ifx_GTM_SPE_IRQ_NOTIFY_Bits',0,10,187,28,3
	.word	59061
	.byte	19
	.byte	'Ifx_GTM_SPE_OUT_CTRL_Bits',0,10,194,28,3
	.word	58940
	.byte	19
	.byte	'Ifx_GTM_SPE_OUT_PAT_Bits',0,10,201,28,3
	.word	58812
	.byte	19
	.byte	'Ifx_GTM_SPE_PAT_Bits',0,10,222,28,3
	.word	58439
	.byte	19
	.byte	'Ifx_GTM_TBU_CH0_BASE_Bits',0,10,229,28,3
	.word	31436
	.byte	19
	.byte	'Ifx_GTM_TBU_CH0_CTRL_Bits',0,10,237,28,3
	.word	31299
	.byte	19
	.byte	'Ifx_GTM_TBU_CH1_BASE_Bits',0,10,244,28,3
	.word	31686
	.byte	19
	.byte	'Ifx_GTM_TBU_CH1_CTRL_Bits',0,10,252,28,3
	.word	31549
	.byte	19
	.byte	'Ifx_GTM_TBU_CH2_BASE_Bits',0,10,131,29,3
	.word	31936
	.byte	19
	.byte	'Ifx_GTM_TBU_CH2_CTRL_Bits',0,10,139,29,3
	.word	31799
	.byte	19
	.byte	'Ifx_GTM_TBU_CHEN_Bits',0,10,148,29,3
	.word	31144
	.byte	19
	.byte	'Ifx_GTM_TIM_AUX_IN_SRC_Bits',0,10,162,29,3
	.word	30874
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_CNT_Bits',0,10,169,29,3
	.word	61340
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_CNTS_Bits',0,10,176,29,3
	.word	61562
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_CTRL_Bits',0,10,205,29,3
	.word	62160
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_ECNT_Bits',0,10,212,29,3
	.word	61450
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_ECTRL_Bits',0,10,219,29,3
	.word	62709
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_EIRQ_EN_Bits',0,10,231,29,3
	.word	63646
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_FLT_FE_Bits',0,10,238,29,3
	.word	62044
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_FLT_RE_Bits',0,10,245,29,3
	.word	61928
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_GPR0_Bits',0,10,252,29,3
	.word	61130
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_GPR1_Bits',0,10,131,30,3
	.word	61235
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_EN_Bits',0,10,143,30,3
	.word	63040
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_FORCINT_Bits',0,10,155,30,3
	.word	63290
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_MODE_Bits',0,10,162,30,3
	.word	63527
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_NOTIFY_Bits',0,10,174,30,3
	.word	62828
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_TDUC_Bits',0,10,181,30,3
	.word	61667
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_TDUV_Bits',0,10,190,30,3
	.word	61780
	.byte	19
	.byte	'Ifx_GTM_TIM_IN_SRC_Bits',0,10,211,30,3
	.word	64202
	.byte	19
	.byte	'Ifx_GTM_TIM_RST_Bits',0,10,225,30,3
	.word	64554
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CM0_Bits',0,10,232,30,3
	.word	18929
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CM1_Bits',0,10,239,30,3
	.word	19039
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CN0_Bits',0,10,246,30,3
	.word	19149
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CTRL_Bits',0,10,136,31,3
	.word	18383
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_EN_Bits',0,10,144,31,3
	.word	19505
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_FORCINT_Bits',0,10,152,31,3
	.word	19652
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_MODE_Bits',0,10,159,31,3
	.word	19800
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_NOTIFY_Bits',0,10,167,31,3
	.word	19368
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_SR0_Bits',0,10,174,31,3
	.word	18709
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_SR1_Bits',0,10,181,31,3
	.word	18819
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_STAT_Bits',0,10,188,31,3
	.word	19259
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_ACT_TB_Bits',0,10,197,31,3
	.word	20586
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_ENDIS_CTRL_Bits',0,10,211,31,3
	.word	21449
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_ENDIS_STAT_Bits',0,10,225,31,3
	.word	21737
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_FUPD_CTRL_Bits',0,10,246,31,3
	.word	20742
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_GLB_CTRL_Bits',0,10,141,32,3
	.word	20136
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_INT_TRIG_Bits',0,10,155,32,3
	.word	21174
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_OUTEN_CTRL_Bits',0,10,169,32,3
	.word	22025
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_OUTEN_STAT_Bits',0,10,183,32,3
	.word	22313
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_ACT_TB_Bits',0,10,192,32,3
	.word	23086
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_ENDIS_CTRL_Bits',0,10,206,32,3
	.word	23949
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_ENDIS_STAT_Bits',0,10,220,32,3
	.word	24237
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_FUPD_CTRL_Bits',0,10,241,32,3
	.word	23242
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_GLB_CTRL_Bits',0,10,136,33,3
	.word	22636
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_INT_TRIG_Bits',0,10,150,33,3
	.word	23674
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_OUTEN_CTRL_Bits',0,10,164,33,3
	.word	24525
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_OUTEN_STAT_Bits',0,10,178,33,3
	.word	24813
	.byte	19
	.byte	'Ifx_GTM_TRIGOUT_Bits',0,10,192,33,3
	.word	97631
	.byte	19
	.byte	'Ifx_GTM_ACCEN0',0,10,205,33,3
	.word	97374
	.byte	19
	.byte	'Ifx_GTM_ACCEN1',0,10,213,33,3
	.word	96805
	.byte	19
	.byte	'Ifx_GTM_ADCTRIG0OUT0',0,10,221,33,3
	.word	94866
	.byte	19
	.byte	'Ifx_GTM_ADCTRIG1OUT0',0,10,229,33,3
	.word	95042
	.byte	19
	.byte	'Ifx_GTM_AEI_ADDR_XPT',0,10,237,33,3
	.word	29201
	.byte	19
	.byte	'Ifx_GTM_AFD_CH_BUF_ACC',0,10,245,33,3
	.word	66038
	.byte	19
	.byte	'Ifx_GTM_ARU_ARU_ACCESS',0,10,253,33,3
	.word	36772
	.byte	19
	.byte	'Ifx_GTM_ARU_DATA_H',0,10,133,34,3
	.word	36883
	.byte	19
	.byte	'Ifx_GTM_ARU_DATA_L',0,10,141,34,3
	.word	36994
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_ACCESS0',0,10,149,34,3
	.word	37109
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_ACCESS1',0,10,157,34,3
	.word	37456
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_DATA0_H',0,10,165,34,3
	.word	37225
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_DATA0_L',0,10,173,34,3
	.word	37341
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_DATA1_H',0,10,181,34,3
	.word	37572
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_DATA1_L',0,10,189,34,3
	.word	37688
	.byte	19
	.byte	'Ifx_GTM_ARU_IRQ_EN',0,10,197,34,3
	.word	38023
	.byte	19
	.byte	'Ifx_GTM_ARU_IRQ_FORCINT',0,10,205,34,3
	.word	38194
	.byte	19
	.byte	'Ifx_GTM_ARU_IRQ_MODE',0,10,213,34,3
	.word	38310
	.byte	19
	.byte	'Ifx_GTM_ARU_IRQ_NOTIFY',0,10,221,34,3
	.word	37847
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_ACT_TB',0,10,229,34,3
	.word	14899
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_ENDIS_CTRL',0,10,237,34,3
	.word	14455
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_ENDIS_STAT',0,10,245,34,3
	.word	14743
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_FUPD_CTRL',0,10,253,34,3
	.word	15907
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_GLB_CTRL',0,10,133,35,3
	.word	14167
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_INT_TRIG',0,10,141,35,3
	.word	16177
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_OUTEN_CTRL',0,10,149,35,3
	.word	15187
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_OUTEN_STAT',0,10,157,35,3
	.word	15475
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_CM0',0,10,165,35,3
	.word	12477
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_CM1',0,10,173,35,3
	.word	12588
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_CN0',0,10,181,35,3
	.word	12699
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_CTRL',0,10,189,35,3
	.word	10873
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_IRQ_EN',0,10,197,35,3
	.word	13202
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_IRQ_FORCINT',0,10,205,35,3
	.word	13349
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_IRQ_MODE',0,10,213,35,3
	.word	13469
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_IRQ_NOTIFY',0,10,221,35,3
	.word	13054
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_RDADDR',0,10,229,35,3
	.word	10460
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SOMC',0,10,237,35,3
	.word	11251
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SOMI',0,10,245,35,3
	.word	11456
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SOMP',0,10,253,35,3
	.word	11805
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SOMS',0,10,133,36,3
	.word	12067
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SR0',0,10,141,36,3
	.word	12255
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SR1',0,10,149,36,3
	.word	12366
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_STAT',0,10,157,36,3
	.word	12916
	.byte	19
	.byte	'Ifx_GTM_BRC_EIRQ_EN',0,10,165,36,3
	.word	50665
	.byte	19
	.byte	'Ifx_GTM_BRC_IRQ_EN',0,10,173,36,3
	.word	49728
	.byte	19
	.byte	'Ifx_GTM_BRC_IRQ_FORCINT',0,10,181,36,3
	.word	50094
	.byte	19
	.byte	'Ifx_GTM_BRC_IRQ_MODE',0,10,189,36,3
	.word	50210
	.byte	19
	.byte	'Ifx_GTM_BRC_IRQ_NOTIFY',0,10,197,36,3
	.word	49380
	.byte	19
	.byte	'Ifx_GTM_BRC_RST',0,10,205,36,3
	.word	50316
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC0_ADDR',0,10,213,36,3
	.word	40471
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC0_DEST',0,10,221,36,3
	.word	41044
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC10_ADDR',0,10,229,36,3
	.word	47762
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC10_DEST',0,10,237,36,3
	.word	48336
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC11_ADDR',0,10,245,36,3
	.word	48493
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC11_DEST',0,10,253,36,3
	.word	49067
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC1_ADDR',0,10,133,37,3
	.word	41200
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC1_DEST',0,10,141,37,3
	.word	41773
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC2_ADDR',0,10,149,37,3
	.word	41929
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC2_DEST',0,10,157,37,3
	.word	42502
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC3_ADDR',0,10,165,37,3
	.word	42658
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC3_DEST',0,10,173,37,3
	.word	43231
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC4_ADDR',0,10,181,37,3
	.word	43387
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC4_DEST',0,10,189,37,3
	.word	43960
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC5_ADDR',0,10,197,37,3
	.word	44116
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC5_DEST',0,10,205,37,3
	.word	44689
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC6_ADDR',0,10,213,37,3
	.word	44845
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC6_DEST',0,10,221,37,3
	.word	45418
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC7_ADDR',0,10,229,37,3
	.word	45574
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC7_DEST',0,10,237,37,3
	.word	46147
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC8_ADDR',0,10,245,37,3
	.word	46303
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC8_DEST',0,10,253,37,3
	.word	46876
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC9_ADDR',0,10,133,38,3
	.word	47032
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC9_DEST',0,10,141,38,3
	.word	47605
	.byte	19
	.byte	'Ifx_GTM_BRIDGE_MODE',0,10,149,38,3
	.word	30437
	.byte	19
	.byte	'Ifx_GTM_BRIDGE_PTR1',0,10,157,38,3
	.word	30645
	.byte	19
	.byte	'Ifx_GTM_BRIDGE_PTR2',0,10,165,38,3
	.word	30764
	.byte	19
	.byte	'Ifx_GTM_CLC',0,10,173,38,3
	.word	92482
	.byte	19
	.byte	'Ifx_GTM_CMP_EIRQ_EN',0,10,181,38,3
	.word	36465
	.byte	19
	.byte	'Ifx_GTM_CMP_EN',0,10,189,38,3
	.word	33855
	.byte	19
	.byte	'Ifx_GTM_CMP_IRQ_EN',0,10,197,38,3
	.word	35041
	.byte	19
	.byte	'Ifx_GTM_CMP_IRQ_FORCINT',0,10,205,38,3
	.word	35649
	.byte	19
	.byte	'Ifx_GTM_CMP_IRQ_MODE',0,10,213,38,3
	.word	35765
	.byte	19
	.byte	'Ifx_GTM_CMP_IRQ_NOTIFY',0,10,221,38,3
	.word	34366
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK0_5_CTRL',0,10,229,38,3
	.word	39268
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK_6_CTRL',0,10,237,38,3
	.word	39461
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK_7_CTRL',0,10,245,38,3
	.word	39644
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK_EN',0,10,253,38,3
	.word	38915
	.byte	19
	.byte	'Ifx_GTM_CMU_ECLK_DEN',0,10,133,39,3
	.word	39923
	.byte	19
	.byte	'Ifx_GTM_CMU_ECLK_NUM',0,10,141,39,3
	.word	39806
	.byte	19
	.byte	'Ifx_GTM_CMU_FXCLK_CTRL',0,10,149,39,3
	.word	40107
	.byte	19
	.byte	'Ifx_GTM_CMU_GCLK_DEN',0,10,157,39,3
	.word	39149
	.byte	19
	.byte	'Ifx_GTM_CMU_GCLK_NUM',0,10,165,39,3
	.word	39032
	.byte	19
	.byte	'Ifx_GTM_CTRL',0,10,173,39,3
	.word	29067
	.byte	19
	.byte	'Ifx_GTM_DATAIN',0,10,181,39,3
	.word	98898
	.byte	19
	.byte	'Ifx_GTM_DPLL_ACB',0,10,189,39,3
	.word	85363
	.byte	19
	.byte	'Ifx_GTM_DPLL_ACT_STA',0,10,197,39,3
	.word	70585
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADD_IN_CAL1',0,10,205,39,3
	.word	79803
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADD_IN_CAL2',0,10,213,39,3
	.word	79928
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADD_IN_LD1',0,10,221,39,3
	.word	75920
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADD_IN_LD2',0,10,229,39,3
	.word	76043
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADT_S',0,10,237,39,3
	.word	84755
	.byte	19
	.byte	'Ifx_GTM_DPLL_AOSV_2',0,10,245,39,3
	.word	70900
	.byte	19
	.byte	'Ifx_GTM_DPLL_APS',0,10,253,39,3
	.word	71313
	.byte	19
	.byte	'Ifx_GTM_DPLL_APS_1C3',0,10,133,40,3
	.word	71586
	.byte	19
	.byte	'Ifx_GTM_DPLL_APS_SYNC',0,10,141,40,3
	.word	75557
	.byte	19
	.byte	'Ifx_GTM_DPLL_APT',0,10,149,40,3
	.word	71106
	.byte	19
	.byte	'Ifx_GTM_DPLL_APT_2C',0,10,157,40,3
	.word	71449
	.byte	19
	.byte	'Ifx_GTM_DPLL_APT_SYNC',0,10,165,40,3
	.word	75365
	.byte	19
	.byte	'Ifx_GTM_DPLL_CDT_SX',0,10,173,40,3
	.word	82320
	.byte	19
	.byte	'Ifx_GTM_DPLL_CDT_SX_NOM',0,10,181,40,3
	.word	82564
	.byte	19
	.byte	'Ifx_GTM_DPLL_CDT_TX',0,10,189,40,3
	.word	82206
	.byte	19
	.byte	'Ifx_GTM_DPLL_CDT_TX_NOM',0,10,197,40,3
	.word	82442
	.byte	19
	.byte	'Ifx_GTM_DPLL_CNT_NUM1',0,10,205,40,3
	.word	83267
	.byte	19
	.byte	'Ifx_GTM_DPLL_CNT_NUM2',0,10,213,40,3
	.word	83386
	.byte	19
	.byte	'Ifx_GTM_DPLL_CRTL_1_SHADOW_STATE',0,10,221,40,3
	.word	77728
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_0',0,10,229,40,3
	.word	68887
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_0_SHADOW_STATE',0,10,237,40,3
	.word	77236
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_0_SHADOW_TRIGGER',0,10,245,40,3
	.word	76999
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_1',0,10,253,40,3
	.word	69320
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_1_SHADOW_TRIGGER',0,10,133,41,3
	.word	77461
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_2',0,10,141,41,3
	.word	69694
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_3',0,10,149,41,3
	.word	70080
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_4',0,10,157,41,3
	.word	70470
	.byte	19
	.byte	'Ifx_GTM_DPLL_DLA',0,10,165,41,3
	.word	78147
	.byte	19
	.byte	'Ifx_GTM_DPLL_DT_S',0,10,173,41,3
	.word	84875
	.byte	19
	.byte	'Ifx_GTM_DPLL_DT_S_ACT',0,10,181,41,3
	.word	81640
	.byte	19
	.byte	'Ifx_GTM_DPLL_DT_T_ACT',0,10,189,41,3
	.word	81522
	.byte	19
	.byte	'Ifx_GTM_DPLL_DTA',0,10,197,41,3
	.word	78393
	.byte	19
	.byte	'Ifx_GTM_DPLL_EDT_S',0,10,206,41,3
	.word	81978
	.byte	19
	.byte	'Ifx_GTM_DPLL_EDT_T',0,10,215,41,3
	.word	81752
	.byte	19
	.byte	'Ifx_GTM_DPLL_EIRQ_EN',0,10,223,41,3
	.word	74931
	.byte	19
	.byte	'Ifx_GTM_DPLL_FTV_S',0,10,231,41,3
	.word	79102
	.byte	19
	.byte	'Ifx_GTM_DPLL_FTV_T',0,10,239,41,3
	.word	78755
	.byte	19
	.byte	'Ifx_GTM_DPLL_ID_PMTR',0,10,247,41,3
	.word	76756
	.byte	19
	.byte	'Ifx_GTM_DPLL_INC_CNT1',0,10,255,41,3
	.word	75058
	.byte	19
	.byte	'Ifx_GTM_DPLL_INC_CNT2',0,10,136,42,3
	.word	75176
	.byte	19
	.byte	'Ifx_GTM_DPLL_IRQ_EN',0,10,144,42,3
	.word	73426
	.byte	19
	.byte	'Ifx_GTM_DPLL_IRQ_FORCINT',0,10,152,42,3
	.word	74078
	.byte	19
	.byte	'Ifx_GTM_DPLL_IRQ_MODE',0,10,160,42,3
	.word	74195
	.byte	19
	.byte	'Ifx_GTM_DPLL_IRQ_NOTIFY',0,10,168,42,3
	.word	72716
	.byte	19
	.byte	'Ifx_GTM_DPLL_MEDT_S',0,10,177,42,3
	.word	82092
	.byte	19
	.byte	'Ifx_GTM_DPLL_MEDT_T',0,10,186,42,3
	.word	81866
	.byte	19
	.byte	'Ifx_GTM_DPLL_MLS1',0,10,194,42,3
	.word	83038
	.byte	19
	.byte	'Ifx_GTM_DPLL_MLS2',0,10,202,42,3
	.word	83148
	.byte	19
	.byte	'Ifx_GTM_DPLL_MPVAL1',0,10,211,42,3
	.word	80058
	.byte	19
	.byte	'Ifx_GTM_DPLL_MPVAL2',0,10,220,42,3
	.word	80188
	.byte	19
	.byte	'Ifx_GTM_DPLL_NA',0,10,228,42,3
	.word	78276
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_S',0,10,236,42,3
	.word	84386
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_S_TAR',0,10,244,42,3
	.word	80556
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_S_TAR_OLD',0,10,252,42,3
	.word	80684
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_T',0,10,132,43,3
	.word	84274
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_T_TAR',0,10,140,43,3
	.word	80308
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_T_TAR_OLD',0,10,148,43,3
	.word	80436
	.byte	19
	.byte	'Ifx_GTM_DPLL_NTI_CNT',0,10,156,43,3
	.word	72177
	.byte	19
	.byte	'Ifx_GTM_DPLL_NUSC',0,10,164,43,3
	.word	72061
	.byte	19
	.byte	'Ifx_GTM_DPLL_NUTC',0,10,172,43,3
	.word	71835
	.byte	19
	.byte	'Ifx_GTM_DPLL_OSW',0,10,180,43,3
	.word	70751
	.byte	19
	.byte	'Ifx_GTM_DPLL_PDT_T',0,10,188,43,3
	.word	82910
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSA',0,10,196,43,3
	.word	78030
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSAC',0,10,204,43,3
	.word	85125
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSSC',0,10,212,43,3
	.word	83714
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSSM_0',0,10,220,43,3
	.word	84050
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSSM_1',0,10,228,43,3
	.word	84162
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSTC',0,10,236,43,3
	.word	83604
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSTM_0',0,10,244,43,3
	.word	83826
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSTM_1',0,10,252,43,3
	.word	83938
	.byte	19
	.byte	'Ifx_GTM_DPLL_PVT',0,10,132,44,3
	.word	83494
	.byte	19
	.byte	'Ifx_GTM_DPLL_RAM_INI',0,10,140,44,3
	.word	77922
	.byte	19
	.byte	'Ifx_GTM_DPLL_RCDT_SX',0,10,148,44,3
	.word	80916
	.byte	19
	.byte	'Ifx_GTM_DPLL_RCDT_SX_NOM',0,10,157,44,3
	.word	81164
	.byte	19
	.byte	'Ifx_GTM_DPLL_RCDT_TX',0,10,165,44,3
	.word	80800
	.byte	19
	.byte	'Ifx_GTM_DPLL_RCDT_TX_NOM',0,10,174,44,3
	.word	81040
	.byte	19
	.byte	'Ifx_GTM_DPLL_RDT_S',0,10,182,44,3
	.word	84498
	.byte	19
	.byte	'Ifx_GTM_DPLL_RDT_S_ACT',0,10,190,44,3
	.word	81404
	.byte	19
	.byte	'Ifx_GTM_DPLL_RDT_T_ACT',0,10,198,44,3
	.word	81284
	.byte	19
	.byte	'Ifx_GTM_DPLL_SLR',0,10,206,44,3
	.word	82778
	.byte	19
	.byte	'Ifx_GTM_DPLL_STATUS',0,10,214,44,3
	.word	76639
	.byte	19
	.byte	'Ifx_GTM_DPLL_TBU_TS0_S',0,10,222,44,3
	.word	75797
	.byte	19
	.byte	'Ifx_GTM_DPLL_TBU_TS0_T',0,10,230,44,3
	.word	75677
	.byte	19
	.byte	'Ifx_GTM_DPLL_THMA',0,10,238,44,3
	.word	79322
	.byte	19
	.byte	'Ifx_GTM_DPLL_THMI',0,10,246,44,3
	.word	79212
	.byte	19
	.byte	'Ifx_GTM_DPLL_THVAL',0,10,254,44,3
	.word	79434
	.byte	19
	.byte	'Ifx_GTM_DPLL_TLR',0,10,134,45,3
	.word	82671
	.byte	19
	.byte	'Ifx_GTM_DPLL_TOV',0,10,142,45,3
	.word	79555
	.byte	19
	.byte	'Ifx_GTM_DPLL_TOV_S',0,10,150,45,3
	.word	79678
	.byte	19
	.byte	'Ifx_GTM_DPLL_TS_S_0',0,10,158,45,3
	.word	78871
	.byte	19
	.byte	'Ifx_GTM_DPLL_TS_S_1',0,10,166,45,3
	.word	78987
	.byte	19
	.byte	'Ifx_GTM_DPLL_TS_T_0',0,10,174,45,3
	.word	78520
	.byte	19
	.byte	'Ifx_GTM_DPLL_TS_T_1',0,10,182,45,3
	.word	78638
	.byte	19
	.byte	'Ifx_GTM_DPLL_TSAC',0,10,190,45,3
	.word	85006
	.byte	19
	.byte	'Ifx_GTM_DPLL_TSF_S',0,10,198,45,3
	.word	84620
	.byte	19
	.byte	'Ifx_GTM_DXINCON',0,10,206,45,3
	.word	98814
	.byte	19
	.byte	'Ifx_GTM_DXOUTCON',0,10,214,45,3
	.word	97591
	.byte	19
	.byte	'Ifx_GTM_EIRQ_EN',0,10,222,45,3
	.word	30123
	.byte	19
	.byte	'Ifx_GTM_F2A_ENABLE',0,10,230,45,3
	.word	65852
	.byte	19
	.byte	'Ifx_GTM_F2A_RD_CH_ARU_RD_FIFO',0,10,238,45,3
	.word	65329
	.byte	19
	.byte	'Ifx_GTM_F2A_STR_CH_STR_CFG',0,10,246,45,3
	.word	65547
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_CTRL',0,10,254,45,3
	.word	66324
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_EIRQ_EN',0,10,134,46,3
	.word	68288
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_END_ADDR',0,10,142,46,3
	.word	66441
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_FILL_LEVEL',0,10,150,46,3
	.word	67080
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_IRQ_EN',0,10,158,46,3
	.word	67704
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_IRQ_FORCINT',0,10,166,46,3
	.word	67906
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_IRQ_MODE',0,10,174,46,3
	.word	68076
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_IRQ_NOTIFY',0,10,182,46,3
	.word	67495
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_LOWER_WM',0,10,190,46,3
	.word	66794
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_RD_PTR',0,10,198,46,3
	.word	67310
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_START_ADDR',0,10,206,46,3
	.word	66560
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_STATUS',0,10,214,46,3
	.word	66960
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_UPPER_WM',0,10,222,46,3
	.word	66677
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_WR_PTR',0,10,230,46,3
	.word	67195
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_0',0,10,238,46,3
	.word	51757
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_1',0,10,246,46,3
	.word	52505
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_2',0,10,254,46,3
	.word	53176
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_4',0,10,134,47,3
	.word	53847
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_6',0,10,142,47,3
	.word	54699
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_9',0,10,150,47,3
	.word	55571
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CEI0',0,10,158,47,3
	.word	56334
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CEI1',0,10,166,47,3
	.word	57032
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CEI3',0,10,174,47,3
	.word	57730
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_MEI',0,10,182,47,3
	.word	56029
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_CAN_OUTSEL',0,10,190,47,3
	.word	93931
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_DSADC_INSEL',0,10,198,47,3
	.word	93406
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_DSADC_OUTSEL',0,10,206,47,3
	.word	93614
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_PSI5_OUTSEL0',0,10,214,47,3
	.word	94183
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_PSI5S_OUTSEL',0,10,222,47,3
	.word	94460
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_T_OUTSEL',0,10,230,47,3
	.word	93114
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_TIM_INSEL',0,10,238,47,3
	.word	92706
	.byte	19
	.byte	'Ifx_GTM_IRQ_EN',0,10,246,47,3
	.word	29595
	.byte	19
	.byte	'Ifx_GTM_IRQ_FORCINT',0,10,254,47,3
	.word	29797
	.byte	19
	.byte	'Ifx_GTM_IRQ_MODE',0,10,134,48,3
	.word	29909
	.byte	19
	.byte	'Ifx_GTM_IRQ_NOTIFY',0,10,142,48,3
	.word	29386
	.byte	19
	.byte	'Ifx_GTM_KRST0',0,10,150,48,3
	.word	96716
	.byte	19
	.byte	'Ifx_GTM_KRST1',0,10,158,48,3
	.word	96593
	.byte	19
	.byte	'Ifx_GTM_KRSTCLR',0,10,166,48,3
	.word	96489
	.byte	19
	.byte	'Ifx_GTM_MAP_CTRL',0,10,174,48,3
	.word	60929
	.byte	19
	.byte	'Ifx_GTM_MCFG_CTRL',0,10,182,48,3
	.word	61079
	.byte	19
	.byte	'Ifx_GTM_MCS_CH0_CTRG',0,10,190,48,3
	.word	89266
	.byte	19
	.byte	'Ifx_GTM_MCS_CH0_STRG',0,10,198,48,3
	.word	89625
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_ACB',0,10,206,48,3
	.word	88907
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_CTRL',0,10,214,48,3
	.word	88733
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_EIRQ_EN',0,10,222,48,3
	.word	90543
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_IRQ_EN',0,10,230,48,3
	.word	90070
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_IRQ_FORCINT',0,10,238,48,3
	.word	90249
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_IRQ_MODE',0,10,246,48,3
	.word	90368
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_IRQ_NOTIFY',0,10,254,48,3
	.word	89899
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_PC',0,10,134,49,3
	.word	89733
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R0',0,10,142,49,3
	.word	87677
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R1',0,10,150,49,3
	.word	87787
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R2',0,10,158,49,3
	.word	87897
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R3',0,10,166,49,3
	.word	88007
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R4',0,10,174,49,3
	.word	88117
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R5',0,10,182,49,3
	.word	88227
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R6',0,10,190,49,3
	.word	88337
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R7',0,10,198,49,3
	.word	88447
	.byte	19
	.byte	'Ifx_GTM_MCS_CTRL',0,10,206,49,3
	.word	91030
	.byte	19
	.byte	'Ifx_GTM_MCS_ERR',0,10,214,49,3
	.word	91725
	.byte	19
	.byte	'Ifx_GTM_MCS_RST',0,10,222,49,3
	.word	91506
	.byte	19
	.byte	'Ifx_GTM_MCSINTCLR',0,10,230,49,3
	.word	98456
	.byte	19
	.byte	'Ifx_GTM_MCSINTSTAT',0,10,238,49,3
	.word	98146
	.byte	19
	.byte	'Ifx_GTM_MON_ACTIVITY_0',0,10,246,49,3
	.word	33210
	.byte	19
	.byte	'Ifx_GTM_MON_STATUS',0,10,254,49,3
	.word	32655
	.byte	19
	.byte	'Ifx_GTM_MSC0INLEXTCON',0,10,134,50,3
	.word	100995
	.byte	19
	.byte	'Ifx_GTM_MSCIN_INHCON',0,10,142,50,3
	.word	100590
	.byte	19
	.byte	'Ifx_GTM_MSCIN_INLCON',0,10,150,50,3
	.word	100254
	.byte	19
	.byte	'Ifx_GTM_MSCSET_CON0',0,10,158,50,3
	.word	99135
	.byte	19
	.byte	'Ifx_GTM_MSCSET_CON1',0,10,166,50,3
	.word	99363
	.byte	19
	.byte	'Ifx_GTM_MSCSET_CON2',0,10,174,50,3
	.word	99593
	.byte	19
	.byte	'Ifx_GTM_MSCSET_CON3',0,10,182,50,3
	.word	99825
	.byte	19
	.byte	'Ifx_GTM_OCS',0,10,190,50,3
	.word	96383
	.byte	19
	.byte	'Ifx_GTM_ODA',0,10,198,50,3
	.word	96223
	.byte	19
	.byte	'Ifx_GTM_OTBU0T',0,10,206,50,3
	.word	95184
	.byte	19
	.byte	'Ifx_GTM_OTBU1T',0,10,214,50,3
	.word	95326
	.byte	19
	.byte	'Ifx_GTM_OTBU2T',0,10,222,50,3
	.word	95468
	.byte	19
	.byte	'Ifx_GTM_OTSC0',0,10,230,50,3
	.word	95947
	.byte	19
	.byte	'Ifx_GTM_OTSC1',0,10,238,50,3
	.word	96103
	.byte	19
	.byte	'Ifx_GTM_OTSS',0,10,246,50,3
	.word	95653
	.byte	19
	.byte	'Ifx_GTM_REV',0,10,254,50,3
	.word	28799
	.byte	19
	.byte	'Ifx_GTM_RST',0,10,134,51,3
	.word	28901
	.byte	19
	.byte	'Ifx_GTM_SPE_CMP',0,10,142,51,3
	.word	60228
	.byte	19
	.byte	'Ifx_GTM_SPE_CNT',0,10,150,51,3
	.word	60121
	.byte	19
	.byte	'Ifx_GTM_SPE_CTRL_STAT',0,10,158,51,3
	.word	58399
	.byte	19
	.byte	'Ifx_GTM_SPE_EIRQ_EN',0,10,166,51,3
	.word	60014
	.byte	19
	.byte	'Ifx_GTM_SPE_IRQ_EN',0,10,174,51,3
	.word	59446
	.byte	19
	.byte	'Ifx_GTM_SPE_IRQ_FORCINT',0,10,182,51,3
	.word	59664
	.byte	19
	.byte	'Ifx_GTM_SPE_IRQ_MODE',0,10,190,51,3
	.word	59780
	.byte	19
	.byte	'Ifx_GTM_SPE_IRQ_NOTIFY',0,10,198,51,3
	.word	59218
	.byte	19
	.byte	'Ifx_GTM_SPE_OUT_CTRL',0,10,206,51,3
	.word	59021
	.byte	19
	.byte	'Ifx_GTM_SPE_OUT_PAT',0,10,214,51,3
	.word	58891
	.byte	19
	.byte	'Ifx_GTM_SPE_PAT',0,10,222,51,3
	.word	58772
	.byte	19
	.byte	'Ifx_GTM_TBU_CH0_BASE',0,10,230,51,3
	.word	31509
	.byte	19
	.byte	'Ifx_GTM_TBU_CH0_CTRL',0,10,238,51,3
	.word	31396
	.byte	19
	.byte	'Ifx_GTM_TBU_CH1_BASE',0,10,246,51,3
	.word	31759
	.byte	19
	.byte	'Ifx_GTM_TBU_CH1_CTRL',0,10,254,51,3
	.word	31646
	.byte	19
	.byte	'Ifx_GTM_TBU_CH2_BASE',0,10,134,52,3
	.word	32009
	.byte	19
	.byte	'Ifx_GTM_TBU_CH2_CTRL',0,10,142,52,3
	.word	31896
	.byte	19
	.byte	'Ifx_GTM_TBU_CHEN',0,10,150,52,3
	.word	31259
	.byte	19
	.byte	'Ifx_GTM_TIM_AUX_IN_SRC',0,10,158,52,3
	.word	31084
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_CNT',0,10,166,52,3
	.word	61410
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_CNTS',0,10,174,52,3
	.word	61627
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_CTRL',0,10,182,52,3
	.word	62669
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_ECNT',0,10,190,52,3
	.word	61522
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_ECTRL',0,10,198,52,3
	.word	62788
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_EIRQ_EN',0,10,206,52,3
	.word	63863
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_FLT_FE',0,10,214,52,3
	.word	62120
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_FLT_RE',0,10,222,52,3
	.word	62004
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_GPR0',0,10,230,52,3
	.word	61195
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_GPR1',0,10,238,52,3
	.word	61300
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_EN',0,10,246,52,3
	.word	63250
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_FORCINT',0,10,254,52,3
	.word	63487
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_MODE',0,10,134,53,3
	.word	63606
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_NOTIFY',0,10,142,53,3
	.word	63000
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_TDUC',0,10,150,53,3
	.word	61740
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_TDUV',0,10,158,53,3
	.word	61888
	.byte	19
	.byte	'Ifx_GTM_TIM_IN_SRC',0,10,166,53,3
	.word	64514
	.byte	19
	.byte	'Ifx_GTM_TIM_RST',0,10,174,53,3
	.word	64757
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CM0',0,10,182,53,3
	.word	18999
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CM1',0,10,190,53,3
	.word	19109
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CN0',0,10,198,53,3
	.word	19219
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CTRL',0,10,206,53,3
	.word	18669
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_EN',0,10,214,53,3
	.word	19612
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_FORCINT',0,10,222,53,3
	.word	19760
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_MODE',0,10,230,53,3
	.word	19879
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_NOTIFY',0,10,238,53,3
	.word	19465
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_SR0',0,10,246,53,3
	.word	18779
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_SR1',0,10,254,53,3
	.word	18889
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_STAT',0,10,134,54,3
	.word	19328
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_ACT_TB',0,10,142,54,3
	.word	20702
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_ENDIS_CTRL',0,10,150,54,3
	.word	21697
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_ENDIS_STAT',0,10,158,54,3
	.word	21985
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_FUPD_CTRL',0,10,166,54,3
	.word	21134
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_GLB_CTRL',0,10,174,54,3
	.word	20546
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_INT_TRIG',0,10,182,54,3
	.word	21404
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_OUTEN_CTRL',0,10,190,54,3
	.word	22273
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_OUTEN_STAT',0,10,198,54,3
	.word	22561
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_ACT_TB',0,10,206,54,3
	.word	23202
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_ENDIS_CTRL',0,10,214,54,3
	.word	24197
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_ENDIS_STAT',0,10,222,54,3
	.word	24485
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_FUPD_CTRL',0,10,230,54,3
	.word	23634
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_GLB_CTRL',0,10,238,54,3
	.word	23046
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_INT_TRIG',0,10,246,54,3
	.word	23904
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_OUTEN_CTRL',0,10,254,54,3
	.word	24773
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_OUTEN_STAT',0,10,134,55,3
	.word	25061
	.byte	19
	.byte	'Ifx_GTM_TRIGOUT',0,10,142,55,3
	.word	97817
	.byte	10
	.word	66078
	.byte	19
	.byte	'Ifx_GTM_AFD_CH',0,10,157,55,3
	.word	161606
	.byte	10
	.word	16226
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC',0,10,171,55,3
	.word	161635
	.byte	10
	.word	13518
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH',0,10,197,55,3
	.word	161666
	.byte	10
	.word	39308
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK0_5',0,10,203,55,3
	.word	161696
	.byte	10
	.word	39501
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK_6',0,10,209,55,3
	.word	161729
	.byte	10
	.word	39684
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK_7',0,10,215,55,3
	.word	161761
	.byte	10
	.word	39963
	.byte	19
	.byte	'Ifx_GTM_CMU_ECLK',0,10,222,55,3
	.word	161793
	.byte	10
	.word	40147
	.byte	19
	.byte	'Ifx_GTM_CMU_FXCLK',0,10,228,55,3
	.word	161824
	.byte	10
	.word	65369
	.byte	19
	.byte	'Ifx_GTM_F2A_RD_CH',0,10,234,55,3
	.word	161856
	.byte	10
	.word	65587
	.byte	19
	.byte	'Ifx_GTM_F2A_STR_CH',0,10,240,55,3
	.word	161888
	.byte	10
	.word	68328
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH',0,10,132,56,3
	.word	161921
	.byte	10
	.word	93971
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_CAN',0,10,138,56,3
	.word	161951
	.byte	10
	.word	93654
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_DSADC',0,10,147,56,3
	.word	161986
	.byte	10
	.word	94223
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_PSI5',0,10,153,56,3
	.word	162023
	.byte	10
	.word	94500
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_PSI5S',0,10,159,56,3
	.word	162059
	.byte	10
	.word	93163
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_T',0,10,165,56,3
	.word	162096
	.byte	10
	.word	92746
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_TIM',0,10,171,56,3
	.word	162129
	.byte	10
	.word	91774
	.byte	19
	.byte	'Ifx_GTM_MCS_CH',0,10,194,56,3
	.word	162164
	.byte	10
	.word	90583
	.byte	19
	.byte	'Ifx_GTM_MCS_CH0',0,10,218,56,3
	.word	162193
	.byte	10
	.word	63903
	.byte	19
	.byte	'Ifx_GTM_TIM_CH',0,10,240,56,3
	.word	162223
	.byte	10
	.word	19919
	.byte	19
	.byte	'Ifx_GTM_TOM_CH',0,10,129,57,3
	.word	162252
	.byte	10
	.word	66153
	.byte	19
	.byte	'Ifx_GTM_AFD',0,10,145,57,3
	.word	162281
	.byte	10
	.word	38350
	.byte	19
	.byte	'Ifx_GTM_ARU',0,10,163,57,3
	.word	162307
	.byte	10
	.word	16483
	.byte	19
	.byte	'Ifx_GTM_ATOM',0,10,184,57,3
	.word	162333
	.byte	10
	.word	50705
	.byte	19
	.byte	'Ifx_GTM_BRC',0,10,219,57,3
	.word	162360
	.byte	10
	.word	30804
	.byte	19
	.byte	'Ifx_GTM_BRIDGE',0,10,227,57,3
	.word	162386
	.byte	10
	.word	36505
	.byte	19
	.byte	'Ifx_GTM_CMP',0,10,238,57,3
	.word	162415
	.byte	10
	.word	40192
	.byte	19
	.byte	'Ifx_GTM_CMU',0,10,251,57,3
	.word	162441
	.byte	10
	.word	85412
	.byte	19
	.byte	'Ifx_GTM_DPLL',0,10,244,58,3
	.word	162467
	.byte	10
	.word	65892
	.byte	19
	.byte	'Ifx_GTM_F2A',0,10,252,58,3
	.word	162494
	.byte	10
	.word	68636
	.byte	19
	.byte	'Ifx_GTM_FIFO',0,10,130,59,3
	.word	162520
	.byte	10
	.word	57770
	.byte	19
	.byte	'Ifx_GTM_ICM',0,10,150,59,3
	.word	162547
	.byte	10
	.word	94552
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL',0,10,164,59,3
	.word	162573
	.byte	10
	.word	92113
	.byte	19
	.byte	'Ifx_GTM_MCS',0,10,182,59,3
	.word	162604
	.byte	10
	.word	33250
	.byte	19
	.byte	'Ifx_GTM_MON',0,10,189,59,3
	.word	162630
	.byte	10
	.word	100630
	.byte	19
	.byte	'Ifx_GTM_MSCIN',0,10,196,59,3
	.word	162656
	.byte	10
	.word	99865
	.byte	19
	.byte	'Ifx_GTM_MSCSET',0,10,205,59,3
	.word	162684
	.byte	10
	.word	60277
	.byte	19
	.byte	'Ifx_GTM_SPE',0,10,222,59,3
	.word	162713
	.byte	10
	.word	32049
	.byte	19
	.byte	'Ifx_GTM_TBU',0,10,234,59,3
	.word	162739
	.byte	10
	.word	64843
	.byte	19
	.byte	'Ifx_GTM_TIM',0,10,128,60,3
	.word	162765
	.byte	10
	.word	25142
	.byte	19
	.byte	'Ifx_GTM_TOM',0,10,177,60,3
	.word	162791
	.byte	10
	.word	101046
	.byte	19
	.byte	'Ifx_GTM',0,10,154,61,3
	.word	162817
	.byte	10
	.word	26466
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC',0,11,202,1,40
	.word	162839
	.byte	17,11,212,1,9,1,18
	.byte	'IfxGtm_Atom_0',0,0,18
	.byte	'IfxGtm_Atom_1',0,1,18
	.byte	'IfxGtm_Atom_2',0,2,18
	.byte	'IfxGtm_Atom_3',0,3,0,19
	.byte	'IfxGtm_Atom',0,11,218,1,3
	.word	162869
	.byte	19
	.byte	'IfxGtm_Atom_Ch',0,11,233,1,3
	.word	16800
	.byte	17,11,255,1,9,1,18
	.byte	'IfxGtm_Tim_0',0,0,18
	.byte	'IfxGtm_Tim_1',0,1,18
	.byte	'IfxGtm_Tim_2',0,2,0,19
	.byte	'IfxGtm_Tim',0,11,132,2,3
	.word	162985
	.byte	17,11,136,2,9,1,18
	.byte	'IfxGtm_Tim_Ch_0',0,0,18
	.byte	'IfxGtm_Tim_Ch_1',0,1,18
	.byte	'IfxGtm_Tim_Ch_2',0,2,18
	.byte	'IfxGtm_Tim_Ch_3',0,3,18
	.byte	'IfxGtm_Tim_Ch_4',0,4,18
	.byte	'IfxGtm_Tim_Ch_5',0,5,18
	.byte	'IfxGtm_Tim_Ch_6',0,6,18
	.byte	'IfxGtm_Tim_Ch_7',0,7,0,19
	.byte	'IfxGtm_Tim_Ch',0,11,146,2,3
	.word	163057
	.byte	19
	.byte	'IfxGtm_Tom',0,11,154,2,3
	.word	27870
	.byte	19
	.byte	'IfxGtm_Tom_Ch',0,11,177,2,3
	.word	26066
	.byte	17,25,67,9,1,18
	.byte	'IfxGtm_IrqMode_level',0,0,18
	.byte	'IfxGtm_IrqMode_pulse',0,1,18
	.byte	'IfxGtm_IrqMode_pulseNotify',0,2,18
	.byte	'IfxGtm_IrqMode_singlePulse',0,3,0,19
	.byte	'IfxGtm_IrqMode',0,25,73,3
	.word	163274
	.byte	17,25,77,9,1,18
	.byte	'IfxGtm_SuspendMode_none',0,0,18
	.byte	'IfxGtm_SuspendMode_hard',0,1,18
	.byte	'IfxGtm_SuspendMode_soft',0,2,0,19
	.byte	'IfxGtm_SuspendMode',0,25,82,3
	.word	163407
	.byte	17,26,69,9,1,18
	.byte	'IfxGtm_Tbu_Ts_0',0,0,18
	.byte	'IfxGtm_Tbu_Ts_1',0,1,18
	.byte	'IfxGtm_Tbu_Ts_2',0,2,0,19
	.byte	'IfxGtm_Tbu_Ts',0,26,74,3
	.word	163518
	.byte	19
	.byte	'IfxGtm_Tom_Ch_ClkSrc',0,15,92,3
	.word	18181
	.byte	19
	.byte	'IfxGtm_Tom_Ch_OutputTrigger',0,15,100,3
	.word	27267
	.byte	19
	.byte	'IfxGtm_Tom_Ch_ResetEvent',0,15,108,3
	.word	27017
	.byte	17,16,62,9,1,18
	.byte	'IfxGtm_ChXSel_a',0,0,18
	.byte	'IfxGtm_ChXSel_b',0,1,18
	.byte	'IfxGtm_ChXSel_c',0,2,18
	.byte	'IfxGtm_ChXSel_d',0,3,18
	.byte	'IfxGtm_ChXSel_e',0,4,18
	.byte	'IfxGtm_ChXSel_f',0,5,18
	.byte	'IfxGtm_ChXSel_g',0,6,18
	.byte	'IfxGtm_ChXSel_h',0,7,18
	.byte	'IfxGtm_ChXSel_i',0,8,18
	.byte	'IfxGtm_ChXSel_j',0,9,18
	.byte	'IfxGtm_ChXSel_k',0,10,18
	.byte	'IfxGtm_ChXSel_l',0,11,18
	.byte	'IfxGtm_ChXSel_m',0,12,18
	.byte	'IfxGtm_ChXSel_n',0,13,18
	.byte	'IfxGtm_ChXSel_o',0,14,18
	.byte	'IfxGtm_ChXSel_p',0,15,0,19
	.byte	'IfxGtm_ChXSel',0,16,83,3
	.word	163698
	.byte	19
	.byte	'IfxGtm_ToutSel',0,16,93,3
	.word	27907
	.byte	30,16,105,15,20,14
	.byte	'atom',0
	.word	162869
	.byte	1,2,35,0,14
	.byte	'channel',0
	.word	16800
	.byte	1,2,35,1,14
	.byte	'toutSel',0
	.word	27907
	.byte	1,2,35,2,14
	.byte	'toutn',0
	.word	8955
	.byte	4,2,35,4,14
	.byte	'pin',0
	.word	28008
	.byte	8,2,35,8,14
	.byte	'select',0
	.word	28047
	.byte	1,2,35,16,0,24
	.word	164037
	.byte	19
	.byte	'IfxGtm_Atom_ToutMap',0,16,113,3
	.word	164135
	.byte	24
	.word	28264
	.byte	19
	.byte	'IfxGtm_Tom_ToutMap',0,16,127,3
	.word	164168
	.byte	19
	.byte	'IfxGtm_Tom_Timer_Base',0,17,155,1,3
	.word	28563
	.byte	19
	.byte	'IfxGtm_Tom_Timer',0,17,176,1,3
	.word	102938
	.byte	19
	.byte	'IfxGtm_Tom_PwmHl',0,18,155,1,35
	.word	103975
	.byte	19
	.byte	'IfxGtm_Tom_PwmHl_Base',0,18,182,1,3
	.word	103588
	.byte	19
	.byte	'IfxGtm_Tom_PwmHl_Config',0,18,199,1,3
	.word	104240
	.byte	30,18,203,1,9,16,14
	.byte	'mode',0
	.word	103392
	.byte	1,2,35,0,14
	.byte	'inverted',0
	.word	508
	.byte	1,2,35,1,14
	.byte	'update',0
	.word	103799
	.byte	4,2,35,4,14
	.byte	'updateAndShift',0
	.word	103856
	.byte	4,2,35,8,14
	.byte	'updatePulse',0
	.word	103923
	.byte	4,2,35,12,0,19
	.byte	'IfxGtm_Tom_PwmHl_Mode',0,18,210,1,3
	.word	164347
	.byte	15,80
	.word	164347
	.byte	16,4,0
.L488:
	.byte	24
	.word	164478
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L190:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,39,12,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,36,0,3,8,11,15,62
	.byte	15,0,0,8,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,9,59,0,3,8,0,0,10,53,0,73,19,0,0,11,19
	.byte	1,3,8,58,15,59,15,57,15,11,15,0,0,12,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,13,23,1,58,15,59,15,57
	.byte	15,11,15,0,0,14,13,0,3,8,73,19,11,15,56,9,0,0,15,1,1,11,15,73,19,0,0,16,33,0,47,15,0,0,17,4,1,58,15,59
	.byte	15,57,15,11,15,0,0,18,40,0,3,8,28,13,0,0,19,22,0,3,8,58,15,59,15,57,15,73,19,0,0,20,21,1,73,19,54,15,39
	.byte	12,0,0,21,5,0,73,19,0,0,22,21,1,54,15,39,12,0,0,23,13,0,73,19,11,15,56,9,0,0,24,38,0,73,19,0,0,25,46,1
	.byte	3,8,54,15,39,12,63,12,60,12,0,0,26,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,27,5,0,3,8,73,19,0,0,28
	.byte	46,1,49,19,0,0,29,5,0,49,19,0,0,30,19,1,58,15,59,15,57,15,11,15,0,0,31,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,60,12,0,0,32,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,33,5,0,58,15,59
	.byte	15,57,15,73,19,0,0,34,46,0,3,8,58,15,59,15,57,15,54,15,63,12,60,12,0,0,35,21,0,54,15,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L191:
	.word	.L642-.L641
.L641:
	.half	3
	.word	.L644-.L643
.L643:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer',0
	.byte	'D:\\Program Files\\TASKING\\TriCore v6.3r1\\ctc\\include\\',0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu_Intrinsics.h',0,1,0,0
	.byte	'IfxSrc.h',0,2,0,0
	.byte	'IfxSrc_regdef.h',0,3,0,0
	.byte	'IfxPort.h',0,4,0,0
	.byte	'IfxPort_regdef.h',0,3,0,0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Service\\CpuGeneric\\StdIf\\IfxStdIf_Timer.h',0
	.byte	0,0,0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Service\\CpuGeneric\\StdIf\\IfxStdIf.h',0
	.byte	0,0,0
	.byte	'IfxGtm_Atom.h',0,5,0,0
	.byte	'IfxGtm_regdef.h',0,3,0,0
	.byte	'IfxGtm_cfg.h',0,6,0,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0
	.byte	'Ifx_Types.h',0,1,0,0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Service\\CpuGeneric\\StdIf\\IfxStdIf_PwmHl.h',0
	.byte	0,0,0
	.byte	'IfxGtm_Tom.h',0,5,0,0
	.byte	'IfxGtm_PinMap.h',0,7,0,0
	.byte	'IfxGtm_Tom_Timer.h',0,8,0,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.h',0,0,0,0
	.byte	'string.h',0,9,0,0
	.byte	'stddef.h',0,9,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'IfxSrc_cfg.h',0,6,0,0
	.byte	'IfxScu_cfg.h',0,6,0,0
	.byte	'IfxScu_regdef.h',0,3,0,0
	.byte	'IfxGtm.h',0,5,0,0
	.byte	'IfxGtm_Tbu.h',0,5,0,0,0
.L644:
.L642:
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_init')
	.sect	'.debug_info'
.L192:
	.word	852
	.half	3
	.word	.L193
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L195,.L194
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_init',0,1,169,1,9
	.word	.L294
	.byte	1,1,1
	.word	.L155,.L295,.L154
	.byte	4
	.byte	'driver',0,1,169,1,49
	.word	.L296,.L297
	.byte	4
	.byte	'config',0,1,169,1,88
	.word	.L298,.L299
	.byte	5
	.word	.L155,.L295
	.byte	6
	.byte	'result',0,1,171,1,23
	.word	.L294,.L300
	.byte	6
	.byte	'channelMask',0,1,172,1,23
	.word	.L301,.L302
	.byte	6
	.byte	'channelsMask',0,1,173,1,23
	.word	.L301,.L303
	.byte	6
	.byte	'channelIndex',0,1,174,1,23
	.word	.L304,.L305
	.byte	6
	.byte	'maskShift',0,1,175,1,23
	.word	.L301,.L306
	.byte	6
	.byte	'timer',0,1,176,1,23
	.word	.L307,.L308
	.byte	5
	.word	.L10,.L295
	.byte	6
	.byte	'clock',0,1,205,1,26
	.word	.L309,.L310
	.byte	5
	.word	.L12,.L31
	.byte	6
	.byte	'channel',0,1,209,1,23
	.word	.L311,.L312
	.byte	7
	.word	.L313,.L314,.L315
	.byte	8
	.word	.L316,.L317
	.byte	9
	.word	.L318,.L319
	.byte	0,7
	.word	.L313,.L320,.L14
	.byte	8
	.word	.L316,.L317
	.byte	0,7
	.word	.L313,.L321,.L322
	.byte	8
	.word	.L316,.L317
	.byte	0,7
	.word	.L313,.L323,.L324
	.byte	8
	.word	.L316,.L317
	.byte	9
	.word	.L318,.L325
	.byte	0,7
	.word	.L313,.L326,.L19
	.byte	8
	.word	.L316,.L317
	.byte	0,7
	.word	.L313,.L327,.L328
	.byte	8
	.word	.L316,.L317
	.byte	0,7
	.word	.L329,.L330,.L23
	.byte	8
	.word	.L331,.L332
	.byte	8
	.word	.L333,.L334
	.byte	8
	.word	.L335,.L336
	.byte	10
	.word	.L337,.L330,.L23
	.byte	0,7
	.word	.L313,.L338,.L29
	.byte	8
	.word	.L316,.L317
	.byte	9
	.word	.L318,.L339
	.byte	0,7
	.word	.L313,.L26,.L30
	.byte	8
	.word	.L316,.L317
	.byte	0,7
	.word	.L313,.L340,.L341
	.byte	8
	.word	.L316,.L317
	.byte	0,7
	.word	.L329,.L342,.L31
	.byte	8
	.word	.L331,.L332
	.byte	8
	.word	.L333,.L334
	.byte	8
	.word	.L335,.L336
	.byte	10
	.word	.L337,.L342,.L31
	.byte	0,0,5
	.word	.L343,.L295
	.byte	6
	.byte	'tOn',0,1,145,2,20
	.word	.L344,.L345
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_init')
	.sect	'.debug_abbrev'
.L193:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,85
	.byte	6,0,0,10,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_init')
	.sect	'.debug_line'
.L194:
	.word	.L646-.L645
.L645:
	.half	3
	.word	.L648-.L647
.L647:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std',0
	.byte	0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0
	.byte	'IfxPort.h',0,1,0,0,0
.L648:
	.byte	5,9,7,0,5,2
	.word	.L155
	.byte	3,168,1,1,5,36,9
	.half	.L492-.L155
	.byte	3,2,1,9
	.half	.L493-.L492
	.byte	3,2,1,5,44,9
	.half	.L494-.L493
	.byte	3,3,1,5,37,9
	.half	.L495-.L494
	.byte	3,2,1,5,35,9
	.half	.L649-.L495
	.byte	1,9
	.half	.L650-.L649
	.byte	3,1,1,5,37,9
	.half	.L651-.L650
	.byte	3,1,1,5,35,9
	.half	.L652-.L651
	.byte	1,5,37,9
	.half	.L653-.L652
	.byte	3,1,1,5,35,9
	.half	.L654-.L653
	.byte	1,5,49,9
	.half	.L655-.L654
	.byte	3,1,1,5,35,9
	.half	.L656-.L655
	.byte	1,5,49,9
	.half	.L657-.L656
	.byte	3,1,1,5,35,9
	.half	.L658-.L657
	.byte	1,5,49,9
	.half	.L659-.L658
	.byte	3,1,1,5,35,9
	.half	.L660-.L659
	.byte	1,5,54,9
	.half	.L661-.L660
	.byte	3,2,1,9
	.half	.L490-.L661
	.byte	3,1,1,5,43,9
	.half	.L497-.L490
	.byte	3,2,1,5,36,9
	.half	.L662-.L497
	.byte	1,5,26,9
	.half	.L663-.L662
	.byte	1,5,36,9
	.half	.L664-.L663
	.byte	1,5,17,9
	.half	.L665-.L664
	.byte	1,5,15,9
	.half	.L666-.L665
	.byte	3,3,1,5,20,9
	.half	.L667-.L666
	.byte	1,5,23,9
	.half	.L668-.L667
	.byte	1,5,36,9
	.half	.L669-.L668
	.byte	1,5,5,9
	.half	.L670-.L669
	.byte	1,5,57,7,9
	.half	.L671-.L670
	.byte	3,2,1,5,64,9
	.half	.L672-.L671
	.byte	1,5,21,9
	.half	.L673-.L672
	.byte	1,5,66,9
	.half	.L674-.L673
	.byte	1,5,57,9
	.half	.L7-.L674
	.byte	3,4,1,5,64,9
	.half	.L675-.L7
	.byte	1,5,21,9
	.half	.L676-.L675
	.byte	1,5,24,9
	.half	.L8-.L676
	.byte	3,3,1,5,29,9
	.half	.L677-.L8
	.byte	1,5,32,9
	.half	.L678-.L677
	.byte	1,5,45,9
	.half	.L679-.L678
	.byte	1,5,17,9
	.half	.L680-.L679
	.byte	1,5,48,7,9
	.half	.L681-.L680
	.byte	1,5,52,9
	.half	.L498-.L681
	.byte	1,5,48,9
	.half	.L9-.L498
	.byte	1,5,68,9
	.half	.L10-.L9
	.byte	3,4,1,5,80,9
	.half	.L682-.L10
	.byte	1,5,32,9
	.half	.L499-.L682
	.byte	1,5,23,9
	.half	.L500-.L499
	.byte	3,2,1,5,68,9
	.half	.L501-.L500
	.byte	1,5,48,9
	.half	.L12-.L501
	.byte	3,4,1,5,43,9
	.half	.L683-.L12
	.byte	1,5,48,9
	.half	.L684-.L683
	.byte	1,5,62,9
	.half	.L685-.L684
	.byte	1,5,20,9
	.half	.L503-.L685
	.byte	3,1,1,5,35,9
	.half	.L686-.L503
	.byte	1,5,37,9
	.half	.L687-.L686
	.byte	3,1,1,5,51,9
	.half	.L688-.L687
	.byte	1,5,39,9
	.half	.L689-.L688
	.byte	1,5,34,9
	.half	.L504-.L689
	.byte	3,1,1,5,44,9
	.half	.L690-.L504
	.byte	3,3,1,5,60,9
	.half	.L691-.L690
	.byte	1,5,73,9
	.half	.L692-.L691
	.byte	3,3,1,5,61,9
	.half	.L693-.L692
	.byte	1,5,27,7,9
	.half	.L314-.L693
	.byte	3,1,1,5,13,9
	.half	.L315-.L314
	.byte	3,1,1,5,62,9
	.half	.L13-.L315
	.byte	1,5,12,9
	.half	.L320-.L13
	.byte	3,177,127,1,5,47,7,9
	.half	.L694-.L320
	.byte	1,5,70,9
	.half	.L695-.L694
	.byte	1,5,47,9
	.half	.L15-.L695
	.byte	1,5,5,9
	.half	.L16-.L15
	.byte	1,5,44,9
	.half	.L14-.L16
	.byte	3,205,0,1,5,13,9
	.half	.L696-.L14
	.byte	3,1,1,5,45,9
	.half	.L322-.L696
	.byte	3,2,1,5,65,9
	.half	.L697-.L322
	.byte	1,5,68,9
	.half	.L698-.L697
	.byte	1,5,51,9
	.half	.L506-.L698
	.byte	3,1,1,5,71,9
	.half	.L699-.L506
	.byte	1,5,74,9
	.half	.L700-.L699
	.byte	1,5,72,9
	.half	.L508-.L700
	.byte	3,3,1,5,60,9
	.half	.L701-.L508
	.byte	1,5,27,7,9
	.half	.L323-.L701
	.byte	3,1,1,5,13,9
	.half	.L324-.L323
	.byte	3,1,1,5,62,9
	.half	.L18-.L324
	.byte	1,5,12,9
	.half	.L326-.L18
	.byte	3,170,127,1,5,47,7,9
	.half	.L702-.L326
	.byte	1,5,70,9
	.half	.L703-.L702
	.byte	1,5,47,9
	.half	.L20-.L703
	.byte	1,5,5,9
	.half	.L21-.L20
	.byte	1,5,44,9
	.half	.L19-.L21
	.byte	3,212,0,1,5,13,9
	.half	.L704-.L19
	.byte	3,1,1,5,44,9
	.half	.L328-.L704
	.byte	3,2,1,5,60,9
	.half	.L705-.L328
	.byte	1,5,46,9
	.half	.L510-.L705
	.byte	3,1,1,5,62,9
	.half	.L706-.L510
	.byte	1,5,94,9
	.half	.L512-.L706
	.byte	3,1,1,5,45,9
	.half	.L707-.L512
	.byte	1,5,87,9
	.half	.L708-.L707
	.byte	1,5,19,9
	.half	.L709-.L708
	.byte	3,3,1,5,9,9
	.half	.L710-.L709
	.byte	1,5,49,7,9
	.half	.L711-.L710
	.byte	3,2,1,5,44,9
	.half	.L712-.L711
	.byte	1,5,49,9
	.half	.L713-.L712
	.byte	1,5,29,9
	.half	.L714-.L713
	.byte	3,1,1,5,54,9
	.half	.L715-.L714
	.byte	1,5,123,9
	.half	.L716-.L715
	.byte	3,1,1,5,111,9
	.half	.L717-.L716
	.byte	1,5,141,1,7,9
	.half	.L718-.L717
	.byte	1,5,159,1,9
	.half	.L719-.L718
	.byte	1,5,139,1,9
	.half	.L24-.L719
	.byte	1,5,44,9
	.half	.L25-.L24
	.byte	1,5,39,9
	.half	.L720-.L25
	.byte	1,5,44,9
	.half	.L721-.L720
	.byte	1,5,63,9
	.half	.L722-.L721
	.byte	1,5,81,9
	.half	.L723-.L722
	.byte	1,5,76,9
	.half	.L724-.L723
	.byte	1,5,81,9
	.half	.L725-.L724
	.byte	1,5,100,9
	.half	.L726-.L725
	.byte	1,4,2,5,26,9
	.half	.L330-.L726
	.byte	3,227,2,1,5,17,9
	.half	.L727-.L330
	.byte	1,4,1,5,52,9
	.half	.L23-.L727
	.byte	3,161,125,1,5,45,9
	.half	.L728-.L23
	.byte	1,5,52,9
	.half	.L729-.L728
	.byte	1,5,66,9
	.half	.L730-.L729
	.byte	1,5,22,9
	.half	.L731-.L730
	.byte	3,1,1,5,37,9
	.half	.L732-.L731
	.byte	1,5,39,9
	.half	.L733-.L732
	.byte	3,1,1,5,53,9
	.half	.L734-.L733
	.byte	1,5,41,9
	.half	.L735-.L734
	.byte	1,5,36,9
	.half	.L736-.L735
	.byte	3,1,1,5,44,9
	.half	.L737-.L736
	.byte	3,3,1,5,60,9
	.half	.L738-.L737
	.byte	1,5,72,9
	.half	.L739-.L738
	.byte	3,3,1,5,60,9
	.half	.L740-.L739
	.byte	1,5,62,7,9
	.half	.L741-.L740
	.byte	3,1,1,5,12,9
	.half	.L338-.L741
	.byte	3,146,127,1,5,47,7,9
	.half	.L742-.L338
	.byte	1,5,70,9
	.half	.L743-.L742
	.byte	1,5,47,9
	.half	.L27-.L743
	.byte	1,5,5,9
	.half	.L28-.L27
	.byte	1,5,13,9
	.half	.L29-.L28
	.byte	3,239,0,1,5,27,9
	.half	.L26-.L29
	.byte	1,5,44,9
	.half	.L30-.L26
	.byte	3,126,1,5,13,9
	.half	.L744-.L30
	.byte	3,1,1,5,45,9
	.half	.L341-.L744
	.byte	3,2,1,5,65,9
	.half	.L745-.L341
	.byte	1,5,68,9
	.half	.L746-.L745
	.byte	1,5,51,9
	.half	.L514-.L746
	.byte	3,1,1,5,71,9
	.half	.L747-.L514
	.byte	1,5,74,9
	.half	.L748-.L747
	.byte	1,5,44,9
	.half	.L516-.L748
	.byte	3,2,1,5,60,9
	.half	.L749-.L516
	.byte	1,5,46,9
	.half	.L518-.L749
	.byte	3,1,1,5,62,9
	.half	.L750-.L518
	.byte	1,5,94,9
	.half	.L520-.L750
	.byte	3,1,1,5,45,9
	.half	.L751-.L520
	.byte	1,5,87,9
	.half	.L752-.L751
	.byte	1,5,19,9
	.half	.L753-.L752
	.byte	3,3,1,5,9,9
	.half	.L754-.L753
	.byte	1,5,51,7,9
	.half	.L755-.L754
	.byte	3,2,1,5,44,9
	.half	.L756-.L755
	.byte	1,5,51,9
	.half	.L757-.L756
	.byte	1,5,29,9
	.half	.L758-.L757
	.byte	3,1,1,5,54,9
	.half	.L759-.L758
	.byte	1,5,127,9
	.half	.L760-.L759
	.byte	3,1,1,5,115,9
	.half	.L761-.L760
	.byte	1,5,147,1,7,9
	.half	.L762-.L761
	.byte	1,5,165,1,9
	.half	.L763-.L762
	.byte	1,5,145,1,9
	.half	.L32-.L763
	.byte	1,5,46,9
	.half	.L33-.L32
	.byte	1,5,39,9
	.half	.L764-.L33
	.byte	1,5,46,9
	.half	.L765-.L764
	.byte	1,5,65,9
	.half	.L766-.L765
	.byte	1,5,85,9
	.half	.L767-.L766
	.byte	1,5,78,9
	.half	.L768-.L767
	.byte	1,5,85,9
	.half	.L769-.L768
	.byte	1,5,104,9
	.half	.L770-.L769
	.byte	1,4,2,5,26,9
	.half	.L342-.L770
	.byte	3,199,2,1,5,17,9
	.half	.L771-.L342
	.byte	1,4,1,5,82,9
	.half	.L31-.L771
	.byte	3,253,124,1,5,55,9
	.half	.L11-.L31
	.byte	1,5,68,9
	.half	.L772-.L11
	.byte	1,5,38,7,9
	.half	.L773-.L772
	.byte	3,192,0,1,5,61,9
	.half	.L343-.L773
	.byte	3,2,1,5,59,9
	.half	.L774-.L343
	.byte	1,5,40,9
	.half	.L775-.L774
	.byte	3,1,1,5,49,9
	.half	.L523-.L775
	.byte	3,3,1,5,70,9
	.half	.L776-.L523
	.byte	1,5,73,9
	.half	.L777-.L776
	.byte	1,5,76,9
	.half	.L778-.L777
	.byte	1,5,34,9
	.half	.L525-.L778
	.byte	3,1,1,5,49,9
	.half	.L779-.L525
	.byte	3,1,1,5,56,9
	.half	.L780-.L779
	.byte	1,5,73,9
	.half	.L781-.L780
	.byte	1,5,76,9
	.half	.L782-.L781
	.byte	1,5,23,9
	.half	.L527-.L782
	.byte	3,3,1,5,68,9
	.half	.L502-.L527
	.byte	1,5,61,9
	.half	.L36-.L502
	.byte	3,2,1,5,63,9
	.half	.L529-.L36
	.byte	3,1,1,5,82,9
	.half	.L531-.L529
	.byte	3,125,1,5,55,9
	.half	.L35-.L531
	.byte	1,5,68,9
	.half	.L783-.L35
	.byte	1,5,5,7,9
	.half	.L784-.L783
	.byte	3,6,1,5,1,9
	.half	.L37-.L784
	.byte	3,1,1,7,9
	.half	.L196-.L37
	.byte	0,1,1
.L646:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_init')
	.sect	'.debug_ranges'
.L195:
	.word	-1,.L155,0,.L196-.L155,0,0
.L319:
	.word	-1,.L155,.L314-.L155,.L315-.L155,.L320-.L155,.L14-.L155,.L321-.L155,.L322-.L155,0,0
.L325:
	.word	-1,.L155,.L323-.L155,.L324-.L155,.L326-.L155,.L19-.L155,.L327-.L155,.L328-.L155,0,0
.L339:
	.word	-1,.L155,.L338-.L155,.L29-.L155,.L26-.L155,.L30-.L155,.L340-.L155,.L341-.L155,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_initConfig')
	.sect	'.debug_info'
.L197:
	.word	265
	.half	3
	.word	.L198
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L200,.L199
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_initConfig',0,1,164,2,6,1,1,1
	.word	.L157,.L346,.L156
	.byte	4
	.byte	'config',0,1,164,2,59
	.word	.L347,.L348
	.byte	5
	.word	.L157,.L346
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_initConfig')
	.sect	'.debug_abbrev'
.L198:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_initConfig')
	.sect	'.debug_line'
.L199:
	.word	.L786-.L785
.L785:
	.half	3
	.word	.L788-.L787
.L787:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L788:
	.byte	5,6,7,0,5,2
	.word	.L157
	.byte	3,163,2,1,5,38,9
	.half	.L534-.L157
	.byte	3,2,1,5,24,9
	.half	.L533-.L534
	.byte	3,1,1,5,22,9
	.half	.L789-.L533
	.byte	1,5,24,9
	.half	.L790-.L789
	.byte	3,1,1,5,22,9
	.half	.L791-.L790
	.byte	1,5,24,9
	.half	.L792-.L791
	.byte	3,1,1,5,22,9
	.half	.L793-.L792
	.byte	1,5,24,9
	.half	.L794-.L793
	.byte	3,1,1,5,22,9
	.half	.L795-.L794
	.byte	1,5,24,9
	.half	.L796-.L795
	.byte	3,1,1,5,22,9
	.half	.L797-.L796
	.byte	1,5,1,9
	.half	.L798-.L797
	.byte	3,1,1,7,9
	.half	.L201-.L798
	.byte	0,1,1
.L786:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_initConfig')
	.sect	'.debug_ranges'
.L200:
	.word	-1,.L157,0,.L201-.L157,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_getDeadtime')
	.sect	'.debug_info'
.L202:
	.word	316
	.half	3
	.word	.L203
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L205,.L204
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_getDeadtime',0,1,151,1,9
	.word	.L349
	.byte	1,1,1
	.word	.L149,.L350,.L148
	.byte	4
	.byte	'driver',0,1,151,1,56
	.word	.L296,.L351
	.byte	5
	.word	.L149,.L350
	.byte	6
	.word	.L352,.L353,.L2
	.byte	7
	.word	.L354,.L355
	.byte	7
	.word	.L356,.L357
	.byte	8
	.word	.L358,.L353,.L2
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_getDeadtime')
	.sect	'.debug_abbrev'
.L203:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	29,1,49,16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_getDeadtime')
	.sect	'.debug_line'
.L204:
	.word	.L800-.L799
.L799:
	.half	3
	.word	.L802-.L801
.L801:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Service\\CpuGeneric\\StdIf\\IfxStdIf_Timer.h',0
	.byte	0,0,0,0
.L802:
	.byte	5,41,7,0,5,2
	.word	.L149
	.byte	3,152,1,1,5,54,9
	.half	.L803-.L149
	.byte	1,5,78,9
	.half	.L804-.L803
	.byte	1,4,2,5,12,9
	.half	.L353-.L804
	.byte	3,159,2,1,5,18,9
	.half	.L805-.L353
	.byte	1,5,5,9
	.half	.L806-.L805
	.byte	1,4,1,9
	.half	.L2-.L806
	.byte	3,225,125,1,5,1,9
	.half	.L3-.L2
	.byte	3,1,1,7,9
	.half	.L206-.L3
	.byte	0,1,1
.L800:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_getDeadtime')
	.sect	'.debug_ranges'
.L205:
	.word	-1,.L149,0,.L206-.L149,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_getMinPulse')
	.sect	'.debug_info'
.L207:
	.word	316
	.half	3
	.word	.L208
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L210,.L209
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_getMinPulse',0,1,157,1,9
	.word	.L349
	.byte	1,1,1
	.word	.L151,.L359,.L150
	.byte	4
	.byte	'driver',0,1,157,1,56
	.word	.L296,.L360
	.byte	5
	.word	.L151,.L359
	.byte	6
	.word	.L352,.L361,.L4
	.byte	7
	.word	.L354,.L362
	.byte	7
	.word	.L356,.L363
	.byte	8
	.word	.L358,.L361,.L4
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_getMinPulse')
	.sect	'.debug_abbrev'
.L208:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	29,1,49,16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_getMinPulse')
	.sect	'.debug_line'
.L209:
	.word	.L808-.L807
.L807:
	.half	3
	.word	.L810-.L809
.L809:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Service\\CpuGeneric\\StdIf\\IfxStdIf_Timer.h',0
	.byte	0,0,0,0
.L810:
	.byte	5,41,7,0,5,2
	.word	.L151
	.byte	3,158,1,1,5,54,9
	.half	.L811-.L151
	.byte	1,5,78,9
	.half	.L812-.L811
	.byte	1,5,102,9
	.half	.L813-.L812
	.byte	1,5,88,9
	.half	.L814-.L813
	.byte	1,4,2,5,12,9
	.half	.L361-.L814
	.byte	3,153,2,1,5,18,9
	.half	.L815-.L361
	.byte	1,5,5,9
	.half	.L816-.L815
	.byte	1,4,1,9
	.half	.L4-.L816
	.byte	3,231,125,1,5,1,9
	.half	.L5-.L4
	.byte	3,1,1,7,9
	.half	.L211-.L5
	.byte	0,1,1
.L808:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_getMinPulse')
	.sect	'.debug_ranges'
.L210:
	.word	-1,.L151,0,.L211-.L151,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_getMode')
	.sect	'.debug_info'
.L212:
	.word	266
	.half	3
	.word	.L213
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L215,.L214
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_getMode',0,1,163,1,14
	.word	.L364
	.byte	1,1,1
	.word	.L153,.L365,.L152
	.byte	4
	.byte	'driver',0,1,163,1,57
	.word	.L296,.L366
	.byte	5
	.word	.L153,.L365
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_getMode')
	.sect	'.debug_abbrev'
.L213:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_getMode')
	.sect	'.debug_line'
.L214:
	.word	.L818-.L817
.L817:
	.half	3
	.word	.L820-.L819
.L819:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L820:
	.byte	5,24,7,0,5,2
	.word	.L153
	.byte	3,164,1,1,5,5,9
	.half	.L821-.L153
	.byte	1,5,1,9
	.half	.L6-.L821
	.byte	3,1,1,7,9
	.half	.L216-.L6
	.byte	0,1,1
.L818:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_getMode')
	.sect	'.debug_ranges'
.L215:
	.word	-1,.L153,0,.L216-.L153,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_setDeadtime')
	.sect	'.debug_info'
.L217:
	.word	357
	.half	3
	.word	.L218
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L220,.L219
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_setDeadtime',0,1,175,2,9
	.word	.L294
	.byte	1,1,1
	.word	.L159,.L367,.L158
	.byte	4
	.byte	'driver',0,1,175,2,56
	.word	.L296,.L368
	.byte	4
	.byte	'deadtime',0,1,175,2,72
	.word	.L349,.L369
	.byte	5
	.word	.L159,.L367
	.byte	6
	.byte	'value',0,1,177,2,20
	.word	.L304,.L370
	.byte	7
	.word	.L371,.L372,.L38
	.byte	8
	.word	.L373,.L374
	.byte	8
	.word	.L375,.L376
	.byte	9
	.word	.L377,.L372,.L38
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_setDeadtime')
	.sect	'.debug_abbrev'
.L218:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_setDeadtime')
	.sect	'.debug_line'
.L219:
	.word	.L823-.L822
.L822:
	.half	3
	.word	.L825-.L824
.L824:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Service\\CpuGeneric\\StdIf\\IfxStdIf_Timer.h',0
	.byte	0,0,0,0
.L825:
	.byte	5,57,7,0,5,2
	.word	.L159
	.byte	3,176,2,1,5,70,9
	.half	.L826-.L159
	.byte	1,4,2,5,20,9
	.half	.L372-.L826
	.byte	3,146,1,1,5,5,9
	.half	.L827-.L372
	.byte	1,4,1,5,27,9
	.half	.L38-.L827
	.byte	3,239,126,1,5,12,9
	.half	.L828-.L38
	.byte	3,2,1,5,5,9
	.half	.L829-.L828
	.byte	1,5,1,9
	.half	.L39-.L829
	.byte	3,1,1,7,9
	.half	.L221-.L39
	.byte	0,1,1
.L823:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_setDeadtime')
	.sect	'.debug_ranges'
.L220:
	.word	-1,.L159,0,.L221-.L159,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_setMinPulse')
	.sect	'.debug_info'
.L222:
	.word	357
	.half	3
	.word	.L223
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L225,.L224
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_setMinPulse',0,1,184,2,9
	.word	.L294
	.byte	1,1,1
	.word	.L161,.L378,.L160
	.byte	4
	.byte	'driver',0,1,184,2,56
	.word	.L296,.L379
	.byte	4
	.byte	'minPulse',0,1,184,2,72
	.word	.L349,.L380
	.byte	5
	.word	.L161,.L378
	.byte	6
	.byte	'value',0,1,186,2,20
	.word	.L304,.L381
	.byte	7
	.word	.L371,.L382,.L40
	.byte	8
	.word	.L373,.L383
	.byte	8
	.word	.L375,.L384
	.byte	9
	.word	.L377,.L382,.L40
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_setMinPulse')
	.sect	'.debug_abbrev'
.L223:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_setMinPulse')
	.sect	'.debug_line'
.L224:
	.word	.L831-.L830
.L830:
	.half	3
	.word	.L833-.L832
.L832:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Service\\CpuGeneric\\StdIf\\IfxStdIf_Timer.h',0
	.byte	0,0,0,0
.L833:
	.byte	5,57,7,0,5,2
	.word	.L161
	.byte	3,185,2,1,5,70,9
	.half	.L834-.L161
	.byte	1,4,2,5,20,9
	.half	.L382-.L834
	.byte	3,137,1,1,5,5,9
	.half	.L835-.L382
	.byte	1,4,1,5,49,9
	.half	.L40-.L835
	.byte	3,249,126,1,5,35,9
	.half	.L836-.L40
	.byte	1,5,27,9
	.half	.L837-.L836
	.byte	1,5,35,9
	.half	.L838-.L837
	.byte	3,1,1,5,48,9
	.half	.L839-.L838
	.byte	1,5,70,9
	.half	.L840-.L839
	.byte	1,5,56,9
	.half	.L841-.L840
	.byte	1,5,27,9
	.half	.L842-.L841
	.byte	1,5,12,9
	.half	.L843-.L842
	.byte	3,2,1,5,5,9
	.half	.L844-.L843
	.byte	1,5,1,9
	.half	.L41-.L844
	.byte	3,1,1,7,9
	.half	.L226-.L41
	.byte	0,1,1
.L831:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_setMinPulse')
	.sect	'.debug_ranges'
.L225:
	.word	-1,.L161,0,.L226-.L161,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_setMode')
	.sect	'.debug_info'
.L227:
	.word	546
	.half	3
	.word	.L228
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L230,.L229
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_setMode',0,1,195,2,9
	.word	.L294
	.byte	1,1,1
	.word	.L163,.L385,.L162
	.byte	4
	.byte	'driver',0,1,195,2,52
	.word	.L296,.L386
	.byte	4
	.byte	'mode',0,1,195,2,73
	.word	.L364,.L387
	.byte	5
	.word	.L163,.L385
	.byte	6
	.byte	'result',0,1,197,2,28
	.word	.L294,.L388
	.byte	6
	.byte	'base',0,1,198,2,28
	.word	.L389,.L390
	.byte	5
	.word	.L48,.L42
	.byte	6
	.byte	'channelIndex',0,1,241,2,20
	.word	.L304,.L391
	.byte	5
	.word	.L50,.L392
	.byte	6
	.byte	'channel',0,1,245,2,31
	.word	.L311,.L393
	.byte	7
	.word	.L313,.L394,.L395
	.byte	8
	.word	.L316,.L396
	.byte	9
	.word	.L318,.L397
	.byte	0,7
	.word	.L313,.L398,.L52
	.byte	8
	.word	.L316,.L396
	.byte	0,7
	.word	.L313,.L399,.L400
	.byte	8
	.word	.L316,.L396
	.byte	0,7
	.word	.L313,.L401,.L59
	.byte	8
	.word	.L316,.L396
	.byte	9
	.word	.L318,.L402
	.byte	0,7
	.word	.L313,.L56,.L60
	.byte	8
	.word	.L316,.L396
	.byte	0,7
	.word	.L313,.L403,.L392
	.byte	8
	.word	.L316,.L396
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_setMode')
	.sect	'.debug_abbrev'
.L228:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,85
	.byte	6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_setMode')
	.sect	'.debug_line'
.L229:
	.word	.L846-.L845
.L845:
	.half	3
	.word	.L848-.L847
.L847:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L848:
	.byte	5,9,7,0,5,2
	.word	.L163
	.byte	3,194,2,1,5,35,9
	.half	.L535-.L163
	.byte	3,2,1,5,13,9
	.half	.L536-.L535
	.byte	3,3,1,5,5,9
	.half	.L849-.L536
	.byte	1,5,13,7,9
	.half	.L850-.L849
	.byte	3,2,1,5,65,7,9
	.half	.L851-.L850
	.byte	1,5,43,9
	.half	.L852-.L851
	.byte	1,5,65,9
	.half	.L853-.L852
	.byte	1,5,71,9
	.half	.L854-.L853
	.byte	1,5,79,9
	.half	.L855-.L854
	.byte	1,5,20,7,9
	.half	.L43-.L855
	.byte	3,2,1,9
	.half	.L856-.L43
	.byte	3,1,1,5,32,9
	.half	.L44-.L856
	.byte	3,5,1,5,56,9
	.half	.L857-.L44
	.byte	3,1,1,5,34,9
	.half	.L858-.L857
	.byte	1,5,56,9
	.half	.L859-.L858
	.byte	1,5,62,9
	.half	.L860-.L859
	.byte	1,5,32,9
	.half	.L861-.L860
	.byte	1,5,56,9
	.half	.L862-.L861
	.byte	3,1,1,5,34,9
	.half	.L863-.L862
	.byte	1,5,56,9
	.half	.L864-.L863
	.byte	1,5,62,9
	.half	.L865-.L864
	.byte	1,5,32,9
	.half	.L866-.L865
	.byte	1,5,56,9
	.half	.L867-.L866
	.byte	3,1,1,5,34,9
	.half	.L868-.L867
	.byte	1,5,56,9
	.half	.L869-.L868
	.byte	1,5,62,9
	.half	.L870-.L869
	.byte	1,5,32,9
	.half	.L871-.L870
	.byte	1,5,17,9
	.half	.L872-.L871
	.byte	3,2,1,5,9,9
	.half	.L873-.L872
	.byte	1,5,52,7,9
	.half	.L874-.L873
	.byte	3,2,1,5,30,9
	.half	.L875-.L874
	.byte	1,5,52,9
	.half	.L876-.L875
	.byte	1,5,58,9
	.half	.L877-.L876
	.byte	1,5,28,9
	.half	.L878-.L877
	.byte	1,5,67,9
	.half	.L879-.L878
	.byte	1,5,17,9
	.half	.L46-.L879
	.byte	3,6,1,5,9,9
	.half	.L880-.L46
	.byte	1,5,39,7,9
	.half	.L881-.L880
	.byte	3,2,1,5,31,9
	.half	.L882-.L881
	.byte	1,5,39,9
	.half	.L883-.L882
	.byte	3,1,1,5,31,9
	.half	.L884-.L883
	.byte	1,5,46,9
	.half	.L885-.L884
	.byte	3,127,1,5,39,9
	.half	.L47-.L885
	.byte	3,5,1,5,31,9
	.half	.L886-.L47
	.byte	1,5,39,9
	.half	.L887-.L886
	.byte	3,1,1,5,31,9
	.half	.L888-.L887
	.byte	1,9
	.half	.L48-.L888
	.byte	3,12,1,5,76,9
	.half	.L537-.L48
	.byte	1,5,38,9
	.half	.L50-.L537
	.byte	3,4,1,5,72,9
	.half	.L538-.L50
	.byte	3,1,1,5,68,9
	.half	.L889-.L538
	.byte	1,5,27,7,9
	.half	.L394-.L889
	.byte	3,1,1,5,21,9
	.half	.L395-.L394
	.byte	3,1,1,5,70,9
	.half	.L51-.L395
	.byte	1,5,12,9
	.half	.L398-.L51
	.byte	3,149,126,1,5,47,7,9
	.half	.L890-.L398
	.byte	1,5,70,9
	.half	.L891-.L890
	.byte	1,5,47,9
	.half	.L53-.L891
	.byte	1,5,5,9
	.half	.L54-.L53
	.byte	1,5,52,9
	.half	.L52-.L54
	.byte	3,233,1,1,5,21,9
	.half	.L399-.L52
	.byte	3,1,1,5,40,9
	.half	.L400-.L399
	.byte	3,3,1,5,72,9
	.half	.L539-.L400
	.byte	3,1,1,5,68,9
	.half	.L892-.L539
	.byte	1,5,70,7,9
	.half	.L893-.L892
	.byte	3,1,1,5,12,9
	.half	.L401-.L893
	.byte	3,145,126,1,5,47,7,9
	.half	.L894-.L401
	.byte	1,5,70,9
	.half	.L895-.L894
	.byte	1,5,47,9
	.half	.L57-.L895
	.byte	1,5,5,9
	.half	.L58-.L57
	.byte	1,5,21,9
	.half	.L59-.L58
	.byte	3,240,1,1,5,27,9
	.half	.L56-.L59
	.byte	1,5,52,9
	.half	.L60-.L56
	.byte	3,126,1,5,21,9
	.half	.L403-.L60
	.byte	3,1,1,5,90,9
	.half	.L392-.L403
	.byte	3,117,1,5,63,9
	.half	.L49-.L392
	.byte	1,5,76,9
	.half	.L896-.L49
	.byte	1,5,5,7,9
	.half	.L42-.L896
	.byte	3,17,1,5,1,9
	.half	.L61-.L42
	.byte	3,1,1,7,9
	.half	.L231-.L61
	.byte	0,1,1
.L846:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_setMode')
	.sect	'.debug_ranges'
.L230:
	.word	-1,.L163,0,.L231-.L163,0,0
.L397:
	.word	-1,.L163,.L394-.L163,.L395-.L163,.L398-.L163,.L52-.L163,.L399-.L163,.L400-.L163,0,0
.L402:
	.word	-1,.L163,.L401-.L163,.L59-.L163,.L56-.L163,.L60-.L163,.L403-.L163,.L392-.L163,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_setOnTime')
	.sect	'.debug_info'
.L232:
	.word	281
	.half	3
	.word	.L233
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L235,.L234
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_setOnTime',0,1,136,3,6,1,1,1
	.word	.L165,.L404,.L164
	.byte	4
	.byte	'driver',0,1,136,3,51
	.word	.L296,.L405
	.byte	4
	.byte	'tOn',0,1,136,3,75
	.word	.L406,.L407
	.byte	5
	.word	.L165,.L404
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_setOnTime')
	.sect	'.debug_abbrev'
.L233:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_setOnTime')
	.sect	'.debug_line'
.L234:
	.word	.L898-.L897
.L897:
	.half	3
	.word	.L900-.L899
.L899:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L900:
	.byte	5,11,7,0,5,2
	.word	.L165
	.byte	3,137,3,1,5,28,9
	.half	.L901-.L165
	.byte	1,5,1,9
	.half	.L541-.L901
	.byte	3,1,1,7,9
	.half	.L236-.L541
	.byte	0,1,1
.L898:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_setOnTime')
	.sect	'.debug_ranges'
.L235:
	.word	-1,.L165,0,.L236-.L165,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_setOnTimeAndShift')
	.sect	'.debug_info'
.L237:
	.word	308
	.half	3
	.word	.L238
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L240,.L239
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_setOnTimeAndShift',0,1,142,3,6,1,1,1
	.word	.L167,.L408,.L166
	.byte	4
	.byte	'driver',0,1,142,3,59
	.word	.L296,.L409
	.byte	4
	.byte	'tOn',0,1,142,3,83
	.word	.L406,.L410
	.byte	4
	.byte	'shift',0,1,142,3,104
	.word	.L406,.L411
	.byte	5
	.word	.L167,.L408
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_setOnTimeAndShift')
	.sect	'.debug_abbrev'
.L238:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_setOnTimeAndShift')
	.sect	'.debug_line'
.L239:
	.word	.L903-.L902
.L902:
	.half	3
	.word	.L905-.L904
.L904:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L905:
	.byte	5,11,7,0,5,2
	.word	.L167
	.byte	3,143,3,1,5,41,9
	.half	.L906-.L167
	.byte	1,5,1,9
	.half	.L542-.L906
	.byte	3,1,1,7,9
	.half	.L241-.L542
	.byte	0,1,1
.L903:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_setOnTimeAndShift')
	.sect	'.debug_ranges'
.L240:
	.word	-1,.L167,0,.L241-.L167,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_setPulse')
	.sect	'.debug_info'
.L242:
	.word	300
	.half	3
	.word	.L243
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L245,.L244
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_setPulse',0,1,148,3,6,1,1,1
	.word	.L169,.L412,.L168
	.byte	4
	.byte	'driver',0,1,148,3,50
	.word	.L296,.L413
	.byte	4
	.byte	'tOn',0,1,148,3,67
	.word	.L414,.L415
	.byte	4
	.byte	'offset',0,1,148,3,81
	.word	.L414,.L416
	.byte	5
	.word	.L169,.L412
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_setPulse')
	.sect	'.debug_abbrev'
.L243:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_setPulse')
	.sect	'.debug_line'
.L244:
	.word	.L908-.L907
.L907:
	.half	3
	.word	.L910-.L909
.L909:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L910:
	.byte	5,11,7,0,5,2
	.word	.L169
	.byte	3,149,3,1,5,38,9
	.half	.L911-.L169
	.byte	1,5,1,9
	.half	.L543-.L911
	.byte	3,1,1,7,9
	.half	.L246-.L543
	.byte	0,1,1
.L908:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_setPulse')
	.sect	'.debug_ranges'
.L245:
	.word	-1,.L169,0,.L246-.L169,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_setupChannels')
	.sect	'.debug_info'
.L247:
	.word	311
	.half	3
	.word	.L248
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L250,.L249
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_setupChannels',0,1,154,3,6,1,1,1
	.word	.L171,.L417,.L170
	.byte	4
	.byte	'driver',0,1,154,3,55
	.word	.L296,.L418
	.byte	4
	.byte	'activeCh',0,1,154,3,72
	.word	.L419,.L420
	.byte	4
	.byte	'stuckSt',0,1,154,3,91
	.word	.L419,.L421
	.byte	5
	.word	.L171,.L417
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_setupChannels')
	.sect	'.debug_abbrev'
.L248:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_setupChannels')
	.sect	'.debug_line'
.L249:
	.word	.L913-.L912
.L912:
	.half	3
	.word	.L915-.L914
.L914:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L915:
	.byte	5,5,7,0,5,2
	.word	.L171
	.byte	3,156,3,1,7,9
	.half	.L62-.L171
	.byte	3,1,1,7,9
	.half	.L63-.L62
	.byte	3,1,1,5,1,7,9
	.half	.L64-.L63
	.byte	3,1,1,7,9
	.half	.L251-.L64
	.byte	0,1,1
.L913:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_setupChannels')
	.sect	'.debug_ranges'
.L250:
	.word	-1,.L171,0,.L251-.L171,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_stdIfPwmHlInit')
	.sect	'.debug_info'
.L252:
	.word	292
	.half	3
	.word	.L253
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L255,.L254
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_stdIfPwmHlInit',0,1,163,3,9
	.word	.L294
	.byte	1,1,1
	.word	.L173,.L422,.L172
	.byte	4
	.byte	'stdif',0,1,163,3,57
	.word	.L423,.L424
	.byte	4
	.byte	'driver',0,1,163,3,82
	.word	.L296,.L425
	.byte	5
	.word	.L173,.L422
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_stdIfPwmHlInit')
	.sect	'.debug_abbrev'
.L253:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_stdIfPwmHlInit')
	.sect	'.debug_line'
.L254:
	.word	.L917-.L916
.L916:
	.half	3
	.word	.L919-.L918
.L918:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L919:
	.byte	5,9,7,0,5,2
	.word	.L173
	.byte	3,162,3,1,5,19,9
	.half	.L546-.L173
	.byte	3,3,1,5,22,9
	.half	.L920-.L546
	.byte	1,5,33,9
	.half	.L544-.L920
	.byte	3,4,1,5,35,9
	.half	.L921-.L544
	.byte	3,1,1,5,33,9
	.half	.L922-.L921
	.byte	1,5,35,9
	.half	.L923-.L922
	.byte	3,1,1,5,33,9
	.half	.L924-.L923
	.byte	1,5,35,9
	.half	.L925-.L924
	.byte	3,1,1,5,33,9
	.half	.L926-.L925
	.byte	1,5,35,9
	.half	.L927-.L926
	.byte	3,1,1,5,33,9
	.half	.L928-.L927
	.byte	1,5,35,9
	.half	.L929-.L928
	.byte	3,1,1,5,33,9
	.half	.L930-.L929
	.byte	1,5,35,9
	.half	.L931-.L930
	.byte	3,1,1,5,33,9
	.half	.L932-.L931
	.byte	1,5,35,9
	.half	.L933-.L932
	.byte	3,1,1,5,33,9
	.half	.L934-.L933
	.byte	1,5,35,9
	.half	.L935-.L934
	.byte	3,1,1,5,33,9
	.half	.L936-.L935
	.byte	1,5,35,9
	.half	.L937-.L936
	.byte	3,1,1,5,33,9
	.half	.L938-.L937
	.byte	1,5,35,9
	.half	.L939-.L938
	.byte	3,1,1,5,33,9
	.half	.L940-.L939
	.byte	1,5,43,9
	.half	.L941-.L940
	.byte	3,1,1,5,58,9
	.half	.L942-.L941
	.byte	1,5,12,9
	.half	.L943-.L942
	.byte	3,3,1,5,5,9
	.half	.L944-.L943
	.byte	1,5,1,9
	.half	.L65-.L944
	.byte	3,1,1,7,9
	.half	.L256-.L65
	.byte	0,1,1
.L917:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_stdIfPwmHlInit')
	.sect	'.debug_ranges'
.L255:
	.word	-1,.L173,0,.L256-.L173,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_updateAndShiftOff')
	.sect	'.debug_info'
.L257:
	.word	307
	.half	3
	.word	.L258
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L260,.L259
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_updateAndShiftOff',0,1,188,3,17,1,1
	.word	.L175,.L426,.L174
	.byte	4
	.byte	'driver',0,1,188,3,70
	.word	.L296,.L427
	.byte	4
	.byte	'tOn',0,1,188,3,94
	.word	.L406,.L428
	.byte	4
	.byte	'shift',0,1,188,3,115
	.word	.L406,.L429
	.byte	5
	.word	.L175,.L426
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_updateAndShiftOff')
	.sect	'.debug_abbrev'
.L258:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_updateAndShiftOff')
	.sect	'.debug_line'
.L259:
	.word	.L946-.L945
.L945:
	.half	3
	.word	.L948-.L947
.L947:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L948:
	.byte	5,5,7,0,5,2
	.word	.L175
	.byte	3,189,3,1,7,9
	.half	.L66-.L175
	.byte	3,1,1,5,40,7,9
	.half	.L67-.L66
	.byte	3,2,1,5,1,9
	.half	.L547-.L67
	.byte	3,1,1,7,9
	.half	.L261-.L547
	.byte	0,1,1
.L946:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_updateAndShiftOff')
	.sect	'.debug_ranges'
.L260:
	.word	-1,.L175,0,.L261-.L175,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_updateCenterAligned')
	.sect	'.debug_info'
.L262:
	.word	418
	.half	3
	.word	.L263
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L265,.L264
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_updateCenterAligned',0,1,197,3,17,1,1
	.word	.L177,.L430,.L176
	.byte	4
	.byte	'driver',0,1,197,3,72
	.word	.L296,.L431
	.byte	4
	.byte	'tOn',0,1,197,3,96
	.word	.L406,.L432
	.byte	5
	.word	.L177,.L430
	.byte	6
	.byte	'channelIndex',0,1,199,3,20
	.word	.L294,.L433
	.byte	6
	.byte	'period',0,1,200,3,20
	.word	.L304,.L434
	.byte	6
	.byte	'deadtime',0,1,201,3,20
	.word	.L304,.L435
	.byte	5
	.word	.L69,.L78
	.byte	6
	.byte	'x',0,1,207,3,24
	.word	.L304,.L436
	.byte	6
	.byte	'cm0',0,1,208,3,24
	.word	.L304,.L437
	.byte	6
	.byte	'cm1',0,1,208,3,29
	.word	.L304,.L438
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_updateCenterAligned')
	.sect	'.debug_abbrev'
.L263:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_updateCenterAligned')
	.sect	'.debug_line'
.L264:
	.word	.L950-.L949
.L949:
	.half	3
	.word	.L952-.L951
.L951:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L952:
	.byte	5,17,7,0,5,2
	.word	.L177
	.byte	3,196,3,1,5,43,9
	.half	.L550-.L177
	.byte	3,4,1,5,20,9
	.half	.L551-.L550
	.byte	3,2,1,5,33,9
	.half	.L953-.L551
	.byte	1,5,23,9
	.half	.L552-.L953
	.byte	3,2,1,5,68,9
	.half	.L553-.L552
	.byte	1,5,16,9
	.half	.L69-.L553
	.byte	3,4,1,5,25,9
	.half	.L555-.L69
	.byte	3,2,1,5,9,9
	.half	.L954-.L555
	.byte	1,5,24,7,9
	.half	.L955-.L954
	.byte	3,2,1,5,27,9
	.half	.L956-.L955
	.byte	1,5,30,9
	.half	.L71-.L956
	.byte	3,5,1,5,13,9
	.half	.L957-.L71
	.byte	1,5,47,7,9
	.half	.L958-.L957
	.byte	1,5,15,7,9
	.half	.L72-.L958
	.byte	3,2,1,5,18,9
	.half	.L959-.L72
	.byte	1,5,34,9
	.half	.L73-.L959
	.byte	3,2,1,5,14,9
	.half	.L960-.L73
	.byte	1,5,15,7,9
	.half	.L961-.L960
	.byte	3,2,1,5,23,9
	.half	.L962-.L961
	.byte	1,5,9,9
	.half	.L74-.L962
	.byte	3,6,1,5,50,7,9
	.half	.L963-.L74
	.byte	3,2,1,5,63,9
	.half	.L964-.L963
	.byte	1,5,72,9
	.half	.L965-.L964
	.byte	1,5,24,9
	.half	.L966-.L965
	.byte	3,1,1,5,69,9
	.half	.L967-.L966
	.byte	3,1,1,5,50,9
	.half	.L556-.L967
	.byte	3,1,1,5,63,9
	.half	.L968-.L556
	.byte	1,5,74,9
	.half	.L969-.L968
	.byte	1,5,24,9
	.half	.L970-.L969
	.byte	3,1,1,5,17,9
	.half	.L971-.L970
	.byte	3,1,1,5,80,9
	.half	.L972-.L971
	.byte	3,125,1,5,14,9
	.half	.L77-.L972
	.byte	3,5,1,5,17,7,9
	.half	.L973-.L77
	.byte	3,2,1,5,26,9
	.half	.L558-.L973
	.byte	3,1,1,5,50,9
	.half	.L559-.L558
	.byte	3,1,1,5,63,9
	.half	.L974-.L559
	.byte	1,5,72,9
	.half	.L975-.L974
	.byte	1,5,93,9
	.half	.L976-.L975
	.byte	1,5,50,9
	.half	.L557-.L976
	.byte	3,1,1,5,63,9
	.half	.L977-.L557
	.byte	1,5,74,9
	.half	.L978-.L977
	.byte	1,5,94,9
	.half	.L979-.L978
	.byte	1,5,106,9
	.half	.L980-.L979
	.byte	1,5,20,9
	.half	.L563-.L980
	.byte	3,125,1,5,27,9
	.half	.L79-.L563
	.byte	3,7,1,5,32,9
	.half	.L981-.L79
	.byte	1,5,27,9
	.half	.L565-.L981
	.byte	3,1,1,5,32,9
	.half	.L564-.L565
	.byte	1,5,50,9
	.half	.L566-.L564
	.byte	3,1,1,5,63,9
	.half	.L982-.L566
	.byte	1,5,72,9
	.half	.L983-.L982
	.byte	1,5,97,9
	.half	.L984-.L983
	.byte	1,5,50,9
	.half	.L568-.L984
	.byte	3,1,1,5,63,9
	.half	.L985-.L568
	.byte	1,5,74,9
	.half	.L986-.L985
	.byte	1,5,94,9
	.half	.L987-.L986
	.byte	1,5,106,9
	.half	.L988-.L987
	.byte	1,5,82,9
	.half	.L78-.L988
	.byte	3,82,1,5,55,9
	.half	.L68-.L78
	.byte	1,5,68,9
	.half	.L989-.L68
	.byte	1,5,1,7,9
	.half	.L990-.L989
	.byte	3,49,1,7,9
	.half	.L266-.L990
	.byte	0,1,1
.L950:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_updateCenterAligned')
	.sect	'.debug_ranges'
.L265:
	.word	-1,.L177,0,.L266-.L177,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_updateEdgeAligned')
	.sect	'.debug_info'
.L267:
	.word	416
	.half	3
	.word	.L268
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L270,.L269
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_updateEdgeAligned',0,1,129,4,17,1,1
	.word	.L179,.L439,.L178
	.byte	4
	.byte	'driver',0,1,129,4,70
	.word	.L296,.L440
	.byte	4
	.byte	'tOn',0,1,129,4,94
	.word	.L406,.L441
	.byte	5
	.word	.L179,.L439
	.byte	6
	.byte	'channelIndex',0,1,131,4,20
	.word	.L294,.L442
	.byte	6
	.byte	'period',0,1,132,4,20
	.word	.L304,.L443
	.byte	6
	.byte	'deadtime',0,1,133,4,20
	.word	.L304,.L444
	.byte	5
	.word	.L82,.L91
	.byte	6
	.byte	'x',0,1,139,4,24
	.word	.L304,.L445
	.byte	6
	.byte	'cm0',0,1,140,4,24
	.word	.L304,.L446
	.byte	6
	.byte	'cm1',0,1,140,4,29
	.word	.L304,.L447
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_updateEdgeAligned')
	.sect	'.debug_abbrev'
.L268:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_updateEdgeAligned')
	.sect	'.debug_line'
.L269:
	.word	.L992-.L991
.L991:
	.half	3
	.word	.L994-.L993
.L993:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L994:
	.byte	5,17,7,0,5,2
	.word	.L179
	.byte	3,128,4,1,5,43,9
	.half	.L571-.L179
	.byte	3,4,1,5,20,9
	.half	.L572-.L571
	.byte	3,2,1,5,33,9
	.half	.L995-.L572
	.byte	1,5,23,9
	.half	.L573-.L995
	.byte	3,2,1,5,68,9
	.half	.L574-.L573
	.byte	1,5,16,9
	.half	.L82-.L574
	.byte	3,4,1,5,25,9
	.half	.L576-.L82
	.byte	3,2,1,5,9,9
	.half	.L996-.L576
	.byte	1,5,24,7,9
	.half	.L997-.L996
	.byte	3,2,1,5,27,9
	.half	.L998-.L997
	.byte	1,5,30,9
	.half	.L84-.L998
	.byte	3,5,1,5,13,9
	.half	.L999-.L84
	.byte	1,5,47,7,9
	.half	.L1000-.L999
	.byte	1,5,15,7,9
	.half	.L85-.L1000
	.byte	3,2,1,5,18,9
	.half	.L1001-.L85
	.byte	1,5,34,9
	.half	.L86-.L1001
	.byte	3,2,1,5,14,9
	.half	.L1002-.L86
	.byte	1,5,15,7,9
	.half	.L1003-.L1002
	.byte	3,2,1,5,23,9
	.half	.L1004-.L1003
	.byte	1,5,9,9
	.half	.L87-.L1004
	.byte	3,6,1,5,50,7,9
	.half	.L1005-.L87
	.byte	3,2,1,5,63,9
	.half	.L1006-.L1005
	.byte	1,5,72,9
	.half	.L1007-.L1006
	.byte	1,5,24,9
	.half	.L1008-.L1007
	.byte	3,1,1,5,69,9
	.half	.L1009-.L1008
	.byte	3,1,1,5,50,9
	.half	.L1010-.L1009
	.byte	3,1,1,5,63,9
	.half	.L1011-.L1010
	.byte	1,5,74,9
	.half	.L1012-.L1011
	.byte	1,5,24,9
	.half	.L1013-.L1012
	.byte	3,1,1,5,17,9
	.half	.L1014-.L1013
	.byte	3,1,1,5,80,9
	.half	.L1015-.L1014
	.byte	3,125,1,5,14,9
	.half	.L90-.L1015
	.byte	3,5,1,5,17,7,9
	.half	.L1016-.L90
	.byte	3,2,1,5,26,9
	.half	.L577-.L1016
	.byte	3,1,1,5,50,9
	.half	.L578-.L577
	.byte	3,1,1,5,63,9
	.half	.L1017-.L578
	.byte	1,5,72,9
	.half	.L1018-.L1017
	.byte	1,5,93,9
	.half	.L1019-.L1018
	.byte	1,5,50,9
	.half	.L580-.L1019
	.byte	3,1,1,5,63,9
	.half	.L1020-.L580
	.byte	1,5,74,9
	.half	.L1021-.L1020
	.byte	1,5,94,9
	.half	.L1022-.L1021
	.byte	1,5,106,9
	.half	.L1023-.L1022
	.byte	1,5,20,9
	.half	.L583-.L1023
	.byte	3,125,1,5,17,9
	.half	.L92-.L583
	.byte	3,7,1,5,50,9
	.half	.L584-.L92
	.byte	3,2,1,5,63,9
	.half	.L1024-.L584
	.byte	1,5,72,9
	.half	.L1025-.L1024
	.byte	1,5,97,9
	.half	.L1026-.L1025
	.byte	1,5,50,9
	.half	.L586-.L1026
	.byte	3,1,1,5,63,9
	.half	.L1027-.L586
	.byte	1,5,74,9
	.half	.L1028-.L1027
	.byte	1,5,94,9
	.half	.L1029-.L1028
	.byte	1,5,106,9
	.half	.L1030-.L1029
	.byte	1,5,82,9
	.half	.L91-.L1030
	.byte	3,82,1,5,55,9
	.half	.L81-.L91
	.byte	1,5,68,9
	.half	.L1031-.L81
	.byte	1,5,1,7,9
	.half	.L1032-.L1031
	.byte	3,49,1,7,9
	.half	.L271-.L1032
	.byte	0,1,1
.L992:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_updateEdgeAligned')
	.sect	'.debug_ranges'
.L270:
	.word	-1,.L179,0,.L271-.L179,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_updateOff')
	.sect	'.debug_info'
.L272:
	.word	337
	.half	3
	.word	.L273
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L275,.L274
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_updateOff',0,1,189,4,17,1,1
	.word	.L181,.L448,.L180
	.byte	4
	.byte	'driver',0,1,189,4,62
	.word	.L296,.L449
	.byte	4
	.byte	'tOn',0,1,189,4,86
	.word	.L406,.L450
	.byte	5
	.word	.L181,.L448
	.byte	5
	.word	.L94,.L448
	.byte	6
	.byte	'channelIndex',0,1,192,4,11
	.word	.L294,.L451
	.byte	6
	.byte	'period',0,1,193,4,20
	.word	.L304,.L452
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_updateOff')
	.sect	'.debug_abbrev'
.L273:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_updateOff')
	.sect	'.debug_line'
.L274:
	.word	.L1034-.L1033
.L1033:
	.half	3
	.word	.L1036-.L1035
.L1035:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L1036:
	.byte	5,17,7,0,5,2
	.word	.L181
	.byte	3,188,4,1,5,5,9
	.half	.L588-.L181
	.byte	3,2,1,5,20,7,9
	.half	.L94-.L588
	.byte	3,4,1,5,33,9
	.half	.L1037-.L94
	.byte	1,5,23,9
	.half	.L589-.L1037
	.byte	3,2,1,5,68,9
	.half	.L590-.L589
	.byte	1,5,46,9
	.half	.L96-.L590
	.byte	3,2,1,5,59,9
	.half	.L1038-.L96
	.byte	1,5,68,9
	.half	.L1039-.L1038
	.byte	1,5,13,9
	.half	.L1040-.L1039
	.byte	3,1,1,5,60,9
	.half	.L1041-.L1040
	.byte	1,5,46,9
	.half	.L1042-.L1041
	.byte	3,1,1,5,59,9
	.half	.L1043-.L1042
	.byte	1,5,70,9
	.half	.L1044-.L1043
	.byte	1,5,93,9
	.half	.L1045-.L1044
	.byte	1,5,98,9
	.half	.L1046-.L1045
	.byte	1,5,82,9
	.half	.L1047-.L1046
	.byte	3,124,1,5,55,9
	.half	.L95-.L1047
	.byte	1,5,68,9
	.half	.L1048-.L95
	.byte	1,5,1,7,9
	.half	.L1049-.L1048
	.byte	3,6,1,7,9
	.half	.L276-.L1049
	.byte	0,1,1
.L1034:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_updateOff')
	.sect	'.debug_ranges'
.L275:
	.word	-1,.L181,0,.L276-.L181,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_updatePulse')
	.sect	'.debug_info'
.L277:
	.word	677
	.half	3
	.word	.L278
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L280,.L279
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_updatePulse',0,1,206,4,17,1,1
	.word	.L183,.L453,.L182
	.byte	4
	.byte	'driver',0,1,206,4,64
	.word	.L296,.L454
	.byte	4
	.byte	'tOn',0,1,206,4,81
	.word	.L414,.L455
	.byte	4
	.byte	'offset',0,1,206,4,95
	.word	.L414,.L456
	.byte	5
	.word	.L183,.L453
	.byte	6
	.byte	'channelIndex',0,1,208,4,20
	.word	.L294,.L457
	.byte	6
	.byte	'period',0,1,209,4,20
	.word	.L304,.L458
	.byte	5
	.word	.L98,.L110
	.byte	6
	.byte	'x',0,1,216,4,24
	.word	.L304,.L459
	.byte	6
	.byte	'o',0,1,217,4,24
	.word	.L304,.L460
	.byte	6
	.byte	'cm0',0,1,218,4,24
	.word	.L304,.L461
	.byte	6
	.byte	'cm1',0,1,218,4,29
	.word	.L304,.L462
	.byte	7
	.word	.L371,.L463,.L99
	.byte	8
	.word	.L373,.L464
	.byte	8
	.word	.L375,.L465
	.byte	9
	.word	.L377,.L463,.L99
	.byte	0,7
	.word	.L371,.L466,.L100
	.byte	8
	.word	.L373,.L464
	.byte	8
	.word	.L375,.L465
	.byte	9
	.word	.L377,.L466,.L100
	.byte	0,0,5
	.word	.L114,.L124
	.byte	6
	.byte	'x',0,1,137,5,24
	.word	.L304,.L467
	.byte	6
	.byte	'o',0,1,138,5,24
	.word	.L304,.L468
	.byte	6
	.byte	'cm0',0,1,139,5,24
	.word	.L304,.L469
	.byte	6
	.byte	'cm1',0,1,139,5,29
	.word	.L304,.L470
	.byte	7
	.word	.L371,.L471,.L115
	.byte	8
	.word	.L373,.L464
	.byte	8
	.word	.L375,.L465
	.byte	9
	.word	.L377,.L471,.L115
	.byte	0,7
	.word	.L371,.L472,.L116
	.byte	8
	.word	.L373,.L464
	.byte	8
	.word	.L375,.L465
	.byte	9
	.word	.L377,.L472,.L116
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_updatePulse')
	.sect	'.debug_abbrev'
.L278:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18,1,0,0
	.byte	0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_updatePulse')
	.sect	'.debug_line'
.L279:
	.word	.L1051-.L1050
.L1050:
	.half	3
	.word	.L1053-.L1052
.L1052:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Service\\CpuGeneric\\StdIf\\IfxStdIf_Timer.h',0
	.byte	0,0,0,0
.L1053:
	.byte	5,17,7,0,5,2
	.word	.L183
	.byte	3,205,4,1,5,20,9
	.half	.L594-.L183
	.byte	3,5,1,5,33,9
	.half	.L1054-.L594
	.byte	1,5,23,9
	.half	.L595-.L1054
	.byte	3,3,1,5,68,9
	.half	.L596-.L595
	.byte	1,5,42,9
	.half	.L98-.L596
	.byte	3,6,1,5,55,9
	.half	.L1055-.L98
	.byte	1,5,70,9
	.half	.L1056-.L1055
	.byte	1,4,2,5,20,9
	.half	.L463-.L1056
	.byte	3,231,126,1,5,5,9
	.half	.L598-.L463
	.byte	1,4,1,5,42,9
	.half	.L99-.L598
	.byte	3,154,1,1,5,55,9
	.half	.L1057-.L99
	.byte	1,5,73,9
	.half	.L1058-.L1057
	.byte	1,4,2,5,20,9
	.half	.L466-.L1058
	.byte	3,230,126,1,5,5,9
	.half	.L1059-.L466
	.byte	1,4,1,5,25,9
	.half	.L100-.L1059
	.byte	3,156,1,1,5,9,9
	.half	.L1060-.L100
	.byte	1,5,24,7,9
	.half	.L1061-.L1060
	.byte	3,2,1,5,27,9
	.half	.L1062-.L1061
	.byte	1,5,30,9
	.half	.L102-.L1062
	.byte	3,5,1,5,13,9
	.half	.L1063-.L102
	.byte	1,5,47,7,9
	.half	.L1064-.L1063
	.byte	1,5,15,7,9
	.half	.L103-.L1064
	.byte	3,2,1,5,18,9
	.half	.L1065-.L103
	.byte	1,5,35,9
	.half	.L104-.L1065
	.byte	3,2,1,5,18,9
	.half	.L1066-.L104
	.byte	1,5,52,7,9
	.half	.L1067-.L1066
	.byte	1,5,56,9
	.half	.L1068-.L1067
	.byte	1,5,15,7,9
	.half	.L106-.L1068
	.byte	3,2,1,5,23,9
	.half	.L1069-.L106
	.byte	1,5,9,9
	.half	.L105-.L1069
	.byte	3,6,1,5,50,7,9
	.half	.L1070-.L105
	.byte	3,2,1,5,63,9
	.half	.L1071-.L1070
	.byte	1,5,72,9
	.half	.L1072-.L1071
	.byte	1,5,24,9
	.half	.L1073-.L1072
	.byte	3,1,1,5,17,9
	.half	.L599-.L1073
	.byte	3,1,1,5,68,9
	.half	.L1074-.L599
	.byte	1,5,14,9
	.half	.L109-.L1074
	.byte	3,2,1,5,17,7,9
	.half	.L1075-.L109
	.byte	3,2,1,5,26,9
	.half	.L600-.L1075
	.byte	3,1,1,5,50,9
	.half	.L602-.L600
	.byte	3,1,1,5,63,9
	.half	.L1076-.L602
	.byte	1,5,72,9
	.half	.L1077-.L1076
	.byte	1,5,93,9
	.half	.L1078-.L1077
	.byte	1,5,20,9
	.half	.L601-.L1078
	.byte	3,126,1,5,21,9
	.half	.L111-.L601
	.byte	3,6,1,9
	.half	.L604-.L111
	.byte	3,1,1,5,50,9
	.half	.L603-.L604
	.byte	3,1,1,5,63,9
	.half	.L1079-.L603
	.byte	1,5,72,9
	.half	.L1080-.L1079
	.byte	1,5,93,9
	.half	.L1081-.L1080
	.byte	1,5,82,9
	.half	.L110-.L1081
	.byte	3,84,1,5,55,9
	.half	.L97-.L110
	.byte	1,5,68,9
	.half	.L1082-.L97
	.byte	1,5,23,7,9
	.half	.L1083-.L1082
	.byte	3,49,1,5,68,9
	.half	.L1084-.L1083
	.byte	1,5,42,9
	.half	.L114-.L1084
	.byte	3,6,1,5,55,9
	.half	.L1085-.L114
	.byte	1,5,98,9
	.half	.L1086-.L1085
	.byte	1,5,84,9
	.half	.L1087-.L1086
	.byte	1,5,70,9
	.half	.L1088-.L1087
	.byte	1,4,2,5,20,9
	.half	.L471-.L1088
	.byte	3,182,126,1,5,5,9
	.half	.L606-.L471
	.byte	1,4,1,5,42,9
	.half	.L115-.L606
	.byte	3,203,1,1,5,55,9
	.half	.L1089-.L115
	.byte	1,5,101,9
	.half	.L1090-.L1089
	.byte	1,5,87,9
	.half	.L1091-.L1090
	.byte	1,5,73,9
	.half	.L1092-.L1091
	.byte	1,4,2,5,20,9
	.half	.L472-.L1092
	.byte	3,181,126,1,5,5,9
	.half	.L1093-.L472
	.byte	1,4,1,5,25,9
	.half	.L116-.L1093
	.byte	3,205,1,1,5,9,9
	.half	.L1094-.L116
	.byte	1,5,24,7,9
	.half	.L1095-.L1094
	.byte	3,2,1,5,27,9
	.half	.L1096-.L1095
	.byte	1,5,29,9
	.half	.L118-.L1096
	.byte	3,5,1,5,9,9
	.half	.L1097-.L118
	.byte	1,5,15,7,9
	.half	.L1098-.L1097
	.byte	3,2,1,5,18,9
	.half	.L1099-.L1098
	.byte	1,5,34,9
	.half	.L119-.L1099
	.byte	3,2,1,5,14,9
	.half	.L1100-.L119
	.byte	1,5,15,7,9
	.half	.L1101-.L1100
	.byte	3,2,1,5,23,9
	.half	.L1102-.L1101
	.byte	1,5,9,9
	.half	.L120-.L1102
	.byte	3,6,1,5,50,7,9
	.half	.L1103-.L120
	.byte	3,2,1,5,63,9
	.half	.L1104-.L1103
	.byte	1,5,74,9
	.half	.L1105-.L1104
	.byte	1,5,24,9
	.half	.L1106-.L1105
	.byte	3,1,1,5,17,9
	.half	.L607-.L1106
	.byte	3,1,1,5,68,9
	.half	.L1107-.L607
	.byte	1,5,14,9
	.half	.L123-.L1107
	.byte	3,2,1,5,17,7,9
	.half	.L1108-.L123
	.byte	3,2,1,5,26,9
	.half	.L608-.L1108
	.byte	3,1,1,5,50,9
	.half	.L610-.L608
	.byte	3,1,1,5,63,9
	.half	.L1109-.L610
	.byte	1,5,74,9
	.half	.L1110-.L1109
	.byte	1,5,95,9
	.half	.L1111-.L1110
	.byte	1,5,20,9
	.half	.L609-.L1111
	.byte	3,126,1,5,21,9
	.half	.L125-.L609
	.byte	3,6,1,9
	.half	.L612-.L125
	.byte	3,1,1,5,50,9
	.half	.L611-.L612
	.byte	3,1,1,5,63,9
	.half	.L1112-.L611
	.byte	1,5,74,9
	.half	.L1113-.L1112
	.byte	1,5,95,9
	.half	.L1114-.L1113
	.byte	1,5,82,9
	.half	.L124-.L1114
	.byte	3,84,1,5,55,9
	.half	.L113-.L124
	.byte	1,5,68,9
	.half	.L1115-.L113
	.byte	1,5,1,7,9
	.half	.L1116-.L1115
	.byte	3,47,1,7,9
	.half	.L281-.L1116
	.byte	0,1,1
.L1051:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_updatePulse')
	.sect	'.debug_ranges'
.L280:
	.word	-1,.L183,0,.L281-.L183,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_updatePulseOff')
	.sect	'.debug_info'
.L282:
	.word	305
	.half	3
	.word	.L283
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L285,.L284
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_updatePulseOff',0,1,185,5,17,1,1
	.word	.L185,.L473,.L184
	.byte	4
	.byte	'driver',0,1,185,5,67
	.word	.L296,.L474
	.byte	4
	.byte	'tOn',0,1,185,5,84
	.word	.L414,.L475
	.byte	4
	.byte	'offset',0,1,185,5,98
	.word	.L414,.L476
	.byte	5
	.word	.L185,.L473
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_updatePulseOff')
	.sect	'.debug_abbrev'
.L283:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_updatePulseOff')
	.sect	'.debug_line'
.L284:
	.word	.L1118-.L1117
.L1117:
	.half	3
	.word	.L1120-.L1119
.L1119:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L1120:
	.byte	5,5,7,0,5,2
	.word	.L185
	.byte	3,186,5,1,7,9
	.half	.L127-.L185
	.byte	3,1,1,5,40,7,9
	.half	.L128-.L127
	.byte	3,1,1,5,1,9
	.half	.L613-.L128
	.byte	3,1,1,7,9
	.half	.L286-.L613
	.byte	0,1,1
.L1118:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_updatePulseOff')
	.sect	'.debug_ranges'
.L285:
	.word	-1,.L185,0,.L286-.L185,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_updateShiftCenterAligned')
	.sect	'.debug_info'
.L287:
	.word	457
	.half	3
	.word	.L288
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L290,.L289
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_updateShiftCenterAligned',0,1,193,5,17,1,1
	.word	.L187,.L477,.L186
	.byte	4
	.byte	'driver',0,1,193,5,77
	.word	.L296,.L478
	.byte	4
	.byte	'tOn',0,1,193,5,101
	.word	.L406,.L479
	.byte	4
	.byte	'shift',0,1,193,5,122
	.word	.L406,.L480
	.byte	5
	.word	.L187,.L477
	.byte	6
	.byte	'channelIndex',0,1,195,5,20
	.word	.L294,.L481
	.byte	6
	.byte	'period',0,1,196,5,20
	.word	.L304,.L482
	.byte	6
	.byte	'deadtime',0,1,197,5,20
	.word	.L304,.L483
	.byte	5
	.word	.L130,.L139
	.byte	6
	.byte	'x',0,1,203,5,24
	.word	.L304,.L484
	.byte	6
	.byte	's',0,1,204,5,24
	.word	.L304,.L485
	.byte	6
	.byte	'cm0',0,1,205,5,24
	.word	.L304,.L486
	.byte	6
	.byte	'cm1',0,1,205,5,29
	.word	.L304,.L487
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_updateShiftCenterAligned')
	.sect	'.debug_abbrev'
.L288:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_updateShiftCenterAligned')
	.sect	'.debug_line'
.L289:
	.word	.L1122-.L1121
.L1121:
	.half	3
	.word	.L1124-.L1123
.L1123:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L1124:
	.byte	5,17,7,0,5,2
	.word	.L187
	.byte	3,192,5,1,5,43,9
	.half	.L617-.L187
	.byte	3,4,1,5,20,9
	.half	.L618-.L617
	.byte	3,2,1,5,33,9
	.half	.L1125-.L618
	.byte	1,5,23,9
	.half	.L619-.L1125
	.byte	3,2,1,5,68,9
	.half	.L620-.L619
	.byte	1,5,16,9
	.half	.L130-.L620
	.byte	3,5,1,5,25,9
	.half	.L622-.L130
	.byte	3,2,1,5,9,9
	.half	.L1126-.L622
	.byte	1,5,24,7,9
	.half	.L1127-.L1126
	.byte	3,2,1,5,27,9
	.half	.L1128-.L1127
	.byte	1,5,30,9
	.half	.L132-.L1128
	.byte	3,5,1,5,13,9
	.half	.L1129-.L132
	.byte	1,5,47,7,9
	.half	.L1130-.L1129
	.byte	1,5,15,7,9
	.half	.L133-.L1130
	.byte	3,2,1,5,18,9
	.half	.L1131-.L133
	.byte	1,5,34,9
	.half	.L134-.L1131
	.byte	3,2,1,5,14,9
	.half	.L1132-.L134
	.byte	1,5,15,7,9
	.half	.L1133-.L1132
	.byte	3,2,1,5,23,9
	.half	.L1134-.L1133
	.byte	1,5,9,9
	.half	.L135-.L1134
	.byte	3,6,1,5,50,7,9
	.half	.L1135-.L135
	.byte	3,2,1,5,63,9
	.half	.L1136-.L1135
	.byte	1,5,72,9
	.half	.L1137-.L1136
	.byte	1,5,24,9
	.half	.L1138-.L1137
	.byte	3,1,1,5,68,9
	.half	.L1139-.L1138
	.byte	3,1,1,5,50,9
	.half	.L623-.L1139
	.byte	3,1,1,5,63,9
	.half	.L1140-.L623
	.byte	1,5,74,9
	.half	.L1141-.L1140
	.byte	1,5,24,9
	.half	.L1142-.L1141
	.byte	3,1,1,5,17,9
	.half	.L1143-.L1142
	.byte	3,1,1,5,79,9
	.half	.L1144-.L1143
	.byte	3,125,1,5,14,9
	.half	.L138-.L1144
	.byte	3,5,1,5,17,7,9
	.half	.L1145-.L138
	.byte	3,2,1,5,26,9
	.half	.L625-.L1145
	.byte	3,1,1,5,50,9
	.half	.L626-.L625
	.byte	3,1,1,5,63,9
	.half	.L1146-.L626
	.byte	1,5,72,9
	.half	.L1147-.L1146
	.byte	1,5,93,9
	.half	.L1148-.L1147
	.byte	1,5,50,9
	.half	.L624-.L1148
	.byte	3,1,1,5,63,9
	.half	.L1149-.L624
	.byte	1,5,74,9
	.half	.L1150-.L1149
	.byte	1,5,94,9
	.half	.L1151-.L1150
	.byte	1,5,106,9
	.half	.L1152-.L1151
	.byte	1,5,20,9
	.half	.L630-.L1152
	.byte	3,125,1,5,22,9
	.half	.L140-.L630
	.byte	3,7,1,5,13,9
	.half	.L632-.L140
	.byte	3,2,1,5,21,7,9
	.half	.L1153-.L632
	.byte	3,2,1,5,52,9
	.half	.L144-.L1153
	.byte	1,5,21,9
	.half	.L142-.L144
	.byte	3,4,1,5,31,9
	.half	.L145-.L142
	.byte	3,3,1,5,36,9
	.half	.L1154-.L145
	.byte	1,5,21,9
	.half	.L1155-.L1154
	.byte	1,5,31,9
	.half	.L635-.L1155
	.byte	3,1,1,5,36,9
	.half	.L631-.L635
	.byte	1,5,21,9
	.half	.L636-.L631
	.byte	1,5,50,9
	.half	.L634-.L636
	.byte	3,1,1,5,63,9
	.half	.L1156-.L634
	.byte	1,5,72,9
	.half	.L1157-.L1156
	.byte	1,5,97,9
	.half	.L1158-.L1157
	.byte	1,5,50,9
	.half	.L638-.L1158
	.byte	3,1,1,5,63,9
	.half	.L1159-.L638
	.byte	1,5,74,9
	.half	.L1160-.L1159
	.byte	1,5,94,9
	.half	.L1161-.L1160
	.byte	1,5,106,9
	.half	.L1162-.L1161
	.byte	1,5,82,9
	.half	.L139-.L1162
	.byte	3,70,1,5,55,9
	.half	.L129-.L139
	.byte	1,5,68,9
	.half	.L1163-.L129
	.byte	1,5,1,7,9
	.half	.L1164-.L1163
	.byte	3,61,1,7,9
	.half	.L291-.L1164
	.byte	0,1,1
.L1122:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_updateShiftCenterAligned')
	.sect	'.debug_ranges'
.L290:
	.word	-1,.L187,0,.L291-.L187,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_modes')
	.sect	'.debug_info'
.L292:
	.word	217
	.half	3
	.word	.L293
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1,2
	.word	.L188
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_modes',0,12,129,1,44
	.word	.L488
	.byte	5,3
	.word	IfxGtm_Tom_PwmHl_modes
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_modes')
	.sect	'.debug_abbrev'
.L293:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_getDeadtime')
	.sect	'.debug_loc'
.L148:
	.word	-1,.L149,0,.L350-.L149
	.half	2
	.byte	138,0
	.word	0,0
.L355:
	.word	0,0
.L351:
	.word	-1,.L149,0,.L350-.L149
	.half	1
	.byte	100
	.word	0,0
.L357:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_getMinPulse')
	.sect	'.debug_loc'
.L150:
	.word	-1,.L151,0,.L359-.L151
	.half	2
	.byte	138,0
	.word	0,0
.L362:
	.word	0,0
.L360:
	.word	-1,.L151,0,.L359-.L151
	.half	1
	.byte	100
	.word	0,0
.L363:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_getMode')
	.sect	'.debug_loc'
.L152:
	.word	-1,.L153,0,.L365-.L153
	.half	2
	.byte	138,0
	.word	0,0
.L366:
	.word	-1,.L153,0,.L365-.L153
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_init')
	.sect	'.debug_loc'
.L154:
	.word	-1,.L155,0,.L489-.L155
	.half	2
	.byte	138,0
	.word	.L489-.L155,.L295-.L155
	.half	2
	.byte	138,16
	.word	.L295-.L155,.L295-.L155
	.half	2
	.byte	138,0
	.word	0,0
.L336:
	.word	0,0
.L317:
	.word	0,0
.L312:
	.word	-1,.L155,.L503-.L155,.L11-.L155
	.half	1
	.byte	93
	.word	.L321-.L155,.L322-.L155
	.half	1
	.byte	84
	.word	.L327-.L155,.L328-.L155
	.half	1
	.byte	84
	.word	.L509-.L155,.L510-.L155
	.half	1
	.byte	84
	.word	.L511-.L155,.L512-.L155
	.half	1
	.byte	84
	.word	.L340-.L155,.L341-.L155
	.half	1
	.byte	84
	.word	.L517-.L155,.L518-.L155
	.half	1
	.byte	84
	.word	.L519-.L155,.L520-.L155
	.half	1
	.byte	84
	.word	0,0
.L305:
	.word	-1,.L155,.L501-.L155,.L502-.L155
	.half	1
	.byte	92
	.word	.L502-.L155,.L295-.L155
	.half	1
	.byte	95
	.word	0,0
.L302:
	.word	-1,.L155,.L504-.L155,.L11-.L155
	.half	1
	.byte	94
	.word	.L505-.L155,.L506-.L155
	.half	1
	.byte	84
	.word	.L507-.L155,.L508-.L155
	.half	1
	.byte	84
	.word	.L513-.L155,.L514-.L155
	.half	1
	.byte	84
	.word	.L515-.L155,.L516-.L155
	.half	1
	.byte	84
	.word	0,0
.L303:
	.word	-1,.L155,.L494-.L155,.L295-.L155
	.half	1
	.byte	88
	.word	.L524-.L155,.L525-.L155
	.half	1
	.byte	84
	.word	.L526-.L155,.L527-.L155
	.half	1
	.byte	85
	.word	0,0
.L310:
	.word	-1,.L155,.L499-.L155,.L12-.L155
	.half	1
	.byte	82
	.word	.L500-.L155,.L295-.L155
	.half	1
	.byte	91
	.word	0,0
.L299:
	.word	-1,.L155,0,.L490-.L155
	.half	1
	.byte	101
	.word	.L492-.L155,.L295-.L155
	.half	1
	.byte	108
	.word	0,0
.L297:
	.word	-1,.L155,0,.L490-.L155
	.half	1
	.byte	100
	.word	.L491-.L155,.L295-.L155
	.half	1
	.byte	111
	.word	.L496-.L155,.L497-.L155
	.half	1
	.byte	100
	.word	.L521-.L155,.L343-.L155
	.half	1
	.byte	100
	.word	.L522-.L155,.L523-.L155
	.half	1
	.byte	100
	.word	0,0
.L306:
	.word	-1,.L155,.L498-.L155,.L9-.L155
	.half	1
	.byte	90
	.word	.L10-.L155,.L295-.L155
	.half	1
	.byte	90
	.word	0,0
.L334:
	.word	0,0
.L332:
	.word	0,0
.L300:
	.word	-1,.L155,.L493-.L155,.L295-.L155
	.half	1
	.byte	89
	.word	.L532-.L155,.L295-.L155
	.half	1
	.byte	82
	.word	0,0
.L345:
	.word	-1,.L155,0,.L295-.L155
	.half	2
	.byte	145,112
	.word	0,0
.L308:
	.word	-1,.L155,.L495-.L155,.L295-.L155
	.half	1
	.byte	109
	.word	.L528-.L155,.L529-.L155
	.half	1
	.byte	100
	.word	.L530-.L155,.L531-.L155
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_initConfig')
	.sect	'.debug_loc'
.L156:
	.word	-1,.L157,0,.L346-.L157
	.half	2
	.byte	138,0
	.word	0,0
.L348:
	.word	-1,.L157,0,.L533-.L157
	.half	1
	.byte	100
	.word	.L534-.L157,.L346-.L157
	.half	1
	.byte	108
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_setDeadtime')
	.sect	'.debug_loc'
.L158:
	.word	-1,.L159,0,.L367-.L159
	.half	2
	.byte	138,0
	.word	0,0
.L374:
	.word	0,0
.L369:
	.word	-1,.L159,0,.L367-.L159
	.half	1
	.byte	84
	.word	0,0
.L368:
	.word	-1,.L159,0,.L367-.L159
	.half	1
	.byte	100
	.word	0,0
.L376:
	.word	0,0
.L370:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_setMinPulse')
	.sect	'.debug_loc'
.L160:
	.word	-1,.L161,0,.L378-.L161
	.half	2
	.byte	138,0
	.word	0,0
.L383:
	.word	0,0
.L379:
	.word	-1,.L161,0,.L378-.L161
	.half	1
	.byte	100
	.word	0,0
.L380:
	.word	-1,.L161,0,.L378-.L161
	.half	1
	.byte	84
	.word	0,0
.L384:
	.word	0,0
.L381:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_setMode')
	.sect	'.debug_loc'
.L162:
	.word	-1,.L163,0,.L385-.L163
	.half	2
	.byte	138,0
	.word	0,0
.L396:
	.word	0,0
.L390:
	.word	0,0
.L393:
	.word	-1,.L163,.L538-.L163,.L400-.L163
	.half	1
	.byte	84
	.word	.L539-.L163,.L392-.L163
	.half	1
	.byte	84
	.word	0,0
.L391:
	.word	-1,.L163,.L537-.L163,.L42-.L163
	.half	1
	.byte	89
	.word	0,0
.L386:
	.word	-1,.L163,0,.L50-.L163
	.half	1
	.byte	100
	.word	.L535-.L163,.L385-.L163
	.half	1
	.byte	111
	.word	0,0
.L387:
	.word	-1,.L163,0,.L50-.L163
	.half	1
	.byte	84
	.word	0,0
.L388:
	.word	-1,.L163,.L536-.L163,.L385-.L163
	.half	1
	.byte	88
	.word	.L540-.L163,.L385-.L163
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_setOnTime')
	.sect	'.debug_loc'
.L164:
	.word	-1,.L165,0,.L404-.L165
	.half	2
	.byte	138,0
	.word	0,0
.L405:
	.word	-1,.L165,0,.L541-.L165
	.half	1
	.byte	100
	.word	0,0
.L407:
	.word	-1,.L165,0,.L541-.L165
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_setOnTimeAndShift')
	.sect	'.debug_loc'
.L166:
	.word	-1,.L167,0,.L408-.L167
	.half	2
	.byte	138,0
	.word	0,0
.L409:
	.word	-1,.L167,0,.L542-.L167
	.half	1
	.byte	100
	.word	0,0
.L411:
	.word	-1,.L167,0,.L542-.L167
	.half	1
	.byte	102
	.word	0,0
.L410:
	.word	-1,.L167,0,.L542-.L167
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_setPulse')
	.sect	'.debug_loc'
.L168:
	.word	-1,.L169,0,.L412-.L169
	.half	2
	.byte	138,0
	.word	0,0
.L413:
	.word	-1,.L169,0,.L543-.L169
	.half	1
	.byte	100
	.word	0,0
.L416:
	.word	-1,.L169,0,.L543-.L169
	.half	1
	.byte	102
	.word	0,0
.L415:
	.word	-1,.L169,0,.L543-.L169
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_setupChannels')
	.sect	'.debug_loc'
.L170:
	.word	-1,.L171,0,.L417-.L171
	.half	2
	.byte	138,0
	.word	0,0
.L420:
	.word	-1,.L171,0,.L417-.L171
	.half	1
	.byte	101
	.word	0,0
.L418:
	.word	-1,.L171,0,.L417-.L171
	.half	1
	.byte	100
	.word	0,0
.L421:
	.word	-1,.L171,0,.L417-.L171
	.half	1
	.byte	102
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_stdIfPwmHlInit')
	.sect	'.debug_loc'
.L172:
	.word	-1,.L173,0,.L422-.L173
	.half	2
	.byte	138,0
	.word	0,0
.L425:
	.word	-1,.L173,0,.L544-.L173
	.half	1
	.byte	101
	.word	.L546-.L173,.L422-.L173
	.half	1
	.byte	108
	.word	0,0
.L424:
	.word	-1,.L173,0,.L544-.L173
	.half	1
	.byte	100
	.word	.L545-.L173,.L422-.L173
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_updateAndShiftOff')
	.sect	'.debug_loc'
.L174:
	.word	-1,.L175,0,.L426-.L175
	.half	2
	.byte	138,0
	.word	0,0
.L427:
	.word	-1,.L175,0,.L547-.L175
	.half	1
	.byte	100
	.word	0,0
.L429:
	.word	-1,.L175,0,.L547-.L175
	.half	1
	.byte	102
	.word	0,0
.L428:
	.word	-1,.L175,0,.L548-.L175
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_updateCenterAligned')
	.sect	'.debug_loc'
.L176:
	.word	-1,.L177,0,.L430-.L177
	.half	2
	.byte	138,0
	.word	0,0
.L433:
	.word	-1,.L177,.L553-.L177,.L554-.L177
	.half	1
	.byte	94
	.word	.L68-.L177,.L430-.L177
	.half	1
	.byte	94
	.word	0,0
.L437:
	.word	-1,.L177,.L558-.L177,.L79-.L177
	.half	1
	.byte	95
	.word	.L560-.L177,.L557-.L177
	.half	1
	.byte	85
	.word	.L566-.L177,.L78-.L177
	.half	1
	.byte	91
	.word	.L567-.L177,.L568-.L177
	.half	1
	.byte	85
	.word	0,0
.L438:
	.word	-1,.L177,.L559-.L177,.L79-.L177
	.half	1
	.byte	90
	.word	.L561-.L177,.L557-.L177
	.half	1
	.byte	86
	.word	.L562-.L177,.L563-.L177
	.half	1
	.byte	86
	.word	.L565-.L177,.L78-.L177
	.half	1
	.byte	93
	.word	.L569-.L177,.L78-.L177
	.half	1
	.byte	86
	.word	0,0
.L435:
	.word	-1,.L177,.L551-.L177,.L430-.L177
	.half	1
	.byte	88
	.word	0,0
.L431:
	.word	-1,.L177,0,.L69-.L177
	.half	1
	.byte	100
	.word	.L549-.L177,.L430-.L177
	.half	1
	.byte	111
	.word	0,0
.L434:
	.word	-1,.L177,.L552-.L177,.L430-.L177
	.half	1
	.byte	89
	.word	0,0
.L432:
	.word	-1,.L177,0,.L69-.L177
	.half	1
	.byte	101
	.word	.L550-.L177,.L430-.L177
	.half	1
	.byte	108
	.word	0,0
.L436:
	.word	-1,.L177,.L555-.L177,.L556-.L177
	.half	5
	.byte	144,32,157,32,0
	.word	.L77-.L177,.L557-.L177
	.half	5
	.byte	144,32,157,32,0
	.word	.L79-.L177,.L564-.L177
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_updateEdgeAligned')
	.sect	'.debug_loc'
.L178:
	.word	-1,.L179,0,.L439-.L179
	.half	2
	.byte	138,0
	.word	0,0
.L442:
	.word	-1,.L179,.L574-.L179,.L575-.L179
	.half	1
	.byte	95
	.word	.L81-.L179,.L439-.L179
	.half	1
	.byte	95
	.word	0,0
.L446:
	.word	-1,.L179,.L577-.L179,.L92-.L179
	.half	1
	.byte	88
	.word	.L579-.L179,.L580-.L179
	.half	1
	.byte	85
	.word	0,0
.L447:
	.word	-1,.L179,.L578-.L179,.L92-.L179
	.half	1
	.byte	91
	.word	.L581-.L179,.L580-.L179
	.half	1
	.byte	86
	.word	.L582-.L179,.L583-.L179
	.half	1
	.byte	86
	.word	.L584-.L179,.L91-.L179
	.half	1
	.byte	91
	.word	.L587-.L179,.L91-.L179
	.half	1
	.byte	86
	.word	0,0
.L444:
	.word	-1,.L179,.L572-.L179,.L439-.L179
	.half	1
	.byte	89
	.word	0,0
.L440:
	.word	-1,.L179,0,.L82-.L179
	.half	1
	.byte	100
	.word	.L570-.L179,.L439-.L179
	.half	1
	.byte	111
	.word	0,0
.L443:
	.word	-1,.L179,.L573-.L179,.L439-.L179
	.half	1
	.byte	90
	.word	0,0
.L441:
	.word	-1,.L179,0,.L82-.L179
	.half	1
	.byte	101
	.word	.L571-.L179,.L439-.L179
	.half	1
	.byte	108
	.word	0,0
.L445:
	.word	-1,.L179,.L576-.L179,.L577-.L179
	.half	1
	.byte	88
	.word	.L92-.L179,.L91-.L179
	.half	1
	.byte	88
	.word	.L585-.L179,.L586-.L179
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_updateOff')
	.sect	'.debug_loc'
.L180:
	.word	-1,.L181,0,.L448-.L181
	.half	2
	.byte	138,0
	.word	0,0
.L451:
	.word	-1,.L181,.L590-.L181,.L591-.L181
	.half	1
	.byte	95
	.word	.L95-.L181,.L448-.L181
	.half	1
	.byte	95
	.word	0,0
.L449:
	.word	-1,.L181,0,.L96-.L181
	.half	1
	.byte	100
	.word	.L588-.L181,.L448-.L181
	.half	1
	.byte	111
	.word	0,0
.L452:
	.word	-1,.L181,.L589-.L181,.L448-.L181
	.half	1
	.byte	88
	.word	0,0
.L450:
	.word	-1,.L181,0,.L96-.L181
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_updatePulse')
	.sect	'.debug_loc'
.L182:
	.word	-1,.L183,0,.L453-.L183
	.half	2
	.byte	138,0
	.word	0,0
.L457:
	.word	-1,.L183,.L596-.L183,.L597-.L183
	.half	1
	.byte	89
	.word	.L97-.L183,.L605-.L183
	.half	1
	.byte	89
	.word	.L113-.L183,.L453-.L183
	.half	1
	.byte	89
	.word	0,0
.L464:
	.word	0,0
.L461:
	.word	-1,.L183,.L600-.L183,.L601-.L183
	.half	1
	.byte	85
	.word	.L604-.L183,.L110-.L183
	.half	1
	.byte	85
	.word	0,0
.L469:
	.word	-1,.L183,.L608-.L183,.L609-.L183
	.half	1
	.byte	85
	.word	.L612-.L183,.L124-.L183
	.half	1
	.byte	85
	.word	0,0
.L462:
	.word	-1,.L183,.L602-.L183,.L601-.L183
	.half	1
	.byte	86
	.word	.L604-.L183,.L110-.L183
	.half	1
	.byte	86
	.word	0,0
.L470:
	.word	-1,.L183,.L610-.L183,.L609-.L183
	.half	1
	.byte	86
	.word	.L612-.L183,.L124-.L183
	.half	1
	.byte	86
	.word	0,0
.L454:
	.word	-1,.L183,0,.L98-.L183
	.half	1
	.byte	100
	.word	.L592-.L183,.L453-.L183
	.half	1
	.byte	111
	.word	0,0
.L460:
	.word	0,0
.L468:
	.word	0,0
.L456:
	.word	-1,.L183,0,.L98-.L183
	.half	1
	.byte	102
	.word	.L594-.L183,.L453-.L183
	.half	1
	.byte	109
	.word	0,0
.L458:
	.word	-1,.L183,.L595-.L183,.L453-.L183
	.half	1
	.byte	88
	.word	0,0
.L465:
	.word	0,0
.L455:
	.word	-1,.L183,0,.L98-.L183
	.half	1
	.byte	101
	.word	.L593-.L183,.L453-.L183
	.half	1
	.byte	108
	.word	0,0
.L459:
	.word	-1,.L183,.L598-.L183,.L599-.L183
	.half	1
	.byte	85
	.word	.L109-.L183,.L600-.L183
	.half	1
	.byte	85
	.word	.L111-.L183,.L603-.L183
	.half	1
	.byte	85
	.word	0,0
.L467:
	.word	-1,.L183,.L606-.L183,.L607-.L183
	.half	1
	.byte	85
	.word	.L123-.L183,.L608-.L183
	.half	1
	.byte	85
	.word	.L125-.L183,.L611-.L183
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_updatePulseOff')
	.sect	'.debug_loc'
.L184:
	.word	-1,.L185,0,.L473-.L185
	.half	2
	.byte	138,0
	.word	0,0
.L474:
	.word	-1,.L185,0,.L613-.L185
	.half	1
	.byte	100
	.word	0,0
.L476:
	.word	-1,.L185,0,.L613-.L185
	.half	1
	.byte	102
	.word	0,0
.L475:
	.word	-1,.L185,0,.L614-.L185
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_updateShiftCenterAligned')
	.sect	'.debug_loc'
.L186:
	.word	-1,.L187,0,.L477-.L187
	.half	2
	.byte	138,0
	.word	0,0
.L481:
	.word	-1,.L187,.L620-.L187,.L621-.L187
	.half	1
	.byte	90
	.word	.L129-.L187,.L477-.L187
	.half	1
	.byte	90
	.word	0,0
.L486:
	.word	-1,.L187,.L625-.L187,.L140-.L187
	.half	1
	.byte	95
	.word	.L627-.L187,.L624-.L187
	.half	1
	.byte	85
	.word	.L636-.L187,.L139-.L187
	.half	1
	.byte	95
	.word	.L637-.L187,.L638-.L187
	.half	1
	.byte	85
	.word	0,0
.L487:
	.word	-1,.L187,.L626-.L187,.L140-.L187
	.half	1
	.byte	91
	.word	.L628-.L187,.L624-.L187
	.half	1
	.byte	86
	.word	.L629-.L187,.L630-.L187
	.half	1
	.byte	86
	.word	.L635-.L187,.L139-.L187
	.half	1
	.byte	91
	.word	.L639-.L187,.L139-.L187
	.half	1
	.byte	86
	.word	0,0
.L483:
	.word	-1,.L187,.L618-.L187,.L477-.L187
	.half	1
	.byte	88
	.word	0,0
.L478:
	.word	-1,.L187,0,.L130-.L187
	.half	1
	.byte	100
	.word	.L615-.L187,.L477-.L187
	.half	1
	.byte	111
	.word	0,0
.L482:
	.word	-1,.L187,.L619-.L187,.L477-.L187
	.half	1
	.byte	89
	.word	0,0
.L485:
	.word	-1,.L187,.L632-.L187,.L633-.L187
	.half	1
	.byte	95
	.word	.L145-.L187,.L634-.L187
	.half	1
	.byte	95
	.word	0,0
.L480:
	.word	-1,.L187,0,.L130-.L187
	.half	1
	.byte	102
	.word	.L617-.L187,.L477-.L187
	.half	1
	.byte	109
	.word	0,0
.L479:
	.word	-1,.L187,0,.L130-.L187
	.half	1
	.byte	101
	.word	.L616-.L187,.L477-.L187
	.half	1
	.byte	108
	.word	0,0
.L484:
	.word	-1,.L187,.L622-.L187,.L623-.L187
	.half	1
	.byte	82
	.word	.L138-.L187,.L624-.L187
	.half	1
	.byte	82
	.word	.L140-.L187,.L631-.L187
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L1165:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_getDeadtime')
	.sect	'.debug_frame'
	.word	24
	.word	.L1165,.L149,.L350-.L149
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_getMinPulse')
	.sect	'.debug_frame'
	.word	24
	.word	.L1165,.L151,.L359-.L151
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_getMode')
	.sect	'.debug_frame'
	.word	24
	.word	.L1165,.L153,.L365-.L153
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_init')
	.sect	'.debug_frame'
	.word	36
	.word	.L1165,.L155,.L295-.L155
	.byte	4
	.word	(.L489-.L155)/2
	.byte	19,16,22,26,3,19,138,16,4
	.word	(.L295-.L489)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_initConfig')
	.sect	'.debug_frame'
	.word	12
	.word	.L1165,.L157,.L346-.L157
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_setDeadtime')
	.sect	'.debug_frame'
	.word	24
	.word	.L1165,.L159,.L367-.L159
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_setMinPulse')
	.sect	'.debug_frame'
	.word	24
	.word	.L1165,.L161,.L378-.L161
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_setMode')
	.sect	'.debug_frame'
	.word	12
	.word	.L1165,.L163,.L385-.L163
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_setOnTime')
	.sect	'.debug_frame'
	.word	12
	.word	.L1165,.L165,.L404-.L165
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_setOnTimeAndShift')
	.sect	'.debug_frame'
	.word	12
	.word	.L1165,.L167,.L408-.L167
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_setPulse')
	.sect	'.debug_frame'
	.word	12
	.word	.L1165,.L169,.L412-.L169
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_setupChannels')
	.sect	'.debug_frame'
	.word	20
	.word	.L1165,.L171,.L417-.L171
	.byte	8,18,8,19,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_stdIfPwmHlInit')
	.sect	'.debug_frame'
	.word	12
	.word	.L1165,.L173,.L422-.L173
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_updateAndShiftOff')
	.sect	'.debug_frame'
	.word	12
	.word	.L1165,.L175,.L426-.L175
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_updateCenterAligned')
	.sect	'.debug_frame'
	.word	12
	.word	.L1165,.L177,.L430-.L177
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_updateEdgeAligned')
	.sect	'.debug_frame'
	.word	12
	.word	.L1165,.L179,.L439-.L179
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_updateOff')
	.sect	'.debug_frame'
	.word	12
	.word	.L1165,.L181,.L448-.L181
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_updatePulse')
	.sect	'.debug_frame'
	.word	12
	.word	.L1165,.L183,.L453-.L183
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_updatePulseOff')
	.sect	'.debug_frame'
	.word	12
	.word	.L1165,.L185,.L473-.L185
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_updateShiftCenterAligned')
	.sect	'.debug_frame'
	.word	12
	.word	.L1165,.L187,.L477-.L187


	; Module end
