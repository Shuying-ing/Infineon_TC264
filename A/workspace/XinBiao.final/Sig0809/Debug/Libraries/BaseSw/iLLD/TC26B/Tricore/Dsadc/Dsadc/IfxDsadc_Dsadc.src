	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 99277908"
	.compiler_invocation	"ctc --dep-file=Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc\\.IfxDsadc_Dsadc.o.d --fp-model=c,f,l,n,r,S,T,z -D__CPU__=tc26x -D__CPU_TC26X__ --core=tc1.6.x --iso=99 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\CODE -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Build -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\DataHandling -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\InternalMux -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Asc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Lin -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Spi -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Icu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmBc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmHl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Timer -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TimerWithTrigger -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TPwm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Cam -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Irq -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Dma -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Rdc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Dts -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Eray -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Phy_Pef7071 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Crc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Fft -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\IncrEnc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Pwm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Timer -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim\\In -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Pwm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Trig -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\I2c -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Driver -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Msc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Can -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Io -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Psi5 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Psi5s -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiMaster -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiSlave -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Src -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Adc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Platform -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Platform\\Tricore -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Platform\\Tricore\\Compilers -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Sfr -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Sfr\\TC26B -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Service -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Service\\CpuGeneric -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\seekfree_libraries -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\seekfree_libraries\\common -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\seekfree_peripheral -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\USER -g2 -wW557 --make-target=Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.o -t0 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O0 --default-a1-size=0 --default-a0-size=0 --source --align=0 --switch=auto --error-limit=42 -o Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.src ..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c"
	.compiler_name		"ctc"
	;source	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c'

	
$TC16X
	
	.sdecl	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_calcDIVx',code,cluster('IfxDsadc_Dsadc_calcDIVx')
	.sect	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_calcDIVx'
	.align	2
	

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	     1  /**
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	     2   * \file IfxDsadc_Dsadc.c
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	     3   * \brief DSADC DSADC details
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	     4   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	     5   * \version iLLD_1_0_1_11_0
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	     6   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	     7   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	     8   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	     9   *                                 IMPORTANT NOTICE
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    10   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    11   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    12   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    13   * the company in which ordinary course of business you are acting and (ii) 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    14   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    15   * terms of use are agreed, use of this file is subject to following:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    16  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    17  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    19  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    20   * Permission is hereby granted, free of charge, to any person or 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    21   * organization obtaining a copy of the software and accompanying 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    22   * documentation covered by this license (the "Software") to use, reproduce,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    23   * display, distribute, execute, and transmit the Software, and to prepare
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    24   * derivative works of the Software, and to permit third-parties to whom the 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    25   * Software is furnished to do so, all subject to the following:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    26  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    27   * The copyright notices in the Software and this entire statement, including
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    28   * the above license grant, this restriction and the following disclaimer, must
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    29   * be included in all copies of the Software, in whole or in part, and all
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    30   * derivative works of the Software, unless such copies or derivative works are
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    31   * solely in the form of machine-executable object code generated by a source
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    32   * language processor.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    33  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    40   * DEALINGS IN THE SOFTWARE.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    41  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    42   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    43   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    44  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    45  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    46  /*----------------------------------Includes----------------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    47  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    48  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    49  #include "IfxDsadc_Dsadc.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    50  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    51  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    52  /*-----------------------Private Function Prototypes--------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    53  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    54  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    55  /** \brief calculate division factor
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    56   * \param sourceFreq Source frequency
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    57   * \param targetFreq Target frequency
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    58   * \return division factor
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    59   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    60  IFX_STATIC sint32 IfxDsadc_Dsadc_calcDIVx(float32 sourceFreq, float32 *targetFreq);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    61  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    62  /** \brief Initialises the auxilary filter
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    63   * \param channel Pointer to the DSADC channel handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    64   * \param config pointer to the DSADC fir auxilary filter configuration
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    65   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    66   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    67  IFX_STATIC void IfxDsadc_Dsadc_initAuxFilter(IfxDsadc_Dsadc_Channel *channel, const IfxDsadc_Dsadc_AuxFilterConfig *config);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    68  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    69  /** \brief Initialises the comb filter
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    70   * \param channel Pointer to the DSADC channel handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    71   * \param config pointer to the DSADC comb filter configuration
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    72   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    73   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    74  IFX_STATIC void IfxDsadc_Dsadc_initCombFilter(IfxDsadc_Dsadc_Channel *channel, const IfxDsadc_Dsadc_CombFilterConfig *config);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    75  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    76  /** \brief Initialises the demodulator
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    77   * \param channel Pointer to the DSADC channel handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    78   * \param config pointer to the DSADC demodulator configuration
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    79   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    80   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    81  IFX_STATIC void IfxDsadc_Dsadc_initDemodulator(IfxDsadc_Dsadc_Channel *channel, const IfxDsadc_Dsadc_DemodulatorConfig *config);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    82  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    83  /** \brief Initialises the fir filter
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    84   * \param channel Pointer to the DSADC channel handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    85   * \param config pointer to the DSADC fir filter configuration
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    86   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    87   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    88  IFX_STATIC void IfxDsadc_Dsadc_initFirFilter(IfxDsadc_Dsadc_Channel *channel, const IfxDsadc_Dsadc_FirFilterConfig *config);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    89  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    90  /** \brief Initialises the integrator
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    91   * \param channel Pointer to the DSADC channel handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    92   * \param config pointer to the DSADC fir integrator configuration
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    93   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    94   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    95  IFX_STATIC void IfxDsadc_Dsadc_initIntegrator(IfxDsadc_Dsadc_Channel *channel, const IfxDsadc_Dsadc_IntegratorConfig *config);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    96  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    97  /** \brief Initialises the modulator
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    98   * \param channel Pointer to the DSADC channel handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    99   * \param config pointer to the DSADC modulator configuration
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   100   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   101   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   102  IFX_STATIC void IfxDsadc_Dsadc_initModulator(IfxDsadc_Dsadc_Channel *channel, const IfxDsadc_Dsadc_ModulatorConfig *config);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   103  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   104  /** \brief Initialises the rectifier
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   105   * \param channel Pointer to the DSADC channel handle
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   106   * \param config pointer to the DSADC fir rectifier configuration
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   107   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   108   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   109  IFX_STATIC void IfxDsadc_Dsadc_initRectifier(IfxDsadc_Dsadc_Channel *channel, const IfxDsadc_Dsadc_RectifierConfig *config);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   110  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   111  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   112  /*-------------------------Function Implementations---------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   113  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   114  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   115  IFX_STATIC sint32 IfxDsadc_Dsadc_calcDIVx(float32 sourceFreq, float32 *targetFreq)
; Function IfxDsadc_Dsadc_calcDIVx
.L44:
IfxDsadc_Dsadc_calcDIVx:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   116  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   117      float32 bestError = 10e6;
	mov.u	d3,#38528
.L367:
	addih	d3,d3,#19224
.L581:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   118      sint32  bestDiv   = 2, i;
	mov	d2,#2
.L368:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   119  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   120      for (i = 2; i <= 32; i += 2)
	mov	d5,#2
.L369:
	j	.L2
.L3:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   121      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   122          float32 freq  = sourceFreq / i;
	itof	d15,d5
.L582:
	div.f	d0,d4,d15
.L370:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   123          float32 error = __absf(freq - *targetFreq);
	ld.w	d15,[a4]
	sub.f	d15,d0,d15
	mov	d1,#0
	cmp.f	d15,d15,d1
	jnz.t	d15:0,.L4
	ld.w	d15,[a4]
	sub.f	d0,d0,d15
.L371:
	j	.L5
.L4:
	ld.w	d15,[a4]
	sub.f	d15,d0,d15
	insn.t	d0,d15:31,d15:31
.L5:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   124  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   125          if (__leqf(error, bestError))
	cmp.f	d15,d0,d3
.L372:
	jnz.t	d15:2,.L6
.L583:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   126          {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   127              bestError = error;
	mov	e2,d0,d5
.L584:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   128              bestDiv   = i;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   129  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   130              if (!__neqf(error, 0))
	mov	d15,#0
	cmp.f	d15,d0,d15
	jnz.t	d15:2,.L7
	mov	d15,#0
	cmp.f	d15,d0,d15
	jnz.t	d15:0,.L8
.L585:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   131              {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   132                  break;
	j	.L9
.L8:
.L7:
.L6:
	add	d5,#2
.L2:
	mov	d15,#32
.L586:
	jge	d15,d5,.L3

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   133              }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   134          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   135      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   136  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   137      *targetFreq = sourceFreq / bestDiv;
.L9:
	itof	d15,d2
.L373:
	div.f	d15,d4,d15
.L587:
	st.w	[a4],d15
.L374:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   138  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   139      return (bestDiv / 2) - 1;
	ge	d15,d2,#0
.L375:
	caddn	d2,d15,#1
	sha	d2,#-1
.L588:
	add	d2,#-1
.L589:
	j	.L10

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   140  }
.L10:
	ret
.L313:
	
__IfxDsadc_Dsadc_calcDIVx_function_end:
	.size	IfxDsadc_Dsadc_calcDIVx,__IfxDsadc_Dsadc_calcDIVx_function_end-IfxDsadc_Dsadc_calcDIVx
.L116:
	; End of function
	
	.sdecl	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_getAuxResult',code,cluster('IfxDsadc_Dsadc_getAuxResult')
	.sect	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_getAuxResult'
	.align	2
	
	.global	IfxDsadc_Dsadc_getAuxResult

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   141  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   142  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   143  sint16 IfxDsadc_Dsadc_getAuxResult(IfxDsadc_Dsadc_Channel *channel)
; Function IfxDsadc_Dsadc_getAuxResult
.L46:
IfxDsadc_Dsadc_getAuxResult:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   144  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   145      return IfxDsadc_getAuxResult(channel->module, channel->channelId);
	ld.a	a15,[a4]
.L553:
	ld.bu	d15,[a4]8
.L303:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     2   * \file IfxDsadc.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     3   * \brief DSADC  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     4   * \ingroup IfxLld_Dsadc
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     7   * \copyright Copyright (c) 2017 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    44   * \defgroup IfxLld_Dsadc_Std_Enum Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    45   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    46   * \defgroup IfxLld_Dsadc_Std_Operative Operative Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    47   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    48   * \defgroup IfxLld_Dsadc_Std_Support Support Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    49   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    50   * \defgroup IfxLld_Dsadc_Std_Interrupt Interrupt Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    51   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    52   * \defgroup IfxLld_Dsadc_Std_IO IO Pin Configuration Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    53   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    54   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    55  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    56  #ifndef IFXDSADC_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    57  #define IFXDSADC_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    58  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    59  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    60  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    61  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    62  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    63  #include "_Impl/IfxDsadc_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    64  #include "Src/Std/IfxSrc.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    65  #include "Scu/Std/IfxScuCcu.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    66  #include "_PinMap/IfxDsadc_PinMap.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    67  #include "IfxDsadc_reg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    68  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    69  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    70  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    71  /*--------------------------------Enumerations--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    72  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    73  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    74  /** \addtogroup IfxLld_Dsadc_Std_Enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    75   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    76  /** \brief Comb Filter (auxiliary) shift control\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    77   * Definition in Ifx_DSADC.FCFGA.B.AFSC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    78   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    79  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    80  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    81      IfxDsadc_AuxCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    82      IfxDsadc_AuxCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    83      IfxDsadc_AuxCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    84      IfxDsadc_AuxCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    85  } IfxDsadc_AuxCombFilterShift;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    86  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    87  /** \brief Comb Filter (auxiliary) configuration/type\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    88   * Definition in Ifx_DSADC.FCFGA.B.CFAC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    89   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    90  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    91  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    92      IfxDsadc_AuxCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    93      IfxDsadc_AuxCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    94      IfxDsadc_AuxCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    95      IfxDsadc_AuxCombFilterType_combF = 3   /**< \brief CICF */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    96  } IfxDsadc_AuxCombFilterType;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    97  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    98  /** \brief Service request generation (auxiliary)\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    99   * Definition in Ifx_DSADC.FCFGA.B.ESEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   100   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   101  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   102  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   103      IfxDsadc_AuxEvent_everyNewResult  = 0, /**< \brief Always, for each new result value */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   104      IfxDsadc_AuxEvent_insideBoundary  = 1, /**< \brief If result is inside the boundary band */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   105      IfxDsadc_AuxEvent_outsideBoundary = 2  /**< \brief If result is outside the boundary band */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   106  } IfxDsadc_AuxEvent;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   107  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   108  /** \brief Service request generation (auxiliary)\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   109   * Definition in Ifx_DSADC.FCFGA.B.EGT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   110   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   111  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   112  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   113      IfxDsadc_AuxGate_definedByESEL       = 0, /**< \brief Separate: generate events according to ESEL */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   114      IfxDsadc_AuxGate_coupledToIntegrator = 1  /**< \brief Coupled: generate events only when the integrator is enabled and after the discard phase defined by bitfield NVALDIS */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   115  } IfxDsadc_AuxGate;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   116  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   117  /** \brief Service request generation (auxiliary)\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   118   * Definition in Ifx_DSADC.FCFGA.B.SRGA
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   119   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   120  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   121  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   122      IfxDsadc_AuxServiceRequest_never     = 0,  /**< \brief Never, service requests disabled */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   123      IfxDsadc_AuxServiceRequest_auxFilter = 1,  /**< \brief Auxiliary filter: As selected by bitfield ESEL (\ref IfxDsadc_AuxEvent) */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   124      IfxDsadc_AuxServiceRequest_altSource = 2   /**< \brief Alternate source: Capturing of a sign delay value to register CGSYNCx (x = 0 - 5) */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   125  } IfxDsadc_AuxServiceRequest;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   126  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   127  /** \brief Carrier generation mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   128   * Definition in Ifx_DSADC.CGCFG.B.CGMOD
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   129   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   130  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   131  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   132      IfxDsadc_CarrierWaveformMode_stopped  = 0,  /**< \brief Carrier Generator stopped */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   133      IfxDsadc_CarrierWaveformMode_square   = 1,  /**< \brief Carrier Generator generates square wave */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   134      IfxDsadc_CarrierWaveformMode_triangle = 2,  /**< \brief Carrier Generator generates triangle wave */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   135      IfxDsadc_CarrierWaveformMode_sine     = 3   /**< \brief Carrier Generator generates sine wave */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   136  } IfxDsadc_CarrierWaveformMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   137  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   138  /** \brief Specifies the channel Index
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   139   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   140  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   141  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   142      IfxDsadc_ChannelId_0 = 0,  /**< \brief Specifies the channel Index 0 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   143      IfxDsadc_ChannelId_2 = 2,  /**< \brief Specifies the channel Index 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   144      IfxDsadc_ChannelId_3 = 3   /**< \brief Specifies the channel Index 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   145  } IfxDsadc_ChannelId;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   146  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   147  /** \brief Modulator common mode voltage selection\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   148   * Definition in Ifx_DSADC.MODCFGx.B.CMVS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   149   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   150  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   151  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   152      IfxDsadc_CommonModeVoltage_a = 0,  /**< \brief VCM = VAREF / 3.03 (1.65 V for VAREF = 5.0 V), recommended for VDDM = 3.3 V1.65V */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   153      IfxDsadc_CommonModeVoltage_b = 1,  /**< \brief VCM = VAREF / 2.27 (2.2 V for VAREF = 5.0 V), recommended for low distortion of AC-coupled signals */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   154      IfxDsadc_CommonModeVoltage_c = 2   /**< \brief VCM = VAREF / 2.0 (2.5 V for VAREF = 5.0 V), recommended for DC-coupled signals */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   155  } IfxDsadc_CommonModeVoltage;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   156  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   157  /** \brief FIR data shift control\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   158   * Selects the displacement caused by the data shifter at the FIR filter output\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   159   * Definition in Ifx_DSADC.FCFGM.B.DSH
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   160   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   161  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   162  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   163      IfxDsadc_FirDataShift_noShift  = 0,  /**< \brief no shift, use full range */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   164      IfxDsadc_FirDataShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   165      IfxDsadc_FirDataShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   166      IfxDsadc_FirDataShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   167  } IfxDsadc_FirDataShift;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   168  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   169  /** \brief FIR shift control\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   170   * Selects the displacement caused by the data shifter inbetween the FIR filter blocks.\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   171   * Definition in Ifx_DSADC.FCFGM.B.FSH
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   172   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   173  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   174  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   175      IfxDsadc_FirInternalShift_noShift  = 0, /**< \brief no shift, use full range */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   176      IfxDsadc_FirInternalShift_shiftBy1 = 1  /**< \brief Shift by 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   177  } IfxDsadc_FirInternalShift;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   178  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   179  /** \brief Modulator configuration of positive/negative input line\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   180   * Definition in Ifx_DSADC.MODCFGx.B.INCFGP and Ifx_DSADC.MODCFGx.B.INCFGN
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   181   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   182  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   183  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   184      IfxDsadc_InputConfig_inputPin          = 0,  /**< \brief Modulator input connected to external pin */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   185      IfxDsadc_InputConfig_supplyVoltage     = 1,  /**< \brief Modulator input connected to supply voltage V_ddm */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   186      IfxDsadc_InputConfig_commonModeVoltage = 2,  /**< \brief Modulator input connected to common mode voltage V_cm */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   187      IfxDsadc_InputConfig_referenceGround   = 3   /**< \brief Modulator input connected to reference ground V_ref */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   188  } IfxDsadc_InputConfig;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   189  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   190  /** \brief Demodulator input data source selection\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   191   * Definition in Ifx_DSADC.DICFG.B.DSRC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   192   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   193  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   194  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   195      IfxDsadc_InputDataSource_onChipStandAlone = 0,  /**< \brief On-chip modulator, standalone (3rd order) */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   196      IfxDsadc_InputDataSource_onChipCombined   = 1,  /**< \brief On-chip modulator, yield (2nd order) */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   197      IfxDsadc_InputDataSource_directInputA     = 2,  /**< \brief External, from input A, direct */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   198      IfxDsadc_InputDataSource_invertedInputA   = 3,  /**< \brief External, from input A, inverted */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   199      IfxDsadc_InputDataSource_directInputB     = 4,  /**< \brief External, from input B, direct */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   200      IfxDsadc_InputDataSource_invertedInputB   = 5   /**< \brief External, from input B, inverted */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   201  } IfxDsadc_InputDataSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   202  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   203  /** \brief Modulator gain select of analog input path\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   204   * Definition in Ifx_DSADC.MODCFGx.B.GAINSEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   205   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   206  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   207  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   208      IfxDsadc_InputGain_factor1  = 0, /**< \brief Input gain factor: 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   209      IfxDsadc_InputGain_factor2  = 1, /**< \brief Input gain factor: 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   210      IfxDsadc_InputGain_factor4  = 2, /**< \brief Input gain factor: 4 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   211      IfxDsadc_InputGain_factor8  = 3, /**< \brief Input gain factor: 8 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   212      IfxDsadc_InputGain_factor16 = 4  /**< \brief Input gain factor: 16 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   213  } IfxDsadc_InputGain;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   214  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   215  /** \brief Modulator input pin selection\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   216   * Definition in Ifx_DSADC.MODCFGx.B.INMUX
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   217   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   218  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   219  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   220      IfxDsadc_InputPin_a = 0,  /**< \brief Pin A connected to modulator input */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   221      IfxDsadc_InputPin_b = 1,  /**< \brief Pin B connected to modulator input */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   222      IfxDsadc_InputPin_c = 2,  /**< \brief Pin C connected to modulator input */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   223      IfxDsadc_InputPin_d = 3   /**< \brief Pin D connected to modulator input */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   224  } IfxDsadc_InputPin;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   225  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   226  /** \brief Integrator window size\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   227   * Definition in Ifx_DSADC.IWCTR.B.IWS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   228   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   229  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   230  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   231      IfxDsadc_IntegrationWindowSize_internalControl = 0,  /**< \brief Internal control: stop integrator after REPVAL+1 integration cycles */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   232      IfxDsadc_IntegrationWindowSize_externalControl = 1   /**< \brief External control: stop integrator when bit INTEN becomes 0 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   233  } IfxDsadc_IntegrationWindowSize;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   234  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   235  /** \brief Integrator trigger mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   236   * NOTE: switch-first to bypassed before using other mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   237   * Definition in Ifx_DSADC.DICFG.B.ITRMODE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   238   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   239  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   240  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   241      IfxDsadc_IntegratorTrigger_bypassed     = 0, /**< \brief No integration trigger, integrator bypassed */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   242      IfxDsadc_IntegratorTrigger_fallingEdge  = 1, /**< \brief Trigger event upon a falling edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   243      IfxDsadc_IntegratorTrigger_risingEdge   = 2, /**< \brief Trigger event upon a rising edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   244      IfxDsadc_IntegratorTrigger_alwaysActive = 3  /**< \brief No trigger, integrator active all the time */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   245  } IfxDsadc_IntegratorTrigger;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   246  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   247  /** \brief Low power supply voltage select\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   248   * Definition in Ifx_DSADC.GLOBCFG.B.LOSUP
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   249   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   250  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   251  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   252      IfxDsadc_LowPowerSupply_5V   = 0, /**< \brief Supply Voltage for Analog Circuitry set to 5V */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   253      IfxDsadc_LowPowerSupply_3_3V = 1  /**< \brief Supply Voltage for Analog Circuitry set to 3.3V */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   254  } IfxDsadc_LowPowerSupply;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   255  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   256  /** \brief Comb Filter (Main Chain) shift control\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   257   * Definition in Ifx_DSADC.FCFGC.B.MFSC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   258   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   259  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   260  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   261      IfxDsadc_MainCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   262      IfxDsadc_MainCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   263      IfxDsadc_MainCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   264      IfxDsadc_MainCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   265  } IfxDsadc_MainCombFilterShift;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   266  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   267  /** \brief Comb Filter (Main Chain) configuration/type\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   268   * Definition in Ifx_DSADC.FCFGC.B.CFMC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   269   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   270  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   271  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   272      IfxDsadc_MainCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   273      IfxDsadc_MainCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   274      IfxDsadc_MainCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   275      IfxDsadc_MainCombFilterType_combF = 3   /**< \brief CICF */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   276  } IfxDsadc_MainCombFilterType;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   277  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   278  /** \brief Service request generation (main chain)\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   279   * Definition in Ifx_DSADC.FCFGC.B.SRGM
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   280   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   281  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   282  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   283      IfxDsadc_MainServiceRequest_never          = 0,  /**< \brief Never, service requests disabled */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   284      IfxDsadc_MainServiceRequest_highGateSignal = 1,  /**< \brief While gate (selected trigger signal) is high */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   285      IfxDsadc_MainServiceRequest_lowGateSignal  = 2,  /**< \brief While gate (selected trigger signal) is low */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   286      IfxDsadc_MainServiceRequest_everyNewResult = 3   /**< \brief Always, for each new result value */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   287  } IfxDsadc_MainServiceRequest;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   288  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   289  /** \brief Modulator clock select\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   290   * Definition in Ifx_DSADC.GLOBCFG.B.MCSEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   291   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   292  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   293  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   294      IfxDsadc_ModulatorClock_off   = 0,  /**< \brief Internal clock off, no source selected */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   295      IfxDsadc_ModulatorClock_fDSD  = 1,  /**< \brief f_dsd clock selected */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   296      IfxDsadc_ModulatorClock_fERAY = 2,  /**< \brief f_eray clock selected */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   297      IfxDsadc_ModulatorClock_fOSC0 = 3   /**< \brief f_osc0 clock selected */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   298  } IfxDsadc_ModulatorClock;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   299  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   300  /** \brief Modulator divider factor for modulator clock\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   301   * Definition in Ifx_DSADC.MODCFGx.B.DIVM
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   302   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   303  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   304  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   305      IfxDsadc_ModulatorClockDivider_div2 = 0,      /**< \brief f_mod = f_clk / 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   306      IfxDsadc_ModulatorClockDivider_div4,          /**< \brief f_mod = f_clk / 4  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   307      IfxDsadc_ModulatorClockDivider_div6,          /**< \brief f_mod = f_clk / 6  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   308      IfxDsadc_ModulatorClockDivider_div8,          /**< \brief f_mod = f_clk / 8  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   309      IfxDsadc_ModulatorClockDivider_div10,         /**< \brief f_mod = f_clk / 10  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   310      IfxDsadc_ModulatorClockDivider_div12,         /**< \brief f_mod = f_clk / 12  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   311      IfxDsadc_ModulatorClockDivider_div14,         /**< \brief f_mod = f_clk / 14  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   312      IfxDsadc_ModulatorClockDivider_div16,         /**< \brief f_mod = f_clk / 16  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   313      IfxDsadc_ModulatorClockDivider_div18,         /**< \brief f_mod = f_clk / 18  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   314      IfxDsadc_ModulatorClockDivider_div20,         /**< \brief f_mod = f_clk / 20  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   315      IfxDsadc_ModulatorClockDivider_div22,         /**< \brief f_mod = f_clk / 22  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   316      IfxDsadc_ModulatorClockDivider_div24,         /**< \brief f_mod = f_clk / 24  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   317      IfxDsadc_ModulatorClockDivider_div26,         /**< \brief f_mod = f_clk / 26  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   318      IfxDsadc_ModulatorClockDivider_div28,         /**< \brief f_mod = f_clk / 28  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   319      IfxDsadc_ModulatorClockDivider_div30,         /**< \brief f_mod = f_clk / 30  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   320      IfxDsadc_ModulatorClockDivider_div32          /**< \brief f_mod = f_clk / 32  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   321  } IfxDsadc_ModulatorClockDivider;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   322  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   323  /** \brief Rectifier sign source\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   324   * Selects the sign signal that is to be delayed.\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   325   * Definition in Ifx_DSADC.RECT.B.SSRC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   326   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   327  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   328  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   329      IfxDsadc_RectifierSignSource_onChipGenerator = 0,  /**< \brief On-chip carrier generator */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   330      IfxDsadc_RectifierSignSource_nextChannel     = 1,  /**< \brief Sign of result of next channel */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   331      IfxDsadc_RectifierSignSource_externalA       = 2,  /**< \brief External sign signal A */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   332      IfxDsadc_RectifierSignSource_externalB       = 3   /**< \brief External sign signal B */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   333  } IfxDsadc_RectifierSignSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   334  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   335  /** \brief Demodulator sample clock source select\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   336   * Definition in Ifx_DSADC.DICFG.B.CSRC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   337   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   338  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   339  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   340      IfxDsadc_SampleClockSource_internal = 0,  /**< \brief Internal clock */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   341      IfxDsadc_SampleClockSource_inputA   = 1,  /**< \brief External clock, from Input A */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   342      IfxDsadc_SampleClockSource_inputB   = 2,  /**< \brief External clock, from Input B */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   343      IfxDsadc_SampleClockSource_inputC   = 3   /**< \brief External clock, from Input C */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   344  } IfxDsadc_SampleClockSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   345  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   346  /** \brief Demodulator data strobe generation mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   347   * Definition in Ifx_DSADC.DICFG.B.STROBE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   348   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   349  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   350  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   351      IfxDsadc_SampleStrobe_noDataStrobe            = 0, /**< \brief No data strobe */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   352      IfxDsadc_SampleStrobe_sampleOnRisingEdge      = 1, /**< \brief Direct clock, a sample trigger is generated at each rising clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   353      IfxDsadc_SampleStrobe_sampleOnFallingEdge     = 2, /**< \brief Direct clock, a sample trigger is generated at each falling clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   354      IfxDsadc_SampleStrobe_sampleOnBothEdges       = 3, /**< \brief Double data, a sample trigger is generated at each rising and falling clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   355      IfxDsadc_SampleStrobe_reserved                = 4, /**< \brief don't use */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   356      IfxDsadc_SampleStrobe_sampleOnTwoRisingEdges  = 5, /**< \brief Double clock, a sample trigger is generated at every 2nd rising clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   357      IfxDsadc_SampleStrobe_sampleOnTwoFallingEdges = 6  /**< \brief Double clock, a sample trigger is generated at every 2nd falling clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   358  } IfxDsadc_SampleStrobe;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   359  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   360  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   361   * Definition in Ifx_DSADC.CLC.B.EDIS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   362   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   363  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   364  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   365      IfxDsadc_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   366      IfxDsadc_SleepMode_disable = 1  /**< \brief disables sleep mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   367  } IfxDsadc_SleepMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   368  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   369  /** \brief Timestamp trigger mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   370   * Definition in Ifx_DSADC.DICFG.B.TSTRMODE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   371   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   372  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   373  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   374      IfxDsadc_TimestampTrigger_noTrigger   = 0,  /**< \brief No timestamp trigger */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   375      IfxDsadc_TimestampTrigger_fallingEdge = 1,  /**< \brief Trigger event upon a falling edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   376      IfxDsadc_TimestampTrigger_risingEdge  = 2,  /**< \brief Trigger event upon a rising edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   377      IfxDsadc_TimestampTrigger_eachEdge    = 3   /**< \brief Trigger event upon each edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   378  } IfxDsadc_TimestampTrigger;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   379  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   380  /** \brief Trigger select\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   381   * Definition in Ifx_DSADC.DICFG.B.TRSEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   382   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   383  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   384  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   385      IfxDsadc_TriggerInput_a = 0,  /**< \brief dsadc trig 0 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   386      IfxDsadc_TriggerInput_b = 1,  /**< \brief dsadc trig 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   387      IfxDsadc_TriggerInput_c = 2,  /**< \brief vadc trig 0 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   388      IfxDsadc_TriggerInput_d = 3,  /**< \brief vadc trig 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   389      IfxDsadc_TriggerInput_e = 4,  /**< \brief external pin e */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   390      IfxDsadc_TriggerInput_f = 5,  /**< \brief external pin f */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   391      IfxDsadc_TriggerInput_g = 6,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   392      IfxDsadc_TriggerInput_h = 7
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   393  } IfxDsadc_TriggerInput;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   394  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   395  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   397  /** \addtogroup IfxLld_Dsadc_Std_Operative
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   398   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   399  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   400  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   402  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   403  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   404  /** \brief Sets the sensitivity of the module to sleep signal
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   405   * \param dsadc pointer to DSADC registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   406   * \param mode mode selection (enable/disable)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   407   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   408   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   409  IFX_INLINE void IfxDsadc_setSleepMode(Ifx_DSADC *dsadc, IfxDsadc_SleepMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   410  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   411  /** \brief Enables the conversion of multiple channels
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   412   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   413   * \param modulatorMask the modulator which should be running (bitwise selection)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   414   * \param channelMask the channels which should be scanned (bitwise selection)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   415   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   416   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   417   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   418   *     // enable the conversion of all 6 DSADC channels
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   419   *     IfxDsadc_startScan(&MODULE_DSADC, 0x3FU, 0x3FU);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   420   *     // results are now available in IFXDSADC(ds).CH[x].RESM.B.RESULT (x=0..5)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   421   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   422   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   423   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   424  IFX_INLINE void IfxDsadc_startScan(Ifx_DSADC *dsadc, uint32 modulatorMask, uint32 channelMask);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   425  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   426  /** \brief Disables the conversion of multiple channels
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   427   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   428   * \param modulatorMask the modulator which should be disabled (bitwise selection)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   429   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   430   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   431   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   432   *     // disable the modulators of all 6 DSADC channels
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   433   *     IfxDsadc_stopScan(&MODULE_DSADC, 0x3FU);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   434   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   435   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   436   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   437  IFX_INLINE void IfxDsadc_stopScan(Ifx_DSADC *dsadc, uint32 modulatorMask);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   438  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   439  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   440  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   441  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   442  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   443  /** \brief resets the DSADC kernel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   444   * \param dsadc pointer to DSADC registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   445   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   446   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   447  IFX_EXTERN void IfxDsadc_resetModule(Ifx_DSADC *dsadc);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   448  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   449  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   450  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   451  /** \addtogroup IfxLld_Dsadc_Std_Support
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   452   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   453  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   454  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   455  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   456  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   457  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   458  /** \brief Get result from the auxiliary chain
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   459   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   460   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   461   * \return result from the auxiliary chain
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   462   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   463  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   464  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   465  /** \brief Get the main comb decimation factor
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   466   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   467   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   468   * \return the main comb decimation factor
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   469   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   470  IFX_INLINE uint16 IfxDsadc_getMainCombDecimation(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   471  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   472  /** \brief Get result from the main chain
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   473   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   474   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   475   * \return result from the main chain
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   476   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   477  IFX_INLINE sint16 IfxDsadc_getMainResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   478  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   479  /** \brief Return TRUE if DSADC module is enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   480   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   481   * \return TRUE if DSADC module is enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   482   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   483  IFX_INLINE boolean IfxDsadc_isModuleEnabled(Ifx_DSADC *dsadc);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   484  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   485  /** \brief Set the carrier waveform mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   486   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   487   * \param waveformMode the waveform mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   488   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   489   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   490  IFX_INLINE void IfxDsadc_setCarrierMode(Ifx_DSADC *dsadc, IfxDsadc_CarrierWaveformMode waveformMode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   491  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   492  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   493  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   494  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   495  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   496  /** \brief Get the sample frequency of the integrator output in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   497   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   498   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   499   * \return frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   500   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   501  IFX_EXTERN float32 IfxDsadc_getIntegratorOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   502  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   503  /** \brief Get the sample frequency of the main COMB filter output in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   504   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   505   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   506   * \return frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   507   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   508  IFX_EXTERN float32 IfxDsadc_getMainCombOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   509  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   510  /** \brief Estimate the group delay of main-chain filters in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   511   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   512   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   513   * \return delay in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   514   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   515  IFX_EXTERN float32 IfxDsadc_getMainGroupDelay(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   516  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   517  /** \brief Get the modulator clock frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   518   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   519   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   520   * \return frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   521   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   522  IFX_EXTERN float32 IfxDsadc_getModulatorClockFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   523  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   524  /** \brief Get the input frequency of DSADC in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   525   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   526   * \return frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   527   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   528  IFX_EXTERN float32 IfxDsadc_getModulatorInputClockFreq(Ifx_DSADC *dsadc);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   529  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   530  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   531  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   532  /** \addtogroup IfxLld_Dsadc_Std_Interrupt
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   533   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   534  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   535  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   536  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   537  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   538  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   539  /** \brief Address/pointer to the interrupt source register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   540   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   541   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   542   * \return Address/pointer to the interrupt source register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   543   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   544  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getAuxSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   545  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   546  /** \brief Get the interrupt source register for a Main event
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   547   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   548   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   549   * \return Address/pointer to the interrupt source register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   550   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   551  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getMainSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   552  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   553  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   554  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   555  /** \addtogroup IfxLld_Dsadc_Std_IO
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   556   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   557  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   558  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   559  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   560  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   561  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   562  /** \brief Initializes a CGPWM output
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   563   * \param cgPwm the CGPWM Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   564   * \param pinMode the pin output mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   565   * \param padDriver the pad driver mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   566   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   567   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   568  IFX_INLINE void IfxDsadc_initCgPwmPin(const IfxDsadc_Cgpwm_Out *cgPwm, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   569  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   570  /** \brief Initializes a CIN input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   571   * \param cIn the CIN Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   572   * \param cInMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   573   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   574   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   575   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   576  IFX_INLINE void IfxDsadc_initCinPin(const IfxDsadc_Cin_In *cIn, IfxPort_InputMode cInMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   577  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   578  /** \brief Initializes a COUT output
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   579   * \param cout the COUT Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   580   * \param pinMode the pin output mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   581   * \param padDriver the pad driver mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   582   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   583   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   584  IFX_INLINE void IfxDsadc_initCoutPin(const IfxDsadc_Cout_Out *cout, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   585  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   586  /** \brief Initializes a DIN input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   587   * \param dIn the DIN Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   588   * \param dInMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   589   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   590   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   591   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   592  IFX_INLINE void IfxDsadc_initDinPin(const IfxDsadc_Din_In *dIn, IfxPort_InputMode dInMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   593  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   594  /** \brief Initializes a DS input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   595   * \param dsn the DSN Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   596   * \param pinMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   597   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   598   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   599   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   600  IFX_INLINE void IfxDsadc_initDsnPin(const IfxDsadc_Dsn_In *dsn, IfxPort_InputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   601  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   602  /** \brief Initializes a DS input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   603   * \param dsp the DSP Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   604   * \param pinMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   605   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   606   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   607   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   608  IFX_INLINE void IfxDsadc_initDspPin(const IfxDsadc_Dsp_In *dsp, IfxPort_InputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   609  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   610  /** \brief Initializes a ITR input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   611   * \param itr the ITR Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   612   * \param itrMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   613   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   614   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   615   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   616  IFX_INLINE void IfxDsadc_initItrPin(const IfxDsadc_Itr_In *itr, IfxPort_InputMode itrMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   617  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   618  /** \brief Initializes a SG input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   619   * \param sg the SG Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   620   * \param pinMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   621   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   622   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   623   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   624  IFX_INLINE void IfxDsadc_initSgPin(const IfxDsadc_Sg_In *sg, IfxPort_InputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   625  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   626  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   627  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   628  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   629  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   630  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   631  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   632  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   633  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   634      return (sint16)(dsadc->CH[channel].RESA.B.RESULT);
	mov	d0,#256
	mul	d15,d0
	addsc.a	a15,a15,d15,#0
.L554:
	ld.hu	d15,[a15]320
	extr.u	d15,d15,#0,#16
.L555:
	extr	d2,d15,#0,#16
.L556:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   634      return (sint16)(dsadc->CH[channel].RESA.B.RESULT);      (inlined)
	j	.L11

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   635  }      (inlined)
.L11:
	j	.L12

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   146  Dsadc_Dsadc_Channel *channel, const IfxDsadc_Dsadc_AuxFilterConfig *config)
.L12:
	ret
.L300:
	
__IfxDsadc_Dsadc_getAuxResult_function_end:
	.size	IfxDsadc_Dsadc_getAuxResult,__IfxDsadc_Dsadc_getAuxResult_function_end-IfxDsadc_Dsadc_getAuxResult
.L106:
	; End of function
	
	.sdecl	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initAuxFilter',code,cluster('IfxDsadc_Dsadc_initAuxFilter')
	.sect	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initAuxFilter'
	.align	2
	

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   147  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   148      Ifx_DSADC_CH_FCFGA fcfga;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   149  
; Function IfxDsadc_Dsadc_initAuxFilter
.L48:
IfxDsadc_Dsadc_initAuxFilter:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   150      fcfga.U                   = 0;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   151  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   152      fcfga.B.CFADF             = config->decimationFactor - 1;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   153      fcfga.B.CFAC              = config->combFilterType;
	mov	d0,#0
.L376:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   154  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   155      fcfga.B.SRGA              = config->serviceRequest;
	ld.bu	d15,[a5]6
.L594:
	add	d15,#-1
	extr.u	d15,d15,#0,#8
.L595:
	insert	d0,d0,d15,#0,#8
.L596:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   156      fcfga.B.ESEL              = config->eventSelect;
	ld.bu	d15,[a5]1
.L597:
	insert	d0,d0,d15,#8,#2
.L598:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   157      fcfga.B.EGT               = config->eventGate;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   158  
	ld.bu	d15,[a5]3
.L599:
	insert	d0,d0,d15,#10,#2
.L600:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   159      fcfga.B.AFSC              = config->combFilterShift;
	ld.bu	d15,[a5]4
.L601:
	insert	d0,d0,d15,#12,#2
.L602:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   160  
	ld.bu	d15,[a5]5
.L603:
	insert	d0,d0,d15,#14,#1
.L604:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   161      (channel->channel)->FCFGA = fcfga;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   162  }
	ld.bu	d15,[a5]2
.L605:
	insert	d0,d0,d15,#16,#2
.L606:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   163  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   164  
	ld.a	a15,[a4]4
.L607:
	st.w	[a15]24,d0
.L608:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   165  void IfxDsadc_Dsadc_initCarrierGen(IfxDsadc_Dsadc *dsadc, const IfxDsadc_Dsadc_CarrierGenConfig *config)
	ret
.L322:
	
__IfxDsadc_Dsadc_initAuxFilter_function_end:
	.size	IfxDsadc_Dsadc_initAuxFilter,__IfxDsadc_Dsadc_initAuxFilter_function_end-IfxDsadc_Dsadc_initAuxFilter
.L121:
	; End of function
	
	.sdecl	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initCarrierGen',code,cluster('IfxDsadc_Dsadc_initCarrierGen')
	.sect	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initCarrierGen'
	.align	2
	
	.global	IfxDsadc_Dsadc_initCarrierGen

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   166  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   167      Ifx_DSADC_CGCFG cgcfg;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   168  
; Function IfxDsadc_Dsadc_initCarrierGen
.L50:
IfxDsadc_Dsadc_initCarrierGen:	.type	func
	sub.a	a10,#8
.L377:
	mov.aa	a12,a4
.L380:
	mov.aa	a13,a5
.L381:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   169      cgcfg.U = 0;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   170  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   171      float32         sourceFreq = IfxDsadc_getModulatorInputClockFreq(dsadc->dsadc);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   172      float32         targetFreq = config->frequency;
	mov	d8,#0
.L159:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   173      cgcfg.B.DIVCG       = IfxDsadc_Dsadc_calcDIVx(sourceFreq / (32 * 32), &targetFreq);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   174      cgcfg.B.SIGPOL      = (config->inverted == FALSE) ? 0 : 1;
	ld.a	a4,[a12]
.L379:
	call	IfxDsadc_getModulatorInputClockFreq
.L378:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   175      cgcfg.B.BREV        = (config->bitReversed == FALSE) ? 0 : 1;
	ld.w	d15,[a13]4
.L441:
	st.w	[a10],d15
.L442:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   176      cgcfg.B.CGMOD       = config->carrierWaveformMode;
	movh	d15,#17536
.L443:
	div.f	d4,d2,d15
.L444:
	lea	a4,[a10]0
	call	IfxDsadc_Dsadc_calcDIVx
.L382:
	extr.u	d15,d2,#0,#8
	insert	d8,d8,d15,#4,#4
.L445:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   177  
	ld.bu	d15,[a13]1
.L446:
	jne	d15,#0,.L13
.L447:
	mov	d15,#0
.L448:
	j	.L14
.L13:
	mov	d15,#1
.L14:
	insert	d8,d8,d15,#3,#1
.L449:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   178      dsadc->dsadc->CGCFG = cgcfg;
	ld.bu	d15,[a13]2
.L450:
	jne	d15,#0,.L15
.L451:
	mov	d15,#0
.L452:
	j	.L16
.L15:
	mov	d15,#1
.L16:
	insert	d8,d8,d15,#2,#1
.L453:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   179  
	ld.bu	d15,[a13]
.L454:
	insert	d8,d8,d15,#0,#2
.L455:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   180      const IfxDsadc_Cgpwm_Out *pinPos = config->pinPos;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   181  
	ld.a	a2,[a12]
.L456:
	st.w	[a2]160,d8
.L163:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   182      if (pinPos != NULL_PTR)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   183      {                           /* Initialise positive carrier pin */
	ld.a	a15,[a13]8
.L383:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   184          IfxDsadc_initCgPwmPin(pinPos, config->pinMode, config->pinDriver);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   185      }
	jz.a	a15,.L17
.L457:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   186  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   187      const IfxDsadc_Cgpwm_Out *pinNeg = config->pinNeg;
	ld.bu	d5,[a13]16
.L458:
	ld.bu	d8,[a13]17
.L167:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     2   * \file IfxDsadc.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     3   * \brief DSADC  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     4   * \ingroup IfxLld_Dsadc
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     7   * \copyright Copyright (c) 2017 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    44   * \defgroup IfxLld_Dsadc_Std_Enum Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    45   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    46   * \defgroup IfxLld_Dsadc_Std_Operative Operative Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    47   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    48   * \defgroup IfxLld_Dsadc_Std_Support Support Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    49   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    50   * \defgroup IfxLld_Dsadc_Std_Interrupt Interrupt Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    51   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    52   * \defgroup IfxLld_Dsadc_Std_IO IO Pin Configuration Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    53   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    54   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    55  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    56  #ifndef IFXDSADC_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    57  #define IFXDSADC_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    58  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    59  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    60  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    61  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    62  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    63  #include "_Impl/IfxDsadc_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    64  #include "Src/Std/IfxSrc.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    65  #include "Scu/Std/IfxScuCcu.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    66  #include "_PinMap/IfxDsadc_PinMap.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    67  #include "IfxDsadc_reg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    68  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    69  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    70  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    71  /*--------------------------------Enumerations--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    72  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    73  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    74  /** \addtogroup IfxLld_Dsadc_Std_Enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    75   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    76  /** \brief Comb Filter (auxiliary) shift control\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    77   * Definition in Ifx_DSADC.FCFGA.B.AFSC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    78   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    79  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    80  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    81      IfxDsadc_AuxCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    82      IfxDsadc_AuxCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    83      IfxDsadc_AuxCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    84      IfxDsadc_AuxCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    85  } IfxDsadc_AuxCombFilterShift;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    86  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    87  /** \brief Comb Filter (auxiliary) configuration/type\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    88   * Definition in Ifx_DSADC.FCFGA.B.CFAC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    89   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    90  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    91  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    92      IfxDsadc_AuxCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    93      IfxDsadc_AuxCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    94      IfxDsadc_AuxCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    95      IfxDsadc_AuxCombFilterType_combF = 3   /**< \brief CICF */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    96  } IfxDsadc_AuxCombFilterType;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    97  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    98  /** \brief Service request generation (auxiliary)\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    99   * Definition in Ifx_DSADC.FCFGA.B.ESEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   100   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   101  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   102  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   103      IfxDsadc_AuxEvent_everyNewResult  = 0, /**< \brief Always, for each new result value */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   104      IfxDsadc_AuxEvent_insideBoundary  = 1, /**< \brief If result is inside the boundary band */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   105      IfxDsadc_AuxEvent_outsideBoundary = 2  /**< \brief If result is outside the boundary band */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   106  } IfxDsadc_AuxEvent;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   107  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   108  /** \brief Service request generation (auxiliary)\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   109   * Definition in Ifx_DSADC.FCFGA.B.EGT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   110   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   111  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   112  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   113      IfxDsadc_AuxGate_definedByESEL       = 0, /**< \brief Separate: generate events according to ESEL */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   114      IfxDsadc_AuxGate_coupledToIntegrator = 1  /**< \brief Coupled: generate events only when the integrator is enabled and after the discard phase defined by bitfield NVALDIS */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   115  } IfxDsadc_AuxGate;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   116  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   117  /** \brief Service request generation (auxiliary)\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   118   * Definition in Ifx_DSADC.FCFGA.B.SRGA
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   119   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   120  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   121  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   122      IfxDsadc_AuxServiceRequest_never     = 0,  /**< \brief Never, service requests disabled */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   123      IfxDsadc_AuxServiceRequest_auxFilter = 1,  /**< \brief Auxiliary filter: As selected by bitfield ESEL (\ref IfxDsadc_AuxEvent) */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   124      IfxDsadc_AuxServiceRequest_altSource = 2   /**< \brief Alternate source: Capturing of a sign delay value to register CGSYNCx (x = 0 - 5) */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   125  } IfxDsadc_AuxServiceRequest;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   126  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   127  /** \brief Carrier generation mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   128   * Definition in Ifx_DSADC.CGCFG.B.CGMOD
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   129   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   130  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   131  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   132      IfxDsadc_CarrierWaveformMode_stopped  = 0,  /**< \brief Carrier Generator stopped */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   133      IfxDsadc_CarrierWaveformMode_square   = 1,  /**< \brief Carrier Generator generates square wave */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   134      IfxDsadc_CarrierWaveformMode_triangle = 2,  /**< \brief Carrier Generator generates triangle wave */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   135      IfxDsadc_CarrierWaveformMode_sine     = 3   /**< \brief Carrier Generator generates sine wave */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   136  } IfxDsadc_CarrierWaveformMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   137  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   138  /** \brief Specifies the channel Index
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   139   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   140  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   141  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   142      IfxDsadc_ChannelId_0 = 0,  /**< \brief Specifies the channel Index 0 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   143      IfxDsadc_ChannelId_2 = 2,  /**< \brief Specifies the channel Index 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   144      IfxDsadc_ChannelId_3 = 3   /**< \brief Specifies the channel Index 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   145  } IfxDsadc_ChannelId;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   146  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   147  /** \brief Modulator common mode voltage selection\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   148   * Definition in Ifx_DSADC.MODCFGx.B.CMVS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   149   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   150  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   151  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   152      IfxDsadc_CommonModeVoltage_a = 0,  /**< \brief VCM = VAREF / 3.03 (1.65 V for VAREF = 5.0 V), recommended for VDDM = 3.3 V1.65V */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   153      IfxDsadc_CommonModeVoltage_b = 1,  /**< \brief VCM = VAREF / 2.27 (2.2 V for VAREF = 5.0 V), recommended for low distortion of AC-coupled signals */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   154      IfxDsadc_CommonModeVoltage_c = 2   /**< \brief VCM = VAREF / 2.0 (2.5 V for VAREF = 5.0 V), recommended for DC-coupled signals */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   155  } IfxDsadc_CommonModeVoltage;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   156  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   157  /** \brief FIR data shift control\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   158   * Selects the displacement caused by the data shifter at the FIR filter output\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   159   * Definition in Ifx_DSADC.FCFGM.B.DSH
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   160   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   161  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   162  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   163      IfxDsadc_FirDataShift_noShift  = 0,  /**< \brief no shift, use full range */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   164      IfxDsadc_FirDataShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   165      IfxDsadc_FirDataShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   166      IfxDsadc_FirDataShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   167  } IfxDsadc_FirDataShift;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   168  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   169  /** \brief FIR shift control\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   170   * Selects the displacement caused by the data shifter inbetween the FIR filter blocks.\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   171   * Definition in Ifx_DSADC.FCFGM.B.FSH
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   172   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   173  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   174  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   175      IfxDsadc_FirInternalShift_noShift  = 0, /**< \brief no shift, use full range */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   176      IfxDsadc_FirInternalShift_shiftBy1 = 1  /**< \brief Shift by 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   177  } IfxDsadc_FirInternalShift;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   178  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   179  /** \brief Modulator configuration of positive/negative input line\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   180   * Definition in Ifx_DSADC.MODCFGx.B.INCFGP and Ifx_DSADC.MODCFGx.B.INCFGN
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   181   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   182  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   183  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   184      IfxDsadc_InputConfig_inputPin          = 0,  /**< \brief Modulator input connected to external pin */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   185      IfxDsadc_InputConfig_supplyVoltage     = 1,  /**< \brief Modulator input connected to supply voltage V_ddm */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   186      IfxDsadc_InputConfig_commonModeVoltage = 2,  /**< \brief Modulator input connected to common mode voltage V_cm */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   187      IfxDsadc_InputConfig_referenceGround   = 3   /**< \brief Modulator input connected to reference ground V_ref */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   188  } IfxDsadc_InputConfig;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   189  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   190  /** \brief Demodulator input data source selection\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   191   * Definition in Ifx_DSADC.DICFG.B.DSRC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   192   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   193  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   194  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   195      IfxDsadc_InputDataSource_onChipStandAlone = 0,  /**< \brief On-chip modulator, standalone (3rd order) */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   196      IfxDsadc_InputDataSource_onChipCombined   = 1,  /**< \brief On-chip modulator, yield (2nd order) */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   197      IfxDsadc_InputDataSource_directInputA     = 2,  /**< \brief External, from input A, direct */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   198      IfxDsadc_InputDataSource_invertedInputA   = 3,  /**< \brief External, from input A, inverted */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   199      IfxDsadc_InputDataSource_directInputB     = 4,  /**< \brief External, from input B, direct */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   200      IfxDsadc_InputDataSource_invertedInputB   = 5   /**< \brief External, from input B, inverted */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   201  } IfxDsadc_InputDataSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   202  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   203  /** \brief Modulator gain select of analog input path\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   204   * Definition in Ifx_DSADC.MODCFGx.B.GAINSEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   205   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   206  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   207  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   208      IfxDsadc_InputGain_factor1  = 0, /**< \brief Input gain factor: 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   209      IfxDsadc_InputGain_factor2  = 1, /**< \brief Input gain factor: 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   210      IfxDsadc_InputGain_factor4  = 2, /**< \brief Input gain factor: 4 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   211      IfxDsadc_InputGain_factor8  = 3, /**< \brief Input gain factor: 8 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   212      IfxDsadc_InputGain_factor16 = 4  /**< \brief Input gain factor: 16 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   213  } IfxDsadc_InputGain;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   214  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   215  /** \brief Modulator input pin selection\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   216   * Definition in Ifx_DSADC.MODCFGx.B.INMUX
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   217   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   218  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   219  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   220      IfxDsadc_InputPin_a = 0,  /**< \brief Pin A connected to modulator input */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   221      IfxDsadc_InputPin_b = 1,  /**< \brief Pin B connected to modulator input */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   222      IfxDsadc_InputPin_c = 2,  /**< \brief Pin C connected to modulator input */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   223      IfxDsadc_InputPin_d = 3   /**< \brief Pin D connected to modulator input */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   224  } IfxDsadc_InputPin;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   225  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   226  /** \brief Integrator window size\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   227   * Definition in Ifx_DSADC.IWCTR.B.IWS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   228   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   229  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   230  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   231      IfxDsadc_IntegrationWindowSize_internalControl = 0,  /**< \brief Internal control: stop integrator after REPVAL+1 integration cycles */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   232      IfxDsadc_IntegrationWindowSize_externalControl = 1   /**< \brief External control: stop integrator when bit INTEN becomes 0 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   233  } IfxDsadc_IntegrationWindowSize;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   234  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   235  /** \brief Integrator trigger mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   236   * NOTE: switch-first to bypassed before using other mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   237   * Definition in Ifx_DSADC.DICFG.B.ITRMODE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   238   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   239  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   240  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   241      IfxDsadc_IntegratorTrigger_bypassed     = 0, /**< \brief No integration trigger, integrator bypassed */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   242      IfxDsadc_IntegratorTrigger_fallingEdge  = 1, /**< \brief Trigger event upon a falling edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   243      IfxDsadc_IntegratorTrigger_risingEdge   = 2, /**< \brief Trigger event upon a rising edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   244      IfxDsadc_IntegratorTrigger_alwaysActive = 3  /**< \brief No trigger, integrator active all the time */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   245  } IfxDsadc_IntegratorTrigger;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   246  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   247  /** \brief Low power supply voltage select\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   248   * Definition in Ifx_DSADC.GLOBCFG.B.LOSUP
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   249   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   250  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   251  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   252      IfxDsadc_LowPowerSupply_5V   = 0, /**< \brief Supply Voltage for Analog Circuitry set to 5V */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   253      IfxDsadc_LowPowerSupply_3_3V = 1  /**< \brief Supply Voltage for Analog Circuitry set to 3.3V */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   254  } IfxDsadc_LowPowerSupply;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   255  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   256  /** \brief Comb Filter (Main Chain) shift control\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   257   * Definition in Ifx_DSADC.FCFGC.B.MFSC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   258   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   259  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   260  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   261      IfxDsadc_MainCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   262      IfxDsadc_MainCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   263      IfxDsadc_MainCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   264      IfxDsadc_MainCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   265  } IfxDsadc_MainCombFilterShift;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   266  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   267  /** \brief Comb Filter (Main Chain) configuration/type\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   268   * Definition in Ifx_DSADC.FCFGC.B.CFMC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   269   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   270  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   271  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   272      IfxDsadc_MainCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   273      IfxDsadc_MainCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   274      IfxDsadc_MainCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   275      IfxDsadc_MainCombFilterType_combF = 3   /**< \brief CICF */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   276  } IfxDsadc_MainCombFilterType;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   277  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   278  /** \brief Service request generation (main chain)\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   279   * Definition in Ifx_DSADC.FCFGC.B.SRGM
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   280   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   281  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   282  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   283      IfxDsadc_MainServiceRequest_never          = 0,  /**< \brief Never, service requests disabled */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   284      IfxDsadc_MainServiceRequest_highGateSignal = 1,  /**< \brief While gate (selected trigger signal) is high */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   285      IfxDsadc_MainServiceRequest_lowGateSignal  = 2,  /**< \brief While gate (selected trigger signal) is low */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   286      IfxDsadc_MainServiceRequest_everyNewResult = 3   /**< \brief Always, for each new result value */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   287  } IfxDsadc_MainServiceRequest;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   288  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   289  /** \brief Modulator clock select\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   290   * Definition in Ifx_DSADC.GLOBCFG.B.MCSEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   291   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   292  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   293  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   294      IfxDsadc_ModulatorClock_off   = 0,  /**< \brief Internal clock off, no source selected */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   295      IfxDsadc_ModulatorClock_fDSD  = 1,  /**< \brief f_dsd clock selected */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   296      IfxDsadc_ModulatorClock_fERAY = 2,  /**< \brief f_eray clock selected */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   297      IfxDsadc_ModulatorClock_fOSC0 = 3   /**< \brief f_osc0 clock selected */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   298  } IfxDsadc_ModulatorClock;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   299  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   300  /** \brief Modulator divider factor for modulator clock\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   301   * Definition in Ifx_DSADC.MODCFGx.B.DIVM
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   302   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   303  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   304  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   305      IfxDsadc_ModulatorClockDivider_div2 = 0,      /**< \brief f_mod = f_clk / 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   306      IfxDsadc_ModulatorClockDivider_div4,          /**< \brief f_mod = f_clk / 4  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   307      IfxDsadc_ModulatorClockDivider_div6,          /**< \brief f_mod = f_clk / 6  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   308      IfxDsadc_ModulatorClockDivider_div8,          /**< \brief f_mod = f_clk / 8  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   309      IfxDsadc_ModulatorClockDivider_div10,         /**< \brief f_mod = f_clk / 10  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   310      IfxDsadc_ModulatorClockDivider_div12,         /**< \brief f_mod = f_clk / 12  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   311      IfxDsadc_ModulatorClockDivider_div14,         /**< \brief f_mod = f_clk / 14  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   312      IfxDsadc_ModulatorClockDivider_div16,         /**< \brief f_mod = f_clk / 16  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   313      IfxDsadc_ModulatorClockDivider_div18,         /**< \brief f_mod = f_clk / 18  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   314      IfxDsadc_ModulatorClockDivider_div20,         /**< \brief f_mod = f_clk / 20  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   315      IfxDsadc_ModulatorClockDivider_div22,         /**< \brief f_mod = f_clk / 22  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   316      IfxDsadc_ModulatorClockDivider_div24,         /**< \brief f_mod = f_clk / 24  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   317      IfxDsadc_ModulatorClockDivider_div26,         /**< \brief f_mod = f_clk / 26  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   318      IfxDsadc_ModulatorClockDivider_div28,         /**< \brief f_mod = f_clk / 28  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   319      IfxDsadc_ModulatorClockDivider_div30,         /**< \brief f_mod = f_clk / 30  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   320      IfxDsadc_ModulatorClockDivider_div32          /**< \brief f_mod = f_clk / 32  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   321  } IfxDsadc_ModulatorClockDivider;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   322  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   323  /** \brief Rectifier sign source\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   324   * Selects the sign signal that is to be delayed.\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   325   * Definition in Ifx_DSADC.RECT.B.SSRC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   326   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   327  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   328  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   329      IfxDsadc_RectifierSignSource_onChipGenerator = 0,  /**< \brief On-chip carrier generator */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   330      IfxDsadc_RectifierSignSource_nextChannel     = 1,  /**< \brief Sign of result of next channel */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   331      IfxDsadc_RectifierSignSource_externalA       = 2,  /**< \brief External sign signal A */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   332      IfxDsadc_RectifierSignSource_externalB       = 3   /**< \brief External sign signal B */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   333  } IfxDsadc_RectifierSignSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   334  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   335  /** \brief Demodulator sample clock source select\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   336   * Definition in Ifx_DSADC.DICFG.B.CSRC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   337   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   338  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   339  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   340      IfxDsadc_SampleClockSource_internal = 0,  /**< \brief Internal clock */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   341      IfxDsadc_SampleClockSource_inputA   = 1,  /**< \brief External clock, from Input A */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   342      IfxDsadc_SampleClockSource_inputB   = 2,  /**< \brief External clock, from Input B */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   343      IfxDsadc_SampleClockSource_inputC   = 3   /**< \brief External clock, from Input C */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   344  } IfxDsadc_SampleClockSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   345  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   346  /** \brief Demodulator data strobe generation mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   347   * Definition in Ifx_DSADC.DICFG.B.STROBE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   348   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   349  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   350  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   351      IfxDsadc_SampleStrobe_noDataStrobe            = 0, /**< \brief No data strobe */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   352      IfxDsadc_SampleStrobe_sampleOnRisingEdge      = 1, /**< \brief Direct clock, a sample trigger is generated at each rising clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   353      IfxDsadc_SampleStrobe_sampleOnFallingEdge     = 2, /**< \brief Direct clock, a sample trigger is generated at each falling clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   354      IfxDsadc_SampleStrobe_sampleOnBothEdges       = 3, /**< \brief Double data, a sample trigger is generated at each rising and falling clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   355      IfxDsadc_SampleStrobe_reserved                = 4, /**< \brief don't use */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   356      IfxDsadc_SampleStrobe_sampleOnTwoRisingEdges  = 5, /**< \brief Double clock, a sample trigger is generated at every 2nd rising clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   357      IfxDsadc_SampleStrobe_sampleOnTwoFallingEdges = 6  /**< \brief Double clock, a sample trigger is generated at every 2nd falling clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   358  } IfxDsadc_SampleStrobe;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   359  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   360  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   361   * Definition in Ifx_DSADC.CLC.B.EDIS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   362   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   363  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   364  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   365      IfxDsadc_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   366      IfxDsadc_SleepMode_disable = 1  /**< \brief disables sleep mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   367  } IfxDsadc_SleepMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   368  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   369  /** \brief Timestamp trigger mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   370   * Definition in Ifx_DSADC.DICFG.B.TSTRMODE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   371   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   372  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   373  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   374      IfxDsadc_TimestampTrigger_noTrigger   = 0,  /**< \brief No timestamp trigger */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   375      IfxDsadc_TimestampTrigger_fallingEdge = 1,  /**< \brief Trigger event upon a falling edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   376      IfxDsadc_TimestampTrigger_risingEdge  = 2,  /**< \brief Trigger event upon a rising edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   377      IfxDsadc_TimestampTrigger_eachEdge    = 3   /**< \brief Trigger event upon each edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   378  } IfxDsadc_TimestampTrigger;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   379  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   380  /** \brief Trigger select\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   381   * Definition in Ifx_DSADC.DICFG.B.TRSEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   382   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   383  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   384  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   385      IfxDsadc_TriggerInput_a = 0,  /**< \brief dsadc trig 0 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   386      IfxDsadc_TriggerInput_b = 1,  /**< \brief dsadc trig 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   387      IfxDsadc_TriggerInput_c = 2,  /**< \brief vadc trig 0 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   388      IfxDsadc_TriggerInput_d = 3,  /**< \brief vadc trig 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   389      IfxDsadc_TriggerInput_e = 4,  /**< \brief external pin e */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   390      IfxDsadc_TriggerInput_f = 5,  /**< \brief external pin f */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   391      IfxDsadc_TriggerInput_g = 6,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   392      IfxDsadc_TriggerInput_h = 7
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   393  } IfxDsadc_TriggerInput;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   394  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   395  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   397  /** \addtogroup IfxLld_Dsadc_Std_Operative
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   398   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   399  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   400  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   402  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   403  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   404  /** \brief Sets the sensitivity of the module to sleep signal
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   405   * \param dsadc pointer to DSADC registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   406   * \param mode mode selection (enable/disable)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   407   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   408   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   409  IFX_INLINE void IfxDsadc_setSleepMode(Ifx_DSADC *dsadc, IfxDsadc_SleepMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   410  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   411  /** \brief Enables the conversion of multiple channels
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   412   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   413   * \param modulatorMask the modulator which should be running (bitwise selection)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   414   * \param channelMask the channels which should be scanned (bitwise selection)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   415   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   416   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   417   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   418   *     // enable the conversion of all 6 DSADC channels
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   419   *     IfxDsadc_startScan(&MODULE_DSADC, 0x3FU, 0x3FU);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   420   *     // results are now available in IFXDSADC(ds).CH[x].RESM.B.RESULT (x=0..5)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   421   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   422   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   423   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   424  IFX_INLINE void IfxDsadc_startScan(Ifx_DSADC *dsadc, uint32 modulatorMask, uint32 channelMask);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   425  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   426  /** \brief Disables the conversion of multiple channels
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   427   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   428   * \param modulatorMask the modulator which should be disabled (bitwise selection)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   429   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   430   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   431   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   432   *     // disable the modulators of all 6 DSADC channels
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   433   *     IfxDsadc_stopScan(&MODULE_DSADC, 0x3FU);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   434   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   435   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   436   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   437  IFX_INLINE void IfxDsadc_stopScan(Ifx_DSADC *dsadc, uint32 modulatorMask);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   438  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   439  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   440  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   441  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   442  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   443  /** \brief resets the DSADC kernel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   444   * \param dsadc pointer to DSADC registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   445   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   446   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   447  IFX_EXTERN void IfxDsadc_resetModule(Ifx_DSADC *dsadc);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   448  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   449  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   450  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   451  /** \addtogroup IfxLld_Dsadc_Std_Support
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   452   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   453  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   454  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   455  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   456  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   457  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   458  /** \brief Get result from the auxiliary chain
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   459   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   460   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   461   * \return result from the auxiliary chain
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   462   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   463  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   464  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   465  /** \brief Get the main comb decimation factor
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   466   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   467   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   468   * \return the main comb decimation factor
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   469   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   470  IFX_INLINE uint16 IfxDsadc_getMainCombDecimation(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   471  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   472  /** \brief Get result from the main chain
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   473   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   474   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   475   * \return result from the main chain
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   476   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   477  IFX_INLINE sint16 IfxDsadc_getMainResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   478  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   479  /** \brief Return TRUE if DSADC module is enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   480   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   481   * \return TRUE if DSADC module is enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   482   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   483  IFX_INLINE boolean IfxDsadc_isModuleEnabled(Ifx_DSADC *dsadc);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   484  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   485  /** \brief Set the carrier waveform mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   486   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   487   * \param waveformMode the waveform mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   488   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   489   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   490  IFX_INLINE void IfxDsadc_setCarrierMode(Ifx_DSADC *dsadc, IfxDsadc_CarrierWaveformMode waveformMode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   491  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   492  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   493  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   494  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   495  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   496  /** \brief Get the sample frequency of the integrator output in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   497   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   498   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   499   * \return frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   500   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   501  IFX_EXTERN float32 IfxDsadc_getIntegratorOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   502  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   503  /** \brief Get the sample frequency of the main COMB filter output in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   504   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   505   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   506   * \return frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   507   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   508  IFX_EXTERN float32 IfxDsadc_getMainCombOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   509  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   510  /** \brief Estimate the group delay of main-chain filters in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   511   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   512   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   513   * \return delay in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   514   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   515  IFX_EXTERN float32 IfxDsadc_getMainGroupDelay(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   516  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   517  /** \brief Get the modulator clock frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   518   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   519   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   520   * \return frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   521   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   522  IFX_EXTERN float32 IfxDsadc_getModulatorClockFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   523  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   524  /** \brief Get the input frequency of DSADC in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   525   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   526   * \return frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   527   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   528  IFX_EXTERN float32 IfxDsadc_getModulatorInputClockFreq(Ifx_DSADC *dsadc);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   529  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   530  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   531  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   532  /** \addtogroup IfxLld_Dsadc_Std_Interrupt
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   533   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   534  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   535  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   536  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   537  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   538  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   539  /** \brief Address/pointer to the interrupt source register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   540   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   541   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   542   * \return Address/pointer to the interrupt source register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   543   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   544  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getAuxSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   545  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   546  /** \brief Get the interrupt source register for a Main event
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   547   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   548   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   549   * \return Address/pointer to the interrupt source register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   550   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   551  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getMainSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   552  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   553  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   554  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   555  /** \addtogroup IfxLld_Dsadc_Std_IO
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   556   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   557  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   558  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   559  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   560  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   561  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   562  /** \brief Initializes a CGPWM output
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   563   * \param cgPwm the CGPWM Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   564   * \param pinMode the pin output mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   565   * \param padDriver the pad driver mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   566   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   567   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   568  IFX_INLINE void IfxDsadc_initCgPwmPin(const IfxDsadc_Cgpwm_Out *cgPwm, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   569  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   570  /** \brief Initializes a CIN input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   571   * \param cIn the CIN Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   572   * \param cInMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   573   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   574   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   575   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   576  IFX_INLINE void IfxDsadc_initCinPin(const IfxDsadc_Cin_In *cIn, IfxPort_InputMode cInMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   577  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   578  /** \brief Initializes a COUT output
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   579   * \param cout the COUT Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   580   * \param pinMode the pin output mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   581   * \param padDriver the pad driver mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   582   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   583   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   584  IFX_INLINE void IfxDsadc_initCoutPin(const IfxDsadc_Cout_Out *cout, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   585  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   586  /** \brief Initializes a DIN input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   587   * \param dIn the DIN Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   588   * \param dInMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   589   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   590   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   591   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   592  IFX_INLINE void IfxDsadc_initDinPin(const IfxDsadc_Din_In *dIn, IfxPort_InputMode dInMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   593  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   594  /** \brief Initializes a DS input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   595   * \param dsn the DSN Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   596   * \param pinMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   597   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   598   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   599   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   600  IFX_INLINE void IfxDsadc_initDsnPin(const IfxDsadc_Dsn_In *dsn, IfxPort_InputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   601  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   602  /** \brief Initializes a DS input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   603   * \param dsp the DSP Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   604   * \param pinMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   605   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   606   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   607   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   608  IFX_INLINE void IfxDsadc_initDspPin(const IfxDsadc_Dsp_In *dsp, IfxPort_InputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   609  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   610  /** \brief Initializes a ITR input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   611   * \param itr the ITR Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   612   * \param itrMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   613   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   614   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   615   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   616  IFX_INLINE void IfxDsadc_initItrPin(const IfxDsadc_Itr_In *itr, IfxPort_InputMode itrMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   617  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   618  /** \brief Initializes a SG input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   619   * \param sg the SG Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   620   * \param pinMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   621   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   622   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   623   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   624  IFX_INLINE void IfxDsadc_initSgPin(const IfxDsadc_Sg_In *sg, IfxPort_InputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   625  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   626  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   627  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   628  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   629  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   630  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   631  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   632  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   633  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   634      return (sint16)(dsadc->CH[channel].RESA.B.RESULT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   635  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   636  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   637  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   638  IFX_INLINE uint16 IfxDsadc_getMainCombDecimation(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   639  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   640      return (uint16)(1U + dsadc->CH[channel].FCFGC.B.CFMDF);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   641  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   642  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   643  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   644  IFX_INLINE sint16 IfxDsadc_getMainResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   645  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   646      return (sint16)(dsadc->CH[channel].RESM.B.RESULT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   647  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   648  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   649  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   650  IFX_INLINE void IfxDsadc_initCgPwmPin(const IfxDsadc_Cgpwm_Out *cgPwm, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   651  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   652      IfxPort_setPinModeOutput(cgPwm->pin.port, cgPwm->pin.pinIndex, pinMode, cgPwm->select);
	ld.a	a4,[a15]4
.L459:
	ld.bu	d4,[a15]8
.L460:
	ld.bu	d15,[a15]12
.L176:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    45   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    46   * \defgroup IfxLld_Port_Std_Enum Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    47   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    48   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    49   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    50   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    51   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    52   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    53   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    54   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    55  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    56  #ifndef IFXPORT_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    57  #define IFXPORT_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    58  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    59  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    60  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    61  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    62  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    63  #include "_Impl/IfxPort_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    64  #include "Scu/Std/IfxScuWdt.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    65  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    66  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    67  /*--------------------------------Enumerations--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    68  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    69  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    70  /** \addtogroup IfxLld_Port_Std_Enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    71   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    72  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    73   * HSCT module.declared in MODULE_PORTx.LPCRx
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    74   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    76  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    77      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    78      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    79  } IfxPort_ControlledBy;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    80  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    81  /** \brief Ifx_P output modification modes definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    82   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    83  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    84  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    85      IfxPort_InputMode_undefined    = -1,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    86      IfxPort_InputMode_noPullDevice = 0 << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    87          IfxPort_InputMode_pullDown = 1U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    88          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    89  } IfxPort_InputMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    90  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    91  /** \brief Ifx_P input / output mode definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    92   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    93   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    94   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    95  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    96  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    97      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    98      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    99      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   100      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   101      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   102      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   103      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   104      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   105      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   106      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   107      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   108      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   109      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   110      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   111      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   112      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   113      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   114      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   115      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   116  } IfxPort_Mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   117  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   118  /** \brief Pin output alternate index
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   119   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   120  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   121  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   122      IfxPort_OutputIdx_general  = 0x10U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   123          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   124          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   125          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   126          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   127          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   128          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   129          IfxPort_OutputIdx_alt7 = 0x17U << 3
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   130  } IfxPort_OutputIdx;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   131  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   132  /** \brief Pin output mode definition
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   133   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   134  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   135  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   136      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   137          IfxPort_OutputMode_openDrain = 0x18U << 3
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_OutputMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   139  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   140  /** \brief Pad driver mode definition (strength and slew rate).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   141   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   142   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   143   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   144  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   145  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   146      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   147      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   148      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   149      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   150      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   151      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   152      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   153      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   154      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   155      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   156      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   157      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_PadDriver;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   159  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   160  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   161   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   162  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   163  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   164      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   165      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   166  } IfxPort_PadSupply;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   167  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   168  /** \brief Ifx_P output modification modes definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   169   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   170   * \see Ifx_P.OMR, IfxPort_setPinState()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   171   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   172  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   173  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   174      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   175      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   176      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   177      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   178  } IfxPort_State;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   179  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   180  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   181  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   182  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   183  /*-----------------------------Data Structures--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   184  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   185  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   186  /** \addtogroup IfxLld_Port_Std_DataStructures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   187   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   188  /** \brief Defines a pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   189   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   190  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   191  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   192      Ifx_P *port;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   193      uint8  pinIndex;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   194  } IfxPort_Pin;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   195  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   196  /** \brief To configure pins
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   197   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   198  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   199  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   200      Ifx_P            *port;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   201      uint8             pinIndex;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   202      IfxPort_OutputIdx mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   203      IfxPort_PadDriver padDriver;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   204  } IfxPort_Pin_Config;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   205  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   206  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   207  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   208  /** \addtogroup IfxLld_Port_Std_SinglePin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   209   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   210  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   211  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   212  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   213  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   214  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   215  /** \brief Return the port state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   216   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   217   * \param pinIndex Specifies the pin for which the state should be returned.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   218   * \return Returns TRUE the pin is high; FALSE the pin is low
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   219   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   220   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   221   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   222   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   223   *      // ...
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   224   *    }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   225   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   226   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   227   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   228  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   229  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   230  /** \brief Set the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   231   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   232   * \param pinIndex Specifies the pin to be set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   233   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   234   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   235   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   236   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   237   * IfxPort_setPinHigh(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   238   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   239   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   240   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   241   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   242   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   243  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   244  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   245  /** \brief Reset the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   246   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   247   * \param pinIndex Specifies the pin to be reset.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   248   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   249   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   250   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   251   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   252   * IfxPort_setPinLow(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   253   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   254   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   255   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   256   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   257   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   258  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   259  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   260  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   261   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   262   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   263   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   264   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   265   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   266   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   267   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   268   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   269   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   270   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   271   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   272  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   273  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   274  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   275   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   276   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   277   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   278   * \param index Specifies the alternate (or general purpose) output channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   279   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   280   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   281   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   282   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   283   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   284   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   285   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   286   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   287  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   288  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   289  /** \brief Set / Resets / Toggle the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   290   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   291   * \param pinIndex Specifies the pin to modify.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   292   * \param action Specifies the action: set, reset, toggle.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   293   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   294   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   295   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   296   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   297   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   298   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   299   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   300   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   301   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   302   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   303  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   304  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   305  /** \brief Toggle the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin to be toggled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   308   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   309   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   311   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   312   * IfxPort_togglePin(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   313   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   314   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   315   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   316   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   317   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   318  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   319  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   320  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   321  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   322  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   323  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   324  /** \brief Disable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   325   * This function disables the emergency stop function. A check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   326   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   327   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   328   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   329   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   330   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   331   * /code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   332   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   333   *     {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   334   *         // failed to disable emergency stop for P33.0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   335   *     }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   336   * /endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   337   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   338   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   339   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   340   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   341  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   342  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   343  /** \brief Enable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   344   * This function enables the emergency stop function. A check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   345   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   346   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   347   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   348   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   350   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   351   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   352   *       // failed to enable emergency stop for P33.0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   353   *     }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   354   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   355   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   356   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   357   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   358   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   359  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   360  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   361  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   362   * Also Configures the P40/P41 Port for digital functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   363   * which bydefault support analog functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   364   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   365   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   366   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   367   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   368   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   369   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   370   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   371   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   372   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   373   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   374   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   375  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   376  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   377  /** \brief Configure the pad driver mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   378   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   379   * \param pinIndex Specifies the pin for which the mode will be set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   380   * \param padDriver Specifies the driver mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   381   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   382   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   383   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   384   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   385   * // enable strong 3.3V driver
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   386   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   387   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   388   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   389   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   390  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   391  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   392  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   393  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   394  /** \addtogroup IfxLld_Port_Std_PortGroup
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   395   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   397  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   398  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   399  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   400  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   401  /** \brief Return the port group state
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   402   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   403   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   404   * \param mask selects the pins which should be read (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   405   * \return Returns the selected pin values
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   406   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   407   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   408   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   409   * // read the current value of P33[7:0]
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   410   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   411   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   412   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   413   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   414  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   415  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   416  /** \brief Set the port group state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   417   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   418   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   419   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   420   * \param data specifies the value which should be set
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   421   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   422   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   423   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   424   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   425   * // configure P33.[7:0] as GPIO outputs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   426   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   427   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   428   * // set initial value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   429   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   430   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   431   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   432   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   433  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   434  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   435  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   436  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   437  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   438  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   439  /** \brief Returns the module address of the selected Port module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   440   * \param port Pointer to PORT module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   441   * \return PORT module register address
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   442   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   443  IFX_EXTERN Ifx_P *IfxPort_getAddress(IfxPort_Index port);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   444  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   445  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   446   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   447   * \return port index of IfxModule_IndexMap. return -1 in case of unknown port index.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   448   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   449  IFX_EXTERN IfxPort_Index IfxPort_getIndex(Ifx_P *port);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   450  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   451  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   452   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   453   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   454   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   455   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   456   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   457   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   458   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   459   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   460   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   461   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   462   *  \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   463   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   464   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   465  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   466  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   467  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   468   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   469   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   470   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   471   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   472   * \param index Specifies the alternate (or general purpose) output channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   473   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   474   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   475   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   476   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   477   * // configure P33.[7:0] as GPIO outputs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   478   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   479   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   480   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   481   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   482  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   483  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   484  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   485   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   486   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   487   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   488   * \param padDriver Specifies the pad driver strength.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   489   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   490   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   491   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   492   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   493   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   494   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   495   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   496   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   497   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   498  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   499  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   500  /** \brief set LVDSH mode (configured for Port21)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   501   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   502   * \param pinIndex specifies pin  to be modified
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   503   * \param mode specifes the mode of pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   504   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   505   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   506   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   508  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   509  /** \brief set LVDSM mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   510   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   511   * \param pinIndex specifies pin to be modified
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   512   * \param lvdsPadDriver select speed grade of LVDS Pad
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   513   * \param padSupply select the PAD supply (5/3.3V)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   514   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   515   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   516  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   517  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   518  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   519  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   521  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   523  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   524  /** \brief Disable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   525   * This function disables the emergency stop function. No check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   526   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   527   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   528   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   529   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   530   * \see IfxPort_disableEmergencyStop()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   531   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   532   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   533  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   534  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   535  /** \brief Enable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   536   * This function enables the emergency stop function. No check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   537   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   538   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   539   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   540   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   541   * \see IfxPort_enableEmergencyStop()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   542   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   543   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   544  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   545  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   546  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   547  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   548  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   549  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   550  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   551  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   552      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   553  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   554  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   555  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   556  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   557  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   558      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   559  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   560  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   561  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   562  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   563  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   564      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   565  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   566  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   567  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   568  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   569  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   570      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   571  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   572  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   573  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   574  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   575  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   576      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   577  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   578  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   579  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   580  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   581  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   582      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   583  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   584  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   585  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   586  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   587  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   588      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)(index | mode));
	or	d5,d15
.L461:
	call	IfxPort_setPinMode
.L177:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   653  INE void IfxDsadc_initCinPin(const IfxDsadc_Cin_In *cIn, IfxPort_InputMode cInMode, IfxPort_PadDriver padDriver)
	ld.a	a4,[a15]4
.L462:
	ld.bu	d4,[a15]8
.L463:
	mov	d5,d8
	call	IfxPort_setPinPadDriver
.L17:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   188                     /* Initialise negative carrier pin */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   189          IfxDsadc_initCgPwmPin(pinNeg, config->pinMode, config->pinDriver);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   190      }
	ld.a	a15,[a13]12
.L384:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   191  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   192  
	jz.a	a15,.L18
.L464:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   193  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   194  void IfxDsadc_Dsadc_initChannel(IfxDsadc_Dsadc_Channel *channel, const IfxDsadc_Dsadc_ChannelConfig *config)
	ld.bu	d5,[a13]16
.L465:
	ld.bu	d8,[a13]17
.L188:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     2   * \file IfxDsadc.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     3   * \brief DSADC  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     4   * \ingroup IfxLld_Dsadc
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     7   * \copyright Copyright (c) 2017 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    44   * \defgroup IfxLld_Dsadc_Std_Enum Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    45   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    46   * \defgroup IfxLld_Dsadc_Std_Operative Operative Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    47   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    48   * \defgroup IfxLld_Dsadc_Std_Support Support Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    49   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    50   * \defgroup IfxLld_Dsadc_Std_Interrupt Interrupt Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    51   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    52   * \defgroup IfxLld_Dsadc_Std_IO IO Pin Configuration Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    53   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    54   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    55  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    56  #ifndef IFXDSADC_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    57  #define IFXDSADC_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    58  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    59  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    60  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    61  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    62  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    63  #include "_Impl/IfxDsadc_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    64  #include "Src/Std/IfxSrc.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    65  #include "Scu/Std/IfxScuCcu.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    66  #include "_PinMap/IfxDsadc_PinMap.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    67  #include "IfxDsadc_reg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    68  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    69  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    70  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    71  /*--------------------------------Enumerations--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    72  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    73  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    74  /** \addtogroup IfxLld_Dsadc_Std_Enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    75   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    76  /** \brief Comb Filter (auxiliary) shift control\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    77   * Definition in Ifx_DSADC.FCFGA.B.AFSC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    78   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    79  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    80  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    81      IfxDsadc_AuxCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    82      IfxDsadc_AuxCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    83      IfxDsadc_AuxCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    84      IfxDsadc_AuxCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    85  } IfxDsadc_AuxCombFilterShift;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    86  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    87  /** \brief Comb Filter (auxiliary) configuration/type\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    88   * Definition in Ifx_DSADC.FCFGA.B.CFAC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    89   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    90  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    91  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    92      IfxDsadc_AuxCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    93      IfxDsadc_AuxCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    94      IfxDsadc_AuxCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    95      IfxDsadc_AuxCombFilterType_combF = 3   /**< \brief CICF */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    96  } IfxDsadc_AuxCombFilterType;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    97  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    98  /** \brief Service request generation (auxiliary)\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    99   * Definition in Ifx_DSADC.FCFGA.B.ESEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   100   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   101  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   102  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   103      IfxDsadc_AuxEvent_everyNewResult  = 0, /**< \brief Always, for each new result value */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   104      IfxDsadc_AuxEvent_insideBoundary  = 1, /**< \brief If result is inside the boundary band */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   105      IfxDsadc_AuxEvent_outsideBoundary = 2  /**< \brief If result is outside the boundary band */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   106  } IfxDsadc_AuxEvent;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   107  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   108  /** \brief Service request generation (auxiliary)\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   109   * Definition in Ifx_DSADC.FCFGA.B.EGT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   110   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   111  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   112  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   113      IfxDsadc_AuxGate_definedByESEL       = 0, /**< \brief Separate: generate events according to ESEL */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   114      IfxDsadc_AuxGate_coupledToIntegrator = 1  /**< \brief Coupled: generate events only when the integrator is enabled and after the discard phase defined by bitfield NVALDIS */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   115  } IfxDsadc_AuxGate;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   116  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   117  /** \brief Service request generation (auxiliary)\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   118   * Definition in Ifx_DSADC.FCFGA.B.SRGA
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   119   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   120  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   121  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   122      IfxDsadc_AuxServiceRequest_never     = 0,  /**< \brief Never, service requests disabled */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   123      IfxDsadc_AuxServiceRequest_auxFilter = 1,  /**< \brief Auxiliary filter: As selected by bitfield ESEL (\ref IfxDsadc_AuxEvent) */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   124      IfxDsadc_AuxServiceRequest_altSource = 2   /**< \brief Alternate source: Capturing of a sign delay value to register CGSYNCx (x = 0 - 5) */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   125  } IfxDsadc_AuxServiceRequest;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   126  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   127  /** \brief Carrier generation mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   128   * Definition in Ifx_DSADC.CGCFG.B.CGMOD
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   129   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   130  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   131  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   132      IfxDsadc_CarrierWaveformMode_stopped  = 0,  /**< \brief Carrier Generator stopped */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   133      IfxDsadc_CarrierWaveformMode_square   = 1,  /**< \brief Carrier Generator generates square wave */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   134      IfxDsadc_CarrierWaveformMode_triangle = 2,  /**< \brief Carrier Generator generates triangle wave */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   135      IfxDsadc_CarrierWaveformMode_sine     = 3   /**< \brief Carrier Generator generates sine wave */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   136  } IfxDsadc_CarrierWaveformMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   137  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   138  /** \brief Specifies the channel Index
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   139   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   140  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   141  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   142      IfxDsadc_ChannelId_0 = 0,  /**< \brief Specifies the channel Index 0 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   143      IfxDsadc_ChannelId_2 = 2,  /**< \brief Specifies the channel Index 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   144      IfxDsadc_ChannelId_3 = 3   /**< \brief Specifies the channel Index 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   145  } IfxDsadc_ChannelId;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   146  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   147  /** \brief Modulator common mode voltage selection\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   148   * Definition in Ifx_DSADC.MODCFGx.B.CMVS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   149   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   150  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   151  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   152      IfxDsadc_CommonModeVoltage_a = 0,  /**< \brief VCM = VAREF / 3.03 (1.65 V for VAREF = 5.0 V), recommended for VDDM = 3.3 V1.65V */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   153      IfxDsadc_CommonModeVoltage_b = 1,  /**< \brief VCM = VAREF / 2.27 (2.2 V for VAREF = 5.0 V), recommended for low distortion of AC-coupled signals */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   154      IfxDsadc_CommonModeVoltage_c = 2   /**< \brief VCM = VAREF / 2.0 (2.5 V for VAREF = 5.0 V), recommended for DC-coupled signals */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   155  } IfxDsadc_CommonModeVoltage;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   156  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   157  /** \brief FIR data shift control\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   158   * Selects the displacement caused by the data shifter at the FIR filter output\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   159   * Definition in Ifx_DSADC.FCFGM.B.DSH
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   160   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   161  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   162  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   163      IfxDsadc_FirDataShift_noShift  = 0,  /**< \brief no shift, use full range */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   164      IfxDsadc_FirDataShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   165      IfxDsadc_FirDataShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   166      IfxDsadc_FirDataShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   167  } IfxDsadc_FirDataShift;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   168  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   169  /** \brief FIR shift control\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   170   * Selects the displacement caused by the data shifter inbetween the FIR filter blocks.\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   171   * Definition in Ifx_DSADC.FCFGM.B.FSH
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   172   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   173  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   174  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   175      IfxDsadc_FirInternalShift_noShift  = 0, /**< \brief no shift, use full range */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   176      IfxDsadc_FirInternalShift_shiftBy1 = 1  /**< \brief Shift by 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   177  } IfxDsadc_FirInternalShift;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   178  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   179  /** \brief Modulator configuration of positive/negative input line\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   180   * Definition in Ifx_DSADC.MODCFGx.B.INCFGP and Ifx_DSADC.MODCFGx.B.INCFGN
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   181   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   182  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   183  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   184      IfxDsadc_InputConfig_inputPin          = 0,  /**< \brief Modulator input connected to external pin */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   185      IfxDsadc_InputConfig_supplyVoltage     = 1,  /**< \brief Modulator input connected to supply voltage V_ddm */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   186      IfxDsadc_InputConfig_commonModeVoltage = 2,  /**< \brief Modulator input connected to common mode voltage V_cm */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   187      IfxDsadc_InputConfig_referenceGround   = 3   /**< \brief Modulator input connected to reference ground V_ref */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   188  } IfxDsadc_InputConfig;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   189  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   190  /** \brief Demodulator input data source selection\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   191   * Definition in Ifx_DSADC.DICFG.B.DSRC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   192   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   193  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   194  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   195      IfxDsadc_InputDataSource_onChipStandAlone = 0,  /**< \brief On-chip modulator, standalone (3rd order) */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   196      IfxDsadc_InputDataSource_onChipCombined   = 1,  /**< \brief On-chip modulator, yield (2nd order) */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   197      IfxDsadc_InputDataSource_directInputA     = 2,  /**< \brief External, from input A, direct */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   198      IfxDsadc_InputDataSource_invertedInputA   = 3,  /**< \brief External, from input A, inverted */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   199      IfxDsadc_InputDataSource_directInputB     = 4,  /**< \brief External, from input B, direct */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   200      IfxDsadc_InputDataSource_invertedInputB   = 5   /**< \brief External, from input B, inverted */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   201  } IfxDsadc_InputDataSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   202  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   203  /** \brief Modulator gain select of analog input path\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   204   * Definition in Ifx_DSADC.MODCFGx.B.GAINSEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   205   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   206  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   207  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   208      IfxDsadc_InputGain_factor1  = 0, /**< \brief Input gain factor: 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   209      IfxDsadc_InputGain_factor2  = 1, /**< \brief Input gain factor: 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   210      IfxDsadc_InputGain_factor4  = 2, /**< \brief Input gain factor: 4 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   211      IfxDsadc_InputGain_factor8  = 3, /**< \brief Input gain factor: 8 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   212      IfxDsadc_InputGain_factor16 = 4  /**< \brief Input gain factor: 16 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   213  } IfxDsadc_InputGain;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   214  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   215  /** \brief Modulator input pin selection\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   216   * Definition in Ifx_DSADC.MODCFGx.B.INMUX
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   217   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   218  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   219  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   220      IfxDsadc_InputPin_a = 0,  /**< \brief Pin A connected to modulator input */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   221      IfxDsadc_InputPin_b = 1,  /**< \brief Pin B connected to modulator input */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   222      IfxDsadc_InputPin_c = 2,  /**< \brief Pin C connected to modulator input */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   223      IfxDsadc_InputPin_d = 3   /**< \brief Pin D connected to modulator input */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   224  } IfxDsadc_InputPin;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   225  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   226  /** \brief Integrator window size\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   227   * Definition in Ifx_DSADC.IWCTR.B.IWS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   228   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   229  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   230  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   231      IfxDsadc_IntegrationWindowSize_internalControl = 0,  /**< \brief Internal control: stop integrator after REPVAL+1 integration cycles */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   232      IfxDsadc_IntegrationWindowSize_externalControl = 1   /**< \brief External control: stop integrator when bit INTEN becomes 0 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   233  } IfxDsadc_IntegrationWindowSize;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   234  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   235  /** \brief Integrator trigger mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   236   * NOTE: switch-first to bypassed before using other mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   237   * Definition in Ifx_DSADC.DICFG.B.ITRMODE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   238   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   239  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   240  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   241      IfxDsadc_IntegratorTrigger_bypassed     = 0, /**< \brief No integration trigger, integrator bypassed */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   242      IfxDsadc_IntegratorTrigger_fallingEdge  = 1, /**< \brief Trigger event upon a falling edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   243      IfxDsadc_IntegratorTrigger_risingEdge   = 2, /**< \brief Trigger event upon a rising edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   244      IfxDsadc_IntegratorTrigger_alwaysActive = 3  /**< \brief No trigger, integrator active all the time */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   245  } IfxDsadc_IntegratorTrigger;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   246  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   247  /** \brief Low power supply voltage select\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   248   * Definition in Ifx_DSADC.GLOBCFG.B.LOSUP
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   249   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   250  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   251  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   252      IfxDsadc_LowPowerSupply_5V   = 0, /**< \brief Supply Voltage for Analog Circuitry set to 5V */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   253      IfxDsadc_LowPowerSupply_3_3V = 1  /**< \brief Supply Voltage for Analog Circuitry set to 3.3V */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   254  } IfxDsadc_LowPowerSupply;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   255  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   256  /** \brief Comb Filter (Main Chain) shift control\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   257   * Definition in Ifx_DSADC.FCFGC.B.MFSC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   258   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   259  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   260  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   261      IfxDsadc_MainCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   262      IfxDsadc_MainCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   263      IfxDsadc_MainCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   264      IfxDsadc_MainCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   265  } IfxDsadc_MainCombFilterShift;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   266  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   267  /** \brief Comb Filter (Main Chain) configuration/type\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   268   * Definition in Ifx_DSADC.FCFGC.B.CFMC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   269   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   270  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   271  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   272      IfxDsadc_MainCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   273      IfxDsadc_MainCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   274      IfxDsadc_MainCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   275      IfxDsadc_MainCombFilterType_combF = 3   /**< \brief CICF */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   276  } IfxDsadc_MainCombFilterType;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   277  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   278  /** \brief Service request generation (main chain)\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   279   * Definition in Ifx_DSADC.FCFGC.B.SRGM
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   280   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   281  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   282  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   283      IfxDsadc_MainServiceRequest_never          = 0,  /**< \brief Never, service requests disabled */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   284      IfxDsadc_MainServiceRequest_highGateSignal = 1,  /**< \brief While gate (selected trigger signal) is high */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   285      IfxDsadc_MainServiceRequest_lowGateSignal  = 2,  /**< \brief While gate (selected trigger signal) is low */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   286      IfxDsadc_MainServiceRequest_everyNewResult = 3   /**< \brief Always, for each new result value */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   287  } IfxDsadc_MainServiceRequest;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   288  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   289  /** \brief Modulator clock select\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   290   * Definition in Ifx_DSADC.GLOBCFG.B.MCSEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   291   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   292  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   293  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   294      IfxDsadc_ModulatorClock_off   = 0,  /**< \brief Internal clock off, no source selected */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   295      IfxDsadc_ModulatorClock_fDSD  = 1,  /**< \brief f_dsd clock selected */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   296      IfxDsadc_ModulatorClock_fERAY = 2,  /**< \brief f_eray clock selected */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   297      IfxDsadc_ModulatorClock_fOSC0 = 3   /**< \brief f_osc0 clock selected */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   298  } IfxDsadc_ModulatorClock;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   299  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   300  /** \brief Modulator divider factor for modulator clock\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   301   * Definition in Ifx_DSADC.MODCFGx.B.DIVM
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   302   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   303  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   304  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   305      IfxDsadc_ModulatorClockDivider_div2 = 0,      /**< \brief f_mod = f_clk / 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   306      IfxDsadc_ModulatorClockDivider_div4,          /**< \brief f_mod = f_clk / 4  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   307      IfxDsadc_ModulatorClockDivider_div6,          /**< \brief f_mod = f_clk / 6  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   308      IfxDsadc_ModulatorClockDivider_div8,          /**< \brief f_mod = f_clk / 8  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   309      IfxDsadc_ModulatorClockDivider_div10,         /**< \brief f_mod = f_clk / 10  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   310      IfxDsadc_ModulatorClockDivider_div12,         /**< \brief f_mod = f_clk / 12  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   311      IfxDsadc_ModulatorClockDivider_div14,         /**< \brief f_mod = f_clk / 14  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   312      IfxDsadc_ModulatorClockDivider_div16,         /**< \brief f_mod = f_clk / 16  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   313      IfxDsadc_ModulatorClockDivider_div18,         /**< \brief f_mod = f_clk / 18  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   314      IfxDsadc_ModulatorClockDivider_div20,         /**< \brief f_mod = f_clk / 20  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   315      IfxDsadc_ModulatorClockDivider_div22,         /**< \brief f_mod = f_clk / 22  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   316      IfxDsadc_ModulatorClockDivider_div24,         /**< \brief f_mod = f_clk / 24  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   317      IfxDsadc_ModulatorClockDivider_div26,         /**< \brief f_mod = f_clk / 26  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   318      IfxDsadc_ModulatorClockDivider_div28,         /**< \brief f_mod = f_clk / 28  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   319      IfxDsadc_ModulatorClockDivider_div30,         /**< \brief f_mod = f_clk / 30  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   320      IfxDsadc_ModulatorClockDivider_div32          /**< \brief f_mod = f_clk / 32  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   321  } IfxDsadc_ModulatorClockDivider;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   322  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   323  /** \brief Rectifier sign source\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   324   * Selects the sign signal that is to be delayed.\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   325   * Definition in Ifx_DSADC.RECT.B.SSRC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   326   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   327  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   328  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   329      IfxDsadc_RectifierSignSource_onChipGenerator = 0,  /**< \brief On-chip carrier generator */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   330      IfxDsadc_RectifierSignSource_nextChannel     = 1,  /**< \brief Sign of result of next channel */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   331      IfxDsadc_RectifierSignSource_externalA       = 2,  /**< \brief External sign signal A */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   332      IfxDsadc_RectifierSignSource_externalB       = 3   /**< \brief External sign signal B */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   333  } IfxDsadc_RectifierSignSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   334  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   335  /** \brief Demodulator sample clock source select\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   336   * Definition in Ifx_DSADC.DICFG.B.CSRC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   337   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   338  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   339  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   340      IfxDsadc_SampleClockSource_internal = 0,  /**< \brief Internal clock */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   341      IfxDsadc_SampleClockSource_inputA   = 1,  /**< \brief External clock, from Input A */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   342      IfxDsadc_SampleClockSource_inputB   = 2,  /**< \brief External clock, from Input B */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   343      IfxDsadc_SampleClockSource_inputC   = 3   /**< \brief External clock, from Input C */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   344  } IfxDsadc_SampleClockSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   345  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   346  /** \brief Demodulator data strobe generation mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   347   * Definition in Ifx_DSADC.DICFG.B.STROBE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   348   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   349  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   350  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   351      IfxDsadc_SampleStrobe_noDataStrobe            = 0, /**< \brief No data strobe */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   352      IfxDsadc_SampleStrobe_sampleOnRisingEdge      = 1, /**< \brief Direct clock, a sample trigger is generated at each rising clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   353      IfxDsadc_SampleStrobe_sampleOnFallingEdge     = 2, /**< \brief Direct clock, a sample trigger is generated at each falling clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   354      IfxDsadc_SampleStrobe_sampleOnBothEdges       = 3, /**< \brief Double data, a sample trigger is generated at each rising and falling clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   355      IfxDsadc_SampleStrobe_reserved                = 4, /**< \brief don't use */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   356      IfxDsadc_SampleStrobe_sampleOnTwoRisingEdges  = 5, /**< \brief Double clock, a sample trigger is generated at every 2nd rising clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   357      IfxDsadc_SampleStrobe_sampleOnTwoFallingEdges = 6  /**< \brief Double clock, a sample trigger is generated at every 2nd falling clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   358  } IfxDsadc_SampleStrobe;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   359  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   360  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   361   * Definition in Ifx_DSADC.CLC.B.EDIS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   362   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   363  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   364  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   365      IfxDsadc_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   366      IfxDsadc_SleepMode_disable = 1  /**< \brief disables sleep mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   367  } IfxDsadc_SleepMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   368  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   369  /** \brief Timestamp trigger mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   370   * Definition in Ifx_DSADC.DICFG.B.TSTRMODE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   371   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   372  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   373  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   374      IfxDsadc_TimestampTrigger_noTrigger   = 0,  /**< \brief No timestamp trigger */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   375      IfxDsadc_TimestampTrigger_fallingEdge = 1,  /**< \brief Trigger event upon a falling edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   376      IfxDsadc_TimestampTrigger_risingEdge  = 2,  /**< \brief Trigger event upon a rising edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   377      IfxDsadc_TimestampTrigger_eachEdge    = 3   /**< \brief Trigger event upon each edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   378  } IfxDsadc_TimestampTrigger;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   379  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   380  /** \brief Trigger select\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   381   * Definition in Ifx_DSADC.DICFG.B.TRSEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   382   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   383  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   384  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   385      IfxDsadc_TriggerInput_a = 0,  /**< \brief dsadc trig 0 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   386      IfxDsadc_TriggerInput_b = 1,  /**< \brief dsadc trig 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   387      IfxDsadc_TriggerInput_c = 2,  /**< \brief vadc trig 0 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   388      IfxDsadc_TriggerInput_d = 3,  /**< \brief vadc trig 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   389      IfxDsadc_TriggerInput_e = 4,  /**< \brief external pin e */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   390      IfxDsadc_TriggerInput_f = 5,  /**< \brief external pin f */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   391      IfxDsadc_TriggerInput_g = 6,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   392      IfxDsadc_TriggerInput_h = 7
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   393  } IfxDsadc_TriggerInput;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   394  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   395  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   397  /** \addtogroup IfxLld_Dsadc_Std_Operative
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   398   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   399  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   400  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   402  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   403  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   404  /** \brief Sets the sensitivity of the module to sleep signal
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   405   * \param dsadc pointer to DSADC registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   406   * \param mode mode selection (enable/disable)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   407   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   408   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   409  IFX_INLINE void IfxDsadc_setSleepMode(Ifx_DSADC *dsadc, IfxDsadc_SleepMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   410  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   411  /** \brief Enables the conversion of multiple channels
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   412   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   413   * \param modulatorMask the modulator which should be running (bitwise selection)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   414   * \param channelMask the channels which should be scanned (bitwise selection)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   415   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   416   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   417   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   418   *     // enable the conversion of all 6 DSADC channels
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   419   *     IfxDsadc_startScan(&MODULE_DSADC, 0x3FU, 0x3FU);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   420   *     // results are now available in IFXDSADC(ds).CH[x].RESM.B.RESULT (x=0..5)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   421   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   422   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   423   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   424  IFX_INLINE void IfxDsadc_startScan(Ifx_DSADC *dsadc, uint32 modulatorMask, uint32 channelMask);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   425  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   426  /** \brief Disables the conversion of multiple channels
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   427   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   428   * \param modulatorMask the modulator which should be disabled (bitwise selection)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   429   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   430   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   431   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   432   *     // disable the modulators of all 6 DSADC channels
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   433   *     IfxDsadc_stopScan(&MODULE_DSADC, 0x3FU);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   434   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   435   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   436   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   437  IFX_INLINE void IfxDsadc_stopScan(Ifx_DSADC *dsadc, uint32 modulatorMask);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   438  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   439  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   440  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   441  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   442  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   443  /** \brief resets the DSADC kernel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   444   * \param dsadc pointer to DSADC registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   445   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   446   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   447  IFX_EXTERN void IfxDsadc_resetModule(Ifx_DSADC *dsadc);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   448  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   449  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   450  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   451  /** \addtogroup IfxLld_Dsadc_Std_Support
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   452   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   453  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   454  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   455  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   456  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   457  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   458  /** \brief Get result from the auxiliary chain
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   459   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   460   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   461   * \return result from the auxiliary chain
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   462   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   463  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   464  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   465  /** \brief Get the main comb decimation factor
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   466   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   467   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   468   * \return the main comb decimation factor
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   469   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   470  IFX_INLINE uint16 IfxDsadc_getMainCombDecimation(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   471  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   472  /** \brief Get result from the main chain
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   473   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   474   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   475   * \return result from the main chain
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   476   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   477  IFX_INLINE sint16 IfxDsadc_getMainResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   478  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   479  /** \brief Return TRUE if DSADC module is enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   480   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   481   * \return TRUE if DSADC module is enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   482   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   483  IFX_INLINE boolean IfxDsadc_isModuleEnabled(Ifx_DSADC *dsadc);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   484  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   485  /** \brief Set the carrier waveform mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   486   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   487   * \param waveformMode the waveform mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   488   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   489   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   490  IFX_INLINE void IfxDsadc_setCarrierMode(Ifx_DSADC *dsadc, IfxDsadc_CarrierWaveformMode waveformMode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   491  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   492  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   493  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   494  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   495  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   496  /** \brief Get the sample frequency of the integrator output in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   497   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   498   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   499   * \return frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   500   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   501  IFX_EXTERN float32 IfxDsadc_getIntegratorOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   502  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   503  /** \brief Get the sample frequency of the main COMB filter output in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   504   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   505   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   506   * \return frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   507   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   508  IFX_EXTERN float32 IfxDsadc_getMainCombOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   509  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   510  /** \brief Estimate the group delay of main-chain filters in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   511   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   512   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   513   * \return delay in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   514   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   515  IFX_EXTERN float32 IfxDsadc_getMainGroupDelay(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   516  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   517  /** \brief Get the modulator clock frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   518   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   519   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   520   * \return frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   521   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   522  IFX_EXTERN float32 IfxDsadc_getModulatorClockFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   523  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   524  /** \brief Get the input frequency of DSADC in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   525   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   526   * \return frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   527   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   528  IFX_EXTERN float32 IfxDsadc_getModulatorInputClockFreq(Ifx_DSADC *dsadc);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   529  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   530  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   531  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   532  /** \addtogroup IfxLld_Dsadc_Std_Interrupt
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   533   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   534  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   535  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   536  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   537  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   538  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   539  /** \brief Address/pointer to the interrupt source register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   540   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   541   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   542   * \return Address/pointer to the interrupt source register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   543   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   544  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getAuxSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   545  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   546  /** \brief Get the interrupt source register for a Main event
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   547   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   548   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   549   * \return Address/pointer to the interrupt source register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   550   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   551  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getMainSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   552  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   553  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   554  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   555  /** \addtogroup IfxLld_Dsadc_Std_IO
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   556   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   557  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   558  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   559  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   560  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   561  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   562  /** \brief Initializes a CGPWM output
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   563   * \param cgPwm the CGPWM Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   564   * \param pinMode the pin output mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   565   * \param padDriver the pad driver mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   566   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   567   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   568  IFX_INLINE void IfxDsadc_initCgPwmPin(const IfxDsadc_Cgpwm_Out *cgPwm, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   569  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   570  /** \brief Initializes a CIN input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   571   * \param cIn the CIN Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   572   * \param cInMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   573   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   574   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   575   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   576  IFX_INLINE void IfxDsadc_initCinPin(const IfxDsadc_Cin_In *cIn, IfxPort_InputMode cInMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   577  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   578  /** \brief Initializes a COUT output
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   579   * \param cout the COUT Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   580   * \param pinMode the pin output mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   581   * \param padDriver the pad driver mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   582   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   583   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   584  IFX_INLINE void IfxDsadc_initCoutPin(const IfxDsadc_Cout_Out *cout, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   585  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   586  /** \brief Initializes a DIN input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   587   * \param dIn the DIN Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   588   * \param dInMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   589   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   590   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   591   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   592  IFX_INLINE void IfxDsadc_initDinPin(const IfxDsadc_Din_In *dIn, IfxPort_InputMode dInMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   593  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   594  /** \brief Initializes a DS input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   595   * \param dsn the DSN Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   596   * \param pinMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   597   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   598   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   599   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   600  IFX_INLINE void IfxDsadc_initDsnPin(const IfxDsadc_Dsn_In *dsn, IfxPort_InputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   601  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   602  /** \brief Initializes a DS input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   603   * \param dsp the DSP Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   604   * \param pinMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   605   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   606   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   607   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   608  IFX_INLINE void IfxDsadc_initDspPin(const IfxDsadc_Dsp_In *dsp, IfxPort_InputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   609  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   610  /** \brief Initializes a ITR input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   611   * \param itr the ITR Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   612   * \param itrMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   613   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   614   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   615   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   616  IFX_INLINE void IfxDsadc_initItrPin(const IfxDsadc_Itr_In *itr, IfxPort_InputMode itrMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   617  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   618  /** \brief Initializes a SG input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   619   * \param sg the SG Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   620   * \param pinMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   621   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   622   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   623   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   624  IFX_INLINE void IfxDsadc_initSgPin(const IfxDsadc_Sg_In *sg, IfxPort_InputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   625  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   626  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   627  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   628  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   629  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   630  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   631  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   632  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   633  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   634      return (sint16)(dsadc->CH[channel].RESA.B.RESULT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   635  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   636  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   637  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   638  IFX_INLINE uint16 IfxDsadc_getMainCombDecimation(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   639  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   640      return (uint16)(1U + dsadc->CH[channel].FCFGC.B.CFMDF);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   641  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   642  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   643  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   644  IFX_INLINE sint16 IfxDsadc_getMainResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   645  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   646      return (sint16)(dsadc->CH[channel].RESM.B.RESULT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   647  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   648  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   649  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   650  IFX_INLINE void IfxDsadc_initCgPwmPin(const IfxDsadc_Cgpwm_Out *cgPwm, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   651  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   652      IfxPort_setPinModeOutput(cgPwm->pin.port, cgPwm->pin.pinIndex, pinMode, cgPwm->select);
	ld.a	a4,[a15]4
.L466:
	ld.bu	d4,[a15]8
.L467:
	ld.bu	d15,[a15]12
.L189:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    45   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    46   * \defgroup IfxLld_Port_Std_Enum Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    47   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    48   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    49   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    50   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    51   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    52   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    53   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    54   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    55  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    56  #ifndef IFXPORT_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    57  #define IFXPORT_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    58  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    59  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    60  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    61  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    62  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    63  #include "_Impl/IfxPort_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    64  #include "Scu/Std/IfxScuWdt.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    65  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    66  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    67  /*--------------------------------Enumerations--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    68  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    69  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    70  /** \addtogroup IfxLld_Port_Std_Enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    71   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    72  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    73   * HSCT module.declared in MODULE_PORTx.LPCRx
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    74   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    76  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    77      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    78      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    79  } IfxPort_ControlledBy;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    80  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    81  /** \brief Ifx_P output modification modes definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    82   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    83  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    84  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    85      IfxPort_InputMode_undefined    = -1,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    86      IfxPort_InputMode_noPullDevice = 0 << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    87          IfxPort_InputMode_pullDown = 1U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    88          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    89  } IfxPort_InputMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    90  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    91  /** \brief Ifx_P input / output mode definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    92   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    93   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    94   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    95  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    96  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    97      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    98      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    99      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   100      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   101      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   102      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   103      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   104      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   105      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   106      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   107      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   108      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   109      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   110      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   111      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   112      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   113      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   114      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   115      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   116  } IfxPort_Mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   117  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   118  /** \brief Pin output alternate index
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   119   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   120  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   121  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   122      IfxPort_OutputIdx_general  = 0x10U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   123          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   124          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   125          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   126          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   127          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   128          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   129          IfxPort_OutputIdx_alt7 = 0x17U << 3
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   130  } IfxPort_OutputIdx;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   131  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   132  /** \brief Pin output mode definition
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   133   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   134  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   135  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   136      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   137          IfxPort_OutputMode_openDrain = 0x18U << 3
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_OutputMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   139  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   140  /** \brief Pad driver mode definition (strength and slew rate).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   141   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   142   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   143   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   144  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   145  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   146      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   147      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   148      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   149      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   150      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   151      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   152      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   153      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   154      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   155      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   156      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   157      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_PadDriver;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   159  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   160  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   161   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   162  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   163  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   164      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   165      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   166  } IfxPort_PadSupply;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   167  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   168  /** \brief Ifx_P output modification modes definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   169   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   170   * \see Ifx_P.OMR, IfxPort_setPinState()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   171   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   172  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   173  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   174      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   175      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   176      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   177      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   178  } IfxPort_State;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   179  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   180  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   181  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   182  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   183  /*-----------------------------Data Structures--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   184  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   185  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   186  /** \addtogroup IfxLld_Port_Std_DataStructures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   187   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   188  /** \brief Defines a pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   189   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   190  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   191  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   192      Ifx_P *port;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   193      uint8  pinIndex;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   194  } IfxPort_Pin;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   195  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   196  /** \brief To configure pins
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   197   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   198  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   199  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   200      Ifx_P            *port;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   201      uint8             pinIndex;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   202      IfxPort_OutputIdx mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   203      IfxPort_PadDriver padDriver;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   204  } IfxPort_Pin_Config;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   205  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   206  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   207  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   208  /** \addtogroup IfxLld_Port_Std_SinglePin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   209   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   210  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   211  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   212  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   213  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   214  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   215  /** \brief Return the port state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   216   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   217   * \param pinIndex Specifies the pin for which the state should be returned.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   218   * \return Returns TRUE the pin is high; FALSE the pin is low
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   219   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   220   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   221   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   222   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   223   *      // ...
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   224   *    }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   225   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   226   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   227   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   228  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   229  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   230  /** \brief Set the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   231   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   232   * \param pinIndex Specifies the pin to be set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   233   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   234   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   235   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   236   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   237   * IfxPort_setPinHigh(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   238   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   239   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   240   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   241   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   242   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   243  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   244  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   245  /** \brief Reset the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   246   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   247   * \param pinIndex Specifies the pin to be reset.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   248   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   249   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   250   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   251   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   252   * IfxPort_setPinLow(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   253   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   254   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   255   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   256   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   257   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   258  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   259  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   260  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   261   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   262   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   263   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   264   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   265   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   266   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   267   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   268   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   269   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   270   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   271   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   272  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   273  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   274  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   275   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   276   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   277   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   278   * \param index Specifies the alternate (or general purpose) output channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   279   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   280   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   281   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   282   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   283   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   284   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   285   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   286   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   287  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   288  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   289  /** \brief Set / Resets / Toggle the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   290   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   291   * \param pinIndex Specifies the pin to modify.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   292   * \param action Specifies the action: set, reset, toggle.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   293   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   294   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   295   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   296   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   297   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   298   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   299   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   300   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   301   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   302   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   303  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   304  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   305  /** \brief Toggle the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin to be toggled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   308   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   309   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   311   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   312   * IfxPort_togglePin(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   313   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   314   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   315   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   316   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   317   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   318  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   319  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   320  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   321  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   322  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   323  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   324  /** \brief Disable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   325   * This function disables the emergency stop function. A check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   326   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   327   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   328   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   329   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   330   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   331   * /code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   332   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   333   *     {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   334   *         // failed to disable emergency stop for P33.0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   335   *     }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   336   * /endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   337   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   338   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   339   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   340   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   341  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   342  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   343  /** \brief Enable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   344   * This function enables the emergency stop function. A check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   345   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   346   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   347   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   348   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   350   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   351   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   352   *       // failed to enable emergency stop for P33.0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   353   *     }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   354   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   355   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   356   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   357   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   358   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   359  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   360  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   361  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   362   * Also Configures the P40/P41 Port for digital functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   363   * which bydefault support analog functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   364   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   365   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   366   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   367   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   368   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   369   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   370   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   371   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   372   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   373   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   374   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   375  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   376  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   377  /** \brief Configure the pad driver mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   378   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   379   * \param pinIndex Specifies the pin for which the mode will be set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   380   * \param padDriver Specifies the driver mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   381   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   382   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   383   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   384   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   385   * // enable strong 3.3V driver
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   386   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   387   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   388   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   389   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   390  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   391  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   392  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   393  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   394  /** \addtogroup IfxLld_Port_Std_PortGroup
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   395   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   397  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   398  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   399  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   400  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   401  /** \brief Return the port group state
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   402   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   403   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   404   * \param mask selects the pins which should be read (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   405   * \return Returns the selected pin values
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   406   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   407   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   408   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   409   * // read the current value of P33[7:0]
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   410   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   411   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   412   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   413   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   414  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   415  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   416  /** \brief Set the port group state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   417   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   418   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   419   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   420   * \param data specifies the value which should be set
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   421   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   422   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   423   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   424   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   425   * // configure P33.[7:0] as GPIO outputs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   426   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   427   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   428   * // set initial value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   429   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   430   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   431   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   432   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   433  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   434  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   435  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   436  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   437  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   438  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   439  /** \brief Returns the module address of the selected Port module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   440   * \param port Pointer to PORT module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   441   * \return PORT module register address
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   442   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   443  IFX_EXTERN Ifx_P *IfxPort_getAddress(IfxPort_Index port);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   444  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   445  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   446   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   447   * \return port index of IfxModule_IndexMap. return -1 in case of unknown port index.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   448   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   449  IFX_EXTERN IfxPort_Index IfxPort_getIndex(Ifx_P *port);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   450  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   451  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   452   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   453   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   454   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   455   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   456   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   457   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   458   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   459   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   460   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   461   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   462   *  \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   463   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   464   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   465  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   466  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   467  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   468   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   469   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   470   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   471   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   472   * \param index Specifies the alternate (or general purpose) output channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   473   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   474   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   475   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   476   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   477   * // configure P33.[7:0] as GPIO outputs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   478   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   479   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   480   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   481   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   482  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   483  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   484  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   485   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   486   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   487   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   488   * \param padDriver Specifies the pad driver strength.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   489   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   490   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   491   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   492   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   493   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   494   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   495   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   496   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   497   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   498  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   499  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   500  /** \brief set LVDSH mode (configured for Port21)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   501   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   502   * \param pinIndex specifies pin  to be modified
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   503   * \param mode specifes the mode of pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   504   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   505   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   506   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   508  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   509  /** \brief set LVDSM mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   510   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   511   * \param pinIndex specifies pin to be modified
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   512   * \param lvdsPadDriver select speed grade of LVDS Pad
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   513   * \param padSupply select the PAD supply (5/3.3V)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   514   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   515   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   516  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   517  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   518  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   519  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   521  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   523  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   524  /** \brief Disable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   525   * This function disables the emergency stop function. No check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   526   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   527   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   528   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   529   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   530   * \see IfxPort_disableEmergencyStop()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   531   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   532   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   533  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   534  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   535  /** \brief Enable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   536   * This function enables the emergency stop function. No check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   537   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   538   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   539   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   540   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   541   * \see IfxPort_enableEmergencyStop()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   542   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   543   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   544  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   545  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   546  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   547  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   548  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   549  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   550  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   551  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   552      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   553  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   554  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   555  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   556  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   557  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   558      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   559  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   560  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   561  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   562  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   563  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   564      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   565  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   566  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   567  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   568  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   569  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   570      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   571  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   572  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   573  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   574  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   575  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   576      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   577  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   578  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   579  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   580  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   581  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   582      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   583  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   584  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   585  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   586  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   587  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   588      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)(index | mode));
	or	d5,d15
.L468:
	call	IfxPort_setPinMode
.L190:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   653  INE void IfxDsadc_initCinPin(const IfxDsadc_Cin_In *cIn, IfxPort_InputMode cInMode, IfxPort_PadDriver padDriver)
	ld.a	a4,[a15]4
.L469:
	ld.bu	d4,[a15]8
.L470:
	mov	d5,d8
	call	IfxPort_setPinPadDriver
.L18:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   195  fx_DSADC *dsadc = config->module;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   196  
	ret
.L152:
	
__IfxDsadc_Dsadc_initCarrierGen_function_end:
	.size	IfxDsadc_Dsadc_initCarrierGen,__IfxDsadc_Dsadc_initCarrierGen_function_end-IfxDsadc_Dsadc_initCarrierGen
.L81:
	; End of function
	
	.sdecl	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initChannel',code,cluster('IfxDsadc_Dsadc_initChannel')
	.sect	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initChannel'
	.align	2
	
	.global	IfxDsadc_Dsadc_initChannel

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   197      channel->channelId = config->channelId;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   198      channel->module    = dsadc;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   199      channel->channel   = (Ifx_DSADC_CH *)&dsadc->CH[config->channelId];
; Function IfxDsadc_Dsadc_initChannel
.L52:
IfxDsadc_Dsadc_initChannel:	.type	func
	mov.aa	a12,a4
.L387:
	mov.aa	a13,a5
.L389:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   200  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   201      IfxDsadc_Dsadc_initModulator(channel, &config->modulator);
	ld.a	a2,[a13]
.L390:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   202      IfxDsadc_Dsadc_initDemodulator(channel, &config->demodulator);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   203      IfxDsadc_Dsadc_initCombFilter(channel, &config->combFilter);
	ld.bu	d15,[a13]4
.L494:
	st.b	[a12]8,d15
.L495:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   204      IfxDsadc_Dsadc_initFirFilter(channel, &config->firFilter);
	st.a	[a12],a2
.L496:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   205      IfxDsadc_Dsadc_initIntegrator(channel, &config->integrator);
	ld.bu	d15,[a13]4
.L497:
	mov	d0,#256
	mul	d15,d0
	addsc.a	a2,a2,d15,#0
.L391:
	lea	a15,[a2]256
.L498:
	st.a	[a12]4,a15
.L499:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   206      IfxDsadc_Dsadc_initAuxFilter(channel, &config->auxFilter);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   207      IfxDsadc_Dsadc_initRectifier(channel, &config->rectifier);
	lea	a5,[a13]8
.L386:
	mov.aa	a4,a12
	call	IfxDsadc_Dsadc_initModulator
.L385:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   208  
	lea	a5,[a13]20
	mov.aa	a4,a12
.L392:
	call	IfxDsadc_Dsadc_initDemodulator
.L393:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   209      const IfxDsadc_Dsadc_ChannelPins *pins = config->channelPins;
	lea	a5,[a13]28
	mov.aa	a4,a12
.L394:
	call	IfxDsadc_Dsadc_initCombFilter
.L395:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   210  
	lea	a5,[a13]36
	mov.aa	a4,a12
.L396:
	call	IfxDsadc_Dsadc_initFirFilter
.L397:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   211      if (pins != NULL_PTR)
	lea	a5,[a13]44
	mov.aa	a4,a12
.L398:
	call	IfxDsadc_Dsadc_initIntegrator
.L399:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   212      {
	lea	a5,[a13]52
	mov.aa	a4,a12
.L400:
	call	IfxDsadc_Dsadc_initAuxFilter
.L401:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   213          const IfxDsadc_Dsn_In *dsn = pins->dsn;
	lea	a5,[a13]60
	mov.aa	a4,a12
.L402:
	call	IfxDsadc_Dsadc_initRectifier
.L216:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   214  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   215          if (dsn != NULL_PTR)
	ld.a	a12,[a13]64
.L388:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   216          {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   217              IfxDsadc_initDsnPin(dsn, pins->dsnMode, pins->pinDriver);
	jz.a	a12,.L19
.L219:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   218          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   219  
	ld.a	a15,[a12]24
.L403:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   220          const IfxDsadc_Dsp_In *dsp = pins->dsp;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   221  
	jz.a	a15,.L20
.L500:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   222          if (dsp != NULL_PTR)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   223          {
	ld.b	d0,[a12]28
.L501:
	ld.bu	d8,[a12]37
.L223:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     2   * \file IfxDsadc.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     3   * \brief DSADC  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     4   * \ingroup IfxLld_Dsadc
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     7   * \copyright Copyright (c) 2017 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    44   * \defgroup IfxLld_Dsadc_Std_Enum Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    45   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    46   * \defgroup IfxLld_Dsadc_Std_Operative Operative Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    47   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    48   * \defgroup IfxLld_Dsadc_Std_Support Support Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    49   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    50   * \defgroup IfxLld_Dsadc_Std_Interrupt Interrupt Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    51   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    52   * \defgroup IfxLld_Dsadc_Std_IO IO Pin Configuration Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    53   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    54   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    55  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    56  #ifndef IFXDSADC_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    57  #define IFXDSADC_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    58  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    59  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    60  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    61  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    62  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    63  #include "_Impl/IfxDsadc_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    64  #include "Src/Std/IfxSrc.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    65  #include "Scu/Std/IfxScuCcu.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    66  #include "_PinMap/IfxDsadc_PinMap.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    67  #include "IfxDsadc_reg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    68  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    69  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    70  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    71  /*--------------------------------Enumerations--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    72  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    73  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    74  /** \addtogroup IfxLld_Dsadc_Std_Enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    75   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    76  /** \brief Comb Filter (auxiliary) shift control\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    77   * Definition in Ifx_DSADC.FCFGA.B.AFSC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    78   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    79  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    80  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    81      IfxDsadc_AuxCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    82      IfxDsadc_AuxCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    83      IfxDsadc_AuxCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    84      IfxDsadc_AuxCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    85  } IfxDsadc_AuxCombFilterShift;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    86  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    87  /** \brief Comb Filter (auxiliary) configuration/type\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    88   * Definition in Ifx_DSADC.FCFGA.B.CFAC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    89   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    90  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    91  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    92      IfxDsadc_AuxCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    93      IfxDsadc_AuxCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    94      IfxDsadc_AuxCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    95      IfxDsadc_AuxCombFilterType_combF = 3   /**< \brief CICF */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    96  } IfxDsadc_AuxCombFilterType;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    97  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    98  /** \brief Service request generation (auxiliary)\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    99   * Definition in Ifx_DSADC.FCFGA.B.ESEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   100   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   101  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   102  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   103      IfxDsadc_AuxEvent_everyNewResult  = 0, /**< \brief Always, for each new result value */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   104      IfxDsadc_AuxEvent_insideBoundary  = 1, /**< \brief If result is inside the boundary band */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   105      IfxDsadc_AuxEvent_outsideBoundary = 2  /**< \brief If result is outside the boundary band */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   106  } IfxDsadc_AuxEvent;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   107  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   108  /** \brief Service request generation (auxiliary)\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   109   * Definition in Ifx_DSADC.FCFGA.B.EGT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   110   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   111  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   112  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   113      IfxDsadc_AuxGate_definedByESEL       = 0, /**< \brief Separate: generate events according to ESEL */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   114      IfxDsadc_AuxGate_coupledToIntegrator = 1  /**< \brief Coupled: generate events only when the integrator is enabled and after the discard phase defined by bitfield NVALDIS */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   115  } IfxDsadc_AuxGate;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   116  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   117  /** \brief Service request generation (auxiliary)\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   118   * Definition in Ifx_DSADC.FCFGA.B.SRGA
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   119   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   120  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   121  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   122      IfxDsadc_AuxServiceRequest_never     = 0,  /**< \brief Never, service requests disabled */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   123      IfxDsadc_AuxServiceRequest_auxFilter = 1,  /**< \brief Auxiliary filter: As selected by bitfield ESEL (\ref IfxDsadc_AuxEvent) */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   124      IfxDsadc_AuxServiceRequest_altSource = 2   /**< \brief Alternate source: Capturing of a sign delay value to register CGSYNCx (x = 0 - 5) */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   125  } IfxDsadc_AuxServiceRequest;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   126  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   127  /** \brief Carrier generation mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   128   * Definition in Ifx_DSADC.CGCFG.B.CGMOD
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   129   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   130  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   131  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   132      IfxDsadc_CarrierWaveformMode_stopped  = 0,  /**< \brief Carrier Generator stopped */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   133      IfxDsadc_CarrierWaveformMode_square   = 1,  /**< \brief Carrier Generator generates square wave */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   134      IfxDsadc_CarrierWaveformMode_triangle = 2,  /**< \brief Carrier Generator generates triangle wave */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   135      IfxDsadc_CarrierWaveformMode_sine     = 3   /**< \brief Carrier Generator generates sine wave */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   136  } IfxDsadc_CarrierWaveformMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   137  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   138  /** \brief Specifies the channel Index
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   139   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   140  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   141  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   142      IfxDsadc_ChannelId_0 = 0,  /**< \brief Specifies the channel Index 0 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   143      IfxDsadc_ChannelId_2 = 2,  /**< \brief Specifies the channel Index 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   144      IfxDsadc_ChannelId_3 = 3   /**< \brief Specifies the channel Index 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   145  } IfxDsadc_ChannelId;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   146  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   147  /** \brief Modulator common mode voltage selection\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   148   * Definition in Ifx_DSADC.MODCFGx.B.CMVS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   149   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   150  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   151  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   152      IfxDsadc_CommonModeVoltage_a = 0,  /**< \brief VCM = VAREF / 3.03 (1.65 V for VAREF = 5.0 V), recommended for VDDM = 3.3 V1.65V */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   153      IfxDsadc_CommonModeVoltage_b = 1,  /**< \brief VCM = VAREF / 2.27 (2.2 V for VAREF = 5.0 V), recommended for low distortion of AC-coupled signals */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   154      IfxDsadc_CommonModeVoltage_c = 2   /**< \brief VCM = VAREF / 2.0 (2.5 V for VAREF = 5.0 V), recommended for DC-coupled signals */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   155  } IfxDsadc_CommonModeVoltage;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   156  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   157  /** \brief FIR data shift control\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   158   * Selects the displacement caused by the data shifter at the FIR filter output\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   159   * Definition in Ifx_DSADC.FCFGM.B.DSH
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   160   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   161  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   162  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   163      IfxDsadc_FirDataShift_noShift  = 0,  /**< \brief no shift, use full range */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   164      IfxDsadc_FirDataShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   165      IfxDsadc_FirDataShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   166      IfxDsadc_FirDataShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   167  } IfxDsadc_FirDataShift;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   168  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   169  /** \brief FIR shift control\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   170   * Selects the displacement caused by the data shifter inbetween the FIR filter blocks.\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   171   * Definition in Ifx_DSADC.FCFGM.B.FSH
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   172   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   173  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   174  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   175      IfxDsadc_FirInternalShift_noShift  = 0, /**< \brief no shift, use full range */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   176      IfxDsadc_FirInternalShift_shiftBy1 = 1  /**< \brief Shift by 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   177  } IfxDsadc_FirInternalShift;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   178  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   179  /** \brief Modulator configuration of positive/negative input line\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   180   * Definition in Ifx_DSADC.MODCFGx.B.INCFGP and Ifx_DSADC.MODCFGx.B.INCFGN
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   181   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   182  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   183  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   184      IfxDsadc_InputConfig_inputPin          = 0,  /**< \brief Modulator input connected to external pin */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   185      IfxDsadc_InputConfig_supplyVoltage     = 1,  /**< \brief Modulator input connected to supply voltage V_ddm */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   186      IfxDsadc_InputConfig_commonModeVoltage = 2,  /**< \brief Modulator input connected to common mode voltage V_cm */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   187      IfxDsadc_InputConfig_referenceGround   = 3   /**< \brief Modulator input connected to reference ground V_ref */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   188  } IfxDsadc_InputConfig;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   189  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   190  /** \brief Demodulator input data source selection\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   191   * Definition in Ifx_DSADC.DICFG.B.DSRC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   192   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   193  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   194  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   195      IfxDsadc_InputDataSource_onChipStandAlone = 0,  /**< \brief On-chip modulator, standalone (3rd order) */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   196      IfxDsadc_InputDataSource_onChipCombined   = 1,  /**< \brief On-chip modulator, yield (2nd order) */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   197      IfxDsadc_InputDataSource_directInputA     = 2,  /**< \brief External, from input A, direct */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   198      IfxDsadc_InputDataSource_invertedInputA   = 3,  /**< \brief External, from input A, inverted */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   199      IfxDsadc_InputDataSource_directInputB     = 4,  /**< \brief External, from input B, direct */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   200      IfxDsadc_InputDataSource_invertedInputB   = 5   /**< \brief External, from input B, inverted */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   201  } IfxDsadc_InputDataSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   202  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   203  /** \brief Modulator gain select of analog input path\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   204   * Definition in Ifx_DSADC.MODCFGx.B.GAINSEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   205   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   206  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   207  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   208      IfxDsadc_InputGain_factor1  = 0, /**< \brief Input gain factor: 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   209      IfxDsadc_InputGain_factor2  = 1, /**< \brief Input gain factor: 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   210      IfxDsadc_InputGain_factor4  = 2, /**< \brief Input gain factor: 4 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   211      IfxDsadc_InputGain_factor8  = 3, /**< \brief Input gain factor: 8 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   212      IfxDsadc_InputGain_factor16 = 4  /**< \brief Input gain factor: 16 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   213  } IfxDsadc_InputGain;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   214  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   215  /** \brief Modulator input pin selection\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   216   * Definition in Ifx_DSADC.MODCFGx.B.INMUX
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   217   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   218  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   219  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   220      IfxDsadc_InputPin_a = 0,  /**< \brief Pin A connected to modulator input */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   221      IfxDsadc_InputPin_b = 1,  /**< \brief Pin B connected to modulator input */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   222      IfxDsadc_InputPin_c = 2,  /**< \brief Pin C connected to modulator input */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   223      IfxDsadc_InputPin_d = 3   /**< \brief Pin D connected to modulator input */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   224  } IfxDsadc_InputPin;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   225  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   226  /** \brief Integrator window size\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   227   * Definition in Ifx_DSADC.IWCTR.B.IWS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   228   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   229  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   230  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   231      IfxDsadc_IntegrationWindowSize_internalControl = 0,  /**< \brief Internal control: stop integrator after REPVAL+1 integration cycles */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   232      IfxDsadc_IntegrationWindowSize_externalControl = 1   /**< \brief External control: stop integrator when bit INTEN becomes 0 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   233  } IfxDsadc_IntegrationWindowSize;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   234  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   235  /** \brief Integrator trigger mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   236   * NOTE: switch-first to bypassed before using other mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   237   * Definition in Ifx_DSADC.DICFG.B.ITRMODE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   238   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   239  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   240  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   241      IfxDsadc_IntegratorTrigger_bypassed     = 0, /**< \brief No integration trigger, integrator bypassed */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   242      IfxDsadc_IntegratorTrigger_fallingEdge  = 1, /**< \brief Trigger event upon a falling edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   243      IfxDsadc_IntegratorTrigger_risingEdge   = 2, /**< \brief Trigger event upon a rising edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   244      IfxDsadc_IntegratorTrigger_alwaysActive = 3  /**< \brief No trigger, integrator active all the time */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   245  } IfxDsadc_IntegratorTrigger;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   246  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   247  /** \brief Low power supply voltage select\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   248   * Definition in Ifx_DSADC.GLOBCFG.B.LOSUP
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   249   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   250  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   251  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   252      IfxDsadc_LowPowerSupply_5V   = 0, /**< \brief Supply Voltage for Analog Circuitry set to 5V */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   253      IfxDsadc_LowPowerSupply_3_3V = 1  /**< \brief Supply Voltage for Analog Circuitry set to 3.3V */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   254  } IfxDsadc_LowPowerSupply;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   255  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   256  /** \brief Comb Filter (Main Chain) shift control\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   257   * Definition in Ifx_DSADC.FCFGC.B.MFSC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   258   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   259  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   260  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   261      IfxDsadc_MainCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   262      IfxDsadc_MainCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   263      IfxDsadc_MainCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   264      IfxDsadc_MainCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   265  } IfxDsadc_MainCombFilterShift;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   266  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   267  /** \brief Comb Filter (Main Chain) configuration/type\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   268   * Definition in Ifx_DSADC.FCFGC.B.CFMC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   269   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   270  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   271  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   272      IfxDsadc_MainCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   273      IfxDsadc_MainCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   274      IfxDsadc_MainCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   275      IfxDsadc_MainCombFilterType_combF = 3   /**< \brief CICF */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   276  } IfxDsadc_MainCombFilterType;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   277  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   278  /** \brief Service request generation (main chain)\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   279   * Definition in Ifx_DSADC.FCFGC.B.SRGM
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   280   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   281  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   282  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   283      IfxDsadc_MainServiceRequest_never          = 0,  /**< \brief Never, service requests disabled */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   284      IfxDsadc_MainServiceRequest_highGateSignal = 1,  /**< \brief While gate (selected trigger signal) is high */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   285      IfxDsadc_MainServiceRequest_lowGateSignal  = 2,  /**< \brief While gate (selected trigger signal) is low */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   286      IfxDsadc_MainServiceRequest_everyNewResult = 3   /**< \brief Always, for each new result value */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   287  } IfxDsadc_MainServiceRequest;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   288  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   289  /** \brief Modulator clock select\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   290   * Definition in Ifx_DSADC.GLOBCFG.B.MCSEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   291   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   292  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   293  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   294      IfxDsadc_ModulatorClock_off   = 0,  /**< \brief Internal clock off, no source selected */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   295      IfxDsadc_ModulatorClock_fDSD  = 1,  /**< \brief f_dsd clock selected */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   296      IfxDsadc_ModulatorClock_fERAY = 2,  /**< \brief f_eray clock selected */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   297      IfxDsadc_ModulatorClock_fOSC0 = 3   /**< \brief f_osc0 clock selected */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   298  } IfxDsadc_ModulatorClock;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   299  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   300  /** \brief Modulator divider factor for modulator clock\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   301   * Definition in Ifx_DSADC.MODCFGx.B.DIVM
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   302   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   303  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   304  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   305      IfxDsadc_ModulatorClockDivider_div2 = 0,      /**< \brief f_mod = f_clk / 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   306      IfxDsadc_ModulatorClockDivider_div4,          /**< \brief f_mod = f_clk / 4  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   307      IfxDsadc_ModulatorClockDivider_div6,          /**< \brief f_mod = f_clk / 6  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   308      IfxDsadc_ModulatorClockDivider_div8,          /**< \brief f_mod = f_clk / 8  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   309      IfxDsadc_ModulatorClockDivider_div10,         /**< \brief f_mod = f_clk / 10  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   310      IfxDsadc_ModulatorClockDivider_div12,         /**< \brief f_mod = f_clk / 12  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   311      IfxDsadc_ModulatorClockDivider_div14,         /**< \brief f_mod = f_clk / 14  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   312      IfxDsadc_ModulatorClockDivider_div16,         /**< \brief f_mod = f_clk / 16  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   313      IfxDsadc_ModulatorClockDivider_div18,         /**< \brief f_mod = f_clk / 18  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   314      IfxDsadc_ModulatorClockDivider_div20,         /**< \brief f_mod = f_clk / 20  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   315      IfxDsadc_ModulatorClockDivider_div22,         /**< \brief f_mod = f_clk / 22  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   316      IfxDsadc_ModulatorClockDivider_div24,         /**< \brief f_mod = f_clk / 24  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   317      IfxDsadc_ModulatorClockDivider_div26,         /**< \brief f_mod = f_clk / 26  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   318      IfxDsadc_ModulatorClockDivider_div28,         /**< \brief f_mod = f_clk / 28  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   319      IfxDsadc_ModulatorClockDivider_div30,         /**< \brief f_mod = f_clk / 30  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   320      IfxDsadc_ModulatorClockDivider_div32          /**< \brief f_mod = f_clk / 32  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   321  } IfxDsadc_ModulatorClockDivider;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   322  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   323  /** \brief Rectifier sign source\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   324   * Selects the sign signal that is to be delayed.\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   325   * Definition in Ifx_DSADC.RECT.B.SSRC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   326   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   327  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   328  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   329      IfxDsadc_RectifierSignSource_onChipGenerator = 0,  /**< \brief On-chip carrier generator */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   330      IfxDsadc_RectifierSignSource_nextChannel     = 1,  /**< \brief Sign of result of next channel */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   331      IfxDsadc_RectifierSignSource_externalA       = 2,  /**< \brief External sign signal A */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   332      IfxDsadc_RectifierSignSource_externalB       = 3   /**< \brief External sign signal B */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   333  } IfxDsadc_RectifierSignSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   334  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   335  /** \brief Demodulator sample clock source select\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   336   * Definition in Ifx_DSADC.DICFG.B.CSRC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   337   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   338  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   339  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   340      IfxDsadc_SampleClockSource_internal = 0,  /**< \brief Internal clock */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   341      IfxDsadc_SampleClockSource_inputA   = 1,  /**< \brief External clock, from Input A */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   342      IfxDsadc_SampleClockSource_inputB   = 2,  /**< \brief External clock, from Input B */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   343      IfxDsadc_SampleClockSource_inputC   = 3   /**< \brief External clock, from Input C */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   344  } IfxDsadc_SampleClockSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   345  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   346  /** \brief Demodulator data strobe generation mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   347   * Definition in Ifx_DSADC.DICFG.B.STROBE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   348   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   349  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   350  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   351      IfxDsadc_SampleStrobe_noDataStrobe            = 0, /**< \brief No data strobe */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   352      IfxDsadc_SampleStrobe_sampleOnRisingEdge      = 1, /**< \brief Direct clock, a sample trigger is generated at each rising clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   353      IfxDsadc_SampleStrobe_sampleOnFallingEdge     = 2, /**< \brief Direct clock, a sample trigger is generated at each falling clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   354      IfxDsadc_SampleStrobe_sampleOnBothEdges       = 3, /**< \brief Double data, a sample trigger is generated at each rising and falling clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   355      IfxDsadc_SampleStrobe_reserved                = 4, /**< \brief don't use */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   356      IfxDsadc_SampleStrobe_sampleOnTwoRisingEdges  = 5, /**< \brief Double clock, a sample trigger is generated at every 2nd rising clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   357      IfxDsadc_SampleStrobe_sampleOnTwoFallingEdges = 6  /**< \brief Double clock, a sample trigger is generated at every 2nd falling clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   358  } IfxDsadc_SampleStrobe;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   359  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   360  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   361   * Definition in Ifx_DSADC.CLC.B.EDIS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   362   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   363  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   364  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   365      IfxDsadc_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   366      IfxDsadc_SleepMode_disable = 1  /**< \brief disables sleep mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   367  } IfxDsadc_SleepMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   368  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   369  /** \brief Timestamp trigger mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   370   * Definition in Ifx_DSADC.DICFG.B.TSTRMODE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   371   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   372  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   373  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   374      IfxDsadc_TimestampTrigger_noTrigger   = 0,  /**< \brief No timestamp trigger */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   375      IfxDsadc_TimestampTrigger_fallingEdge = 1,  /**< \brief Trigger event upon a falling edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   376      IfxDsadc_TimestampTrigger_risingEdge  = 2,  /**< \brief Trigger event upon a rising edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   377      IfxDsadc_TimestampTrigger_eachEdge    = 3   /**< \brief Trigger event upon each edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   378  } IfxDsadc_TimestampTrigger;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   379  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   380  /** \brief Trigger select\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   381   * Definition in Ifx_DSADC.DICFG.B.TRSEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   382   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   383  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   384  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   385      IfxDsadc_TriggerInput_a = 0,  /**< \brief dsadc trig 0 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   386      IfxDsadc_TriggerInput_b = 1,  /**< \brief dsadc trig 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   387      IfxDsadc_TriggerInput_c = 2,  /**< \brief vadc trig 0 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   388      IfxDsadc_TriggerInput_d = 3,  /**< \brief vadc trig 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   389      IfxDsadc_TriggerInput_e = 4,  /**< \brief external pin e */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   390      IfxDsadc_TriggerInput_f = 5,  /**< \brief external pin f */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   391      IfxDsadc_TriggerInput_g = 6,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   392      IfxDsadc_TriggerInput_h = 7
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   393  } IfxDsadc_TriggerInput;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   394  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   395  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   397  /** \addtogroup IfxLld_Dsadc_Std_Operative
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   398   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   399  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   400  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   402  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   403  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   404  /** \brief Sets the sensitivity of the module to sleep signal
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   405   * \param dsadc pointer to DSADC registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   406   * \param mode mode selection (enable/disable)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   407   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   408   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   409  IFX_INLINE void IfxDsadc_setSleepMode(Ifx_DSADC *dsadc, IfxDsadc_SleepMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   410  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   411  /** \brief Enables the conversion of multiple channels
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   412   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   413   * \param modulatorMask the modulator which should be running (bitwise selection)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   414   * \param channelMask the channels which should be scanned (bitwise selection)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   415   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   416   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   417   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   418   *     // enable the conversion of all 6 DSADC channels
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   419   *     IfxDsadc_startScan(&MODULE_DSADC, 0x3FU, 0x3FU);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   420   *     // results are now available in IFXDSADC(ds).CH[x].RESM.B.RESULT (x=0..5)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   421   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   422   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   423   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   424  IFX_INLINE void IfxDsadc_startScan(Ifx_DSADC *dsadc, uint32 modulatorMask, uint32 channelMask);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   425  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   426  /** \brief Disables the conversion of multiple channels
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   427   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   428   * \param modulatorMask the modulator which should be disabled (bitwise selection)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   429   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   430   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   431   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   432   *     // disable the modulators of all 6 DSADC channels
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   433   *     IfxDsadc_stopScan(&MODULE_DSADC, 0x3FU);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   434   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   435   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   436   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   437  IFX_INLINE void IfxDsadc_stopScan(Ifx_DSADC *dsadc, uint32 modulatorMask);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   438  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   439  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   440  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   441  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   442  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   443  /** \brief resets the DSADC kernel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   444   * \param dsadc pointer to DSADC registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   445   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   446   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   447  IFX_EXTERN void IfxDsadc_resetModule(Ifx_DSADC *dsadc);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   448  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   449  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   450  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   451  /** \addtogroup IfxLld_Dsadc_Std_Support
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   452   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   453  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   454  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   455  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   456  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   457  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   458  /** \brief Get result from the auxiliary chain
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   459   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   460   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   461   * \return result from the auxiliary chain
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   462   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   463  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   464  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   465  /** \brief Get the main comb decimation factor
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   466   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   467   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   468   * \return the main comb decimation factor
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   469   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   470  IFX_INLINE uint16 IfxDsadc_getMainCombDecimation(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   471  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   472  /** \brief Get result from the main chain
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   473   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   474   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   475   * \return result from the main chain
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   476   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   477  IFX_INLINE sint16 IfxDsadc_getMainResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   478  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   479  /** \brief Return TRUE if DSADC module is enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   480   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   481   * \return TRUE if DSADC module is enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   482   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   483  IFX_INLINE boolean IfxDsadc_isModuleEnabled(Ifx_DSADC *dsadc);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   484  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   485  /** \brief Set the carrier waveform mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   486   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   487   * \param waveformMode the waveform mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   488   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   489   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   490  IFX_INLINE void IfxDsadc_setCarrierMode(Ifx_DSADC *dsadc, IfxDsadc_CarrierWaveformMode waveformMode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   491  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   492  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   493  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   494  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   495  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   496  /** \brief Get the sample frequency of the integrator output in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   497   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   498   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   499   * \return frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   500   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   501  IFX_EXTERN float32 IfxDsadc_getIntegratorOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   502  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   503  /** \brief Get the sample frequency of the main COMB filter output in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   504   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   505   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   506   * \return frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   507   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   508  IFX_EXTERN float32 IfxDsadc_getMainCombOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   509  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   510  /** \brief Estimate the group delay of main-chain filters in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   511   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   512   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   513   * \return delay in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   514   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   515  IFX_EXTERN float32 IfxDsadc_getMainGroupDelay(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   516  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   517  /** \brief Get the modulator clock frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   518   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   519   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   520   * \return frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   521   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   522  IFX_EXTERN float32 IfxDsadc_getModulatorClockFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   523  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   524  /** \brief Get the input frequency of DSADC in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   525   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   526   * \return frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   527   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   528  IFX_EXTERN float32 IfxDsadc_getModulatorInputClockFreq(Ifx_DSADC *dsadc);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   529  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   530  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   531  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   532  /** \addtogroup IfxLld_Dsadc_Std_Interrupt
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   533   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   534  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   535  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   536  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   537  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   538  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   539  /** \brief Address/pointer to the interrupt source register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   540   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   541   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   542   * \return Address/pointer to the interrupt source register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   543   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   544  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getAuxSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   545  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   546  /** \brief Get the interrupt source register for a Main event
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   547   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   548   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   549   * \return Address/pointer to the interrupt source register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   550   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   551  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getMainSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   552  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   553  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   554  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   555  /** \addtogroup IfxLld_Dsadc_Std_IO
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   556   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   557  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   558  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   559  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   560  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   561  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   562  /** \brief Initializes a CGPWM output
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   563   * \param cgPwm the CGPWM Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   564   * \param pinMode the pin output mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   565   * \param padDriver the pad driver mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   566   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   567   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   568  IFX_INLINE void IfxDsadc_initCgPwmPin(const IfxDsadc_Cgpwm_Out *cgPwm, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   569  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   570  /** \brief Initializes a CIN input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   571   * \param cIn the CIN Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   572   * \param cInMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   573   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   574   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   575   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   576  IFX_INLINE void IfxDsadc_initCinPin(const IfxDsadc_Cin_In *cIn, IfxPort_InputMode cInMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   577  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   578  /** \brief Initializes a COUT output
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   579   * \param cout the COUT Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   580   * \param pinMode the pin output mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   581   * \param padDriver the pad driver mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   582   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   583   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   584  IFX_INLINE void IfxDsadc_initCoutPin(const IfxDsadc_Cout_Out *cout, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   585  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   586  /** \brief Initializes a DIN input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   587   * \param dIn the DIN Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   588   * \param dInMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   589   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   590   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   591   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   592  IFX_INLINE void IfxDsadc_initDinPin(const IfxDsadc_Din_In *dIn, IfxPort_InputMode dInMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   593  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   594  /** \brief Initializes a DS input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   595   * \param dsn the DSN Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   596   * \param pinMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   597   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   598   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   599   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   600  IFX_INLINE void IfxDsadc_initDsnPin(const IfxDsadc_Dsn_In *dsn, IfxPort_InputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   601  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   602  /** \brief Initializes a DS input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   603   * \param dsp the DSP Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   604   * \param pinMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   605   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   606   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   607   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   608  IFX_INLINE void IfxDsadc_initDspPin(const IfxDsadc_Dsp_In *dsp, IfxPort_InputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   609  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   610  /** \brief Initializes a ITR input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   611   * \param itr the ITR Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   612   * \param itrMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   613   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   614   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   615   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   616  IFX_INLINE void IfxDsadc_initItrPin(const IfxDsadc_Itr_In *itr, IfxPort_InputMode itrMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   617  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   618  /** \brief Initializes a SG input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   619   * \param sg the SG Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   620   * \param pinMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   621   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   622   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   623   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   624  IFX_INLINE void IfxDsadc_initSgPin(const IfxDsadc_Sg_In *sg, IfxPort_InputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   625  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   626  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   627  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   628  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   629  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   630  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   631  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   632  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   633  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   634      return (sint16)(dsadc->CH[channel].RESA.B.RESULT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   635  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   636  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   637  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   638  IFX_INLINE uint16 IfxDsadc_getMainCombDecimation(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   639  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   640      return (uint16)(1U + dsadc->CH[channel].FCFGC.B.CFMDF);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   641  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   642  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   643  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   644  IFX_INLINE sint16 IfxDsadc_getMainResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   645  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   646      return (sint16)(dsadc->CH[channel].RESM.B.RESULT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   647  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   648  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   649  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   650  IFX_INLINE void IfxDsadc_initCgPwmPin(const IfxDsadc_Cgpwm_Out *cgPwm, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   651  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   652      IfxPort_setPinModeOutput(cgPwm->pin.port, cgPwm->pin.pinIndex, pinMode, cgPwm->select);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   653      IfxPort_setPinPadDriver(cgPwm->pin.port, cgPwm->pin.pinIndex, padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   654  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   655  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   656  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   657  IFX_INLINE void IfxDsadc_initCinPin(const IfxDsadc_Cin_In *cIn, IfxPort_InputMode cInMode, IfxPort_PadDriver padDriver)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   658  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   659      if (cIn->pin.port != NULL_PTR)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   660      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   661          IfxPort_setPinModeInput(cIn->pin.port, cIn->pin.pinIndex, cInMode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   662          IfxPort_setPinPadDriver(cIn->pin.port, cIn->pin.pinIndex, padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   663      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   664  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   665  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   666  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   667  IFX_INLINE void IfxDsadc_initCoutPin(const IfxDsadc_Cout_Out *cout, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   668  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   669      if (cout->pin.port != NULL_PTR)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   670      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   671          IfxPort_setPinModeOutput(cout->pin.port, cout->pin.pinIndex, pinMode, cout->select);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   672          IfxPort_setPinPadDriver(cout->pin.port, cout->pin.pinIndex, padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   673      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   674  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   675  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   676  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   677  IFX_INLINE void IfxDsadc_initDinPin(const IfxDsadc_Din_In *dIn, IfxPort_InputMode dInMode, IfxPort_PadDriver padDriver)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   678  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   679      if (dIn->pin.port != NULL_PTR)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   680      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   681          IfxPort_setPinModeInput(dIn->pin.port, dIn->pin.pinIndex, dInMode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   682          IfxPort_setPinPadDriver(dIn->pin.port, dIn->pin.pinIndex, padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   683      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   684  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   685  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   686  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   687  IFX_INLINE void IfxDsadc_initDsnPin(const IfxDsadc_Dsn_In *dsn, IfxPort_InputMode pinMode, IfxPort_PadDriver padDriver)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   688  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   689      if (dsn->pin.port != NULL_PTR)
	ld.w	d15,[a15]8
.L502:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   689      if (dsn->pin.port != NULL_PTR)      (inlined)
	jeq	d15,#0,.L21
.L503:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   690      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   691          IfxPort_setPinModeInput(dsn->pin.port, dsn->pin.pinIndex, pinMode);
	ld.a	a4,[a15]8
.L504:
	ld.bu	d4,[a15]12
.L232:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    45   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    46   * \defgroup IfxLld_Port_Std_Enum Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    47   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    48   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    49   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    50   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    51   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    52   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    53   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    54   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    55  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    56  #ifndef IFXPORT_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    57  #define IFXPORT_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    58  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    59  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    60  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    61  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    62  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    63  #include "_Impl/IfxPort_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    64  #include "Scu/Std/IfxScuWdt.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    65  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    66  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    67  /*--------------------------------Enumerations--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    68  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    69  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    70  /** \addtogroup IfxLld_Port_Std_Enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    71   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    72  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    73   * HSCT module.declared in MODULE_PORTx.LPCRx
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    74   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    76  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    77      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    78      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    79  } IfxPort_ControlledBy;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    80  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    81  /** \brief Ifx_P output modification modes definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    82   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    83  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    84  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    85      IfxPort_InputMode_undefined    = -1,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    86      IfxPort_InputMode_noPullDevice = 0 << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    87          IfxPort_InputMode_pullDown = 1U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    88          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    89  } IfxPort_InputMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    90  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    91  /** \brief Ifx_P input / output mode definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    92   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    93   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    94   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    95  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    96  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    97      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    98      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    99      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   100      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   101      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   102      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   103      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   104      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   105      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   106      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   107      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   108      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   109      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   110      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   111      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   112      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   113      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   114      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   115      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   116  } IfxPort_Mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   117  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   118  /** \brief Pin output alternate index
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   119   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   120  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   121  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   122      IfxPort_OutputIdx_general  = 0x10U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   123          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   124          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   125          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   126          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   127          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   128          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   129          IfxPort_OutputIdx_alt7 = 0x17U << 3
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   130  } IfxPort_OutputIdx;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   131  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   132  /** \brief Pin output mode definition
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   133   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   134  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   135  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   136      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   137          IfxPort_OutputMode_openDrain = 0x18U << 3
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_OutputMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   139  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   140  /** \brief Pad driver mode definition (strength and slew rate).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   141   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   142   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   143   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   144  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   145  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   146      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   147      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   148      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   149      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   150      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   151      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   152      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   153      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   154      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   155      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   156      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   157      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_PadDriver;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   159  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   160  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   161   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   162  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   163  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   164      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   165      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   166  } IfxPort_PadSupply;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   167  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   168  /** \brief Ifx_P output modification modes definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   169   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   170   * \see Ifx_P.OMR, IfxPort_setPinState()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   171   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   172  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   173  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   174      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   175      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   176      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   177      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   178  } IfxPort_State;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   179  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   180  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   181  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   182  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   183  /*-----------------------------Data Structures--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   184  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   185  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   186  /** \addtogroup IfxLld_Port_Std_DataStructures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   187   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   188  /** \brief Defines a pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   189   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   190  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   191  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   192      Ifx_P *port;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   193      uint8  pinIndex;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   194  } IfxPort_Pin;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   195  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   196  /** \brief To configure pins
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   197   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   198  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   199  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   200      Ifx_P            *port;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   201      uint8             pinIndex;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   202      IfxPort_OutputIdx mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   203      IfxPort_PadDriver padDriver;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   204  } IfxPort_Pin_Config;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   205  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   206  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   207  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   208  /** \addtogroup IfxLld_Port_Std_SinglePin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   209   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   210  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   211  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   212  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   213  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   214  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   215  /** \brief Return the port state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   216   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   217   * \param pinIndex Specifies the pin for which the state should be returned.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   218   * \return Returns TRUE the pin is high; FALSE the pin is low
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   219   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   220   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   221   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   222   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   223   *      // ...
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   224   *    }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   225   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   226   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   227   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   228  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   229  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   230  /** \brief Set the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   231   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   232   * \param pinIndex Specifies the pin to be set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   233   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   234   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   235   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   236   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   237   * IfxPort_setPinHigh(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   238   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   239   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   240   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   241   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   242   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   243  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   244  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   245  /** \brief Reset the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   246   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   247   * \param pinIndex Specifies the pin to be reset.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   248   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   249   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   250   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   251   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   252   * IfxPort_setPinLow(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   253   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   254   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   255   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   256   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   257   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   258  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   259  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   260  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   261   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   262   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   263   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   264   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   265   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   266   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   267   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   268   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   269   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   270   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   271   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   272  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   273  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   274  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   275   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   276   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   277   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   278   * \param index Specifies the alternate (or general purpose) output channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   279   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   280   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   281   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   282   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   283   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   284   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   285   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   286   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   287  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   288  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   289  /** \brief Set / Resets / Toggle the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   290   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   291   * \param pinIndex Specifies the pin to modify.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   292   * \param action Specifies the action: set, reset, toggle.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   293   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   294   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   295   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   296   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   297   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   298   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   299   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   300   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   301   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   302   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   303  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   304  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   305  /** \brief Toggle the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin to be toggled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   308   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   309   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   311   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   312   * IfxPort_togglePin(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   313   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   314   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   315   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   316   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   317   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   318  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   319  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   320  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   321  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   322  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   323  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   324  /** \brief Disable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   325   * This function disables the emergency stop function. A check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   326   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   327   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   328   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   329   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   330   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   331   * /code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   332   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   333   *     {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   334   *         // failed to disable emergency stop for P33.0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   335   *     }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   336   * /endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   337   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   338   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   339   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   340   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   341  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   342  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   343  /** \brief Enable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   344   * This function enables the emergency stop function. A check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   345   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   346   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   347   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   348   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   350   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   351   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   352   *       // failed to enable emergency stop for P33.0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   353   *     }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   354   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   355   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   356   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   357   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   358   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   359  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   360  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   361  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   362   * Also Configures the P40/P41 Port for digital functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   363   * which bydefault support analog functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   364   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   365   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   366   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   367   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   368   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   369   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   370   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   371   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   372   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   373   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   374   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   375  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   376  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   377  /** \brief Configure the pad driver mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   378   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   379   * \param pinIndex Specifies the pin for which the mode will be set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   380   * \param padDriver Specifies the driver mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   381   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   382   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   383   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   384   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   385   * // enable strong 3.3V driver
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   386   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   387   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   388   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   389   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   390  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   391  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   392  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   393  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   394  /** \addtogroup IfxLld_Port_Std_PortGroup
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   395   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   397  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   398  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   399  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   400  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   401  /** \brief Return the port group state
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   402   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   403   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   404   * \param mask selects the pins which should be read (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   405   * \return Returns the selected pin values
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   406   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   407   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   408   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   409   * // read the current value of P33[7:0]
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   410   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   411   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   412   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   413   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   414  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   415  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   416  /** \brief Set the port group state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   417   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   418   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   419   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   420   * \param data specifies the value which should be set
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   421   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   422   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   423   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   424   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   425   * // configure P33.[7:0] as GPIO outputs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   426   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   427   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   428   * // set initial value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   429   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   430   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   431   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   432   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   433  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   434  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   435  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   436  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   437  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   438  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   439  /** \brief Returns the module address of the selected Port module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   440   * \param port Pointer to PORT module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   441   * \return PORT module register address
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   442   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   443  IFX_EXTERN Ifx_P *IfxPort_getAddress(IfxPort_Index port);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   444  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   445  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   446   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   447   * \return port index of IfxModule_IndexMap. return -1 in case of unknown port index.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   448   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   449  IFX_EXTERN IfxPort_Index IfxPort_getIndex(Ifx_P *port);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   450  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   451  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   452   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   453   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   454   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   455   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   456   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   457   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   458   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   459   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   460   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   461   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   462   *  \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   463   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   464   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   465  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   466  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   467  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   468   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   469   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   470   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   471   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   472   * \param index Specifies the alternate (or general purpose) output channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   473   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   474   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   475   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   476   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   477   * // configure P33.[7:0] as GPIO outputs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   478   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   479   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   480   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   481   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   482  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   483  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   484  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   485   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   486   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   487   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   488   * \param padDriver Specifies the pad driver strength.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   489   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   490   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   491   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   492   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   493   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   494   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   495   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   496   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   497   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   498  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   499  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   500  /** \brief set LVDSH mode (configured for Port21)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   501   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   502   * \param pinIndex specifies pin  to be modified
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   503   * \param mode specifes the mode of pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   504   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   505   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   506   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   508  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   509  /** \brief set LVDSM mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   510   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   511   * \param pinIndex specifies pin to be modified
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   512   * \param lvdsPadDriver select speed grade of LVDS Pad
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   513   * \param padSupply select the PAD supply (5/3.3V)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   514   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   515   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   516  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   517  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   518  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   519  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   521  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   523  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   524  /** \brief Disable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   525   * This function disables the emergency stop function. No check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   526   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   527   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   528   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   529   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   530   * \see IfxPort_disableEmergencyStop()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   531   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   532   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   533  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   534  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   535  /** \brief Enable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   536   * This function enables the emergency stop function. No check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   537   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   538   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   539   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   540   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   541   * \see IfxPort_enableEmergencyStop()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   542   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   543   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   544  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   545  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   546  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   547  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   548  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   549  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   550  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   551  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   552      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   553  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   554  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   555  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   556  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   557  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   558      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   559  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   560  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   561  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   562  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   563  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   564      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   565  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   566  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   567  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   568  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   569  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   570      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   571  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   572  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   573  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   574  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   575  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   576      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   577  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   578  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   579  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   580  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   581  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   582      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
	extr.u	d5,d0,#0,#8
	call	IfxPort_setPinMode
.L233:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   692   IfxPort_setPinModeInput(dsn->pin.port, dsn->pin.pinIndex, pinMode);
	ld.a	a4,[a15]8
.L505:
	ld.bu	d4,[a15]12
.L506:
	mov	d5,d8
	call	IfxPort_setPinPadDriver

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   689      if (dsn->pin.port != NULL_PTR)      (inlined)
.L21:
.L20:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   224  in(dsp, pins->dspMode, pins->pinDriver);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   225          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   226  
	ld.a	a15,[a12]32
.L404:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   227          const IfxDsadc_Cin_In *cin = pins->cin;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   228  
	jz.a	a15,.L22
.L507:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   229          if (cin != NULL_PTR)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   230          {
	ld.b	d0,[a12]36
.L508:
	ld.bu	d8,[a12]37
.L244:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     2   * \file IfxDsadc.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     3   * \brief DSADC  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     4   * \ingroup IfxLld_Dsadc
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     7   * \copyright Copyright (c) 2017 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    44   * \defgroup IfxLld_Dsadc_Std_Enum Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    45   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    46   * \defgroup IfxLld_Dsadc_Std_Operative Operative Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    47   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    48   * \defgroup IfxLld_Dsadc_Std_Support Support Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    49   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    50   * \defgroup IfxLld_Dsadc_Std_Interrupt Interrupt Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    51   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    52   * \defgroup IfxLld_Dsadc_Std_IO IO Pin Configuration Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    53   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    54   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    55  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    56  #ifndef IFXDSADC_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    57  #define IFXDSADC_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    58  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    59  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    60  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    61  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    62  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    63  #include "_Impl/IfxDsadc_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    64  #include "Src/Std/IfxSrc.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    65  #include "Scu/Std/IfxScuCcu.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    66  #include "_PinMap/IfxDsadc_PinMap.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    67  #include "IfxDsadc_reg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    68  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    69  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    70  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    71  /*--------------------------------Enumerations--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    72  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    73  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    74  /** \addtogroup IfxLld_Dsadc_Std_Enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    75   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    76  /** \brief Comb Filter (auxiliary) shift control\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    77   * Definition in Ifx_DSADC.FCFGA.B.AFSC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    78   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    79  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    80  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    81      IfxDsadc_AuxCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    82      IfxDsadc_AuxCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    83      IfxDsadc_AuxCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    84      IfxDsadc_AuxCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    85  } IfxDsadc_AuxCombFilterShift;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    86  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    87  /** \brief Comb Filter (auxiliary) configuration/type\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    88   * Definition in Ifx_DSADC.FCFGA.B.CFAC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    89   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    90  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    91  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    92      IfxDsadc_AuxCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    93      IfxDsadc_AuxCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    94      IfxDsadc_AuxCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    95      IfxDsadc_AuxCombFilterType_combF = 3   /**< \brief CICF */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    96  } IfxDsadc_AuxCombFilterType;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    97  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    98  /** \brief Service request generation (auxiliary)\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    99   * Definition in Ifx_DSADC.FCFGA.B.ESEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   100   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   101  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   102  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   103      IfxDsadc_AuxEvent_everyNewResult  = 0, /**< \brief Always, for each new result value */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   104      IfxDsadc_AuxEvent_insideBoundary  = 1, /**< \brief If result is inside the boundary band */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   105      IfxDsadc_AuxEvent_outsideBoundary = 2  /**< \brief If result is outside the boundary band */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   106  } IfxDsadc_AuxEvent;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   107  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   108  /** \brief Service request generation (auxiliary)\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   109   * Definition in Ifx_DSADC.FCFGA.B.EGT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   110   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   111  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   112  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   113      IfxDsadc_AuxGate_definedByESEL       = 0, /**< \brief Separate: generate events according to ESEL */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   114      IfxDsadc_AuxGate_coupledToIntegrator = 1  /**< \brief Coupled: generate events only when the integrator is enabled and after the discard phase defined by bitfield NVALDIS */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   115  } IfxDsadc_AuxGate;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   116  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   117  /** \brief Service request generation (auxiliary)\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   118   * Definition in Ifx_DSADC.FCFGA.B.SRGA
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   119   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   120  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   121  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   122      IfxDsadc_AuxServiceRequest_never     = 0,  /**< \brief Never, service requests disabled */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   123      IfxDsadc_AuxServiceRequest_auxFilter = 1,  /**< \brief Auxiliary filter: As selected by bitfield ESEL (\ref IfxDsadc_AuxEvent) */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   124      IfxDsadc_AuxServiceRequest_altSource = 2   /**< \brief Alternate source: Capturing of a sign delay value to register CGSYNCx (x = 0 - 5) */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   125  } IfxDsadc_AuxServiceRequest;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   126  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   127  /** \brief Carrier generation mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   128   * Definition in Ifx_DSADC.CGCFG.B.CGMOD
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   129   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   130  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   131  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   132      IfxDsadc_CarrierWaveformMode_stopped  = 0,  /**< \brief Carrier Generator stopped */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   133      IfxDsadc_CarrierWaveformMode_square   = 1,  /**< \brief Carrier Generator generates square wave */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   134      IfxDsadc_CarrierWaveformMode_triangle = 2,  /**< \brief Carrier Generator generates triangle wave */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   135      IfxDsadc_CarrierWaveformMode_sine     = 3   /**< \brief Carrier Generator generates sine wave */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   136  } IfxDsadc_CarrierWaveformMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   137  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   138  /** \brief Specifies the channel Index
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   139   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   140  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   141  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   142      IfxDsadc_ChannelId_0 = 0,  /**< \brief Specifies the channel Index 0 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   143      IfxDsadc_ChannelId_2 = 2,  /**< \brief Specifies the channel Index 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   144      IfxDsadc_ChannelId_3 = 3   /**< \brief Specifies the channel Index 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   145  } IfxDsadc_ChannelId;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   146  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   147  /** \brief Modulator common mode voltage selection\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   148   * Definition in Ifx_DSADC.MODCFGx.B.CMVS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   149   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   150  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   151  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   152      IfxDsadc_CommonModeVoltage_a = 0,  /**< \brief VCM = VAREF / 3.03 (1.65 V for VAREF = 5.0 V), recommended for VDDM = 3.3 V1.65V */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   153      IfxDsadc_CommonModeVoltage_b = 1,  /**< \brief VCM = VAREF / 2.27 (2.2 V for VAREF = 5.0 V), recommended for low distortion of AC-coupled signals */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   154      IfxDsadc_CommonModeVoltage_c = 2   /**< \brief VCM = VAREF / 2.0 (2.5 V for VAREF = 5.0 V), recommended for DC-coupled signals */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   155  } IfxDsadc_CommonModeVoltage;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   156  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   157  /** \brief FIR data shift control\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   158   * Selects the displacement caused by the data shifter at the FIR filter output\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   159   * Definition in Ifx_DSADC.FCFGM.B.DSH
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   160   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   161  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   162  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   163      IfxDsadc_FirDataShift_noShift  = 0,  /**< \brief no shift, use full range */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   164      IfxDsadc_FirDataShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   165      IfxDsadc_FirDataShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   166      IfxDsadc_FirDataShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   167  } IfxDsadc_FirDataShift;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   168  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   169  /** \brief FIR shift control\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   170   * Selects the displacement caused by the data shifter inbetween the FIR filter blocks.\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   171   * Definition in Ifx_DSADC.FCFGM.B.FSH
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   172   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   173  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   174  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   175      IfxDsadc_FirInternalShift_noShift  = 0, /**< \brief no shift, use full range */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   176      IfxDsadc_FirInternalShift_shiftBy1 = 1  /**< \brief Shift by 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   177  } IfxDsadc_FirInternalShift;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   178  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   179  /** \brief Modulator configuration of positive/negative input line\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   180   * Definition in Ifx_DSADC.MODCFGx.B.INCFGP and Ifx_DSADC.MODCFGx.B.INCFGN
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   181   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   182  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   183  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   184      IfxDsadc_InputConfig_inputPin          = 0,  /**< \brief Modulator input connected to external pin */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   185      IfxDsadc_InputConfig_supplyVoltage     = 1,  /**< \brief Modulator input connected to supply voltage V_ddm */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   186      IfxDsadc_InputConfig_commonModeVoltage = 2,  /**< \brief Modulator input connected to common mode voltage V_cm */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   187      IfxDsadc_InputConfig_referenceGround   = 3   /**< \brief Modulator input connected to reference ground V_ref */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   188  } IfxDsadc_InputConfig;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   189  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   190  /** \brief Demodulator input data source selection\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   191   * Definition in Ifx_DSADC.DICFG.B.DSRC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   192   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   193  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   194  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   195      IfxDsadc_InputDataSource_onChipStandAlone = 0,  /**< \brief On-chip modulator, standalone (3rd order) */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   196      IfxDsadc_InputDataSource_onChipCombined   = 1,  /**< \brief On-chip modulator, yield (2nd order) */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   197      IfxDsadc_InputDataSource_directInputA     = 2,  /**< \brief External, from input A, direct */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   198      IfxDsadc_InputDataSource_invertedInputA   = 3,  /**< \brief External, from input A, inverted */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   199      IfxDsadc_InputDataSource_directInputB     = 4,  /**< \brief External, from input B, direct */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   200      IfxDsadc_InputDataSource_invertedInputB   = 5   /**< \brief External, from input B, inverted */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   201  } IfxDsadc_InputDataSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   202  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   203  /** \brief Modulator gain select of analog input path\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   204   * Definition in Ifx_DSADC.MODCFGx.B.GAINSEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   205   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   206  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   207  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   208      IfxDsadc_InputGain_factor1  = 0, /**< \brief Input gain factor: 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   209      IfxDsadc_InputGain_factor2  = 1, /**< \brief Input gain factor: 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   210      IfxDsadc_InputGain_factor4  = 2, /**< \brief Input gain factor: 4 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   211      IfxDsadc_InputGain_factor8  = 3, /**< \brief Input gain factor: 8 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   212      IfxDsadc_InputGain_factor16 = 4  /**< \brief Input gain factor: 16 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   213  } IfxDsadc_InputGain;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   214  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   215  /** \brief Modulator input pin selection\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   216   * Definition in Ifx_DSADC.MODCFGx.B.INMUX
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   217   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   218  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   219  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   220      IfxDsadc_InputPin_a = 0,  /**< \brief Pin A connected to modulator input */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   221      IfxDsadc_InputPin_b = 1,  /**< \brief Pin B connected to modulator input */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   222      IfxDsadc_InputPin_c = 2,  /**< \brief Pin C connected to modulator input */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   223      IfxDsadc_InputPin_d = 3   /**< \brief Pin D connected to modulator input */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   224  } IfxDsadc_InputPin;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   225  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   226  /** \brief Integrator window size\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   227   * Definition in Ifx_DSADC.IWCTR.B.IWS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   228   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   229  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   230  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   231      IfxDsadc_IntegrationWindowSize_internalControl = 0,  /**< \brief Internal control: stop integrator after REPVAL+1 integration cycles */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   232      IfxDsadc_IntegrationWindowSize_externalControl = 1   /**< \brief External control: stop integrator when bit INTEN becomes 0 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   233  } IfxDsadc_IntegrationWindowSize;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   234  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   235  /** \brief Integrator trigger mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   236   * NOTE: switch-first to bypassed before using other mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   237   * Definition in Ifx_DSADC.DICFG.B.ITRMODE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   238   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   239  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   240  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   241      IfxDsadc_IntegratorTrigger_bypassed     = 0, /**< \brief No integration trigger, integrator bypassed */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   242      IfxDsadc_IntegratorTrigger_fallingEdge  = 1, /**< \brief Trigger event upon a falling edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   243      IfxDsadc_IntegratorTrigger_risingEdge   = 2, /**< \brief Trigger event upon a rising edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   244      IfxDsadc_IntegratorTrigger_alwaysActive = 3  /**< \brief No trigger, integrator active all the time */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   245  } IfxDsadc_IntegratorTrigger;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   246  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   247  /** \brief Low power supply voltage select\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   248   * Definition in Ifx_DSADC.GLOBCFG.B.LOSUP
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   249   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   250  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   251  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   252      IfxDsadc_LowPowerSupply_5V   = 0, /**< \brief Supply Voltage for Analog Circuitry set to 5V */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   253      IfxDsadc_LowPowerSupply_3_3V = 1  /**< \brief Supply Voltage for Analog Circuitry set to 3.3V */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   254  } IfxDsadc_LowPowerSupply;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   255  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   256  /** \brief Comb Filter (Main Chain) shift control\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   257   * Definition in Ifx_DSADC.FCFGC.B.MFSC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   258   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   259  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   260  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   261      IfxDsadc_MainCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   262      IfxDsadc_MainCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   263      IfxDsadc_MainCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   264      IfxDsadc_MainCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   265  } IfxDsadc_MainCombFilterShift;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   266  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   267  /** \brief Comb Filter (Main Chain) configuration/type\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   268   * Definition in Ifx_DSADC.FCFGC.B.CFMC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   269   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   270  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   271  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   272      IfxDsadc_MainCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   273      IfxDsadc_MainCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   274      IfxDsadc_MainCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   275      IfxDsadc_MainCombFilterType_combF = 3   /**< \brief CICF */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   276  } IfxDsadc_MainCombFilterType;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   277  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   278  /** \brief Service request generation (main chain)\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   279   * Definition in Ifx_DSADC.FCFGC.B.SRGM
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   280   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   281  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   282  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   283      IfxDsadc_MainServiceRequest_never          = 0,  /**< \brief Never, service requests disabled */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   284      IfxDsadc_MainServiceRequest_highGateSignal = 1,  /**< \brief While gate (selected trigger signal) is high */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   285      IfxDsadc_MainServiceRequest_lowGateSignal  = 2,  /**< \brief While gate (selected trigger signal) is low */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   286      IfxDsadc_MainServiceRequest_everyNewResult = 3   /**< \brief Always, for each new result value */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   287  } IfxDsadc_MainServiceRequest;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   288  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   289  /** \brief Modulator clock select\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   290   * Definition in Ifx_DSADC.GLOBCFG.B.MCSEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   291   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   292  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   293  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   294      IfxDsadc_ModulatorClock_off   = 0,  /**< \brief Internal clock off, no source selected */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   295      IfxDsadc_ModulatorClock_fDSD  = 1,  /**< \brief f_dsd clock selected */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   296      IfxDsadc_ModulatorClock_fERAY = 2,  /**< \brief f_eray clock selected */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   297      IfxDsadc_ModulatorClock_fOSC0 = 3   /**< \brief f_osc0 clock selected */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   298  } IfxDsadc_ModulatorClock;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   299  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   300  /** \brief Modulator divider factor for modulator clock\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   301   * Definition in Ifx_DSADC.MODCFGx.B.DIVM
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   302   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   303  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   304  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   305      IfxDsadc_ModulatorClockDivider_div2 = 0,      /**< \brief f_mod = f_clk / 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   306      IfxDsadc_ModulatorClockDivider_div4,          /**< \brief f_mod = f_clk / 4  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   307      IfxDsadc_ModulatorClockDivider_div6,          /**< \brief f_mod = f_clk / 6  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   308      IfxDsadc_ModulatorClockDivider_div8,          /**< \brief f_mod = f_clk / 8  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   309      IfxDsadc_ModulatorClockDivider_div10,         /**< \brief f_mod = f_clk / 10  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   310      IfxDsadc_ModulatorClockDivider_div12,         /**< \brief f_mod = f_clk / 12  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   311      IfxDsadc_ModulatorClockDivider_div14,         /**< \brief f_mod = f_clk / 14  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   312      IfxDsadc_ModulatorClockDivider_div16,         /**< \brief f_mod = f_clk / 16  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   313      IfxDsadc_ModulatorClockDivider_div18,         /**< \brief f_mod = f_clk / 18  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   314      IfxDsadc_ModulatorClockDivider_div20,         /**< \brief f_mod = f_clk / 20  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   315      IfxDsadc_ModulatorClockDivider_div22,         /**< \brief f_mod = f_clk / 22  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   316      IfxDsadc_ModulatorClockDivider_div24,         /**< \brief f_mod = f_clk / 24  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   317      IfxDsadc_ModulatorClockDivider_div26,         /**< \brief f_mod = f_clk / 26  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   318      IfxDsadc_ModulatorClockDivider_div28,         /**< \brief f_mod = f_clk / 28  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   319      IfxDsadc_ModulatorClockDivider_div30,         /**< \brief f_mod = f_clk / 30  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   320      IfxDsadc_ModulatorClockDivider_div32          /**< \brief f_mod = f_clk / 32  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   321  } IfxDsadc_ModulatorClockDivider;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   322  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   323  /** \brief Rectifier sign source\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   324   * Selects the sign signal that is to be delayed.\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   325   * Definition in Ifx_DSADC.RECT.B.SSRC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   326   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   327  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   328  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   329      IfxDsadc_RectifierSignSource_onChipGenerator = 0,  /**< \brief On-chip carrier generator */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   330      IfxDsadc_RectifierSignSource_nextChannel     = 1,  /**< \brief Sign of result of next channel */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   331      IfxDsadc_RectifierSignSource_externalA       = 2,  /**< \brief External sign signal A */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   332      IfxDsadc_RectifierSignSource_externalB       = 3   /**< \brief External sign signal B */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   333  } IfxDsadc_RectifierSignSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   334  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   335  /** \brief Demodulator sample clock source select\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   336   * Definition in Ifx_DSADC.DICFG.B.CSRC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   337   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   338  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   339  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   340      IfxDsadc_SampleClockSource_internal = 0,  /**< \brief Internal clock */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   341      IfxDsadc_SampleClockSource_inputA   = 1,  /**< \brief External clock, from Input A */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   342      IfxDsadc_SampleClockSource_inputB   = 2,  /**< \brief External clock, from Input B */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   343      IfxDsadc_SampleClockSource_inputC   = 3   /**< \brief External clock, from Input C */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   344  } IfxDsadc_SampleClockSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   345  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   346  /** \brief Demodulator data strobe generation mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   347   * Definition in Ifx_DSADC.DICFG.B.STROBE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   348   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   349  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   350  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   351      IfxDsadc_SampleStrobe_noDataStrobe            = 0, /**< \brief No data strobe */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   352      IfxDsadc_SampleStrobe_sampleOnRisingEdge      = 1, /**< \brief Direct clock, a sample trigger is generated at each rising clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   353      IfxDsadc_SampleStrobe_sampleOnFallingEdge     = 2, /**< \brief Direct clock, a sample trigger is generated at each falling clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   354      IfxDsadc_SampleStrobe_sampleOnBothEdges       = 3, /**< \brief Double data, a sample trigger is generated at each rising and falling clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   355      IfxDsadc_SampleStrobe_reserved                = 4, /**< \brief don't use */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   356      IfxDsadc_SampleStrobe_sampleOnTwoRisingEdges  = 5, /**< \brief Double clock, a sample trigger is generated at every 2nd rising clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   357      IfxDsadc_SampleStrobe_sampleOnTwoFallingEdges = 6  /**< \brief Double clock, a sample trigger is generated at every 2nd falling clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   358  } IfxDsadc_SampleStrobe;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   359  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   360  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   361   * Definition in Ifx_DSADC.CLC.B.EDIS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   362   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   363  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   364  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   365      IfxDsadc_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   366      IfxDsadc_SleepMode_disable = 1  /**< \brief disables sleep mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   367  } IfxDsadc_SleepMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   368  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   369  /** \brief Timestamp trigger mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   370   * Definition in Ifx_DSADC.DICFG.B.TSTRMODE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   371   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   372  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   373  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   374      IfxDsadc_TimestampTrigger_noTrigger   = 0,  /**< \brief No timestamp trigger */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   375      IfxDsadc_TimestampTrigger_fallingEdge = 1,  /**< \brief Trigger event upon a falling edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   376      IfxDsadc_TimestampTrigger_risingEdge  = 2,  /**< \brief Trigger event upon a rising edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   377      IfxDsadc_TimestampTrigger_eachEdge    = 3   /**< \brief Trigger event upon each edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   378  } IfxDsadc_TimestampTrigger;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   379  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   380  /** \brief Trigger select\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   381   * Definition in Ifx_DSADC.DICFG.B.TRSEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   382   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   383  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   384  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   385      IfxDsadc_TriggerInput_a = 0,  /**< \brief dsadc trig 0 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   386      IfxDsadc_TriggerInput_b = 1,  /**< \brief dsadc trig 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   387      IfxDsadc_TriggerInput_c = 2,  /**< \brief vadc trig 0 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   388      IfxDsadc_TriggerInput_d = 3,  /**< \brief vadc trig 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   389      IfxDsadc_TriggerInput_e = 4,  /**< \brief external pin e */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   390      IfxDsadc_TriggerInput_f = 5,  /**< \brief external pin f */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   391      IfxDsadc_TriggerInput_g = 6,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   392      IfxDsadc_TriggerInput_h = 7
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   393  } IfxDsadc_TriggerInput;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   394  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   395  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   397  /** \addtogroup IfxLld_Dsadc_Std_Operative
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   398   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   399  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   400  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   402  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   403  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   404  /** \brief Sets the sensitivity of the module to sleep signal
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   405   * \param dsadc pointer to DSADC registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   406   * \param mode mode selection (enable/disable)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   407   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   408   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   409  IFX_INLINE void IfxDsadc_setSleepMode(Ifx_DSADC *dsadc, IfxDsadc_SleepMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   410  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   411  /** \brief Enables the conversion of multiple channels
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   412   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   413   * \param modulatorMask the modulator which should be running (bitwise selection)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   414   * \param channelMask the channels which should be scanned (bitwise selection)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   415   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   416   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   417   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   418   *     // enable the conversion of all 6 DSADC channels
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   419   *     IfxDsadc_startScan(&MODULE_DSADC, 0x3FU, 0x3FU);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   420   *     // results are now available in IFXDSADC(ds).CH[x].RESM.B.RESULT (x=0..5)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   421   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   422   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   423   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   424  IFX_INLINE void IfxDsadc_startScan(Ifx_DSADC *dsadc, uint32 modulatorMask, uint32 channelMask);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   425  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   426  /** \brief Disables the conversion of multiple channels
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   427   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   428   * \param modulatorMask the modulator which should be disabled (bitwise selection)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   429   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   430   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   431   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   432   *     // disable the modulators of all 6 DSADC channels
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   433   *     IfxDsadc_stopScan(&MODULE_DSADC, 0x3FU);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   434   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   435   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   436   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   437  IFX_INLINE void IfxDsadc_stopScan(Ifx_DSADC *dsadc, uint32 modulatorMask);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   438  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   439  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   440  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   441  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   442  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   443  /** \brief resets the DSADC kernel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   444   * \param dsadc pointer to DSADC registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   445   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   446   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   447  IFX_EXTERN void IfxDsadc_resetModule(Ifx_DSADC *dsadc);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   448  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   449  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   450  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   451  /** \addtogroup IfxLld_Dsadc_Std_Support
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   452   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   453  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   454  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   455  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   456  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   457  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   458  /** \brief Get result from the auxiliary chain
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   459   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   460   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   461   * \return result from the auxiliary chain
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   462   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   463  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   464  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   465  /** \brief Get the main comb decimation factor
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   466   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   467   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   468   * \return the main comb decimation factor
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   469   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   470  IFX_INLINE uint16 IfxDsadc_getMainCombDecimation(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   471  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   472  /** \brief Get result from the main chain
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   473   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   474   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   475   * \return result from the main chain
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   476   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   477  IFX_INLINE sint16 IfxDsadc_getMainResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   478  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   479  /** \brief Return TRUE if DSADC module is enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   480   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   481   * \return TRUE if DSADC module is enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   482   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   483  IFX_INLINE boolean IfxDsadc_isModuleEnabled(Ifx_DSADC *dsadc);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   484  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   485  /** \brief Set the carrier waveform mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   486   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   487   * \param waveformMode the waveform mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   488   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   489   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   490  IFX_INLINE void IfxDsadc_setCarrierMode(Ifx_DSADC *dsadc, IfxDsadc_CarrierWaveformMode waveformMode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   491  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   492  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   493  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   494  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   495  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   496  /** \brief Get the sample frequency of the integrator output in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   497   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   498   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   499   * \return frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   500   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   501  IFX_EXTERN float32 IfxDsadc_getIntegratorOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   502  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   503  /** \brief Get the sample frequency of the main COMB filter output in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   504   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   505   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   506   * \return frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   507   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   508  IFX_EXTERN float32 IfxDsadc_getMainCombOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   509  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   510  /** \brief Estimate the group delay of main-chain filters in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   511   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   512   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   513   * \return delay in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   514   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   515  IFX_EXTERN float32 IfxDsadc_getMainGroupDelay(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   516  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   517  /** \brief Get the modulator clock frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   518   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   519   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   520   * \return frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   521   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   522  IFX_EXTERN float32 IfxDsadc_getModulatorClockFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   523  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   524  /** \brief Get the input frequency of DSADC in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   525   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   526   * \return frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   527   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   528  IFX_EXTERN float32 IfxDsadc_getModulatorInputClockFreq(Ifx_DSADC *dsadc);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   529  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   530  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   531  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   532  /** \addtogroup IfxLld_Dsadc_Std_Interrupt
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   533   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   534  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   535  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   536  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   537  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   538  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   539  /** \brief Address/pointer to the interrupt source register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   540   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   541   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   542   * \return Address/pointer to the interrupt source register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   543   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   544  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getAuxSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   545  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   546  /** \brief Get the interrupt source register for a Main event
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   547   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   548   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   549   * \return Address/pointer to the interrupt source register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   550   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   551  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getMainSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   552  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   553  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   554  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   555  /** \addtogroup IfxLld_Dsadc_Std_IO
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   556   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   557  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   558  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   559  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   560  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   561  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   562  /** \brief Initializes a CGPWM output
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   563   * \param cgPwm the CGPWM Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   564   * \param pinMode the pin output mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   565   * \param padDriver the pad driver mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   566   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   567   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   568  IFX_INLINE void IfxDsadc_initCgPwmPin(const IfxDsadc_Cgpwm_Out *cgPwm, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   569  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   570  /** \brief Initializes a CIN input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   571   * \param cIn the CIN Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   572   * \param cInMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   573   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   574   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   575   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   576  IFX_INLINE void IfxDsadc_initCinPin(const IfxDsadc_Cin_In *cIn, IfxPort_InputMode cInMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   577  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   578  /** \brief Initializes a COUT output
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   579   * \param cout the COUT Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   580   * \param pinMode the pin output mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   581   * \param padDriver the pad driver mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   582   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   583   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   584  IFX_INLINE void IfxDsadc_initCoutPin(const IfxDsadc_Cout_Out *cout, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   585  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   586  /** \brief Initializes a DIN input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   587   * \param dIn the DIN Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   588   * \param dInMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   589   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   590   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   591   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   592  IFX_INLINE void IfxDsadc_initDinPin(const IfxDsadc_Din_In *dIn, IfxPort_InputMode dInMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   593  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   594  /** \brief Initializes a DS input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   595   * \param dsn the DSN Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   596   * \param pinMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   597   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   598   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   599   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   600  IFX_INLINE void IfxDsadc_initDsnPin(const IfxDsadc_Dsn_In *dsn, IfxPort_InputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   601  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   602  /** \brief Initializes a DS input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   603   * \param dsp the DSP Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   604   * \param pinMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   605   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   606   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   607   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   608  IFX_INLINE void IfxDsadc_initDspPin(const IfxDsadc_Dsp_In *dsp, IfxPort_InputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   609  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   610  /** \brief Initializes a ITR input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   611   * \param itr the ITR Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   612   * \param itrMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   613   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   614   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   615   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   616  IFX_INLINE void IfxDsadc_initItrPin(const IfxDsadc_Itr_In *itr, IfxPort_InputMode itrMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   617  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   618  /** \brief Initializes a SG input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   619   * \param sg the SG Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   620   * \param pinMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   621   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   622   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   623   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   624  IFX_INLINE void IfxDsadc_initSgPin(const IfxDsadc_Sg_In *sg, IfxPort_InputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   625  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   626  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   627  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   628  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   629  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   630  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   631  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   632  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   633  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   634      return (sint16)(dsadc->CH[channel].RESA.B.RESULT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   635  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   636  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   637  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   638  IFX_INLINE uint16 IfxDsadc_getMainCombDecimation(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   639  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   640      return (uint16)(1U + dsadc->CH[channel].FCFGC.B.CFMDF);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   641  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   642  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   643  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   644  IFX_INLINE sint16 IfxDsadc_getMainResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   645  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   646      return (sint16)(dsadc->CH[channel].RESM.B.RESULT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   647  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   648  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   649  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   650  IFX_INLINE void IfxDsadc_initCgPwmPin(const IfxDsadc_Cgpwm_Out *cgPwm, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   651  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   652      IfxPort_setPinModeOutput(cgPwm->pin.port, cgPwm->pin.pinIndex, pinMode, cgPwm->select);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   653      IfxPort_setPinPadDriver(cgPwm->pin.port, cgPwm->pin.pinIndex, padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   654  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   655  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   656  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   657  IFX_INLINE void IfxDsadc_initCinPin(const IfxDsadc_Cin_In *cIn, IfxPort_InputMode cInMode, IfxPort_PadDriver padDriver)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   658  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   659      if (cIn->pin.port != NULL_PTR)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   660      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   661          IfxPort_setPinModeInput(cIn->pin.port, cIn->pin.pinIndex, cInMode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   662          IfxPort_setPinPadDriver(cIn->pin.port, cIn->pin.pinIndex, padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   663      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   664  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   665  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   666  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   667  IFX_INLINE void IfxDsadc_initCoutPin(const IfxDsadc_Cout_Out *cout, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   668  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   669      if (cout->pin.port != NULL_PTR)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   670      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   671          IfxPort_setPinModeOutput(cout->pin.port, cout->pin.pinIndex, pinMode, cout->select);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   672          IfxPort_setPinPadDriver(cout->pin.port, cout->pin.pinIndex, padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   673      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   674  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   675  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   676  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   677  IFX_INLINE void IfxDsadc_initDinPin(const IfxDsadc_Din_In *dIn, IfxPort_InputMode dInMode, IfxPort_PadDriver padDriver)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   678  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   679      if (dIn->pin.port != NULL_PTR)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   680      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   681          IfxPort_setPinModeInput(dIn->pin.port, dIn->pin.pinIndex, dInMode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   682          IfxPort_setPinPadDriver(dIn->pin.port, dIn->pin.pinIndex, padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   683      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   684  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   685  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   686  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   687  IFX_INLINE void IfxDsadc_initDsnPin(const IfxDsadc_Dsn_In *dsn, IfxPort_InputMode pinMode, IfxPort_PadDriver padDriver)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   688  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   689      if (dsn->pin.port != NULL_PTR)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   690      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   691          IfxPort_setPinModeInput(dsn->pin.port, dsn->pin.pinIndex, pinMode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   692          IfxPort_setPinPadDriver(dsn->pin.port, dsn->pin.pinIndex, padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   693      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   694  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   695  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   696  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   697  IFX_INLINE void IfxDsadc_initDspPin(const IfxDsadc_Dsp_In *dsp, IfxPort_InputMode pinMode, IfxPort_PadDriver padDriver)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   698  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   699      if (dsp->pin.port != NULL_PTR)
	ld.w	d15,[a15]8
.L509:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   699      if (dsp->pin.port != NULL_PTR)      (inlined)
	jeq	d15,#0,.L23
.L510:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   700      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   701          IfxPort_setPinModeInput(dsp->pin.port, dsp->pin.pinIndex, pinMode);
	ld.a	a4,[a15]8
.L511:
	ld.bu	d4,[a15]12
.L252:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    45   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    46   * \defgroup IfxLld_Port_Std_Enum Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    47   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    48   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    49   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    50   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    51   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    52   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    53   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    54   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    55  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    56  #ifndef IFXPORT_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    57  #define IFXPORT_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    58  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    59  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    60  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    61  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    62  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    63  #include "_Impl/IfxPort_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    64  #include "Scu/Std/IfxScuWdt.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    65  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    66  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    67  /*--------------------------------Enumerations--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    68  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    69  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    70  /** \addtogroup IfxLld_Port_Std_Enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    71   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    72  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    73   * HSCT module.declared in MODULE_PORTx.LPCRx
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    74   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    76  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    77      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    78      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    79  } IfxPort_ControlledBy;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    80  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    81  /** \brief Ifx_P output modification modes definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    82   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    83  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    84  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    85      IfxPort_InputMode_undefined    = -1,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    86      IfxPort_InputMode_noPullDevice = 0 << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    87          IfxPort_InputMode_pullDown = 1U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    88          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    89  } IfxPort_InputMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    90  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    91  /** \brief Ifx_P input / output mode definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    92   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    93   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    94   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    95  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    96  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    97      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    98      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    99      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   100      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   101      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   102      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   103      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   104      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   105      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   106      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   107      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   108      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   109      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   110      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   111      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   112      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   113      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   114      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   115      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   116  } IfxPort_Mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   117  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   118  /** \brief Pin output alternate index
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   119   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   120  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   121  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   122      IfxPort_OutputIdx_general  = 0x10U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   123          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   124          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   125          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   126          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   127          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   128          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   129          IfxPort_OutputIdx_alt7 = 0x17U << 3
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   130  } IfxPort_OutputIdx;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   131  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   132  /** \brief Pin output mode definition
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   133   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   134  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   135  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   136      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   137          IfxPort_OutputMode_openDrain = 0x18U << 3
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_OutputMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   139  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   140  /** \brief Pad driver mode definition (strength and slew rate).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   141   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   142   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   143   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   144  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   145  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   146      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   147      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   148      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   149      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   150      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   151      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   152      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   153      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   154      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   155      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   156      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   157      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_PadDriver;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   159  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   160  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   161   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   162  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   163  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   164      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   165      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   166  } IfxPort_PadSupply;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   167  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   168  /** \brief Ifx_P output modification modes definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   169   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   170   * \see Ifx_P.OMR, IfxPort_setPinState()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   171   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   172  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   173  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   174      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   175      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   176      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   177      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   178  } IfxPort_State;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   179  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   180  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   181  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   182  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   183  /*-----------------------------Data Structures--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   184  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   185  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   186  /** \addtogroup IfxLld_Port_Std_DataStructures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   187   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   188  /** \brief Defines a pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   189   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   190  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   191  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   192      Ifx_P *port;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   193      uint8  pinIndex;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   194  } IfxPort_Pin;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   195  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   196  /** \brief To configure pins
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   197   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   198  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   199  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   200      Ifx_P            *port;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   201      uint8             pinIndex;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   202      IfxPort_OutputIdx mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   203      IfxPort_PadDriver padDriver;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   204  } IfxPort_Pin_Config;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   205  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   206  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   207  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   208  /** \addtogroup IfxLld_Port_Std_SinglePin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   209   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   210  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   211  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   212  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   213  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   214  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   215  /** \brief Return the port state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   216   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   217   * \param pinIndex Specifies the pin for which the state should be returned.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   218   * \return Returns TRUE the pin is high; FALSE the pin is low
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   219   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   220   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   221   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   222   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   223   *      // ...
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   224   *    }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   225   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   226   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   227   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   228  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   229  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   230  /** \brief Set the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   231   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   232   * \param pinIndex Specifies the pin to be set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   233   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   234   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   235   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   236   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   237   * IfxPort_setPinHigh(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   238   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   239   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   240   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   241   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   242   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   243  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   244  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   245  /** \brief Reset the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   246   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   247   * \param pinIndex Specifies the pin to be reset.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   248   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   249   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   250   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   251   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   252   * IfxPort_setPinLow(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   253   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   254   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   255   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   256   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   257   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   258  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   259  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   260  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   261   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   262   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   263   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   264   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   265   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   266   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   267   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   268   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   269   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   270   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   271   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   272  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   273  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   274  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   275   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   276   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   277   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   278   * \param index Specifies the alternate (or general purpose) output channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   279   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   280   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   281   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   282   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   283   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   284   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   285   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   286   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   287  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   288  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   289  /** \brief Set / Resets / Toggle the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   290   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   291   * \param pinIndex Specifies the pin to modify.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   292   * \param action Specifies the action: set, reset, toggle.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   293   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   294   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   295   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   296   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   297   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   298   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   299   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   300   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   301   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   302   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   303  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   304  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   305  /** \brief Toggle the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin to be toggled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   308   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   309   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   311   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   312   * IfxPort_togglePin(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   313   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   314   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   315   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   316   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   317   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   318  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   319  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   320  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   321  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   322  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   323  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   324  /** \brief Disable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   325   * This function disables the emergency stop function. A check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   326   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   327   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   328   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   329   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   330   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   331   * /code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   332   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   333   *     {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   334   *         // failed to disable emergency stop for P33.0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   335   *     }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   336   * /endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   337   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   338   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   339   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   340   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   341  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   342  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   343  /** \brief Enable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   344   * This function enables the emergency stop function. A check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   345   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   346   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   347   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   348   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   350   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   351   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   352   *       // failed to enable emergency stop for P33.0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   353   *     }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   354   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   355   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   356   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   357   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   358   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   359  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   360  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   361  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   362   * Also Configures the P40/P41 Port for digital functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   363   * which bydefault support analog functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   364   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   365   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   366   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   367   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   368   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   369   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   370   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   371   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   372   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   373   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   374   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   375  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   376  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   377  /** \brief Configure the pad driver mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   378   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   379   * \param pinIndex Specifies the pin for which the mode will be set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   380   * \param padDriver Specifies the driver mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   381   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   382   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   383   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   384   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   385   * // enable strong 3.3V driver
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   386   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   387   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   388   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   389   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   390  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   391  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   392  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   393  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   394  /** \addtogroup IfxLld_Port_Std_PortGroup
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   395   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   397  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   398  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   399  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   400  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   401  /** \brief Return the port group state
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   402   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   403   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   404   * \param mask selects the pins which should be read (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   405   * \return Returns the selected pin values
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   406   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   407   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   408   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   409   * // read the current value of P33[7:0]
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   410   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   411   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   412   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   413   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   414  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   415  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   416  /** \brief Set the port group state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   417   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   418   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   419   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   420   * \param data specifies the value which should be set
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   421   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   422   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   423   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   424   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   425   * // configure P33.[7:0] as GPIO outputs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   426   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   427   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   428   * // set initial value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   429   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   430   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   431   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   432   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   433  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   434  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   435  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   436  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   437  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   438  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   439  /** \brief Returns the module address of the selected Port module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   440   * \param port Pointer to PORT module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   441   * \return PORT module register address
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   442   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   443  IFX_EXTERN Ifx_P *IfxPort_getAddress(IfxPort_Index port);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   444  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   445  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   446   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   447   * \return port index of IfxModule_IndexMap. return -1 in case of unknown port index.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   448   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   449  IFX_EXTERN IfxPort_Index IfxPort_getIndex(Ifx_P *port);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   450  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   451  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   452   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   453   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   454   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   455   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   456   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   457   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   458   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   459   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   460   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   461   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   462   *  \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   463   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   464   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   465  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   466  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   467  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   468   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   469   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   470   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   471   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   472   * \param index Specifies the alternate (or general purpose) output channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   473   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   474   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   475   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   476   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   477   * // configure P33.[7:0] as GPIO outputs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   478   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   479   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   480   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   481   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   482  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   483  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   484  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   485   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   486   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   487   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   488   * \param padDriver Specifies the pad driver strength.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   489   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   490   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   491   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   492   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   493   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   494   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   495   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   496   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   497   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   498  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   499  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   500  /** \brief set LVDSH mode (configured for Port21)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   501   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   502   * \param pinIndex specifies pin  to be modified
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   503   * \param mode specifes the mode of pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   504   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   505   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   506   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   508  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   509  /** \brief set LVDSM mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   510   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   511   * \param pinIndex specifies pin to be modified
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   512   * \param lvdsPadDriver select speed grade of LVDS Pad
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   513   * \param padSupply select the PAD supply (5/3.3V)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   514   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   515   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   516  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   517  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   518  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   519  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   521  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   523  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   524  /** \brief Disable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   525   * This function disables the emergency stop function. No check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   526   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   527   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   528   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   529   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   530   * \see IfxPort_disableEmergencyStop()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   531   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   532   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   533  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   534  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   535  /** \brief Enable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   536   * This function enables the emergency stop function. No check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   537   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   538   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   539   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   540   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   541   * \see IfxPort_enableEmergencyStop()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   542   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   543   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   544  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   545  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   546  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   547  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   548  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   549  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   550  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   551  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   552      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   553  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   554  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   555  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   556  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   557  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   558      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   559  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   560  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   561  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   562  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   563  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   564      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   565  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   566  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   567  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   568  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   569  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   570      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   571  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   572  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   573  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   574  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   575  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   576      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   577  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   578  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   579  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   580  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   581  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   582      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
	extr.u	d5,d0,#0,#8
	call	IfxPort_setPinMode
.L253:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   702  etPinModeInput(dsp->pin.port, dsp->pin.pinIndex, pinMode);
	ld.a	a4,[a15]8
.L512:
	ld.bu	d4,[a15]12
.L513:
	mov	d5,d8
	call	IfxPort_setPinPadDriver

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   699      if (dsp->pin.port != NULL_PTR)      (inlined)
.L23:
.L22:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   231       IfxDsadc_initCinPin(cin, pins->cinMode, pins->pinDriver);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   232          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   233  
	ld.a	a15,[a12]
.L405:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   234          const IfxDsadc_Din_In *din = pins->din;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   235  
	jz.a	a15,.L24
.L514:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   236          if (din != NULL_PTR)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   237          {
	ld.b	d0,[a12]4
.L515:
	ld.bu	d8,[a12]37
.L257:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     2   * \file IfxDsadc.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     3   * \brief DSADC  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     4   * \ingroup IfxLld_Dsadc
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     7   * \copyright Copyright (c) 2017 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    44   * \defgroup IfxLld_Dsadc_Std_Enum Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    45   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    46   * \defgroup IfxLld_Dsadc_Std_Operative Operative Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    47   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    48   * \defgroup IfxLld_Dsadc_Std_Support Support Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    49   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    50   * \defgroup IfxLld_Dsadc_Std_Interrupt Interrupt Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    51   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    52   * \defgroup IfxLld_Dsadc_Std_IO IO Pin Configuration Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    53   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    54   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    55  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    56  #ifndef IFXDSADC_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    57  #define IFXDSADC_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    58  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    59  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    60  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    61  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    62  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    63  #include "_Impl/IfxDsadc_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    64  #include "Src/Std/IfxSrc.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    65  #include "Scu/Std/IfxScuCcu.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    66  #include "_PinMap/IfxDsadc_PinMap.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    67  #include "IfxDsadc_reg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    68  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    69  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    70  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    71  /*--------------------------------Enumerations--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    72  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    73  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    74  /** \addtogroup IfxLld_Dsadc_Std_Enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    75   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    76  /** \brief Comb Filter (auxiliary) shift control\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    77   * Definition in Ifx_DSADC.FCFGA.B.AFSC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    78   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    79  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    80  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    81      IfxDsadc_AuxCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    82      IfxDsadc_AuxCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    83      IfxDsadc_AuxCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    84      IfxDsadc_AuxCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    85  } IfxDsadc_AuxCombFilterShift;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    86  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    87  /** \brief Comb Filter (auxiliary) configuration/type\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    88   * Definition in Ifx_DSADC.FCFGA.B.CFAC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    89   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    90  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    91  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    92      IfxDsadc_AuxCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    93      IfxDsadc_AuxCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    94      IfxDsadc_AuxCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    95      IfxDsadc_AuxCombFilterType_combF = 3   /**< \brief CICF */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    96  } IfxDsadc_AuxCombFilterType;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    97  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    98  /** \brief Service request generation (auxiliary)\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    99   * Definition in Ifx_DSADC.FCFGA.B.ESEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   100   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   101  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   102  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   103      IfxDsadc_AuxEvent_everyNewResult  = 0, /**< \brief Always, for each new result value */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   104      IfxDsadc_AuxEvent_insideBoundary  = 1, /**< \brief If result is inside the boundary band */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   105      IfxDsadc_AuxEvent_outsideBoundary = 2  /**< \brief If result is outside the boundary band */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   106  } IfxDsadc_AuxEvent;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   107  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   108  /** \brief Service request generation (auxiliary)\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   109   * Definition in Ifx_DSADC.FCFGA.B.EGT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   110   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   111  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   112  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   113      IfxDsadc_AuxGate_definedByESEL       = 0, /**< \brief Separate: generate events according to ESEL */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   114      IfxDsadc_AuxGate_coupledToIntegrator = 1  /**< \brief Coupled: generate events only when the integrator is enabled and after the discard phase defined by bitfield NVALDIS */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   115  } IfxDsadc_AuxGate;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   116  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   117  /** \brief Service request generation (auxiliary)\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   118   * Definition in Ifx_DSADC.FCFGA.B.SRGA
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   119   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   120  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   121  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   122      IfxDsadc_AuxServiceRequest_never     = 0,  /**< \brief Never, service requests disabled */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   123      IfxDsadc_AuxServiceRequest_auxFilter = 1,  /**< \brief Auxiliary filter: As selected by bitfield ESEL (\ref IfxDsadc_AuxEvent) */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   124      IfxDsadc_AuxServiceRequest_altSource = 2   /**< \brief Alternate source: Capturing of a sign delay value to register CGSYNCx (x = 0 - 5) */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   125  } IfxDsadc_AuxServiceRequest;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   126  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   127  /** \brief Carrier generation mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   128   * Definition in Ifx_DSADC.CGCFG.B.CGMOD
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   129   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   130  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   131  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   132      IfxDsadc_CarrierWaveformMode_stopped  = 0,  /**< \brief Carrier Generator stopped */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   133      IfxDsadc_CarrierWaveformMode_square   = 1,  /**< \brief Carrier Generator generates square wave */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   134      IfxDsadc_CarrierWaveformMode_triangle = 2,  /**< \brief Carrier Generator generates triangle wave */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   135      IfxDsadc_CarrierWaveformMode_sine     = 3   /**< \brief Carrier Generator generates sine wave */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   136  } IfxDsadc_CarrierWaveformMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   137  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   138  /** \brief Specifies the channel Index
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   139   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   140  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   141  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   142      IfxDsadc_ChannelId_0 = 0,  /**< \brief Specifies the channel Index 0 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   143      IfxDsadc_ChannelId_2 = 2,  /**< \brief Specifies the channel Index 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   144      IfxDsadc_ChannelId_3 = 3   /**< \brief Specifies the channel Index 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   145  } IfxDsadc_ChannelId;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   146  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   147  /** \brief Modulator common mode voltage selection\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   148   * Definition in Ifx_DSADC.MODCFGx.B.CMVS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   149   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   150  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   151  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   152      IfxDsadc_CommonModeVoltage_a = 0,  /**< \brief VCM = VAREF / 3.03 (1.65 V for VAREF = 5.0 V), recommended for VDDM = 3.3 V1.65V */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   153      IfxDsadc_CommonModeVoltage_b = 1,  /**< \brief VCM = VAREF / 2.27 (2.2 V for VAREF = 5.0 V), recommended for low distortion of AC-coupled signals */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   154      IfxDsadc_CommonModeVoltage_c = 2   /**< \brief VCM = VAREF / 2.0 (2.5 V for VAREF = 5.0 V), recommended for DC-coupled signals */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   155  } IfxDsadc_CommonModeVoltage;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   156  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   157  /** \brief FIR data shift control\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   158   * Selects the displacement caused by the data shifter at the FIR filter output\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   159   * Definition in Ifx_DSADC.FCFGM.B.DSH
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   160   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   161  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   162  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   163      IfxDsadc_FirDataShift_noShift  = 0,  /**< \brief no shift, use full range */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   164      IfxDsadc_FirDataShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   165      IfxDsadc_FirDataShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   166      IfxDsadc_FirDataShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   167  } IfxDsadc_FirDataShift;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   168  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   169  /** \brief FIR shift control\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   170   * Selects the displacement caused by the data shifter inbetween the FIR filter blocks.\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   171   * Definition in Ifx_DSADC.FCFGM.B.FSH
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   172   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   173  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   174  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   175      IfxDsadc_FirInternalShift_noShift  = 0, /**< \brief no shift, use full range */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   176      IfxDsadc_FirInternalShift_shiftBy1 = 1  /**< \brief Shift by 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   177  } IfxDsadc_FirInternalShift;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   178  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   179  /** \brief Modulator configuration of positive/negative input line\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   180   * Definition in Ifx_DSADC.MODCFGx.B.INCFGP and Ifx_DSADC.MODCFGx.B.INCFGN
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   181   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   182  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   183  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   184      IfxDsadc_InputConfig_inputPin          = 0,  /**< \brief Modulator input connected to external pin */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   185      IfxDsadc_InputConfig_supplyVoltage     = 1,  /**< \brief Modulator input connected to supply voltage V_ddm */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   186      IfxDsadc_InputConfig_commonModeVoltage = 2,  /**< \brief Modulator input connected to common mode voltage V_cm */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   187      IfxDsadc_InputConfig_referenceGround   = 3   /**< \brief Modulator input connected to reference ground V_ref */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   188  } IfxDsadc_InputConfig;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   189  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   190  /** \brief Demodulator input data source selection\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   191   * Definition in Ifx_DSADC.DICFG.B.DSRC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   192   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   193  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   194  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   195      IfxDsadc_InputDataSource_onChipStandAlone = 0,  /**< \brief On-chip modulator, standalone (3rd order) */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   196      IfxDsadc_InputDataSource_onChipCombined   = 1,  /**< \brief On-chip modulator, yield (2nd order) */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   197      IfxDsadc_InputDataSource_directInputA     = 2,  /**< \brief External, from input A, direct */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   198      IfxDsadc_InputDataSource_invertedInputA   = 3,  /**< \brief External, from input A, inverted */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   199      IfxDsadc_InputDataSource_directInputB     = 4,  /**< \brief External, from input B, direct */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   200      IfxDsadc_InputDataSource_invertedInputB   = 5   /**< \brief External, from input B, inverted */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   201  } IfxDsadc_InputDataSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   202  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   203  /** \brief Modulator gain select of analog input path\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   204   * Definition in Ifx_DSADC.MODCFGx.B.GAINSEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   205   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   206  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   207  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   208      IfxDsadc_InputGain_factor1  = 0, /**< \brief Input gain factor: 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   209      IfxDsadc_InputGain_factor2  = 1, /**< \brief Input gain factor: 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   210      IfxDsadc_InputGain_factor4  = 2, /**< \brief Input gain factor: 4 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   211      IfxDsadc_InputGain_factor8  = 3, /**< \brief Input gain factor: 8 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   212      IfxDsadc_InputGain_factor16 = 4  /**< \brief Input gain factor: 16 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   213  } IfxDsadc_InputGain;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   214  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   215  /** \brief Modulator input pin selection\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   216   * Definition in Ifx_DSADC.MODCFGx.B.INMUX
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   217   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   218  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   219  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   220      IfxDsadc_InputPin_a = 0,  /**< \brief Pin A connected to modulator input */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   221      IfxDsadc_InputPin_b = 1,  /**< \brief Pin B connected to modulator input */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   222      IfxDsadc_InputPin_c = 2,  /**< \brief Pin C connected to modulator input */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   223      IfxDsadc_InputPin_d = 3   /**< \brief Pin D connected to modulator input */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   224  } IfxDsadc_InputPin;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   225  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   226  /** \brief Integrator window size\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   227   * Definition in Ifx_DSADC.IWCTR.B.IWS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   228   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   229  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   230  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   231      IfxDsadc_IntegrationWindowSize_internalControl = 0,  /**< \brief Internal control: stop integrator after REPVAL+1 integration cycles */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   232      IfxDsadc_IntegrationWindowSize_externalControl = 1   /**< \brief External control: stop integrator when bit INTEN becomes 0 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   233  } IfxDsadc_IntegrationWindowSize;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   234  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   235  /** \brief Integrator trigger mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   236   * NOTE: switch-first to bypassed before using other mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   237   * Definition in Ifx_DSADC.DICFG.B.ITRMODE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   238   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   239  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   240  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   241      IfxDsadc_IntegratorTrigger_bypassed     = 0, /**< \brief No integration trigger, integrator bypassed */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   242      IfxDsadc_IntegratorTrigger_fallingEdge  = 1, /**< \brief Trigger event upon a falling edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   243      IfxDsadc_IntegratorTrigger_risingEdge   = 2, /**< \brief Trigger event upon a rising edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   244      IfxDsadc_IntegratorTrigger_alwaysActive = 3  /**< \brief No trigger, integrator active all the time */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   245  } IfxDsadc_IntegratorTrigger;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   246  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   247  /** \brief Low power supply voltage select\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   248   * Definition in Ifx_DSADC.GLOBCFG.B.LOSUP
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   249   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   250  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   251  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   252      IfxDsadc_LowPowerSupply_5V   = 0, /**< \brief Supply Voltage for Analog Circuitry set to 5V */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   253      IfxDsadc_LowPowerSupply_3_3V = 1  /**< \brief Supply Voltage for Analog Circuitry set to 3.3V */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   254  } IfxDsadc_LowPowerSupply;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   255  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   256  /** \brief Comb Filter (Main Chain) shift control\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   257   * Definition in Ifx_DSADC.FCFGC.B.MFSC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   258   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   259  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   260  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   261      IfxDsadc_MainCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   262      IfxDsadc_MainCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   263      IfxDsadc_MainCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   264      IfxDsadc_MainCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   265  } IfxDsadc_MainCombFilterShift;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   266  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   267  /** \brief Comb Filter (Main Chain) configuration/type\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   268   * Definition in Ifx_DSADC.FCFGC.B.CFMC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   269   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   270  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   271  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   272      IfxDsadc_MainCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   273      IfxDsadc_MainCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   274      IfxDsadc_MainCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   275      IfxDsadc_MainCombFilterType_combF = 3   /**< \brief CICF */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   276  } IfxDsadc_MainCombFilterType;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   277  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   278  /** \brief Service request generation (main chain)\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   279   * Definition in Ifx_DSADC.FCFGC.B.SRGM
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   280   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   281  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   282  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   283      IfxDsadc_MainServiceRequest_never          = 0,  /**< \brief Never, service requests disabled */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   284      IfxDsadc_MainServiceRequest_highGateSignal = 1,  /**< \brief While gate (selected trigger signal) is high */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   285      IfxDsadc_MainServiceRequest_lowGateSignal  = 2,  /**< \brief While gate (selected trigger signal) is low */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   286      IfxDsadc_MainServiceRequest_everyNewResult = 3   /**< \brief Always, for each new result value */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   287  } IfxDsadc_MainServiceRequest;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   288  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   289  /** \brief Modulator clock select\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   290   * Definition in Ifx_DSADC.GLOBCFG.B.MCSEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   291   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   292  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   293  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   294      IfxDsadc_ModulatorClock_off   = 0,  /**< \brief Internal clock off, no source selected */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   295      IfxDsadc_ModulatorClock_fDSD  = 1,  /**< \brief f_dsd clock selected */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   296      IfxDsadc_ModulatorClock_fERAY = 2,  /**< \brief f_eray clock selected */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   297      IfxDsadc_ModulatorClock_fOSC0 = 3   /**< \brief f_osc0 clock selected */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   298  } IfxDsadc_ModulatorClock;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   299  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   300  /** \brief Modulator divider factor for modulator clock\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   301   * Definition in Ifx_DSADC.MODCFGx.B.DIVM
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   302   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   303  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   304  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   305      IfxDsadc_ModulatorClockDivider_div2 = 0,      /**< \brief f_mod = f_clk / 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   306      IfxDsadc_ModulatorClockDivider_div4,          /**< \brief f_mod = f_clk / 4  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   307      IfxDsadc_ModulatorClockDivider_div6,          /**< \brief f_mod = f_clk / 6  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   308      IfxDsadc_ModulatorClockDivider_div8,          /**< \brief f_mod = f_clk / 8  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   309      IfxDsadc_ModulatorClockDivider_div10,         /**< \brief f_mod = f_clk / 10  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   310      IfxDsadc_ModulatorClockDivider_div12,         /**< \brief f_mod = f_clk / 12  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   311      IfxDsadc_ModulatorClockDivider_div14,         /**< \brief f_mod = f_clk / 14  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   312      IfxDsadc_ModulatorClockDivider_div16,         /**< \brief f_mod = f_clk / 16  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   313      IfxDsadc_ModulatorClockDivider_div18,         /**< \brief f_mod = f_clk / 18  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   314      IfxDsadc_ModulatorClockDivider_div20,         /**< \brief f_mod = f_clk / 20  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   315      IfxDsadc_ModulatorClockDivider_div22,         /**< \brief f_mod = f_clk / 22  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   316      IfxDsadc_ModulatorClockDivider_div24,         /**< \brief f_mod = f_clk / 24  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   317      IfxDsadc_ModulatorClockDivider_div26,         /**< \brief f_mod = f_clk / 26  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   318      IfxDsadc_ModulatorClockDivider_div28,         /**< \brief f_mod = f_clk / 28  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   319      IfxDsadc_ModulatorClockDivider_div30,         /**< \brief f_mod = f_clk / 30  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   320      IfxDsadc_ModulatorClockDivider_div32          /**< \brief f_mod = f_clk / 32  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   321  } IfxDsadc_ModulatorClockDivider;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   322  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   323  /** \brief Rectifier sign source\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   324   * Selects the sign signal that is to be delayed.\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   325   * Definition in Ifx_DSADC.RECT.B.SSRC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   326   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   327  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   328  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   329      IfxDsadc_RectifierSignSource_onChipGenerator = 0,  /**< \brief On-chip carrier generator */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   330      IfxDsadc_RectifierSignSource_nextChannel     = 1,  /**< \brief Sign of result of next channel */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   331      IfxDsadc_RectifierSignSource_externalA       = 2,  /**< \brief External sign signal A */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   332      IfxDsadc_RectifierSignSource_externalB       = 3   /**< \brief External sign signal B */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   333  } IfxDsadc_RectifierSignSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   334  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   335  /** \brief Demodulator sample clock source select\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   336   * Definition in Ifx_DSADC.DICFG.B.CSRC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   337   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   338  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   339  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   340      IfxDsadc_SampleClockSource_internal = 0,  /**< \brief Internal clock */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   341      IfxDsadc_SampleClockSource_inputA   = 1,  /**< \brief External clock, from Input A */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   342      IfxDsadc_SampleClockSource_inputB   = 2,  /**< \brief External clock, from Input B */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   343      IfxDsadc_SampleClockSource_inputC   = 3   /**< \brief External clock, from Input C */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   344  } IfxDsadc_SampleClockSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   345  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   346  /** \brief Demodulator data strobe generation mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   347   * Definition in Ifx_DSADC.DICFG.B.STROBE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   348   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   349  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   350  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   351      IfxDsadc_SampleStrobe_noDataStrobe            = 0, /**< \brief No data strobe */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   352      IfxDsadc_SampleStrobe_sampleOnRisingEdge      = 1, /**< \brief Direct clock, a sample trigger is generated at each rising clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   353      IfxDsadc_SampleStrobe_sampleOnFallingEdge     = 2, /**< \brief Direct clock, a sample trigger is generated at each falling clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   354      IfxDsadc_SampleStrobe_sampleOnBothEdges       = 3, /**< \brief Double data, a sample trigger is generated at each rising and falling clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   355      IfxDsadc_SampleStrobe_reserved                = 4, /**< \brief don't use */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   356      IfxDsadc_SampleStrobe_sampleOnTwoRisingEdges  = 5, /**< \brief Double clock, a sample trigger is generated at every 2nd rising clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   357      IfxDsadc_SampleStrobe_sampleOnTwoFallingEdges = 6  /**< \brief Double clock, a sample trigger is generated at every 2nd falling clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   358  } IfxDsadc_SampleStrobe;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   359  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   360  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   361   * Definition in Ifx_DSADC.CLC.B.EDIS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   362   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   363  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   364  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   365      IfxDsadc_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   366      IfxDsadc_SleepMode_disable = 1  /**< \brief disables sleep mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   367  } IfxDsadc_SleepMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   368  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   369  /** \brief Timestamp trigger mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   370   * Definition in Ifx_DSADC.DICFG.B.TSTRMODE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   371   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   372  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   373  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   374      IfxDsadc_TimestampTrigger_noTrigger   = 0,  /**< \brief No timestamp trigger */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   375      IfxDsadc_TimestampTrigger_fallingEdge = 1,  /**< \brief Trigger event upon a falling edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   376      IfxDsadc_TimestampTrigger_risingEdge  = 2,  /**< \brief Trigger event upon a rising edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   377      IfxDsadc_TimestampTrigger_eachEdge    = 3   /**< \brief Trigger event upon each edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   378  } IfxDsadc_TimestampTrigger;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   379  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   380  /** \brief Trigger select\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   381   * Definition in Ifx_DSADC.DICFG.B.TRSEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   382   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   383  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   384  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   385      IfxDsadc_TriggerInput_a = 0,  /**< \brief dsadc trig 0 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   386      IfxDsadc_TriggerInput_b = 1,  /**< \brief dsadc trig 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   387      IfxDsadc_TriggerInput_c = 2,  /**< \brief vadc trig 0 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   388      IfxDsadc_TriggerInput_d = 3,  /**< \brief vadc trig 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   389      IfxDsadc_TriggerInput_e = 4,  /**< \brief external pin e */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   390      IfxDsadc_TriggerInput_f = 5,  /**< \brief external pin f */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   391      IfxDsadc_TriggerInput_g = 6,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   392      IfxDsadc_TriggerInput_h = 7
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   393  } IfxDsadc_TriggerInput;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   394  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   395  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   397  /** \addtogroup IfxLld_Dsadc_Std_Operative
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   398   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   399  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   400  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   402  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   403  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   404  /** \brief Sets the sensitivity of the module to sleep signal
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   405   * \param dsadc pointer to DSADC registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   406   * \param mode mode selection (enable/disable)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   407   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   408   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   409  IFX_INLINE void IfxDsadc_setSleepMode(Ifx_DSADC *dsadc, IfxDsadc_SleepMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   410  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   411  /** \brief Enables the conversion of multiple channels
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   412   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   413   * \param modulatorMask the modulator which should be running (bitwise selection)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   414   * \param channelMask the channels which should be scanned (bitwise selection)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   415   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   416   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   417   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   418   *     // enable the conversion of all 6 DSADC channels
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   419   *     IfxDsadc_startScan(&MODULE_DSADC, 0x3FU, 0x3FU);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   420   *     // results are now available in IFXDSADC(ds).CH[x].RESM.B.RESULT (x=0..5)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   421   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   422   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   423   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   424  IFX_INLINE void IfxDsadc_startScan(Ifx_DSADC *dsadc, uint32 modulatorMask, uint32 channelMask);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   425  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   426  /** \brief Disables the conversion of multiple channels
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   427   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   428   * \param modulatorMask the modulator which should be disabled (bitwise selection)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   429   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   430   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   431   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   432   *     // disable the modulators of all 6 DSADC channels
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   433   *     IfxDsadc_stopScan(&MODULE_DSADC, 0x3FU);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   434   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   435   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   436   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   437  IFX_INLINE void IfxDsadc_stopScan(Ifx_DSADC *dsadc, uint32 modulatorMask);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   438  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   439  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   440  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   441  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   442  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   443  /** \brief resets the DSADC kernel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   444   * \param dsadc pointer to DSADC registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   445   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   446   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   447  IFX_EXTERN void IfxDsadc_resetModule(Ifx_DSADC *dsadc);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   448  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   449  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   450  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   451  /** \addtogroup IfxLld_Dsadc_Std_Support
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   452   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   453  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   454  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   455  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   456  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   457  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   458  /** \brief Get result from the auxiliary chain
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   459   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   460   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   461   * \return result from the auxiliary chain
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   462   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   463  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   464  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   465  /** \brief Get the main comb decimation factor
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   466   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   467   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   468   * \return the main comb decimation factor
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   469   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   470  IFX_INLINE uint16 IfxDsadc_getMainCombDecimation(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   471  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   472  /** \brief Get result from the main chain
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   473   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   474   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   475   * \return result from the main chain
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   476   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   477  IFX_INLINE sint16 IfxDsadc_getMainResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   478  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   479  /** \brief Return TRUE if DSADC module is enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   480   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   481   * \return TRUE if DSADC module is enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   482   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   483  IFX_INLINE boolean IfxDsadc_isModuleEnabled(Ifx_DSADC *dsadc);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   484  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   485  /** \brief Set the carrier waveform mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   486   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   487   * \param waveformMode the waveform mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   488   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   489   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   490  IFX_INLINE void IfxDsadc_setCarrierMode(Ifx_DSADC *dsadc, IfxDsadc_CarrierWaveformMode waveformMode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   491  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   492  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   493  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   494  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   495  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   496  /** \brief Get the sample frequency of the integrator output in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   497   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   498   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   499   * \return frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   500   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   501  IFX_EXTERN float32 IfxDsadc_getIntegratorOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   502  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   503  /** \brief Get the sample frequency of the main COMB filter output in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   504   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   505   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   506   * \return frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   507   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   508  IFX_EXTERN float32 IfxDsadc_getMainCombOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   509  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   510  /** \brief Estimate the group delay of main-chain filters in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   511   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   512   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   513   * \return delay in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   514   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   515  IFX_EXTERN float32 IfxDsadc_getMainGroupDelay(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   516  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   517  /** \brief Get the modulator clock frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   518   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   519   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   520   * \return frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   521   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   522  IFX_EXTERN float32 IfxDsadc_getModulatorClockFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   523  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   524  /** \brief Get the input frequency of DSADC in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   525   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   526   * \return frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   527   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   528  IFX_EXTERN float32 IfxDsadc_getModulatorInputClockFreq(Ifx_DSADC *dsadc);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   529  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   530  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   531  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   532  /** \addtogroup IfxLld_Dsadc_Std_Interrupt
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   533   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   534  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   535  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   536  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   537  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   538  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   539  /** \brief Address/pointer to the interrupt source register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   540   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   541   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   542   * \return Address/pointer to the interrupt source register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   543   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   544  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getAuxSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   545  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   546  /** \brief Get the interrupt source register for a Main event
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   547   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   548   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   549   * \return Address/pointer to the interrupt source register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   550   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   551  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getMainSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   552  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   553  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   554  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   555  /** \addtogroup IfxLld_Dsadc_Std_IO
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   556   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   557  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   558  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   559  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   560  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   561  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   562  /** \brief Initializes a CGPWM output
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   563   * \param cgPwm the CGPWM Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   564   * \param pinMode the pin output mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   565   * \param padDriver the pad driver mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   566   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   567   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   568  IFX_INLINE void IfxDsadc_initCgPwmPin(const IfxDsadc_Cgpwm_Out *cgPwm, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   569  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   570  /** \brief Initializes a CIN input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   571   * \param cIn the CIN Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   572   * \param cInMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   573   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   574   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   575   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   576  IFX_INLINE void IfxDsadc_initCinPin(const IfxDsadc_Cin_In *cIn, IfxPort_InputMode cInMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   577  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   578  /** \brief Initializes a COUT output
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   579   * \param cout the COUT Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   580   * \param pinMode the pin output mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   581   * \param padDriver the pad driver mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   582   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   583   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   584  IFX_INLINE void IfxDsadc_initCoutPin(const IfxDsadc_Cout_Out *cout, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   585  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   586  /** \brief Initializes a DIN input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   587   * \param dIn the DIN Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   588   * \param dInMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   589   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   590   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   591   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   592  IFX_INLINE void IfxDsadc_initDinPin(const IfxDsadc_Din_In *dIn, IfxPort_InputMode dInMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   593  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   594  /** \brief Initializes a DS input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   595   * \param dsn the DSN Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   596   * \param pinMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   597   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   598   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   599   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   600  IFX_INLINE void IfxDsadc_initDsnPin(const IfxDsadc_Dsn_In *dsn, IfxPort_InputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   601  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   602  /** \brief Initializes a DS input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   603   * \param dsp the DSP Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   604   * \param pinMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   605   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   606   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   607   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   608  IFX_INLINE void IfxDsadc_initDspPin(const IfxDsadc_Dsp_In *dsp, IfxPort_InputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   609  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   610  /** \brief Initializes a ITR input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   611   * \param itr the ITR Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   612   * \param itrMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   613   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   614   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   615   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   616  IFX_INLINE void IfxDsadc_initItrPin(const IfxDsadc_Itr_In *itr, IfxPort_InputMode itrMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   617  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   618  /** \brief Initializes a SG input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   619   * \param sg the SG Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   620   * \param pinMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   621   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   622   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   623   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   624  IFX_INLINE void IfxDsadc_initSgPin(const IfxDsadc_Sg_In *sg, IfxPort_InputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   625  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   626  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   627  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   628  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   629  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   630  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   631  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   632  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   633  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   634      return (sint16)(dsadc->CH[channel].RESA.B.RESULT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   635  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   636  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   637  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   638  IFX_INLINE uint16 IfxDsadc_getMainCombDecimation(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   639  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   640      return (uint16)(1U + dsadc->CH[channel].FCFGC.B.CFMDF);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   641  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   642  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   643  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   644  IFX_INLINE sint16 IfxDsadc_getMainResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   645  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   646      return (sint16)(dsadc->CH[channel].RESM.B.RESULT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   647  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   648  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   649  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   650  IFX_INLINE void IfxDsadc_initCgPwmPin(const IfxDsadc_Cgpwm_Out *cgPwm, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   651  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   652      IfxPort_setPinModeOutput(cgPwm->pin.port, cgPwm->pin.pinIndex, pinMode, cgPwm->select);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   653      IfxPort_setPinPadDriver(cgPwm->pin.port, cgPwm->pin.pinIndex, padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   654  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   655  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   656  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   657  IFX_INLINE void IfxDsadc_initCinPin(const IfxDsadc_Cin_In *cIn, IfxPort_InputMode cInMode, IfxPort_PadDriver padDriver)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   658  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   659      if (cIn->pin.port != NULL_PTR)
	ld.w	d15,[a15]8
.L516:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   659      if (cIn->pin.port != NULL_PTR)      (inlined)
	jeq	d15,#0,.L25
.L517:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   660      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   661          IfxPort_setPinModeInput(cIn->pin.port, cIn->pin.pinIndex, cInMode);
	ld.a	a4,[a15]8
.L518:
	ld.bu	d4,[a15]12
.L265:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    45   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    46   * \defgroup IfxLld_Port_Std_Enum Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    47   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    48   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    49   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    50   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    51   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    52   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    53   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    54   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    55  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    56  #ifndef IFXPORT_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    57  #define IFXPORT_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    58  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    59  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    60  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    61  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    62  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    63  #include "_Impl/IfxPort_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    64  #include "Scu/Std/IfxScuWdt.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    65  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    66  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    67  /*--------------------------------Enumerations--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    68  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    69  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    70  /** \addtogroup IfxLld_Port_Std_Enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    71   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    72  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    73   * HSCT module.declared in MODULE_PORTx.LPCRx
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    74   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    76  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    77      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    78      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    79  } IfxPort_ControlledBy;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    80  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    81  /** \brief Ifx_P output modification modes definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    82   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    83  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    84  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    85      IfxPort_InputMode_undefined    = -1,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    86      IfxPort_InputMode_noPullDevice = 0 << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    87          IfxPort_InputMode_pullDown = 1U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    88          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    89  } IfxPort_InputMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    90  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    91  /** \brief Ifx_P input / output mode definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    92   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    93   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    94   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    95  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    96  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    97      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    98      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    99      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   100      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   101      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   102      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   103      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   104      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   105      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   106      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   107      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   108      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   109      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   110      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   111      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   112      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   113      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   114      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   115      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   116  } IfxPort_Mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   117  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   118  /** \brief Pin output alternate index
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   119   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   120  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   121  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   122      IfxPort_OutputIdx_general  = 0x10U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   123          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   124          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   125          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   126          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   127          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   128          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   129          IfxPort_OutputIdx_alt7 = 0x17U << 3
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   130  } IfxPort_OutputIdx;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   131  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   132  /** \brief Pin output mode definition
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   133   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   134  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   135  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   136      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   137          IfxPort_OutputMode_openDrain = 0x18U << 3
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_OutputMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   139  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   140  /** \brief Pad driver mode definition (strength and slew rate).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   141   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   142   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   143   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   144  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   145  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   146      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   147      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   148      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   149      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   150      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   151      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   152      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   153      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   154      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   155      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   156      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   157      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_PadDriver;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   159  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   160  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   161   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   162  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   163  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   164      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   165      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   166  } IfxPort_PadSupply;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   167  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   168  /** \brief Ifx_P output modification modes definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   169   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   170   * \see Ifx_P.OMR, IfxPort_setPinState()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   171   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   172  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   173  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   174      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   175      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   176      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   177      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   178  } IfxPort_State;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   179  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   180  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   181  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   182  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   183  /*-----------------------------Data Structures--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   184  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   185  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   186  /** \addtogroup IfxLld_Port_Std_DataStructures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   187   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   188  /** \brief Defines a pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   189   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   190  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   191  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   192      Ifx_P *port;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   193      uint8  pinIndex;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   194  } IfxPort_Pin;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   195  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   196  /** \brief To configure pins
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   197   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   198  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   199  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   200      Ifx_P            *port;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   201      uint8             pinIndex;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   202      IfxPort_OutputIdx mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   203      IfxPort_PadDriver padDriver;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   204  } IfxPort_Pin_Config;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   205  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   206  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   207  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   208  /** \addtogroup IfxLld_Port_Std_SinglePin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   209   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   210  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   211  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   212  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   213  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   214  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   215  /** \brief Return the port state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   216   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   217   * \param pinIndex Specifies the pin for which the state should be returned.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   218   * \return Returns TRUE the pin is high; FALSE the pin is low
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   219   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   220   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   221   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   222   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   223   *      // ...
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   224   *    }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   225   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   226   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   227   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   228  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   229  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   230  /** \brief Set the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   231   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   232   * \param pinIndex Specifies the pin to be set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   233   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   234   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   235   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   236   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   237   * IfxPort_setPinHigh(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   238   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   239   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   240   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   241   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   242   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   243  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   244  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   245  /** \brief Reset the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   246   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   247   * \param pinIndex Specifies the pin to be reset.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   248   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   249   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   250   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   251   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   252   * IfxPort_setPinLow(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   253   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   254   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   255   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   256   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   257   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   258  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   259  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   260  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   261   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   262   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   263   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   264   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   265   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   266   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   267   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   268   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   269   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   270   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   271   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   272  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   273  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   274  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   275   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   276   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   277   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   278   * \param index Specifies the alternate (or general purpose) output channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   279   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   280   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   281   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   282   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   283   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   284   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   285   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   286   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   287  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   288  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   289  /** \brief Set / Resets / Toggle the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   290   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   291   * \param pinIndex Specifies the pin to modify.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   292   * \param action Specifies the action: set, reset, toggle.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   293   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   294   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   295   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   296   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   297   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   298   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   299   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   300   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   301   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   302   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   303  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   304  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   305  /** \brief Toggle the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin to be toggled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   308   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   309   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   311   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   312   * IfxPort_togglePin(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   313   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   314   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   315   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   316   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   317   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   318  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   319  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   320  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   321  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   322  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   323  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   324  /** \brief Disable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   325   * This function disables the emergency stop function. A check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   326   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   327   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   328   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   329   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   330   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   331   * /code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   332   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   333   *     {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   334   *         // failed to disable emergency stop for P33.0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   335   *     }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   336   * /endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   337   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   338   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   339   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   340   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   341  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   342  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   343  /** \brief Enable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   344   * This function enables the emergency stop function. A check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   345   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   346   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   347   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   348   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   350   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   351   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   352   *       // failed to enable emergency stop for P33.0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   353   *     }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   354   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   355   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   356   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   357   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   358   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   359  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   360  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   361  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   362   * Also Configures the P40/P41 Port for digital functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   363   * which bydefault support analog functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   364   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   365   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   366   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   367   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   368   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   369   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   370   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   371   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   372   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   373   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   374   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   375  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   376  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   377  /** \brief Configure the pad driver mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   378   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   379   * \param pinIndex Specifies the pin for which the mode will be set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   380   * \param padDriver Specifies the driver mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   381   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   382   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   383   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   384   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   385   * // enable strong 3.3V driver
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   386   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   387   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   388   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   389   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   390  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   391  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   392  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   393  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   394  /** \addtogroup IfxLld_Port_Std_PortGroup
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   395   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   397  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   398  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   399  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   400  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   401  /** \brief Return the port group state
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   402   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   403   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   404   * \param mask selects the pins which should be read (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   405   * \return Returns the selected pin values
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   406   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   407   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   408   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   409   * // read the current value of P33[7:0]
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   410   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   411   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   412   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   413   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   414  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   415  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   416  /** \brief Set the port group state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   417   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   418   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   419   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   420   * \param data specifies the value which should be set
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   421   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   422   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   423   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   424   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   425   * // configure P33.[7:0] as GPIO outputs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   426   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   427   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   428   * // set initial value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   429   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   430   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   431   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   432   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   433  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   434  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   435  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   436  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   437  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   438  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   439  /** \brief Returns the module address of the selected Port module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   440   * \param port Pointer to PORT module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   441   * \return PORT module register address
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   442   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   443  IFX_EXTERN Ifx_P *IfxPort_getAddress(IfxPort_Index port);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   444  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   445  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   446   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   447   * \return port index of IfxModule_IndexMap. return -1 in case of unknown port index.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   448   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   449  IFX_EXTERN IfxPort_Index IfxPort_getIndex(Ifx_P *port);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   450  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   451  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   452   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   453   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   454   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   455   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   456   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   457   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   458   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   459   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   460   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   461   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   462   *  \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   463   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   464   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   465  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   466  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   467  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   468   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   469   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   470   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   471   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   472   * \param index Specifies the alternate (or general purpose) output channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   473   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   474   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   475   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   476   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   477   * // configure P33.[7:0] as GPIO outputs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   478   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   479   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   480   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   481   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   482  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   483  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   484  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   485   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   486   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   487   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   488   * \param padDriver Specifies the pad driver strength.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   489   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   490   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   491   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   492   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   493   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   494   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   495   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   496   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   497   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   498  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   499  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   500  /** \brief set LVDSH mode (configured for Port21)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   501   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   502   * \param pinIndex specifies pin  to be modified
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   503   * \param mode specifes the mode of pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   504   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   505   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   506   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   508  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   509  /** \brief set LVDSM mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   510   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   511   * \param pinIndex specifies pin to be modified
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   512   * \param lvdsPadDriver select speed grade of LVDS Pad
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   513   * \param padSupply select the PAD supply (5/3.3V)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   514   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   515   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   516  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   517  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   518  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   519  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   521  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   523  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   524  /** \brief Disable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   525   * This function disables the emergency stop function. No check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   526   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   527   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   528   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   529   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   530   * \see IfxPort_disableEmergencyStop()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   531   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   532   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   533  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   534  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   535  /** \brief Enable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   536   * This function enables the emergency stop function. No check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   537   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   538   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   539   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   540   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   541   * \see IfxPort_enableEmergencyStop()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   542   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   543   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   544  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   545  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   546  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   547  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   548  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   549  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   550  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   551  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   552      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   553  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   554  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   555  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   556  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   557  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   558      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   559  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   560  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   561  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   562  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   563  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   564      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   565  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   566  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   567  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   568  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   569  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   570      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   571  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   572  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   573  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   574  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   575  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   576      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   577  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   578  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   579  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   580  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   581  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   582      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
	extr.u	d5,d0,#0,#8
	call	IfxPort_setPinMode
.L266:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   662   void IfxDsadc_initCoutPin(const IfxDsadc_Cout_Out *cout, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver)
	ld.a	a4,[a15]8
.L519:
	ld.bu	d4,[a15]12
.L520:
	mov	d5,d8
	call	IfxPort_setPinPadDriver

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   659      if (cIn->pin.port != NULL_PTR)      (inlined)
.L25:
.L24:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   238       IfxDsadc_initDinPin(din, pins->dinMode, pins->pinDriver);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   239          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   240  
	ld.a	a15,[a12]8
.L406:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   241          const IfxDsadc_Itr_In *itr = pins->itr;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   242  
	jz.a	a15,.L26
.L521:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   243          if (itr != NULL_PTR)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   244          {
	ld.b	d0,[a12]12
.L522:
	ld.bu	d8,[a12]37
.L270:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     2   * \file IfxDsadc.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     3   * \brief DSADC  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     4   * \ingroup IfxLld_Dsadc
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     7   * \copyright Copyright (c) 2017 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    44   * \defgroup IfxLld_Dsadc_Std_Enum Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    45   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    46   * \defgroup IfxLld_Dsadc_Std_Operative Operative Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    47   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    48   * \defgroup IfxLld_Dsadc_Std_Support Support Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    49   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    50   * \defgroup IfxLld_Dsadc_Std_Interrupt Interrupt Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    51   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    52   * \defgroup IfxLld_Dsadc_Std_IO IO Pin Configuration Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    53   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    54   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    55  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    56  #ifndef IFXDSADC_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    57  #define IFXDSADC_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    58  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    59  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    60  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    61  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    62  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    63  #include "_Impl/IfxDsadc_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    64  #include "Src/Std/IfxSrc.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    65  #include "Scu/Std/IfxScuCcu.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    66  #include "_PinMap/IfxDsadc_PinMap.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    67  #include "IfxDsadc_reg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    68  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    69  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    70  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    71  /*--------------------------------Enumerations--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    72  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    73  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    74  /** \addtogroup IfxLld_Dsadc_Std_Enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    75   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    76  /** \brief Comb Filter (auxiliary) shift control\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    77   * Definition in Ifx_DSADC.FCFGA.B.AFSC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    78   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    79  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    80  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    81      IfxDsadc_AuxCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    82      IfxDsadc_AuxCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    83      IfxDsadc_AuxCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    84      IfxDsadc_AuxCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    85  } IfxDsadc_AuxCombFilterShift;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    86  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    87  /** \brief Comb Filter (auxiliary) configuration/type\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    88   * Definition in Ifx_DSADC.FCFGA.B.CFAC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    89   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    90  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    91  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    92      IfxDsadc_AuxCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    93      IfxDsadc_AuxCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    94      IfxDsadc_AuxCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    95      IfxDsadc_AuxCombFilterType_combF = 3   /**< \brief CICF */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    96  } IfxDsadc_AuxCombFilterType;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    97  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    98  /** \brief Service request generation (auxiliary)\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    99   * Definition in Ifx_DSADC.FCFGA.B.ESEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   100   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   101  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   102  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   103      IfxDsadc_AuxEvent_everyNewResult  = 0, /**< \brief Always, for each new result value */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   104      IfxDsadc_AuxEvent_insideBoundary  = 1, /**< \brief If result is inside the boundary band */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   105      IfxDsadc_AuxEvent_outsideBoundary = 2  /**< \brief If result is outside the boundary band */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   106  } IfxDsadc_AuxEvent;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   107  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   108  /** \brief Service request generation (auxiliary)\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   109   * Definition in Ifx_DSADC.FCFGA.B.EGT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   110   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   111  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   112  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   113      IfxDsadc_AuxGate_definedByESEL       = 0, /**< \brief Separate: generate events according to ESEL */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   114      IfxDsadc_AuxGate_coupledToIntegrator = 1  /**< \brief Coupled: generate events only when the integrator is enabled and after the discard phase defined by bitfield NVALDIS */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   115  } IfxDsadc_AuxGate;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   116  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   117  /** \brief Service request generation (auxiliary)\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   118   * Definition in Ifx_DSADC.FCFGA.B.SRGA
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   119   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   120  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   121  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   122      IfxDsadc_AuxServiceRequest_never     = 0,  /**< \brief Never, service requests disabled */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   123      IfxDsadc_AuxServiceRequest_auxFilter = 1,  /**< \brief Auxiliary filter: As selected by bitfield ESEL (\ref IfxDsadc_AuxEvent) */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   124      IfxDsadc_AuxServiceRequest_altSource = 2   /**< \brief Alternate source: Capturing of a sign delay value to register CGSYNCx (x = 0 - 5) */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   125  } IfxDsadc_AuxServiceRequest;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   126  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   127  /** \brief Carrier generation mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   128   * Definition in Ifx_DSADC.CGCFG.B.CGMOD
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   129   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   130  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   131  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   132      IfxDsadc_CarrierWaveformMode_stopped  = 0,  /**< \brief Carrier Generator stopped */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   133      IfxDsadc_CarrierWaveformMode_square   = 1,  /**< \brief Carrier Generator generates square wave */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   134      IfxDsadc_CarrierWaveformMode_triangle = 2,  /**< \brief Carrier Generator generates triangle wave */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   135      IfxDsadc_CarrierWaveformMode_sine     = 3   /**< \brief Carrier Generator generates sine wave */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   136  } IfxDsadc_CarrierWaveformMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   137  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   138  /** \brief Specifies the channel Index
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   139   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   140  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   141  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   142      IfxDsadc_ChannelId_0 = 0,  /**< \brief Specifies the channel Index 0 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   143      IfxDsadc_ChannelId_2 = 2,  /**< \brief Specifies the channel Index 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   144      IfxDsadc_ChannelId_3 = 3   /**< \brief Specifies the channel Index 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   145  } IfxDsadc_ChannelId;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   146  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   147  /** \brief Modulator common mode voltage selection\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   148   * Definition in Ifx_DSADC.MODCFGx.B.CMVS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   149   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   150  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   151  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   152      IfxDsadc_CommonModeVoltage_a = 0,  /**< \brief VCM = VAREF / 3.03 (1.65 V for VAREF = 5.0 V), recommended for VDDM = 3.3 V1.65V */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   153      IfxDsadc_CommonModeVoltage_b = 1,  /**< \brief VCM = VAREF / 2.27 (2.2 V for VAREF = 5.0 V), recommended for low distortion of AC-coupled signals */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   154      IfxDsadc_CommonModeVoltage_c = 2   /**< \brief VCM = VAREF / 2.0 (2.5 V for VAREF = 5.0 V), recommended for DC-coupled signals */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   155  } IfxDsadc_CommonModeVoltage;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   156  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   157  /** \brief FIR data shift control\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   158   * Selects the displacement caused by the data shifter at the FIR filter output\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   159   * Definition in Ifx_DSADC.FCFGM.B.DSH
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   160   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   161  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   162  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   163      IfxDsadc_FirDataShift_noShift  = 0,  /**< \brief no shift, use full range */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   164      IfxDsadc_FirDataShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   165      IfxDsadc_FirDataShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   166      IfxDsadc_FirDataShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   167  } IfxDsadc_FirDataShift;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   168  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   169  /** \brief FIR shift control\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   170   * Selects the displacement caused by the data shifter inbetween the FIR filter blocks.\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   171   * Definition in Ifx_DSADC.FCFGM.B.FSH
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   172   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   173  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   174  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   175      IfxDsadc_FirInternalShift_noShift  = 0, /**< \brief no shift, use full range */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   176      IfxDsadc_FirInternalShift_shiftBy1 = 1  /**< \brief Shift by 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   177  } IfxDsadc_FirInternalShift;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   178  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   179  /** \brief Modulator configuration of positive/negative input line\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   180   * Definition in Ifx_DSADC.MODCFGx.B.INCFGP and Ifx_DSADC.MODCFGx.B.INCFGN
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   181   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   182  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   183  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   184      IfxDsadc_InputConfig_inputPin          = 0,  /**< \brief Modulator input connected to external pin */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   185      IfxDsadc_InputConfig_supplyVoltage     = 1,  /**< \brief Modulator input connected to supply voltage V_ddm */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   186      IfxDsadc_InputConfig_commonModeVoltage = 2,  /**< \brief Modulator input connected to common mode voltage V_cm */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   187      IfxDsadc_InputConfig_referenceGround   = 3   /**< \brief Modulator input connected to reference ground V_ref */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   188  } IfxDsadc_InputConfig;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   189  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   190  /** \brief Demodulator input data source selection\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   191   * Definition in Ifx_DSADC.DICFG.B.DSRC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   192   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   193  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   194  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   195      IfxDsadc_InputDataSource_onChipStandAlone = 0,  /**< \brief On-chip modulator, standalone (3rd order) */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   196      IfxDsadc_InputDataSource_onChipCombined   = 1,  /**< \brief On-chip modulator, yield (2nd order) */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   197      IfxDsadc_InputDataSource_directInputA     = 2,  /**< \brief External, from input A, direct */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   198      IfxDsadc_InputDataSource_invertedInputA   = 3,  /**< \brief External, from input A, inverted */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   199      IfxDsadc_InputDataSource_directInputB     = 4,  /**< \brief External, from input B, direct */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   200      IfxDsadc_InputDataSource_invertedInputB   = 5   /**< \brief External, from input B, inverted */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   201  } IfxDsadc_InputDataSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   202  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   203  /** \brief Modulator gain select of analog input path\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   204   * Definition in Ifx_DSADC.MODCFGx.B.GAINSEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   205   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   206  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   207  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   208      IfxDsadc_InputGain_factor1  = 0, /**< \brief Input gain factor: 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   209      IfxDsadc_InputGain_factor2  = 1, /**< \brief Input gain factor: 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   210      IfxDsadc_InputGain_factor4  = 2, /**< \brief Input gain factor: 4 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   211      IfxDsadc_InputGain_factor8  = 3, /**< \brief Input gain factor: 8 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   212      IfxDsadc_InputGain_factor16 = 4  /**< \brief Input gain factor: 16 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   213  } IfxDsadc_InputGain;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   214  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   215  /** \brief Modulator input pin selection\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   216   * Definition in Ifx_DSADC.MODCFGx.B.INMUX
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   217   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   218  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   219  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   220      IfxDsadc_InputPin_a = 0,  /**< \brief Pin A connected to modulator input */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   221      IfxDsadc_InputPin_b = 1,  /**< \brief Pin B connected to modulator input */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   222      IfxDsadc_InputPin_c = 2,  /**< \brief Pin C connected to modulator input */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   223      IfxDsadc_InputPin_d = 3   /**< \brief Pin D connected to modulator input */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   224  } IfxDsadc_InputPin;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   225  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   226  /** \brief Integrator window size\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   227   * Definition in Ifx_DSADC.IWCTR.B.IWS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   228   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   229  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   230  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   231      IfxDsadc_IntegrationWindowSize_internalControl = 0,  /**< \brief Internal control: stop integrator after REPVAL+1 integration cycles */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   232      IfxDsadc_IntegrationWindowSize_externalControl = 1   /**< \brief External control: stop integrator when bit INTEN becomes 0 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   233  } IfxDsadc_IntegrationWindowSize;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   234  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   235  /** \brief Integrator trigger mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   236   * NOTE: switch-first to bypassed before using other mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   237   * Definition in Ifx_DSADC.DICFG.B.ITRMODE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   238   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   239  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   240  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   241      IfxDsadc_IntegratorTrigger_bypassed     = 0, /**< \brief No integration trigger, integrator bypassed */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   242      IfxDsadc_IntegratorTrigger_fallingEdge  = 1, /**< \brief Trigger event upon a falling edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   243      IfxDsadc_IntegratorTrigger_risingEdge   = 2, /**< \brief Trigger event upon a rising edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   244      IfxDsadc_IntegratorTrigger_alwaysActive = 3  /**< \brief No trigger, integrator active all the time */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   245  } IfxDsadc_IntegratorTrigger;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   246  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   247  /** \brief Low power supply voltage select\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   248   * Definition in Ifx_DSADC.GLOBCFG.B.LOSUP
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   249   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   250  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   251  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   252      IfxDsadc_LowPowerSupply_5V   = 0, /**< \brief Supply Voltage for Analog Circuitry set to 5V */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   253      IfxDsadc_LowPowerSupply_3_3V = 1  /**< \brief Supply Voltage for Analog Circuitry set to 3.3V */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   254  } IfxDsadc_LowPowerSupply;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   255  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   256  /** \brief Comb Filter (Main Chain) shift control\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   257   * Definition in Ifx_DSADC.FCFGC.B.MFSC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   258   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   259  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   260  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   261      IfxDsadc_MainCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   262      IfxDsadc_MainCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   263      IfxDsadc_MainCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   264      IfxDsadc_MainCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   265  } IfxDsadc_MainCombFilterShift;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   266  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   267  /** \brief Comb Filter (Main Chain) configuration/type\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   268   * Definition in Ifx_DSADC.FCFGC.B.CFMC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   269   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   270  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   271  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   272      IfxDsadc_MainCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   273      IfxDsadc_MainCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   274      IfxDsadc_MainCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   275      IfxDsadc_MainCombFilterType_combF = 3   /**< \brief CICF */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   276  } IfxDsadc_MainCombFilterType;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   277  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   278  /** \brief Service request generation (main chain)\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   279   * Definition in Ifx_DSADC.FCFGC.B.SRGM
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   280   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   281  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   282  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   283      IfxDsadc_MainServiceRequest_never          = 0,  /**< \brief Never, service requests disabled */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   284      IfxDsadc_MainServiceRequest_highGateSignal = 1,  /**< \brief While gate (selected trigger signal) is high */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   285      IfxDsadc_MainServiceRequest_lowGateSignal  = 2,  /**< \brief While gate (selected trigger signal) is low */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   286      IfxDsadc_MainServiceRequest_everyNewResult = 3   /**< \brief Always, for each new result value */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   287  } IfxDsadc_MainServiceRequest;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   288  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   289  /** \brief Modulator clock select\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   290   * Definition in Ifx_DSADC.GLOBCFG.B.MCSEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   291   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   292  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   293  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   294      IfxDsadc_ModulatorClock_off   = 0,  /**< \brief Internal clock off, no source selected */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   295      IfxDsadc_ModulatorClock_fDSD  = 1,  /**< \brief f_dsd clock selected */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   296      IfxDsadc_ModulatorClock_fERAY = 2,  /**< \brief f_eray clock selected */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   297      IfxDsadc_ModulatorClock_fOSC0 = 3   /**< \brief f_osc0 clock selected */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   298  } IfxDsadc_ModulatorClock;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   299  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   300  /** \brief Modulator divider factor for modulator clock\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   301   * Definition in Ifx_DSADC.MODCFGx.B.DIVM
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   302   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   303  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   304  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   305      IfxDsadc_ModulatorClockDivider_div2 = 0,      /**< \brief f_mod = f_clk / 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   306      IfxDsadc_ModulatorClockDivider_div4,          /**< \brief f_mod = f_clk / 4  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   307      IfxDsadc_ModulatorClockDivider_div6,          /**< \brief f_mod = f_clk / 6  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   308      IfxDsadc_ModulatorClockDivider_div8,          /**< \brief f_mod = f_clk / 8  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   309      IfxDsadc_ModulatorClockDivider_div10,         /**< \brief f_mod = f_clk / 10  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   310      IfxDsadc_ModulatorClockDivider_div12,         /**< \brief f_mod = f_clk / 12  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   311      IfxDsadc_ModulatorClockDivider_div14,         /**< \brief f_mod = f_clk / 14  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   312      IfxDsadc_ModulatorClockDivider_div16,         /**< \brief f_mod = f_clk / 16  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   313      IfxDsadc_ModulatorClockDivider_div18,         /**< \brief f_mod = f_clk / 18  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   314      IfxDsadc_ModulatorClockDivider_div20,         /**< \brief f_mod = f_clk / 20  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   315      IfxDsadc_ModulatorClockDivider_div22,         /**< \brief f_mod = f_clk / 22  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   316      IfxDsadc_ModulatorClockDivider_div24,         /**< \brief f_mod = f_clk / 24  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   317      IfxDsadc_ModulatorClockDivider_div26,         /**< \brief f_mod = f_clk / 26  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   318      IfxDsadc_ModulatorClockDivider_div28,         /**< \brief f_mod = f_clk / 28  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   319      IfxDsadc_ModulatorClockDivider_div30,         /**< \brief f_mod = f_clk / 30  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   320      IfxDsadc_ModulatorClockDivider_div32          /**< \brief f_mod = f_clk / 32  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   321  } IfxDsadc_ModulatorClockDivider;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   322  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   323  /** \brief Rectifier sign source\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   324   * Selects the sign signal that is to be delayed.\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   325   * Definition in Ifx_DSADC.RECT.B.SSRC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   326   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   327  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   328  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   329      IfxDsadc_RectifierSignSource_onChipGenerator = 0,  /**< \brief On-chip carrier generator */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   330      IfxDsadc_RectifierSignSource_nextChannel     = 1,  /**< \brief Sign of result of next channel */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   331      IfxDsadc_RectifierSignSource_externalA       = 2,  /**< \brief External sign signal A */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   332      IfxDsadc_RectifierSignSource_externalB       = 3   /**< \brief External sign signal B */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   333  } IfxDsadc_RectifierSignSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   334  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   335  /** \brief Demodulator sample clock source select\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   336   * Definition in Ifx_DSADC.DICFG.B.CSRC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   337   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   338  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   339  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   340      IfxDsadc_SampleClockSource_internal = 0,  /**< \brief Internal clock */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   341      IfxDsadc_SampleClockSource_inputA   = 1,  /**< \brief External clock, from Input A */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   342      IfxDsadc_SampleClockSource_inputB   = 2,  /**< \brief External clock, from Input B */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   343      IfxDsadc_SampleClockSource_inputC   = 3   /**< \brief External clock, from Input C */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   344  } IfxDsadc_SampleClockSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   345  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   346  /** \brief Demodulator data strobe generation mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   347   * Definition in Ifx_DSADC.DICFG.B.STROBE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   348   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   349  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   350  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   351      IfxDsadc_SampleStrobe_noDataStrobe            = 0, /**< \brief No data strobe */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   352      IfxDsadc_SampleStrobe_sampleOnRisingEdge      = 1, /**< \brief Direct clock, a sample trigger is generated at each rising clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   353      IfxDsadc_SampleStrobe_sampleOnFallingEdge     = 2, /**< \brief Direct clock, a sample trigger is generated at each falling clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   354      IfxDsadc_SampleStrobe_sampleOnBothEdges       = 3, /**< \brief Double data, a sample trigger is generated at each rising and falling clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   355      IfxDsadc_SampleStrobe_reserved                = 4, /**< \brief don't use */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   356      IfxDsadc_SampleStrobe_sampleOnTwoRisingEdges  = 5, /**< \brief Double clock, a sample trigger is generated at every 2nd rising clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   357      IfxDsadc_SampleStrobe_sampleOnTwoFallingEdges = 6  /**< \brief Double clock, a sample trigger is generated at every 2nd falling clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   358  } IfxDsadc_SampleStrobe;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   359  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   360  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   361   * Definition in Ifx_DSADC.CLC.B.EDIS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   362   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   363  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   364  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   365      IfxDsadc_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   366      IfxDsadc_SleepMode_disable = 1  /**< \brief disables sleep mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   367  } IfxDsadc_SleepMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   368  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   369  /** \brief Timestamp trigger mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   370   * Definition in Ifx_DSADC.DICFG.B.TSTRMODE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   371   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   372  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   373  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   374      IfxDsadc_TimestampTrigger_noTrigger   = 0,  /**< \brief No timestamp trigger */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   375      IfxDsadc_TimestampTrigger_fallingEdge = 1,  /**< \brief Trigger event upon a falling edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   376      IfxDsadc_TimestampTrigger_risingEdge  = 2,  /**< \brief Trigger event upon a rising edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   377      IfxDsadc_TimestampTrigger_eachEdge    = 3   /**< \brief Trigger event upon each edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   378  } IfxDsadc_TimestampTrigger;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   379  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   380  /** \brief Trigger select\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   381   * Definition in Ifx_DSADC.DICFG.B.TRSEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   382   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   383  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   384  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   385      IfxDsadc_TriggerInput_a = 0,  /**< \brief dsadc trig 0 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   386      IfxDsadc_TriggerInput_b = 1,  /**< \brief dsadc trig 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   387      IfxDsadc_TriggerInput_c = 2,  /**< \brief vadc trig 0 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   388      IfxDsadc_TriggerInput_d = 3,  /**< \brief vadc trig 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   389      IfxDsadc_TriggerInput_e = 4,  /**< \brief external pin e */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   390      IfxDsadc_TriggerInput_f = 5,  /**< \brief external pin f */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   391      IfxDsadc_TriggerInput_g = 6,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   392      IfxDsadc_TriggerInput_h = 7
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   393  } IfxDsadc_TriggerInput;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   394  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   395  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   397  /** \addtogroup IfxLld_Dsadc_Std_Operative
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   398   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   399  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   400  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   402  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   403  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   404  /** \brief Sets the sensitivity of the module to sleep signal
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   405   * \param dsadc pointer to DSADC registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   406   * \param mode mode selection (enable/disable)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   407   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   408   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   409  IFX_INLINE void IfxDsadc_setSleepMode(Ifx_DSADC *dsadc, IfxDsadc_SleepMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   410  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   411  /** \brief Enables the conversion of multiple channels
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   412   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   413   * \param modulatorMask the modulator which should be running (bitwise selection)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   414   * \param channelMask the channels which should be scanned (bitwise selection)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   415   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   416   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   417   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   418   *     // enable the conversion of all 6 DSADC channels
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   419   *     IfxDsadc_startScan(&MODULE_DSADC, 0x3FU, 0x3FU);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   420   *     // results are now available in IFXDSADC(ds).CH[x].RESM.B.RESULT (x=0..5)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   421   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   422   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   423   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   424  IFX_INLINE void IfxDsadc_startScan(Ifx_DSADC *dsadc, uint32 modulatorMask, uint32 channelMask);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   425  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   426  /** \brief Disables the conversion of multiple channels
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   427   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   428   * \param modulatorMask the modulator which should be disabled (bitwise selection)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   429   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   430   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   431   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   432   *     // disable the modulators of all 6 DSADC channels
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   433   *     IfxDsadc_stopScan(&MODULE_DSADC, 0x3FU);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   434   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   435   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   436   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   437  IFX_INLINE void IfxDsadc_stopScan(Ifx_DSADC *dsadc, uint32 modulatorMask);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   438  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   439  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   440  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   441  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   442  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   443  /** \brief resets the DSADC kernel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   444   * \param dsadc pointer to DSADC registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   445   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   446   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   447  IFX_EXTERN void IfxDsadc_resetModule(Ifx_DSADC *dsadc);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   448  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   449  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   450  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   451  /** \addtogroup IfxLld_Dsadc_Std_Support
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   452   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   453  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   454  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   455  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   456  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   457  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   458  /** \brief Get result from the auxiliary chain
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   459   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   460   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   461   * \return result from the auxiliary chain
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   462   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   463  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   464  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   465  /** \brief Get the main comb decimation factor
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   466   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   467   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   468   * \return the main comb decimation factor
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   469   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   470  IFX_INLINE uint16 IfxDsadc_getMainCombDecimation(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   471  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   472  /** \brief Get result from the main chain
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   473   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   474   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   475   * \return result from the main chain
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   476   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   477  IFX_INLINE sint16 IfxDsadc_getMainResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   478  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   479  /** \brief Return TRUE if DSADC module is enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   480   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   481   * \return TRUE if DSADC module is enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   482   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   483  IFX_INLINE boolean IfxDsadc_isModuleEnabled(Ifx_DSADC *dsadc);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   484  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   485  /** \brief Set the carrier waveform mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   486   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   487   * \param waveformMode the waveform mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   488   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   489   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   490  IFX_INLINE void IfxDsadc_setCarrierMode(Ifx_DSADC *dsadc, IfxDsadc_CarrierWaveformMode waveformMode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   491  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   492  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   493  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   494  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   495  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   496  /** \brief Get the sample frequency of the integrator output in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   497   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   498   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   499   * \return frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   500   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   501  IFX_EXTERN float32 IfxDsadc_getIntegratorOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   502  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   503  /** \brief Get the sample frequency of the main COMB filter output in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   504   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   505   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   506   * \return frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   507   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   508  IFX_EXTERN float32 IfxDsadc_getMainCombOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   509  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   510  /** \brief Estimate the group delay of main-chain filters in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   511   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   512   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   513   * \return delay in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   514   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   515  IFX_EXTERN float32 IfxDsadc_getMainGroupDelay(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   516  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   517  /** \brief Get the modulator clock frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   518   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   519   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   520   * \return frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   521   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   522  IFX_EXTERN float32 IfxDsadc_getModulatorClockFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   523  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   524  /** \brief Get the input frequency of DSADC in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   525   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   526   * \return frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   527   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   528  IFX_EXTERN float32 IfxDsadc_getModulatorInputClockFreq(Ifx_DSADC *dsadc);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   529  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   530  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   531  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   532  /** \addtogroup IfxLld_Dsadc_Std_Interrupt
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   533   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   534  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   535  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   536  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   537  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   538  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   539  /** \brief Address/pointer to the interrupt source register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   540   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   541   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   542   * \return Address/pointer to the interrupt source register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   543   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   544  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getAuxSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   545  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   546  /** \brief Get the interrupt source register for a Main event
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   547   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   548   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   549   * \return Address/pointer to the interrupt source register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   550   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   551  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getMainSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   552  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   553  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   554  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   555  /** \addtogroup IfxLld_Dsadc_Std_IO
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   556   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   557  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   558  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   559  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   560  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   561  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   562  /** \brief Initializes a CGPWM output
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   563   * \param cgPwm the CGPWM Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   564   * \param pinMode the pin output mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   565   * \param padDriver the pad driver mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   566   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   567   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   568  IFX_INLINE void IfxDsadc_initCgPwmPin(const IfxDsadc_Cgpwm_Out *cgPwm, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   569  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   570  /** \brief Initializes a CIN input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   571   * \param cIn the CIN Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   572   * \param cInMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   573   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   574   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   575   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   576  IFX_INLINE void IfxDsadc_initCinPin(const IfxDsadc_Cin_In *cIn, IfxPort_InputMode cInMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   577  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   578  /** \brief Initializes a COUT output
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   579   * \param cout the COUT Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   580   * \param pinMode the pin output mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   581   * \param padDriver the pad driver mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   582   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   583   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   584  IFX_INLINE void IfxDsadc_initCoutPin(const IfxDsadc_Cout_Out *cout, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   585  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   586  /** \brief Initializes a DIN input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   587   * \param dIn the DIN Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   588   * \param dInMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   589   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   590   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   591   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   592  IFX_INLINE void IfxDsadc_initDinPin(const IfxDsadc_Din_In *dIn, IfxPort_InputMode dInMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   593  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   594  /** \brief Initializes a DS input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   595   * \param dsn the DSN Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   596   * \param pinMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   597   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   598   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   599   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   600  IFX_INLINE void IfxDsadc_initDsnPin(const IfxDsadc_Dsn_In *dsn, IfxPort_InputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   601  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   602  /** \brief Initializes a DS input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   603   * \param dsp the DSP Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   604   * \param pinMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   605   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   606   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   607   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   608  IFX_INLINE void IfxDsadc_initDspPin(const IfxDsadc_Dsp_In *dsp, IfxPort_InputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   609  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   610  /** \brief Initializes a ITR input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   611   * \param itr the ITR Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   612   * \param itrMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   613   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   614   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   615   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   616  IFX_INLINE void IfxDsadc_initItrPin(const IfxDsadc_Itr_In *itr, IfxPort_InputMode itrMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   617  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   618  /** \brief Initializes a SG input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   619   * \param sg the SG Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   620   * \param pinMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   621   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   622   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   623   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   624  IFX_INLINE void IfxDsadc_initSgPin(const IfxDsadc_Sg_In *sg, IfxPort_InputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   625  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   626  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   627  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   628  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   629  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   630  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   631  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   632  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   633  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   634      return (sint16)(dsadc->CH[channel].RESA.B.RESULT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   635  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   636  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   637  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   638  IFX_INLINE uint16 IfxDsadc_getMainCombDecimation(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   639  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   640      return (uint16)(1U + dsadc->CH[channel].FCFGC.B.CFMDF);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   641  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   642  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   643  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   644  IFX_INLINE sint16 IfxDsadc_getMainResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   645  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   646      return (sint16)(dsadc->CH[channel].RESM.B.RESULT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   647  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   648  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   649  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   650  IFX_INLINE void IfxDsadc_initCgPwmPin(const IfxDsadc_Cgpwm_Out *cgPwm, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   651  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   652      IfxPort_setPinModeOutput(cgPwm->pin.port, cgPwm->pin.pinIndex, pinMode, cgPwm->select);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   653      IfxPort_setPinPadDriver(cgPwm->pin.port, cgPwm->pin.pinIndex, padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   654  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   655  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   656  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   657  IFX_INLINE void IfxDsadc_initCinPin(const IfxDsadc_Cin_In *cIn, IfxPort_InputMode cInMode, IfxPort_PadDriver padDriver)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   658  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   659      if (cIn->pin.port != NULL_PTR)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   660      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   661          IfxPort_setPinModeInput(cIn->pin.port, cIn->pin.pinIndex, cInMode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   662          IfxPort_setPinPadDriver(cIn->pin.port, cIn->pin.pinIndex, padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   663      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   664  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   665  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   666  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   667  IFX_INLINE void IfxDsadc_initCoutPin(const IfxDsadc_Cout_Out *cout, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   668  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   669      if (cout->pin.port != NULL_PTR)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   670      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   671          IfxPort_setPinModeOutput(cout->pin.port, cout->pin.pinIndex, pinMode, cout->select);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   672          IfxPort_setPinPadDriver(cout->pin.port, cout->pin.pinIndex, padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   673      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   674  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   675  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   676  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   677  IFX_INLINE void IfxDsadc_initDinPin(const IfxDsadc_Din_In *dIn, IfxPort_InputMode dInMode, IfxPort_PadDriver padDriver)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   678  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   679      if (dIn->pin.port != NULL_PTR)
	ld.w	d15,[a15]8
.L523:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   679      if (dIn->pin.port != NULL_PTR)      (inlined)
	jeq	d15,#0,.L27
.L524:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   680      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   681          IfxPort_setPinModeInput(dIn->pin.port, dIn->pin.pinIndex, dInMode);
	ld.a	a4,[a15]8
.L525:
	ld.bu	d4,[a15]12
.L278:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    45   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    46   * \defgroup IfxLld_Port_Std_Enum Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    47   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    48   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    49   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    50   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    51   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    52   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    53   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    54   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    55  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    56  #ifndef IFXPORT_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    57  #define IFXPORT_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    58  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    59  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    60  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    61  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    62  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    63  #include "_Impl/IfxPort_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    64  #include "Scu/Std/IfxScuWdt.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    65  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    66  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    67  /*--------------------------------Enumerations--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    68  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    69  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    70  /** \addtogroup IfxLld_Port_Std_Enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    71   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    72  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    73   * HSCT module.declared in MODULE_PORTx.LPCRx
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    74   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    76  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    77      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    78      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    79  } IfxPort_ControlledBy;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    80  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    81  /** \brief Ifx_P output modification modes definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    82   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    83  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    84  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    85      IfxPort_InputMode_undefined    = -1,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    86      IfxPort_InputMode_noPullDevice = 0 << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    87          IfxPort_InputMode_pullDown = 1U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    88          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    89  } IfxPort_InputMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    90  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    91  /** \brief Ifx_P input / output mode definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    92   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    93   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    94   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    95  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    96  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    97      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    98      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    99      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   100      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   101      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   102      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   103      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   104      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   105      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   106      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   107      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   108      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   109      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   110      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   111      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   112      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   113      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   114      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   115      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   116  } IfxPort_Mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   117  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   118  /** \brief Pin output alternate index
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   119   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   120  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   121  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   122      IfxPort_OutputIdx_general  = 0x10U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   123          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   124          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   125          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   126          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   127          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   128          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   129          IfxPort_OutputIdx_alt7 = 0x17U << 3
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   130  } IfxPort_OutputIdx;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   131  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   132  /** \brief Pin output mode definition
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   133   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   134  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   135  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   136      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   137          IfxPort_OutputMode_openDrain = 0x18U << 3
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_OutputMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   139  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   140  /** \brief Pad driver mode definition (strength and slew rate).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   141   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   142   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   143   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   144  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   145  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   146      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   147      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   148      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   149      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   150      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   151      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   152      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   153      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   154      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   155      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   156      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   157      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_PadDriver;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   159  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   160  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   161   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   162  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   163  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   164      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   165      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   166  } IfxPort_PadSupply;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   167  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   168  /** \brief Ifx_P output modification modes definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   169   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   170   * \see Ifx_P.OMR, IfxPort_setPinState()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   171   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   172  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   173  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   174      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   175      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   176      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   177      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   178  } IfxPort_State;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   179  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   180  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   181  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   182  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   183  /*-----------------------------Data Structures--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   184  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   185  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   186  /** \addtogroup IfxLld_Port_Std_DataStructures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   187   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   188  /** \brief Defines a pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   189   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   190  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   191  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   192      Ifx_P *port;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   193      uint8  pinIndex;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   194  } IfxPort_Pin;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   195  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   196  /** \brief To configure pins
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   197   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   198  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   199  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   200      Ifx_P            *port;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   201      uint8             pinIndex;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   202      IfxPort_OutputIdx mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   203      IfxPort_PadDriver padDriver;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   204  } IfxPort_Pin_Config;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   205  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   206  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   207  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   208  /** \addtogroup IfxLld_Port_Std_SinglePin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   209   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   210  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   211  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   212  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   213  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   214  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   215  /** \brief Return the port state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   216   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   217   * \param pinIndex Specifies the pin for which the state should be returned.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   218   * \return Returns TRUE the pin is high; FALSE the pin is low
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   219   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   220   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   221   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   222   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   223   *      // ...
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   224   *    }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   225   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   226   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   227   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   228  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   229  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   230  /** \brief Set the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   231   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   232   * \param pinIndex Specifies the pin to be set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   233   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   234   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   235   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   236   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   237   * IfxPort_setPinHigh(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   238   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   239   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   240   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   241   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   242   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   243  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   244  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   245  /** \brief Reset the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   246   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   247   * \param pinIndex Specifies the pin to be reset.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   248   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   249   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   250   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   251   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   252   * IfxPort_setPinLow(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   253   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   254   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   255   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   256   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   257   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   258  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   259  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   260  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   261   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   262   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   263   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   264   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   265   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   266   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   267   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   268   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   269   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   270   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   271   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   272  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   273  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   274  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   275   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   276   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   277   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   278   * \param index Specifies the alternate (or general purpose) output channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   279   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   280   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   281   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   282   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   283   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   284   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   285   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   286   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   287  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   288  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   289  /** \brief Set / Resets / Toggle the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   290   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   291   * \param pinIndex Specifies the pin to modify.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   292   * \param action Specifies the action: set, reset, toggle.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   293   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   294   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   295   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   296   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   297   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   298   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   299   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   300   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   301   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   302   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   303  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   304  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   305  /** \brief Toggle the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin to be toggled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   308   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   309   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   311   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   312   * IfxPort_togglePin(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   313   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   314   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   315   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   316   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   317   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   318  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   319  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   320  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   321  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   322  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   323  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   324  /** \brief Disable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   325   * This function disables the emergency stop function. A check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   326   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   327   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   328   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   329   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   330   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   331   * /code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   332   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   333   *     {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   334   *         // failed to disable emergency stop for P33.0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   335   *     }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   336   * /endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   337   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   338   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   339   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   340   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   341  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   342  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   343  /** \brief Enable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   344   * This function enables the emergency stop function. A check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   345   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   346   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   347   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   348   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   350   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   351   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   352   *       // failed to enable emergency stop for P33.0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   353   *     }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   354   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   355   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   356   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   357   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   358   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   359  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   360  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   361  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   362   * Also Configures the P40/P41 Port for digital functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   363   * which bydefault support analog functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   364   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   365   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   366   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   367   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   368   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   369   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   370   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   371   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   372   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   373   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   374   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   375  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   376  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   377  /** \brief Configure the pad driver mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   378   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   379   * \param pinIndex Specifies the pin for which the mode will be set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   380   * \param padDriver Specifies the driver mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   381   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   382   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   383   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   384   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   385   * // enable strong 3.3V driver
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   386   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   387   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   388   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   389   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   390  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   391  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   392  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   393  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   394  /** \addtogroup IfxLld_Port_Std_PortGroup
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   395   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   397  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   398  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   399  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   400  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   401  /** \brief Return the port group state
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   402   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   403   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   404   * \param mask selects the pins which should be read (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   405   * \return Returns the selected pin values
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   406   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   407   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   408   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   409   * // read the current value of P33[7:0]
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   410   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   411   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   412   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   413   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   414  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   415  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   416  /** \brief Set the port group state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   417   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   418   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   419   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   420   * \param data specifies the value which should be set
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   421   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   422   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   423   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   424   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   425   * // configure P33.[7:0] as GPIO outputs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   426   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   427   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   428   * // set initial value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   429   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   430   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   431   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   432   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   433  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   434  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   435  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   436  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   437  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   438  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   439  /** \brief Returns the module address of the selected Port module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   440   * \param port Pointer to PORT module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   441   * \return PORT module register address
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   442   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   443  IFX_EXTERN Ifx_P *IfxPort_getAddress(IfxPort_Index port);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   444  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   445  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   446   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   447   * \return port index of IfxModule_IndexMap. return -1 in case of unknown port index.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   448   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   449  IFX_EXTERN IfxPort_Index IfxPort_getIndex(Ifx_P *port);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   450  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   451  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   452   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   453   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   454   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   455   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   456   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   457   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   458   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   459   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   460   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   461   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   462   *  \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   463   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   464   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   465  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   466  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   467  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   468   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   469   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   470   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   471   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   472   * \param index Specifies the alternate (or general purpose) output channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   473   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   474   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   475   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   476   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   477   * // configure P33.[7:0] as GPIO outputs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   478   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   479   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   480   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   481   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   482  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   483  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   484  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   485   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   486   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   487   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   488   * \param padDriver Specifies the pad driver strength.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   489   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   490   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   491   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   492   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   493   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   494   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   495   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   496   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   497   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   498  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   499  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   500  /** \brief set LVDSH mode (configured for Port21)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   501   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   502   * \param pinIndex specifies pin  to be modified
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   503   * \param mode specifes the mode of pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   504   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   505   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   506   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   508  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   509  /** \brief set LVDSM mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   510   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   511   * \param pinIndex specifies pin to be modified
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   512   * \param lvdsPadDriver select speed grade of LVDS Pad
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   513   * \param padSupply select the PAD supply (5/3.3V)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   514   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   515   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   516  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   517  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   518  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   519  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   521  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   523  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   524  /** \brief Disable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   525   * This function disables the emergency stop function. No check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   526   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   527   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   528   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   529   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   530   * \see IfxPort_disableEmergencyStop()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   531   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   532   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   533  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   534  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   535  /** \brief Enable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   536   * This function enables the emergency stop function. No check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   537   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   538   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   539   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   540   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   541   * \see IfxPort_enableEmergencyStop()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   542   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   543   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   544  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   545  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   546  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   547  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   548  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   549  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   550  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   551  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   552      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   553  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   554  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   555  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   556  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   557  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   558      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   559  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   560  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   561  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   562  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   563  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   564      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   565  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   566  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   567  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   568  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   569  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   570      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   571  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   572  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   573  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   574  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   575  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   576      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   577  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   578  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   579  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   580  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   581  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   582      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
	extr.u	d5,d0,#0,#8
	call	IfxPort_setPinMode
.L279:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   682   {
	ld.a	a4,[a15]8
.L526:
	ld.bu	d4,[a15]12
.L527:
	mov	d5,d8
	call	IfxPort_setPinPadDriver

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   679      if (dIn->pin.port != NULL_PTR)      (inlined)
.L27:
.L26:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   245       IfxDsadc_initItrPin(itr, pins->itrMode, pins->pinDriver);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   246          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   247      }
	ld.a	a15,[a12]16
.L407:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   248  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   249  
	jz.a	a15,.L28
.L528:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   250  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   251  void IfxDsadc_Dsadc_initChannelConfig(IfxDsadc_Dsadc_ChannelConfig *config, IfxDsadc_Dsadc *dsadc)
	ld.b	d0,[a12]20
.L529:
	ld.bu	d8,[a12]37
.L283:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     2   * \file IfxDsadc.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     3   * \brief DSADC  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     4   * \ingroup IfxLld_Dsadc
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     7   * \copyright Copyright (c) 2017 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    44   * \defgroup IfxLld_Dsadc_Std_Enum Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    45   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    46   * \defgroup IfxLld_Dsadc_Std_Operative Operative Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    47   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    48   * \defgroup IfxLld_Dsadc_Std_Support Support Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    49   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    50   * \defgroup IfxLld_Dsadc_Std_Interrupt Interrupt Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    51   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    52   * \defgroup IfxLld_Dsadc_Std_IO IO Pin Configuration Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    53   * \ingroup IfxLld_Dsadc_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    54   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    55  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    56  #ifndef IFXDSADC_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    57  #define IFXDSADC_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    58  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    59  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    60  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    61  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    62  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    63  #include "_Impl/IfxDsadc_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    64  #include "Src/Std/IfxSrc.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    65  #include "Scu/Std/IfxScuCcu.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    66  #include "_PinMap/IfxDsadc_PinMap.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    67  #include "IfxDsadc_reg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    68  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    69  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    70  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    71  /*--------------------------------Enumerations--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    72  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    73  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    74  /** \addtogroup IfxLld_Dsadc_Std_Enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    75   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    76  /** \brief Comb Filter (auxiliary) shift control\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    77   * Definition in Ifx_DSADC.FCFGA.B.AFSC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    78   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    79  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    80  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    81      IfxDsadc_AuxCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    82      IfxDsadc_AuxCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    83      IfxDsadc_AuxCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    84      IfxDsadc_AuxCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    85  } IfxDsadc_AuxCombFilterShift;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    86  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    87  /** \brief Comb Filter (auxiliary) configuration/type\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    88   * Definition in Ifx_DSADC.FCFGA.B.CFAC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    89   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    90  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    91  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    92      IfxDsadc_AuxCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    93      IfxDsadc_AuxCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    94      IfxDsadc_AuxCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    95      IfxDsadc_AuxCombFilterType_combF = 3   /**< \brief CICF */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    96  } IfxDsadc_AuxCombFilterType;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    97  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    98  /** \brief Service request generation (auxiliary)\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	    99   * Definition in Ifx_DSADC.FCFGA.B.ESEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   100   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   101  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   102  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   103      IfxDsadc_AuxEvent_everyNewResult  = 0, /**< \brief Always, for each new result value */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   104      IfxDsadc_AuxEvent_insideBoundary  = 1, /**< \brief If result is inside the boundary band */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   105      IfxDsadc_AuxEvent_outsideBoundary = 2  /**< \brief If result is outside the boundary band */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   106  } IfxDsadc_AuxEvent;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   107  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   108  /** \brief Service request generation (auxiliary)\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   109   * Definition in Ifx_DSADC.FCFGA.B.EGT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   110   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   111  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   112  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   113      IfxDsadc_AuxGate_definedByESEL       = 0, /**< \brief Separate: generate events according to ESEL */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   114      IfxDsadc_AuxGate_coupledToIntegrator = 1  /**< \brief Coupled: generate events only when the integrator is enabled and after the discard phase defined by bitfield NVALDIS */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   115  } IfxDsadc_AuxGate;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   116  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   117  /** \brief Service request generation (auxiliary)\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   118   * Definition in Ifx_DSADC.FCFGA.B.SRGA
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   119   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   120  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   121  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   122      IfxDsadc_AuxServiceRequest_never     = 0,  /**< \brief Never, service requests disabled */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   123      IfxDsadc_AuxServiceRequest_auxFilter = 1,  /**< \brief Auxiliary filter: As selected by bitfield ESEL (\ref IfxDsadc_AuxEvent) */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   124      IfxDsadc_AuxServiceRequest_altSource = 2   /**< \brief Alternate source: Capturing of a sign delay value to register CGSYNCx (x = 0 - 5) */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   125  } IfxDsadc_AuxServiceRequest;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   126  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   127  /** \brief Carrier generation mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   128   * Definition in Ifx_DSADC.CGCFG.B.CGMOD
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   129   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   130  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   131  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   132      IfxDsadc_CarrierWaveformMode_stopped  = 0,  /**< \brief Carrier Generator stopped */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   133      IfxDsadc_CarrierWaveformMode_square   = 1,  /**< \brief Carrier Generator generates square wave */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   134      IfxDsadc_CarrierWaveformMode_triangle = 2,  /**< \brief Carrier Generator generates triangle wave */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   135      IfxDsadc_CarrierWaveformMode_sine     = 3   /**< \brief Carrier Generator generates sine wave */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   136  } IfxDsadc_CarrierWaveformMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   137  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   138  /** \brief Specifies the channel Index
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   139   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   140  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   141  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   142      IfxDsadc_ChannelId_0 = 0,  /**< \brief Specifies the channel Index 0 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   143      IfxDsadc_ChannelId_2 = 2,  /**< \brief Specifies the channel Index 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   144      IfxDsadc_ChannelId_3 = 3   /**< \brief Specifies the channel Index 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   145  } IfxDsadc_ChannelId;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   146  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   147  /** \brief Modulator common mode voltage selection\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   148   * Definition in Ifx_DSADC.MODCFGx.B.CMVS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   149   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   150  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   151  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   152      IfxDsadc_CommonModeVoltage_a = 0,  /**< \brief VCM = VAREF / 3.03 (1.65 V for VAREF = 5.0 V), recommended for VDDM = 3.3 V1.65V */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   153      IfxDsadc_CommonModeVoltage_b = 1,  /**< \brief VCM = VAREF / 2.27 (2.2 V for VAREF = 5.0 V), recommended for low distortion of AC-coupled signals */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   154      IfxDsadc_CommonModeVoltage_c = 2   /**< \brief VCM = VAREF / 2.0 (2.5 V for VAREF = 5.0 V), recommended for DC-coupled signals */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   155  } IfxDsadc_CommonModeVoltage;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   156  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   157  /** \brief FIR data shift control\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   158   * Selects the displacement caused by the data shifter at the FIR filter output\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   159   * Definition in Ifx_DSADC.FCFGM.B.DSH
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   160   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   161  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   162  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   163      IfxDsadc_FirDataShift_noShift  = 0,  /**< \brief no shift, use full range */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   164      IfxDsadc_FirDataShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   165      IfxDsadc_FirDataShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   166      IfxDsadc_FirDataShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   167  } IfxDsadc_FirDataShift;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   168  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   169  /** \brief FIR shift control\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   170   * Selects the displacement caused by the data shifter inbetween the FIR filter blocks.\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   171   * Definition in Ifx_DSADC.FCFGM.B.FSH
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   172   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   173  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   174  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   175      IfxDsadc_FirInternalShift_noShift  = 0, /**< \brief no shift, use full range */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   176      IfxDsadc_FirInternalShift_shiftBy1 = 1  /**< \brief Shift by 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   177  } IfxDsadc_FirInternalShift;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   178  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   179  /** \brief Modulator configuration of positive/negative input line\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   180   * Definition in Ifx_DSADC.MODCFGx.B.INCFGP and Ifx_DSADC.MODCFGx.B.INCFGN
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   181   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   182  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   183  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   184      IfxDsadc_InputConfig_inputPin          = 0,  /**< \brief Modulator input connected to external pin */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   185      IfxDsadc_InputConfig_supplyVoltage     = 1,  /**< \brief Modulator input connected to supply voltage V_ddm */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   186      IfxDsadc_InputConfig_commonModeVoltage = 2,  /**< \brief Modulator input connected to common mode voltage V_cm */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   187      IfxDsadc_InputConfig_referenceGround   = 3   /**< \brief Modulator input connected to reference ground V_ref */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   188  } IfxDsadc_InputConfig;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   189  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   190  /** \brief Demodulator input data source selection\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   191   * Definition in Ifx_DSADC.DICFG.B.DSRC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   192   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   193  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   194  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   195      IfxDsadc_InputDataSource_onChipStandAlone = 0,  /**< \brief On-chip modulator, standalone (3rd order) */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   196      IfxDsadc_InputDataSource_onChipCombined   = 1,  /**< \brief On-chip modulator, yield (2nd order) */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   197      IfxDsadc_InputDataSource_directInputA     = 2,  /**< \brief External, from input A, direct */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   198      IfxDsadc_InputDataSource_invertedInputA   = 3,  /**< \brief External, from input A, inverted */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   199      IfxDsadc_InputDataSource_directInputB     = 4,  /**< \brief External, from input B, direct */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   200      IfxDsadc_InputDataSource_invertedInputB   = 5   /**< \brief External, from input B, inverted */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   201  } IfxDsadc_InputDataSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   202  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   203  /** \brief Modulator gain select of analog input path\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   204   * Definition in Ifx_DSADC.MODCFGx.B.GAINSEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   205   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   206  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   207  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   208      IfxDsadc_InputGain_factor1  = 0, /**< \brief Input gain factor: 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   209      IfxDsadc_InputGain_factor2  = 1, /**< \brief Input gain factor: 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   210      IfxDsadc_InputGain_factor4  = 2, /**< \brief Input gain factor: 4 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   211      IfxDsadc_InputGain_factor8  = 3, /**< \brief Input gain factor: 8 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   212      IfxDsadc_InputGain_factor16 = 4  /**< \brief Input gain factor: 16 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   213  } IfxDsadc_InputGain;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   214  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   215  /** \brief Modulator input pin selection\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   216   * Definition in Ifx_DSADC.MODCFGx.B.INMUX
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   217   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   218  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   219  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   220      IfxDsadc_InputPin_a = 0,  /**< \brief Pin A connected to modulator input */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   221      IfxDsadc_InputPin_b = 1,  /**< \brief Pin B connected to modulator input */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   222      IfxDsadc_InputPin_c = 2,  /**< \brief Pin C connected to modulator input */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   223      IfxDsadc_InputPin_d = 3   /**< \brief Pin D connected to modulator input */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   224  } IfxDsadc_InputPin;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   225  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   226  /** \brief Integrator window size\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   227   * Definition in Ifx_DSADC.IWCTR.B.IWS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   228   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   229  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   230  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   231      IfxDsadc_IntegrationWindowSize_internalControl = 0,  /**< \brief Internal control: stop integrator after REPVAL+1 integration cycles */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   232      IfxDsadc_IntegrationWindowSize_externalControl = 1   /**< \brief External control: stop integrator when bit INTEN becomes 0 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   233  } IfxDsadc_IntegrationWindowSize;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   234  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   235  /** \brief Integrator trigger mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   236   * NOTE: switch-first to bypassed before using other mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   237   * Definition in Ifx_DSADC.DICFG.B.ITRMODE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   238   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   239  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   240  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   241      IfxDsadc_IntegratorTrigger_bypassed     = 0, /**< \brief No integration trigger, integrator bypassed */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   242      IfxDsadc_IntegratorTrigger_fallingEdge  = 1, /**< \brief Trigger event upon a falling edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   243      IfxDsadc_IntegratorTrigger_risingEdge   = 2, /**< \brief Trigger event upon a rising edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   244      IfxDsadc_IntegratorTrigger_alwaysActive = 3  /**< \brief No trigger, integrator active all the time */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   245  } IfxDsadc_IntegratorTrigger;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   246  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   247  /** \brief Low power supply voltage select\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   248   * Definition in Ifx_DSADC.GLOBCFG.B.LOSUP
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   249   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   250  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   251  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   252      IfxDsadc_LowPowerSupply_5V   = 0, /**< \brief Supply Voltage for Analog Circuitry set to 5V */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   253      IfxDsadc_LowPowerSupply_3_3V = 1  /**< \brief Supply Voltage for Analog Circuitry set to 3.3V */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   254  } IfxDsadc_LowPowerSupply;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   255  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   256  /** \brief Comb Filter (Main Chain) shift control\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   257   * Definition in Ifx_DSADC.FCFGC.B.MFSC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   258   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   259  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   260  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   261      IfxDsadc_MainCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   262      IfxDsadc_MainCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   263      IfxDsadc_MainCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   264      IfxDsadc_MainCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   265  } IfxDsadc_MainCombFilterShift;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   266  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   267  /** \brief Comb Filter (Main Chain) configuration/type\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   268   * Definition in Ifx_DSADC.FCFGC.B.CFMC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   269   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   270  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   271  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   272      IfxDsadc_MainCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   273      IfxDsadc_MainCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   274      IfxDsadc_MainCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   275      IfxDsadc_MainCombFilterType_combF = 3   /**< \brief CICF */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   276  } IfxDsadc_MainCombFilterType;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   277  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   278  /** \brief Service request generation (main chain)\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   279   * Definition in Ifx_DSADC.FCFGC.B.SRGM
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   280   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   281  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   282  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   283      IfxDsadc_MainServiceRequest_never          = 0,  /**< \brief Never, service requests disabled */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   284      IfxDsadc_MainServiceRequest_highGateSignal = 1,  /**< \brief While gate (selected trigger signal) is high */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   285      IfxDsadc_MainServiceRequest_lowGateSignal  = 2,  /**< \brief While gate (selected trigger signal) is low */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   286      IfxDsadc_MainServiceRequest_everyNewResult = 3   /**< \brief Always, for each new result value */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   287  } IfxDsadc_MainServiceRequest;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   288  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   289  /** \brief Modulator clock select\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   290   * Definition in Ifx_DSADC.GLOBCFG.B.MCSEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   291   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   292  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   293  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   294      IfxDsadc_ModulatorClock_off   = 0,  /**< \brief Internal clock off, no source selected */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   295      IfxDsadc_ModulatorClock_fDSD  = 1,  /**< \brief f_dsd clock selected */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   296      IfxDsadc_ModulatorClock_fERAY = 2,  /**< \brief f_eray clock selected */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   297      IfxDsadc_ModulatorClock_fOSC0 = 3   /**< \brief f_osc0 clock selected */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   298  } IfxDsadc_ModulatorClock;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   299  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   300  /** \brief Modulator divider factor for modulator clock\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   301   * Definition in Ifx_DSADC.MODCFGx.B.DIVM
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   302   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   303  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   304  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   305      IfxDsadc_ModulatorClockDivider_div2 = 0,      /**< \brief f_mod = f_clk / 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   306      IfxDsadc_ModulatorClockDivider_div4,          /**< \brief f_mod = f_clk / 4  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   307      IfxDsadc_ModulatorClockDivider_div6,          /**< \brief f_mod = f_clk / 6  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   308      IfxDsadc_ModulatorClockDivider_div8,          /**< \brief f_mod = f_clk / 8  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   309      IfxDsadc_ModulatorClockDivider_div10,         /**< \brief f_mod = f_clk / 10  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   310      IfxDsadc_ModulatorClockDivider_div12,         /**< \brief f_mod = f_clk / 12  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   311      IfxDsadc_ModulatorClockDivider_div14,         /**< \brief f_mod = f_clk / 14  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   312      IfxDsadc_ModulatorClockDivider_div16,         /**< \brief f_mod = f_clk / 16  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   313      IfxDsadc_ModulatorClockDivider_div18,         /**< \brief f_mod = f_clk / 18  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   314      IfxDsadc_ModulatorClockDivider_div20,         /**< \brief f_mod = f_clk / 20  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   315      IfxDsadc_ModulatorClockDivider_div22,         /**< \brief f_mod = f_clk / 22  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   316      IfxDsadc_ModulatorClockDivider_div24,         /**< \brief f_mod = f_clk / 24  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   317      IfxDsadc_ModulatorClockDivider_div26,         /**< \brief f_mod = f_clk / 26  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   318      IfxDsadc_ModulatorClockDivider_div28,         /**< \brief f_mod = f_clk / 28  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   319      IfxDsadc_ModulatorClockDivider_div30,         /**< \brief f_mod = f_clk / 30  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   320      IfxDsadc_ModulatorClockDivider_div32          /**< \brief f_mod = f_clk / 32  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   321  } IfxDsadc_ModulatorClockDivider;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   322  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   323  /** \brief Rectifier sign source\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   324   * Selects the sign signal that is to be delayed.\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   325   * Definition in Ifx_DSADC.RECT.B.SSRC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   326   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   327  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   328  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   329      IfxDsadc_RectifierSignSource_onChipGenerator = 0,  /**< \brief On-chip carrier generator */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   330      IfxDsadc_RectifierSignSource_nextChannel     = 1,  /**< \brief Sign of result of next channel */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   331      IfxDsadc_RectifierSignSource_externalA       = 2,  /**< \brief External sign signal A */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   332      IfxDsadc_RectifierSignSource_externalB       = 3   /**< \brief External sign signal B */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   333  } IfxDsadc_RectifierSignSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   334  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   335  /** \brief Demodulator sample clock source select\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   336   * Definition in Ifx_DSADC.DICFG.B.CSRC
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   337   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   338  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   339  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   340      IfxDsadc_SampleClockSource_internal = 0,  /**< \brief Internal clock */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   341      IfxDsadc_SampleClockSource_inputA   = 1,  /**< \brief External clock, from Input A */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   342      IfxDsadc_SampleClockSource_inputB   = 2,  /**< \brief External clock, from Input B */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   343      IfxDsadc_SampleClockSource_inputC   = 3   /**< \brief External clock, from Input C */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   344  } IfxDsadc_SampleClockSource;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   345  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   346  /** \brief Demodulator data strobe generation mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   347   * Definition in Ifx_DSADC.DICFG.B.STROBE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   348   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   349  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   350  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   351      IfxDsadc_SampleStrobe_noDataStrobe            = 0, /**< \brief No data strobe */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   352      IfxDsadc_SampleStrobe_sampleOnRisingEdge      = 1, /**< \brief Direct clock, a sample trigger is generated at each rising clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   353      IfxDsadc_SampleStrobe_sampleOnFallingEdge     = 2, /**< \brief Direct clock, a sample trigger is generated at each falling clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   354      IfxDsadc_SampleStrobe_sampleOnBothEdges       = 3, /**< \brief Double data, a sample trigger is generated at each rising and falling clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   355      IfxDsadc_SampleStrobe_reserved                = 4, /**< \brief don't use */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   356      IfxDsadc_SampleStrobe_sampleOnTwoRisingEdges  = 5, /**< \brief Double clock, a sample trigger is generated at every 2nd rising clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   357      IfxDsadc_SampleStrobe_sampleOnTwoFallingEdges = 6  /**< \brief Double clock, a sample trigger is generated at every 2nd falling clock edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   358  } IfxDsadc_SampleStrobe;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   359  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   360  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   361   * Definition in Ifx_DSADC.CLC.B.EDIS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   362   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   363  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   364  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   365      IfxDsadc_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   366      IfxDsadc_SleepMode_disable = 1  /**< \brief disables sleep mode */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   367  } IfxDsadc_SleepMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   368  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   369  /** \brief Timestamp trigger mode\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   370   * Definition in Ifx_DSADC.DICFG.B.TSTRMODE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   371   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   372  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   373  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   374      IfxDsadc_TimestampTrigger_noTrigger   = 0,  /**< \brief No timestamp trigger */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   375      IfxDsadc_TimestampTrigger_fallingEdge = 1,  /**< \brief Trigger event upon a falling edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   376      IfxDsadc_TimestampTrigger_risingEdge  = 2,  /**< \brief Trigger event upon a rising edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   377      IfxDsadc_TimestampTrigger_eachEdge    = 3   /**< \brief Trigger event upon each edge */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   378  } IfxDsadc_TimestampTrigger;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   379  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   380  /** \brief Trigger select\n
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   381   * Definition in Ifx_DSADC.DICFG.B.TRSEL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   382   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   383  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   384  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   385      IfxDsadc_TriggerInput_a = 0,  /**< \brief dsadc trig 0 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   386      IfxDsadc_TriggerInput_b = 1,  /**< \brief dsadc trig 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   387      IfxDsadc_TriggerInput_c = 2,  /**< \brief vadc trig 0 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   388      IfxDsadc_TriggerInput_d = 3,  /**< \brief vadc trig 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   389      IfxDsadc_TriggerInput_e = 4,  /**< \brief external pin e */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   390      IfxDsadc_TriggerInput_f = 5,  /**< \brief external pin f */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   391      IfxDsadc_TriggerInput_g = 6,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   392      IfxDsadc_TriggerInput_h = 7
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   393  } IfxDsadc_TriggerInput;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   394  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   395  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   397  /** \addtogroup IfxLld_Dsadc_Std_Operative
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   398   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   399  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   400  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   402  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   403  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   404  /** \brief Sets the sensitivity of the module to sleep signal
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   405   * \param dsadc pointer to DSADC registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   406   * \param mode mode selection (enable/disable)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   407   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   408   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   409  IFX_INLINE void IfxDsadc_setSleepMode(Ifx_DSADC *dsadc, IfxDsadc_SleepMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   410  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   411  /** \brief Enables the conversion of multiple channels
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   412   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   413   * \param modulatorMask the modulator which should be running (bitwise selection)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   414   * \param channelMask the channels which should be scanned (bitwise selection)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   415   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   416   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   417   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   418   *     // enable the conversion of all 6 DSADC channels
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   419   *     IfxDsadc_startScan(&MODULE_DSADC, 0x3FU, 0x3FU);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   420   *     // results are now available in IFXDSADC(ds).CH[x].RESM.B.RESULT (x=0..5)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   421   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   422   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   423   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   424  IFX_INLINE void IfxDsadc_startScan(Ifx_DSADC *dsadc, uint32 modulatorMask, uint32 channelMask);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   425  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   426  /** \brief Disables the conversion of multiple channels
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   427   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   428   * \param modulatorMask the modulator which should be disabled (bitwise selection)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   429   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   430   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   431   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   432   *     // disable the modulators of all 6 DSADC channels
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   433   *     IfxDsadc_stopScan(&MODULE_DSADC, 0x3FU);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   434   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   435   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   436   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   437  IFX_INLINE void IfxDsadc_stopScan(Ifx_DSADC *dsadc, uint32 modulatorMask);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   438  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   439  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   440  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   441  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   442  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   443  /** \brief resets the DSADC kernel
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   444   * \param dsadc pointer to DSADC registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   445   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   446   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   447  IFX_EXTERN void IfxDsadc_resetModule(Ifx_DSADC *dsadc);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   448  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   449  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   450  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   451  /** \addtogroup IfxLld_Dsadc_Std_Support
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   452   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   453  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   454  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   455  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   456  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   457  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   458  /** \brief Get result from the auxiliary chain
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   459   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   460   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   461   * \return result from the auxiliary chain
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   462   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   463  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   464  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   465  /** \brief Get the main comb decimation factor
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   466   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   467   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   468   * \return the main comb decimation factor
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   469   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   470  IFX_INLINE uint16 IfxDsadc_getMainCombDecimation(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   471  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   472  /** \brief Get result from the main chain
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   473   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   474   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   475   * \return result from the main chain
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   476   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   477  IFX_INLINE sint16 IfxDsadc_getMainResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   478  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   479  /** \brief Return TRUE if DSADC module is enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   480   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   481   * \return TRUE if DSADC module is enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   482   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   483  IFX_INLINE boolean IfxDsadc_isModuleEnabled(Ifx_DSADC *dsadc);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   484  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   485  /** \brief Set the carrier waveform mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   486   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   487   * \param waveformMode the waveform mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   488   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   489   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   490  IFX_INLINE void IfxDsadc_setCarrierMode(Ifx_DSADC *dsadc, IfxDsadc_CarrierWaveformMode waveformMode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   491  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   492  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   493  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   494  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   495  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   496  /** \brief Get the sample frequency of the integrator output in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   497   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   498   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   499   * \return frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   500   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   501  IFX_EXTERN float32 IfxDsadc_getIntegratorOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   502  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   503  /** \brief Get the sample frequency of the main COMB filter output in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   504   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   505   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   506   * \return frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   507   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   508  IFX_EXTERN float32 IfxDsadc_getMainCombOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   509  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   510  /** \brief Estimate the group delay of main-chain filters in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   511   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   512   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   513   * \return delay in seconds
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   514   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   515  IFX_EXTERN float32 IfxDsadc_getMainGroupDelay(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   516  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   517  /** \brief Get the modulator clock frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   518   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   519   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   520   * \return frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   521   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   522  IFX_EXTERN float32 IfxDsadc_getModulatorClockFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   523  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   524  /** \brief Get the input frequency of DSADC in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   525   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   526   * \return frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   527   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   528  IFX_EXTERN float32 IfxDsadc_getModulatorInputClockFreq(Ifx_DSADC *dsadc);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   529  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   530  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   531  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   532  /** \addtogroup IfxLld_Dsadc_Std_Interrupt
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   533   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   534  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   535  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   536  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   537  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   538  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   539  /** \brief Address/pointer to the interrupt source register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   540   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   541   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   542   * \return Address/pointer to the interrupt source register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   543   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   544  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getAuxSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   545  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   546  /** \brief Get the interrupt source register for a Main event
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   547   * \param dsadc Pointer to the DSADC register space
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   548   * \param channel Channel Id
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   549   * \return Address/pointer to the interrupt source register
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   550   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   551  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getMainSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   552  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   553  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   554  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   555  /** \addtogroup IfxLld_Dsadc_Std_IO
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   556   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   557  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   558  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   559  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   560  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   561  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   562  /** \brief Initializes a CGPWM output
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   563   * \param cgPwm the CGPWM Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   564   * \param pinMode the pin output mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   565   * \param padDriver the pad driver mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   566   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   567   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   568  IFX_INLINE void IfxDsadc_initCgPwmPin(const IfxDsadc_Cgpwm_Out *cgPwm, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   569  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   570  /** \brief Initializes a CIN input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   571   * \param cIn the CIN Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   572   * \param cInMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   573   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   574   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   575   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   576  IFX_INLINE void IfxDsadc_initCinPin(const IfxDsadc_Cin_In *cIn, IfxPort_InputMode cInMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   577  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   578  /** \brief Initializes a COUT output
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   579   * \param cout the COUT Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   580   * \param pinMode the pin output mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   581   * \param padDriver the pad driver mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   582   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   583   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   584  IFX_INLINE void IfxDsadc_initCoutPin(const IfxDsadc_Cout_Out *cout, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   585  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   586  /** \brief Initializes a DIN input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   587   * \param dIn the DIN Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   588   * \param dInMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   589   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   590   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   591   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   592  IFX_INLINE void IfxDsadc_initDinPin(const IfxDsadc_Din_In *dIn, IfxPort_InputMode dInMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   593  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   594  /** \brief Initializes a DS input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   595   * \param dsn the DSN Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   596   * \param pinMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   597   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   598   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   599   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   600  IFX_INLINE void IfxDsadc_initDsnPin(const IfxDsadc_Dsn_In *dsn, IfxPort_InputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   601  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   602  /** \brief Initializes a DS input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   603   * \param dsp the DSP Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   604   * \param pinMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   605   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   606   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   607   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   608  IFX_INLINE void IfxDsadc_initDspPin(const IfxDsadc_Dsp_In *dsp, IfxPort_InputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   609  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   610  /** \brief Initializes a ITR input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   611   * \param itr the ITR Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   612   * \param itrMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   613   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   614   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   615   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   616  IFX_INLINE void IfxDsadc_initItrPin(const IfxDsadc_Itr_In *itr, IfxPort_InputMode itrMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   617  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   618  /** \brief Initializes a SG input
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   619   * \param sg the SG Pin which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   620   * \param pinMode the pin input mode which should be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   621   * \param padDriver Pad Driver Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   622   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   623   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   624  IFX_INLINE void IfxDsadc_initSgPin(const IfxDsadc_Sg_In *sg, IfxPort_InputMode pinMode, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   625  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   626  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   627  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   628  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   629  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   630  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   631  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   632  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   633  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   634      return (sint16)(dsadc->CH[channel].RESA.B.RESULT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   635  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   636  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   637  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   638  IFX_INLINE uint16 IfxDsadc_getMainCombDecimation(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   639  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   640      return (uint16)(1U + dsadc->CH[channel].FCFGC.B.CFMDF);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   641  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   642  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   643  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   644  IFX_INLINE sint16 IfxDsadc_getMainResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   645  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   646      return (sint16)(dsadc->CH[channel].RESM.B.RESULT);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   647  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   648  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   649  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   650  IFX_INLINE void IfxDsadc_initCgPwmPin(const IfxDsadc_Cgpwm_Out *cgPwm, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   651  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   652      IfxPort_setPinModeOutput(cgPwm->pin.port, cgPwm->pin.pinIndex, pinMode, cgPwm->select);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   653      IfxPort_setPinPadDriver(cgPwm->pin.port, cgPwm->pin.pinIndex, padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   654  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   655  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   656  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   657  IFX_INLINE void IfxDsadc_initCinPin(const IfxDsadc_Cin_In *cIn, IfxPort_InputMode cInMode, IfxPort_PadDriver padDriver)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   658  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   659      if (cIn->pin.port != NULL_PTR)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   660      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   661          IfxPort_setPinModeInput(cIn->pin.port, cIn->pin.pinIndex, cInMode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   662          IfxPort_setPinPadDriver(cIn->pin.port, cIn->pin.pinIndex, padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   663      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   664  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   665  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   666  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   667  IFX_INLINE void IfxDsadc_initCoutPin(const IfxDsadc_Cout_Out *cout, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   668  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   669      if (cout->pin.port != NULL_PTR)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   670      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   671          IfxPort_setPinModeOutput(cout->pin.port, cout->pin.pinIndex, pinMode, cout->select);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   672          IfxPort_setPinPadDriver(cout->pin.port, cout->pin.pinIndex, padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   673      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   674  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   675  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   676  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   677  IFX_INLINE void IfxDsadc_initDinPin(const IfxDsadc_Din_In *dIn, IfxPort_InputMode dInMode, IfxPort_PadDriver padDriver)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   678  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   679      if (dIn->pin.port != NULL_PTR)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   680      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   681          IfxPort_setPinModeInput(dIn->pin.port, dIn->pin.pinIndex, dInMode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   682          IfxPort_setPinPadDriver(dIn->pin.port, dIn->pin.pinIndex, padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   683      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   684  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   685  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   686  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   687  IFX_INLINE void IfxDsadc_initDsnPin(const IfxDsadc_Dsn_In *dsn, IfxPort_InputMode pinMode, IfxPort_PadDriver padDriver)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   688  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   689      if (dsn->pin.port != NULL_PTR)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   690      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   691          IfxPort_setPinModeInput(dsn->pin.port, dsn->pin.pinIndex, pinMode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   692          IfxPort_setPinPadDriver(dsn->pin.port, dsn->pin.pinIndex, padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   693      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   694  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   695  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   696  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   697  IFX_INLINE void IfxDsadc_initDspPin(const IfxDsadc_Dsp_In *dsp, IfxPort_InputMode pinMode, IfxPort_PadDriver padDriver)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   698  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   699      if (dsp->pin.port != NULL_PTR)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   700      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   701          IfxPort_setPinModeInput(dsp->pin.port, dsp->pin.pinIndex, pinMode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   702          IfxPort_setPinPadDriver(dsp->pin.port, dsp->pin.pinIndex, padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   703      }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   704  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   705  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   706  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   707  IFX_INLINE void IfxDsadc_initItrPin(const IfxDsadc_Itr_In *itr, IfxPort_InputMode itrMode, IfxPort_PadDriver padDriver)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   708  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   709      if (itr->pin.port != NULL_PTR)
	ld.w	d15,[a15]8
.L530:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   709      if (itr->pin.port != NULL_PTR)      (inlined)
	jeq	d15,#0,.L29
.L531:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   710      {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   711          IfxPort_setPinModeInput(itr->pin.port, itr->pin.pinIndex, itrMode);
	ld.a	a4,[a15]8
.L532:
	ld.bu	d4,[a15]12
.L291:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    45   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    46   * \defgroup IfxLld_Port_Std_Enum Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    47   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    48   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    49   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    50   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    51   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    52   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    53   * \ingroup IfxLld_Port_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    54   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    55  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    56  #ifndef IFXPORT_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    57  #define IFXPORT_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    58  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    59  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    60  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    61  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    62  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    63  #include "_Impl/IfxPort_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    64  #include "Scu/Std/IfxScuWdt.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    65  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    66  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    67  /*--------------------------------Enumerations--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    68  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    69  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    70  /** \addtogroup IfxLld_Port_Std_Enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    71   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    72  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    73   * HSCT module.declared in MODULE_PORTx.LPCRx
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    74   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    76  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    77      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    78      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    79  } IfxPort_ControlledBy;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    80  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    81  /** \brief Ifx_P output modification modes definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    82   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    83  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    84  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    85      IfxPort_InputMode_undefined    = -1,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    86      IfxPort_InputMode_noPullDevice = 0 << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    87          IfxPort_InputMode_pullDown = 1U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    88          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    89  } IfxPort_InputMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    90  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    91  /** \brief Ifx_P input / output mode definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    92   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    93   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    94   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    95  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    96  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    97      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    98      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    99      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   100      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   101      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   102      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   103      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   104      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   105      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   106      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   107      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   108      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   109      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   110      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   111      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   112      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   113      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   114      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   115      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   116  } IfxPort_Mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   117  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   118  /** \brief Pin output alternate index
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   119   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   120  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   121  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   122      IfxPort_OutputIdx_general  = 0x10U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   123          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   124          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   125          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   126          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   127          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   128          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   129          IfxPort_OutputIdx_alt7 = 0x17U << 3
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   130  } IfxPort_OutputIdx;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   131  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   132  /** \brief Pin output mode definition
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   133   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   134  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   135  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   136      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   137          IfxPort_OutputMode_openDrain = 0x18U << 3
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_OutputMode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   139  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   140  /** \brief Pad driver mode definition (strength and slew rate).
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   141   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   142   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   143   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   144  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   145  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   146      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   147      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   148      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   149      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   150      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   151      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   152      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   153      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   154      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   155      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   156      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   157      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_PadDriver;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   159  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   160  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   161   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   162  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   163  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   164      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   165      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   166  } IfxPort_PadSupply;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   167  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   168  /** \brief Ifx_P output modification modes definition.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   169   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   170   * \see Ifx_P.OMR, IfxPort_setPinState()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   171   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   172  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   173  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   174      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   175      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   176      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   177      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   178  } IfxPort_State;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   179  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   180  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   181  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   182  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   183  /*-----------------------------Data Structures--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   184  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   185  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   186  /** \addtogroup IfxLld_Port_Std_DataStructures
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   187   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   188  /** \brief Defines a pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   189   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   190  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   191  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   192      Ifx_P *port;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   193      uint8  pinIndex;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   194  } IfxPort_Pin;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   195  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   196  /** \brief To configure pins
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   197   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   198  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   199  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   200      Ifx_P            *port;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   201      uint8             pinIndex;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   202      IfxPort_OutputIdx mode;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   203      IfxPort_PadDriver padDriver;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   204  } IfxPort_Pin_Config;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   205  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   206  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   207  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   208  /** \addtogroup IfxLld_Port_Std_SinglePin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   209   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   210  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   211  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   212  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   213  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   214  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   215  /** \brief Return the port state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   216   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   217   * \param pinIndex Specifies the pin for which the state should be returned.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   218   * \return Returns TRUE the pin is high; FALSE the pin is low
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   219   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   220   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   221   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   222   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   223   *      // ...
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   224   *    }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   225   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   226   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   227   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   228  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   229  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   230  /** \brief Set the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   231   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   232   * \param pinIndex Specifies the pin to be set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   233   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   234   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   235   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   236   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   237   * IfxPort_setPinHigh(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   238   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   239   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   240   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   241   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   242   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   243  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   244  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   245  /** \brief Reset the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   246   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   247   * \param pinIndex Specifies the pin to be reset.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   248   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   249   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   250   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   251   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   252   * IfxPort_setPinLow(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   253   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   254   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   255   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   256   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   257   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   258  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   259  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   260  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   261   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   262   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   263   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   264   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   265   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   266   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   267   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   268   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   269   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   270   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   271   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   272  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   273  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   274  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   275   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   276   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   277   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   278   * \param index Specifies the alternate (or general purpose) output channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   279   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   280   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   281   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   282   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   283   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   284   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   285   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   286   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   287  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   288  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   289  /** \brief Set / Resets / Toggle the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   290   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   291   * \param pinIndex Specifies the pin to modify.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   292   * \param action Specifies the action: set, reset, toggle.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   293   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   294   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   295   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   296   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   297   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   298   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   299   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   300   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   301   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   302   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   303  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   304  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   305  /** \brief Toggle the port output.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin to be toggled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   308   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   309   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   311   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   312   * IfxPort_togglePin(&MODULE_P33, 0);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   313   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   314   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   315   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   316   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   317   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   318  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   319  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   320  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   321  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   322  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   323  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   324  /** \brief Disable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   325   * This function disables the emergency stop function. A check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   326   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   327   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   328   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   329   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   330   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   331   * /code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   332   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   333   *     {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   334   *         // failed to disable emergency stop for P33.0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   335   *     }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   336   * /endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   337   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   338   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   339   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   340   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   341  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   342  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   343  /** \brief Enable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   344   * This function enables the emergency stop function. A check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   345   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   346   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   347   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   348   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   350   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   351   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   352   *       // failed to enable emergency stop for P33.0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   353   *     }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   354   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   355   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   356   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   357   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   358   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   359  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   360  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   361  /** \brief Configure the port input / output mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   362   * Also Configures the P40/P41 Port for digital functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   363   * which bydefault support analog functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   364   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   365   * \param pinIndex Specifies the pin to be configured.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   366   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   367   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   368   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   369   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   370   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   371   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   372   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   373   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   374   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   375  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   376  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   377  /** \brief Configure the pad driver mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   378   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   379   * \param pinIndex Specifies the pin for which the mode will be set.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   380   * \param padDriver Specifies the driver mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   381   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   382   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   383   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   384   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   385   * // enable strong 3.3V driver
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   386   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   387   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   388   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   389   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   390  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   391  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   392  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   393  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   394  /** \addtogroup IfxLld_Port_Std_PortGroup
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   395   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   396  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   397  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   398  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   399  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   400  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   401  /** \brief Return the port group state
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   402   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   403   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   404   * \param mask selects the pins which should be read (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   405   * \return Returns the selected pin values
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   406   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   407   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   408   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   409   * // read the current value of P33[7:0]
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   410   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   411   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   412   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   413   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   414  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   415  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   416  /** \brief Set the port group state.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   417   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   418   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   419   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   420   * \param data specifies the value which should be set
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   421   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   422   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   423   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   424   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   425   * // configure P33.[7:0] as GPIO outputs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   426   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   427   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   428   * // set initial value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   429   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   430   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   431   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   432   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   433  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   434  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   435  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   436  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   437  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   438  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   439  /** \brief Returns the module address of the selected Port module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   440   * \param port Pointer to PORT module registers
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   441   * \return PORT module register address
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   442   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   443  IFX_EXTERN Ifx_P *IfxPort_getAddress(IfxPort_Index port);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   444  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   445  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   446   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   447   * \return port index of IfxModule_IndexMap. return -1 in case of unknown port index.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   448   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   449  IFX_EXTERN IfxPort_Index IfxPort_getIndex(Ifx_P *port);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   450  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   451  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   452   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   453   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   454   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   455   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   456   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   457   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   458   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   459   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   460   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   461   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   462   *  \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   463   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   464   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   465  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   466  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   467  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   468   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   469   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   470   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   471   * \param mode Specifies the port pin mode.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   472   * \param index Specifies the alternate (or general purpose) output channel.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   473   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   474   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   475   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   476   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   477   * // configure P33.[7:0] as GPIO outputs
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   478   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   479   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   480   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   481   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   482  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   483  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   484  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   485   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   486   * \param pinIndex start at the given pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   487   * \param mask selects the pins which should be modified (starting from pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   488   * \param padDriver Specifies the pad driver strength.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   489   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   490   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   491   * Coding example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   492   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   493   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   494   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   495   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   496   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   497   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   498  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   499  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   500  /** \brief set LVDSH mode (configured for Port21)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   501   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   502   * \param pinIndex specifies pin  to be modified
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   503   * \param mode specifes the mode of pin
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   504   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   505   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   506   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   508  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   509  /** \brief set LVDSM mode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   510   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   511   * \param pinIndex specifies pin to be modified
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   512   * \param lvdsPadDriver select speed grade of LVDS Pad
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   513   * \param padSupply select the PAD supply (5/3.3V)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   514   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   515   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   516  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   517  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   518  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   519  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   521  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   523  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   524  /** \brief Disable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   525   * This function disables the emergency stop function. No check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   526   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   527   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   528   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   529   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   530   * \see IfxPort_disableEmergencyStop()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   531   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   532   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   533  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   534  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   535  /** \brief Enable the emergency stop function.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   536   * This function enables the emergency stop function. No check is done on port functionality.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   537   * \param port Pointer to the port which should be accessed.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   538   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   539   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   540   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   541   * \see IfxPort_enableEmergencyStop()
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   542   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   543   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   544  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   545  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   546  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   547  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   548  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   549  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   550  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   551  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   552      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   553  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   554  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   555  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   556  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   557  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   558      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   559  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   560  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   561  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   562  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   563  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   564      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   565  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   566  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   567  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   568  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   569  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   570      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   571  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   572  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   573  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   574  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   575  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   576      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   577  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   578  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   579  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   580  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   581  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   582      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
	extr.u	d5,d0,#0,#8
	call	IfxPort_setPinMode
.L292:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   712  nput(itr->pin.port, itr->pin.pinIndex, itrMode);
	ld.a	a4,[a15]8
.L533:
	ld.bu	d4,[a15]12
.L534:
	mov	d5,d8
	call	IfxPort_setPinPadDriver

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Std\IfxDsadc.h	   709      if (itr->pin.port != NULL_PTR)      (inlined)
.L29:
.L28:
.L19:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   252  onst IfxDsadc_Dsadc_ChannelConfig IfxDsadc_Dsadc_defaultChannelConfig = {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   253          .modulator              = {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   254              .positiveInput      = IfxDsadc_InputConfig_inputPin,
	ret
.L210:
	
__IfxDsadc_Dsadc_initChannel_function_end:
	.size	IfxDsadc_Dsadc_initChannel,__IfxDsadc_Dsadc_initChannel_function_end-IfxDsadc_Dsadc_initChannel
.L96:
	; End of function
	
	.sdecl	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initChannelConfig',code,cluster('IfxDsadc_Dsadc_initChannelConfig')
	.sect	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initChannelConfig'
	.align	2
	
	.global	IfxDsadc_Dsadc_initChannelConfig

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   255              .negativeInput      = IfxDsadc_InputConfig_referenceGround,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   256              .inputGain          = IfxDsadc_InputGain_factor1,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   257              .inputPin           = IfxDsadc_InputPin_a,
; Function IfxDsadc_Dsadc_initChannelConfig
.L54:
IfxDsadc_Dsadc_initChannelConfig:	.type	func
	sub.a	a10,#72
.L408:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   258              .modulatorClockFreq = 10.0e6,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   259              .commonModeVoltage  = IfxDsadc_CommonModeVoltage_c,
	movh.a	a15,#@his(.1.ini)
	lea	a15,[a15]@los(.1.ini)
	lea	a15,[a15]0
.L539:
	lea	a2,[a10]0
	mov.a	a6,#7
.L30:
	ld.d	e0,[a15+]8
	st.d	[a2+]8,e0
	loop	a6,.L30
	ld.w	d15,[a15+]
	st.w	[a2+],d15
.L540:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   260          },
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   261          .demodulator            = {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   262              .inputDataSource    = IfxDsadc_InputDataSource_onChipStandAlone,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   263              .triggerInput       = IfxDsadc_TriggerInput_a,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   264              .integrationTrigger = IfxDsadc_IntegratorTrigger_bypassed,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   265              .timestampTrigger   = IfxDsadc_TimestampTrigger_noTrigger,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   266              .sampleClockSource  = IfxDsadc_SampleClockSource_internal,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   267              .sampleStrobe       = IfxDsadc_SampleStrobe_sampleOnRisingEdge,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   268          },
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   269          .combFilter             = {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   270              .bypassed         = FALSE,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   271              .combFilterType   = IfxDsadc_MainCombFilterType_comb3,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   272              .combFilterShift  = IfxDsadc_MainCombFilterShift_noShift,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   273              .serviceRequest   = IfxDsadc_MainServiceRequest_everyNewResult,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   274              .decimationFactor = 50,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   275              .startValue       = 0,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   276          },
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   277          .firFilter              = {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   278              .fir0Enabled        = FALSE,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   279              .fir1Enabled        = FALSE,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   280              .offsetCompensation = FALSE,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   281              .dataShift          = IfxDsadc_FirDataShift_noShift,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   282              .internalShift      = IfxDsadc_FirInternalShift_noShift,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   283          },
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   284          .integrator             = {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   285              .windowSize        = IfxDsadc_IntegrationWindowSize_internalControl,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   286              .discardCount      = 0,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   287              .integrationCount  = 20,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   288              .integrationCycles = 1,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   289          },
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   290          .auxFilter              = {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   291              .bypassed         = TRUE,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   292              .combFilterType   = IfxDsadc_AuxCombFilterType_comb1,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   293              .combFilterShift  = IfxDsadc_AuxCombFilterShift_noShift,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   294              .serviceRequest   = IfxDsadc_AuxServiceRequest_never,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   295              .eventSelect      = IfxDsadc_AuxEvent_everyNewResult,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   296              .eventGate        = IfxDsadc_AuxGate_definedByESEL,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   297              .decimationFactor = 4,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   298          },
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   299          .rectifier              = {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   300              .enabled    = FALSE,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   301              .signSource = IfxDsadc_RectifierSignSource_onChipGenerator,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   302              .signDelay  = 0,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   303              .signPeriod = 0,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   304          },
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   305  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   306          .channelPins            = NULL_PTR
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   307      };
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   308  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   309      *config           = IfxDsadc_Dsadc_defaultChannelConfig;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   310      config->channelId = IfxDsadc_ChannelId_0;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   311  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   312      if (dsadc != NULL_PTR)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   313      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   314          config->module = dsadc->dsadc;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   315      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   316      else
	lea	a15,[a10]0
.L541:
	lea	a2,[a4]0
	mov.a	a6,#7
.L31:
	ld.d	e0,[a15+]8
	st.d	[a2+]8,e0
	loop	a6,.L31
	ld.w	d15,[a15+]
	st.w	[a2+],d15
.L542:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   317      {
	mov	d15,#0
.L543:
	st.b	[a4]4,d15
.L544:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   318          config->module = NULL_PTR;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   319      }
	jz.a	a5,.L32
.L545:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   320  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   321  
	ld.a	a15,[a5]
.L546:
	st.a	[a4],a15
.L547:
	j	.L33
.L32:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   322  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   323  IFX_STATIC void IfxDsadc_Dsadc_initCombFilter(IfxDsadc_Dsadc_Channel *channel, const IfxDsadc_Dsadc_CombFilterConfig *config)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   324  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   325      Ifx_DSADC_CH_FCFGC fcfgc;
	mov.a	a15,#0
.L548:
	st.a	[a4],a15
.L33:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   326  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   327      fcfgc.U                   = 0;
	ret
.L293:
	
__IfxDsadc_Dsadc_initChannelConfig_function_end:
	.size	IfxDsadc_Dsadc_initChannelConfig,__IfxDsadc_Dsadc_initChannelConfig_function_end-IfxDsadc_Dsadc_initChannelConfig
.L101:
	; End of function
	
	.sdecl	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initCombFilter',code,cluster('IfxDsadc_Dsadc_initCombFilter')
	.sect	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initCombFilter'
	.align	2
	

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   328  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   329      fcfgc.B.CFMDF             = config->decimationFactor - 1;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   330      fcfgc.B.CFMC              = config->combFilterType;
; Function IfxDsadc_Dsadc_initCombFilter
.L56:
IfxDsadc_Dsadc_initCombFilter:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   331      fcfgc.B.CFEN              = (config->bypassed == FALSE) ? 1 : 0;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   332  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   333      fcfgc.B.MFSC              = config->combFilterShift;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   334  
	mov	d0,#0
.L409:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   335      fcfgc.B.SRGM              = config->serviceRequest;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   336      fcfgc.B.CFMSV             = config->startValue - 1;
	ld.hu	d15,[a5]4
.L613:
	add	d15,#-1
	extr.u	d15,d15,#0,#8
.L614:
	insert	d0,d0,d15,#0,#8
.L615:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   337  
	ld.bu	d15,[a5]1
.L616:
	insert	d0,d0,d15,#8,#2
.L617:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   338      (channel->channel)->FCFGC = fcfgc;
	ld.bu	d15,[a5]
.L618:
	jne	d15,#0,.L34
.L619:
	mov	d15,#1
.L620:
	j	.L35
.L34:
	mov	d15,#0
.L35:
	insert	d0,d0,d15,#10,#1
.L621:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   339  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   340  
	ld.bu	d15,[a5]2
.L622:
	insert	d0,d0,d15,#12,#2
.L623:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   341  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   342  IFX_STATIC void IfxDsadc_Dsadc_initDemodulator(IfxDsadc_Dsadc_Channel *channel, const IfxDsadc_Dsadc_DemodulatorConfig *config)
	ld.bu	d15,[a5]3
.L624:
	insert	d0,d0,d15,#14,#2
.L625:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   343  {
	ld.hu	d15,[a5]6
.L626:
	add	d15,#-1
	extr.u	d15,d15,#0,#8
.L627:
	insert	d0,d0,d15,#16,#8
.L628:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   344      Ifx_DSADC_CH_DICFG dicfg;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   345  
	ld.a	a15,[a4]4
.L629:
	st.w	[a15]20,d0
.L630:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   346      dicfg.U                   = 0;
	ret
.L328:
	
__IfxDsadc_Dsadc_initCombFilter_function_end:
	.size	IfxDsadc_Dsadc_initCombFilter,__IfxDsadc_Dsadc_initCombFilter_function_end-IfxDsadc_Dsadc_initCombFilter
.L126:
	; End of function
	
	.sdecl	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initDemodulator',code,cluster('IfxDsadc_Dsadc_initDemodulator')
	.sect	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initDemodulator'
	.align	2
	

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   347  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   348      dicfg.B.DSRC              = config->inputDataSource;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   349      dicfg.B.DSWC              = 1; // enable write access for this bitfield
; Function IfxDsadc_Dsadc_initDemodulator
.L58:
IfxDsadc_Dsadc_initDemodulator:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   350  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   351      dicfg.B.ITRMODE           = config->integrationTrigger;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   352      dicfg.B.TSTRMODE          = config->timestampTrigger;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   353      dicfg.B.TRSEL             = config->triggerInput;
	mov	d0,#0
.L410:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   354      dicfg.B.TRWC              = 1; // enable write access for these bitfields
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   355  
	ld.bu	d15,[a5]
.L635:
	insert	d0,d0,d15,#0,#4
.L636:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   356      dicfg.B.CSRC              = config->sampleClockSource;
	mov	d15,#1
.L637:
	insert	d0,d0,d15,#7,#1
.L638:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   357      dicfg.B.STROBE            = config->sampleStrobe;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   358      dicfg.B.SCWC              = 1; // enable write access for these bitfields
	ld.bu	d15,[a5]2
.L639:
	insert	d0,d0,d15,#8,#2
.L640:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   359  
	ld.bu	d15,[a5]3
.L641:
	insert	d0,d0,d15,#10,#2
.L642:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   360      (channel->channel)->DICFG = dicfg;
	ld.bu	d15,[a5]1
.L643:
	insert	d0,d0,d15,#12,#3
.L644:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   361  }
	mov	d15,#1
.L645:
	insert	d0,d0,d15,#15,#1
.L646:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   362  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   363  
	ld.bu	d15,[a5]4
.L647:
	insert	d0,d0,d15,#16,#4
.L648:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   364  IFX_STATIC void IfxDsadc_Dsadc_initFirFilter(IfxDsadc_Dsadc_Channel *channel, const IfxDsadc_Dsadc_FirFilterConfig *config)
	ld.bu	d15,[a5]5
.L649:
	insert	d0,d0,d15,#20,#4
.L650:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   365  {
	mov	d15,#1
.L651:
	insert	d0,d0,d15,#31,#1
.L652:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   366      Ifx_DSADC_CH_FCFGM fcfgm;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   367  
	ld.a	a15,[a4]4
.L653:
	st.w	[a15]8,d0
.L654:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   368      fcfgm.U                   = 0;
	ret
.L334:
	
__IfxDsadc_Dsadc_initDemodulator_function_end:
	.size	IfxDsadc_Dsadc_initDemodulator,__IfxDsadc_Dsadc_initDemodulator_function_end-IfxDsadc_Dsadc_initDemodulator
.L131:
	; End of function
	
	.sdecl	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initFirFilter',code,cluster('IfxDsadc_Dsadc_initFirFilter')
	.sect	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initFirFilter'
	.align	2
	

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   369  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   370      fcfgm.B.FIR0EN            = (config->fir0Enabled != FALSE) ? 1 : 0;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   371      fcfgm.B.FIR1EN            = (config->fir1Enabled != FALSE) ? 1 : 0;
; Function IfxDsadc_Dsadc_initFirFilter
.L60:
IfxDsadc_Dsadc_initFirFilter:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   372      fcfgm.B.OCEN              = (config->offsetCompensation != FALSE) ? 1 : 0;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   373      fcfgm.B.DSH               = config->dataShift;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   374      fcfgm.B.FSH               = config->internalShift;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   375  
	mov	d0,#0
.L411:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   376      (channel->channel)->FCFGM = fcfgm;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   377  }
	ld.bu	d15,[a5]
.L659:
	jeq	d15,#0,.L36
.L660:
	mov	d15,#1
.L661:
	j	.L37
.L36:
	mov	d15,#0
.L37:
	insert	d0,d0,d15,#0,#1
.L662:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   378  
	ld.bu	d15,[a5]1
.L663:
	jeq	d15,#0,.L38
.L664:
	mov	d15,#1
.L665:
	j	.L39
.L38:
	mov	d15,#0
.L39:
	insert	d0,d0,d15,#1,#1
.L666:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   379  
	ld.bu	d15,[a5]2
.L667:
	jeq	d15,#0,.L40
.L668:
	mov	d15,#1
.L669:
	j	.L41
.L40:
	mov	d15,#0
.L41:
	insert	d0,d0,d15,#2,#1
.L670:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   380  IFX_STATIC void IfxDsadc_Dsadc_initIntegrator(IfxDsadc_Dsadc_Channel *channel, const IfxDsadc_Dsadc_IntegratorConfig *config)
	ld.bu	d15,[a5]3
.L671:
	insert	d0,d0,d15,#3,#2
.L672:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   381  {
	ld.bu	d15,[a5]4
.L673:
	insert	d0,d0,d15,#5,#1
.L674:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   382      Ifx_DSADC_CH_IWCTR iwctr;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   383  
	ld.a	a15,[a4]4
.L675:
	st.w	[a15]16,d0
.L676:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   384      iwctr.U                   = 0;
	ret
.L340:
	
__IfxDsadc_Dsadc_initFirFilter_function_end:
	.size	IfxDsadc_Dsadc_initFirFilter,__IfxDsadc_Dsadc_initFirFilter_function_end-IfxDsadc_Dsadc_initFirFilter
.L136:
	; End of function
	
	.sdecl	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initIntegrator',code,cluster('IfxDsadc_Dsadc_initIntegrator')
	.sect	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initIntegrator'
	.align	2
	

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   385  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   386      iwctr.B.REPVAL            = config->integrationCycles - 1;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   387      iwctr.B.NVALDIS           = config->discardCount;
; Function IfxDsadc_Dsadc_initIntegrator
.L62:
IfxDsadc_Dsadc_initIntegrator:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   388      iwctr.B.IWS               = config->windowSize;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   389      iwctr.B.NVALINT           = config->integrationCount - 1;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   390  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   391      (channel->channel)->IWCTR = iwctr;
	mov	d15,#0
.L412:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   392  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   393  
	ld.hu	d0,[a5]6
.L681:
	add	d0,#-1
	extr.u	d0,d0,#0,#8
.L682:
	insert	d15,d15,d0,#12,#4
.L683:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   394  
	ld.hu	d0,[a5]2
	extr.u	d0,d0,#0,#8
.L684:
	insert	d15,d15,d0,#16,#6
.L685:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   395  IFX_STATIC void IfxDsadc_Dsadc_initModulator(IfxDsadc_Dsadc_Channel *channel, const IfxDsadc_Dsadc_ModulatorConfig *config)
	ld.bu	d0,[a5]
.L686:
	insert	d15,d15,d0,#23,#1
.L687:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   396  {
	ld.hu	d0,[a5]4
.L688:
	add	d0,#-1
	extr.u	d0,d0,#0,#8
.L689:
	insert	d15,d15,d0,#24,#6
.L690:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   397      Ifx_DSADC_CH_MODCFG modcfg;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   398  
	ld.a	a15,[a4]4
.L691:
	st.w	[a15]32,d15
.L692:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   399      modcfg.U         = 0;
	ret
.L346:
	
__IfxDsadc_Dsadc_initIntegrator_function_end:
	.size	IfxDsadc_Dsadc_initIntegrator,__IfxDsadc_Dsadc_initIntegrator_function_end-IfxDsadc_Dsadc_initIntegrator
.L141:
	; End of function
	
	.sdecl	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initModulator',code,cluster('IfxDsadc_Dsadc_initModulator')
	.sect	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initModulator'
	.align	2
	

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   400  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   401      modcfg.B.INCFGP  = config->positiveInput;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   402      modcfg.B.INCFGN  = config->negativeInput;
; Function IfxDsadc_Dsadc_initModulator
.L64:
IfxDsadc_Dsadc_initModulator:	.type	func
	sub.a	a10,#8
.L413:
	mov.aa	a12,a4
.L416:
	mov.aa	a15,a5
.L417:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   403      modcfg.B.GAINSEL = config->inputGain;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   404      modcfg.B.INSEL   = config->inputPin;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   405      modcfg.B.INCWC   = 1;       // enable write access for these bitfields
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   406  
	mov	d8,#0
.L419:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   407      float32 targetFreq = config->modulatorClockFreq;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   408      float32 sourceFreq = IfxDsadc_getModulatorInputClockFreq(channel->module);
	ld.bu	d15,[a15]
.L697:
	insert	d8,d8,d15,#0,#2
.L698:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   409      modcfg.B.DIVM              = IfxDsadc_Dsadc_calcDIVx(sourceFreq, &targetFreq);
	ld.bu	d15,[a15]1
.L699:
	insert	d8,d8,d15,#2,#2
.L700:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   410      modcfg.B.DWC               = 1; // enable write access for this bitfield
	ld.bu	d15,[a15]2
.L701:
	insert	d8,d8,d15,#4,#4
.L702:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   411  
	ld.bu	d15,[a15]3
.L703:
	insert	d8,d8,d15,#8,#2
.L704:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   412      modcfg.B.CMVS              = config->commonModeVoltage;
	mov	d15,#1
.L705:
	insert	d8,d8,d15,#15,#1
.L358:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   413      modcfg.B.GCEN              = 0; // normal operation (calibration mode disabled)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   414      modcfg.B.MWC               = 1; // enable write access for these bitfields
	ld.w	d15,[a15]4
.L706:
	st.w	[a10],d15
.L707:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   415  
	ld.a	a4,[a12]
.L414:
	call	IfxDsadc_getModulatorInputClockFreq
.L415:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   416      (channel->channel)->MODCFG = modcfg;
	lea	a4,[a10]0
	mov	d4,d2
.L421:
	call	IfxDsadc_Dsadc_calcDIVx
.L420:
	extr.u	d15,d2,#0,#8
	insert	d8,d8,d15,#16,#4
.L708:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   417  }
	mov	d15,#1
.L709:
	insert	d8,d8,d15,#23,#1
.L710:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   418  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   419  
	ld.bu	d15,[a15]8
.L711:
	insert	d8,d8,d15,#24,#2
.L712:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   420  void IfxDsadc_Dsadc_initModule(IfxDsadc_Dsadc *dsadc, const IfxDsadc_Dsadc_Config *config)
	mov	d15,#0
.L713:
	insert	d8,d8,d15,#28,#1
.L714:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   421  {
	mov	d15,#1
.L715:
	insert	d8,d8,d15,#31,#1
.L716:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   422      Ifx_DSADC *dsadcSFR = config->dsadc;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   423  
	ld.a	a15,[a12]4
.L418:
	st.w	[a15],d8
.L717:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   424      dsadc->dsadc = dsadcSFR;
	ret
.L352:
	
__IfxDsadc_Dsadc_initModulator_function_end:
	.size	IfxDsadc_Dsadc_initModulator,__IfxDsadc_Dsadc_initModulator_function_end-IfxDsadc_Dsadc_initModulator
.L146:
	; End of function
	
	.sdecl	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initModule',code,cluster('IfxDsadc_Dsadc_initModule')
	.sect	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initModule'
	.align	2
	
	.global	IfxDsadc_Dsadc_initModule

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   425  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   426      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   427          uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; Function IfxDsadc_Dsadc_initModule
.L66:
IfxDsadc_Dsadc_initModule:	.type	func
	mov.aa	a15,a5
.L423:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   428          IfxScuWdt_clearCpuEndinit(passwd);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   429          dsadcSFR->CLC.U = 0x00000000;
	ld.a	a12,[a15]
.L424:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   430  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   431          if (dsadcSFR->CLC.U)
	st.a	[a4],a12
.L197:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   432          {}                       // sync access
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   433  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   434          IfxScuWdt_setCpuEndinit(passwd);
	call	IfxScuWdt_getCpuWatchdogPassword
.L422:
	mov	d8,d2
.L426:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   435  
	mov	d4,d8
.L425:
	call	IfxScuWdt_clearCpuEndinit
.L427:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   436          {
	mov	d15,#0
.L475:
	st.w	[a12],d15
.L476:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   437              Ifx_DSADC_GLOBCFG globcfg;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   438              globcfg.U           = dsadcSFR->GLOBCFG.U;
	ld.w	d15,[a12]
.L477:
	jeq	d15,#0,.L42
.L42:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   439  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   440              globcfg.B.MCSEL     = config->modulatorClockSelect;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   441              globcfg.B.LOSUP     = config->lowPowerSupply;
	mov	d4,d8
.L428:
	call	IfxScuWdt_setCpuEndinit
.L201:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   442              globcfg.B.PSWC      = 1;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   443  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   444              dsadcSFR->GLOBCFG.U = globcfg.U;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   445          }
	ld.w	d0,[a12]128
.L429:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   446      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   447  }
	ld.bu	d15,[a15]4
.L478:
	insert	d0,d0,d15,#0,#3
.L479:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   448  
	ld.bu	d15,[a15]5
.L480:
	insert	d0,d0,d15,#20,#1
.L481:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   449  
	mov	d15,#1
.L482:
	insert	d0,d0,d15,#23,#1
.L483:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   450  void IfxDsadc_Dsadc_initModuleConfig(IfxDsadc_Dsadc_Config *config, Ifx_DSADC *dsadc)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   451  {
	st.w	[a12]128,d0
.L198:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   452      const IfxDsadc_Dsadc_Config IfxDsadc_Dsadc_defaultConfig = {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   453          .modulatorClockSelect = IfxDsadc_ModulatorClock_fDSD,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   454          .lowPowerSupply       = IfxDsadc_LowPowerSupply_5V
	ret
.L191:
	
__IfxDsadc_Dsadc_initModule_function_end:
	.size	IfxDsadc_Dsadc_initModule,__IfxDsadc_Dsadc_initModule_function_end-IfxDsadc_Dsadc_initModule
.L86:
	; End of function
	
	.sdecl	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initModuleConfig',code,cluster('IfxDsadc_Dsadc_initModuleConfig')
	.sect	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initModuleConfig'
	.align	2
	
	.global	IfxDsadc_Dsadc_initModuleConfig

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   455      };
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   456  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   457      *config       = IfxDsadc_Dsadc_defaultConfig;
; Function IfxDsadc_Dsadc_initModuleConfig
.L68:
IfxDsadc_Dsadc_initModuleConfig:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   458      config->dsadc = dsadc;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   459  }
	movh.a	a15,#@his(.2.ini)
	lea	a15,[a15]@los(.2.ini)
	ld.d	e0,[a15]0
.L430:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   460  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   461  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   462  IFX_STATIC void IfxDsadc_Dsadc_initRectifier(IfxDsadc_Dsadc_Channel *channel, const IfxDsadc_Dsadc_RectifierConfig *config)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   463  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   464      Ifx_DSADC_CH_RECTCFG rect;
	st.d	[a4]0,e0
.L488:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   465  
	st.a	[a4],a5
.L489:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   466      rect.U                              = 0;
	ret
.L204:
	
__IfxDsadc_Dsadc_initModuleConfig_function_end:
	.size	IfxDsadc_Dsadc_initModuleConfig,__IfxDsadc_Dsadc_initModuleConfig_function_end-IfxDsadc_Dsadc_initModuleConfig
.L91:
	; End of function
	
	.sdecl	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initRectifier',code,cluster('IfxDsadc_Dsadc_initRectifier')
	.sect	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initRectifier'
	.align	2
	

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   467      rect.B.RFEN                         = config->enabled;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   468      rect.B.SSRC                         = config->signSource;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   469      (channel->channel)->RECTCFG         = rect;
; Function IfxDsadc_Dsadc_initRectifier
.L70:
IfxDsadc_Dsadc_initRectifier:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   470      (channel->channel)->CGSYNC.B.SDPOS  = config->signDelay;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   471      (channel->channel)->CGSYNC.B.SDNEG  = config->signDelay + (config->signPeriod / 2);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   472      (channel->channel)->IWCTR.B.NVALDIS = config->signDelay + 1;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   473  }
	mov	d0,#0
.L431:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   474  
	ld.bu	d15,[a5]
.L722:
	insert	d0,d0,d15,#0,#1
.L723:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   475  
	ld.bu	d15,[a5]1
.L724:
	insert	d0,d0,d15,#4,#2
.L725:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   476  void IfxDsadc_Dsadc_initCarrierGenConfig(IfxDsadc_Dsadc_CarrierGenConfig *config)
	ld.a	a15,[a4]4
.L726:
	st.w	[a15]168,d0
.L727:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   477  {
	ld.a	a15,[a4]4
	ld.a	a2,[a4]4
.L728:
	ld.bu	d0,[a2]162
.L432:
	ld.bu	d15,[a5]2
.L729:
	insert	d15,d0,d15,#0,#8
	st.b	[a15]162,d15
.L730:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   478      config->bitReversed         = FALSE;
	ld.a	a15,[a4]4
	ld.a	a2,[a4]4
.L731:
	ld.bu	d0,[a2]163
.L732:
	ld.bu	d15,[a5]2
.L733:
	ld.bu	d1,[a5]3
.L734:
	ge	d2,d1,#0
	caddn	d1,d2,d1,#1
	sha	d1,#-1
.L735:
	add	d15,d1
	extr.u	d15,d15,#0,#8
.L736:
	insert	d15,d0,d15,#0,#8
	st.b	[a15]163,d15
.L737:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   479      config->carrierWaveformMode = IfxDsadc_CarrierWaveformMode_sine;
	ld.a	a15,[a4]4
	ld.a	a2,[a4]4
.L738:
	ld.bu	d0,[a2]34
.L739:
	ld.bu	d15,[a5]2
.L740:
	add	d15,#1
	extr.u	d15,d15,#0,#8
.L741:
	insert	d15,d0,d15,#0,#6
	st.b	[a15]34,d15
.L742:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   480      config->frequency           = 10000;
	ret
.L361:
	
__IfxDsadc_Dsadc_initRectifier_function_end:
	.size	IfxDsadc_Dsadc_initRectifier,__IfxDsadc_Dsadc_initRectifier_function_end-IfxDsadc_Dsadc_initRectifier
.L151:
	; End of function
	
	.sdecl	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initCarrierGenConfig',code,cluster('IfxDsadc_Dsadc_initCarrierGenConfig')
	.sect	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initCarrierGenConfig'
	.align	2
	
	.global	IfxDsadc_Dsadc_initCarrierGenConfig

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   481      config->inverted            = FALSE;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   482      config->pinDriver           = IfxPort_PadDriver_cmosAutomotiveSpeed1;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   483      config->pinMode             = IfxPort_OutputMode_pushPull;
; Function IfxDsadc_Dsadc_initCarrierGenConfig
.L72:
IfxDsadc_Dsadc_initCarrierGenConfig:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   484      config->pinNeg              = NULL_PTR;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   485      config->pinPos              = NULL_PTR;
	mov	d15,#0
.L561:
	st.b	[a4]2,d15
.L562:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   486  }
	mov	d15,#3
.L563:
	st.b	[a4],d15
.L564:


	mov	d15,#16384


	addih	d15,d15,#17948
.L565:


	st.w	[a4]4,d15
.L566:


	mov	d15,#0
.L567:


	st.b	[a4]1,d15
.L568:


	mov	d15,#0
.L569:


	st.b	[a4]17,d15
.L570:


	mov	d15,#128
.L571:


	st.b	[a4]16,d15
.L572:


	mov.a	a15,#0
.L573:


	st.a	[a4]12,a15
.L574:


	mov.a	a15,#0
.L575:


	st.a	[a4]8,a15
.L576:


	ret
.L309:
	
__IfxDsadc_Dsadc_initCarrierGenConfig_function_end:
	.size	IfxDsadc_Dsadc_initCarrierGenConfig,__IfxDsadc_Dsadc_initCarrierGenConfig_function_end-IfxDsadc_Dsadc_initCarrierGenConfig
.L111:
	; End of function
	
	.sdecl	'.rodata.IfxDsadc_Dsadc..1.ini',data,rom
	.sect	'.rodata.IfxDsadc_Dsadc..1.ini'
	.align	4
.1.ini:	.type	object
	.size	.1.ini,68
	.space	9
	.byte	3
	.space	2
	.word	1259902592
	.byte	2
	.space	8
	.byte	1
	.space	3
	.byte	2
	.space	1
	.byte	3
	.half	50
	.space	14
	.half	20,1
	.byte	1
	.space	5
	.byte	4
	.space	9
	.sdecl	'.rodata.IfxDsadc_Dsadc..2.ini',data,rom
	.sect	'.rodata.IfxDsadc_Dsadc..2.ini'
	.align	4
.2.ini:	.type	object
	.size	.2.ini,8
	.space	4
	.byte	1
	.space	3
	.calls	'IfxDsadc_Dsadc_initCarrierGen','IfxDsadc_getModulatorInputClockFreq'
	.calls	'IfxDsadc_Dsadc_initCarrierGen','IfxDsadc_Dsadc_calcDIVx'
	.calls	'IfxDsadc_Dsadc_initCarrierGen','IfxPort_setPinMode'
	.calls	'IfxDsadc_Dsadc_initCarrierGen','IfxPort_setPinPadDriver'
	.calls	'IfxDsadc_Dsadc_initChannel','IfxDsadc_Dsadc_initModulator'
	.calls	'IfxDsadc_Dsadc_initChannel','IfxDsadc_Dsadc_initDemodulator'
	.calls	'IfxDsadc_Dsadc_initChannel','IfxDsadc_Dsadc_initCombFilter'
	.calls	'IfxDsadc_Dsadc_initChannel','IfxDsadc_Dsadc_initFirFilter'
	.calls	'IfxDsadc_Dsadc_initChannel','IfxDsadc_Dsadc_initIntegrator'
	.calls	'IfxDsadc_Dsadc_initChannel','IfxDsadc_Dsadc_initAuxFilter'
	.calls	'IfxDsadc_Dsadc_initChannel','IfxDsadc_Dsadc_initRectifier'
	.calls	'IfxDsadc_Dsadc_initChannel','IfxPort_setPinMode'
	.calls	'IfxDsadc_Dsadc_initChannel','IfxPort_setPinPadDriver'
	.calls	'IfxDsadc_Dsadc_initModulator','IfxDsadc_getModulatorInputClockFreq'
	.calls	'IfxDsadc_Dsadc_initModulator','IfxDsadc_Dsadc_calcDIVx'
	.calls	'IfxDsadc_Dsadc_initModule','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'IfxDsadc_Dsadc_initModule','IfxScuWdt_clearCpuEndinit'
	.calls	'IfxDsadc_Dsadc_initModule','IfxScuWdt_setCpuEndinit'
	.calls	'IfxDsadc_Dsadc_calcDIVx','',0
	.calls	'IfxDsadc_Dsadc_getAuxResult','',0
	.calls	'IfxDsadc_Dsadc_initAuxFilter','',0
	.calls	'IfxDsadc_Dsadc_initCarrierGen','',8
	.calls	'IfxDsadc_Dsadc_initChannel','',0
	.calls	'IfxDsadc_Dsadc_initChannelConfig','',72
	.calls	'IfxDsadc_Dsadc_initCombFilter','',0
	.calls	'IfxDsadc_Dsadc_initDemodulator','',0
	.calls	'IfxDsadc_Dsadc_initFirFilter','',0
	.calls	'IfxDsadc_Dsadc_initIntegrator','',0
	.calls	'IfxDsadc_Dsadc_initModulator','',8
	.calls	'IfxDsadc_Dsadc_initModule','',0
	.calls	'IfxDsadc_Dsadc_initModuleConfig','',0
	.calls	'IfxDsadc_Dsadc_initRectifier','',0
	.extern	IfxScuWdt_clearCpuEndinit
	.extern	IfxScuWdt_setCpuEndinit
	.extern	IfxScuWdt_getCpuWatchdogPassword
	.extern	IfxPort_setPinMode
	.extern	IfxPort_setPinPadDriver
	.extern	IfxDsadc_getModulatorInputClockFreq
	.calls	'IfxDsadc_Dsadc_initCarrierGenConfig','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L74:
	.word	97184
	.half	3
	.word	.L75
	.byte	4
.L73:
	.byte	1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L76
	.byte	2,1,1,3
	.word	177
	.byte	4
	.byte	'Ifx__jump_and_link',0,3,1,61,17,1,1,5
	.byte	'fun',0,1,61,43
	.word	180
	.byte	6,0,7
	.byte	'__fract',0,4,128,1
.L160:
	.byte	7
	.byte	'float',0,4,4,8
	.byte	'Ifx__float_to_fract',0,3,1,152,2,18
	.word	225
	.byte	1,1,5
	.byte	'a',0,1,152,2,44
	.word	237
	.byte	6,0,4
	.byte	'Ifx__stopPerfCounters',0,3,1,172,2,17,1,1,6,0,7
	.byte	'unsigned long long int',0,8,7,9
	.byte	'void',0,3
	.word	349
	.byte	8
	.byte	'__ld64',0,3,2,135,1,19
	.word	323
	.byte	1,1,5
	.byte	'addr',0,2,135,1,32
	.word	355
	.byte	6,0,4
	.byte	'__st64',0,3,2,143,1,17,1,1,5
	.byte	'addr',0,2,143,1,30
	.word	355
	.byte	5
	.byte	'value',0,2,143,1,43
	.word	323
	.byte	6,0,7
	.byte	'unsigned int',0,4,7,7
	.byte	'int',0,4,5,7
	.byte	'unsigned char',0,1,8,10
	.byte	'_Ifx_SRC_SRCR_Bits',0,4,45,16,4,11
	.byte	'SRPN',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	464
	.byte	2,6,2,35,1,11
	.byte	'SRE',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'TOS',0,1
	.word	464
	.byte	2,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	464
	.byte	3,0,2,35,1,11
	.byte	'ECC',0,1
	.word	464
	.byte	6,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	464
	.byte	2,0,2,35,2,11
	.byte	'SRR',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'CLRR',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'SETR',0,1
	.word	464
	.byte	1,5,2,35,3,11
	.byte	'IOV',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'IOVCLR',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'SWS',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'SWSCLR',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	464
	.byte	1,0,2,35,3,0,12,4,70,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	481
	.byte	4,2,35,0,0,14
	.word	771
	.byte	3
	.word	810
	.byte	4
	.byte	'IfxSrc_clearRequest',0,3,3,250,1,17,1,1,5
	.byte	'src',0,3,250,1,60
	.word	815
	.byte	6,0,7
	.byte	'unsigned int',0,4,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,6,241,8,16,4,11
	.byte	'ENDINIT',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	863
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	863
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	863
	.byte	16,0,2,35,0,0,12,6,247,14,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	879
	.byte	4,2,35,0,0
.L199:
	.byte	7
	.byte	'unsigned short int',0,2,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,6,250,8,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	2,6,2,35,0,11
	.byte	'IR0',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	464
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,12,6,255,14,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1037
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,6,137,9,16,4,11
	.byte	'AE',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	464
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	1015
	.byte	16,0,2,35,2,0,12,6,135,15,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1281
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU',0,6,175,15,25,12,13
	.byte	'CON0',0
	.word	975
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	1241
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	1472
	.byte	4,2,35,8,0,14
	.word	1512
	.byte	3
	.word	1575
	.byte	4
	.byte	'IfxScuWdt_clearCpuEndinitInline',0,3,5,181,3,17,1,1,5
	.byte	'watchdog',0,5,181,3,65
	.word	1580
	.byte	5
	.byte	'password',0,5,181,3,82
	.word	1015
	.byte	6,0,4
	.byte	'IfxScuWdt_setCpuEndinitInline',0,3,5,140,4,17,1,1,5
	.byte	'watchdog',0,5,140,4,63
	.word	1580
	.byte	5
	.byte	'password',0,5,140,4,80
	.word	1015
	.byte	6,0,8
	.byte	'IfxScuWdt_getCpuWatchdogPasswordInline',0,3,5,227,3,19
	.word	1015
	.byte	1,1,5
	.byte	'watchdog',0,5,227,3,74
	.word	1580
	.byte	6,0,15,8,156,1,9,1,16
	.byte	'IfxCpu_ResourceCpu_0',0,0,16
	.byte	'IfxCpu_ResourceCpu_1',0,1,16
	.byte	'IfxCpu_ResourceCpu_none',0,2,0,8
	.byte	'IfxCpu_getCoreIndex',0,3,7,141,6,31
	.word	1810
	.byte	1,1,6,0,8
	.byte	'IfxCpu_areInterruptsEnabled',0,3,7,139,5,20
	.word	464
	.byte	1,1,6,0,7
	.byte	'unsigned long int',0,4,7,8
	.byte	'IfxCpu_getPerformanceCounter',0,3,7,161,6,19
	.word	1965
	.byte	1,1,5
	.byte	'address',0,7,161,6,55
	.word	1015
	.byte	6,0,8
	.byte	'IfxCpu_getPerformanceCounterStickyOverflow',0,3,7,190,6,20
	.word	464
	.byte	1,1,5
	.byte	'address',0,7,190,6,70
	.word	1015
	.byte	6,0,4
	.byte	'IfxCpu_updatePerformanceCounter',0,3,7,172,8,17,1,1,5
	.byte	'address',0,7,172,8,56
	.word	1965
	.byte	5
	.byte	'count',0,7,172,8,72
	.word	1965
	.byte	17,6,0,0,10
	.byte	'_Ifx_P_OUT_Bits',0,10,143,3,16,4,11
	.byte	'P0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,12,10,181,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2196
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMR_Bits',0,10,169,2,16,4,11
	.byte	'PS0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'PCL0',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	464
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	464
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	464
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	464
	.byte	1,0,2,35,3,0,12,10,133,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2512
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ID_Bits',0,10,110,16,4,11
	.byte	'MODREV',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	1015
	.byte	16,0,2,35,2,0,12,10,148,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3083
	.byte	4,2,35,0,0,18,4
	.word	464
	.byte	19,3,0,10
	.byte	'_Ifx_P_IOCR0_Bits',0,10,140,1,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	3,5,2,35,0,11
	.byte	'PC0',0,1
	.word	464
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	464
	.byte	3,5,2,35,1,11
	.byte	'PC1',0,1
	.word	464
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	464
	.byte	3,5,2,35,2,11
	.byte	'PC2',0,1
	.word	464
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	3,5,2,35,3,11
	.byte	'PC3',0,1
	.word	464
	.byte	5,0,2,35,3,0,12,10,164,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3211
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR4_Bits',0,10,166,1,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	3,5,2,35,0,11
	.byte	'PC4',0,1
	.word	464
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	464
	.byte	3,5,2,35,1,11
	.byte	'PC5',0,1
	.word	464
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	464
	.byte	3,5,2,35,2,11
	.byte	'PC6',0,1
	.word	464
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	3,5,2,35,3,11
	.byte	'PC7',0,1
	.word	464
	.byte	5,0,2,35,3,0,12,10,180,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3426
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR8_Bits',0,10,179,1,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	3,5,2,35,0,11
	.byte	'PC8',0,1
	.word	464
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	464
	.byte	3,5,2,35,1,11
	.byte	'PC9',0,1
	.word	464
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	464
	.byte	3,5,2,35,2,11
	.byte	'PC10',0,1
	.word	464
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	3,5,2,35,3,11
	.byte	'PC11',0,1
	.word	464
	.byte	5,0,2,35,3,0,12,10,188,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3641
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR12_Bits',0,10,153,1,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	3,5,2,35,0,11
	.byte	'PC12',0,1
	.word	464
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	464
	.byte	3,5,2,35,1,11
	.byte	'PC13',0,1
	.word	464
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	464
	.byte	3,5,2,35,2,11
	.byte	'PC14',0,1
	.word	464
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	3,5,2,35,3,11
	.byte	'PC15',0,1
	.word	464
	.byte	5,0,2,35,3,0,12,10,172,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3858
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IN_Bits',0,10,118,16,4,11
	.byte	'P0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,12,10,156,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4078
	.byte	4,2,35,0,0,18,24
	.word	464
	.byte	19,23,0,10
	.byte	'_Ifx_P_PDR0_Bits',0,10,205,3,16,4,11
	.byte	'PD0',0,1
	.word	464
	.byte	3,5,2,35,0,11
	.byte	'PL0',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'PD1',0,1
	.word	464
	.byte	3,1,2,35,0,11
	.byte	'PL1',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'PD2',0,1
	.word	464
	.byte	3,5,2,35,1,11
	.byte	'PL2',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'PD3',0,1
	.word	464
	.byte	3,1,2,35,1,11
	.byte	'PL3',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'PD4',0,1
	.word	464
	.byte	3,5,2,35,2,11
	.byte	'PL4',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'PD5',0,1
	.word	464
	.byte	3,1,2,35,2,11
	.byte	'PL5',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'PD6',0,1
	.word	464
	.byte	3,5,2,35,3,11
	.byte	'PL6',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'PD7',0,1
	.word	464
	.byte	3,1,2,35,3,11
	.byte	'PL7',0,1
	.word	464
	.byte	1,0,2,35,3,0,12,10,205,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4401
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PDR1_Bits',0,10,226,3,16,4,11
	.byte	'PD8',0,1
	.word	464
	.byte	3,5,2,35,0,11
	.byte	'PL8',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'PD9',0,1
	.word	464
	.byte	3,1,2,35,0,11
	.byte	'PL9',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'PD10',0,1
	.word	464
	.byte	3,5,2,35,1,11
	.byte	'PL10',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'PD11',0,1
	.word	464
	.byte	3,1,2,35,1,11
	.byte	'PL11',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'PD12',0,1
	.word	464
	.byte	3,5,2,35,2,11
	.byte	'PL12',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'PD13',0,1
	.word	464
	.byte	3,1,2,35,2,11
	.byte	'PL13',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'PD14',0,1
	.word	464
	.byte	3,5,2,35,3,11
	.byte	'PL14',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'PD15',0,1
	.word	464
	.byte	3,1,2,35,3,11
	.byte	'PL15',0,1
	.word	464
	.byte	1,0,2,35,3,0,12,10,213,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4705
	.byte	4,2,35,0,0,18,8
	.word	464
	.byte	19,7,0,10
	.byte	'_Ifx_P_ESR_Bits',0,10,88,16,4,11
	.byte	'EN0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,12,10,140,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5030
	.byte	4,2,35,0,0,18,12
	.word	464
	.byte	19,11,0,10
	.byte	'_Ifx_P_PDISC_Bits',0,10,183,3,16,4,11
	.byte	'PDIS0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'PDIS2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'PDIS3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'PDIS4',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'PDIS5',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'PDIS6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'PDIS7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'PDIS8',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'PDIS9',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'PDIS10',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'PDIS11',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'PDIS12',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'PDIS13',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'PDIS14',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'PDIS15',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,12,10,197,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5370
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PCSR_Bits',0,10,165,3,16,4,11
	.byte	'SEL0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'SEL1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'SEL2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'SEL3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'SEL4',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'SEL5',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'SEL6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'SEL7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	464
	.byte	2,6,2,35,1,11
	.byte	'SEL10',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'SEL11',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	441
	.byte	19,1,2,35,0,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,12,10,189,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5736
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR0_Bits',0,10,206,2,16,4,11
	.byte	'PS0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	441
	.byte	28,0,2,35,0,0,12,10,149,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6022
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR4_Bits',0,10,227,2,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	4,4,2,35,0,11
	.byte	'PS4',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	441
	.byte	24,0,2,35,0,0,12,10,165,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6169
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR8_Bits',0,10,238,2,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'PS8',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	441
	.byte	20,0,2,35,0,0,12,10,173,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6338
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR12_Bits',0,10,216,2,16,4,11
	.byte	'reserved_0',0,2
	.word	1015
	.byte	12,4,2,35,0,11
	.byte	'PS12',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,12,10,157,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6510
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR0_Bits',0,10,232,1,16,4,11
	.byte	'reserved_0',0,2
	.word	1015
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	1015
	.byte	12,0,2,35,2,0,12,10,229,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6685
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR4_Bits',0,10,253,1,16,4,11
	.byte	'reserved_0',0,4
	.word	441
	.byte	20,12,2,35,0,11
	.byte	'PCL4',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	464
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	464
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	8,0,2,35,3,0,12,10,245,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6859
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR8_Bits',0,10,136,2,16,4,11
	.byte	'reserved_0',0,4
	.word	441
	.byte	24,8,2,35,0,11
	.byte	'PCL8',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	464
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	464
	.byte	4,0,2,35,3,0,12,10,253,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7033
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR12_Bits',0,10,243,1,16,4,11
	.byte	'reserved_0',0,4
	.word	441
	.byte	28,4,2,35,0,11
	.byte	'PCL12',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	464
	.byte	1,0,2,35,3,0,12,10,237,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7209
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR_Bits',0,10,249,2,16,4,11
	.byte	'PS0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,12,10,141,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7365
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR_Bits',0,10,147,2,16,4,11
	.byte	'reserved_0',0,2
	.word	1015
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	464
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	464
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	464
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	464
	.byte	1,0,2,35,3,0,12,10,221,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7698
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR0_Bits',0,10,192,1,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	441
	.byte	30,0,2,35,0,0,12,10,196,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8046
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR1_Bits',0,10,200,1,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	441
	.byte	30,0,2,35,0,0,10
	.byte	'_Ifx_P_LPCR1_P21_Bits',0,10,208,1,16,4,11
	.byte	'RDIS_CTRL',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'RX_DIS',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'TERM',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'LRXTERM',0,1
	.word	464
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	441
	.byte	24,0,2,35,0,0,12,10,204,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8170
	.byte	4,2,35,0,13
	.byte	'B_P21',0
	.word	8254
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR2_Bits',0,10,218,1,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'LVDSR',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'LVDSRL',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	464
	.byte	2,4,2,35,1,11
	.byte	'TDIS_CTRL',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'TX_DIS',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'TX_PD',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'TX_PWDPD',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,12,10,213,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8434
	.byte	4,2,35,0,0,18,76
	.word	464
	.byte	19,75,0,10
	.byte	'_Ifx_P_ACCEN1_Bits',0,10,82,16,4,11
	.byte	'reserved_0',0,4
	.word	441
	.byte	32,0,2,35,0,0,12,10,132,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8687
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ACCEN0_Bits',0,10,45,16,4,11
	.byte	'EN0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	464
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	464
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	464
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	464
	.byte	1,0,2,35,3,0,12,10,252,3,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8774
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P',0,10,229,5,25,128,2,13
	.byte	'OUT',0
	.word	2472
	.byte	4,2,35,0,13
	.byte	'OMR',0
	.word	3043
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	3162
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3202
	.byte	4,2,35,12,13
	.byte	'IOCR0',0
	.word	3386
	.byte	4,2,35,16,13
	.byte	'IOCR4',0
	.word	3601
	.byte	4,2,35,20,13
	.byte	'IOCR8',0
	.word	3818
	.byte	4,2,35,24,13
	.byte	'IOCR12',0
	.word	4038
	.byte	4,2,35,28,13
	.byte	'reserved_20',0
	.word	3202
	.byte	4,2,35,32,13
	.byte	'IN',0
	.word	4352
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	4392
	.byte	24,2,35,40,13
	.byte	'PDR0',0
	.word	4665
	.byte	4,2,35,64,13
	.byte	'PDR1',0
	.word	4981
	.byte	4,2,35,68,13
	.byte	'reserved_48',0
	.word	5021
	.byte	8,2,35,72,13
	.byte	'ESR',0
	.word	5321
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	5361
	.byte	12,2,35,84,13
	.byte	'PDISC',0
	.word	5696
	.byte	4,2,35,96,13
	.byte	'PCSR',0
	.word	5982
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	5021
	.byte	8,2,35,104,13
	.byte	'OMSR0',0
	.word	6129
	.byte	4,2,35,112,13
	.byte	'OMSR4',0
	.word	6298
	.byte	4,2,35,116,13
	.byte	'OMSR8',0
	.word	6470
	.byte	4,2,35,120,13
	.byte	'OMSR12',0
	.word	6645
	.byte	4,2,35,124,13
	.byte	'OMCR0',0
	.word	6819
	.byte	4,3,35,128,1,13
	.byte	'OMCR4',0
	.word	6993
	.byte	4,3,35,132,1,13
	.byte	'OMCR8',0
	.word	7169
	.byte	4,3,35,136,1,13
	.byte	'OMCR12',0
	.word	7325
	.byte	4,3,35,140,1,13
	.byte	'OMSR',0
	.word	7658
	.byte	4,3,35,144,1,13
	.byte	'OMCR',0
	.word	8006
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	5021
	.byte	8,3,35,152,1,13
	.byte	'LPCR0',0
	.word	8130
	.byte	4,3,35,160,1,13
	.byte	'LPCR1',0
	.word	8379
	.byte	4,3,35,164,1,13
	.byte	'LPCR2',0
	.word	8638
	.byte	4,3,35,168,1,13
	.byte	'reserved_A4',0
	.word	8678
	.byte	76,3,35,172,1,13
	.byte	'ACCEN1',0
	.word	8734
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	9301
	.byte	4,3,35,252,1,0,14
	.word	9341
	.byte	3
	.word	9944
	.byte	15,9,83,9,1,16
	.byte	'IfxPort_InputMode_undefined',0,127,16
	.byte	'IfxPort_InputMode_noPullDevice',0,0,16
	.byte	'IfxPort_InputMode_pullDown',0,8,16
	.byte	'IfxPort_InputMode_pullUp',0,16,0
.L231:
	.byte	4
	.byte	'IfxPort_setPinModeInput',0,3,9,196,4,17,1,1
.L234:
	.byte	5
	.byte	'port',0,9,196,4,48
	.word	9949
.L236:
	.byte	5
	.byte	'pinIndex',0,9,196,4,60
	.word	464
.L238:
	.byte	5
	.byte	'mode',0,9,196,4,88
	.word	9954
.L240:
	.byte	6,0,15,9,134,1,9,1,16
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,16
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,15,9,120,9,1,16
	.byte	'IfxPort_OutputIdx_general',0,128,1,16
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,16
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,16
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,16
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,16
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,16
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,16
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0
.L175:
	.byte	4
	.byte	'IfxPort_setPinModeOutput',0,3,9,202,4,17,1,1
.L178:
	.byte	5
	.byte	'port',0,9,202,4,49
	.word	9949
.L180:
	.byte	5
	.byte	'pinIndex',0,9,202,4,61
	.word	464
.L182:
	.byte	5
	.byte	'mode',0,9,202,4,90
	.word	10159
.L184:
	.byte	5
	.byte	'index',0,9,202,4,114
	.word	10229
.L186:
	.byte	6,0,15,9,172,1,9,4,16
	.byte	'IfxPort_State_notChanged',0,0,16
	.byte	'IfxPort_State_high',0,1,16
	.byte	'IfxPort_State_low',0,128,128,4,16
	.byte	'IfxPort_State_toggled',0,129,128,4,0,4
	.byte	'IfxPort_setPinState',0,3,9,208,4,17,1,1,5
	.byte	'port',0,9,208,4,44
	.word	9949
	.byte	5
	.byte	'pinIndex',0,9,208,4,56
	.word	464
	.byte	5
	.byte	'action',0,9,208,4,80
	.word	10542
	.byte	6,0,10
	.byte	'_Ifx_DSADC_CLC_Bits',0,12,150,2,16,4,11
	.byte	'DISR',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	441
	.byte	28,0,2,35,0,0,12,12,186,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10723
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_DSADC_ID_Bits',0,12,251,2,16,4,11
	.byte	'MODREV',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	1015
	.byte	16,0,2,35,2,0,12,12,242,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10882
	.byte	4,2,35,0,0,18,28
	.word	464
	.byte	19,27,0,10
	.byte	'_Ifx_DSADC_OCS_Bits',0,12,163,3,16,4,11
	.byte	'reserved_0',0,4
	.word	441
	.byte	24,8,2,35,0,11
	.byte	'SUS',0,1
	.word	464
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	464
	.byte	2,0,2,35,3,0,12,12,154,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11015
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_DSADC_KRSTCLR_Bits',0,12,156,3,16,4,11
	.byte	'CLR',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	441
	.byte	31,0,2,35,0,0,12,12,146,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11177
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_DSADC_KRST1_Bits',0,12,149,3,16,4,11
	.byte	'RST',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	441
	.byte	31,0,2,35,0,0,12,12,138,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11285
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_DSADC_KRST0_Bits',0,12,141,3,16,4,11
	.byte	'RST',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	441
	.byte	30,0,2,35,0,0,12,12,130,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11391
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_DSADC_ACCEN0_Bits',0,12,45,16,4,11
	.byte	'EN0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	464
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	464
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	464
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	464
	.byte	1,0,2,35,3,0,12,12,178,3,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11516
	.byte	4,2,35,0,0,18,64
	.word	464
	.byte	19,63,0,10
	.byte	'_Ifx_DSADC_GLOBCFG_Bits',0,12,190,2,16,4,11
	.byte	'MCSEL',0,1
	.word	464
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	1015
	.byte	8,5,2,35,0,11
	.byte	'IRM0',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	464
	.byte	4,0,2,35,1,11
	.byte	'IBSEL',0,1
	.word	464
	.byte	4,4,2,35,2,11
	.byte	'LOSUP',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	464
	.byte	1,2,2,35,2,11
	.byte	'ICT',0,1
	.word	464
	.byte	1,1,2,35,2,11
	.byte	'PSWC',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	8,0,2,35,3,0
.L202:
	.byte	12,12,210,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12096
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_DSADC_GLOBRC_Bits',0,12,205,2,16,4,11
	.byte	'CH0RUN',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'CH2RUN',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'CH3RUN',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	1015
	.byte	12,0,2,35,0,11
	.byte	'M0RUN',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'M2RUN',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'M3RUN',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	1015
	.byte	12,0,2,35,2,0,12,12,218,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12356
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_DSADC_ACCPROT_Bits',0,12,82,16,4,11
	.byte	'RG00',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'RG01',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'RG02',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'RG03',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'RG04',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,2
	.word	1015
	.byte	9,2,2,35,0,11
	.byte	'RG10',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'RG11',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,12,12,186,3,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12621
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_DSADC_CGCFG_Bits',0,12,96,16,4,11
	.byte	'CGMOD',0,1
	.word	464
	.byte	2,6,2,35,0,11
	.byte	'BREV',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'SIGPOL',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'DIVCG',0,1
	.word	464
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	464
	.byte	7,1,2,35,1,11
	.byte	'RUN',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'BITCOUNT',0,1
	.word	464
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	464
	.byte	3,0,2,35,2,11
	.byte	'STEPCOUNT',0,1
	.word	464
	.byte	4,4,2,35,3,11
	.byte	'STEPS',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'STEPD',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'SGNCG',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	464
	.byte	1,0,2,35,3,0
.L157:
	.byte	12,12,194,3,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12848
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_DSADC_GLOBVCMH0_Bits',0,12,220,2,16,4,11
	.byte	'IN0PVC0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'IN0PVC1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	464
	.byte	2,4,2,35,0,11
	.byte	'IN0NVC0',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'IN0NVC1',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	1015
	.byte	10,0,2,35,0,11
	.byte	'IN2PVC0',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	464
	.byte	3,4,2,35,2,11
	.byte	'IN2NVC0',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	464
	.byte	3,0,2,35,2,11
	.byte	'IN3PVC0',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'IN3PVC1',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'IN3PVC2',0,1
	.word	464
	.byte	1,5,2,35,3,11
	.byte	'IN3PVC3',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'IN3NVC0',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'IN3NVC1',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'IN3NVC2',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'IN3NVC3',0,1
	.word	464
	.byte	1,0,2,35,3,0,12,12,226,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13159
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_DSADC_GLOBVCMH2_Bits',0,12,243,2,16,4,11
	.byte	'reserved_0',0,4
	.word	441
	.byte	29,3,2,35,0,11
	.byte	'VHON',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'VCMHS',0,1
	.word	464
	.byte	2,0,2,35,3,0,12,12,234,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13588
	.byte	4,2,35,0,0,18,20
	.word	464
	.byte	19,19,0,10
	.byte	'_Ifx_DSADC_IGCFG_Bits',0,12,131,3,16,4,11
	.byte	'DITRIM',0,1
	.word	464
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	1015
	.byte	13,0,2,35,0,11
	.byte	'GLOBSP',0,2
	.word	1015
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	464
	.byte	5,1,2,35,3,11
	.byte	'WREN',0,1
	.word	464
	.byte	1,0,2,35,3,0,12,12,250,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13725
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_DSADC_EVFLAG_Bits',0,12,160,2,16,4,11
	.byte	'RESEV0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'RESEV2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'RESEV3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	1015
	.byte	12,0,2,35,0,11
	.byte	'ALEV0',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'ALEV2',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'ALEV3',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	1015
	.byte	12,0,2,35,2,0,12,12,194,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13891
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_DSADC_EVFLAGCLR_Bits',0,12,175,2,16,4,11
	.byte	'RESEC0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'RESEC2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'RESEC3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	1015
	.byte	12,0,2,35,0,11
	.byte	'ALEC0',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'ALEC2',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'ALEC3',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	1015
	.byte	12,0,2,35,2,0,12,12,202,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14156
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_DSADC_CH_MODCFG_Bits',0,12,212,1,16,4,11
	.byte	'INCFGP',0,1
	.word	464
	.byte	2,6,2,35,0,11
	.byte	'INCFGN',0,1
	.word	464
	.byte	2,4,2,35,0,11
	.byte	'GAINSEL',0,1
	.word	464
	.byte	4,0,2,35,0,11
	.byte	'INSEL',0,1
	.word	464
	.byte	2,6,2,35,1,11
	.byte	'INMUX',0,1
	.word	464
	.byte	2,4,2,35,1,11
	.byte	'INMODE',0,1
	.word	464
	.byte	2,2,2,35,1,11
	.byte	'INMAC',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'INCWC',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'DIVM',0,1
	.word	464
	.byte	4,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	464
	.byte	3,1,2,35,2,11
	.byte	'DWC',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'CMVS',0,1
	.word	464
	.byte	2,6,2,35,3,11
	.byte	'MCFG',0,1
	.word	464
	.byte	2,4,2,35,3,11
	.byte	'GCEN',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'APC',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'MWC',0,1
	.word	464
	.byte	1,0,2,35,3,0
.L356:
	.byte	12,12,138,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14424
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_DSADC_CH_DICFG_Bits',0,12,130,1,16,4,11
	.byte	'DSRC',0,1
	.word	464
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	464
	.byte	3,1,2,35,0,11
	.byte	'DSWC',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'ITRMODE',0,1
	.word	464
	.byte	2,6,2,35,1,11
	.byte	'TSTRMODE',0,1
	.word	464
	.byte	2,4,2,35,1,11
	.byte	'TRSEL',0,1
	.word	464
	.byte	3,1,2,35,1,11
	.byte	'TRWC',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'CSRC',0,1
	.word	464
	.byte	4,4,2,35,2,11
	.byte	'STROBE',0,1
	.word	464
	.byte	4,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	7,1,2,35,3,11
	.byte	'SCWC',0,1
	.word	464
	.byte	1,0,2,35,3,0
.L338:
	.byte	12,12,218,3,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14793
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_DSADC_CH_FCFGM_Bits',0,12,173,1,16,4,11
	.byte	'FIR0EN',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'FIR1EN',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'OCEN',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'DSH',0,1
	.word	464
	.byte	2,3,2,35,0,11
	.byte	'FSH',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	441
	.byte	26,0,2,35,0,0
.L344:
	.byte	12,12,242,3,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15064
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_DSADC_CH_FCFGC_Bits',0,12,160,1,16,4,11
	.byte	'CFMDF',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'CFMC',0,1
	.word	464
	.byte	2,6,2,35,1,11
	.byte	'CFEN',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'MFSC',0,1
	.word	464
	.byte	2,2,2,35,1,11
	.byte	'SRGM',0,1
	.word	464
	.byte	2,0,2,35,1,11
	.byte	'CFMSV',0,1
	.word	464
	.byte	8,0,2,35,2,11
	.byte	'CFMDCNT',0,1
	.word	464
	.byte	8,0,2,35,3,0
.L332:
	.byte	12,12,234,3,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15240
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_DSADC_CH_FCFGA_Bits',0,12,146,1,16,4,11
	.byte	'CFADF',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'CFAC',0,1
	.word	464
	.byte	2,6,2,35,1,11
	.byte	'SRGA',0,1
	.word	464
	.byte	2,4,2,35,1,11
	.byte	'ESEL',0,1
	.word	464
	.byte	2,2,2,35,1,11
	.byte	'EGT',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'AFSC',0,1
	.word	464
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	464
	.byte	6,0,2,35,2,11
	.byte	'CFADCNT',0,1
	.word	464
	.byte	8,0,2,35,3,0
.L326:
	.byte	12,12,226,3,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15452
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_DSADC_CH_IWCTR_Bits',0,12,197,1,16,4,11
	.byte	'NVALCNT',0,1
	.word	464
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'INTEN',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'REPCNT',0,1
	.word	464
	.byte	4,4,2,35,1,11
	.byte	'REPVAL',0,1
	.word	464
	.byte	4,0,2,35,1,11
	.byte	'NVALDIS',0,1
	.word	464
	.byte	6,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	464
	.byte	1,1,2,35,2,11
	.byte	'IWS',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'NVALINT',0,1
	.word	464
	.byte	6,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	464
	.byte	2,0,2,35,3,0
.L350:
	.byte	12,12,130,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15685
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_DSADC_CH_BOUNDSEL_Bits',0,12,114,16,4,11
	.byte	'BOUNDARYL',0,2
	.word	1015
	.byte	16,0,2,35,0,11
	.byte	'BOUNDARYU',0,2
	.word	1015
	.byte	16,0,2,35,2,0,12,12,202,3,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15950
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_DSADC_CH_RESM_Bits',0,12,133,2,16,4,11
	.byte	'RESULT',0,2
	.word	1015
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,12,12,170,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16066
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_DSADC_CH_OFFM_Bits',0,12,234,1,16,4,11
	.byte	'OFFSET',0,2
	.word	1015
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,12,12,146,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16178
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_DSADC_CH_RESA_Bits',0,12,254,1,16,4,11
	.byte	'RESULT',0,2
	.word	1015
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,12,12,162,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16290
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_DSADC_CH_TSTMP_Bits',0,12,140,2,16,4,11
	.byte	'RESULT',0,2
	.word	1015
	.byte	16,0,2,35,0,11
	.byte	'CFMDCNT',0,1
	.word	464
	.byte	8,0,2,35,2,11
	.byte	'NVALCNT',0,1
	.word	464
	.byte	6,2,2,35,3,11
	.byte	'TSVAL',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'TSSR',0,1
	.word	464
	.byte	1,0,2,35,3,0,12,12,178,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16402
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_DSADC_CH_CGSYNC_Bits',0,12,121,16,4,11
	.byte	'SDCOUNT',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'SDCAP',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'SDPOS',0,1
	.word	464
	.byte	8,0,2,35,2,11
	.byte	'SDNEG',0,1
	.word	464
	.byte	8,0,2,35,3,0,12,12,210,3,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16563
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_DSADC_CH_RECTCFG_Bits',0,12,241,1,16,4,11
	.byte	'RFEN',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	464
	.byte	3,4,2,35,0,11
	.byte	'SSRC',0,1
	.word	464
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	1015
	.byte	9,1,2,35,0,11
	.byte	'SDCVAL',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	14,2,2,35,2,11
	.byte	'SGNCS',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'SGND',0,1
	.word	464
	.byte	1,0,2,35,3,0
.L365:
	.byte	12,12,154,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16705
	.byte	4,2,35,0,0,18,36
	.word	464
	.byte	19,35,0,10
	.byte	'_Ifx_DSADC_CH_ICCFG_Bits',0,12,184,1,16,4,11
	.byte	'DI0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'DI1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	464
	.byte	2,4,2,35,0,11
	.byte	'IREN',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	464
	.byte	3,0,2,35,0,11
	.byte	'TWINSP',0,1
	.word	464
	.byte	6,2,2,35,1,11
	.byte	'reserved_14',0,4
	.word	441
	.byte	17,1,2,35,0,11
	.byte	'WREN',0,1
	.word	464
	.byte	1,0,2,35,3,0,12,12,250,3,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16938
	.byte	4,2,35,0,0,18,44
	.word	464
	.byte	19,43,0,10
	.byte	'_Ifx_DSADC_CH',0,12,170,5,25,128,2,13
	.byte	'MODCFG',0
	.word	14753
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	3202
	.byte	4,2,35,4,13
	.byte	'DICFG',0
	.word	15024
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3202
	.byte	4,2,35,12,13
	.byte	'FCFGM',0
	.word	15200
	.byte	4,2,35,16,13
	.byte	'FCFGC',0
	.word	15412
	.byte	4,2,35,20,13
	.byte	'FCFGA',0
	.word	15645
	.byte	4,2,35,24,13
	.byte	'reserved_1C',0
	.word	3202
	.byte	4,2,35,28,13
	.byte	'IWCTR',0
	.word	15910
	.byte	4,2,35,32,13
	.byte	'reserved_24',0
	.word	3202
	.byte	4,2,35,36,13
	.byte	'BOUNDSEL',0
	.word	16026
	.byte	4,2,35,40,13
	.byte	'reserved_2C',0
	.word	3202
	.byte	4,2,35,44,13
	.byte	'RESM',0
	.word	16138
	.byte	4,2,35,48,13
	.byte	'reserved_34',0
	.word	3202
	.byte	4,2,35,52,13
	.byte	'OFFM',0
	.word	16250
	.byte	4,2,35,56,13
	.byte	'reserved_3C',0
	.word	3202
	.byte	4,2,35,60,13
	.byte	'RESA',0
	.word	16362
	.byte	4,2,35,64,13
	.byte	'reserved_44',0
	.word	5361
	.byte	12,2,35,68,13
	.byte	'TSTMP',0
	.word	16523
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	8678
	.byte	76,2,35,84,13
	.byte	'CGSYNC',0
	.word	16665
	.byte	4,3,35,160,1,13
	.byte	'reserved_A4',0
	.word	3202
	.byte	4,3,35,164,1,13
	.byte	'RECTCFG',0
	.word	16889
	.byte	4,3,35,168,1,13
	.byte	'reserved_AC',0
	.word	16929
	.byte	36,3,35,172,1,13
	.byte	'ICCFG',0
	.word	17117
	.byte	4,3,35,208,1,13
	.byte	'reserved_D4',0
	.word	17157
	.byte	44,3,35,212,1,0,18,128,8
	.word	17166
	.byte	19,3,0,14
	.word	17658
	.byte	18,128,22
	.word	464
	.byte	19,255,21,0,10
	.byte	'_Ifx_DSADC',0,12,211,5,25,128,32,13
	.byte	'CLC',0
	.word	10842
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	3202
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	10966
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	11006
	.byte	28,2,35,12,13
	.byte	'OCS',0
	.word	11137
	.byte	4,2,35,40,13
	.byte	'KRSTCLR',0
	.word	11245
	.byte	4,2,35,44,13
	.byte	'KRST1',0
	.word	11351
	.byte	4,2,35,48,13
	.byte	'KRST0',0
	.word	11476
	.byte	4,2,35,52,13
	.byte	'reserved_38',0
	.word	3202
	.byte	4,2,35,56,13
	.byte	'ACCEN0',0
	.word	12047
	.byte	4,2,35,60,13
	.byte	'reserved_40',0
	.word	12087
	.byte	64,2,35,64,13
	.byte	'GLOBCFG',0
	.word	12316
	.byte	4,3,35,128,1,13
	.byte	'reserved_84',0
	.word	3202
	.byte	4,3,35,132,1,13
	.byte	'GLOBRC',0
	.word	12581
	.byte	4,3,35,136,1,13
	.byte	'reserved_8C',0
	.word	3202
	.byte	4,3,35,140,1,13
	.byte	'ACCPROT',0
	.word	12808
	.byte	4,3,35,144,1,13
	.byte	'reserved_94',0
	.word	5361
	.byte	12,3,35,148,1,13
	.byte	'CGCFG',0
	.word	13119
	.byte	4,3,35,160,1,13
	.byte	'reserved_A4',0
	.word	5361
	.byte	12,3,35,164,1,13
	.byte	'GLOBVCMH0',0
	.word	13548
	.byte	4,3,35,176,1,13
	.byte	'reserved_B4',0
	.word	3202
	.byte	4,3,35,180,1,13
	.byte	'GLOBVCMH2',0
	.word	13676
	.byte	4,3,35,184,1,13
	.byte	'reserved_BC',0
	.word	13716
	.byte	20,3,35,188,1,13
	.byte	'IGCFG',0
	.word	13851
	.byte	4,3,35,208,1,13
	.byte	'reserved_D4',0
	.word	5361
	.byte	12,3,35,212,1,13
	.byte	'EVFLAG',0
	.word	14116
	.byte	4,3,35,224,1,13
	.byte	'EVFLAGCLR',0
	.word	14384
	.byte	4,3,35,228,1,13
	.byte	'reserved_E8',0
	.word	4392
	.byte	24,3,35,232,1,13
	.byte	'CH',0
	.word	17668
	.byte	128,8,3,35,128,2,13
	.byte	'reserved_500',0
	.word	17673
	.byte	128,22,3,35,128,10,0,14
	.word	17684
.L195:
	.byte	3
	.word	18262
	.byte	4
	.byte	'IfxDsadc_startScan',0,3,11,236,5,17,1,1,5
	.byte	'dsadc',0,11,236,5,47
	.word	18267
	.byte	5
	.byte	'modulatorMask',0,11,236,5,61
	.word	1965
	.byte	5
	.byte	'channelMask',0,11,236,5,83
	.word	1965
	.byte	6,0,4
	.byte	'IfxDsadc_stopScan',0,3,11,242,5,17,1,1,5
	.byte	'dsadc',0,11,242,5,46
	.word	18267
	.byte	5
	.byte	'modulatorMask',0,11,242,5,60
	.word	1965
	.byte	6,0
.L299:
	.byte	7
	.byte	'short int',0,2,5,15,11,140,1,9,1,16
	.byte	'IfxDsadc_ChannelId_0',0,0,16
	.byte	'IfxDsadc_ChannelId_2',0,2,16
	.byte	'IfxDsadc_ChannelId_3',0,3,0
.L302:
	.byte	8
	.byte	'IfxDsadc_getAuxResult',0,3,11,248,4,19
	.word	18426
	.byte	1,1
.L304:
	.byte	5
	.byte	'dsadc',0,11,248,4,52
	.word	18267
.L306:
	.byte	5
	.byte	'channel',0,11,248,4,78
	.word	18439
.L308:
	.byte	6,0,8
	.byte	'IfxDsadc_getMainResult',0,3,11,132,5,19
	.word	18426
	.byte	1,1,5
	.byte	'dsadc',0,11,132,5,53
	.word	18267
	.byte	5
	.byte	'channel',0,11,132,5,79
	.word	18439
	.byte	6,0,20,9,190,1,9,8,13
	.byte	'port',0
	.word	9949
	.byte	4,2,35,0,13
	.byte	'pinIndex',0
	.word	464
	.byte	1,2,35,4,0,20,13,104,15,16,13
	.byte	'module',0
	.word	18267
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	18652
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	10229
	.byte	1,2,35,12,0,21
	.word	18691
.L164:
	.byte	3
	.word	18742
	.byte	15,9,144,1,9,1,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,16
	.byte	'IfxPort_PadDriver_lvdsSpeed1',0,4,16
	.byte	'IfxPort_PadDriver_lvdsSpeed2',0,5,16
	.byte	'IfxPort_PadDriver_lvdsSpeed3',0,6,16
	.byte	'IfxPort_PadDriver_lvdsSpeed4',0,7,16
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,16
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,16
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,16
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,0
.L166:
	.byte	4
	.byte	'IfxDsadc_initCgPwmPin',0,3,11,138,5,17,1,1
.L168:
	.byte	5
	.byte	'cgPwm',0,11,138,5,65
	.word	18747
.L170:
	.byte	5
	.byte	'pinMode',0,11,138,5,91
	.word	10159
.L172:
	.byte	5
	.byte	'padDriver',0,11,138,5,118
	.word	18752
.L174:
	.byte	17,6,0,0,15,14,130,1,9,1,16
	.byte	'Ifx_RxSel_a',0,0,16
	.byte	'Ifx_RxSel_b',0,1,16
	.byte	'Ifx_RxSel_c',0,2,16
	.byte	'Ifx_RxSel_d',0,3,16
	.byte	'Ifx_RxSel_e',0,4,16
	.byte	'Ifx_RxSel_f',0,5,16
	.byte	'Ifx_RxSel_g',0,6,16
	.byte	'Ifx_RxSel_h',0,7,0,20,13,77,15,20,13
	.byte	'module',0
	.word	18267
	.byte	4,2,35,0,13
	.byte	'channel',0
	.word	464
	.byte	1,2,35,4,13
	.byte	'pin',0
	.word	18652
	.byte	8,2,35,8,13
	.byte	'select',0
	.word	19252
	.byte	1,2,35,16,0,21
	.word	19371
.L254:
	.byte	3
	.word	19439
.L256:
	.byte	4
	.byte	'IfxDsadc_initCinPin',0,3,11,145,5,17,1,1
.L258:
	.byte	5
	.byte	'cIn',0,11,145,5,60
	.word	19444
.L260:
	.byte	5
	.byte	'cInMode',0,11,145,5,83
	.word	9954
.L262:
	.byte	5
	.byte	'padDriver',0,11,145,5,110
	.word	18752
.L264:
	.byte	17,6,0,0,20,13,86,15,20,13
	.byte	'module',0
	.word	18267
	.byte	4,2,35,0,13
	.byte	'channel',0
	.word	464
	.byte	1,2,35,4,13
	.byte	'pin',0
	.word	18652
	.byte	8,2,35,8,13
	.byte	'select',0
	.word	19252
	.byte	1,2,35,16,0,21
	.word	19530
.L267:
	.byte	3
	.word	19598
.L269:
	.byte	4
	.byte	'IfxDsadc_initDinPin',0,3,11,165,5,17,1,1
.L271:
	.byte	5
	.byte	'dIn',0,11,165,5,60
	.word	19603
.L273:
	.byte	5
	.byte	'dInMode',0,11,165,5,83
	.word	9954
.L275:
	.byte	5
	.byte	'padDriver',0,11,165,5,110
	.word	18752
.L277:
	.byte	17,6,0,0,20,13,59,15,20,13
	.byte	'module',0
	.word	18267
	.byte	4,2,35,0,13
	.byte	'channel',0
	.word	464
	.byte	1,2,35,4,13
	.byte	'pin',0
	.word	18652
	.byte	8,2,35,8,13
	.byte	'select',0
	.word	19252
	.byte	1,2,35,16,0,21
	.word	19689
.L220:
	.byte	3
	.word	19757
.L222:
	.byte	4
	.byte	'IfxDsadc_initDsnPin',0,3,11,175,5,17,1,1
.L224:
	.byte	5
	.byte	'dsn',0,11,175,5,60
	.word	19762
.L226:
	.byte	5
	.byte	'pinMode',0,11,175,5,83
	.word	9954
.L228:
	.byte	5
	.byte	'padDriver',0,11,175,5,110
	.word	18752
.L230:
	.byte	17,6,0,0,20,13,68,15,20,13
	.byte	'module',0
	.word	18267
	.byte	4,2,35,0,13
	.byte	'channel',0
	.word	464
	.byte	1,2,35,4,13
	.byte	'pin',0
	.word	18652
	.byte	8,2,35,8,13
	.byte	'select',0
	.word	19252
	.byte	1,2,35,16,0,21
	.word	19848
.L241:
	.byte	3
	.word	19916
.L243:
	.byte	4
	.byte	'IfxDsadc_initDspPin',0,3,11,185,5,17,1,1
.L245:
	.byte	5
	.byte	'dsp',0,11,185,5,60
	.word	19921
.L247:
	.byte	5
	.byte	'pinMode',0,11,185,5,83
	.word	9954
.L249:
	.byte	5
	.byte	'padDriver',0,11,185,5,110
	.word	18752
.L251:
	.byte	17,6,0,0,20,13,95,15,20,13
	.byte	'module',0
	.word	18267
	.byte	4,2,35,0,13
	.byte	'channel',0
	.word	464
	.byte	1,2,35,4,13
	.byte	'pin',0
	.word	18652
	.byte	8,2,35,8,13
	.byte	'select',0
	.word	19252
	.byte	1,2,35,16,0,21
	.word	20007
.L280:
	.byte	3
	.word	20075
.L282:
	.byte	4
	.byte	'IfxDsadc_initItrPin',0,3,11,195,5,17,1,1
.L284:
	.byte	5
	.byte	'itr',0,11,195,5,60
	.word	20080
.L286:
	.byte	5
	.byte	'itrMode',0,11,195,5,83
	.word	9954
.L288:
	.byte	5
	.byte	'padDriver',0,11,195,5,110
	.word	18752
.L290:
	.byte	17,6,0,0,21
	.word	457
	.byte	22
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,23
	.word	20166
	.byte	0,14
	.word	441
	.byte	3
	.word	441
	.byte	24
	.byte	'__cmpswapw',0
	.word	20208
	.byte	1,1,1,1,25
	.byte	'p',0
	.word	20213
	.byte	25
	.byte	'value',0
	.word	441
	.byte	25
	.byte	'compare',0
	.word	441
	.byte	0,26
	.word	185
	.byte	27
	.word	211
	.byte	6,0,26
	.word	246
	.byte	27
	.word	278
	.byte	6,0,26
	.word	291
	.byte	6,0,26
	.word	360
	.byte	27
	.word	379
	.byte	6,0,26
	.word	395
	.byte	27
	.word	410
	.byte	27
	.word	424
	.byte	6,0,26
	.word	820
	.byte	27
	.word	848
	.byte	6,0,26
	.word	1585
	.byte	27
	.word	1625
	.byte	27
	.word	1643
	.byte	6,0,26
	.word	1663
	.byte	27
	.word	1701
	.byte	27
	.word	1719
	.byte	6,0,28
	.byte	'IfxScuWdt_clearCpuEndinit',0,5,217,1,17,1,1,1,1,5
	.byte	'password',0,5,217,1,50
	.word	1015
	.byte	0,28
	.byte	'IfxScuWdt_setCpuEndinit',0,5,239,1,17,1,1,1,1,5
	.byte	'password',0,5,239,1,48
	.word	1015
	.byte	0,26
	.word	1739
	.byte	27
	.word	1790
	.byte	6,0,29
	.byte	'IfxScuWdt_getCpuWatchdogPassword',0,5,129,3,19
	.word	1015
	.byte	1,1,1,1,26
	.word	1889
	.byte	6,0,26
	.word	1923
	.byte	6,0,26
	.word	1986
	.byte	27
	.word	2027
	.byte	6,0,26
	.word	2046
	.byte	27
	.word	2101
	.byte	6,0,26
	.word	2120
	.byte	27
	.word	2160
	.byte	27
	.word	2177
	.byte	17,6,0,0,26
	.word	10079
	.byte	27
	.word	10111
	.byte	27
	.word	10125
	.byte	27
	.word	10143
	.byte	6,0,26
	.word	10446
	.byte	27
	.word	10479
	.byte	27
	.word	10493
	.byte	27
	.word	10511
	.byte	27
	.word	10525
	.byte	6,0,26
	.word	10645
	.byte	27
	.word	10673
	.byte	27
	.word	10687
	.byte	27
	.word	10705
	.byte	6,0,15,9,95,9,1,16
	.byte	'IfxPort_Mode_inputNoPullDevice',0,0,16
	.byte	'IfxPort_Mode_inputPullDown',0,8,16
	.byte	'IfxPort_Mode_inputPullUp',0,16,16
	.byte	'IfxPort_Mode_outputPushPullGeneral',0,128,1,16
	.byte	'IfxPort_Mode_outputPushPullAlt1',0,136,1,16
	.byte	'IfxPort_Mode_outputPushPullAlt2',0,144,1,16
	.byte	'IfxPort_Mode_outputPushPullAlt3',0,152,1,16
	.byte	'IfxPort_Mode_outputPushPullAlt4',0,160,1,16
	.byte	'IfxPort_Mode_outputPushPullAlt5',0,168,1,16
	.byte	'IfxPort_Mode_outputPushPullAlt6',0,176,1,16
	.byte	'IfxPort_Mode_outputPushPullAlt7',0,184,1,16
	.byte	'IfxPort_Mode_outputOpenDrainGeneral',0,192,1,16
	.byte	'IfxPort_Mode_outputOpenDrainAlt1',0,200,1,16
	.byte	'IfxPort_Mode_outputOpenDrainAlt2',0,208,1,16
	.byte	'IfxPort_Mode_outputOpenDrainAlt3',0,216,1,16
	.byte	'IfxPort_Mode_outputOpenDrainAlt4',0,224,1,16
	.byte	'IfxPort_Mode_outputOpenDrainAlt5',0,232,1,16
	.byte	'IfxPort_Mode_outputOpenDrainAlt6',0,240,1,16
	.byte	'IfxPort_Mode_outputOpenDrainAlt7',0,248,1,0,28
	.byte	'IfxPort_setPinMode',0,9,247,2,17,1,1,1,1,5
	.byte	'port',0,9,247,2,43
	.word	9949
	.byte	5
	.byte	'pinIndex',0,9,247,2,55
	.word	464
	.byte	5
	.byte	'mode',0,9,247,2,78
	.word	20668
	.byte	0,28
	.byte	'IfxPort_setPinPadDriver',0,9,134,3,17,1,1,1,1,5
	.byte	'port',0,9,134,3,48
	.word	9949
	.byte	5
	.byte	'pinIndex',0,9,134,3,60
	.word	464
	.byte	5
	.byte	'padDriver',0,9,134,3,88
	.word	18752
	.byte	0,26
	.word	18272
	.byte	27
	.word	18299
	.byte	27
	.word	18314
	.byte	27
	.word	18337
	.byte	6,0,26
	.word	18360
	.byte	27
	.word	18386
	.byte	27
	.word	18401
	.byte	6,0,26
	.word	18515
	.byte	27
	.word	18549
	.byte	27
	.word	18564
	.byte	6,0,26
	.word	18583
	.byte	27
	.word	18618
	.byte	27
	.word	18633
	.byte	6,0,30
	.byte	'IfxDsadc_getModulatorInputClockFreq',0,11,144,4,20
	.word	237
	.byte	1,1,1,1,5
	.byte	'dsadc',0,11,144,4,67
	.word	18267
	.byte	0,26
	.word	19167
	.byte	27
	.word	19197
	.byte	27
	.word	19212
	.byte	27
	.word	19229
	.byte	17,31
	.word	10446
	.byte	27
	.word	10479
	.byte	27
	.word	10493
	.byte	27
	.word	10511
	.byte	27
	.word	10525
	.byte	32
	.word	10540
	.byte	0,6,0,0,26
	.word	19449
	.byte	27
	.word	19477
	.byte	27
	.word	19490
	.byte	27
	.word	19507
	.byte	17,31
	.word	10079
	.byte	27
	.word	10111
	.byte	27
	.word	10125
	.byte	27
	.word	10143
	.byte	32
	.word	10157
	.byte	0,6,0,0,26
	.word	19608
	.byte	27
	.word	19636
	.byte	27
	.word	19649
	.byte	27
	.word	19666
	.byte	17,31
	.word	10079
	.byte	27
	.word	10111
	.byte	27
	.word	10125
	.byte	27
	.word	10143
	.byte	32
	.word	10157
	.byte	0,6,0,0,26
	.word	19767
	.byte	27
	.word	19795
	.byte	27
	.word	19808
	.byte	27
	.word	19825
	.byte	17,31
	.word	10079
	.byte	27
	.word	10111
	.byte	27
	.word	10125
	.byte	27
	.word	10143
	.byte	32
	.word	10157
	.byte	0,6,0,0,26
	.word	19926
	.byte	27
	.word	19954
	.byte	27
	.word	19967
	.byte	27
	.word	19984
	.byte	17,31
	.word	10079
	.byte	27
	.word	10111
	.byte	27
	.word	10125
	.byte	27
	.word	10143
	.byte	32
	.word	10157
	.byte	0,6,0,0,26
	.word	20085
	.byte	27
	.word	20113
	.byte	27
	.word	20126
	.byte	27
	.word	20143
	.byte	17,31
	.word	10079
	.byte	27
	.word	10111
	.byte	27
	.word	10125
	.byte	27
	.word	10143
	.byte	32
	.word	10157
	.byte	0,6,0,0,20,15,168,2,9,4,13
	.byte	'dsadc',0
	.word	18267
	.byte	4,2,35,0,0
.L153:
	.byte	3
	.word	21940
	.byte	15,11,130,1,9,1,16
	.byte	'IfxDsadc_CarrierWaveformMode_stopped',0,0,16
	.byte	'IfxDsadc_CarrierWaveformMode_square',0,1,16
	.byte	'IfxDsadc_CarrierWaveformMode_triangle',0,2,16
	.byte	'IfxDsadc_CarrierWaveformMode_sine',0,3,0,20,15,175,2,9,20,13
	.byte	'carrierWaveformMode',0
	.word	21967
	.byte	1,2,35,0,13
	.byte	'inverted',0
	.word	464
	.byte	1,2,35,1,13
	.byte	'bitReversed',0
	.word	464
	.byte	1,2,35,2,13
	.byte	'frequency',0
	.word	237
	.byte	4,2,35,4,13
	.byte	'pinPos',0
	.word	18747
	.byte	4,2,35,8,13
	.byte	'pinNeg',0
	.word	18747
	.byte	4,2,35,12,13
	.byte	'pinMode',0
	.word	10159
	.byte	1,2,35,16,13
	.byte	'pinDriver',0
	.word	18752
	.byte	1,2,35,17,0,21
	.word	22127
.L155:
	.byte	3
	.word	22289
	.byte	15,11,164,2,9,1,16
	.byte	'IfxDsadc_ModulatorClock_off',0,0,16
	.byte	'IfxDsadc_ModulatorClock_fDSD',0,1,16
	.byte	'IfxDsadc_ModulatorClock_fERAY',0,2,16
	.byte	'IfxDsadc_ModulatorClock_fOSC0',0,3,0,15,11,250,1,9,1,16
	.byte	'IfxDsadc_LowPowerSupply_5V',0,0,16
	.byte	'IfxDsadc_LowPowerSupply_3_3V',0,1,0,20,15,214,2,9,8,13
	.byte	'dsadc',0
	.word	18267
	.byte	4,2,35,0,13
	.byte	'modulatorClockSelect',0
	.word	22299
	.byte	1,2,35,4,13
	.byte	'lowPowerSupply',0
	.word	22431
	.byte	1,2,35,5,0,21
	.word	22498
.L193:
	.byte	3
	.word	22574
.L205:
	.byte	3
	.word	22498
.L208:
	.byte	21
	.word	22498
	.byte	14
	.word	17166
	.byte	3
	.word	22594
	.byte	20,15,189,2,9,12,13
	.byte	'module',0
	.word	18267
	.byte	4,2,35,0,13
	.byte	'channel',0
	.word	22599
	.byte	4,2,35,4,13
	.byte	'channelId',0
	.word	18439
	.byte	1,2,35,8,0
.L211:
	.byte	3
	.word	22604
	.byte	15,11,182,1,9,1,16
	.byte	'IfxDsadc_InputConfig_inputPin',0,0,16
	.byte	'IfxDsadc_InputConfig_supplyVoltage',0,1,16
	.byte	'IfxDsadc_InputConfig_commonModeVoltage',0,2,16
	.byte	'IfxDsadc_InputConfig_referenceGround',0,3,0,15,11,206,1,9,1,16
	.byte	'IfxDsadc_InputGain_factor1',0,0,16
	.byte	'IfxDsadc_InputGain_factor2',0,1,16
	.byte	'IfxDsadc_InputGain_factor4',0,2,16
	.byte	'IfxDsadc_InputGain_factor8',0,3,16
	.byte	'IfxDsadc_InputGain_factor16',0,4,0,15,11,218,1,9,1,16
	.byte	'IfxDsadc_InputPin_a',0,0,16
	.byte	'IfxDsadc_InputPin_b',0,1,16
	.byte	'IfxDsadc_InputPin_c',0,2,16
	.byte	'IfxDsadc_InputPin_d',0,3,0,15,11,150,1,9,1,16
	.byte	'IfxDsadc_CommonModeVoltage_a',0,0,16
	.byte	'IfxDsadc_CommonModeVoltage_b',0,1,16
	.byte	'IfxDsadc_CommonModeVoltage_c',0,2,0,20,15,142,2,9,12,13
	.byte	'positiveInput',0
	.word	22668
	.byte	1,2,35,0,13
	.byte	'negativeInput',0
	.word	22668
	.byte	1,2,35,1,13
	.byte	'inputGain',0
	.word	22824
	.byte	1,2,35,2,13
	.byte	'inputPin',0
	.word	22977
	.byte	1,2,35,3,13
	.byte	'modulatorClockFreq',0
	.word	237
	.byte	4,2,35,4,13
	.byte	'commonModeVoltage',0
	.word	23072
	.byte	1,2,35,8,0,15,11,193,1,9,1,16
	.byte	'IfxDsadc_InputDataSource_onChipStandAlone',0,0,16
	.byte	'IfxDsadc_InputDataSource_onChipCombined',0,1,16
	.byte	'IfxDsadc_InputDataSource_directInputA',0,2,16
	.byte	'IfxDsadc_InputDataSource_invertedInputA',0,3,16
	.byte	'IfxDsadc_InputDataSource_directInputB',0,4,16
	.byte	'IfxDsadc_InputDataSource_invertedInputB',0,5,0,15,11,255,2,9,1,16
	.byte	'IfxDsadc_TriggerInput_a',0,0,16
	.byte	'IfxDsadc_TriggerInput_b',0,1,16
	.byte	'IfxDsadc_TriggerInput_c',0,2,16
	.byte	'IfxDsadc_TriggerInput_d',0,3,16
	.byte	'IfxDsadc_TriggerInput_e',0,4,16
	.byte	'IfxDsadc_TriggerInput_f',0,5,16
	.byte	'IfxDsadc_TriggerInput_g',0,6,16
	.byte	'IfxDsadc_TriggerInput_h',0,7,0,15,11,239,1,9,1,16
	.byte	'IfxDsadc_IntegratorTrigger_bypassed',0,0,16
	.byte	'IfxDsadc_IntegratorTrigger_fallingEdge',0,1,16
	.byte	'IfxDsadc_IntegratorTrigger_risingEdge',0,2,16
	.byte	'IfxDsadc_IntegratorTrigger_alwaysActive',0,3,0,15,11,244,2,9,1,16
	.byte	'IfxDsadc_TimestampTrigger_noTrigger',0,0,16
	.byte	'IfxDsadc_TimestampTrigger_fallingEdge',0,1,16
	.byte	'IfxDsadc_TimestampTrigger_risingEdge',0,2,16
	.byte	'IfxDsadc_TimestampTrigger_eachEdge',0,3,0,15,11,210,2,9,1,16
	.byte	'IfxDsadc_SampleClockSource_internal',0,0,16
	.byte	'IfxDsadc_SampleClockSource_inputA',0,1,16
	.byte	'IfxDsadc_SampleClockSource_inputB',0,2,16
	.byte	'IfxDsadc_SampleClockSource_inputC',0,3,0,15,11,221,2,9,1,16
	.byte	'IfxDsadc_SampleStrobe_noDataStrobe',0,0,16
	.byte	'IfxDsadc_SampleStrobe_sampleOnRisingEdge',0,1,16
	.byte	'IfxDsadc_SampleStrobe_sampleOnFallingEdge',0,2,16
	.byte	'IfxDsadc_SampleStrobe_sampleOnBothEdges',0,3,16
	.byte	'IfxDsadc_SampleStrobe_reserved',0,4,16
	.byte	'IfxDsadc_SampleStrobe_sampleOnTwoRisingEdges',0,5,16
	.byte	'IfxDsadc_SampleStrobe_sampleOnTwoFallingEdges',0,6,0,20,15,237,1,9,6,13
	.byte	'inputDataSource',0
	.word	23317
	.byte	1,2,35,0,13
	.byte	'triggerInput',0
	.word	23574
	.byte	1,2,35,1,13
	.byte	'integrationTrigger',0
	.word	23789
	.byte	1,2,35,2,13
	.byte	'timestampTrigger',0
	.word	23957
	.byte	1,2,35,3,13
	.byte	'sampleClockSource',0
	.word	24118
	.byte	1,2,35,4,13
	.byte	'sampleStrobe',0
	.word	24271
	.byte	1,2,35,5,0,15,11,142,2,9,1,16
	.byte	'IfxDsadc_MainCombFilterType_comb1',0,0,16
	.byte	'IfxDsadc_MainCombFilterType_comb2',0,1,16
	.byte	'IfxDsadc_MainCombFilterType_comb3',0,2,16
	.byte	'IfxDsadc_MainCombFilterType_combF',0,3,0,15,11,131,2,9,1,16
	.byte	'IfxDsadc_MainCombFilterShift_noShift',0,0,16
	.byte	'IfxDsadc_MainCombFilterShift_shiftBy1',0,1,16
	.byte	'IfxDsadc_MainCombFilterShift_shiftBy2',0,2,16
	.byte	'IfxDsadc_MainCombFilterShift_shiftBy3',0,3,0,15,11,153,2,9,1,16
	.byte	'IfxDsadc_MainServiceRequest_never',0,0,16
	.byte	'IfxDsadc_MainServiceRequest_highGateSignal',0,1,16
	.byte	'IfxDsadc_MainServiceRequest_lowGateSignal',0,2,16
	.byte	'IfxDsadc_MainServiceRequest_everyNewResult',0,3,0,20,15,225,1,9,8,13
	.byte	'bypassed',0
	.word	464
	.byte	1,2,35,0,13
	.byte	'combFilterType',0
	.word	24729
	.byte	1,2,35,1,13
	.byte	'combFilterShift',0
	.word	24880
	.byte	1,2,35,2,13
	.byte	'serviceRequest',0
	.word	25046
	.byte	1,2,35,3,13
	.byte	'decimationFactor',0
	.word	1015
	.byte	2,2,35,4,13
	.byte	'startValue',0
	.word	1015
	.byte	2,2,35,6,0,15,11,161,1,9,1,16
	.byte	'IfxDsadc_FirDataShift_noShift',0,0,16
	.byte	'IfxDsadc_FirDataShift_shiftBy1',0,1,16
	.byte	'IfxDsadc_FirDataShift_shiftBy2',0,2,16
	.byte	'IfxDsadc_FirDataShift_shiftBy3',0,3,0,15,11,173,1,9,1,16
	.byte	'IfxDsadc_FirInternalShift_noShift',0,0,16
	.byte	'IfxDsadc_FirInternalShift_shiftBy1',0,1,0,20,15,249,1,9,6,13
	.byte	'fir0Enabled',0
	.word	464
	.byte	1,2,35,0,13
	.byte	'fir1Enabled',0
	.word	464
	.byte	1,2,35,1,13
	.byte	'offsetCompensation',0
	.word	464
	.byte	1,2,35,2,13
	.byte	'dataShift',0
	.word	25367
	.byte	1,2,35,3,13
	.byte	'internalShift',0
	.word	25505
	.byte	1,2,35,4,0,15,11,229,1,9,1,16
	.byte	'IfxDsadc_IntegrationWindowSize_internalControl',0,0,16
	.byte	'IfxDsadc_IntegrationWindowSize_externalControl',0,1,0,20,15,132,2,9,8,13
	.byte	'windowSize',0
	.word	25704
	.byte	1,2,35,0,13
	.byte	'discardCount',0
	.word	1015
	.byte	2,2,35,2,13
	.byte	'integrationCount',0
	.word	1015
	.byte	2,2,35,4,13
	.byte	'integrationCycles',0
	.word	1015
	.byte	2,2,35,6,0,15,11,90,9,1,16
	.byte	'IfxDsadc_AuxCombFilterType_comb1',0,0,16
	.byte	'IfxDsadc_AuxCombFilterType_comb2',0,1,16
	.byte	'IfxDsadc_AuxCombFilterType_comb3',0,2,16
	.byte	'IfxDsadc_AuxCombFilterType_combF',0,3,0,15,11,79,9,1,16
	.byte	'IfxDsadc_AuxCombFilterShift_noShift',0,0,16
	.byte	'IfxDsadc_AuxCombFilterShift_shiftBy1',0,1,16
	.byte	'IfxDsadc_AuxCombFilterShift_shiftBy2',0,2,16
	.byte	'IfxDsadc_AuxCombFilterShift_shiftBy3',0,3,0,15,11,120,9,1,16
	.byte	'IfxDsadc_AuxServiceRequest_never',0,0,16
	.byte	'IfxDsadc_AuxServiceRequest_auxFilter',0,1,16
	.byte	'IfxDsadc_AuxServiceRequest_altSource',0,2,0,15,11,101,9,1,16
	.byte	'IfxDsadc_AuxEvent_everyNewResult',0,0,16
	.byte	'IfxDsadc_AuxEvent_insideBoundary',0,1,16
	.byte	'IfxDsadc_AuxEvent_outsideBoundary',0,2,0,15,11,111,9,1,16
	.byte	'IfxDsadc_AuxGate_definedByESEL',0,0,16
	.byte	'IfxDsadc_AuxGate_coupledToIntegrator',0,1,0,20,15,195,1,9,8,13
	.byte	'bypassed',0
	.word	464
	.byte	1,2,35,0,13
	.byte	'combFilterType',0
	.word	25911
	.byte	1,2,35,1,13
	.byte	'combFilterShift',0
	.word	26057
	.byte	1,2,35,2,13
	.byte	'serviceRequest',0
	.word	26218
	.byte	1,2,35,3,13
	.byte	'eventSelect',0
	.word	26337
	.byte	1,2,35,4,13
	.byte	'eventGate',0
	.word	26449
	.byte	1,2,35,5,13
	.byte	'decimationFactor',0
	.word	464
	.byte	1,2,35,6,0,15,11,199,2,9,1,16
	.byte	'IfxDsadc_RectifierSignSource_onChipGenerator',0,0,16
	.byte	'IfxDsadc_RectifierSignSource_nextChannel',0,1,16
	.byte	'IfxDsadc_RectifierSignSource_externalA',0,2,16
	.byte	'IfxDsadc_RectifierSignSource_externalB',0,3,0,20,15,154,2,9,4,13
	.byte	'enabled',0
	.word	464
	.byte	1,2,35,0,13
	.byte	'signSource',0
	.word	26691
	.byte	1,2,35,1,13
	.byte	'signDelay',0
	.word	464
	.byte	1,2,35,2,13
	.byte	'signPeriod',0
	.word	464
	.byte	1,2,35,3,0,20,15,208,1,9,40,13
	.byte	'cin',0
	.word	19444
	.byte	4,2,35,0,13
	.byte	'cinMode',0
	.word	9954
	.byte	1,2,35,4,13
	.byte	'din',0
	.word	19603
	.byte	4,2,35,8,13
	.byte	'dinMode',0
	.word	9954
	.byte	1,2,35,12,13
	.byte	'itr',0
	.word	20080
	.byte	4,2,35,16,13
	.byte	'itrMode',0
	.word	9954
	.byte	1,2,35,20,13
	.byte	'dsn',0
	.word	19762
	.byte	4,2,35,24,13
	.byte	'dsnMode',0
	.word	9954
	.byte	1,2,35,28,13
	.byte	'dsp',0
	.word	19921
	.byte	4,2,35,32,13
	.byte	'dspMode',0
	.word	9954
	.byte	1,2,35,36,13
	.byte	'pinDriver',0
	.word	18752
	.byte	1,2,35,37,0,21
	.word	26953
.L217:
	.byte	3
	.word	27129
	.byte	20,15,198,2,9,68,13
	.byte	'module',0
	.word	18267
	.byte	4,2,35,0,13
	.byte	'channelId',0
	.word	18439
	.byte	1,2,35,4,13
	.byte	'modulator',0
	.word	23172
	.byte	12,2,35,8,13
	.byte	'demodulator',0
	.word	24572
	.byte	6,2,35,20,13
	.byte	'combFilter',0
	.word	25223
	.byte	8,2,35,28,13
	.byte	'firFilter',0
	.word	25585
	.byte	6,2,35,36,13
	.byte	'integrator',0
	.word	25809
	.byte	8,2,35,44,13
	.byte	'auxFilter',0
	.word	26527
	.byte	8,2,35,52,13
	.byte	'rectifier',0
	.word	26870
	.byte	4,2,35,60,13
	.byte	'channelPins',0
	.word	27134
	.byte	4,2,35,64,0,21
	.word	27139
.L213:
	.byte	3
	.word	27339
.L294:
	.byte	3
	.word	27139
.L297:
	.byte	21
	.word	27139
.L310:
	.byte	3
	.word	22127
.L312:
	.byte	7
	.byte	'long int',0,4,5
.L315:
	.byte	3
	.word	237
	.byte	21
	.word	26527
.L324:
	.byte	3
	.word	27381
	.byte	21
	.word	25223
.L330:
	.byte	3
	.word	27391
	.byte	21
	.word	24572
.L336:
	.byte	3
	.word	27401
	.byte	21
	.word	25585
.L342:
	.byte	3
	.word	27411
	.byte	21
	.word	25809
.L348:
	.byte	3
	.word	27421
	.byte	21
	.word	23172
.L354:
	.byte	3
	.word	27431
	.byte	21
	.word	26870
.L363:
	.byte	3
	.word	27441
	.byte	33
	.byte	'__wchar_t',0,16,1,1
	.word	18426
	.byte	33
	.byte	'__size_t',0,16,1,1
	.word	441
	.byte	33
	.byte	'__ptrdiff_t',0,16,1,1
	.word	457
	.byte	34,1,3
	.word	27506
	.byte	33
	.byte	'__codeptr',0,16,1,1
	.word	27508
	.byte	15,17,69,9,1,16
	.byte	'IfxSrc_Tos_cpu0',0,0,16
	.byte	'IfxSrc_Tos_cpu1',0,1,16
	.byte	'IfxSrc_Tos_dma',0,3,0,33
	.byte	'IfxSrc_Tos',0,17,74,3
	.word	27531
	.byte	33
	.byte	'boolean',0,18,101,29
	.word	464
	.byte	33
	.byte	'uint8',0,18,105,29
	.word	464
	.byte	33
	.byte	'uint16',0,18,109,29
	.word	1015
	.byte	33
	.byte	'uint32',0,18,113,29
	.word	1965
	.byte	33
	.byte	'uint64',0,18,118,29
	.word	323
	.byte	33
	.byte	'sint16',0,18,126,29
	.word	18426
	.byte	33
	.byte	'sint32',0,18,131,1,29
	.word	27364
	.byte	7
	.byte	'long long int',0,8,5,33
	.byte	'sint64',0,18,138,1,29
	.word	27715
	.byte	33
	.byte	'float32',0,18,167,1,29
	.word	237
	.byte	33
	.byte	'pvoid',0,14,57,28
	.word	355
	.byte	33
	.byte	'Ifx_TickTime',0,14,79,28
	.word	27715
	.byte	33
	.byte	'Ifx_Priority',0,14,103,16
	.word	1015
	.byte	33
	.byte	'Ifx_RxSel',0,14,140,1,3
	.word	19252
	.byte	33
	.byte	'Ifx_SRC_SRCR_Bits',0,4,62,3
	.word	481
	.byte	33
	.byte	'Ifx_SRC_SRCR',0,4,75,3
	.word	771
	.byte	10
	.byte	'_Ifx_SRC_AGBT',0,4,86,25,4,13
	.byte	'SR',0
	.word	771
	.byte	4,2,35,0,0,14
	.word	27887
	.byte	33
	.byte	'Ifx_SRC_AGBT',0,4,89,3
	.word	27919
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN',0,4,92,25,12,13
	.byte	'TX',0
	.word	771
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	771
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	771
	.byte	4,2,35,8,0,14
	.word	27945
	.byte	33
	.byte	'Ifx_SRC_ASCLIN',0,4,97,3
	.word	28004
	.byte	10
	.byte	'_Ifx_SRC_BCUSPB',0,4,100,25,4,13
	.byte	'SBSRC',0
	.word	771
	.byte	4,2,35,0,0,14
	.word	28032
	.byte	33
	.byte	'Ifx_SRC_BCUSPB',0,4,103,3
	.word	28069
	.byte	18,64
	.word	771
	.byte	19,15,0,10
	.byte	'_Ifx_SRC_CAN',0,4,106,25,64,13
	.byte	'INT',0
	.word	28097
	.byte	64,2,35,0,0,14
	.word	28106
	.byte	33
	.byte	'Ifx_SRC_CAN',0,4,109,3
	.word	28138
	.byte	10
	.byte	'_Ifx_SRC_CCU6',0,4,112,25,16,13
	.byte	'SR0',0
	.word	771
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	771
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	771
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	771
	.byte	4,2,35,12,0,14
	.word	28163
	.byte	33
	.byte	'Ifx_SRC_CCU6',0,4,118,3
	.word	28235
	.byte	18,8
	.word	771
	.byte	19,1,0,10
	.byte	'_Ifx_SRC_CERBERUS',0,4,121,25,8,13
	.byte	'SR',0
	.word	28261
	.byte	8,2,35,0,0,14
	.word	28270
	.byte	33
	.byte	'Ifx_SRC_CERBERUS',0,4,124,3
	.word	28306
	.byte	10
	.byte	'_Ifx_SRC_CIF',0,4,127,25,16,13
	.byte	'MI',0
	.word	771
	.byte	4,2,35,0,13
	.byte	'MIEP',0
	.word	771
	.byte	4,2,35,4,13
	.byte	'ISP',0
	.word	771
	.byte	4,2,35,8,13
	.byte	'MJPEG',0
	.word	771
	.byte	4,2,35,12,0,14
	.word	28336
	.byte	33
	.byte	'Ifx_SRC_CIF',0,4,133,1,3
	.word	28409
	.byte	10
	.byte	'_Ifx_SRC_CPU',0,4,136,1,25,4,13
	.byte	'SBSRC',0
	.word	771
	.byte	4,2,35,0,0,14
	.word	28435
	.byte	33
	.byte	'Ifx_SRC_CPU',0,4,139,1,3
	.word	28470
	.byte	18,192,1
	.word	771
	.byte	19,47,0,10
	.byte	'_Ifx_SRC_DMA',0,4,142,1,25,208,1,13
	.byte	'ERR',0
	.word	771
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	5361
	.byte	12,2,35,4,13
	.byte	'CH',0
	.word	28496
	.byte	192,1,2,35,16,0,14
	.word	28506
	.byte	33
	.byte	'Ifx_SRC_DMA',0,4,147,1,3
	.word	28573
	.byte	10
	.byte	'_Ifx_SRC_DSADC',0,4,150,1,25,8,13
	.byte	'SRM',0
	.word	771
	.byte	4,2,35,0,13
	.byte	'SRA',0
	.word	771
	.byte	4,2,35,4,0,14
	.word	28599
	.byte	33
	.byte	'Ifx_SRC_DSADC',0,4,154,1,3
	.word	28647
	.byte	10
	.byte	'_Ifx_SRC_EMEM',0,4,157,1,25,4,13
	.byte	'SR',0
	.word	771
	.byte	4,2,35,0,0,14
	.word	28675
	.byte	33
	.byte	'Ifx_SRC_EMEM',0,4,160,1,3
	.word	28708
	.byte	18,40
	.word	464
	.byte	19,39,0,10
	.byte	'_Ifx_SRC_ERAY',0,4,163,1,25,80,13
	.byte	'INT',0
	.word	28261
	.byte	8,2,35,0,13
	.byte	'TINT',0
	.word	28261
	.byte	8,2,35,8,13
	.byte	'NDAT',0
	.word	28261
	.byte	8,2,35,16,13
	.byte	'MBSC',0
	.word	28261
	.byte	8,2,35,24,13
	.byte	'OBUSY',0
	.word	771
	.byte	4,2,35,32,13
	.byte	'IBUSY',0
	.word	771
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	28735
	.byte	40,2,35,40,0,14
	.word	28744
	.byte	33
	.byte	'Ifx_SRC_ERAY',0,4,172,1,3
	.word	28871
	.byte	10
	.byte	'_Ifx_SRC_ETH',0,4,175,1,25,4,13
	.byte	'SR',0
	.word	771
	.byte	4,2,35,0,0,14
	.word	28898
	.byte	33
	.byte	'Ifx_SRC_ETH',0,4,178,1,3
	.word	28930
	.byte	10
	.byte	'_Ifx_SRC_FCE',0,4,181,1,25,4,13
	.byte	'SR',0
	.word	771
	.byte	4,2,35,0,0,14
	.word	28956
	.byte	33
	.byte	'Ifx_SRC_FCE',0,4,184,1,3
	.word	28988
	.byte	10
	.byte	'_Ifx_SRC_FFT',0,4,187,1,25,12,13
	.byte	'DONE',0
	.word	771
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	771
	.byte	4,2,35,4,13
	.byte	'RFS',0
	.word	771
	.byte	4,2,35,8,0,14
	.word	29014
	.byte	33
	.byte	'Ifx_SRC_FFT',0,4,192,1,3
	.word	29074
	.byte	18,16
	.word	464
	.byte	19,15,0,10
	.byte	'_Ifx_SRC_GPSR',0,4,195,1,25,32,13
	.byte	'SR0',0
	.word	771
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	771
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	771
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	771
	.byte	4,2,35,12,13
	.byte	'reserved_10',0
	.word	29100
	.byte	16,2,35,16,0,14
	.word	29109
	.byte	33
	.byte	'Ifx_SRC_GPSR',0,4,202,1,3
	.word	29203
	.byte	10
	.byte	'_Ifx_SRC_GPT12',0,4,205,1,25,48,13
	.byte	'CIRQ',0
	.word	771
	.byte	4,2,35,0,13
	.byte	'T2',0
	.word	771
	.byte	4,2,35,4,13
	.byte	'T3',0
	.word	771
	.byte	4,2,35,8,13
	.byte	'T4',0
	.word	771
	.byte	4,2,35,12,13
	.byte	'T5',0
	.word	771
	.byte	4,2,35,16,13
	.byte	'T6',0
	.word	771
	.byte	4,2,35,20,13
	.byte	'reserved_18',0
	.word	4392
	.byte	24,2,35,24,0,14
	.word	29230
	.byte	33
	.byte	'Ifx_SRC_GPT12',0,4,214,1,3
	.word	29347
	.byte	18,12
	.word	771
	.byte	19,2,0,18,32
	.word	771
	.byte	19,7,0,18,32
	.word	29384
	.byte	19,0,0,18,88
	.word	464
	.byte	19,87,0,18,108
	.word	771
	.byte	19,26,0,18,96
	.word	464
	.byte	19,95,0,18,96
	.word	29384
	.byte	19,2,0,18,160,3
	.word	464
	.byte	19,159,3,0,18,64
	.word	29384
	.byte	19,1,0,18,192,3
	.word	464
	.byte	19,191,3,0,18,16
	.word	771
	.byte	19,3,0,18,64
	.word	29469
	.byte	19,3,0,18,192,2
	.word	464
	.byte	19,191,2,0,18,52
	.word	464
	.byte	19,51,0,10
	.byte	'_Ifx_SRC_GTM',0,4,217,1,25,204,18,13
	.byte	'AEIIRQ',0
	.word	771
	.byte	4,2,35,0,13
	.byte	'ARUIRQ',0
	.word	29375
	.byte	12,2,35,4,13
	.byte	'reserved_10',0
	.word	3202
	.byte	4,2,35,16,13
	.byte	'BRCIRQ',0
	.word	771
	.byte	4,2,35,20,13
	.byte	'CMPIRQ',0
	.word	771
	.byte	4,2,35,24,13
	.byte	'SPEIRQ',0
	.word	28261
	.byte	8,2,35,28,13
	.byte	'reserved_24',0
	.word	5021
	.byte	8,2,35,36,13
	.byte	'PSM',0
	.word	29393
	.byte	32,2,35,44,13
	.byte	'reserved_4C',0
	.word	29402
	.byte	88,2,35,76,13
	.byte	'DPLL',0
	.word	29411
	.byte	108,3,35,164,1,13
	.byte	'reserved_110',0
	.word	29420
	.byte	96,3,35,144,2,13
	.byte	'ERR',0
	.word	771
	.byte	4,3,35,240,2,13
	.byte	'reserved_174',0
	.word	5361
	.byte	12,3,35,244,2,13
	.byte	'TIM',0
	.word	29429
	.byte	96,3,35,128,3,13
	.byte	'reserved_1E0',0
	.word	29438
	.byte	160,3,3,35,224,3,13
	.byte	'MCS',0
	.word	29429
	.byte	96,3,35,128,7,13
	.byte	'reserved_3E0',0
	.word	29438
	.byte	160,3,3,35,224,7,13
	.byte	'TOM',0
	.word	29449
	.byte	64,3,35,128,11,13
	.byte	'reserved_5C0',0
	.word	29458
	.byte	192,3,3,35,192,11,13
	.byte	'ATOM',0
	.word	29478
	.byte	64,3,35,128,15,13
	.byte	'reserved_7C0',0
	.word	29487
	.byte	192,2,3,35,192,15,13
	.byte	'MCSW0',0
	.word	29375
	.byte	12,3,35,128,18,13
	.byte	'reserved_90C',0
	.word	29498
	.byte	52,3,35,140,18,13
	.byte	'MCSW1',0
	.word	29375
	.byte	12,3,35,192,18,0,14
	.word	29507
	.byte	33
	.byte	'Ifx_SRC_GTM',0,4,243,1,3
	.word	29967
	.byte	10
	.byte	'_Ifx_SRC_HSCT',0,4,246,1,25,4,13
	.byte	'SR',0
	.word	771
	.byte	4,2,35,0,0,14
	.word	29993
	.byte	33
	.byte	'Ifx_SRC_HSCT',0,4,249,1,3
	.word	30026
	.byte	10
	.byte	'_Ifx_SRC_HSSL',0,4,252,1,25,16,13
	.byte	'COK',0
	.word	771
	.byte	4,2,35,0,13
	.byte	'RDI',0
	.word	771
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	771
	.byte	4,2,35,8,13
	.byte	'TRG',0
	.word	771
	.byte	4,2,35,12,0,14
	.word	30053
	.byte	33
	.byte	'Ifx_SRC_HSSL',0,4,130,2,3
	.word	30126
	.byte	18,56
	.word	464
	.byte	19,55,0,10
	.byte	'_Ifx_SRC_I2C',0,4,133,2,25,80,13
	.byte	'BREQ',0
	.word	771
	.byte	4,2,35,0,13
	.byte	'LBREQ',0
	.word	771
	.byte	4,2,35,4,13
	.byte	'SREQ',0
	.word	771
	.byte	4,2,35,8,13
	.byte	'LSREQ',0
	.word	771
	.byte	4,2,35,12,13
	.byte	'ERR',0
	.word	771
	.byte	4,2,35,16,13
	.byte	'P',0
	.word	771
	.byte	4,2,35,20,13
	.byte	'reserved_18',0
	.word	30153
	.byte	56,2,35,24,0,14
	.word	30162
	.byte	33
	.byte	'Ifx_SRC_I2C',0,4,142,2,3
	.word	30285
	.byte	10
	.byte	'_Ifx_SRC_LMU',0,4,145,2,25,4,13
	.byte	'SR',0
	.word	771
	.byte	4,2,35,0,0,14
	.word	30311
	.byte	33
	.byte	'Ifx_SRC_LMU',0,4,148,2,3
	.word	30343
	.byte	10
	.byte	'_Ifx_SRC_MSC',0,4,151,2,25,20,13
	.byte	'SR0',0
	.word	771
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	771
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	771
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	771
	.byte	4,2,35,12,13
	.byte	'SR4',0
	.word	771
	.byte	4,2,35,16,0,14
	.word	30369
	.byte	33
	.byte	'Ifx_SRC_MSC',0,4,158,2,3
	.word	30454
	.byte	10
	.byte	'_Ifx_SRC_PMU',0,4,161,2,25,4,13
	.byte	'SR',0
	.word	771
	.byte	4,2,35,0,0,14
	.word	30480
	.byte	33
	.byte	'Ifx_SRC_PMU',0,4,164,2,3
	.word	30512
	.byte	10
	.byte	'_Ifx_SRC_PSI5',0,4,167,2,25,32,13
	.byte	'SR',0
	.word	29384
	.byte	32,2,35,0,0,14
	.word	30538
	.byte	33
	.byte	'Ifx_SRC_PSI5',0,4,170,2,3
	.word	30571
	.byte	10
	.byte	'_Ifx_SRC_PSI5S',0,4,173,2,25,32,13
	.byte	'SR',0
	.word	29384
	.byte	32,2,35,0,0,14
	.word	30598
	.byte	33
	.byte	'Ifx_SRC_PSI5S',0,4,176,2,3
	.word	30632
	.byte	10
	.byte	'_Ifx_SRC_QSPI',0,4,179,2,25,24,13
	.byte	'TX',0
	.word	771
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	771
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	771
	.byte	4,2,35,8,13
	.byte	'PT',0
	.word	771
	.byte	4,2,35,12,13
	.byte	'HC',0
	.word	771
	.byte	4,2,35,16,13
	.byte	'U',0
	.word	771
	.byte	4,2,35,20,0,14
	.word	30660
	.byte	33
	.byte	'Ifx_SRC_QSPI',0,4,187,2,3
	.word	30753
	.byte	10
	.byte	'_Ifx_SRC_SCR',0,4,190,2,25,4,13
	.byte	'SR',0
	.word	771
	.byte	4,2,35,0,0,14
	.word	30780
	.byte	33
	.byte	'Ifx_SRC_SCR',0,4,193,2,3
	.word	30812
	.byte	10
	.byte	'_Ifx_SRC_SCU',0,4,196,2,25,20,13
	.byte	'DTS',0
	.word	771
	.byte	4,2,35,0,13
	.byte	'ERU',0
	.word	29469
	.byte	16,2,35,4,0,14
	.word	30838
	.byte	33
	.byte	'Ifx_SRC_SCU',0,4,200,2,3
	.word	30884
	.byte	18,24
	.word	771
	.byte	19,5,0,10
	.byte	'_Ifx_SRC_SENT',0,4,203,2,25,24,13
	.byte	'SR',0
	.word	30910
	.byte	24,2,35,0,0,14
	.word	30919
	.byte	33
	.byte	'Ifx_SRC_SENT',0,4,206,2,3
	.word	30952
	.byte	10
	.byte	'_Ifx_SRC_SMU',0,4,209,2,25,12,13
	.byte	'SR',0
	.word	29375
	.byte	12,2,35,0,0,14
	.word	30979
	.byte	33
	.byte	'Ifx_SRC_SMU',0,4,212,2,3
	.word	31011
	.byte	10
	.byte	'_Ifx_SRC_STM',0,4,215,2,25,8,13
	.byte	'SR0',0
	.word	771
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	771
	.byte	4,2,35,4,0,14
	.word	31037
	.byte	33
	.byte	'Ifx_SRC_STM',0,4,219,2,3
	.word	31083
	.byte	10
	.byte	'_Ifx_SRC_VADCCG',0,4,222,2,25,16,13
	.byte	'SR0',0
	.word	771
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	771
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	771
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	771
	.byte	4,2,35,12,0,14
	.word	31109
	.byte	33
	.byte	'Ifx_SRC_VADCCG',0,4,228,2,3
	.word	31184
	.byte	10
	.byte	'_Ifx_SRC_VADCG',0,4,231,2,25,16,13
	.byte	'SR0',0
	.word	771
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	771
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	771
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	771
	.byte	4,2,35,12,0,14
	.word	31213
	.byte	33
	.byte	'Ifx_SRC_VADCG',0,4,237,2,3
	.word	31287
	.byte	10
	.byte	'_Ifx_SRC_XBAR',0,4,240,2,25,4,13
	.byte	'SRC',0
	.word	771
	.byte	4,2,35,0,0,14
	.word	31315
	.byte	33
	.byte	'Ifx_SRC_XBAR',0,4,243,2,3
	.word	31349
	.byte	18,4
	.word	27887
	.byte	19,0,0,14
	.word	31376
	.byte	10
	.byte	'_Ifx_SRC_GAGBT',0,4,128,3,25,4,13
	.byte	'AGBT',0
	.word	31385
	.byte	4,2,35,0,0,14
	.word	31390
	.byte	33
	.byte	'Ifx_SRC_GAGBT',0,4,131,3,3
	.word	31426
	.byte	18,48
	.word	27945
	.byte	19,3,0,14
	.word	31454
	.byte	10
	.byte	'_Ifx_SRC_GASCLIN',0,4,134,3,25,48,13
	.byte	'ASCLIN',0
	.word	31463
	.byte	48,2,35,0,0,14
	.word	31468
	.byte	33
	.byte	'Ifx_SRC_GASCLIN',0,4,137,3,3
	.word	31508
	.byte	14
	.word	28032
	.byte	10
	.byte	'_Ifx_SRC_GBCU',0,4,140,3,25,4,13
	.byte	'SPB',0
	.word	31538
	.byte	4,2,35,0,0,14
	.word	31543
	.byte	33
	.byte	'Ifx_SRC_GBCU',0,4,143,3,3
	.word	31577
	.byte	18,64
	.word	28106
	.byte	19,0,0,14
	.word	31604
	.byte	10
	.byte	'_Ifx_SRC_GCAN',0,4,146,3,25,64,13
	.byte	'CAN',0
	.word	31613
	.byte	64,2,35,0,0,14
	.word	31618
	.byte	33
	.byte	'Ifx_SRC_GCAN',0,4,149,3,3
	.word	31652
	.byte	18,32
	.word	28163
	.byte	19,1,0,14
	.word	31679
	.byte	10
	.byte	'_Ifx_SRC_GCCU6',0,4,152,3,25,32,13
	.byte	'CCU6',0
	.word	31688
	.byte	32,2,35,0,0,14
	.word	31693
	.byte	33
	.byte	'Ifx_SRC_GCCU6',0,4,155,3,3
	.word	31729
	.byte	14
	.word	28270
	.byte	10
	.byte	'_Ifx_SRC_GCERBERUS',0,4,158,3,25,8,13
	.byte	'CERBERUS',0
	.word	31757
	.byte	8,2,35,0,0,14
	.word	31762
	.byte	33
	.byte	'Ifx_SRC_GCERBERUS',0,4,161,3,3
	.word	31806
	.byte	18,16
	.word	28336
	.byte	19,0,0,14
	.word	31838
	.byte	10
	.byte	'_Ifx_SRC_GCIF',0,4,164,3,25,16,13
	.byte	'CIF',0
	.word	31847
	.byte	16,2,35,0,0,14
	.word	31852
	.byte	33
	.byte	'Ifx_SRC_GCIF',0,4,167,3,3
	.word	31886
	.byte	18,8
	.word	28435
	.byte	19,1,0,14
	.word	31913
	.byte	10
	.byte	'_Ifx_SRC_GCPU',0,4,170,3,25,8,13
	.byte	'CPU',0
	.word	31922
	.byte	8,2,35,0,0,14
	.word	31927
	.byte	33
	.byte	'Ifx_SRC_GCPU',0,4,173,3,3
	.word	31961
	.byte	18,208,1
	.word	28506
	.byte	19,0,0,14
	.word	31988
	.byte	10
	.byte	'_Ifx_SRC_GDMA',0,4,176,3,25,208,1,13
	.byte	'DMA',0
	.word	31998
	.byte	208,1,2,35,0,0,14
	.word	32003
	.byte	33
	.byte	'Ifx_SRC_GDMA',0,4,179,3,3
	.word	32039
	.byte	14
	.word	28599
	.byte	14
	.word	28599
	.byte	14
	.word	28599
	.byte	10
	.byte	'_Ifx_SRC_GDSADC',0,4,182,3,25,32,13
	.byte	'DSADC0',0
	.word	32066
	.byte	8,2,35,0,13
	.byte	'reserved_8',0
	.word	5021
	.byte	8,2,35,8,13
	.byte	'DSADC2',0
	.word	32071
	.byte	8,2,35,16,13
	.byte	'DSADC3',0
	.word	32076
	.byte	8,2,35,24,0,14
	.word	32081
	.byte	33
	.byte	'Ifx_SRC_GDSADC',0,4,188,3,3
	.word	32172
	.byte	18,4
	.word	28675
	.byte	19,0,0,14
	.word	32201
	.byte	10
	.byte	'_Ifx_SRC_GEMEM',0,4,191,3,25,4,13
	.byte	'EMEM',0
	.word	32210
	.byte	4,2,35,0,0,14
	.word	32215
	.byte	33
	.byte	'Ifx_SRC_GEMEM',0,4,194,3,3
	.word	32251
	.byte	18,80
	.word	28744
	.byte	19,0,0,14
	.word	32279
	.byte	10
	.byte	'_Ifx_SRC_GERAY',0,4,197,3,25,80,13
	.byte	'ERAY',0
	.word	32288
	.byte	80,2,35,0,0,14
	.word	32293
	.byte	33
	.byte	'Ifx_SRC_GERAY',0,4,200,3,3
	.word	32329
	.byte	18,4
	.word	28898
	.byte	19,0,0,14
	.word	32357
	.byte	10
	.byte	'_Ifx_SRC_GETH',0,4,203,3,25,4,13
	.byte	'ETH',0
	.word	32366
	.byte	4,2,35,0,0,14
	.word	32371
	.byte	33
	.byte	'Ifx_SRC_GETH',0,4,206,3,3
	.word	32405
	.byte	18,4
	.word	28956
	.byte	19,0,0,14
	.word	32432
	.byte	10
	.byte	'_Ifx_SRC_GFCE',0,4,209,3,25,4,13
	.byte	'FCE',0
	.word	32441
	.byte	4,2,35,0,0,14
	.word	32446
	.byte	33
	.byte	'Ifx_SRC_GFCE',0,4,212,3,3
	.word	32480
	.byte	18,12
	.word	29014
	.byte	19,0,0,14
	.word	32507
	.byte	10
	.byte	'_Ifx_SRC_GFFT',0,4,215,3,25,12,13
	.byte	'FFT',0
	.word	32516
	.byte	12,2,35,0,0,14
	.word	32521
	.byte	33
	.byte	'Ifx_SRC_GFFT',0,4,218,3,3
	.word	32555
	.byte	18,64
	.word	29109
	.byte	19,1,0,14
	.word	32582
	.byte	10
	.byte	'_Ifx_SRC_GGPSR',0,4,221,3,25,64,13
	.byte	'GPSR',0
	.word	32591
	.byte	64,2,35,0,0,14
	.word	32596
	.byte	33
	.byte	'Ifx_SRC_GGPSR',0,4,224,3,3
	.word	32632
	.byte	18,48
	.word	29230
	.byte	19,0,0,14
	.word	32660
	.byte	10
	.byte	'_Ifx_SRC_GGPT12',0,4,227,3,25,48,13
	.byte	'GPT12',0
	.word	32669
	.byte	48,2,35,0,0,14
	.word	32674
	.byte	33
	.byte	'Ifx_SRC_GGPT12',0,4,230,3,3
	.word	32712
	.byte	18,204,18
	.word	29507
	.byte	19,0,0,14
	.word	32741
	.byte	10
	.byte	'_Ifx_SRC_GGTM',0,4,233,3,25,204,18,13
	.byte	'GTM',0
	.word	32751
	.byte	204,18,2,35,0,0,14
	.word	32756
	.byte	33
	.byte	'Ifx_SRC_GGTM',0,4,236,3,3
	.word	32792
	.byte	18,4
	.word	29993
	.byte	19,0,0,14
	.word	32819
	.byte	10
	.byte	'_Ifx_SRC_GHSCT',0,4,239,3,25,4,13
	.byte	'HSCT',0
	.word	32828
	.byte	4,2,35,0,0,14
	.word	32833
	.byte	33
	.byte	'Ifx_SRC_GHSCT',0,4,242,3,3
	.word	32869
	.byte	18,64
	.word	30053
	.byte	19,3,0,14
	.word	32897
	.byte	10
	.byte	'_Ifx_SRC_GHSSL',0,4,245,3,25,68,13
	.byte	'HSSL',0
	.word	32906
	.byte	64,2,35,0,13
	.byte	'EXI',0
	.word	771
	.byte	4,2,35,64,0,14
	.word	32911
	.byte	33
	.byte	'Ifx_SRC_GHSSL',0,4,249,3,3
	.word	32960
	.byte	18,80
	.word	30162
	.byte	19,0,0,14
	.word	32988
	.byte	10
	.byte	'_Ifx_SRC_GI2C',0,4,252,3,25,80,13
	.byte	'I2C',0
	.word	32997
	.byte	80,2,35,0,0,14
	.word	33002
	.byte	33
	.byte	'Ifx_SRC_GI2C',0,4,255,3,3
	.word	33036
	.byte	18,4
	.word	30311
	.byte	19,0,0,14
	.word	33063
	.byte	10
	.byte	'_Ifx_SRC_GLMU',0,4,130,4,25,4,13
	.byte	'LMU',0
	.word	33072
	.byte	4,2,35,0,0,14
	.word	33077
	.byte	33
	.byte	'Ifx_SRC_GLMU',0,4,133,4,3
	.word	33111
	.byte	18,40
	.word	30369
	.byte	19,1,0,14
	.word	33138
	.byte	10
	.byte	'_Ifx_SRC_GMSC',0,4,136,4,25,40,13
	.byte	'MSC',0
	.word	33147
	.byte	40,2,35,0,0,14
	.word	33152
	.byte	33
	.byte	'Ifx_SRC_GMSC',0,4,139,4,3
	.word	33186
	.byte	18,8
	.word	30480
	.byte	19,1,0,14
	.word	33213
	.byte	10
	.byte	'_Ifx_SRC_GPMU',0,4,142,4,25,8,13
	.byte	'PMU',0
	.word	33222
	.byte	8,2,35,0,0,14
	.word	33227
	.byte	33
	.byte	'Ifx_SRC_GPMU',0,4,145,4,3
	.word	33261
	.byte	18,32
	.word	30538
	.byte	19,0,0,14
	.word	33288
	.byte	10
	.byte	'_Ifx_SRC_GPSI5',0,4,148,4,25,32,13
	.byte	'PSI5',0
	.word	33297
	.byte	32,2,35,0,0,14
	.word	33302
	.byte	33
	.byte	'Ifx_SRC_GPSI5',0,4,151,4,3
	.word	33338
	.byte	18,32
	.word	30598
	.byte	19,0,0,14
	.word	33366
	.byte	10
	.byte	'_Ifx_SRC_GPSI5S',0,4,154,4,25,32,13
	.byte	'PSI5S',0
	.word	33375
	.byte	32,2,35,0,0,14
	.word	33380
	.byte	33
	.byte	'Ifx_SRC_GPSI5S',0,4,157,4,3
	.word	33418
	.byte	18,96
	.word	30660
	.byte	19,3,0,14
	.word	33447
	.byte	10
	.byte	'_Ifx_SRC_GQSPI',0,4,160,4,25,96,13
	.byte	'QSPI',0
	.word	33456
	.byte	96,2,35,0,0,14
	.word	33461
	.byte	33
	.byte	'Ifx_SRC_GQSPI',0,4,163,4,3
	.word	33497
	.byte	18,4
	.word	30780
	.byte	19,0,0,14
	.word	33525
	.byte	10
	.byte	'_Ifx_SRC_GSCR',0,4,166,4,25,4,13
	.byte	'SCR',0
	.word	33534
	.byte	4,2,35,0,0,14
	.word	33539
	.byte	33
	.byte	'Ifx_SRC_GSCR',0,4,169,4,3
	.word	33573
	.byte	14
	.word	30838
	.byte	10
	.byte	'_Ifx_SRC_GSCU',0,4,172,4,25,20,13
	.byte	'SCU',0
	.word	33600
	.byte	20,2,35,0,0,14
	.word	33605
	.byte	33
	.byte	'Ifx_SRC_GSCU',0,4,175,4,3
	.word	33639
	.byte	18,24
	.word	30919
	.byte	19,0,0,14
	.word	33666
	.byte	10
	.byte	'_Ifx_SRC_GSENT',0,4,178,4,25,24,13
	.byte	'SENT',0
	.word	33675
	.byte	24,2,35,0,0,14
	.word	33680
	.byte	33
	.byte	'Ifx_SRC_GSENT',0,4,181,4,3
	.word	33716
	.byte	18,12
	.word	30979
	.byte	19,0,0,14
	.word	33744
	.byte	10
	.byte	'_Ifx_SRC_GSMU',0,4,184,4,25,12,13
	.byte	'SMU',0
	.word	33753
	.byte	12,2,35,0,0,14
	.word	33758
	.byte	33
	.byte	'Ifx_SRC_GSMU',0,4,187,4,3
	.word	33792
	.byte	18,16
	.word	31037
	.byte	19,1,0,14
	.word	33819
	.byte	10
	.byte	'_Ifx_SRC_GSTM',0,4,190,4,25,16,13
	.byte	'STM',0
	.word	33828
	.byte	16,2,35,0,0,14
	.word	33833
	.byte	33
	.byte	'Ifx_SRC_GSTM',0,4,193,4,3
	.word	33867
	.byte	18,64
	.word	31213
	.byte	19,3,0,14
	.word	33894
	.byte	18,224,1
	.word	464
	.byte	19,223,1,0,18,32
	.word	31109
	.byte	19,1,0,14
	.word	33919
	.byte	10
	.byte	'_Ifx_SRC_GVADC',0,4,196,4,25,192,2,13
	.byte	'G',0
	.word	33903
	.byte	64,2,35,0,13
	.byte	'reserved_40',0
	.word	33908
	.byte	224,1,2,35,64,13
	.byte	'CG',0
	.word	33928
	.byte	32,3,35,160,2,0,14
	.word	33933
	.byte	33
	.byte	'Ifx_SRC_GVADC',0,4,201,4,3
	.word	34002
	.byte	14
	.word	31315
	.byte	10
	.byte	'_Ifx_SRC_GXBAR',0,4,204,4,25,4,13
	.byte	'XBAR',0
	.word	34030
	.byte	4,2,35,0,0,14
	.word	34035
	.byte	33
	.byte	'Ifx_SRC_GXBAR',0,4,207,4,3
	.word	34071
	.byte	15,19,240,10,9,1,16
	.byte	'IfxScu_CCUCON0_CLKSEL_fBack',0,0,16
	.byte	'IfxScu_CCUCON0_CLKSEL_fPll',0,1,0,33
	.byte	'IfxScu_CCUCON0_CLKSEL',0,19,244,10,3
	.word	34099
	.byte	15,19,254,10,9,1,16
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,16
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,16
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,33
	.byte	'IfxScu_WDTCON1_IR',0,19,131,11,3
	.word	34196
	.byte	10
	.byte	'_Ifx_SCU_ACCEN0_Bits',0,6,45,16,4,11
	.byte	'EN0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	464
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	464
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	464
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_ACCEN0_Bits',0,6,79,3
	.word	34318
	.byte	10
	.byte	'_Ifx_SCU_ACCEN1_Bits',0,6,82,16,4,11
	.byte	'reserved_0',0,4
	.word	441
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_SCU_ACCEN1_Bits',0,6,85,3
	.word	34875
	.byte	10
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,6,88,16,4,11
	.byte	'STM0DIS',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'STM1DIS',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'STM2DIS',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	441
	.byte	29,0,2,35,0,0,33
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,6,94,3
	.word	34952
	.byte	10
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,6,97,16,4,11
	.byte	'BAUD1DIV',0,1
	.word	464
	.byte	4,4,2,35,0,11
	.byte	'BAUD2DIV',0,1
	.word	464
	.byte	4,0,2,35,0,11
	.byte	'SRIDIV',0,1
	.word	464
	.byte	4,4,2,35,1,11
	.byte	'LPDIV',0,1
	.word	464
	.byte	4,0,2,35,1,11
	.byte	'SPBDIV',0,1
	.word	464
	.byte	4,4,2,35,2,11
	.byte	'FSI2DIV',0,1
	.word	464
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	464
	.byte	2,0,2,35,2,11
	.byte	'FSIDIV',0,1
	.word	464
	.byte	2,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	464
	.byte	2,4,2,35,3,11
	.byte	'CLKSEL',0,1
	.word	464
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_CCUCON0_Bits',0,6,111,3
	.word	35088
	.byte	10
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,6,114,16,4,11
	.byte	'CANDIV',0,1
	.word	464
	.byte	4,4,2,35,0,11
	.byte	'ERAYDIV',0,1
	.word	464
	.byte	4,0,2,35,0,11
	.byte	'STMDIV',0,1
	.word	464
	.byte	4,4,2,35,1,11
	.byte	'GTMDIV',0,1
	.word	464
	.byte	4,0,2,35,1,11
	.byte	'ETHDIV',0,1
	.word	464
	.byte	4,4,2,35,2,11
	.byte	'ASCLINFDIV',0,1
	.word	464
	.byte	4,0,2,35,2,11
	.byte	'ASCLINSDIV',0,1
	.word	464
	.byte	4,4,2,35,3,11
	.byte	'INSEL',0,1
	.word	464
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_CCUCON1_Bits',0,6,126,3
	.word	35368
	.byte	10
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,6,129,1,16,4,11
	.byte	'BBBDIV',0,1
	.word	464
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	441
	.byte	26,2,2,35,0,11
	.byte	'UP',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_CCUCON2_Bits',0,6,135,1,3
	.word	35606
	.byte	10
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,6,138,1,16,4,11
	.byte	'PLLDIV',0,1
	.word	464
	.byte	6,2,2,35,0,11
	.byte	'PLLSEL',0,1
	.word	464
	.byte	2,0,2,35,0,11
	.byte	'PLLERAYDIV',0,1
	.word	464
	.byte	6,2,2,35,1,11
	.byte	'PLLERAYSEL',0,1
	.word	464
	.byte	2,0,2,35,1,11
	.byte	'SRIDIV',0,1
	.word	464
	.byte	6,2,2,35,2,11
	.byte	'SRISEL',0,1
	.word	464
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	5,3,2,35,3,11
	.byte	'SLCK',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'UP',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_CCUCON3_Bits',0,6,150,1,3
	.word	35734
	.byte	10
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,6,153,1,16,4,11
	.byte	'SPBDIV',0,1
	.word	464
	.byte	6,2,2,35,0,11
	.byte	'SPBSEL',0,1
	.word	464
	.byte	2,0,2,35,0,11
	.byte	'GTMDIV',0,1
	.word	464
	.byte	6,2,2,35,1,11
	.byte	'GTMSEL',0,1
	.word	464
	.byte	2,0,2,35,1,11
	.byte	'STMDIV',0,1
	.word	464
	.byte	6,2,2,35,2,11
	.byte	'STMSEL',0,1
	.word	464
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	5,3,2,35,3,11
	.byte	'SLCK',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'UP',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_CCUCON4_Bits',0,6,165,1,3
	.word	35977
	.byte	10
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,6,168,1,16,4,11
	.byte	'MAXDIV',0,1
	.word	464
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	441
	.byte	26,2,2,35,0,11
	.byte	'UP',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_CCUCON5_Bits',0,6,174,1,3
	.word	36212
	.byte	10
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,6,177,1,16,4,11
	.byte	'CPU0DIV',0,1
	.word	464
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	441
	.byte	26,0,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON6_Bits',0,6,181,1,3
	.word	36340
	.byte	10
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,6,184,1,16,4,11
	.byte	'CPU1DIV',0,1
	.word	464
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	441
	.byte	26,0,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON7_Bits',0,6,188,1,3
	.word	36440
	.byte	10
	.byte	'_Ifx_SCU_CHIPID_Bits',0,6,191,1,16,4,11
	.byte	'CHREV',0,1
	.word	464
	.byte	6,2,2,35,0,11
	.byte	'CHTEC',0,1
	.word	464
	.byte	2,0,2,35,0,11
	.byte	'CHID',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'EEA',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'UCODE',0,1
	.word	464
	.byte	7,0,2,35,2,11
	.byte	'FSIZE',0,1
	.word	464
	.byte	4,4,2,35,3,11
	.byte	'SP',0,1
	.word	464
	.byte	2,2,2,35,3,11
	.byte	'SEC',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_CHIPID_Bits',0,6,202,1,3
	.word	36540
	.byte	10
	.byte	'_Ifx_SCU_DTSCON_Bits',0,6,205,1,16,4,11
	.byte	'PWD',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'START',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	464
	.byte	2,4,2,35,0,11
	.byte	'CAL',0,4
	.word	441
	.byte	20,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	7,1,2,35,3,11
	.byte	'SLCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_DTSCON_Bits',0,6,213,1,3
	.word	36748
	.byte	10
	.byte	'_Ifx_SCU_DTSLIM_Bits',0,6,216,1,16,4,11
	.byte	'LOWER',0,2
	.word	1015
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	464
	.byte	5,1,2,35,1,11
	.byte	'LLU',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'UPPER',0,2
	.word	1015
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	464
	.byte	4,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'UOF',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_DTSLIM_Bits',0,6,225,1,3
	.word	36913
	.byte	10
	.byte	'_Ifx_SCU_DTSSTAT_Bits',0,6,228,1,16,4,11
	.byte	'RESULT',0,2
	.word	1015
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	464
	.byte	4,2,2,35,1,11
	.byte	'RDY',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'BUSY',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_DTSSTAT_Bits',0,6,235,1,3
	.word	37096
	.byte	10
	.byte	'_Ifx_SCU_EICR_Bits',0,6,238,1,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	4,4,2,35,0,11
	.byte	'EXIS0',0,1
	.word	464
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'FEN0',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'REN0',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'LDEN0',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'EIEN0',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'INP0',0,1
	.word	464
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	441
	.byte	5,12,2,35,0,11
	.byte	'EXIS1',0,1
	.word	464
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'FEN1',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'REN1',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'LDEN1',0,1
	.word	464
	.byte	1,5,2,35,3,11
	.byte	'EIEN1',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'INP1',0,1
	.word	464
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EICR_Bits',0,6,129,2,3
	.word	37250
	.byte	10
	.byte	'_Ifx_SCU_EIFR_Bits',0,6,132,2,16,4,11
	.byte	'INTF0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'INTF1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'INTF2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'INTF3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'INTF4',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'INTF5',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'INTF6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'INTF7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	441
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_SCU_EIFR_Bits',0,6,143,2,3
	.word	37614
	.byte	10
	.byte	'_Ifx_SCU_EMSR_Bits',0,6,146,2,16,4,11
	.byte	'POL',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'MODE',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'ENON',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'PSEL',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	1015
	.byte	12,0,2,35,0,11
	.byte	'EMSF',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'SEMSF',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	464
	.byte	6,0,2,35,2,11
	.byte	'EMSFM',0,1
	.word	464
	.byte	2,6,2,35,3,11
	.byte	'SEMSFM',0,1
	.word	464
	.byte	2,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	464
	.byte	4,0,2,35,3,0,33
	.byte	'Ifx_SCU_EMSR_Bits',0,6,159,2,3
	.word	37825
	.byte	10
	.byte	'_Ifx_SCU_ESRCFG_Bits',0,6,162,2,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	7,1,2,35,0,11
	.byte	'EDCON',0,2
	.word	1015
	.byte	2,7,2,35,0,11
	.byte	'reserved_9',0,4
	.word	441
	.byte	23,0,2,35,0,0,33
	.byte	'Ifx_SCU_ESRCFG_Bits',0,6,167,2,3
	.word	38077
	.byte	10
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,6,170,2,16,4,11
	.byte	'ARI',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'ARC',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	441
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_SCU_ESROCFG_Bits',0,6,175,2,3
	.word	38195
	.byte	10
	.byte	'_Ifx_SCU_EVR13CON_Bits',0,6,178,2,16,4,11
	.byte	'reserved_0',0,4
	.word	441
	.byte	28,4,2,35,0,11
	.byte	'EVR13OFF',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'BPEVR13OFF',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVR13CON_Bits',0,6,185,2,3
	.word	38306
	.byte	10
	.byte	'_Ifx_SCU_EVR33CON_Bits',0,6,188,2,16,4,11
	.byte	'reserved_0',0,4
	.word	441
	.byte	28,4,2,35,0,11
	.byte	'EVR33OFF',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'BPEVR33OFF',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVR33CON_Bits',0,6,195,2,3
	.word	38469
	.byte	10
	.byte	'_Ifx_SCU_EVRADCSTAT_Bits',0,6,198,2,16,4,11
	.byte	'ADC13V',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'ADC33V',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'ADCSWDV',0,1
	.word	464
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	7,1,2,35,3,11
	.byte	'VAL',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRADCSTAT_Bits',0,6,205,2,3
	.word	38632
	.byte	10
	.byte	'_Ifx_SCU_EVRDVSTAT_Bits',0,6,208,2,16,4,11
	.byte	'DVS13TRIM',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'DVS33TRIM',0,1
	.word	464
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	7,1,2,35,3,11
	.byte	'VAL',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRDVSTAT_Bits',0,6,215,2,3
	.word	38790
	.byte	10
	.byte	'_Ifx_SCU_EVRMONCTRL_Bits',0,6,218,2,16,4,11
	.byte	'EVR13OVMOD',0,1
	.word	464
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	464
	.byte	2,4,2,35,0,11
	.byte	'EVR13UVMOD',0,1
	.word	464
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	464
	.byte	2,0,2,35,0,11
	.byte	'EVR33OVMOD',0,1
	.word	464
	.byte	2,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	464
	.byte	2,4,2,35,1,11
	.byte	'EVR33UVMOD',0,1
	.word	464
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	464
	.byte	2,0,2,35,1,11
	.byte	'SWDOVMOD',0,1
	.word	464
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	464
	.byte	2,4,2,35,2,11
	.byte	'SWDUVMOD',0,1
	.word	464
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	1015
	.byte	10,0,2,35,2,0,33
	.byte	'Ifx_SCU_EVRMONCTRL_Bits',0,6,232,2,3
	.word	38955
	.byte	10
	.byte	'_Ifx_SCU_EVROSCCTRL_Bits',0,6,235,2,16,4,11
	.byte	'OSCTRIM',0,2
	.word	1015
	.byte	10,6,2,35,0,11
	.byte	'OSCPTAT',0,1
	.word	464
	.byte	6,0,2,35,1,11
	.byte	'OSCANASEL',0,1
	.word	464
	.byte	4,4,2,35,2,11
	.byte	'HPBGTRIM',0,2
	.word	1015
	.byte	7,5,2,35,2,11
	.byte	'HPBGCLKEN',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'OSC3V3',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	464
	.byte	2,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVROSCCTRL_Bits',0,6,245,2,3
	.word	39284
	.byte	10
	.byte	'_Ifx_SCU_EVROVMON_Bits',0,6,248,2,16,4,11
	.byte	'EVR13OVVAL',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'EVR33OVVAL',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'SWDOVVAL',0,1
	.word	464
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVROVMON_Bits',0,6,255,2,3
	.word	39505
	.byte	10
	.byte	'_Ifx_SCU_EVRRSTCON_Bits',0,6,130,3,16,4,11
	.byte	'RST13TRIM',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	441
	.byte	16,8,2,35,0,11
	.byte	'RST13OFF',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'BPRST13OFF',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'RST33OFF',0,1
	.word	464
	.byte	1,5,2,35,3,11
	.byte	'BPRST33OFF',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'RSTSWDOFF',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'BPRSTSWDOFF',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRRSTCON_Bits',0,6,142,3,3
	.word	39668
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF1_Bits',0,6,145,3,16,4,11
	.byte	'SD5P',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'SD5I',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'SD5D',0,1
	.word	464
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRSDCOEFF1_Bits',0,6,152,3,3
	.word	39940
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF2_Bits',0,6,155,3,16,4,11
	.byte	'SD33P',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'SD33I',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'SD33D',0,1
	.word	464
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRSDCOEFF2_Bits',0,6,162,3,3
	.word	40093
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF3_Bits',0,6,165,3,16,4,11
	.byte	'CT5REG0',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'CT5REG1',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'CT5REG2',0,1
	.word	464
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRSDCOEFF3_Bits',0,6,172,3,3
	.word	40249
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF4_Bits',0,6,175,3,16,4,11
	.byte	'CT5REG3',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'CT5REG4',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRSDCOEFF4_Bits',0,6,181,3,3
	.word	40411
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF5_Bits',0,6,184,3,16,4,11
	.byte	'CT33REG0',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'CT33REG1',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'CT33REG2',0,1
	.word	464
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRSDCOEFF5_Bits',0,6,191,3,3
	.word	40554
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF6_Bits',0,6,194,3,16,4,11
	.byte	'CT33REG3',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'CT33REG4',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRSDCOEFF6_Bits',0,6,200,3,3
	.word	40719
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL1_Bits',0,6,203,3,16,4,11
	.byte	'SDFREQSPRD',0,2
	.word	1015
	.byte	16,0,2,35,0,11
	.byte	'SDFREQ',0,1
	.word	464
	.byte	8,0,2,35,2,11
	.byte	'SDSTEP',0,1
	.word	464
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	464
	.byte	2,2,2,35,3,11
	.byte	'SDSAMPLE',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRSDCTRL1_Bits',0,6,211,3,3
	.word	40864
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL2_Bits',0,6,214,3,16,4,11
	.byte	'DRVP',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'SDMINMAXDC',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'DRVN',0,1
	.word	464
	.byte	8,0,2,35,2,11
	.byte	'SDLUT',0,1
	.word	464
	.byte	6,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRSDCTRL2_Bits',0,6,222,3,3
	.word	41045
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL3_Bits',0,6,225,3,16,4,11
	.byte	'SDPWMPRE',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'SDPID',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'SDVOKLVL',0,1
	.word	464
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRSDCTRL3_Bits',0,6,232,3,3
	.word	41219
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL4_Bits',0,6,235,3,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'SYNCDIV',0,1
	.word	464
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	441
	.byte	20,1,2,35,0,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRSDCTRL4_Bits',0,6,241,3,3
	.word	41379
	.byte	10
	.byte	'_Ifx_SCU_EVRSTAT_Bits',0,6,244,3,16,4,11
	.byte	'EVR13',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'OV13',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'EVR33',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'OV33',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'OVSWD',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'UV13',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'UV33',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'UVSWD',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'EXTPASS13',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'EXTPASS33',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'BGPROK',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	441
	.byte	21,0,2,35,0,0,33
	.byte	'Ifx_SCU_EVRSTAT_Bits',0,6,130,4,3
	.word	41523
	.byte	10
	.byte	'_Ifx_SCU_EVRTRIM_Bits',0,6,133,4,16,4,11
	.byte	'EVR13TRIM',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'SDVOUTSEL',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRTRIM_Bits',0,6,139,4,3
	.word	41797
	.byte	10
	.byte	'_Ifx_SCU_EVRUVMON_Bits',0,6,142,4,16,4,11
	.byte	'EVR13UVVAL',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'EVR33UVVAL',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'SWDUVVAL',0,1
	.word	464
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRUVMON_Bits',0,6,149,4,3
	.word	41936
	.byte	10
	.byte	'_Ifx_SCU_EXTCON_Bits',0,6,152,4,16,4,11
	.byte	'EN0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'SEL0',0,1
	.word	464
	.byte	4,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	1015
	.byte	10,0,2,35,0,11
	.byte	'EN1',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'NSEL',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'SEL1',0,1
	.word	464
	.byte	4,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	464
	.byte	2,0,2,35,2,11
	.byte	'DIV1',0,1
	.word	464
	.byte	8,0,2,35,3,0,33
	.byte	'Ifx_SCU_EXTCON_Bits',0,6,163,4,3
	.word	42099
	.byte	10
	.byte	'_Ifx_SCU_FDR_Bits',0,6,166,4,16,4,11
	.byte	'STEP',0,2
	.word	1015
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	464
	.byte	4,2,2,35,1,11
	.byte	'DM',0,1
	.word	464
	.byte	2,0,2,35,1,11
	.byte	'RESULT',0,2
	.word	1015
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	464
	.byte	5,1,2,35,3,11
	.byte	'DISCLK',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_FDR_Bits',0,6,174,4,3
	.word	42317
	.byte	10
	.byte	'_Ifx_SCU_FMR_Bits',0,6,177,4,16,4,11
	.byte	'FS0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'FS1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'FS2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'FS3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'FS4',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'FS5',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'FS6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'FS7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'FC0',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'FC1',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'FC2',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'FC3',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'FC4',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'FC5',0,1
	.word	464
	.byte	1,2,2,35,2,11
	.byte	'FC6',0,1
	.word	464
	.byte	1,1,2,35,2,11
	.byte	'FC7',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	8,0,2,35,3,0,33
	.byte	'Ifx_SCU_FMR_Bits',0,6,197,4,3
	.word	42480
	.byte	10
	.byte	'_Ifx_SCU_ID_Bits',0,6,200,4,16,4,11
	.byte	'MODREV',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	1015
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_ID_Bits',0,6,205,4,3
	.word	42816
	.byte	10
	.byte	'_Ifx_SCU_IGCR_Bits',0,6,208,4,16,4,11
	.byte	'IPEN00',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'IPEN01',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'IPEN02',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'IPEN03',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'IPEN04',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'IPEN05',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'IPEN06',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'IPEN07',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	464
	.byte	5,3,2,35,1,11
	.byte	'GEEN0',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'IGP0',0,1
	.word	464
	.byte	2,0,2,35,1,11
	.byte	'IPEN10',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'IPEN11',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'IPEN12',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'IPEN13',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'IPEN14',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'IPEN15',0,1
	.word	464
	.byte	1,2,2,35,2,11
	.byte	'IPEN16',0,1
	.word	464
	.byte	1,1,2,35,2,11
	.byte	'IPEN17',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	5,3,2,35,3,11
	.byte	'GEEN1',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'IGP1',0,1
	.word	464
	.byte	2,0,2,35,3,0,33
	.byte	'Ifx_SCU_IGCR_Bits',0,6,232,4,3
	.word	42923
	.byte	10
	.byte	'_Ifx_SCU_IN_Bits',0,6,235,4,16,4,11
	.byte	'P0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	441
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_SCU_IN_Bits',0,6,240,4,3
	.word	43375
	.byte	10
	.byte	'_Ifx_SCU_IOCR_Bits',0,6,243,4,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	4,4,2,35,0,11
	.byte	'PC0',0,1
	.word	464
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	464
	.byte	4,4,2,35,1,11
	.byte	'PC1',0,1
	.word	464
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_IOCR_Bits',0,6,250,4,3
	.word	43474
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,6,253,4,16,4,11
	.byte	'LBISTREQ',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'LBISTREQP',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'PATTERNS',0,2
	.word	1015
	.byte	14,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,6,131,5,3
	.word	43624
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,6,134,5,16,4,11
	.byte	'SEED',0,4
	.word	441
	.byte	23,9,2,35,0,11
	.byte	'reserved_23',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'SPLITSH',0,1
	.word	464
	.byte	3,5,2,35,3,11
	.byte	'BODY',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'LBISTFREQU',0,1
	.word	464
	.byte	4,0,2,35,3,0,33
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,6,141,5,3
	.word	43773
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,6,144,5,16,4,11
	.byte	'SIGNATURE',0,4
	.word	441
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	7,1,2,35,3,11
	.byte	'LBISTDONE',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,6,149,5,3
	.word	43934
	.byte	10
	.byte	'_Ifx_SCU_LCLCON_Bits',0,6,152,5,16,4,11
	.byte	'reserved_0',0,2
	.word	1015
	.byte	16,0,2,35,0,11
	.byte	'LS',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	1015
	.byte	14,1,2,35,2,11
	.byte	'LSEN',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_LCLCON_Bits',0,6,158,5,3
	.word	44064
	.byte	10
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,6,161,5,16,4,11
	.byte	'LCLT0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'LCLT1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	441
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_SCU_LCLTEST_Bits',0,6,166,5,3
	.word	44196
	.byte	10
	.byte	'_Ifx_SCU_MANID_Bits',0,6,169,5,16,4,11
	.byte	'DEPT',0,1
	.word	464
	.byte	5,3,2,35,0,11
	.byte	'MANUF',0,2
	.word	1015
	.byte	11,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_MANID_Bits',0,6,174,5,3
	.word	44311
	.byte	10
	.byte	'_Ifx_SCU_OMR_Bits',0,6,177,5,16,4,11
	.byte	'PS0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	1015
	.byte	14,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	1015
	.byte	14,0,2,35,2,0,33
	.byte	'Ifx_SCU_OMR_Bits',0,6,185,5,3
	.word	44422
	.byte	10
	.byte	'_Ifx_SCU_OSCCON_Bits',0,6,188,5,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'PLLLV',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'OSCRES',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'GAINSEL',0,1
	.word	464
	.byte	2,3,2,35,0,11
	.byte	'MODE',0,1
	.word	464
	.byte	2,1,2,35,0,11
	.byte	'SHBY',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'PLLHV',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'X1D',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'X1DEN',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	464
	.byte	4,0,2,35,1,11
	.byte	'OSCVAL',0,1
	.word	464
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	464
	.byte	2,1,2,35,2,11
	.byte	'APREN',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'CAP0EN',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'CAP1EN',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'CAP2EN',0,1
	.word	464
	.byte	1,5,2,35,3,11
	.byte	'CAP3EN',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	464
	.byte	4,0,2,35,3,0,33
	.byte	'Ifx_SCU_OSCCON_Bits',0,6,209,5,3
	.word	44580
	.byte	10
	.byte	'_Ifx_SCU_OUT_Bits',0,6,212,5,16,4,11
	.byte	'P0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	441
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_SCU_OUT_Bits',0,6,217,5,3
	.word	44992
	.byte	10
	.byte	'_Ifx_SCU_OVCCON_Bits',0,6,220,5,16,4,11
	.byte	'CSEL0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'CSEL1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'CSEL2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	1015
	.byte	13,0,2,35,0,11
	.byte	'OVSTRT',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'OVSTP',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'DCINVAL',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	464
	.byte	5,0,2,35,2,11
	.byte	'OVCONF',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'POVCONF',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	464
	.byte	6,0,2,35,3,0,33
	.byte	'Ifx_SCU_OVCCON_Bits',0,6,233,5,3
	.word	45093
	.byte	10
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,6,236,5,16,4,11
	.byte	'OVEN0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'OVEN1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'OVEN2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	441
	.byte	29,0,2,35,0,0,33
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,6,242,5,3
	.word	45360
	.byte	10
	.byte	'_Ifx_SCU_PDISC_Bits',0,6,245,5,16,4,11
	.byte	'PDIS0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	441
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_SCU_PDISC_Bits',0,6,250,5,3
	.word	45496
	.byte	10
	.byte	'_Ifx_SCU_PDR_Bits',0,6,253,5,16,4,11
	.byte	'PD0',0,1
	.word	464
	.byte	3,5,2,35,0,11
	.byte	'PL0',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'PD1',0,1
	.word	464
	.byte	3,1,2,35,0,11
	.byte	'PL1',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	441
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_SCU_PDR_Bits',0,6,132,6,3
	.word	45607
	.byte	10
	.byte	'_Ifx_SCU_PDRR_Bits',0,6,135,6,16,4,11
	.byte	'PDR0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'PDR1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'PDR2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'PDR3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'PDR4',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'PDR5',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'PDR6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'PDR7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	441
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_SCU_PDRR_Bits',0,6,146,6,3
	.word	45740
	.byte	10
	.byte	'_Ifx_SCU_PLLCON0_Bits',0,6,149,6,16,4,11
	.byte	'VCOBYP',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'VCOPWD',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'MODEN',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'SETFINDIS',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'CLRFINDIS',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'OSCDISCDIS',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	1015
	.byte	2,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	464
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	464
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	464
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	464
	.byte	4,0,2,35,3,0,33
	.byte	'Ifx_SCU_PLLCON0_Bits',0,6,166,6,3
	.word	45943
	.byte	10
	.byte	'_Ifx_SCU_PLLCON1_Bits',0,6,169,6,16,4,11
	.byte	'K2DIV',0,1
	.word	464
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	464
	.byte	7,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'K1DIV',0,1
	.word	464
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	1015
	.byte	9,0,2,35,2,0,33
	.byte	'Ifx_SCU_PLLCON1_Bits',0,6,177,6,3
	.word	46299
	.byte	10
	.byte	'_Ifx_SCU_PLLCON2_Bits',0,6,180,6,16,4,11
	.byte	'MODCFG',0,2
	.word	1015
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_PLLCON2_Bits',0,6,184,6,3
	.word	46477
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYCON0_Bits',0,6,187,6,16,4,11
	.byte	'VCOBYP',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'VCOPWD',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	464
	.byte	2,4,2,35,0,11
	.byte	'SETFINDIS',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'CLRFINDIS',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'OSCDISCDIS',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	1015
	.byte	2,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	464
	.byte	5,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	464
	.byte	2,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	464
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	464
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	464
	.byte	4,0,2,35,3,0,33
	.byte	'Ifx_SCU_PLLERAYCON0_Bits',0,6,204,6,3
	.word	46577
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYCON1_Bits',0,6,207,6,16,4,11
	.byte	'K2DIV',0,1
	.word	464
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	464
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	464
	.byte	4,0,2,35,1,11
	.byte	'K1DIV',0,1
	.word	464
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	1015
	.byte	9,0,2,35,2,0,33
	.byte	'Ifx_SCU_PLLERAYCON1_Bits',0,6,215,6,3
	.word	46947
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYSTAT_Bits',0,6,218,6,16,4,11
	.byte	'VCOBYST',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'VCOLOCK',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'FINDIS',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'K1RDY',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	441
	.byte	26,0,2,35,0,0,33
	.byte	'Ifx_SCU_PLLERAYSTAT_Bits',0,6,227,6,3
	.word	47133
	.byte	10
	.byte	'_Ifx_SCU_PLLSTAT_Bits',0,6,230,6,16,4,11
	.byte	'VCOBYST',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'VCOLOCK',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'FINDIS',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'K1RDY',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'MODRUN',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	441
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_SCU_PLLSTAT_Bits',0,6,241,6,3
	.word	47331
	.byte	10
	.byte	'_Ifx_SCU_PMCSR_Bits',0,6,244,6,16,4,11
	.byte	'REQSLP',0,1
	.word	464
	.byte	2,6,2,35,0,11
	.byte	'SMUSLP',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	464
	.byte	5,0,2,35,0,11
	.byte	'PMST',0,1
	.word	464
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	441
	.byte	21,0,2,35,0,0,33
	.byte	'Ifx_SCU_PMCSR_Bits',0,6,251,6,3
	.word	47564
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR0_Bits',0,6,254,6,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'ESR1WKEN',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'PINAWKEN',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'PINBWKEN',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'ESR0DFEN',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'ESR0EDCON',0,1
	.word	464
	.byte	2,1,2,35,0,11
	.byte	'ESR1DFEN',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'ESR1EDCON',0,1
	.word	464
	.byte	2,6,2,35,1,11
	.byte	'PINADFEN',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'PINAEDCON',0,1
	.word	464
	.byte	2,3,2,35,1,11
	.byte	'PINBDFEN',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'PINBEDCON',0,1
	.word	464
	.byte	2,0,2,35,1,11
	.byte	'SCREN',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'STBYRAMSEL',0,1
	.word	464
	.byte	2,5,2,35,2,11
	.byte	'SCRCLKSEL',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'SCRWKEN',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'TRISTEN',0,1
	.word	464
	.byte	1,2,2,35,2,11
	.byte	'TRISTREQ',0,1
	.word	464
	.byte	1,1,2,35,2,11
	.byte	'PORSTDF',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'DCDCSYNC',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	464
	.byte	3,3,2,35,3,11
	.byte	'ESR0TRIST',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_PMSWCR0_Bits',0,6,153,7,3
	.word	47716
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,6,156,7,16,4,11
	.byte	'SCRSTEN',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'SCRSTREQ',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	464
	.byte	6,0,2,35,0,11
	.byte	'CPUIDLSEL',0,1
	.word	464
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'IRADIS',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	464
	.byte	3,0,2,35,1,11
	.byte	'SCRCFG',0,1
	.word	464
	.byte	8,0,2,35,2,11
	.byte	'CPUSEL',0,1
	.word	464
	.byte	3,5,2,35,3,11
	.byte	'STBYEVEN',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'STBYEV',0,1
	.word	464
	.byte	3,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,6,170,7,3
	.word	48283
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR2_Bits',0,6,173,7,16,4,11
	.byte	'SCRINT',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'BUSY',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'SCRECC',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'SCRWDT',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'SCRRST',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	464
	.byte	4,0,2,35,1,11
	.byte	'TCINT',0,1
	.word	464
	.byte	8,0,2,35,2,11
	.byte	'TCINTREQ',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'SMURST',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'RST',0,1
	.word	464
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	464
	.byte	4,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_PMSWCR2_Bits',0,6,187,7,3
	.word	48577
	.byte	10
	.byte	'_Ifx_SCU_PMSWSTAT_Bits',0,6,190,7,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	2,6,2,35,0,11
	.byte	'ESR1WKP',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'ESR1OVRUN',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'PINAWKP',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'PINAOVRUN',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'PINBWKP',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'PINBOVRUN',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'PORSTDF',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'HWCFGEVR',0,1
	.word	464
	.byte	3,3,2,35,1,11
	.byte	'STBYRAM',0,1
	.word	464
	.byte	2,1,2,35,1,11
	.byte	'TRIST',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'SCRST',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'SCRWKP',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'SCR',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'SCRWKEN',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'ESR1WKEN',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'PINAWKEN',0,1
	.word	464
	.byte	1,2,2,35,2,11
	.byte	'PINBWKEN',0,1
	.word	464
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	1015
	.byte	4,5,2,35,2,11
	.byte	'ESR0TRIST',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	464
	.byte	4,0,2,35,3,0,33
	.byte	'Ifx_SCU_PMSWSTAT_Bits',0,6,214,7,3
	.word	48855
	.byte	10
	.byte	'_Ifx_SCU_PMSWSTATCLR_Bits',0,6,217,7,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	2,6,2,35,0,11
	.byte	'ESR1WKPCLR',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'ESR1OVRUNCLR',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'PINAWKPCLR',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'PINAOVRUNCLR',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'PINBWKPCLR',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'PINBOVRUNCLR',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'SCRSTCLR',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'SCRWKPCLR',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	1015
	.byte	14,0,2,35,2,0,33
	.byte	'Ifx_SCU_PMSWSTATCLR_Bits',0,6,230,7,3
	.word	49351
	.byte	10
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,6,233,7,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'CLRC',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	1015
	.byte	10,4,2,35,0,11
	.byte	'CSS0',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'CSS1',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'CSS2',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'USRINFO',0,2
	.word	1015
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_RSTCON2_Bits',0,6,243,7,3
	.word	49664
	.byte	10
	.byte	'_Ifx_SCU_RSTCON_Bits',0,6,246,7,16,4,11
	.byte	'ESR0',0,1
	.word	464
	.byte	2,6,2,35,0,11
	.byte	'ESR1',0,1
	.word	464
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	464
	.byte	2,2,2,35,0,11
	.byte	'SMU',0,1
	.word	464
	.byte	2,0,2,35,0,11
	.byte	'SW',0,1
	.word	464
	.byte	2,6,2,35,1,11
	.byte	'STM0',0,1
	.word	464
	.byte	2,4,2,35,1,11
	.byte	'STM1',0,1
	.word	464
	.byte	2,2,2,35,1,11
	.byte	'STM2',0,1
	.word	464
	.byte	2,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_RSTCON_Bits',0,6,129,8,3
	.word	49873
	.byte	10
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,6,132,8,16,4,11
	.byte	'ESR0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'ESR1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'SMU',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'SW',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'STM0',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'STM1',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'STM2',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'PORST',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'CB0',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'CB1',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'CB3',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	464
	.byte	2,1,2,35,2,11
	.byte	'EVR13',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'EVR33',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'SWD',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	464
	.byte	2,4,2,35,3,11
	.byte	'STBYR',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	464
	.byte	3,0,2,35,3,0,33
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,6,155,8,3
	.word	50084
	.byte	10
	.byte	'_Ifx_SCU_SAFECON_Bits',0,6,158,8,16,4,11
	.byte	'HBT',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	441
	.byte	31,0,2,35,0,0,33
	.byte	'Ifx_SCU_SAFECON_Bits',0,6,162,8,3
	.word	50516
	.byte	10
	.byte	'_Ifx_SCU_STSTAT_Bits',0,6,165,8,16,4,11
	.byte	'HWCFG',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'FTM',0,1
	.word	464
	.byte	7,1,2,35,1,11
	.byte	'MODE',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'FCBAE',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'LUDIS',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'TRSTL',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'SPDEN',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	464
	.byte	3,0,2,35,2,11
	.byte	'RAMINT',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	464
	.byte	7,0,2,35,3,0,33
	.byte	'Ifx_SCU_STSTAT_Bits',0,6,178,8,3
	.word	50612
	.byte	10
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,6,181,8,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'SWRSTREQ',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	441
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,6,186,8,3
	.word	50872
	.byte	10
	.byte	'_Ifx_SCU_SYSCON_Bits',0,6,189,8,16,4,11
	.byte	'CCTRIG0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'RAMINTM',0,1
	.word	464
	.byte	2,4,2,35,0,11
	.byte	'SETLUDIS',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	464
	.byte	3,0,2,35,0,11
	.byte	'DATM',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,4
	.word	441
	.byte	23,0,2,35,0,0,33
	.byte	'Ifx_SCU_SYSCON_Bits',0,6,198,8,3
	.word	50997
	.byte	10
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,6,201,8,16,4,11
	.byte	'ESR0T',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	441
	.byte	28,0,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,6,208,8,3
	.word	51194
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS_Bits',0,6,211,8,16,4,11
	.byte	'ESR0T',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	441
	.byte	28,0,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPDIS_Bits',0,6,218,8,3
	.word	51347
	.byte	10
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,6,221,8,16,4,11
	.byte	'ESR0T',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	441
	.byte	28,0,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPSET_Bits',0,6,228,8,3
	.word	51500
	.byte	10
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,6,231,8,16,4,11
	.byte	'ESR0T',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	441
	.byte	28,0,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,6,238,8,3
	.word	51653
	.byte	33
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,6,247,8,3
	.word	879
	.byte	33
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,6,134,9,3
	.word	1037
	.byte	33
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,6,150,9,3
	.word	1281
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,6,153,9,16,4,11
	.byte	'ENDINIT',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	863
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	863
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	863
	.byte	16,0,2,35,0,0,33
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,6,159,9,3
	.word	51908
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,6,162,9,16,4,11
	.byte	'CLRIRF',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	464
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,6,175,9,3
	.word	52034
	.byte	10
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,6,178,9,16,4,11
	.byte	'AE',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	464
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	1015
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,6,191,9,3
	.word	52286
	.byte	12,6,199,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34318
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_ACCEN0',0,6,204,9,3
	.word	52505
	.byte	12,6,207,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34875
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_ACCEN1',0,6,212,9,3
	.word	52569
	.byte	12,6,215,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34952
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_ARSTDIS',0,6,220,9,3
	.word	52633
	.byte	12,6,223,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35088
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON0',0,6,228,9,3
	.word	52698
	.byte	12,6,231,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35368
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON1',0,6,236,9,3
	.word	52763
	.byte	12,6,239,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35606
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON2',0,6,244,9,3
	.word	52828
	.byte	12,6,247,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35734
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON3',0,6,252,9,3
	.word	52893
	.byte	12,6,255,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35977
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON4',0,6,132,10,3
	.word	52958
	.byte	12,6,135,10,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36212
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON5',0,6,140,10,3
	.word	53023
	.byte	12,6,143,10,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36340
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON6',0,6,148,10,3
	.word	53088
	.byte	12,6,151,10,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36440
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON7',0,6,156,10,3
	.word	53153
	.byte	12,6,159,10,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36540
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CHIPID',0,6,164,10,3
	.word	53218
	.byte	12,6,167,10,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36748
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_DTSCON',0,6,172,10,3
	.word	53282
	.byte	12,6,175,10,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36913
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_DTSLIM',0,6,180,10,3
	.word	53346
	.byte	12,6,183,10,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37096
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_DTSSTAT',0,6,188,10,3
	.word	53410
	.byte	12,6,191,10,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37250
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EICR',0,6,196,10,3
	.word	53475
	.byte	12,6,199,10,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37614
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EIFR',0,6,204,10,3
	.word	53537
	.byte	12,6,207,10,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37825
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EMSR',0,6,212,10,3
	.word	53599
	.byte	12,6,215,10,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38077
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_ESRCFG',0,6,220,10,3
	.word	53661
	.byte	12,6,223,10,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38195
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_ESROCFG',0,6,228,10,3
	.word	53725
	.byte	12,6,231,10,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38306
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVR13CON',0,6,236,10,3
	.word	53790
	.byte	12,6,239,10,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38469
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVR33CON',0,6,244,10,3
	.word	53856
	.byte	12,6,247,10,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38632
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRADCSTAT',0,6,252,10,3
	.word	53922
	.byte	12,6,255,10,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38790
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRDVSTAT',0,6,132,11,3
	.word	53990
	.byte	12,6,135,11,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38955
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRMONCTRL',0,6,140,11,3
	.word	54057
	.byte	12,6,143,11,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39284
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVROSCCTRL',0,6,148,11,3
	.word	54125
	.byte	12,6,151,11,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39505
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVROVMON',0,6,156,11,3
	.word	54193
	.byte	12,6,159,11,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39668
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRRSTCON',0,6,164,11,3
	.word	54259
	.byte	12,6,167,11,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39940
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRSDCOEFF1',0,6,172,11,3
	.word	54326
	.byte	12,6,175,11,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40093
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRSDCOEFF2',0,6,180,11,3
	.word	54395
	.byte	12,6,183,11,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40249
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRSDCOEFF3',0,6,188,11,3
	.word	54464
	.byte	12,6,191,11,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40411
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRSDCOEFF4',0,6,196,11,3
	.word	54533
	.byte	12,6,199,11,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40554
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRSDCOEFF5',0,6,204,11,3
	.word	54602
	.byte	12,6,207,11,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40719
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRSDCOEFF6',0,6,212,11,3
	.word	54671
	.byte	12,6,215,11,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40864
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRSDCTRL1',0,6,220,11,3
	.word	54740
	.byte	12,6,223,11,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41045
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRSDCTRL2',0,6,228,11,3
	.word	54808
	.byte	12,6,231,11,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41219
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRSDCTRL3',0,6,236,11,3
	.word	54876
	.byte	12,6,239,11,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41379
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRSDCTRL4',0,6,244,11,3
	.word	54944
	.byte	12,6,247,11,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41523
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRSTAT',0,6,252,11,3
	.word	55012
	.byte	12,6,255,11,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41797
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRTRIM',0,6,132,12,3
	.word	55077
	.byte	12,6,135,12,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41936
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRUVMON',0,6,140,12,3
	.word	55142
	.byte	12,6,143,12,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42099
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EXTCON',0,6,148,12,3
	.word	55208
	.byte	12,6,151,12,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42317
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_FDR',0,6,156,12,3
	.word	55272
	.byte	12,6,159,12,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42480
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_FMR',0,6,164,12,3
	.word	55333
	.byte	12,6,167,12,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42816
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_ID',0,6,172,12,3
	.word	55394
	.byte	12,6,175,12,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42923
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_IGCR',0,6,180,12,3
	.word	55454
	.byte	12,6,183,12,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43375
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_IN',0,6,188,12,3
	.word	55516
	.byte	12,6,191,12,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43474
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_IOCR',0,6,196,12,3
	.word	55576
	.byte	12,6,199,12,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43624
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_LBISTCTRL0',0,6,204,12,3
	.word	55638
	.byte	12,6,207,12,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43773
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_LBISTCTRL1',0,6,212,12,3
	.word	55706
	.byte	12,6,215,12,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43934
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_LBISTCTRL2',0,6,220,12,3
	.word	55774
	.byte	12,6,223,12,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44064
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_LCLCON',0,6,228,12,3
	.word	55842
	.byte	12,6,231,12,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44196
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_LCLTEST',0,6,236,12,3
	.word	55906
	.byte	12,6,239,12,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44311
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_MANID',0,6,244,12,3
	.word	55971
	.byte	12,6,247,12,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44422
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_OMR',0,6,252,12,3
	.word	56034
	.byte	12,6,255,12,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44580
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_OSCCON',0,6,132,13,3
	.word	56095
	.byte	12,6,135,13,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44992
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_OUT',0,6,140,13,3
	.word	56159
	.byte	12,6,143,13,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45093
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_OVCCON',0,6,148,13,3
	.word	56220
	.byte	12,6,151,13,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45360
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_OVCENABLE',0,6,156,13,3
	.word	56284
	.byte	12,6,159,13,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45496
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PDISC',0,6,164,13,3
	.word	56351
	.byte	12,6,167,13,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45607
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PDR',0,6,172,13,3
	.word	56414
	.byte	12,6,175,13,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45740
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PDRR',0,6,180,13,3
	.word	56475
	.byte	12,6,183,13,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45943
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PLLCON0',0,6,188,13,3
	.word	56537
	.byte	12,6,191,13,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46299
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PLLCON1',0,6,196,13,3
	.word	56602
	.byte	12,6,199,13,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46477
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PLLCON2',0,6,204,13,3
	.word	56667
	.byte	12,6,207,13,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46577
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PLLERAYCON0',0,6,212,13,3
	.word	56732
	.byte	12,6,215,13,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46947
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PLLERAYCON1',0,6,220,13,3
	.word	56801
	.byte	12,6,223,13,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47133
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PLLERAYSTAT',0,6,228,13,3
	.word	56870
	.byte	12,6,231,13,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47331
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PLLSTAT',0,6,236,13,3
	.word	56939
	.byte	12,6,239,13,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47564
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMCSR',0,6,244,13,3
	.word	57004
	.byte	12,6,247,13,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47716
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMSWCR0',0,6,252,13,3
	.word	57067
	.byte	12,6,255,13,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48283
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMSWCR1',0,6,132,14,3
	.word	57132
	.byte	12,6,135,14,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48577
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMSWCR2',0,6,140,14,3
	.word	57197
	.byte	12,6,143,14,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48855
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMSWSTAT',0,6,148,14,3
	.word	57262
	.byte	12,6,151,14,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49351
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMSWSTATCLR',0,6,156,14,3
	.word	57328
	.byte	12,6,159,14,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49873
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_RSTCON',0,6,164,14,3
	.word	57397
	.byte	12,6,167,14,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49664
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_RSTCON2',0,6,172,14,3
	.word	57461
	.byte	12,6,175,14,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50084
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_RSTSTAT',0,6,180,14,3
	.word	57526
	.byte	12,6,183,14,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50516
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_SAFECON',0,6,188,14,3
	.word	57591
	.byte	12,6,191,14,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50612
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_STSTAT',0,6,196,14,3
	.word	57656
	.byte	12,6,199,14,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50872
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_SWRSTCON',0,6,204,14,3
	.word	57720
	.byte	12,6,207,14,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50997
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_SYSCON',0,6,212,14,3
	.word	57786
	.byte	12,6,215,14,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51194
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPCLR',0,6,220,14,3
	.word	57850
	.byte	12,6,223,14,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51347
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPDIS',0,6,228,14,3
	.word	57915
	.byte	12,6,231,14,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51500
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPSET',0,6,236,14,3
	.word	57980
	.byte	12,6,239,14,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51653
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPSTAT',0,6,244,14,3
	.word	58045
	.byte	33
	.byte	'Ifx_SCU_WDTCPU_CON0',0,6,252,14,3
	.word	975
	.byte	33
	.byte	'Ifx_SCU_WDTCPU_CON1',0,6,132,15,3
	.word	1241
	.byte	33
	.byte	'Ifx_SCU_WDTCPU_SR',0,6,140,15,3
	.word	1472
	.byte	12,6,143,15,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51908
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_WDTS_CON0',0,6,148,15,3
	.word	58196
	.byte	12,6,151,15,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52034
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_WDTS_CON1',0,6,156,15,3
	.word	58263
	.byte	12,6,159,15,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52286
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_WDTS_SR',0,6,164,15,3
	.word	58330
	.byte	14
	.word	1512
	.byte	33
	.byte	'Ifx_SCU_WDTCPU',0,6,180,15,3
	.word	58395
	.byte	10
	.byte	'_Ifx_SCU_WDTS',0,6,183,15,25,12,13
	.byte	'CON0',0
	.word	58196
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	58263
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	58330
	.byte	4,2,35,8,0,14
	.word	58424
	.byte	33
	.byte	'Ifx_SCU_WDTS',0,6,188,15,3
	.word	58485
	.byte	18,8
	.word	53661
	.byte	19,1,0,18,8
	.word	57004
	.byte	19,1,0,14
	.word	58424
	.byte	18,24
	.word	1512
	.byte	19,1,0,14
	.word	58535
	.byte	18,16
	.word	53475
	.byte	19,3,0,18,16
	.word	55454
	.byte	19,3,0,18,180,3
	.word	464
	.byte	19,179,3,0,10
	.byte	'_Ifx_SCU',0,6,201,15,25,128,8,13
	.byte	'reserved_0',0
	.word	5021
	.byte	8,2,35,0,13
	.byte	'ID',0
	.word	55394
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3202
	.byte	4,2,35,12,13
	.byte	'OSCCON',0
	.word	56095
	.byte	4,2,35,16,13
	.byte	'PLLSTAT',0
	.word	56939
	.byte	4,2,35,20,13
	.byte	'PLLCON0',0
	.word	56537
	.byte	4,2,35,24,13
	.byte	'PLLCON1',0
	.word	56602
	.byte	4,2,35,28,13
	.byte	'PLLCON2',0
	.word	56667
	.byte	4,2,35,32,13
	.byte	'PLLERAYSTAT',0
	.word	56870
	.byte	4,2,35,36,13
	.byte	'PLLERAYCON0',0
	.word	56732
	.byte	4,2,35,40,13
	.byte	'PLLERAYCON1',0
	.word	56801
	.byte	4,2,35,44,13
	.byte	'CCUCON0',0
	.word	52698
	.byte	4,2,35,48,13
	.byte	'CCUCON1',0
	.word	52763
	.byte	4,2,35,52,13
	.byte	'FDR',0
	.word	55272
	.byte	4,2,35,56,13
	.byte	'EXTCON',0
	.word	55208
	.byte	4,2,35,60,13
	.byte	'CCUCON2',0
	.word	52828
	.byte	4,2,35,64,13
	.byte	'CCUCON3',0
	.word	52893
	.byte	4,2,35,68,13
	.byte	'CCUCON4',0
	.word	52958
	.byte	4,2,35,72,13
	.byte	'CCUCON5',0
	.word	53023
	.byte	4,2,35,76,13
	.byte	'RSTSTAT',0
	.word	57526
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	3202
	.byte	4,2,35,84,13
	.byte	'RSTCON',0
	.word	57397
	.byte	4,2,35,88,13
	.byte	'ARSTDIS',0
	.word	52633
	.byte	4,2,35,92,13
	.byte	'SWRSTCON',0
	.word	57720
	.byte	4,2,35,96,13
	.byte	'RSTCON2',0
	.word	57461
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	3202
	.byte	4,2,35,104,13
	.byte	'EVRRSTCON',0
	.word	54259
	.byte	4,2,35,108,13
	.byte	'ESRCFG',0
	.word	58512
	.byte	8,2,35,112,13
	.byte	'ESROCFG',0
	.word	53725
	.byte	4,2,35,120,13
	.byte	'SYSCON',0
	.word	57786
	.byte	4,2,35,124,13
	.byte	'CCUCON6',0
	.word	53088
	.byte	4,3,35,128,1,13
	.byte	'CCUCON7',0
	.word	53153
	.byte	4,3,35,132,1,13
	.byte	'reserved_88',0
	.word	13716
	.byte	20,3,35,136,1,13
	.byte	'PDR',0
	.word	56414
	.byte	4,3,35,156,1,13
	.byte	'IOCR',0
	.word	55576
	.byte	4,3,35,160,1,13
	.byte	'OUT',0
	.word	56159
	.byte	4,3,35,164,1,13
	.byte	'OMR',0
	.word	56034
	.byte	4,3,35,168,1,13
	.byte	'IN',0
	.word	55516
	.byte	4,3,35,172,1,13
	.byte	'EVRSTAT',0
	.word	55012
	.byte	4,3,35,176,1,13
	.byte	'EVRDVSTAT',0
	.word	53990
	.byte	4,3,35,180,1,13
	.byte	'EVR13CON',0
	.word	53790
	.byte	4,3,35,184,1,13
	.byte	'EVR33CON',0
	.word	53856
	.byte	4,3,35,188,1,13
	.byte	'STSTAT',0
	.word	57656
	.byte	4,3,35,192,1,13
	.byte	'reserved_C4',0
	.word	3202
	.byte	4,3,35,196,1,13
	.byte	'PMSWCR0',0
	.word	57067
	.byte	4,3,35,200,1,13
	.byte	'PMSWSTAT',0
	.word	57262
	.byte	4,3,35,204,1,13
	.byte	'PMSWSTATCLR',0
	.word	57328
	.byte	4,3,35,208,1,13
	.byte	'PMCSR',0
	.word	58521
	.byte	8,3,35,212,1,13
	.byte	'reserved_DC',0
	.word	3202
	.byte	4,3,35,220,1,13
	.byte	'DTSSTAT',0
	.word	53410
	.byte	4,3,35,224,1,13
	.byte	'DTSCON',0
	.word	53282
	.byte	4,3,35,228,1,13
	.byte	'PMSWCR1',0
	.word	57132
	.byte	4,3,35,232,1,13
	.byte	'PMSWCR2',0
	.word	57197
	.byte	4,3,35,236,1,13
	.byte	'WDTS',0
	.word	58530
	.byte	12,3,35,240,1,13
	.byte	'EMSR',0
	.word	53599
	.byte	4,3,35,252,1,13
	.byte	'WDTCPU',0
	.word	58544
	.byte	24,3,35,128,2,13
	.byte	'reserved_118',0
	.word	5361
	.byte	12,3,35,152,2,13
	.byte	'TRAPSTAT',0
	.word	58045
	.byte	4,3,35,164,2,13
	.byte	'TRAPSET',0
	.word	57980
	.byte	4,3,35,168,2,13
	.byte	'TRAPCLR',0
	.word	57850
	.byte	4,3,35,172,2,13
	.byte	'TRAPDIS',0
	.word	57915
	.byte	4,3,35,176,2,13
	.byte	'reserved_134',0
	.word	3202
	.byte	4,3,35,180,2,13
	.byte	'LCLCON1',0
	.word	55842
	.byte	4,3,35,184,2,13
	.byte	'LCLTEST',0
	.word	55906
	.byte	4,3,35,188,2,13
	.byte	'CHIPID',0
	.word	53218
	.byte	4,3,35,192,2,13
	.byte	'MANID',0
	.word	55971
	.byte	4,3,35,196,2,13
	.byte	'reserved_148',0
	.word	5021
	.byte	8,3,35,200,2,13
	.byte	'SAFECON',0
	.word	57591
	.byte	4,3,35,208,2,13
	.byte	'reserved_154',0
	.word	29100
	.byte	16,3,35,212,2,13
	.byte	'LBISTCTRL0',0
	.word	55638
	.byte	4,3,35,228,2,13
	.byte	'LBISTCTRL1',0
	.word	55706
	.byte	4,3,35,232,2,13
	.byte	'LBISTCTRL2',0
	.word	55774
	.byte	4,3,35,236,2,13
	.byte	'reserved_170',0
	.word	11006
	.byte	28,3,35,240,2,13
	.byte	'PDISC',0
	.word	56351
	.byte	4,3,35,140,3,13
	.byte	'reserved_190',0
	.word	5021
	.byte	8,3,35,144,3,13
	.byte	'EVRTRIM',0
	.word	55077
	.byte	4,3,35,152,3,13
	.byte	'EVRADCSTAT',0
	.word	53922
	.byte	4,3,35,156,3,13
	.byte	'EVRUVMON',0
	.word	55142
	.byte	4,3,35,160,3,13
	.byte	'EVROVMON',0
	.word	54193
	.byte	4,3,35,164,3,13
	.byte	'EVRMONCTRL',0
	.word	54057
	.byte	4,3,35,168,3,13
	.byte	'reserved_1AC',0
	.word	3202
	.byte	4,3,35,172,3,13
	.byte	'EVRSDCTRL1',0
	.word	54740
	.byte	4,3,35,176,3,13
	.byte	'EVRSDCTRL2',0
	.word	54808
	.byte	4,3,35,180,3,13
	.byte	'EVRSDCTRL3',0
	.word	54876
	.byte	4,3,35,184,3,13
	.byte	'EVRSDCTRL4',0
	.word	54944
	.byte	4,3,35,188,3,13
	.byte	'EVRSDCOEFF1',0
	.word	54326
	.byte	4,3,35,192,3,13
	.byte	'EVRSDCOEFF2',0
	.word	54395
	.byte	4,3,35,196,3,13
	.byte	'EVRSDCOEFF3',0
	.word	54464
	.byte	4,3,35,200,3,13
	.byte	'EVRSDCOEFF4',0
	.word	54533
	.byte	4,3,35,204,3,13
	.byte	'EVRSDCOEFF5',0
	.word	54602
	.byte	4,3,35,208,3,13
	.byte	'EVRSDCOEFF6',0
	.word	54671
	.byte	4,3,35,212,3,13
	.byte	'EVROSCCTRL',0
	.word	54125
	.byte	4,3,35,216,3,13
	.byte	'reserved_1DC',0
	.word	3202
	.byte	4,3,35,220,3,13
	.byte	'OVCENABLE',0
	.word	56284
	.byte	4,3,35,224,3,13
	.byte	'OVCCON',0
	.word	56220
	.byte	4,3,35,228,3,13
	.byte	'reserved_1E8',0
	.word	28735
	.byte	40,3,35,232,3,13
	.byte	'EICR',0
	.word	58549
	.byte	16,3,35,144,4,13
	.byte	'EIFR',0
	.word	53537
	.byte	4,3,35,160,4,13
	.byte	'FMR',0
	.word	55333
	.byte	4,3,35,164,4,13
	.byte	'PDRR',0
	.word	56475
	.byte	4,3,35,168,4,13
	.byte	'IGCR',0
	.word	58558
	.byte	16,3,35,172,4,13
	.byte	'reserved_23C',0
	.word	3202
	.byte	4,3,35,188,4,13
	.byte	'DTSLIM',0
	.word	53346
	.byte	4,3,35,192,4,13
	.byte	'reserved_244',0
	.word	58567
	.byte	180,3,3,35,196,4,13
	.byte	'ACCEN1',0
	.word	52569
	.byte	4,3,35,248,7,13
	.byte	'ACCEN0',0
	.word	52505
	.byte	4,3,35,252,7,0,14
	.word	58578
	.byte	33
	.byte	'Ifx_SCU',0,6,181,16,3
	.word	60568
	.byte	10
	.byte	'_Ifx_CPU_A_Bits',0,20,45,16,4,11
	.byte	'ADDR',0,4
	.word	863
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_A_Bits',0,20,48,3
	.word	60590
	.byte	10
	.byte	'_Ifx_CPU_BIV_Bits',0,20,51,16,4,11
	.byte	'VSS',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'BIV',0,4
	.word	863
	.byte	31,0,2,35,0,0,33
	.byte	'Ifx_CPU_BIV_Bits',0,20,55,3
	.word	60651
	.byte	10
	.byte	'_Ifx_CPU_BTV_Bits',0,20,58,16,4,11
	.byte	'reserved_0',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'BTV',0,4
	.word	863
	.byte	31,0,2,35,0,0,33
	.byte	'Ifx_CPU_BTV_Bits',0,20,62,3
	.word	60730
	.byte	10
	.byte	'_Ifx_CPU_CCNT_Bits',0,20,65,16,4,11
	.byte	'CountValue',0,4
	.word	863
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	863
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_CCNT_Bits',0,20,69,3
	.word	60816
	.byte	10
	.byte	'_Ifx_CPU_CCTRL_Bits',0,20,72,16,4,11
	.byte	'CM',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'CE',0,4
	.word	863
	.byte	1,30,2,35,0,11
	.byte	'M1',0,4
	.word	863
	.byte	3,27,2,35,0,11
	.byte	'M2',0,4
	.word	863
	.byte	3,24,2,35,0,11
	.byte	'M3',0,4
	.word	863
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	863
	.byte	21,0,2,35,0,0,33
	.byte	'Ifx_CPU_CCTRL_Bits',0,20,80,3
	.word	60905
	.byte	10
	.byte	'_Ifx_CPU_COMPAT_Bits',0,20,83,16,4,11
	.byte	'reserved_0',0,4
	.word	863
	.byte	3,29,2,35,0,11
	.byte	'RM',0,4
	.word	863
	.byte	1,28,2,35,0,11
	.byte	'SP',0,4
	.word	863
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	863
	.byte	27,0,2,35,0,0,33
	.byte	'Ifx_CPU_COMPAT_Bits',0,20,89,3
	.word	61051
	.byte	10
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,20,92,16,4,11
	.byte	'CORE_ID',0,4
	.word	863
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	863
	.byte	29,0,2,35,0,0,33
	.byte	'Ifx_CPU_CORE_ID_Bits',0,20,96,3
	.word	61178
	.byte	10
	.byte	'_Ifx_CPU_CPR_L_Bits',0,20,99,16,4,11
	.byte	'reserved_0',0,4
	.word	863
	.byte	3,29,2,35,0,11
	.byte	'LOWBND',0,4
	.word	863
	.byte	29,0,2,35,0,0,33
	.byte	'Ifx_CPU_CPR_L_Bits',0,20,103,3
	.word	61276
	.byte	10
	.byte	'_Ifx_CPU_CPR_U_Bits',0,20,106,16,4,11
	.byte	'reserved_0',0,4
	.word	863
	.byte	3,29,2,35,0,11
	.byte	'UPPBND',0,4
	.word	863
	.byte	29,0,2,35,0,0,33
	.byte	'Ifx_CPU_CPR_U_Bits',0,20,110,3
	.word	61369
	.byte	10
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,20,113,16,4,11
	.byte	'MODREV',0,4
	.word	863
	.byte	8,24,2,35,0,11
	.byte	'MOD_32B',0,4
	.word	863
	.byte	8,16,2,35,0,11
	.byte	'MOD',0,4
	.word	863
	.byte	16,0,2,35,0,0,33
	.byte	'Ifx_CPU_CPU_ID_Bits',0,20,118,3
	.word	61462
	.byte	10
	.byte	'_Ifx_CPU_CPXE_Bits',0,20,121,16,4,11
	.byte	'XE',0,4
	.word	863
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	863
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_CPU_CPXE_Bits',0,20,125,3
	.word	61569
	.byte	10
	.byte	'_Ifx_CPU_CREVT_Bits',0,20,128,1,16,4,11
	.byte	'EVTA',0,4
	.word	863
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	863
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	863
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	863
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	863
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	863
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_CPU_CREVT_Bits',0,20,136,1,3
	.word	61656
	.byte	10
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,20,139,1,16,4,11
	.byte	'CID',0,4
	.word	863
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	863
	.byte	29,0,2,35,0,0,33
	.byte	'Ifx_CPU_CUS_ID_Bits',0,20,143,1,3
	.word	61810
	.byte	10
	.byte	'_Ifx_CPU_D_Bits',0,20,146,1,16,4,11
	.byte	'DATA',0,4
	.word	863
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_D_Bits',0,20,149,1,3
	.word	61904
	.byte	10
	.byte	'_Ifx_CPU_DATR_Bits',0,20,152,1,16,4,11
	.byte	'reserved_0',0,4
	.word	863
	.byte	3,29,2,35,0,11
	.byte	'SBE',0,4
	.word	863
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	863
	.byte	5,23,2,35,0,11
	.byte	'CWE',0,4
	.word	863
	.byte	1,22,2,35,0,11
	.byte	'CFE',0,4
	.word	863
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	863
	.byte	3,18,2,35,0,11
	.byte	'SOE',0,4
	.word	863
	.byte	1,17,2,35,0,11
	.byte	'SME',0,4
	.word	863
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	863
	.byte	16,0,2,35,0,0,33
	.byte	'Ifx_CPU_DATR_Bits',0,20,163,1,3
	.word	61967
	.byte	10
	.byte	'_Ifx_CPU_DBGSR_Bits',0,20,166,1,16,4,11
	.byte	'DE',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'HALT',0,4
	.word	863
	.byte	2,29,2,35,0,11
	.byte	'SIH',0,4
	.word	863
	.byte	1,28,2,35,0,11
	.byte	'SUSP',0,4
	.word	863
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	863
	.byte	1,26,2,35,0,11
	.byte	'PREVSUSP',0,4
	.word	863
	.byte	1,25,2,35,0,11
	.byte	'PEVT',0,4
	.word	863
	.byte	1,24,2,35,0,11
	.byte	'EVTSRC',0,4
	.word	863
	.byte	5,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	863
	.byte	19,0,2,35,0,0,33
	.byte	'Ifx_CPU_DBGSR_Bits',0,20,177,1,3
	.word	62185
	.byte	10
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,20,180,1,16,4,11
	.byte	'DTA',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	863
	.byte	31,0,2,35,0,0,33
	.byte	'Ifx_CPU_DBGTCR_Bits',0,20,184,1,3
	.word	62400
	.byte	10
	.byte	'_Ifx_CPU_DCON0_Bits',0,20,187,1,16,4,11
	.byte	'reserved_0',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'DCBYP',0,4
	.word	863
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	863
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_CPU_DCON0_Bits',0,20,192,1,3
	.word	62494
	.byte	10
	.byte	'_Ifx_CPU_DCON2_Bits',0,20,195,1,16,4,11
	.byte	'DCACHE_SZE',0,4
	.word	863
	.byte	16,16,2,35,0,11
	.byte	'DSCRATCH_SZE',0,4
	.word	863
	.byte	16,0,2,35,0,0,33
	.byte	'Ifx_CPU_DCON2_Bits',0,20,199,1,3
	.word	62610
	.byte	10
	.byte	'_Ifx_CPU_DCX_Bits',0,20,202,1,16,4,11
	.byte	'reserved_0',0,4
	.word	863
	.byte	6,26,2,35,0,11
	.byte	'DCXValue',0,4
	.word	863
	.byte	26,0,2,35,0,0,33
	.byte	'Ifx_CPU_DCX_Bits',0,20,206,1,3
	.word	62711
	.byte	10
	.byte	'_Ifx_CPU_DEADD_Bits',0,20,209,1,16,4,11
	.byte	'ERROR_ADDRESS',0,4
	.word	863
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_DEADD_Bits',0,20,212,1,3
	.word	62804
	.byte	10
	.byte	'_Ifx_CPU_DIEAR_Bits',0,20,215,1,16,4,11
	.byte	'TA',0,4
	.word	863
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_DIEAR_Bits',0,20,218,1,3
	.word	62884
	.byte	10
	.byte	'_Ifx_CPU_DIETR_Bits',0,20,221,1,16,4,11
	.byte	'IED',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	863
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	863
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	863
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	863
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	863
	.byte	6,21,2,35,0,11
	.byte	'IE_DUAL',0,4
	.word	863
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	863
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	863
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	863
	.byte	18,0,2,35,0,0,33
	.byte	'Ifx_CPU_DIETR_Bits',0,20,233,1,3
	.word	62953
	.byte	10
	.byte	'_Ifx_CPU_DMS_Bits',0,20,236,1,16,4,11
	.byte	'reserved_0',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'DMSValue',0,4
	.word	863
	.byte	31,0,2,35,0,0,33
	.byte	'Ifx_CPU_DMS_Bits',0,20,240,1,3
	.word	63182
	.byte	10
	.byte	'_Ifx_CPU_DPR_L_Bits',0,20,243,1,16,4,11
	.byte	'reserved_0',0,4
	.word	863
	.byte	3,29,2,35,0,11
	.byte	'LOWBND',0,4
	.word	863
	.byte	29,0,2,35,0,0,33
	.byte	'Ifx_CPU_DPR_L_Bits',0,20,247,1,3
	.word	63275
	.byte	10
	.byte	'_Ifx_CPU_DPR_U_Bits',0,20,250,1,16,4,11
	.byte	'reserved_0',0,4
	.word	863
	.byte	3,29,2,35,0,11
	.byte	'UPPBND',0,4
	.word	863
	.byte	29,0,2,35,0,0,33
	.byte	'Ifx_CPU_DPR_U_Bits',0,20,254,1,3
	.word	63370
	.byte	10
	.byte	'_Ifx_CPU_DPRE_Bits',0,20,129,2,16,4,11
	.byte	'RE',0,4
	.word	863
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	863
	.byte	16,0,2,35,0,0,33
	.byte	'Ifx_CPU_DPRE_Bits',0,20,133,2,3
	.word	63465
	.byte	10
	.byte	'_Ifx_CPU_DPWE_Bits',0,20,136,2,16,4,11
	.byte	'WE',0,4
	.word	863
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	863
	.byte	16,0,2,35,0,0,33
	.byte	'Ifx_CPU_DPWE_Bits',0,20,140,2,3
	.word	63555
	.byte	10
	.byte	'_Ifx_CPU_DSTR_Bits',0,20,143,2,16,4,11
	.byte	'SRE',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'GAE',0,4
	.word	863
	.byte	1,30,2,35,0,11
	.byte	'LBE',0,4
	.word	863
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	863
	.byte	3,26,2,35,0,11
	.byte	'CRE',0,4
	.word	863
	.byte	1,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	863
	.byte	7,18,2,35,0,11
	.byte	'DTME',0,4
	.word	863
	.byte	1,17,2,35,0,11
	.byte	'LOE',0,4
	.word	863
	.byte	1,16,2,35,0,11
	.byte	'SDE',0,4
	.word	863
	.byte	1,15,2,35,0,11
	.byte	'SCE',0,4
	.word	863
	.byte	1,14,2,35,0,11
	.byte	'CAC',0,4
	.word	863
	.byte	1,13,2,35,0,11
	.byte	'MPE',0,4
	.word	863
	.byte	1,12,2,35,0,11
	.byte	'CLE',0,4
	.word	863
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	863
	.byte	3,8,2,35,0,11
	.byte	'ALN',0,4
	.word	863
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	863
	.byte	7,0,2,35,0,0,33
	.byte	'Ifx_CPU_DSTR_Bits',0,20,161,2,3
	.word	63645
	.byte	10
	.byte	'_Ifx_CPU_EXEVT_Bits',0,20,164,2,16,4,11
	.byte	'EVTA',0,4
	.word	863
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	863
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	863
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	863
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	863
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	863
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_CPU_EXEVT_Bits',0,20,172,2,3
	.word	63969
	.byte	10
	.byte	'_Ifx_CPU_FCX_Bits',0,20,175,2,16,4,11
	.byte	'FCXO',0,4
	.word	863
	.byte	16,16,2,35,0,11
	.byte	'FCXS',0,4
	.word	863
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	863
	.byte	12,0,2,35,0,0,33
	.byte	'Ifx_CPU_FCX_Bits',0,20,180,2,3
	.word	64123
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,20,183,2,16,4,11
	.byte	'TST',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'TCL',0,4
	.word	863
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	863
	.byte	6,24,2,35,0,11
	.byte	'RM',0,4
	.word	863
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	863
	.byte	8,14,2,35,0,11
	.byte	'FXE',0,4
	.word	863
	.byte	1,13,2,35,0,11
	.byte	'FUE',0,4
	.word	863
	.byte	1,12,2,35,0,11
	.byte	'FZE',0,4
	.word	863
	.byte	1,11,2,35,0,11
	.byte	'FVE',0,4
	.word	863
	.byte	1,10,2,35,0,11
	.byte	'FIE',0,4
	.word	863
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	863
	.byte	3,6,2,35,0,11
	.byte	'FX',0,4
	.word	863
	.byte	1,5,2,35,0,11
	.byte	'FU',0,4
	.word	863
	.byte	1,4,2,35,0,11
	.byte	'FZ',0,4
	.word	863
	.byte	1,3,2,35,0,11
	.byte	'FV',0,4
	.word	863
	.byte	1,2,2,35,0,11
	.byte	'FI',0,4
	.word	863
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	863
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,20,202,2,3
	.word	64229
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,20,205,2,16,4,11
	.byte	'OPC',0,4
	.word	863
	.byte	8,24,2,35,0,11
	.byte	'FMT',0,4
	.word	863
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	863
	.byte	7,16,2,35,0,11
	.byte	'DREG',0,4
	.word	863
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	863
	.byte	12,0,2,35,0,0,33
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,20,212,2,3
	.word	64578
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,20,215,2,16,4,11
	.byte	'PC',0,4
	.word	863
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,20,218,2,3
	.word	64738
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,20,221,2,16,4,11
	.byte	'SRC1',0,4
	.word	863
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,20,224,2,3
	.word	64819
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,20,227,2,16,4,11
	.byte	'SRC2',0,4
	.word	863
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,20,230,2,3
	.word	64906
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,20,233,2,16,4,11
	.byte	'SRC3',0,4
	.word	863
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,20,236,2,3
	.word	64993
	.byte	10
	.byte	'_Ifx_CPU_ICNT_Bits',0,20,239,2,16,4,11
	.byte	'CountValue',0,4
	.word	863
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	863
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_ICNT_Bits',0,20,243,2,3
	.word	65080
	.byte	10
	.byte	'_Ifx_CPU_ICR_Bits',0,20,246,2,16,4,11
	.byte	'CCPN',0,4
	.word	863
	.byte	10,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	863
	.byte	5,17,2,35,0,11
	.byte	'IE',0,4
	.word	863
	.byte	1,16,2,35,0,11
	.byte	'PIPN',0,4
	.word	863
	.byte	10,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	863
	.byte	6,0,2,35,0,0,33
	.byte	'Ifx_CPU_ICR_Bits',0,20,253,2,3
	.word	65171
	.byte	10
	.byte	'_Ifx_CPU_ISP_Bits',0,20,128,3,16,4,11
	.byte	'ISP',0,4
	.word	863
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_ISP_Bits',0,20,131,3,3
	.word	65314
	.byte	10
	.byte	'_Ifx_CPU_LCX_Bits',0,20,134,3,16,4,11
	.byte	'LCXO',0,4
	.word	863
	.byte	16,16,2,35,0,11
	.byte	'LCXS',0,4
	.word	863
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	863
	.byte	12,0,2,35,0,0,33
	.byte	'Ifx_CPU_LCX_Bits',0,20,139,3,3
	.word	65380
	.byte	10
	.byte	'_Ifx_CPU_M1CNT_Bits',0,20,142,3,16,4,11
	.byte	'CountValue',0,4
	.word	863
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	863
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_M1CNT_Bits',0,20,146,3,3
	.word	65486
	.byte	10
	.byte	'_Ifx_CPU_M2CNT_Bits',0,20,149,3,16,4,11
	.byte	'CountValue',0,4
	.word	863
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	863
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_M2CNT_Bits',0,20,153,3,3
	.word	65579
	.byte	10
	.byte	'_Ifx_CPU_M3CNT_Bits',0,20,156,3,16,4,11
	.byte	'CountValue',0,4
	.word	863
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	863
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_M3CNT_Bits',0,20,160,3,3
	.word	65672
	.byte	10
	.byte	'_Ifx_CPU_PC_Bits',0,20,163,3,16,4,11
	.byte	'reserved_0',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'PC',0,4
	.word	863
	.byte	31,0,2,35,0,0,33
	.byte	'Ifx_CPU_PC_Bits',0,20,167,3,3
	.word	65765
	.byte	10
	.byte	'_Ifx_CPU_PCON0_Bits',0,20,170,3,16,4,11
	.byte	'reserved_0',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'PCBYP',0,4
	.word	863
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	863
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_CPU_PCON0_Bits',0,20,175,3,3
	.word	65850
	.byte	10
	.byte	'_Ifx_CPU_PCON1_Bits',0,20,178,3,16,4,11
	.byte	'PCINV',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'PBINV',0,4
	.word	863
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	863
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_CPU_PCON1_Bits',0,20,183,3,3
	.word	65966
	.byte	10
	.byte	'_Ifx_CPU_PCON2_Bits',0,20,186,3,16,4,11
	.byte	'PCACHE_SZE',0,4
	.word	863
	.byte	16,16,2,35,0,11
	.byte	'PSCRATCH_SZE',0,4
	.word	863
	.byte	16,0,2,35,0,0,33
	.byte	'Ifx_CPU_PCON2_Bits',0,20,190,3,3
	.word	66077
	.byte	10
	.byte	'_Ifx_CPU_PCXI_Bits',0,20,193,3,16,4,11
	.byte	'PCXO',0,4
	.word	863
	.byte	16,16,2,35,0,11
	.byte	'PCXS',0,4
	.word	863
	.byte	4,12,2,35,0,11
	.byte	'UL',0,4
	.word	863
	.byte	1,11,2,35,0,11
	.byte	'PIE',0,4
	.word	863
	.byte	1,10,2,35,0,11
	.byte	'PCPN',0,4
	.word	863
	.byte	10,0,2,35,0,0,33
	.byte	'Ifx_CPU_PCXI_Bits',0,20,200,3,3
	.word	66178
	.byte	10
	.byte	'_Ifx_CPU_PIEAR_Bits',0,20,203,3,16,4,11
	.byte	'TA',0,4
	.word	863
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_PIEAR_Bits',0,20,206,3,3
	.word	66308
	.byte	10
	.byte	'_Ifx_CPU_PIETR_Bits',0,20,209,3,16,4,11
	.byte	'IED',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	863
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	863
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	863
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	863
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	863
	.byte	6,21,2,35,0,11
	.byte	'IE_DUAL',0,4
	.word	863
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	863
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	863
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	863
	.byte	18,0,2,35,0,0,33
	.byte	'Ifx_CPU_PIETR_Bits',0,20,221,3,3
	.word	66377
	.byte	10
	.byte	'_Ifx_CPU_PMA0_Bits',0,20,224,3,16,4,11
	.byte	'reserved_0',0,4
	.word	863
	.byte	13,19,2,35,0,11
	.byte	'DAC',0,4
	.word	863
	.byte	3,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	863
	.byte	16,0,2,35,0,0,33
	.byte	'Ifx_CPU_PMA0_Bits',0,20,229,3,3
	.word	66606
	.byte	10
	.byte	'_Ifx_CPU_PMA1_Bits',0,20,232,3,16,4,11
	.byte	'reserved_0',0,4
	.word	863
	.byte	14,18,2,35,0,11
	.byte	'CAC',0,4
	.word	863
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	863
	.byte	16,0,2,35,0,0,33
	.byte	'Ifx_CPU_PMA1_Bits',0,20,237,3,3
	.word	66719
	.byte	10
	.byte	'_Ifx_CPU_PMA2_Bits',0,20,240,3,16,4,11
	.byte	'PSI',0,4
	.word	863
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	863
	.byte	16,0,2,35,0,0,33
	.byte	'Ifx_CPU_PMA2_Bits',0,20,244,3,3
	.word	66832
	.byte	10
	.byte	'_Ifx_CPU_PSTR_Bits',0,20,247,3,16,4,11
	.byte	'FRE',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	863
	.byte	1,30,2,35,0,11
	.byte	'FBE',0,4
	.word	863
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	863
	.byte	9,20,2,35,0,11
	.byte	'FPE',0,4
	.word	863
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	863
	.byte	1,18,2,35,0,11
	.byte	'FME',0,4
	.word	863
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	863
	.byte	17,0,2,35,0,0,33
	.byte	'Ifx_CPU_PSTR_Bits',0,20,129,4,3
	.word	66923
	.byte	10
	.byte	'_Ifx_CPU_PSW_Bits',0,20,132,4,16,4,11
	.byte	'CDC',0,4
	.word	863
	.byte	7,25,2,35,0,11
	.byte	'CDE',0,4
	.word	863
	.byte	1,24,2,35,0,11
	.byte	'GW',0,4
	.word	863
	.byte	1,23,2,35,0,11
	.byte	'IS',0,4
	.word	863
	.byte	1,22,2,35,0,11
	.byte	'IO',0,4
	.word	863
	.byte	2,20,2,35,0,11
	.byte	'PRS',0,4
	.word	863
	.byte	2,18,2,35,0,11
	.byte	'S',0,4
	.word	863
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	863
	.byte	12,5,2,35,0,11
	.byte	'SAV',0,4
	.word	863
	.byte	1,4,2,35,0,11
	.byte	'AV',0,4
	.word	863
	.byte	1,3,2,35,0,11
	.byte	'SV',0,4
	.word	863
	.byte	1,2,2,35,0,11
	.byte	'V',0,4
	.word	863
	.byte	1,1,2,35,0,11
	.byte	'C',0,4
	.word	863
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_PSW_Bits',0,20,147,4,3
	.word	67126
	.byte	10
	.byte	'_Ifx_CPU_SEGEN_Bits',0,20,150,4,16,4,11
	.byte	'ADFLIP',0,4
	.word	863
	.byte	8,24,2,35,0,11
	.byte	'ADTYPE',0,4
	.word	863
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	863
	.byte	21,1,2,35,0,11
	.byte	'AE',0,4
	.word	863
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_SEGEN_Bits',0,20,156,4,3
	.word	67369
	.byte	10
	.byte	'_Ifx_CPU_SMACON_Bits',0,20,159,4,16,4,11
	.byte	'PC',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	863
	.byte	1,30,2,35,0,11
	.byte	'PT',0,4
	.word	863
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	863
	.byte	5,24,2,35,0,11
	.byte	'DC',0,4
	.word	863
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	863
	.byte	1,22,2,35,0,11
	.byte	'DT',0,4
	.word	863
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	863
	.byte	13,8,2,35,0,11
	.byte	'IODT',0,4
	.word	863
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	863
	.byte	7,0,2,35,0,0,33
	.byte	'Ifx_CPU_SMACON_Bits',0,20,171,4,3
	.word	67497
	.byte	10
	.byte	'_Ifx_CPU_SPROT_ACCENA_Bits',0,20,174,4,16,4,11
	.byte	'EN',0,4
	.word	441
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_SPROT_ACCENA_Bits',0,20,177,4,3
	.word	67738
	.byte	10
	.byte	'_Ifx_CPU_SPROT_ACCENB_Bits',0,20,180,4,16,4,11
	.byte	'reserved_0',0,4
	.word	441
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_SPROT_ACCENB_Bits',0,20,183,4,3
	.word	67821
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,20,186,4,16,4,11
	.byte	'EN',0,4
	.word	441
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,20,189,4,3
	.word	67912
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,20,192,4,16,4,11
	.byte	'reserved_0',0,4
	.word	441
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,20,195,4,3
	.word	68003
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_LA_Bits',0,20,198,4,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	441
	.byte	27,0,2,35,0,0,33
	.byte	'Ifx_CPU_SPROT_RGN_LA_Bits',0,20,202,4,3
	.word	68102
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_UA_Bits',0,20,205,4,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	441
	.byte	27,0,2,35,0,0,33
	.byte	'Ifx_CPU_SPROT_RGN_UA_Bits',0,20,209,4,3
	.word	68209
	.byte	10
	.byte	'_Ifx_CPU_SWEVT_Bits',0,20,212,4,16,4,11
	.byte	'EVTA',0,4
	.word	863
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	863
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	863
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	863
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	863
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	863
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_CPU_SWEVT_Bits',0,20,220,4,3
	.word	68316
	.byte	10
	.byte	'_Ifx_CPU_SYSCON_Bits',0,20,223,4,16,4,11
	.byte	'FCDSF',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'PROTEN',0,4
	.word	863
	.byte	1,30,2,35,0,11
	.byte	'TPROTEN',0,4
	.word	863
	.byte	1,29,2,35,0,11
	.byte	'IS',0,4
	.word	863
	.byte	1,28,2,35,0,11
	.byte	'IT',0,4
	.word	863
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	863
	.byte	27,0,2,35,0,0,33
	.byte	'Ifx_CPU_SYSCON_Bits',0,20,231,4,3
	.word	68470
	.byte	10
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,20,234,4,16,4,11
	.byte	'ASI',0,4
	.word	863
	.byte	5,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	863
	.byte	27,0,2,35,0,0,33
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,20,238,4,3
	.word	68631
	.byte	10
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,20,241,4,16,4,11
	.byte	'TEXP0',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'TEXP1',0,4
	.word	863
	.byte	1,30,2,35,0,11
	.byte	'TEXP2',0,4
	.word	863
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	863
	.byte	13,16,2,35,0,11
	.byte	'TTRAP',0,4
	.word	863
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	863
	.byte	15,0,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_CON_Bits',0,20,249,4,3
	.word	68729
	.byte	10
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,20,252,4,16,4,11
	.byte	'Timer',0,4
	.word	863
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,20,255,4,3
	.word	68901
	.byte	10
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,20,130,5,16,4,11
	.byte	'ADDR',0,4
	.word	863
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_TR_ADR_Bits',0,20,133,5,3
	.word	68981
	.byte	10
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,20,136,5,16,4,11
	.byte	'EVTA',0,4
	.word	863
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	863
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	863
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	863
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	863
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	863
	.byte	4,20,2,35,0,11
	.byte	'TYP',0,4
	.word	863
	.byte	1,19,2,35,0,11
	.byte	'RNG',0,4
	.word	863
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	863
	.byte	1,17,2,35,0,11
	.byte	'ASI_EN',0,4
	.word	863
	.byte	1,16,2,35,0,11
	.byte	'ASI',0,4
	.word	863
	.byte	5,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	863
	.byte	6,5,2,35,0,11
	.byte	'AST',0,4
	.word	863
	.byte	1,4,2,35,0,11
	.byte	'ALD',0,4
	.word	863
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	863
	.byte	3,0,2,35,0,0,33
	.byte	'Ifx_CPU_TR_EVT_Bits',0,20,153,5,3
	.word	69054
	.byte	10
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,20,156,5,16,4,11
	.byte	'T0',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'T1',0,4
	.word	863
	.byte	1,30,2,35,0,11
	.byte	'T2',0,4
	.word	863
	.byte	1,29,2,35,0,11
	.byte	'T3',0,4
	.word	863
	.byte	1,28,2,35,0,11
	.byte	'T4',0,4
	.word	863
	.byte	1,27,2,35,0,11
	.byte	'T5',0,4
	.word	863
	.byte	1,26,2,35,0,11
	.byte	'T6',0,4
	.word	863
	.byte	1,25,2,35,0,11
	.byte	'T7',0,4
	.word	863
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	863
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,20,167,5,3
	.word	69372
	.byte	12,20,175,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60590
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_A',0,20,180,5,3
	.word	69567
	.byte	12,20,183,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60651
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_BIV',0,20,188,5,3
	.word	69626
	.byte	12,20,191,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60730
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_BTV',0,20,196,5,3
	.word	69687
	.byte	12,20,199,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60816
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_CCNT',0,20,204,5,3
	.word	69748
	.byte	12,20,207,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60905
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_CCTRL',0,20,212,5,3
	.word	69810
	.byte	12,20,215,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61051
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_COMPAT',0,20,220,5,3
	.word	69873
	.byte	12,20,223,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61178
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_CORE_ID',0,20,228,5,3
	.word	69937
	.byte	12,20,231,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61276
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_CPR_L',0,20,236,5,3
	.word	70002
	.byte	12,20,239,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61369
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_CPR_U',0,20,244,5,3
	.word	70065
	.byte	12,20,247,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61462
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_CPU_ID',0,20,252,5,3
	.word	70128
	.byte	12,20,255,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61569
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_CPXE',0,20,132,6,3
	.word	70192
	.byte	12,20,135,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61656
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_CREVT',0,20,140,6,3
	.word	70254
	.byte	12,20,143,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61810
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_CUS_ID',0,20,148,6,3
	.word	70317
	.byte	12,20,151,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61904
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_D',0,20,156,6,3
	.word	70381
	.byte	12,20,159,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61967
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DATR',0,20,164,6,3
	.word	70440
	.byte	12,20,167,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62185
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DBGSR',0,20,172,6,3
	.word	70502
	.byte	12,20,175,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62400
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DBGTCR',0,20,180,6,3
	.word	70565
	.byte	12,20,183,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62494
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DCON0',0,20,188,6,3
	.word	70629
	.byte	12,20,191,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62610
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DCON2',0,20,196,6,3
	.word	70692
	.byte	12,20,199,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62711
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DCX',0,20,204,6,3
	.word	70755
	.byte	12,20,207,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62804
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DEADD',0,20,212,6,3
	.word	70816
	.byte	12,20,215,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62884
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DIEAR',0,20,220,6,3
	.word	70879
	.byte	12,20,223,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62953
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DIETR',0,20,228,6,3
	.word	70942
	.byte	12,20,231,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63182
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DMS',0,20,236,6,3
	.word	71005
	.byte	12,20,239,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63275
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DPR_L',0,20,244,6,3
	.word	71066
	.byte	12,20,247,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63370
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DPR_U',0,20,252,6,3
	.word	71129
	.byte	12,20,255,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63465
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DPRE',0,20,132,7,3
	.word	71192
	.byte	12,20,135,7,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63555
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DPWE',0,20,140,7,3
	.word	71254
	.byte	12,20,143,7,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63645
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DSTR',0,20,148,7,3
	.word	71316
	.byte	12,20,151,7,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63969
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_EXEVT',0,20,156,7,3
	.word	71378
	.byte	12,20,159,7,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64123
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_FCX',0,20,164,7,3
	.word	71441
	.byte	12,20,167,7,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64229
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,20,172,7,3
	.word	71502
	.byte	12,20,175,7,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64578
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,20,180,7,3
	.word	71572
	.byte	12,20,183,7,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64738
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,20,188,7,3
	.word	71642
	.byte	12,20,191,7,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64819
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,20,196,7,3
	.word	71711
	.byte	12,20,199,7,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64906
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,20,204,7,3
	.word	71782
	.byte	12,20,207,7,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64993
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,20,212,7,3
	.word	71853
	.byte	12,20,215,7,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65080
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_ICNT',0,20,220,7,3
	.word	71924
	.byte	12,20,223,7,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65171
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_ICR',0,20,228,7,3
	.word	71986
	.byte	12,20,231,7,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65314
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_ISP',0,20,236,7,3
	.word	72047
	.byte	12,20,239,7,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65380
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_LCX',0,20,244,7,3
	.word	72108
	.byte	12,20,247,7,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65486
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_M1CNT',0,20,252,7,3
	.word	72169
	.byte	12,20,255,7,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65579
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_M2CNT',0,20,132,8,3
	.word	72232
	.byte	12,20,135,8,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65672
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_M3CNT',0,20,140,8,3
	.word	72295
	.byte	12,20,143,8,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65765
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_PC',0,20,148,8,3
	.word	72358
	.byte	12,20,151,8,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65850
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_PCON0',0,20,156,8,3
	.word	72418
	.byte	12,20,159,8,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65966
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_PCON1',0,20,164,8,3
	.word	72481
	.byte	12,20,167,8,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66077
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_PCON2',0,20,172,8,3
	.word	72544
	.byte	12,20,175,8,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66178
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_PCXI',0,20,180,8,3
	.word	72607
	.byte	12,20,183,8,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66308
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_PIEAR',0,20,188,8,3
	.word	72669
	.byte	12,20,191,8,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66377
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_PIETR',0,20,196,8,3
	.word	72732
	.byte	12,20,199,8,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66606
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_PMA0',0,20,204,8,3
	.word	72795
	.byte	12,20,207,8,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66719
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_PMA1',0,20,212,8,3
	.word	72857
	.byte	12,20,215,8,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66832
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_PMA2',0,20,220,8,3
	.word	72919
	.byte	12,20,223,8,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66923
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_PSTR',0,20,228,8,3
	.word	72981
	.byte	12,20,231,8,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67126
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_PSW',0,20,236,8,3
	.word	73043
	.byte	12,20,239,8,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67369
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_SEGEN',0,20,244,8,3
	.word	73104
	.byte	12,20,247,8,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67497
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_SMACON',0,20,252,8,3
	.word	73167
	.byte	12,20,255,8,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67738
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_SPROT_ACCENA',0,20,132,9,3
	.word	73231
	.byte	12,20,135,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67821
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_SPROT_ACCENB',0,20,140,9,3
	.word	73301
	.byte	12,20,143,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67912
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA',0,20,148,9,3
	.word	73371
	.byte	12,20,151,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68003
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB',0,20,156,9,3
	.word	73445
	.byte	12,20,159,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68102
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_SPROT_RGN_LA',0,20,164,9,3
	.word	73519
	.byte	12,20,167,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68209
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_SPROT_RGN_UA',0,20,172,9,3
	.word	73589
	.byte	12,20,175,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68316
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_SWEVT',0,20,180,9,3
	.word	73659
	.byte	12,20,183,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68470
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_SYSCON',0,20,188,9,3
	.word	73722
	.byte	12,20,191,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68631
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_TASK_ASI',0,20,196,9,3
	.word	73786
	.byte	12,20,199,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68729
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_CON',0,20,204,9,3
	.word	73852
	.byte	12,20,207,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68901
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_TIMER',0,20,212,9,3
	.word	73917
	.byte	12,20,215,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68981
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_TR_ADR',0,20,220,9,3
	.word	73984
	.byte	12,20,223,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69054
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_TR_EVT',0,20,228,9,3
	.word	74048
	.byte	12,20,231,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69372
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_TRIG_ACC',0,20,236,9,3
	.word	74112
	.byte	10
	.byte	'_Ifx_CPU_CPR',0,20,247,9,25,8,13
	.byte	'L',0
	.word	70002
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	70065
	.byte	4,2,35,4,0,14
	.word	74178
	.byte	33
	.byte	'Ifx_CPU_CPR',0,20,251,9,3
	.word	74220
	.byte	10
	.byte	'_Ifx_CPU_DPR',0,20,254,9,25,8,13
	.byte	'L',0
	.word	71066
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	71129
	.byte	4,2,35,4,0,14
	.word	74246
	.byte	33
	.byte	'Ifx_CPU_DPR',0,20,130,10,3
	.word	74288
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN',0,20,133,10,25,16,13
	.byte	'LA',0
	.word	73519
	.byte	4,2,35,0,13
	.byte	'UA',0
	.word	73589
	.byte	4,2,35,4,13
	.byte	'ACCENA',0
	.word	73371
	.byte	4,2,35,8,13
	.byte	'ACCENB',0
	.word	73445
	.byte	4,2,35,12,0,14
	.word	74314
	.byte	33
	.byte	'Ifx_CPU_SPROT_RGN',0,20,139,10,3
	.word	74396
	.byte	18,12
	.word	73917
	.byte	19,2,0,10
	.byte	'_Ifx_CPU_TPS',0,20,142,10,25,16,13
	.byte	'CON',0
	.word	73852
	.byte	4,2,35,0,13
	.byte	'TIMER',0
	.word	74428
	.byte	12,2,35,4,0,14
	.word	74437
	.byte	33
	.byte	'Ifx_CPU_TPS',0,20,146,10,3
	.word	74485
	.byte	10
	.byte	'_Ifx_CPU_TR',0,20,149,10,25,8,13
	.byte	'EVT',0
	.word	74048
	.byte	4,2,35,0,13
	.byte	'ADR',0
	.word	73984
	.byte	4,2,35,4,0,14
	.word	74511
	.byte	33
	.byte	'Ifx_CPU_TR',0,20,153,10,3
	.word	74556
	.byte	18,176,32
	.word	464
	.byte	19,175,32,0,18,208,223,1
	.word	464
	.byte	19,207,223,1,0,18,248,1
	.word	464
	.byte	19,247,1,0,18,244,29
	.word	464
	.byte	19,243,29,0,18,188,3
	.word	464
	.byte	19,187,3,0,18,232,3
	.word	464
	.byte	19,231,3,0,18,252,23
	.word	464
	.byte	19,251,23,0,18,228,63
	.word	464
	.byte	19,227,63,0,18,128,1
	.word	74246
	.byte	19,15,0,14
	.word	74671
	.byte	18,128,31
	.word	464
	.byte	19,255,30,0,18,64
	.word	74178
	.byte	19,7,0,14
	.word	74697
	.byte	18,192,31
	.word	464
	.byte	19,191,31,0,18,16
	.word	70192
	.byte	19,3,0,18,16
	.word	71192
	.byte	19,3,0,18,16
	.word	71254
	.byte	19,3,0,18,208,7
	.word	464
	.byte	19,207,7,0,14
	.word	74437
	.byte	18,240,23
	.word	464
	.byte	19,239,23,0,18,64
	.word	74511
	.byte	19,7,0,14
	.word	74776
	.byte	18,192,23
	.word	464
	.byte	19,191,23,0,18,232,1
	.word	464
	.byte	19,231,1,0,18,180,1
	.word	464
	.byte	19,179,1,0,18,172,1
	.word	464
	.byte	19,171,1,0,18,64
	.word	70381
	.byte	19,15,0,18,64
	.word	69567
	.byte	19,15,0,10
	.byte	'_Ifx_CPU',0,20,166,10,25,128,128,4,13
	.byte	'reserved_0',0
	.word	74581
	.byte	176,32,2,35,0,13
	.byte	'SEGEN',0
	.word	73104
	.byte	4,3,35,176,32,13
	.byte	'reserved_1034',0
	.word	74592
	.byte	208,223,1,3,35,180,32,13
	.byte	'TASK_ASI',0
	.word	73786
	.byte	4,4,35,132,128,2,13
	.byte	'reserved_8008',0
	.word	74605
	.byte	248,1,4,35,136,128,2,13
	.byte	'PMA0',0
	.word	72795
	.byte	4,4,35,128,130,2,13
	.byte	'PMA1',0
	.word	72857
	.byte	4,4,35,132,130,2,13
	.byte	'PMA2',0
	.word	72919
	.byte	4,4,35,136,130,2,13
	.byte	'reserved_810C',0
	.word	74616
	.byte	244,29,4,35,140,130,2,13
	.byte	'DCON2',0
	.word	70692
	.byte	4,4,35,128,160,2,13
	.byte	'reserved_9004',0
	.word	5021
	.byte	8,4,35,132,160,2,13
	.byte	'SMACON',0
	.word	73167
	.byte	4,4,35,140,160,2,13
	.byte	'DSTR',0
	.word	71316
	.byte	4,4,35,144,160,2,13
	.byte	'reserved_9014',0
	.word	3202
	.byte	4,4,35,148,160,2,13
	.byte	'DATR',0
	.word	70440
	.byte	4,4,35,152,160,2,13
	.byte	'DEADD',0
	.word	70816
	.byte	4,4,35,156,160,2,13
	.byte	'DIEAR',0
	.word	70879
	.byte	4,4,35,160,160,2,13
	.byte	'DIETR',0
	.word	70942
	.byte	4,4,35,164,160,2,13
	.byte	'reserved_9028',0
	.word	4392
	.byte	24,4,35,168,160,2,13
	.byte	'DCON0',0
	.word	70629
	.byte	4,4,35,192,160,2,13
	.byte	'reserved_9044',0
	.word	74627
	.byte	188,3,4,35,196,160,2,13
	.byte	'PSTR',0
	.word	72981
	.byte	4,4,35,128,164,2,13
	.byte	'PCON1',0
	.word	72481
	.byte	4,4,35,132,164,2,13
	.byte	'PCON2',0
	.word	72544
	.byte	4,4,35,136,164,2,13
	.byte	'PCON0',0
	.word	72418
	.byte	4,4,35,140,164,2,13
	.byte	'PIEAR',0
	.word	72669
	.byte	4,4,35,144,164,2,13
	.byte	'PIETR',0
	.word	72732
	.byte	4,4,35,148,164,2,13
	.byte	'reserved_9218',0
	.word	74638
	.byte	232,3,4,35,152,164,2,13
	.byte	'COMPAT',0
	.word	69873
	.byte	4,4,35,128,168,2,13
	.byte	'reserved_9404',0
	.word	74649
	.byte	252,23,4,35,132,168,2,13
	.byte	'FPU_TRAP_CON',0
	.word	71502
	.byte	4,4,35,128,192,2,13
	.byte	'FPU_TRAP_PC',0
	.word	71642
	.byte	4,4,35,132,192,2,13
	.byte	'FPU_TRAP_OPC',0
	.word	71572
	.byte	4,4,35,136,192,2,13
	.byte	'reserved_A00C',0
	.word	3202
	.byte	4,4,35,140,192,2,13
	.byte	'FPU_TRAP_SRC1',0
	.word	71711
	.byte	4,4,35,144,192,2,13
	.byte	'FPU_TRAP_SRC2',0
	.word	71782
	.byte	4,4,35,148,192,2,13
	.byte	'FPU_TRAP_SRC3',0
	.word	71853
	.byte	4,4,35,152,192,2,13
	.byte	'reserved_A01C',0
	.word	74660
	.byte	228,63,4,35,156,192,2,13
	.byte	'DPR',0
	.word	74681
	.byte	128,1,4,35,128,128,3,13
	.byte	'reserved_C080',0
	.word	74686
	.byte	128,31,4,35,128,129,3,13
	.byte	'CPR',0
	.word	74706
	.byte	64,4,35,128,160,3,13
	.byte	'reserved_D040',0
	.word	74711
	.byte	192,31,4,35,192,160,3,13
	.byte	'CPXE',0
	.word	74722
	.byte	16,4,35,128,192,3,13
	.byte	'DPRE',0
	.word	74731
	.byte	16,4,35,144,192,3,13
	.byte	'DPWE',0
	.word	74740
	.byte	16,4,35,160,192,3,13
	.byte	'reserved_E030',0
	.word	74749
	.byte	208,7,4,35,176,192,3,13
	.byte	'TPS',0
	.word	74760
	.byte	16,4,35,128,200,3,13
	.byte	'reserved_E410',0
	.word	74765
	.byte	240,23,4,35,144,200,3,13
	.byte	'TR',0
	.word	74785
	.byte	64,4,35,128,224,3,13
	.byte	'reserved_F040',0
	.word	74790
	.byte	192,23,4,35,192,224,3,13
	.byte	'CCTRL',0
	.word	69810
	.byte	4,4,35,128,248,3,13
	.byte	'CCNT',0
	.word	69748
	.byte	4,4,35,132,248,3,13
	.byte	'ICNT',0
	.word	71924
	.byte	4,4,35,136,248,3,13
	.byte	'M1CNT',0
	.word	72169
	.byte	4,4,35,140,248,3,13
	.byte	'M2CNT',0
	.word	72232
	.byte	4,4,35,144,248,3,13
	.byte	'M3CNT',0
	.word	72295
	.byte	4,4,35,148,248,3,13
	.byte	'reserved_FC18',0
	.word	74801
	.byte	232,1,4,35,152,248,3,13
	.byte	'DBGSR',0
	.word	70502
	.byte	4,4,35,128,250,3,13
	.byte	'reserved_FD04',0
	.word	3202
	.byte	4,4,35,132,250,3,13
	.byte	'EXEVT',0
	.word	71378
	.byte	4,4,35,136,250,3,13
	.byte	'CREVT',0
	.word	70254
	.byte	4,4,35,140,250,3,13
	.byte	'SWEVT',0
	.word	73659
	.byte	4,4,35,144,250,3,13
	.byte	'reserved_FD14',0
	.word	11006
	.byte	28,4,35,148,250,3,13
	.byte	'TRIG_ACC',0
	.word	74112
	.byte	4,4,35,176,250,3,13
	.byte	'reserved_FD34',0
	.word	5361
	.byte	12,4,35,180,250,3,13
	.byte	'DMS',0
	.word	71005
	.byte	4,4,35,192,250,3,13
	.byte	'DCX',0
	.word	70755
	.byte	4,4,35,196,250,3,13
	.byte	'DBGTCR',0
	.word	70565
	.byte	4,4,35,200,250,3,13
	.byte	'reserved_FD4C',0
	.word	74812
	.byte	180,1,4,35,204,250,3,13
	.byte	'PCXI',0
	.word	72607
	.byte	4,4,35,128,252,3,13
	.byte	'PSW',0
	.word	73043
	.byte	4,4,35,132,252,3,13
	.byte	'PC',0
	.word	72358
	.byte	4,4,35,136,252,3,13
	.byte	'reserved_FE0C',0
	.word	5021
	.byte	8,4,35,140,252,3,13
	.byte	'SYSCON',0
	.word	73722
	.byte	4,4,35,148,252,3,13
	.byte	'CPU_ID',0
	.word	70128
	.byte	4,4,35,152,252,3,13
	.byte	'CORE_ID',0
	.word	69937
	.byte	4,4,35,156,252,3,13
	.byte	'BIV',0
	.word	69626
	.byte	4,4,35,160,252,3,13
	.byte	'BTV',0
	.word	69687
	.byte	4,4,35,164,252,3,13
	.byte	'ISP',0
	.word	72047
	.byte	4,4,35,168,252,3,13
	.byte	'ICR',0
	.word	71986
	.byte	4,4,35,172,252,3,13
	.byte	'reserved_FE30',0
	.word	5021
	.byte	8,4,35,176,252,3,13
	.byte	'FCX',0
	.word	71441
	.byte	4,4,35,184,252,3,13
	.byte	'LCX',0
	.word	72108
	.byte	4,4,35,188,252,3,13
	.byte	'reserved_FE40',0
	.word	29100
	.byte	16,4,35,192,252,3,13
	.byte	'CUS_ID',0
	.word	70317
	.byte	4,4,35,208,252,3,13
	.byte	'reserved_FE54',0
	.word	74823
	.byte	172,1,4,35,212,252,3,13
	.byte	'D',0
	.word	74834
	.byte	64,4,35,128,254,3,13
	.byte	'reserved_FF40',0
	.word	12087
	.byte	64,4,35,192,254,3,13
	.byte	'A',0
	.word	74843
	.byte	64,4,35,128,255,3,13
	.byte	'reserved_FFC0',0
	.word	12087
	.byte	64,4,35,192,255,3,0,14
	.word	74852
	.byte	33
	.byte	'Ifx_CPU',0,20,130,11,3
	.word	76643
	.byte	15,8,127,9,1,16
	.byte	'IfxCpu_Id_0',0,0,16
	.byte	'IfxCpu_Id_1',0,1,16
	.byte	'IfxCpu_Id_none',0,2,0,33
	.byte	'IfxCpu_Id',0,8,132,1,3
	.word	76665
	.byte	33
	.byte	'IfxCpu_ResourceCpu',0,8,161,1,3
	.word	1810
	.byte	10
	.byte	'_Ifx_STM_ACCEN0_Bits',0,21,45,16,4,11
	.byte	'EN0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	464
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	464
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	464
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_STM_ACCEN0_Bits',0,21,79,3
	.word	76763
	.byte	10
	.byte	'_Ifx_STM_ACCEN1_Bits',0,21,82,16,4,11
	.byte	'reserved_0',0,4
	.word	441
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_STM_ACCEN1_Bits',0,21,85,3
	.word	77320
	.byte	10
	.byte	'_Ifx_STM_CAP_Bits',0,21,88,16,4,11
	.byte	'STMCAP63_32',0,4
	.word	441
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_STM_CAP_Bits',0,21,91,3
	.word	77397
	.byte	10
	.byte	'_Ifx_STM_CAPSV_Bits',0,21,94,16,4,11
	.byte	'STMCAP63_32',0,4
	.word	441
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_STM_CAPSV_Bits',0,21,97,3
	.word	77469
	.byte	10
	.byte	'_Ifx_STM_CLC_Bits',0,21,100,16,4,11
	.byte	'DISR',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	441
	.byte	28,0,2,35,0,0,33
	.byte	'Ifx_STM_CLC_Bits',0,21,107,3
	.word	77545
	.byte	10
	.byte	'_Ifx_STM_CMCON_Bits',0,21,110,16,4,11
	.byte	'MSIZE0',0,1
	.word	464
	.byte	5,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	464
	.byte	3,0,2,35,0,11
	.byte	'MSTART0',0,1
	.word	464
	.byte	5,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	464
	.byte	3,0,2,35,1,11
	.byte	'MSIZE1',0,1
	.word	464
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	464
	.byte	3,0,2,35,2,11
	.byte	'MSTART1',0,1
	.word	464
	.byte	5,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	464
	.byte	3,0,2,35,3,0,33
	.byte	'Ifx_STM_CMCON_Bits',0,21,120,3
	.word	77686
	.byte	10
	.byte	'_Ifx_STM_CMP_Bits',0,21,123,16,4,11
	.byte	'CMPVAL',0,4
	.word	441
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_STM_CMP_Bits',0,21,126,3
	.word	77904
	.byte	10
	.byte	'_Ifx_STM_ICR_Bits',0,21,129,1,16,4,11
	.byte	'CMP0EN',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'CMP0IR',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'CMP0OS',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'CMP1EN',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'CMP1IR',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'CMP1OS',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	441
	.byte	25,0,2,35,0,0,33
	.byte	'Ifx_STM_ICR_Bits',0,21,139,1,3
	.word	77971
	.byte	10
	.byte	'_Ifx_STM_ID_Bits',0,21,142,1,16,4,11
	.byte	'MODREV',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	1015
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_STM_ID_Bits',0,21,147,1,3
	.word	78174
	.byte	10
	.byte	'_Ifx_STM_ISCR_Bits',0,21,150,1,16,4,11
	.byte	'CMP0IRR',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'CMP0IRS',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'CMP1IRR',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'CMP1IRS',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	441
	.byte	28,0,2,35,0,0,33
	.byte	'Ifx_STM_ISCR_Bits',0,21,157,1,3
	.word	78281
	.byte	10
	.byte	'_Ifx_STM_KRST0_Bits',0,21,160,1,16,4,11
	.byte	'RST',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	441
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_STM_KRST0_Bits',0,21,165,1,3
	.word	78432
	.byte	10
	.byte	'_Ifx_STM_KRST1_Bits',0,21,168,1,16,4,11
	.byte	'RST',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	441
	.byte	31,0,2,35,0,0,33
	.byte	'Ifx_STM_KRST1_Bits',0,21,172,1,3
	.word	78543
	.byte	10
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,21,175,1,16,4,11
	.byte	'CLR',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	441
	.byte	31,0,2,35,0,0,33
	.byte	'Ifx_STM_KRSTCLR_Bits',0,21,179,1,3
	.word	78635
	.byte	10
	.byte	'_Ifx_STM_OCS_Bits',0,21,182,1,16,4,11
	.byte	'reserved_0',0,4
	.word	441
	.byte	24,8,2,35,0,11
	.byte	'SUS',0,1
	.word	464
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	464
	.byte	2,0,2,35,3,0,33
	.byte	'Ifx_STM_OCS_Bits',0,21,189,1,3
	.word	78731
	.byte	10
	.byte	'_Ifx_STM_TIM0_Bits',0,21,192,1,16,4,11
	.byte	'STM31_0',0,4
	.word	441
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_STM_TIM0_Bits',0,21,195,1,3
	.word	78877
	.byte	10
	.byte	'_Ifx_STM_TIM0SV_Bits',0,21,198,1,16,4,11
	.byte	'STM31_0',0,4
	.word	441
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_STM_TIM0SV_Bits',0,21,201,1,3
	.word	78949
	.byte	10
	.byte	'_Ifx_STM_TIM1_Bits',0,21,204,1,16,4,11
	.byte	'STM35_4',0,4
	.word	441
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_STM_TIM1_Bits',0,21,207,1,3
	.word	79025
	.byte	10
	.byte	'_Ifx_STM_TIM2_Bits',0,21,210,1,16,4,11
	.byte	'STM39_8',0,4
	.word	441
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_STM_TIM2_Bits',0,21,213,1,3
	.word	79097
	.byte	10
	.byte	'_Ifx_STM_TIM3_Bits',0,21,216,1,16,4,11
	.byte	'STM43_12',0,4
	.word	441
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_STM_TIM3_Bits',0,21,219,1,3
	.word	79169
	.byte	10
	.byte	'_Ifx_STM_TIM4_Bits',0,21,222,1,16,4,11
	.byte	'STM47_16',0,4
	.word	441
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_STM_TIM4_Bits',0,21,225,1,3
	.word	79242
	.byte	10
	.byte	'_Ifx_STM_TIM5_Bits',0,21,228,1,16,4,11
	.byte	'STM51_20',0,4
	.word	441
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_STM_TIM5_Bits',0,21,231,1,3
	.word	79315
	.byte	10
	.byte	'_Ifx_STM_TIM6_Bits',0,21,234,1,16,4,11
	.byte	'STM63_32',0,4
	.word	441
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_STM_TIM6_Bits',0,21,237,1,3
	.word	79388
	.byte	12,21,245,1,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76763
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_ACCEN0',0,21,250,1,3
	.word	79461
	.byte	12,21,253,1,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77320
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_ACCEN1',0,21,130,2,3
	.word	79525
	.byte	12,21,133,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77397
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_CAP',0,21,138,2,3
	.word	79589
	.byte	12,21,141,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77469
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_CAPSV',0,21,146,2,3
	.word	79650
	.byte	12,21,149,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77545
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_CLC',0,21,154,2,3
	.word	79713
	.byte	12,21,157,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77686
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_CMCON',0,21,162,2,3
	.word	79774
	.byte	12,21,165,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77904
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_CMP',0,21,170,2,3
	.word	79837
	.byte	12,21,173,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77971
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_ICR',0,21,178,2,3
	.word	79898
	.byte	12,21,181,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78174
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_ID',0,21,186,2,3
	.word	79959
	.byte	12,21,189,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78281
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_ISCR',0,21,194,2,3
	.word	80019
	.byte	12,21,197,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78432
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_KRST0',0,21,202,2,3
	.word	80081
	.byte	12,21,205,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78543
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_KRST1',0,21,210,2,3
	.word	80144
	.byte	12,21,213,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78635
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_KRSTCLR',0,21,218,2,3
	.word	80207
	.byte	12,21,221,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78731
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_OCS',0,21,226,2,3
	.word	80272
	.byte	12,21,229,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78877
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_TIM0',0,21,234,2,3
	.word	80333
	.byte	12,21,237,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78949
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_TIM0SV',0,21,242,2,3
	.word	80395
	.byte	12,21,245,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79025
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_TIM1',0,21,250,2,3
	.word	80459
	.byte	12,21,253,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79097
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_TIM2',0,21,130,3,3
	.word	80521
	.byte	12,21,133,3,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79169
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_TIM3',0,21,138,3,3
	.word	80583
	.byte	12,21,141,3,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79242
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_TIM4',0,21,146,3,3
	.word	80645
	.byte	12,21,149,3,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79315
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_TIM5',0,21,154,3,3
	.word	80707
	.byte	12,21,157,3,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79388
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_TIM6',0,21,162,3,3
	.word	80769
	.byte	15,7,144,1,9,1,16
	.byte	'IfxCpu_CounterMode_normal',0,0,16
	.byte	'IfxCpu_CounterMode_task',0,1,0,33
	.byte	'IfxCpu_CounterMode',0,7,148,1,3
	.word	80831
	.byte	20,7,160,1,9,6,13
	.byte	'counter',0
	.word	1965
	.byte	4,2,35,0,13
	.byte	'overlfow',0
	.word	464
	.byte	1,2,35,4,0,33
	.byte	'IfxCpu_Counter',0,7,164,1,3
	.word	80920
	.byte	20,7,172,1,9,32,13
	.byte	'instruction',0
	.word	80920
	.byte	6,2,35,0,13
	.byte	'clock',0
	.word	80920
	.byte	6,2,35,6,13
	.byte	'counter1',0
	.word	80920
	.byte	6,2,35,12,13
	.byte	'counter2',0
	.word	80920
	.byte	6,2,35,18,13
	.byte	'counter3',0
	.word	80920
	.byte	6,2,35,24,0,33
	.byte	'IfxCpu_Perf',0,7,179,1,3
	.word	80986
	.byte	10
	.byte	'_Ifx_FLASH_ACCEN0_Bits',0,22,45,16,4,11
	.byte	'EN0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	464
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	464
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	464
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_FLASH_ACCEN0_Bits',0,22,79,3
	.word	81104
	.byte	10
	.byte	'_Ifx_FLASH_ACCEN1_Bits',0,22,82,16,4,11
	.byte	'reserved_0',0,4
	.word	441
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_FLASH_ACCEN1_Bits',0,22,85,3
	.word	81665
	.byte	10
	.byte	'_Ifx_FLASH_CBAB_CFG_Bits',0,22,88,16,4,11
	.byte	'SEL',0,1
	.word	464
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	464
	.byte	2,0,2,35,0,11
	.byte	'CLR',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'DIS',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	441
	.byte	22,0,2,35,0,0,33
	.byte	'Ifx_FLASH_CBAB_CFG_Bits',0,22,95,3
	.word	81746
	.byte	10
	.byte	'_Ifx_FLASH_CBAB_STAT_Bits',0,22,98,16,4,11
	.byte	'VLD0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'VLD1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'VLD2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'VLD3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'VLD4',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'VLD5',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'VLD6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'VLD7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'VLD8',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'VLD9',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	441
	.byte	22,0,2,35,0,0,33
	.byte	'Ifx_FLASH_CBAB_STAT_Bits',0,22,111,3
	.word	81899
	.byte	10
	.byte	'_Ifx_FLASH_CBAB_TOP_Bits',0,22,114,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	441
	.byte	19,8,2,35,0,11
	.byte	'ERR',0,1
	.word	464
	.byte	6,2,2,35,3,11
	.byte	'VLD',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'CLR',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_FLASH_CBAB_TOP_Bits',0,22,121,3
	.word	82147
	.byte	10
	.byte	'_Ifx_FLASH_COMM0_Bits',0,22,124,16,4,11
	.byte	'STATUS',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	441
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_FLASH_COMM0_Bits',0,22,128,1,3
	.word	82293
	.byte	10
	.byte	'_Ifx_FLASH_COMM1_Bits',0,22,131,1,16,4,11
	.byte	'STATUS',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'DATA',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_FLASH_COMM1_Bits',0,22,136,1,3
	.word	82391
	.byte	10
	.byte	'_Ifx_FLASH_COMM2_Bits',0,22,139,1,16,4,11
	.byte	'STATUS',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'DATA',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_FLASH_COMM2_Bits',0,22,144,1,3
	.word	82507
	.byte	10
	.byte	'_Ifx_FLASH_ECCRD_Bits',0,22,147,1,16,4,11
	.byte	'RCODE',0,4
	.word	441
	.byte	22,10,2,35,0,11
	.byte	'reserved_22',0,2
	.word	1015
	.byte	8,2,2,35,2,11
	.byte	'EDCERRINJ',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'ECCORDIS',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_FLASH_ECCRD_Bits',0,22,153,1,3
	.word	82623
	.byte	10
	.byte	'_Ifx_FLASH_ECCRP_Bits',0,22,156,1,16,4,11
	.byte	'RCODE',0,4
	.word	441
	.byte	22,10,2,35,0,11
	.byte	'reserved_22',0,2
	.word	1015
	.byte	8,2,2,35,2,11
	.byte	'EDCERRINJ',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'ECCORDIS',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_FLASH_ECCRP_Bits',0,22,162,1,3
	.word	82763
	.byte	10
	.byte	'_Ifx_FLASH_ECCW_Bits',0,22,165,1,16,4,11
	.byte	'WCODE',0,4
	.word	441
	.byte	22,10,2,35,0,11
	.byte	'reserved_22',0,2
	.word	1015
	.byte	8,2,2,35,2,11
	.byte	'DECENCDIS',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'PECENCDIS',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_FLASH_ECCW_Bits',0,22,171,1,3
	.word	82903
	.byte	10
	.byte	'_Ifx_FLASH_FCON_Bits',0,22,174,1,16,4,11
	.byte	'WSPFLASH',0,1
	.word	464
	.byte	4,4,2,35,0,11
	.byte	'WSECPF',0,1
	.word	464
	.byte	2,2,2,35,0,11
	.byte	'WSDFLASH',0,2
	.word	1015
	.byte	6,4,2,35,0,11
	.byte	'WSECDF',0,1
	.word	464
	.byte	3,1,2,35,1,11
	.byte	'IDLE',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'ESLDIS',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'SLEEP',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'NSAFECC',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'STALL',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'RES21',0,1
	.word	464
	.byte	2,2,2,35,2,11
	.byte	'RES23',0,1
	.word	464
	.byte	2,0,2,35,2,11
	.byte	'VOPERM',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'SQERM',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'PROERM',0,1
	.word	464
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	464
	.byte	3,2,2,35,3,11
	.byte	'PR5V',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'EOBM',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_FLASH_FCON_Bits',0,22,193,1,3
	.word	83042
	.byte	10
	.byte	'_Ifx_FLASH_FPRO_Bits',0,22,196,1,16,4,11
	.byte	'PROINP',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'PRODISP',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'PROIND',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'PRODISD',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'PROINHSMCOTP',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'RES5',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'PROINOTP',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'RES7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'PROINDBG',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'PRODISDBG',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'PROINHSM',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	464
	.byte	5,0,2,35,1,11
	.byte	'DCFP',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'DDFP',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'DDFPX',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'DDFD',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	464
	.byte	1,2,2,35,2,11
	.byte	'ENPE',0,1
	.word	464
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	8,0,2,35,3,0,33
	.byte	'Ifx_FLASH_FPRO_Bits',0,22,218,1,3
	.word	83404
	.byte	10
	.byte	'_Ifx_FLASH_FSR_Bits',0,22,221,1,16,4,11
	.byte	'FABUSY',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'D0BUSY',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'RES1',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'P0BUSY',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'P1BUSY',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'RES5',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'RES6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'PROG',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'ERASE',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'PFPAGE',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'DFPAGE',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'OPER',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'SQER',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'PROER',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'PFSBER',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'PFDBER',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'PFMBER',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'RES17',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'DFSBER',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'DFDBER',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'DFTBER',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'DFMBER',0,1
	.word	464
	.byte	1,2,2,35,2,11
	.byte	'SRIADDERR',0,1
	.word	464
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	1015
	.byte	2,7,2,35,2,11
	.byte	'PVER',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'EVER',0,1
	.word	464
	.byte	1,5,2,35,3,11
	.byte	'SPND',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'SLM',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'ORIER',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_FLASH_FSR_Bits',0,22,254,1,3
	.word	83845
	.byte	10
	.byte	'_Ifx_FLASH_ID_Bits',0,22,129,2,16,4,11
	.byte	'MODREV',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	1015
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_FLASH_ID_Bits',0,22,134,2,3
	.word	84451
	.byte	10
	.byte	'_Ifx_FLASH_MARD_Bits',0,22,137,2,16,4,11
	.byte	'HMARGIN',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'SELD0',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'SPND',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'SPNDERR',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,2
	.word	1015
	.byte	10,1,2,35,0,11
	.byte	'TRAPDIS',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_FLASH_MARD_Bits',0,22,147,2,3
	.word	84562
	.byte	10
	.byte	'_Ifx_FLASH_MARP_Bits',0,22,150,2,16,4,11
	.byte	'SELP0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'SELP1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'RES2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'RES3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	1015
	.byte	11,1,2,35,0,11
	.byte	'TRAPDIS',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_FLASH_MARP_Bits',0,22,159,2,3
	.word	84776
	.byte	10
	.byte	'_Ifx_FLASH_PROCOND_Bits',0,22,162,2,16,4,11
	.byte	'L',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'NSAFECC',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'RAMIN',0,1
	.word	464
	.byte	2,4,2,35,0,11
	.byte	'RAMINSEL',0,1
	.word	464
	.byte	4,0,2,35,0,11
	.byte	'OSCCFG',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'MODE',0,1
	.word	464
	.byte	2,5,2,35,1,11
	.byte	'APREN',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'CAP0EN',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'CAP1EN',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'CAP2EN',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'CAP3EN',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'ESR0CNT',0,2
	.word	1015
	.byte	12,4,2,35,2,11
	.byte	'RES29',0,1
	.word	464
	.byte	2,2,2,35,3,11
	.byte	'RES30',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'RPRO',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_FLASH_PROCOND_Bits',0,22,179,2,3
	.word	84963
	.byte	10
	.byte	'_Ifx_FLASH_PROCONDBG_Bits',0,22,182,2,16,4,11
	.byte	'OCDSDIS',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'DBGIFLCK',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'EDM',0,1
	.word	464
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	441
	.byte	28,0,2,35,0,0,33
	.byte	'Ifx_FLASH_PROCONDBG_Bits',0,22,188,2,3
	.word	85287
	.byte	10
	.byte	'_Ifx_FLASH_PROCONHSM_Bits',0,22,191,2,16,4,11
	.byte	'HSMDBGDIS',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'DBGIFLCK',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'TSTIFLCK',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'HSMTSTDIS',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'RES15',0,2
	.word	1015
	.byte	12,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_FLASH_PROCONHSM_Bits',0,22,199,2,3
	.word	85430
	.byte	10
	.byte	'_Ifx_FLASH_PROCONHSMCOTP_Bits',0,22,202,2,16,4,11
	.byte	'HSMBOOTEN',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'SSWWAIT',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'HSMDX',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'HSM6X',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'HSM16X',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'HSM17X',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'S6ROM',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'HSMENPINS',0,2
	.word	1015
	.byte	2,7,2,35,0,11
	.byte	'HSMENRES',0,1
	.word	464
	.byte	2,5,2,35,1,11
	.byte	'DESTDBG',0,1
	.word	464
	.byte	2,3,2,35,1,11
	.byte	'BLKFLAN',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	464
	.byte	2,0,2,35,1,11
	.byte	'S16ROM',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'S17ROM',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	1015
	.byte	14,0,2,35,2,0,33
	.byte	'Ifx_FLASH_PROCONHSMCOTP_Bits',0,22,219,2,3
	.word	85619
	.byte	10
	.byte	'_Ifx_FLASH_PROCONOTP_Bits',0,22,222,2,16,4,11
	.byte	'S0ROM',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'S1ROM',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'S2ROM',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'S3ROM',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'S4ROM',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'S5ROM',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'S6ROM',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'S7ROM',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'S8ROM',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'S9ROM',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'S10ROM',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'S11ROM',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'S12ROM',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'S13ROM',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'S14ROM',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'S15ROM',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'S16ROM',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'S17ROM',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'S18ROM',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'S19ROM',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'S20ROM',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'S21ROM',0,1
	.word	464
	.byte	1,2,2,35,2,11
	.byte	'S22ROM',0,1
	.word	464
	.byte	1,1,2,35,2,11
	.byte	'S23ROM',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'S24ROM',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'S25ROM',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'S26ROM',0,1
	.word	464
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	464
	.byte	2,3,2,35,3,11
	.byte	'BML',0,1
	.word	464
	.byte	2,1,2,35,3,11
	.byte	'TP',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_FLASH_PROCONOTP_Bits',0,22,254,2,3
	.word	85982
	.byte	10
	.byte	'_Ifx_FLASH_PROCONP_Bits',0,22,129,3,16,4,11
	.byte	'S0L',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'S1L',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'S2L',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'S3L',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'S4L',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'S5L',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'S6L',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'S7L',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'S8L',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'S9L',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'S10L',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'S11L',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'S12L',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'S13L',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'S14L',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'S15L',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'S16L',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'S17L',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'S18L',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'S19L',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'S20L',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'S21L',0,1
	.word	464
	.byte	1,2,2,35,2,11
	.byte	'S22L',0,1
	.word	464
	.byte	1,1,2,35,2,11
	.byte	'S23L',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'S24L',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'S25L',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'S26L',0,1
	.word	464
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	464
	.byte	4,1,2,35,3,11
	.byte	'RPRO',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_FLASH_PROCONP_Bits',0,22,160,3,3
	.word	86577
	.byte	10
	.byte	'_Ifx_FLASH_PROCONWOP_Bits',0,22,163,3,16,4,11
	.byte	'S0WOP',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'S1WOP',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'S2WOP',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'S3WOP',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'S4WOP',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'S5WOP',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'S6WOP',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'S7WOP',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'S8WOP',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'S9WOP',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'S10WOP',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'S11WOP',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'S12WOP',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'S13WOP',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'S14WOP',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'S15WOP',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'S16WOP',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'S17WOP',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'S18WOP',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'S19WOP',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'S20WOP',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'S21WOP',0,1
	.word	464
	.byte	1,2,2,35,2,11
	.byte	'S22WOP',0,1
	.word	464
	.byte	1,1,2,35,2,11
	.byte	'S23WOP',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'S24WOP',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'S25WOP',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'S26WOP',0,1
	.word	464
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	464
	.byte	4,1,2,35,3,11
	.byte	'DATM',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_FLASH_PROCONWOP_Bits',0,22,194,3,3
	.word	87101
	.byte	10
	.byte	'_Ifx_FLASH_RDB_CFG0_Bits',0,22,197,3,16,4,11
	.byte	'TAG',0,1
	.word	464
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	441
	.byte	26,0,2,35,0,0,33
	.byte	'Ifx_FLASH_RDB_CFG0_Bits',0,22,201,3,3
	.word	87683
	.byte	10
	.byte	'_Ifx_FLASH_RDB_CFG1_Bits',0,22,204,3,16,4,11
	.byte	'TAG',0,1
	.word	464
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	441
	.byte	26,0,2,35,0,0,33
	.byte	'Ifx_FLASH_RDB_CFG1_Bits',0,22,208,3,3
	.word	87785
	.byte	10
	.byte	'_Ifx_FLASH_RDB_CFG2_Bits',0,22,211,3,16,4,11
	.byte	'TAG',0,1
	.word	464
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	441
	.byte	26,0,2,35,0,0,33
	.byte	'Ifx_FLASH_RDB_CFG2_Bits',0,22,215,3,3
	.word	87887
	.byte	10
	.byte	'_Ifx_FLASH_RRAD_Bits',0,22,218,3,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	3,5,2,35,0,11
	.byte	'ADD',0,4
	.word	441
	.byte	29,0,2,35,0,0,33
	.byte	'Ifx_FLASH_RRAD_Bits',0,22,222,3,3
	.word	87989
	.byte	10
	.byte	'_Ifx_FLASH_RRCT_Bits',0,22,225,3,16,4,11
	.byte	'STRT',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'STP',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'BUSY',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'DONE',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'ERR',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	464
	.byte	3,0,2,35,0,11
	.byte	'EOBM',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	464
	.byte	7,0,2,35,1,11
	.byte	'CNT',0,2
	.word	1015
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_FLASH_RRCT_Bits',0,22,236,3,3
	.word	88083
	.byte	10
	.byte	'_Ifx_FLASH_RRD0_Bits',0,22,239,3,16,4,11
	.byte	'DATA',0,4
	.word	441
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_FLASH_RRD0_Bits',0,22,242,3,3
	.word	88293
	.byte	10
	.byte	'_Ifx_FLASH_RRD1_Bits',0,22,245,3,16,4,11
	.byte	'DATA',0,4
	.word	441
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_FLASH_RRD1_Bits',0,22,248,3,3
	.word	88366
	.byte	10
	.byte	'_Ifx_FLASH_UBAB_CFG_Bits',0,22,251,3,16,4,11
	.byte	'SEL',0,1
	.word	464
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	464
	.byte	2,0,2,35,0,11
	.byte	'CLR',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'DIS',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	441
	.byte	22,0,2,35,0,0,33
	.byte	'Ifx_FLASH_UBAB_CFG_Bits',0,22,130,4,3
	.word	88439
	.byte	10
	.byte	'_Ifx_FLASH_UBAB_STAT_Bits',0,22,133,4,16,4,11
	.byte	'VLD0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	441
	.byte	31,0,2,35,0,0,33
	.byte	'Ifx_FLASH_UBAB_STAT_Bits',0,22,137,4,3
	.word	88594
	.byte	10
	.byte	'_Ifx_FLASH_UBAB_TOP_Bits',0,22,140,4,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	441
	.byte	19,8,2,35,0,11
	.byte	'ERR',0,1
	.word	464
	.byte	6,2,2,35,3,11
	.byte	'VLD',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'CLR',0,1
	.word	464
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_FLASH_UBAB_TOP_Bits',0,22,147,4,3
	.word	88699
	.byte	12,22,155,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81104
	.byte	4,2,35,0,0,33
	.byte	'Ifx_FLASH_ACCEN0',0,22,160,4,3
	.word	88847
	.byte	12,22,163,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81665
	.byte	4,2,35,0,0,33
	.byte	'Ifx_FLASH_ACCEN1',0,22,168,4,3
	.word	88913
	.byte	12,22,171,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81746
	.byte	4,2,35,0,0,33
	.byte	'Ifx_FLASH_CBAB_CFG',0,22,176,4,3
	.word	88979
	.byte	12,22,179,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81899
	.byte	4,2,35,0,0,33
	.byte	'Ifx_FLASH_CBAB_STAT',0,22,184,4,3
	.word	89047
	.byte	12,22,187,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	82147
	.byte	4,2,35,0,0,33
	.byte	'Ifx_FLASH_CBAB_TOP',0,22,192,4,3
	.word	89116
	.byte	12,22,195,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	82293
	.byte	4,2,35,0,0,33
	.byte	'Ifx_FLASH_COMM0',0,22,200,4,3
	.word	89184
	.byte	12,22,203,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	82391
	.byte	4,2,35,0,0,33
	.byte	'Ifx_FLASH_COMM1',0,22,208,4,3
	.word	89249
	.byte	12,22,211,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	82507
	.byte	4,2,35,0,0,33
	.byte	'Ifx_FLASH_COMM2',0,22,216,4,3
	.word	89314
	.byte	12,22,219,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	82623
	.byte	4,2,35,0,0,33
	.byte	'Ifx_FLASH_ECCRD',0,22,224,4,3
	.word	89379
	.byte	12,22,227,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	82763
	.byte	4,2,35,0,0,33
	.byte	'Ifx_FLASH_ECCRP',0,22,232,4,3
	.word	89444
	.byte	12,22,235,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	82903
	.byte	4,2,35,0,0,33
	.byte	'Ifx_FLASH_ECCW',0,22,240,4,3
	.word	89509
	.byte	12,22,243,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	83042
	.byte	4,2,35,0,0,33
	.byte	'Ifx_FLASH_FCON',0,22,248,4,3
	.word	89573
	.byte	12,22,251,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	83404
	.byte	4,2,35,0,0,33
	.byte	'Ifx_FLASH_FPRO',0,22,128,5,3
	.word	89637
	.byte	12,22,131,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	83845
	.byte	4,2,35,0,0,33
	.byte	'Ifx_FLASH_FSR',0,22,136,5,3
	.word	89701
	.byte	12,22,139,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	84451
	.byte	4,2,35,0,0,33
	.byte	'Ifx_FLASH_ID',0,22,144,5,3
	.word	89764
	.byte	12,22,147,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	84562
	.byte	4,2,35,0,0,33
	.byte	'Ifx_FLASH_MARD',0,22,152,5,3
	.word	89826
	.byte	12,22,155,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	84776
	.byte	4,2,35,0,0,33
	.byte	'Ifx_FLASH_MARP',0,22,160,5,3
	.word	89890
	.byte	12,22,163,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	84963
	.byte	4,2,35,0,0,33
	.byte	'Ifx_FLASH_PROCOND',0,22,168,5,3
	.word	89954
	.byte	12,22,171,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	85287
	.byte	4,2,35,0,0,33
	.byte	'Ifx_FLASH_PROCONDBG',0,22,176,5,3
	.word	90021
	.byte	12,22,179,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	85430
	.byte	4,2,35,0,0,33
	.byte	'Ifx_FLASH_PROCONHSM',0,22,184,5,3
	.word	90090
	.byte	12,22,187,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	85619
	.byte	4,2,35,0,0,33
	.byte	'Ifx_FLASH_PROCONHSMCOTP',0,22,192,5,3
	.word	90159
	.byte	12,22,195,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	85982
	.byte	4,2,35,0,0,33
	.byte	'Ifx_FLASH_PROCONOTP',0,22,200,5,3
	.word	90232
	.byte	12,22,203,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86577
	.byte	4,2,35,0,0,33
	.byte	'Ifx_FLASH_PROCONP',0,22,208,5,3
	.word	90301
	.byte	12,22,211,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	87101
	.byte	4,2,35,0,0,33
	.byte	'Ifx_FLASH_PROCONWOP',0,22,216,5,3
	.word	90368
	.byte	12,22,219,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	87683
	.byte	4,2,35,0,0,33
	.byte	'Ifx_FLASH_RDB_CFG0',0,22,224,5,3
	.word	90437
	.byte	12,22,227,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	87785
	.byte	4,2,35,0,0,33
	.byte	'Ifx_FLASH_RDB_CFG1',0,22,232,5,3
	.word	90505
	.byte	12,22,235,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	87887
	.byte	4,2,35,0,0,33
	.byte	'Ifx_FLASH_RDB_CFG2',0,22,240,5,3
	.word	90573
	.byte	12,22,243,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	87989
	.byte	4,2,35,0,0,33
	.byte	'Ifx_FLASH_RRAD',0,22,248,5,3
	.word	90641
	.byte	12,22,251,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	88083
	.byte	4,2,35,0,0,33
	.byte	'Ifx_FLASH_RRCT',0,22,128,6,3
	.word	90705
	.byte	12,22,131,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	88293
	.byte	4,2,35,0,0,33
	.byte	'Ifx_FLASH_RRD0',0,22,136,6,3
	.word	90769
	.byte	12,22,139,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	88366
	.byte	4,2,35,0,0,33
	.byte	'Ifx_FLASH_RRD1',0,22,144,6,3
	.word	90833
	.byte	12,22,147,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	88439
	.byte	4,2,35,0,0,33
	.byte	'Ifx_FLASH_UBAB_CFG',0,22,152,6,3
	.word	90897
	.byte	12,22,155,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	88594
	.byte	4,2,35,0,0,33
	.byte	'Ifx_FLASH_UBAB_STAT',0,22,160,6,3
	.word	90965
	.byte	12,22,163,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	88699
	.byte	4,2,35,0,0,33
	.byte	'Ifx_FLASH_UBAB_TOP',0,22,168,6,3
	.word	91034
	.byte	10
	.byte	'_Ifx_FLASH_CBAB',0,22,179,6,25,12,13
	.byte	'CFG',0
	.word	88979
	.byte	4,2,35,0,13
	.byte	'STAT',0
	.word	89047
	.byte	4,2,35,4,13
	.byte	'TOP',0
	.word	89116
	.byte	4,2,35,8,0,14
	.word	91102
	.byte	33
	.byte	'Ifx_FLASH_CBAB',0,22,184,6,3
	.word	91165
	.byte	10
	.byte	'_Ifx_FLASH_RDB',0,22,187,6,25,12,13
	.byte	'CFG0',0
	.word	90437
	.byte	4,2,35,0,13
	.byte	'CFG1',0
	.word	90505
	.byte	4,2,35,4,13
	.byte	'CFG2',0
	.word	90573
	.byte	4,2,35,8,0,14
	.word	91194
	.byte	33
	.byte	'Ifx_FLASH_RDB',0,22,192,6,3
	.word	91258
	.byte	10
	.byte	'_Ifx_FLASH_UBAB',0,22,195,6,25,12,13
	.byte	'CFG',0
	.word	90897
	.byte	4,2,35,0,13
	.byte	'STAT',0
	.word	90965
	.byte	4,2,35,4,13
	.byte	'TOP',0
	.word	91034
	.byte	4,2,35,8,0,14
	.word	91286
	.byte	33
	.byte	'Ifx_FLASH_UBAB',0,22,200,6,3
	.word	91349
	.byte	33
	.byte	'Ifx_P_ACCEN0_Bits',0,10,79,3
	.word	8774
	.byte	33
	.byte	'Ifx_P_ACCEN1_Bits',0,10,85,3
	.word	8687
	.byte	33
	.byte	'Ifx_P_ESR_Bits',0,10,107,3
	.word	5030
	.byte	33
	.byte	'Ifx_P_ID_Bits',0,10,115,3
	.word	3083
	.byte	33
	.byte	'Ifx_P_IN_Bits',0,10,137,1,3
	.word	4078
	.byte	33
	.byte	'Ifx_P_IOCR0_Bits',0,10,150,1,3
	.word	3211
	.byte	33
	.byte	'Ifx_P_IOCR12_Bits',0,10,163,1,3
	.word	3858
	.byte	33
	.byte	'Ifx_P_IOCR4_Bits',0,10,176,1,3
	.word	3426
	.byte	33
	.byte	'Ifx_P_IOCR8_Bits',0,10,189,1,3
	.word	3641
	.byte	33
	.byte	'Ifx_P_LPCR0_Bits',0,10,197,1,3
	.word	8046
	.byte	33
	.byte	'Ifx_P_LPCR1_Bits',0,10,205,1,3
	.word	8170
	.byte	33
	.byte	'Ifx_P_LPCR1_P21_Bits',0,10,215,1,3
	.word	8254
	.byte	33
	.byte	'Ifx_P_LPCR2_Bits',0,10,229,1,3
	.word	8434
	.byte	33
	.byte	'Ifx_P_OMCR0_Bits',0,10,240,1,3
	.word	6685
	.byte	33
	.byte	'Ifx_P_OMCR12_Bits',0,10,250,1,3
	.word	7209
	.byte	33
	.byte	'Ifx_P_OMCR4_Bits',0,10,133,2,3
	.word	6859
	.byte	33
	.byte	'Ifx_P_OMCR8_Bits',0,10,144,2,3
	.word	7033
	.byte	33
	.byte	'Ifx_P_OMCR_Bits',0,10,166,2,3
	.word	7698
	.byte	33
	.byte	'Ifx_P_OMR_Bits',0,10,203,2,3
	.word	2512
	.byte	33
	.byte	'Ifx_P_OMSR0_Bits',0,10,213,2,3
	.word	6022
	.byte	33
	.byte	'Ifx_P_OMSR12_Bits',0,10,224,2,3
	.word	6510
	.byte	33
	.byte	'Ifx_P_OMSR4_Bits',0,10,235,2,3
	.word	6169
	.byte	33
	.byte	'Ifx_P_OMSR8_Bits',0,10,246,2,3
	.word	6338
	.byte	33
	.byte	'Ifx_P_OMSR_Bits',0,10,140,3,3
	.word	7365
	.byte	33
	.byte	'Ifx_P_OUT_Bits',0,10,162,3,3
	.word	2196
	.byte	33
	.byte	'Ifx_P_PCSR_Bits',0,10,180,3,3
	.word	5736
	.byte	33
	.byte	'Ifx_P_PDISC_Bits',0,10,202,3,3
	.word	5370
	.byte	33
	.byte	'Ifx_P_PDR0_Bits',0,10,223,3,3
	.word	4401
	.byte	33
	.byte	'Ifx_P_PDR1_Bits',0,10,244,3,3
	.word	4705
	.byte	33
	.byte	'Ifx_P_ACCEN0',0,10,129,4,3
	.word	9301
	.byte	33
	.byte	'Ifx_P_ACCEN1',0,10,137,4,3
	.word	8734
	.byte	33
	.byte	'Ifx_P_ESR',0,10,145,4,3
	.word	5321
	.byte	33
	.byte	'Ifx_P_ID',0,10,153,4,3
	.word	3162
	.byte	33
	.byte	'Ifx_P_IN',0,10,161,4,3
	.word	4352
	.byte	33
	.byte	'Ifx_P_IOCR0',0,10,169,4,3
	.word	3386
	.byte	33
	.byte	'Ifx_P_IOCR12',0,10,177,4,3
	.word	4038
	.byte	33
	.byte	'Ifx_P_IOCR4',0,10,185,4,3
	.word	3601
	.byte	33
	.byte	'Ifx_P_IOCR8',0,10,193,4,3
	.word	3818
	.byte	33
	.byte	'Ifx_P_LPCR0',0,10,201,4,3
	.word	8130
	.byte	33
	.byte	'Ifx_P_LPCR1',0,10,210,4,3
	.word	8379
	.byte	33
	.byte	'Ifx_P_LPCR2',0,10,218,4,3
	.word	8638
	.byte	33
	.byte	'Ifx_P_OMCR',0,10,226,4,3
	.word	8006
	.byte	33
	.byte	'Ifx_P_OMCR0',0,10,234,4,3
	.word	6819
	.byte	33
	.byte	'Ifx_P_OMCR12',0,10,242,4,3
	.word	7325
	.byte	33
	.byte	'Ifx_P_OMCR4',0,10,250,4,3
	.word	6993
	.byte	33
	.byte	'Ifx_P_OMCR8',0,10,130,5,3
	.word	7169
	.byte	33
	.byte	'Ifx_P_OMR',0,10,138,5,3
	.word	3043
	.byte	33
	.byte	'Ifx_P_OMSR',0,10,146,5,3
	.word	7658
	.byte	33
	.byte	'Ifx_P_OMSR0',0,10,154,5,3
	.word	6129
	.byte	33
	.byte	'Ifx_P_OMSR12',0,10,162,5,3
	.word	6645
	.byte	33
	.byte	'Ifx_P_OMSR4',0,10,170,5,3
	.word	6298
	.byte	33
	.byte	'Ifx_P_OMSR8',0,10,178,5,3
	.word	6470
	.byte	33
	.byte	'Ifx_P_OUT',0,10,186,5,3
	.word	2472
	.byte	33
	.byte	'Ifx_P_PCSR',0,10,194,5,3
	.word	5982
	.byte	33
	.byte	'Ifx_P_PDISC',0,10,202,5,3
	.word	5696
	.byte	33
	.byte	'Ifx_P_PDR0',0,10,210,5,3
	.word	4665
	.byte	33
	.byte	'Ifx_P_PDR1',0,10,218,5,3
	.word	4981
	.byte	14
	.word	9341
	.byte	33
	.byte	'Ifx_P',0,10,139,6,3
	.word	92696
	.byte	33
	.byte	'IfxPort_InputMode',0,9,89,3
	.word	9954
	.byte	33
	.byte	'IfxPort_Mode',0,9,116,3
	.word	20668
	.byte	33
	.byte	'IfxPort_OutputIdx',0,9,130,1,3
	.word	10229
	.byte	33
	.byte	'IfxPort_OutputMode',0,9,138,1,3
	.word	10159
	.byte	33
	.byte	'IfxPort_PadDriver',0,9,158,1,3
	.word	18752
	.byte	33
	.byte	'IfxPort_State',0,9,178,1,3
	.word	10542
	.byte	33
	.byte	'IfxPort_Pin',0,9,194,1,3
	.word	18652
	.byte	33
	.byte	'IfxScuCcu_PllStepsFunctionHook',0,23,148,1,16
	.word	180
	.byte	20,23,212,5,9,8,13
	.byte	'value',0
	.word	1965
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	1965
	.byte	4,2,35,4,0,33
	.byte	'IfxScuCcu_CcuconRegConfig',0,23,216,5,3
	.word	92929
	.byte	20,23,221,5,9,8,13
	.byte	'pDivider',0
	.word	464
	.byte	1,2,35,0,13
	.byte	'nDivider',0
	.word	464
	.byte	1,2,35,1,13
	.byte	'k2Initial',0
	.word	464
	.byte	1,2,35,2,13
	.byte	'waitTime',0
	.word	237
	.byte	4,2,35,4,0,33
	.byte	'IfxScuCcu_InitialStepConfig',0,23,227,5,3
	.word	93000
	.byte	20,23,231,5,9,12,13
	.byte	'k2Step',0
	.word	464
	.byte	1,2,35,0,13
	.byte	'waitTime',0
	.word	237
	.byte	4,2,35,2,13
	.byte	'hookFunction',0
	.word	92889
	.byte	4,2,35,8,0,33
	.byte	'IfxScuCcu_PllStepsConfig',0,23,236,5,3
	.word	93117
	.byte	3
	.word	177
	.byte	20,23,244,5,9,48,13
	.byte	'ccucon0',0
	.word	92929
	.byte	8,2,35,0,13
	.byte	'ccucon1',0
	.word	92929
	.byte	8,2,35,8,13
	.byte	'ccucon2',0
	.word	92929
	.byte	8,2,35,16,13
	.byte	'ccucon5',0
	.word	92929
	.byte	8,2,35,24,13
	.byte	'ccucon6',0
	.word	92929
	.byte	8,2,35,32,13
	.byte	'ccucon7',0
	.word	92929
	.byte	8,2,35,40,0,33
	.byte	'IfxScuCcu_ClockDistributionConfig',0,23,252,5,3
	.word	93219
	.byte	20,23,128,6,9,8,13
	.byte	'value',0
	.word	1965
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	1965
	.byte	4,2,35,4,0,33
	.byte	'IfxScuCcu_FlashWaitstateConfig',0,23,132,6,3
	.word	93371
	.byte	3
	.word	93117
	.byte	20,23,137,6,9,16,13
	.byte	'numOfPllDividerSteps',0
	.word	464
	.byte	1,2,35,0,13
	.byte	'pllDividerStep',0
	.word	93447
	.byte	4,2,35,4,13
	.byte	'pllInitialStep',0
	.word	93000
	.byte	8,2,35,8,0,33
	.byte	'IfxScuCcu_SysPllConfig',0,23,142,6,3
	.word	93452
	.byte	33
	.byte	'Ifx_DSADC_ACCEN0_Bits',0,12,79,3
	.word	11516
	.byte	33
	.byte	'Ifx_DSADC_ACCPROT_Bits',0,12,93,3
	.word	12621
	.byte	33
	.byte	'Ifx_DSADC_CGCFG_Bits',0,12,111,3
	.word	12848
	.byte	33
	.byte	'Ifx_DSADC_CH_BOUNDSEL_Bits',0,12,118,3
	.word	15950
	.byte	33
	.byte	'Ifx_DSADC_CH_CGSYNC_Bits',0,12,127,3
	.word	16563
	.byte	33
	.byte	'Ifx_DSADC_CH_DICFG_Bits',0,12,143,1,3
	.word	14793
	.byte	33
	.byte	'Ifx_DSADC_CH_FCFGA_Bits',0,12,157,1,3
	.word	15452
	.byte	33
	.byte	'Ifx_DSADC_CH_FCFGC_Bits',0,12,170,1,3
	.word	15240
	.byte	33
	.byte	'Ifx_DSADC_CH_FCFGM_Bits',0,12,181,1,3
	.word	15064
	.byte	33
	.byte	'Ifx_DSADC_CH_ICCFG_Bits',0,12,194,1,3
	.word	16938
	.byte	33
	.byte	'Ifx_DSADC_CH_IWCTR_Bits',0,12,209,1,3
	.word	15685
	.byte	33
	.byte	'Ifx_DSADC_CH_MODCFG_Bits',0,12,231,1,3
	.word	14424
	.byte	33
	.byte	'Ifx_DSADC_CH_OFFM_Bits',0,12,238,1,3
	.word	16178
	.byte	33
	.byte	'Ifx_DSADC_CH_RECTCFG_Bits',0,12,251,1,3
	.word	16705
	.byte	33
	.byte	'Ifx_DSADC_CH_RESA_Bits',0,12,130,2,3
	.word	16290
	.byte	33
	.byte	'Ifx_DSADC_CH_RESM_Bits',0,12,137,2,3
	.word	16066
	.byte	33
	.byte	'Ifx_DSADC_CH_TSTMP_Bits',0,12,147,2,3
	.word	16402
	.byte	33
	.byte	'Ifx_DSADC_CLC_Bits',0,12,157,2,3
	.word	10723
	.byte	33
	.byte	'Ifx_DSADC_EVFLAG_Bits',0,12,172,2,3
	.word	13891
	.byte	33
	.byte	'Ifx_DSADC_EVFLAGCLR_Bits',0,12,187,2,3
	.word	14156
	.byte	33
	.byte	'Ifx_DSADC_GLOBCFG_Bits',0,12,202,2,3
	.word	12096
	.byte	33
	.byte	'Ifx_DSADC_GLOBRC_Bits',0,12,217,2,3
	.word	12356
	.byte	33
	.byte	'Ifx_DSADC_GLOBVCMH0_Bits',0,12,240,2,3
	.word	13159
	.byte	33
	.byte	'Ifx_DSADC_GLOBVCMH2_Bits',0,12,248,2,3
	.word	13588
	.byte	33
	.byte	'Ifx_DSADC_ID_Bits',0,12,128,3,3
	.word	10882
	.byte	33
	.byte	'Ifx_DSADC_IGCFG_Bits',0,12,138,3,3
	.word	13725
	.byte	33
	.byte	'Ifx_DSADC_KRST0_Bits',0,12,146,3,3
	.word	11391
	.byte	33
	.byte	'Ifx_DSADC_KRST1_Bits',0,12,153,3,3
	.word	11285
	.byte	33
	.byte	'Ifx_DSADC_KRSTCLR_Bits',0,12,160,3,3
	.word	11177
	.byte	33
	.byte	'Ifx_DSADC_OCS_Bits',0,12,170,3,3
	.word	11015
	.byte	33
	.byte	'Ifx_DSADC_ACCEN0',0,12,183,3,3
	.word	12047
	.byte	33
	.byte	'Ifx_DSADC_ACCPROT',0,12,191,3,3
	.word	12808
	.byte	33
	.byte	'Ifx_DSADC_CGCFG',0,12,199,3,3
	.word	13119
	.byte	33
	.byte	'Ifx_DSADC_CH_BOUNDSEL',0,12,207,3,3
	.word	16026
	.byte	33
	.byte	'Ifx_DSADC_CH_CGSYNC',0,12,215,3,3
	.word	16665
	.byte	33
	.byte	'Ifx_DSADC_CH_DICFG',0,12,223,3,3
	.word	15024
	.byte	33
	.byte	'Ifx_DSADC_CH_FCFGA',0,12,231,3,3
	.word	15645
	.byte	33
	.byte	'Ifx_DSADC_CH_FCFGC',0,12,239,3,3
	.word	15412
	.byte	33
	.byte	'Ifx_DSADC_CH_FCFGM',0,12,247,3,3
	.word	15200
	.byte	33
	.byte	'Ifx_DSADC_CH_ICCFG',0,12,255,3,3
	.word	17117
	.byte	33
	.byte	'Ifx_DSADC_CH_IWCTR',0,12,135,4,3
	.word	15910
	.byte	33
	.byte	'Ifx_DSADC_CH_MODCFG',0,12,143,4,3
	.word	14753
	.byte	33
	.byte	'Ifx_DSADC_CH_OFFM',0,12,151,4,3
	.word	16250
	.byte	33
	.byte	'Ifx_DSADC_CH_RECTCFG',0,12,159,4,3
	.word	16889
	.byte	33
	.byte	'Ifx_DSADC_CH_RESA',0,12,167,4,3
	.word	16362
	.byte	33
	.byte	'Ifx_DSADC_CH_RESM',0,12,175,4,3
	.word	16138
	.byte	33
	.byte	'Ifx_DSADC_CH_TSTMP',0,12,183,4,3
	.word	16523
	.byte	33
	.byte	'Ifx_DSADC_CLC',0,12,191,4,3
	.word	10842
	.byte	33
	.byte	'Ifx_DSADC_EVFLAG',0,12,199,4,3
	.word	14116
	.byte	33
	.byte	'Ifx_DSADC_EVFLAGCLR',0,12,207,4,3
	.word	14384
	.byte	33
	.byte	'Ifx_DSADC_GLOBCFG',0,12,215,4,3
	.word	12316
	.byte	33
	.byte	'Ifx_DSADC_GLOBRC',0,12,223,4,3
	.word	12581
	.byte	33
	.byte	'Ifx_DSADC_GLOBVCMH0',0,12,231,4,3
	.word	13548
	.byte	33
	.byte	'Ifx_DSADC_GLOBVCMH2',0,12,239,4,3
	.word	13676
	.byte	33
	.byte	'Ifx_DSADC_ID',0,12,247,4,3
	.word	10966
	.byte	33
	.byte	'Ifx_DSADC_IGCFG',0,12,255,4,3
	.word	13851
	.byte	33
	.byte	'Ifx_DSADC_KRST0',0,12,135,5,3
	.word	11476
	.byte	33
	.byte	'Ifx_DSADC_KRST1',0,12,143,5,3
	.word	11351
	.byte	33
	.byte	'Ifx_DSADC_KRSTCLR',0,12,151,5,3
	.word	11245
	.byte	33
	.byte	'Ifx_DSADC_OCS',0,12,159,5,3
	.word	11137
	.byte	14
	.word	17166
	.byte	33
	.byte	'Ifx_DSADC_CH',0,12,198,5,3
	.word	95334
	.byte	14
	.word	17684
	.byte	33
	.byte	'Ifx_DSADC',0,12,243,5,3
	.word	95361
	.byte	21
	.word	19689
	.byte	33
	.byte	'IfxDsadc_Dsn_In',0,13,65,3
	.word	95385
	.byte	21
	.word	19848
	.byte	33
	.byte	'IfxDsadc_Dsp_In',0,13,74,3
	.word	95414
	.byte	21
	.word	19371
	.byte	33
	.byte	'IfxDsadc_Cin_In',0,13,83,3
	.word	95443
	.byte	21
	.word	19530
	.byte	33
	.byte	'IfxDsadc_Din_In',0,13,92,3
	.word	95472
	.byte	21
	.word	20007
	.byte	33
	.byte	'IfxDsadc_Itr_In',0,13,101,3
	.word	95501
	.byte	21
	.word	18691
	.byte	33
	.byte	'IfxDsadc_Cgpwm_Out',0,13,109,3
	.word	95530
	.byte	20,13,112,15,16,13
	.byte	'module',0
	.word	18267
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	18652
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	19252
	.byte	1,2,35,12,0,21
	.word	95562
	.byte	33
	.byte	'IfxDsadc_Sg_In',0,13,117,3
	.word	95613
	.byte	20,13,120,15,20,13
	.byte	'module',0
	.word	18267
	.byte	4,2,35,0,13
	.byte	'channel',0
	.word	464
	.byte	1,2,35,4,13
	.byte	'pin',0
	.word	18652
	.byte	8,2,35,8,13
	.byte	'select',0
	.word	10229
	.byte	1,2,35,16,0,21
	.word	95641
	.byte	33
	.byte	'IfxDsadc_Cout_Out',0,13,126,3
	.word	95709
	.byte	33
	.byte	'IfxDsadc_AuxCombFilterShift',0,11,85,3
	.word	26057
	.byte	33
	.byte	'IfxDsadc_AuxCombFilterType',0,11,96,3
	.word	25911
	.byte	33
	.byte	'IfxDsadc_AuxEvent',0,11,106,3
	.word	26337
	.byte	33
	.byte	'IfxDsadc_AuxGate',0,11,115,3
	.word	26449
	.byte	33
	.byte	'IfxDsadc_AuxServiceRequest',0,11,125,3
	.word	26218
	.byte	33
	.byte	'IfxDsadc_CarrierWaveformMode',0,11,136,1,3
	.word	21967
	.byte	33
	.byte	'IfxDsadc_ChannelId',0,11,145,1,3
	.word	18439
	.byte	33
	.byte	'IfxDsadc_CommonModeVoltage',0,11,155,1,3
	.word	23072
	.byte	33
	.byte	'IfxDsadc_FirDataShift',0,11,167,1,3
	.word	25367
	.byte	33
	.byte	'IfxDsadc_FirInternalShift',0,11,177,1,3
	.word	25505
	.byte	33
	.byte	'IfxDsadc_InputConfig',0,11,188,1,3
	.word	22668
	.byte	33
	.byte	'IfxDsadc_InputDataSource',0,11,201,1,3
	.word	23317
	.byte	33
	.byte	'IfxDsadc_InputGain',0,11,213,1,3
	.word	22824
	.byte	33
	.byte	'IfxDsadc_InputPin',0,11,224,1,3
	.word	22977
	.byte	33
	.byte	'IfxDsadc_IntegrationWindowSize',0,11,233,1,3
	.word	25704
	.byte	33
	.byte	'IfxDsadc_IntegratorTrigger',0,11,245,1,3
	.word	23789
	.byte	33
	.byte	'IfxDsadc_LowPowerSupply',0,11,254,1,3
	.word	22431
	.byte	33
	.byte	'IfxDsadc_MainCombFilterShift',0,11,137,2,3
	.word	24880
	.byte	33
	.byte	'IfxDsadc_MainCombFilterType',0,11,148,2,3
	.word	24729
	.byte	33
	.byte	'IfxDsadc_MainServiceRequest',0,11,159,2,3
	.word	25046
	.byte	33
	.byte	'IfxDsadc_ModulatorClock',0,11,170,2,3
	.word	22299
	.byte	33
	.byte	'IfxDsadc_RectifierSignSource',0,11,205,2,3
	.word	26691
	.byte	33
	.byte	'IfxDsadc_SampleClockSource',0,11,216,2,3
	.word	24118
	.byte	33
	.byte	'IfxDsadc_SampleStrobe',0,11,230,2,3
	.word	24271
	.byte	15,11,235,2,9,1,16
	.byte	'IfxDsadc_SleepMode_enable',0,0,16
	.byte	'IfxDsadc_SleepMode_disable',0,1,0,33
	.byte	'IfxDsadc_SleepMode',0,11,239,2,3
	.word	96543
	.byte	33
	.byte	'IfxDsadc_TimestampTrigger',0,11,250,2,3
	.word	23957
	.byte	33
	.byte	'IfxDsadc_TriggerInput',0,11,137,3,3
	.word	23574
	.byte	33
	.byte	'IfxDsadc_Dsadc_AuxFilterConfig',0,15,204,1,3
	.word	26527
	.byte	33
	.byte	'IfxDsadc_Dsadc_ChannelPins',0,15,221,1,3
	.word	26953
	.byte	33
	.byte	'IfxDsadc_Dsadc_CombFilterConfig',0,15,233,1,3
	.word	25223
	.byte	33
	.byte	'IfxDsadc_Dsadc_DemodulatorConfig',0,15,245,1,3
	.word	24572
	.byte	33
	.byte	'IfxDsadc_Dsadc_FirFilterConfig',0,15,128,2,3
	.word	25585
	.byte	33
	.byte	'IfxDsadc_Dsadc_IntegratorConfig',0,15,138,2,3
	.word	25809
	.byte	33
	.byte	'IfxDsadc_Dsadc_ModulatorConfig',0,15,150,2,3
	.word	23172
	.byte	33
	.byte	'IfxDsadc_Dsadc_RectifierConfig',0,15,160,2,3
	.word	26870
	.byte	33
	.byte	'IfxDsadc_Dsadc',0,15,171,2,3
	.word	21940
	.byte	33
	.byte	'IfxDsadc_Dsadc_CarrierGenConfig',0,15,185,2,3
	.word	22127
	.byte	33
	.byte	'IfxDsadc_Dsadc_Channel',0,15,194,2,3
	.word	22604
	.byte	33
	.byte	'IfxDsadc_Dsadc_ChannelConfig',0,15,210,2,3
	.word	27139
	.byte	33
	.byte	'IfxDsadc_Dsadc_Config',0,15,219,2,3
	.word	22498
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L75:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,39,12,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,36,0,3,8,11,15,62
	.byte	15,0,0,8,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,9,59,0,3,8,0,0,10,19,1,3,8,58,15,59,15
	.byte	57,15,11,15,0,0,11,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,12,23,1,58,15,59,15,57,15,11,15,0,0,13,13
	.byte	0,3,8,73,19,11,15,56,9,0,0,14,53,0,73,19,0,0,15,4,1,58,15,59,15,57,15,11,15,0,0,16,40,0,3,8,28,13,0,0
	.byte	17,11,1,0,0,18,1,1,11,15,73,19,0,0,19,33,0,47,15,0,0,20,19,1,58,15,59,15,57,15,11,15,0,0,21,38,0,73,19
	.byte	0,0,22,46,1,3,8,54,15,39,12,63,12,60,12,0,0,23,5,0,73,19,0,0,24,46,1,3,8,73,19,54,15,39,12,63,12,60,12
	.byte	0,0,25,5,0,3,8,73,19,0,0,26,46,1,49,19,0,0,27,5,0,49,19,0,0,28,46,1,3,8,58,15,59,15,57,15,54,15,39,12
	.byte	63,12,60,12,0,0,29,46,0,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,30,46,1,3,8,58,15,59,15
	.byte	57,15,73,19,54,15,39,12,63,12,60,12,0,0,31,29,1,49,19,0,0,32,11,0,49,19,0,0,33,22,0,3,8,58,15,59,15,57
	.byte	15,73,19,0,0,34,21,0,54,15,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L76:
	.word	.L434-.L433
.L433:
	.half	3
	.word	.L436-.L435
.L435:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Std',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap',0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu_Intrinsics.h',0,1,0,0
	.byte	'IfxSrc.h',0,2,0,0
	.byte	'IfxSrc_regdef.h',0,3,0,0
	.byte	'IfxScuWdt.h',0,4,0,0
	.byte	'IfxScu_regdef.h',0,3,0,0
	.byte	'IfxCpu.h',0,1,0,0
	.byte	'IfxCpu_cfg.h',0,5,0,0
	.byte	'IfxPort.h',0,6,0,0
	.byte	'IfxPort_regdef.h',0,3,0,0
	.byte	'IfxDsadc.h',0,7,0,0
	.byte	'IfxDsadc_regdef.h',0,3,0,0
	.byte	'IfxDsadc_PinMap.h',0,8,0,0
	.byte	'Ifx_Types.h',0,1,0,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.h',0,0,0,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0,0,0,0
	.byte	'IfxSrc_cfg.h',0,5,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'IfxScu_cfg.h',0,5,0,0
	.byte	'IfxCpu_regdef.h',0,3,0,0
	.byte	'IfxStm_regdef.h',0,3,0,0
	.byte	'IfxFlash_regdef.h',0,3,0,0
	.byte	'IfxScuCcu.h',0,4,0,0,0
.L436:
.L434:
	.sdecl	'.debug_info',debug,cluster('IfxDsadc_Dsadc_initCarrierGen')
	.sect	'.debug_info'
.L77:
	.word	656
	.half	3
	.word	.L78
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L80,.L79
	.byte	2
	.word	.L73
	.byte	3
	.byte	'IfxDsadc_Dsadc_initCarrierGen',0,1,168,1,6,1,1,1
	.word	.L50,.L152,.L49
	.byte	4
	.byte	'dsadc',0,1,168,1,52
	.word	.L153,.L154
	.byte	4
	.byte	'config',0,1,168,1,98
	.word	.L155,.L156
	.byte	5
	.word	.L50,.L152
	.byte	6
	.byte	'cgcfg',0,1,170,1,21
	.word	.L157,.L158
	.byte	5
	.word	.L159,.L152
	.byte	6
	.byte	'sourceFreq',0,1,174,1,21
	.word	.L160,.L161
	.byte	6
	.byte	'targetFreq',0,1,175,1,21
	.word	.L160,.L162
	.byte	5
	.word	.L163,.L152
	.byte	6
	.byte	'pinPos',0,1,183,1,31
	.word	.L164,.L165
	.byte	7
	.word	.L166,.L167,.L17
	.byte	8
	.word	.L168,.L169
	.byte	8
	.word	.L170,.L171
	.byte	8
	.word	.L172,.L173
	.byte	9
	.word	.L174,.L167,.L17
	.byte	7
	.word	.L175,.L176,.L177
	.byte	8
	.word	.L178,.L179
	.byte	8
	.word	.L180,.L181
	.byte	8
	.word	.L182,.L183
	.byte	8
	.word	.L184,.L185
	.byte	10
	.word	.L186,.L176,.L177
	.byte	0,0,0,5
	.word	.L17,.L152
	.byte	6
	.byte	'pinNeg',0,1,190,1,31
	.word	.L164,.L187
	.byte	7
	.word	.L166,.L188,.L18
	.byte	8
	.word	.L168,.L169
	.byte	8
	.word	.L170,.L171
	.byte	8
	.word	.L172,.L173
	.byte	9
	.word	.L174,.L188,.L18
	.byte	7
	.word	.L175,.L189,.L190
	.byte	8
	.word	.L178,.L179
	.byte	8
	.word	.L180,.L181
	.byte	8
	.word	.L182,.L183
	.byte	8
	.word	.L184,.L185
	.byte	10
	.word	.L186,.L189,.L190
	.byte	0,0,0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxDsadc_Dsadc_initCarrierGen')
	.sect	'.debug_abbrev'
.L78:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17,1,18
	.byte	1,0,0,10,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxDsadc_Dsadc_initCarrierGen')
	.sect	'.debug_line'
.L79:
	.word	.L438-.L437
.L437:
	.half	3
	.word	.L440-.L439
.L439:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Std',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std',0
	.byte	0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0,0,0,0
	.byte	'IfxDsadc.h',0,1,0,0
	.byte	'IfxPort.h',0,2,0,0,0
.L440:
	.byte	5,6,7,0,5,2
	.word	.L50
	.byte	3,167,1,1,5,13,9
	.half	.L381-.L50
	.byte	3,4,1,5,75,9
	.half	.L159-.L381
	.byte	3,2,1,5,40,9
	.half	.L378-.L159
	.byte	3,1,1,5,32,9
	.half	.L441-.L378
	.byte	1,5,68,9
	.half	.L442-.L441
	.byte	3,1,1,5,62,9
	.half	.L443-.L442
	.byte	1,5,76,9
	.half	.L444-.L443
	.byte	1,5,25,9
	.half	.L382-.L444
	.byte	1,5,34,9
	.half	.L445-.L382
	.byte	3,1,1,5,27,9
	.half	.L446-.L445
	.byte	1,5,55,7,9
	.half	.L447-.L446
	.byte	1,5,59,9
	.half	.L448-.L447
	.byte	1,5,55,9
	.half	.L13-.L448
	.byte	1,5,25,9
	.half	.L14-.L13
	.byte	1,5,34,9
	.half	.L449-.L14
	.byte	3,1,1,5,27,9
	.half	.L450-.L449
	.byte	1,5,58,7,9
	.half	.L451-.L450
	.byte	1,5,62,9
	.half	.L452-.L451
	.byte	1,5,58,9
	.half	.L15-.L452
	.byte	1,5,25,9
	.half	.L16-.L15
	.byte	1,5,33,9
	.half	.L453-.L16
	.byte	3,1,1,5,25,9
	.half	.L454-.L453
	.byte	1,5,10,9
	.half	.L455-.L454
	.byte	3,2,1,5,25,9
	.half	.L456-.L455
	.byte	1,5,46,9
	.half	.L163-.L456
	.byte	3,2,1,5,5,9
	.half	.L383-.L163
	.byte	3,2,1,5,45,7,9
	.half	.L457-.L383
	.byte	3,2,1,5,62,9
	.half	.L458-.L457
	.byte	1,4,2,5,40,9
	.half	.L167-.L458
	.byte	3,209,3,1,5,57,9
	.half	.L459-.L167
	.byte	1,5,82,9
	.half	.L460-.L459
	.byte	1,4,3,5,61,9
	.half	.L176-.L460
	.byte	3,64,1,5,40,9
	.half	.L461-.L176
	.byte	1,4,2,5,39,9
	.half	.L177-.L461
	.byte	3,193,0,1,5,56,9
	.half	.L462-.L177
	.byte	1,5,67,9
	.half	.L463-.L462
	.byte	1,4,1,5,46,9
	.half	.L17-.L463
	.byte	3,177,124,1,5,5,9
	.half	.L384-.L17
	.byte	3,2,1,5,45,7,9
	.half	.L464-.L384
	.byte	3,2,1,5,62,9
	.half	.L465-.L464
	.byte	1,4,2,5,40,9
	.half	.L188-.L465
	.byte	3,202,3,1,5,57,9
	.half	.L466-.L188
	.byte	1,5,82,9
	.half	.L467-.L466
	.byte	1,4,3,5,61,9
	.half	.L189-.L467
	.byte	3,64,1,5,40,9
	.half	.L468-.L189
	.byte	1,4,2,5,39,9
	.half	.L190-.L468
	.byte	3,193,0,1,5,56,9
	.half	.L469-.L190
	.byte	1,5,67,9
	.half	.L470-.L469
	.byte	1,4,1,5,1,9
	.half	.L18-.L470
	.byte	3,183,124,1,7,9
	.half	.L81-.L18
	.byte	0,1,1
.L438:
	.sdecl	'.debug_ranges',debug,cluster('IfxDsadc_Dsadc_initCarrierGen')
	.sect	'.debug_ranges'
.L80:
	.word	-1,.L50,0,.L81-.L50,0,0
	.sdecl	'.debug_info',debug,cluster('IfxDsadc_Dsadc_initModule')
	.sect	'.debug_info'
.L82:
	.word	362
	.half	3
	.word	.L83
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L85,.L84
	.byte	2
	.word	.L73
	.byte	3
	.byte	'IfxDsadc_Dsadc_initModule',0,1,171,3,6,1,1,1
	.word	.L66,.L191,.L65
	.byte	4
	.byte	'dsadc',0,1,171,3,48
	.word	.L153,.L192
	.byte	4
	.byte	'config',0,1,171,3,84
	.word	.L193,.L194
	.byte	5
	.word	.L66,.L191
	.byte	6
	.byte	'dsadcSFR',0,1,173,3,16
	.word	.L195,.L196
	.byte	5
	.word	.L197,.L198
	.byte	6
	.byte	'passwd',0,1,178,3,16
	.word	.L199,.L200
	.byte	5
	.word	.L201,.L198
	.byte	6
	.byte	'globcfg',0,1,188,3,31
	.word	.L202,.L203
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxDsadc_Dsadc_initModule')
	.sect	'.debug_abbrev'
.L83:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxDsadc_Dsadc_initModule')
	.sect	'.debug_line'
.L84:
	.word	.L472-.L471
.L471:
	.half	3
	.word	.L474-.L473
.L473:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0,0,0,0,0
.L474:
	.byte	5,6,7,0,5,2
	.word	.L66
	.byte	3,170,3,1,5,33,9
	.half	.L423-.L66
	.byte	3,2,1,5,18,9
	.half	.L424-.L423
	.byte	3,2,1,5,57,9
	.half	.L197-.L424
	.byte	3,3,1,5,23,9
	.half	.L422-.L197
	.byte	1,5,35,9
	.half	.L426-.L422
	.byte	3,1,1,5,27,9
	.half	.L427-.L426
	.byte	3,1,1,5,25,9
	.half	.L475-.L427
	.byte	1,5,26,9
	.half	.L476-.L475
	.byte	3,2,1,5,9,9
	.half	.L477-.L476
	.byte	1,5,33,7,9
	.half	.L42-.L477
	.byte	3,3,1,5,52,9
	.half	.L201-.L42
	.byte	3,4,1,5,41,9
	.half	.L429-.L201
	.byte	3,2,1,5,33,9
	.half	.L478-.L429
	.byte	1,5,41,9
	.half	.L479-.L478
	.byte	3,1,1,5,33,9
	.half	.L480-.L479
	.byte	1,5,35,9
	.half	.L481-.L480
	.byte	3,1,1,5,33,9
	.half	.L482-.L481
	.byte	1,9
	.half	.L483-.L482
	.byte	3,2,1,5,1,9
	.half	.L198-.L483
	.byte	3,3,1,7,9
	.half	.L86-.L198
	.byte	0,1,1
.L472:
	.sdecl	'.debug_ranges',debug,cluster('IfxDsadc_Dsadc_initModule')
	.sect	'.debug_ranges'
.L85:
	.word	-1,.L66,0,.L86-.L66,0,0
	.sdecl	'.debug_info',debug,cluster('IfxDsadc_Dsadc_initModuleConfig')
	.sect	'.debug_info'
.L87:
	.word	327
	.half	3
	.word	.L88
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L90,.L89
	.byte	2
	.word	.L73
	.byte	3
	.byte	'IfxDsadc_Dsadc_initModuleConfig',0,1,201,3,6,1,1,1
	.word	.L68,.L204,.L67
	.byte	4
	.byte	'config',0,1,201,3,61
	.word	.L205,.L206
	.byte	4
	.byte	'dsadc',0,1,201,3,80
	.word	.L195,.L207
	.byte	5
	.word	.L68,.L204
	.byte	6
	.byte	'IfxDsadc_Dsadc_defaultConfig',0,1,203,3,33
	.word	.L208,.L209
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxDsadc_Dsadc_initModuleConfig')
	.sect	'.debug_abbrev'
.L88:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxDsadc_Dsadc_initModuleConfig')
	.sect	'.debug_line'
.L89:
	.word	.L485-.L484
.L484:
	.half	3
	.word	.L487-.L486
.L486:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0,0,0,0,0
.L487:
	.byte	5,64,7,0,5,2
	.word	.L68
	.byte	3,202,3,1,5,19,9
	.half	.L430-.L68
	.byte	3,5,1,9
	.half	.L488-.L430
	.byte	3,1,1,5,1,9
	.half	.L489-.L488
	.byte	3,1,1,7,9
	.half	.L91-.L489
	.byte	0,1,1
.L485:
	.sdecl	'.debug_ranges',debug,cluster('IfxDsadc_Dsadc_initModuleConfig')
	.sect	'.debug_ranges'
.L90:
	.word	-1,.L68,0,.L91-.L68,0,0
	.sdecl	'.debug_info',debug,cluster('IfxDsadc_Dsadc_initChannel')
	.sect	'.debug_info'
.L92:
	.word	1009
	.half	3
	.word	.L93
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L95,.L94
	.byte	2
	.word	.L73
	.byte	3
	.byte	'IfxDsadc_Dsadc_initChannel',0,1,199,1,6,1,1,1
	.word	.L52,.L210,.L51
	.byte	4
	.byte	'channel',0,1,199,1,57
	.word	.L211,.L212
	.byte	4
	.byte	'config',0,1,199,1,102
	.word	.L213,.L214
	.byte	5
	.word	.L52,.L210
	.byte	6
	.byte	'dsadc',0,1,201,1,16
	.word	.L195,.L215
	.byte	5
	.word	.L216,.L210
	.byte	6
	.byte	'pins',0,1,215,1,39
	.word	.L217,.L218
	.byte	5
	.word	.L219,.L19
	.byte	6
	.byte	'dsn',0,1,219,1,32
	.word	.L220,.L221
	.byte	7
	.word	.L222,.L223,.L20
	.byte	8
	.word	.L224,.L225
	.byte	8
	.word	.L226,.L227
	.byte	8
	.word	.L228,.L229
	.byte	9
	.word	.L230,.L223,.L20
	.byte	7
	.word	.L231,.L232,.L233
	.byte	8
	.word	.L234,.L235
	.byte	8
	.word	.L236,.L237
	.byte	8
	.word	.L238,.L239
	.byte	10
	.word	.L240,.L232,.L233
	.byte	0,0,0,5
	.word	.L20,.L19
	.byte	6
	.byte	'dsp',0,1,226,1,32
	.word	.L241,.L242
	.byte	7
	.word	.L243,.L244,.L22
	.byte	8
	.word	.L245,.L246
	.byte	8
	.word	.L247,.L248
	.byte	8
	.word	.L249,.L250
	.byte	9
	.word	.L251,.L244,.L22
	.byte	7
	.word	.L231,.L252,.L253
	.byte	8
	.word	.L234,.L235
	.byte	8
	.word	.L236,.L237
	.byte	8
	.word	.L238,.L239
	.byte	10
	.word	.L240,.L252,.L253
	.byte	0,0,0,5
	.word	.L22,.L19
	.byte	6
	.byte	'cin',0,1,233,1,32
	.word	.L254,.L255
	.byte	7
	.word	.L256,.L257,.L24
	.byte	8
	.word	.L258,.L259
	.byte	8
	.word	.L260,.L261
	.byte	8
	.word	.L262,.L263
	.byte	9
	.word	.L264,.L257,.L24
	.byte	7
	.word	.L231,.L265,.L266
	.byte	8
	.word	.L234,.L235
	.byte	8
	.word	.L236,.L237
	.byte	8
	.word	.L238,.L239
	.byte	10
	.word	.L240,.L265,.L266
	.byte	0,0,0,5
	.word	.L24,.L19
	.byte	6
	.byte	'din',0,1,240,1,32
	.word	.L267,.L268
	.byte	7
	.word	.L269,.L270,.L26
	.byte	8
	.word	.L271,.L272
	.byte	8
	.word	.L273,.L274
	.byte	8
	.word	.L275,.L276
	.byte	9
	.word	.L277,.L270,.L26
	.byte	7
	.word	.L231,.L278,.L279
	.byte	8
	.word	.L234,.L235
	.byte	8
	.word	.L236,.L237
	.byte	8
	.word	.L238,.L239
	.byte	10
	.word	.L240,.L278,.L279
	.byte	0,0,0,5
	.word	.L26,.L19
	.byte	6
	.byte	'itr',0,1,247,1,32
	.word	.L280,.L281
	.byte	7
	.word	.L282,.L283,.L19
	.byte	8
	.word	.L284,.L285
	.byte	8
	.word	.L286,.L287
	.byte	8
	.word	.L288,.L289
	.byte	9
	.word	.L290,.L283,.L19
	.byte	7
	.word	.L231,.L291,.L292
	.byte	8
	.word	.L234,.L235
	.byte	8
	.word	.L236,.L237
	.byte	8
	.word	.L238,.L239
	.byte	10
	.word	.L240,.L291,.L292
	.byte	0,0,0,0,0,0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxDsadc_Dsadc_initChannel')
	.sect	'.debug_abbrev'
.L93:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17,1,18
	.byte	1,0,0,10,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxDsadc_Dsadc_initChannel')
	.sect	'.debug_line'
.L94:
	.word	.L491-.L490
.L490:
	.half	3
	.word	.L493-.L492
.L492:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Std',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std',0
	.byte	0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0,0,0,0
	.byte	'IfxDsadc.h',0,1,0,0
	.byte	'IfxPort.h',0,2,0,0,0
.L493:
	.byte	5,6,7,0,5,2
	.word	.L52
	.byte	3,198,1,1,5,30,9
	.half	.L389-.L52
	.byte	3,2,1,5,32,9
	.half	.L390-.L389
	.byte	3,2,1,5,24,9
	.half	.L494-.L390
	.byte	1,9
	.half	.L495-.L494
	.byte	3,1,1,5,59,9
	.half	.L496-.L495
	.byte	3,1,1,5,52,9
	.half	.L497-.L496
	.byte	1,5,24,9
	.half	.L498-.L497
	.byte	1,5,50,9
	.half	.L499-.L498
	.byte	3,2,1,5,52,9
	.half	.L385-.L499
	.byte	3,1,1,5,51,9
	.half	.L393-.L385
	.byte	3,1,1,5,50,9
	.half	.L395-.L393
	.byte	3,1,1,5,51,9
	.half	.L397-.L395
	.byte	3,1,1,5,50,9
	.half	.L399-.L397
	.byte	3,1,1,9
	.half	.L401-.L399
	.byte	3,1,1,5,52,9
	.half	.L216-.L401
	.byte	3,2,1,5,5,9
	.half	.L388-.L216
	.byte	3,2,1,5,42,7,9
	.half	.L219-.L388
	.byte	3,2,1,5,9,9
	.half	.L403-.L219
	.byte	3,2,1,5,42,7,9
	.half	.L500-.L403
	.byte	3,2,1,5,57,9
	.half	.L501-.L500
	.byte	1,4,2,5,17,9
	.half	.L223-.L501
	.byte	3,210,3,1,5,5,9
	.half	.L502-.L223
	.byte	1,5,41,7,9
	.half	.L503-.L502
	.byte	3,2,1,5,56,9
	.half	.L504-.L503
	.byte	1,4,3,5,40,9
	.half	.L232-.L504
	.byte	3,147,127,1,4,2,5,41,9
	.half	.L233-.L232
	.byte	3,238,0,1,5,56,9
	.half	.L505-.L233
	.byte	1,5,67,9
	.half	.L506-.L505
	.byte	1,4,1,5,42,9
	.half	.L20-.L506
	.byte	3,174,124,1,5,9,9
	.half	.L404-.L20
	.byte	3,2,1,5,42,7,9
	.half	.L507-.L404
	.byte	3,2,1,5,57,9
	.half	.L508-.L507
	.byte	1,4,2,5,17,9
	.half	.L244-.L508
	.byte	3,213,3,1,5,5,9
	.half	.L509-.L244
	.byte	1,5,41,7,9
	.half	.L510-.L509
	.byte	3,2,1,5,56,9
	.half	.L511-.L510
	.byte	1,4,3,5,40,9
	.half	.L252-.L511
	.byte	3,137,127,1,4,2,5,41,9
	.half	.L253-.L252
	.byte	3,248,0,1,5,56,9
	.half	.L512-.L253
	.byte	1,5,67,9
	.half	.L513-.L512
	.byte	1,4,1,5,42,9
	.half	.L22-.L513
	.byte	3,171,124,1,5,9,9
	.half	.L405-.L22
	.byte	3,2,1,5,42,7,9
	.half	.L514-.L405
	.byte	3,2,1,5,57,9
	.half	.L515-.L514
	.byte	1,4,2,5,17,9
	.half	.L257-.L515
	.byte	3,166,3,1,5,5,9
	.half	.L516-.L257
	.byte	1,5,41,7,9
	.half	.L517-.L516
	.byte	3,2,1,5,56,9
	.half	.L518-.L517
	.byte	1,4,3,5,40,9
	.half	.L265-.L518
	.byte	3,177,127,1,4,2,5,41,9
	.half	.L266-.L265
	.byte	3,208,0,1,5,56,9
	.half	.L519-.L266
	.byte	1,5,67,9
	.half	.L520-.L519
	.byte	1,4,1,5,42,9
	.half	.L24-.L520
	.byte	3,218,124,1,5,9,9
	.half	.L406-.L24
	.byte	3,2,1,5,42,7,9
	.half	.L521-.L406
	.byte	3,2,1,5,57,9
	.half	.L522-.L521
	.byte	1,4,2,5,17,9
	.half	.L270-.L522
	.byte	3,179,3,1,5,5,9
	.half	.L523-.L270
	.byte	1,5,41,7,9
	.half	.L524-.L523
	.byte	3,2,1,5,56,9
	.half	.L525-.L524
	.byte	1,4,3,5,40,9
	.half	.L278-.L525
	.byte	3,157,127,1,4,2,5,41,9
	.half	.L279-.L278
	.byte	3,228,0,1,5,56,9
	.half	.L526-.L279
	.byte	1,5,67,9
	.half	.L527-.L526
	.byte	1,4,1,5,42,9
	.half	.L26-.L527
	.byte	3,205,124,1,5,9,9
	.half	.L407-.L26
	.byte	3,2,1,5,42,7,9
	.half	.L528-.L407
	.byte	3,2,1,5,57,9
	.half	.L529-.L528
	.byte	1,4,2,5,17,9
	.half	.L283-.L529
	.byte	3,202,3,1,5,5,9
	.half	.L530-.L283
	.byte	1,5,41,7,9
	.half	.L531-.L530
	.byte	3,2,1,5,56,9
	.half	.L532-.L531
	.byte	1,4,3,5,40,9
	.half	.L291-.L532
	.byte	3,255,126,1,4,2,5,41,9
	.half	.L292-.L291
	.byte	3,130,1,1,5,56,9
	.half	.L533-.L292
	.byte	1,5,67,9
	.half	.L534-.L533
	.byte	1,4,1,5,1,9
	.half	.L19-.L534
	.byte	3,182,124,1,7,9
	.half	.L96-.L19
	.byte	0,1,1
.L491:
	.sdecl	'.debug_ranges',debug,cluster('IfxDsadc_Dsadc_initChannel')
	.sect	'.debug_ranges'
.L95:
	.word	-1,.L52,0,.L96-.L52,0,0
	.sdecl	'.debug_info',debug,cluster('IfxDsadc_Dsadc_initChannelConfig')
	.sect	'.debug_info'
.L97:
	.word	335
	.half	3
	.word	.L98
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L100,.L99
	.byte	2
	.word	.L73
	.byte	3
	.byte	'IfxDsadc_Dsadc_initChannelConfig',0,1,129,2,6,1,1,1
	.word	.L54,.L293,.L53
	.byte	4
	.byte	'config',0,1,129,2,69
	.word	.L294,.L295
	.byte	4
	.byte	'dsadc',0,1,129,2,93
	.word	.L153,.L296
	.byte	5
	.word	.L54,.L293
	.byte	6
	.byte	'IfxDsadc_Dsadc_defaultChannelConfig',0,1,131,2,40
	.word	.L297,.L298
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxDsadc_Dsadc_initChannelConfig')
	.sect	'.debug_abbrev'
.L98:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxDsadc_Dsadc_initChannelConfig')
	.sect	'.debug_line'
.L99:
	.word	.L536-.L535
.L535:
	.half	3
	.word	.L538-.L537
.L537:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0,0,0,0,0
.L538:
	.byte	5,6,7,0,5,2
	.word	.L54
	.byte	3,128,2,1,5,78,9
	.half	.L408-.L54
	.byte	3,2,1,5,76,9
	.half	.L539-.L408
	.byte	1,5,25,9
	.half	.L540-.L539
	.byte	3,57,1,5,23,9
	.half	.L541-.L540
	.byte	1,5,25,9
	.half	.L542-.L541
	.byte	3,1,1,5,23,9
	.half	.L543-.L542
	.byte	1,5,5,9
	.half	.L544-.L543
	.byte	3,2,1,5,31,7,9
	.half	.L545-.L544
	.byte	3,2,1,5,24,9
	.half	.L546-.L545
	.byte	1,5,38,9
	.half	.L547-.L546
	.byte	1,5,26,9
	.half	.L32-.L547
	.byte	3,4,1,5,24,9
	.half	.L548-.L32
	.byte	1,5,1,9
	.half	.L33-.L548
	.byte	3,2,1,7,9
	.half	.L101-.L33
	.byte	0,1,1
.L536:
	.sdecl	'.debug_ranges',debug,cluster('IfxDsadc_Dsadc_initChannelConfig')
	.sect	'.debug_ranges'
.L100:
	.word	-1,.L54,0,.L101-.L54,0,0
	.sdecl	'.debug_info',debug,cluster('IfxDsadc_Dsadc_getAuxResult')
	.sect	'.debug_info'
.L102:
	.word	312
	.half	3
	.word	.L103
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L105,.L104
	.byte	2
	.word	.L73
	.byte	3
	.byte	'IfxDsadc_Dsadc_getAuxResult',0,1,143,1,8
	.word	.L299
	.byte	1,1,1
	.word	.L46,.L300,.L45
	.byte	4
	.byte	'channel',0,1,143,1,60
	.word	.L211,.L301
	.byte	5
	.word	.L46,.L300
	.byte	6
	.word	.L302,.L303,.L11
	.byte	7
	.word	.L304,.L305
	.byte	7
	.word	.L306,.L307
	.byte	8
	.word	.L308,.L303,.L11
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxDsadc_Dsadc_getAuxResult')
	.sect	'.debug_abbrev'
.L103:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	29,1,49,16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxDsadc_Dsadc_getAuxResult')
	.sect	'.debug_line'
.L104:
	.word	.L550-.L549
.L549:
	.half	3
	.word	.L552-.L551
.L551:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Std',0
	.byte	0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0,0,0,0
	.byte	'IfxDsadc.h',0,1,0,0,0
.L552:
	.byte	5,41,7,0,5,2
	.word	.L46
	.byte	3,144,1,1,5,58,9
	.half	.L553-.L46
	.byte	1,4,2,5,30,9
	.half	.L303-.L553
	.byte	3,233,3,1,5,46,9
	.half	.L554-.L303
	.byte	1,5,12,9
	.half	.L555-.L554
	.byte	1,5,5,9
	.half	.L556-.L555
	.byte	1,4,1,9
	.half	.L11-.L556
	.byte	3,151,124,1,5,1,9
	.half	.L12-.L11
	.byte	3,1,1,7,9
	.half	.L106-.L12
	.byte	0,1,1
.L550:
	.sdecl	'.debug_ranges',debug,cluster('IfxDsadc_Dsadc_getAuxResult')
	.sect	'.debug_ranges'
.L105:
	.word	-1,.L46,0,.L106-.L46,0,0
	.sdecl	'.debug_info',debug,cluster('IfxDsadc_Dsadc_initCarrierGenConfig')
	.sect	'.debug_info'
.L107:
	.word	269
	.half	3
	.word	.L108
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L110,.L109
	.byte	2
	.word	.L73
	.byte	3
	.byte	'IfxDsadc_Dsadc_initCarrierGenConfig',0,1,227,3,6,1,1,1
	.word	.L72,.L309,.L71
	.byte	4
	.byte	'config',0,1,227,3,75
	.word	.L310,.L311
	.byte	5
	.word	.L72,.L309
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxDsadc_Dsadc_initCarrierGenConfig')
	.sect	'.debug_abbrev'
.L108:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxDsadc_Dsadc_initCarrierGenConfig')
	.sect	'.debug_line'
.L109:
	.word	.L558-.L557
.L557:
	.half	3
	.word	.L560-.L559
.L559:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0,0,0,0,0
.L560:
	.byte	5,35,7,0,5,2
	.word	.L72
	.byte	3,228,3,1,5,33,9
	.half	.L561-.L72
	.byte	1,5,35,9
	.half	.L562-.L561
	.byte	3,1,1,5,33,9
	.half	.L563-.L562
	.byte	1,5,35,9
	.half	.L564-.L563
	.byte	3,1,1,5,33,9
	.half	.L565-.L564
	.byte	1,5,35,9
	.half	.L566-.L565
	.byte	3,1,1,5,33,9
	.half	.L567-.L566
	.byte	1,5,35,9
	.half	.L568-.L567
	.byte	3,1,1,5,33,9
	.half	.L569-.L568
	.byte	1,5,35,9
	.half	.L570-.L569
	.byte	3,1,1,5,33,9
	.half	.L571-.L570
	.byte	1,5,35,9
	.half	.L572-.L571
	.byte	3,1,1,5,33,9
	.half	.L573-.L572
	.byte	1,5,35,9
	.half	.L574-.L573
	.byte	3,1,1,5,33,9
	.half	.L575-.L574
	.byte	1,5,1,9
	.half	.L576-.L575
	.byte	3,1,1,7,9
	.half	.L111-.L576
	.byte	0,1,1
.L558:
	.sdecl	'.debug_ranges',debug,cluster('IfxDsadc_Dsadc_initCarrierGenConfig')
	.sect	'.debug_ranges'
.L110:
	.word	-1,.L72,0,.L111-.L72,0,0
	.sdecl	'.debug_info',debug,cluster('IfxDsadc_Dsadc_calcDIVx')
	.sect	'.debug_info'
.L112:
	.word	387
	.half	3
	.word	.L113
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L115,.L114
	.byte	2
	.word	.L73
	.byte	3
	.byte	'IfxDsadc_Dsadc_calcDIVx',0,1,115,19
	.word	.L312
	.byte	1,1
	.word	.L44,.L313,.L43
	.byte	4
	.byte	'sourceFreq',0,1,115,51
	.word	.L160,.L314
	.byte	4
	.byte	'targetFreq',0,1,115,72
	.word	.L315,.L316
	.byte	5
	.word	.L44,.L313
	.byte	6
	.byte	'bestError',0,1,117,13
	.word	.L160,.L317
	.byte	6
	.byte	'bestDiv',0,1,118,13
	.word	.L312,.L318
	.byte	6
	.byte	'i',0,1,118,28
	.word	.L312,.L319
	.byte	5
	.word	.L3,.L6
	.byte	6
	.byte	'freq',0,1,122,17
	.word	.L160,.L320
	.byte	6
	.byte	'error',0,1,123,17
	.word	.L160,.L321
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxDsadc_Dsadc_calcDIVx')
	.sect	'.debug_abbrev'
.L113:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxDsadc_Dsadc_calcDIVx')
	.sect	'.debug_line'
.L114:
	.word	.L578-.L577
.L577:
	.half	3
	.word	.L580-.L579
.L579:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0,0,0,0,0
.L580:
	.byte	5,25,7,0,5,2
	.word	.L44
	.byte	3,244,0,1,5,23,9
	.half	.L581-.L44
	.byte	3,1,1,5,12,9
	.half	.L368-.L581
	.byte	3,2,1,5,24,9
	.half	.L369-.L368
	.byte	1,5,38,9
	.half	.L3-.L369
	.byte	3,2,1,5,36,9
	.half	.L582-.L3
	.byte	1,5,25,9
	.half	.L370-.L582
	.byte	3,1,1,5,13,9
	.half	.L5-.L370
	.byte	3,2,1,5,23,9
	.half	.L583-.L5
	.byte	3,2,1,5,18,9
	.half	.L584-.L583
	.byte	3,3,1,5,17,9
	.half	.L585-.L584
	.byte	3,2,1,5,28,9
	.half	.L6-.L585
	.byte	3,116,1,5,22,9
	.half	.L2-.L6
	.byte	1,5,24,9
	.half	.L586-.L2
	.byte	1,5,32,7,9
	.half	.L9-.L586
	.byte	3,17,1,5,30,9
	.half	.L373-.L9
	.byte	1,5,17,9
	.half	.L587-.L373
	.byte	1,5,21,9
	.half	.L374-.L587
	.byte	3,2,1,5,26,9
	.half	.L588-.L374
	.byte	1,5,5,9
	.half	.L589-.L588
	.byte	1,5,1,9
	.half	.L10-.L589
	.byte	3,1,1,7,9
	.half	.L116-.L10
	.byte	0,1,1
.L578:
	.sdecl	'.debug_ranges',debug,cluster('IfxDsadc_Dsadc_calcDIVx')
	.sect	'.debug_ranges'
.L115:
	.word	-1,.L44,0,.L116-.L44,0,0
	.sdecl	'.debug_info',debug,cluster('IfxDsadc_Dsadc_initAuxFilter')
	.sect	'.debug_info'
.L117:
	.word	302
	.half	3
	.word	.L118
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L120,.L119
	.byte	2
	.word	.L73
	.byte	3
	.byte	'IfxDsadc_Dsadc_initAuxFilter',0,1,149,1,17,1,1
	.word	.L48,.L322,.L47
	.byte	4
	.byte	'channel',0,1,149,1,70
	.word	.L211,.L323
	.byte	4
	.byte	'config',0,1,149,1,117
	.word	.L324,.L325
	.byte	5
	.word	.L48,.L322
	.byte	6
	.byte	'fcfga',0,1,151,1,24
	.word	.L326,.L327
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxDsadc_Dsadc_initAuxFilter')
	.sect	'.debug_abbrev'
.L118:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxDsadc_Dsadc_initAuxFilter')
	.sect	'.debug_line'
.L119:
	.word	.L591-.L590
.L590:
	.half	3
	.word	.L593-.L592
.L592:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0,0,0,0,0
.L593:
	.byte	5,31,7,0,5,2
	.word	.L48
	.byte	3,152,1,1,5,39,9
	.half	.L376-.L48
	.byte	3,2,1,5,58,9
	.half	.L594-.L376
	.byte	1,5,31,9
	.half	.L595-.L594
	.byte	1,5,39,9
	.half	.L596-.L595
	.byte	3,1,1,5,31,9
	.half	.L597-.L596
	.byte	1,5,39,9
	.half	.L598-.L597
	.byte	3,2,1,5,31,9
	.half	.L599-.L598
	.byte	1,5,39,9
	.half	.L600-.L599
	.byte	3,1,1,5,31,9
	.half	.L601-.L600
	.byte	1,5,39,9
	.half	.L602-.L601
	.byte	3,1,1,5,31,9
	.half	.L603-.L602
	.byte	1,5,39,9
	.half	.L604-.L603
	.byte	3,2,1,5,31,9
	.half	.L605-.L604
	.byte	1,5,13,9
	.half	.L606-.L605
	.byte	3,2,1,5,31,9
	.half	.L607-.L606
	.byte	1,5,1,9
	.half	.L608-.L607
	.byte	3,1,1,7,9
	.half	.L121-.L608
	.byte	0,1,1
.L591:
	.sdecl	'.debug_ranges',debug,cluster('IfxDsadc_Dsadc_initAuxFilter')
	.sect	'.debug_ranges'
.L120:
	.word	-1,.L48,0,.L121-.L48,0,0
	.sdecl	'.debug_info',debug,cluster('IfxDsadc_Dsadc_initCombFilter')
	.sect	'.debug_info'
.L122:
	.word	303
	.half	3
	.word	.L123
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L125,.L124
	.byte	2
	.word	.L73
	.byte	3
	.byte	'IfxDsadc_Dsadc_initCombFilter',0,1,202,2,17,1,1
	.word	.L56,.L328,.L55
	.byte	4
	.byte	'channel',0,1,202,2,71
	.word	.L211,.L329
	.byte	4
	.byte	'config',0,1,202,2,119
	.word	.L330,.L331
	.byte	5
	.word	.L56,.L328
	.byte	6
	.byte	'fcfgc',0,1,204,2,24
	.word	.L332,.L333
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxDsadc_Dsadc_initCombFilter')
	.sect	'.debug_abbrev'
.L123:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxDsadc_Dsadc_initCombFilter')
	.sect	'.debug_line'
.L124:
	.word	.L610-.L609
.L609:
	.half	3
	.word	.L612-.L611
.L611:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0,0,0,0,0
.L612:
	.byte	5,31,7,0,5,2
	.word	.L56
	.byte	3,205,2,1,5,39,9
	.half	.L409-.L56
	.byte	3,2,1,5,58,9
	.half	.L613-.L409
	.byte	1,5,31,9
	.half	.L614-.L613
	.byte	1,5,39,9
	.half	.L615-.L614
	.byte	3,1,1,5,31,9
	.half	.L616-.L615
	.byte	1,5,40,9
	.half	.L617-.L616
	.byte	3,1,1,5,33,9
	.half	.L618-.L617
	.byte	1,5,61,7,9
	.half	.L619-.L618
	.byte	1,5,65,9
	.half	.L620-.L619
	.byte	1,5,61,9
	.half	.L34-.L620
	.byte	1,5,31,9
	.half	.L35-.L34
	.byte	1,5,39,9
	.half	.L621-.L35
	.byte	3,2,1,5,31,9
	.half	.L622-.L621
	.byte	1,5,39,9
	.half	.L623-.L622
	.byte	3,2,1,5,31,9
	.half	.L624-.L623
	.byte	1,5,39,9
	.half	.L625-.L624
	.byte	3,1,1,5,52,9
	.half	.L626-.L625
	.byte	1,5,31,9
	.half	.L627-.L626
	.byte	1,5,13,9
	.half	.L628-.L627
	.byte	3,2,1,5,31,9
	.half	.L629-.L628
	.byte	1,5,1,9
	.half	.L630-.L629
	.byte	3,1,1,7,9
	.half	.L126-.L630
	.byte	0,1,1
.L610:
	.sdecl	'.debug_ranges',debug,cluster('IfxDsadc_Dsadc_initCombFilter')
	.sect	'.debug_ranges'
.L125:
	.word	-1,.L56,0,.L126-.L56,0,0
	.sdecl	'.debug_info',debug,cluster('IfxDsadc_Dsadc_initDemodulator')
	.sect	'.debug_info'
.L127:
	.word	304
	.half	3
	.word	.L128
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L130,.L129
	.byte	2
	.word	.L73
	.byte	3
	.byte	'IfxDsadc_Dsadc_initDemodulator',0,1,221,2,17,1,1
	.word	.L58,.L334,.L57
	.byte	4
	.byte	'channel',0,1,221,2,72
	.word	.L211,.L335
	.byte	4
	.byte	'config',0,1,221,2,121
	.word	.L336,.L337
	.byte	5
	.word	.L58,.L334
	.byte	6
	.byte	'dicfg',0,1,223,2,24
	.word	.L338,.L339
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxDsadc_Dsadc_initDemodulator')
	.sect	'.debug_abbrev'
.L128:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxDsadc_Dsadc_initDemodulator')
	.sect	'.debug_line'
.L129:
	.word	.L632-.L631
.L631:
	.half	3
	.word	.L634-.L633
.L633:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0,0,0,0,0
.L634:
	.byte	5,31,7,0,5,2
	.word	.L58
	.byte	3,224,2,1,5,39,9
	.half	.L410-.L58
	.byte	3,2,1,5,31,9
	.half	.L635-.L410
	.byte	1,5,33,9
	.half	.L636-.L635
	.byte	3,1,1,5,31,9
	.half	.L637-.L636
	.byte	1,5,39,9
	.half	.L638-.L637
	.byte	3,2,1,5,31,9
	.half	.L639-.L638
	.byte	1,5,39,9
	.half	.L640-.L639
	.byte	3,1,1,5,31,9
	.half	.L641-.L640
	.byte	1,5,39,9
	.half	.L642-.L641
	.byte	3,1,1,5,31,9
	.half	.L643-.L642
	.byte	1,5,33,9
	.half	.L644-.L643
	.byte	3,1,1,5,31,9
	.half	.L645-.L644
	.byte	1,5,39,9
	.half	.L646-.L645
	.byte	3,2,1,5,31,9
	.half	.L647-.L646
	.byte	1,5,39,9
	.half	.L648-.L647
	.byte	3,1,1,5,31,9
	.half	.L649-.L648
	.byte	1,5,33,9
	.half	.L650-.L649
	.byte	3,1,1,5,31,9
	.half	.L651-.L650
	.byte	1,5,13,9
	.half	.L652-.L651
	.byte	3,2,1,5,31,9
	.half	.L653-.L652
	.byte	1,5,1,9
	.half	.L654-.L653
	.byte	3,1,1,7,9
	.half	.L131-.L654
	.byte	0,1,1
.L632:
	.sdecl	'.debug_ranges',debug,cluster('IfxDsadc_Dsadc_initDemodulator')
	.sect	'.debug_ranges'
.L130:
	.word	-1,.L58,0,.L131-.L58,0,0
	.sdecl	'.debug_info',debug,cluster('IfxDsadc_Dsadc_initFirFilter')
	.sect	'.debug_info'
.L132:
	.word	302
	.half	3
	.word	.L133
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L135,.L134
	.byte	2
	.word	.L73
	.byte	3
	.byte	'IfxDsadc_Dsadc_initFirFilter',0,1,243,2,17,1,1
	.word	.L60,.L340,.L59
	.byte	4
	.byte	'channel',0,1,243,2,70
	.word	.L211,.L341
	.byte	4
	.byte	'config',0,1,243,2,117
	.word	.L342,.L343
	.byte	5
	.word	.L60,.L340
	.byte	6
	.byte	'fcfgm',0,1,245,2,24
	.word	.L344,.L345
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxDsadc_Dsadc_initFirFilter')
	.sect	'.debug_abbrev'
.L133:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxDsadc_Dsadc_initFirFilter')
	.sect	'.debug_line'
.L134:
	.word	.L656-.L655
.L655:
	.half	3
	.word	.L658-.L657
.L657:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0,0,0,0,0
.L658:
	.byte	5,31,7,0,5,2
	.word	.L60
	.byte	3,246,2,1,5,40,9
	.half	.L411-.L60
	.byte	3,2,1,5,33,9
	.half	.L659-.L411
	.byte	1,5,64,7,9
	.half	.L660-.L659
	.byte	1,5,68,9
	.half	.L661-.L660
	.byte	1,5,64,9
	.half	.L36-.L661
	.byte	1,5,31,9
	.half	.L37-.L36
	.byte	1,5,40,9
	.half	.L662-.L37
	.byte	3,1,1,5,33,9
	.half	.L663-.L662
	.byte	1,5,64,7,9
	.half	.L664-.L663
	.byte	1,5,68,9
	.half	.L665-.L664
	.byte	1,5,64,9
	.half	.L38-.L665
	.byte	1,5,31,9
	.half	.L39-.L38
	.byte	1,5,40,9
	.half	.L666-.L39
	.byte	3,1,1,5,33,9
	.half	.L667-.L666
	.byte	1,5,71,7,9
	.half	.L668-.L667
	.byte	1,5,75,9
	.half	.L669-.L668
	.byte	1,5,71,9
	.half	.L40-.L669
	.byte	1,5,31,9
	.half	.L41-.L40
	.byte	1,5,39,9
	.half	.L670-.L41
	.byte	3,1,1,5,31,9
	.half	.L671-.L670
	.byte	1,5,39,9
	.half	.L672-.L671
	.byte	3,1,1,5,31,9
	.half	.L673-.L672
	.byte	1,5,13,9
	.half	.L674-.L673
	.byte	3,2,1,5,31,9
	.half	.L675-.L674
	.byte	1,5,1,9
	.half	.L676-.L675
	.byte	3,1,1,7,9
	.half	.L136-.L676
	.byte	0,1,1
.L656:
	.sdecl	'.debug_ranges',debug,cluster('IfxDsadc_Dsadc_initFirFilter')
	.sect	'.debug_ranges'
.L135:
	.word	-1,.L60,0,.L136-.L60,0,0
	.sdecl	'.debug_info',debug,cluster('IfxDsadc_Dsadc_initIntegrator')
	.sect	'.debug_info'
.L137:
	.word	303
	.half	3
	.word	.L138
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L140,.L139
	.byte	2
	.word	.L73
	.byte	3
	.byte	'IfxDsadc_Dsadc_initIntegrator',0,1,131,3,17,1,1
	.word	.L62,.L346,.L61
	.byte	4
	.byte	'channel',0,1,131,3,71
	.word	.L211,.L347
	.byte	4
	.byte	'config',0,1,131,3,119
	.word	.L348,.L349
	.byte	5
	.word	.L62,.L346
	.byte	6
	.byte	'iwctr',0,1,133,3,24
	.word	.L350,.L351
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxDsadc_Dsadc_initIntegrator')
	.sect	'.debug_abbrev'
.L138:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxDsadc_Dsadc_initIntegrator')
	.sect	'.debug_line'
.L139:
	.word	.L678-.L677
.L677:
	.half	3
	.word	.L680-.L679
.L679:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0,0,0,0,0
.L680:
	.byte	5,31,7,0,5,2
	.word	.L62
	.byte	3,134,3,1,5,39,9
	.half	.L412-.L62
	.byte	3,2,1,5,59,9
	.half	.L681-.L412
	.byte	1,5,31,9
	.half	.L682-.L681
	.byte	1,5,39,9
	.half	.L683-.L682
	.byte	3,1,1,5,31,9
	.half	.L684-.L683
	.byte	1,5,39,9
	.half	.L685-.L684
	.byte	3,1,1,5,31,9
	.half	.L686-.L685
	.byte	1,5,39,9
	.half	.L687-.L686
	.byte	3,1,1,5,58,9
	.half	.L688-.L687
	.byte	1,5,31,9
	.half	.L689-.L688
	.byte	1,5,13,9
	.half	.L690-.L689
	.byte	3,2,1,5,31,9
	.half	.L691-.L690
	.byte	1,5,1,9
	.half	.L692-.L691
	.byte	3,1,1,7,9
	.half	.L141-.L692
	.byte	0,1,1
.L678:
	.sdecl	'.debug_ranges',debug,cluster('IfxDsadc_Dsadc_initIntegrator')
	.sect	'.debug_ranges'
.L140:
	.word	-1,.L62,0,.L141-.L62,0,0
	.sdecl	'.debug_info',debug,cluster('IfxDsadc_Dsadc_initModulator')
	.sect	'.debug_info'
.L142:
	.word	361
	.half	3
	.word	.L143
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L145,.L144
	.byte	2
	.word	.L73
	.byte	3
	.byte	'IfxDsadc_Dsadc_initModulator',0,1,146,3,17,1,1
	.word	.L64,.L352,.L63
	.byte	4
	.byte	'channel',0,1,146,3,70
	.word	.L211,.L353
	.byte	4
	.byte	'config',0,1,146,3,117
	.word	.L354,.L355
	.byte	5
	.word	.L64,.L352
	.byte	6
	.byte	'modcfg',0,1,148,3,25
	.word	.L356,.L357
	.byte	5
	.word	.L358,.L352
	.byte	6
	.byte	'targetFreq',0,1,158,3,13
	.word	.L160,.L359
	.byte	6
	.byte	'sourceFreq',0,1,159,3,13
	.word	.L160,.L360
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxDsadc_Dsadc_initModulator')
	.sect	'.debug_abbrev'
.L143:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxDsadc_Dsadc_initModulator')
	.sect	'.debug_line'
.L144:
	.word	.L694-.L693
.L693:
	.half	3
	.word	.L696-.L695
.L695:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0,0,0,0,0
.L696:
	.byte	5,17,7,0,5,2
	.word	.L64
	.byte	3,145,3,1,5,22,9
	.half	.L417-.L64
	.byte	3,4,1,5,30,9
	.half	.L419-.L417
	.byte	3,2,1,5,22,9
	.half	.L697-.L419
	.byte	1,5,30,9
	.half	.L698-.L697
	.byte	3,1,1,5,22,9
	.half	.L699-.L698
	.byte	1,5,30,9
	.half	.L700-.L699
	.byte	3,1,1,5,22,9
	.half	.L701-.L700
	.byte	1,5,30,9
	.half	.L702-.L701
	.byte	3,1,1,5,22,9
	.half	.L703-.L702
	.byte	1,5,24,9
	.half	.L704-.L703
	.byte	3,1,1,5,22,9
	.half	.L705-.L704
	.byte	1,5,32,9
	.half	.L358-.L705
	.byte	3,2,1,5,24,9
	.half	.L706-.L358
	.byte	1,5,69,9
	.half	.L707-.L706
	.byte	3,1,1,5,71,9
	.half	.L415-.L707
	.byte	3,1,1,5,32,9
	.half	.L420-.L415
	.byte	1,5,34,9
	.half	.L708-.L420
	.byte	3,1,1,5,32,9
	.half	.L709-.L708
	.byte	1,5,40,9
	.half	.L710-.L709
	.byte	3,2,1,5,32,9
	.half	.L711-.L710
	.byte	1,5,34,9
	.half	.L712-.L711
	.byte	3,1,1,5,32,9
	.half	.L713-.L712
	.byte	1,5,34,9
	.half	.L714-.L713
	.byte	3,1,1,5,32,9
	.half	.L715-.L714
	.byte	1,5,13,9
	.half	.L716-.L715
	.byte	3,2,1,5,32,9
	.half	.L418-.L716
	.byte	1,5,1,9
	.half	.L717-.L418
	.byte	3,1,1,7,9
	.half	.L146-.L717
	.byte	0,1,1
.L694:
	.sdecl	'.debug_ranges',debug,cluster('IfxDsadc_Dsadc_initModulator')
	.sect	'.debug_ranges'
.L145:
	.word	-1,.L64,0,.L146-.L64,0,0
	.sdecl	'.debug_info',debug,cluster('IfxDsadc_Dsadc_initRectifier')
	.sect	'.debug_info'
.L147:
	.word	301
	.half	3
	.word	.L148
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L150,.L149
	.byte	2
	.word	.L73
	.byte	3
	.byte	'IfxDsadc_Dsadc_initRectifier',0,1,213,3,17,1,1
	.word	.L70,.L361,.L69
	.byte	4
	.byte	'channel',0,1,213,3,70
	.word	.L211,.L362
	.byte	4
	.byte	'config',0,1,213,3,117
	.word	.L363,.L364
	.byte	5
	.word	.L70,.L361
	.byte	6
	.byte	'rect',0,1,215,3,26
	.word	.L365,.L366
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxDsadc_Dsadc_initRectifier')
	.sect	'.debug_abbrev'
.L148:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxDsadc_Dsadc_initRectifier')
	.sect	'.debug_line'
.L149:
	.word	.L719-.L718
.L718:
	.half	3
	.word	.L721-.L720
.L720:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0,0,0,0,0
.L721:
	.byte	5,41,7,0,5,2
	.word	.L70
	.byte	3,216,3,1,5,49,9
	.half	.L431-.L70
	.byte	3,1,1,5,41,9
	.half	.L722-.L431
	.byte	1,5,49,9
	.half	.L723-.L722
	.byte	3,1,1,5,41,9
	.half	.L724-.L723
	.byte	1,5,13,9
	.half	.L725-.L724
	.byte	3,1,1,5,41,9
	.half	.L726-.L725
	.byte	1,5,13,9
	.half	.L727-.L726
	.byte	3,1,1,5,33,9
	.half	.L728-.L727
	.byte	1,5,49,9
	.half	.L432-.L728
	.byte	1,5,41,9
	.half	.L729-.L432
	.byte	1,5,13,9
	.half	.L730-.L729
	.byte	3,1,1,5,33,9
	.half	.L731-.L730
	.byte	1,5,49,9
	.half	.L732-.L731
	.byte	1,5,70,9
	.half	.L733-.L732
	.byte	1,5,83,9
	.half	.L734-.L733
	.byte	1,5,61,9
	.half	.L735-.L734
	.byte	1,5,41,9
	.half	.L736-.L735
	.byte	1,5,13,9
	.half	.L737-.L736
	.byte	3,1,1,5,32,9
	.half	.L738-.L737
	.byte	1,5,49,9
	.half	.L739-.L738
	.byte	1,5,61,9
	.half	.L740-.L739
	.byte	1,5,41,9
	.half	.L741-.L740
	.byte	1,5,1,9
	.half	.L742-.L741
	.byte	3,1,1,7,9
	.half	.L151-.L742
	.byte	0,1,1
.L719:
	.sdecl	'.debug_ranges',debug,cluster('IfxDsadc_Dsadc_initRectifier')
	.sect	'.debug_ranges'
.L150:
	.word	-1,.L70,0,.L151-.L70,0,0
	.sdecl	'.debug_loc',debug,cluster('IfxDsadc_Dsadc_calcDIVx')
	.sect	'.debug_loc'
.L43:
	.word	-1,.L44,0,.L313-.L44
	.half	2
	.byte	138,0
	.word	0,0
.L318:
	.word	-1,.L44,.L368-.L44,.L3-.L44
	.half	1
	.byte	82
	.word	.L9-.L44,.L373-.L44
	.half	1
	.byte	82
	.word	.L374-.L44,.L375-.L44
	.half	1
	.byte	82
	.word	0,0
.L317:
	.word	-1,.L44,.L367-.L44,.L3-.L44
	.half	1
	.byte	83
	.word	.L5-.L44,.L372-.L44
	.half	1
	.byte	83
	.word	0,0
.L321:
	.word	0,0
.L320:
	.word	-1,.L44,.L370-.L44,.L371-.L44
	.half	5
	.byte	144,32,157,32,0
	.word	.L4-.L44,.L5-.L44
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L319:
	.word	-1,.L44,.L369-.L44,.L313-.L44
	.half	1
	.byte	85
	.word	0,0
.L314:
	.word	-1,.L44,0,.L313-.L44
	.half	1
	.byte	84
	.word	0,0
.L316:
	.word	-1,.L44,0,.L313-.L44
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxDsadc_Dsadc_getAuxResult')
	.sect	'.debug_loc'
.L45:
	.word	-1,.L46,0,.L300-.L46
	.half	2
	.byte	138,0
	.word	0,0
.L301:
	.word	-1,.L46,0,.L300-.L46
	.half	1
	.byte	100
	.word	0,0
.L307:
	.word	0,0
.L305:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxDsadc_Dsadc_initAuxFilter')
	.sect	'.debug_loc'
.L47:
	.word	-1,.L48,0,.L322-.L48
	.half	2
	.byte	138,0
	.word	0,0
.L323:
	.word	-1,.L48,0,.L322-.L48
	.half	1
	.byte	100
	.word	0,0
.L325:
	.word	-1,.L48,0,.L322-.L48
	.half	1
	.byte	101
	.word	0,0
.L327:
	.word	-1,.L48,.L376-.L48,.L322-.L48
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxDsadc_Dsadc_initCarrierGen')
	.sect	'.debug_loc'
.L49:
	.word	-1,.L50,0,.L377-.L50
	.half	2
	.byte	138,0
	.word	.L377-.L50,.L152-.L50
	.half	2
	.byte	138,8
	.word	.L152-.L50,.L152-.L50
	.half	2
	.byte	138,0
	.word	0,0
.L169:
	.word	0,0
.L158:
	.word	-1,.L50,.L159-.L50,.L167-.L50
	.half	1
	.byte	88
	.word	0,0
.L156:
	.word	-1,.L50,0,.L378-.L50
	.half	1
	.byte	101
	.word	.L381-.L50,.L152-.L50
	.half	1
	.byte	109
	.word	0,0
.L154:
	.word	-1,.L50,0,.L379-.L50
	.half	1
	.byte	100
	.word	.L380-.L50,.L152-.L50
	.half	1
	.byte	108
	.word	0,0
.L185:
	.word	0,0
.L183:
	.word	0,0
.L173:
	.word	0,0
.L181:
	.word	0,0
.L171:
	.word	0,0
.L187:
	.word	-1,.L50,.L384-.L50,.L152-.L50
	.half	1
	.byte	111
	.word	0,0
.L165:
	.word	-1,.L50,.L383-.L50,.L384-.L50
	.half	1
	.byte	111
	.word	0,0
.L179:
	.word	0,0
.L161:
	.word	-1,.L50,.L378-.L50,.L382-.L50
	.half	1
	.byte	82
	.word	0,0
.L162:
	.word	-1,.L50,0,.L152-.L50
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxDsadc_Dsadc_initCarrierGenConfig')
	.sect	'.debug_loc'
.L71:
	.word	-1,.L72,0,.L309-.L72
	.half	2
	.byte	138,0
	.word	0,0
.L311:
	.word	-1,.L72,0,.L309-.L72
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxDsadc_Dsadc_initChannel')
	.sect	'.debug_loc'
.L51:
	.word	-1,.L52,0,.L210-.L52
	.half	2
	.byte	138,0
	.word	0,0
.L259:
	.word	0,0
.L261:
	.word	0,0
.L212:
	.word	-1,.L52,0,.L385-.L52
	.half	1
	.byte	100
	.word	.L387-.L52,.L388-.L52
	.half	1
	.byte	108
	.word	.L392-.L52,.L393-.L52
	.half	1
	.byte	100
	.word	.L394-.L52,.L395-.L52
	.half	1
	.byte	100
	.word	.L396-.L52,.L397-.L52
	.half	1
	.byte	100
	.word	.L398-.L52,.L399-.L52
	.half	1
	.byte	100
	.word	.L400-.L52,.L401-.L52
	.half	1
	.byte	100
	.word	.L402-.L52,.L216-.L52
	.half	1
	.byte	100
	.word	0,0
.L255:
	.word	-1,.L52,.L405-.L52,.L406-.L52
	.half	1
	.byte	111
	.word	0,0
.L214:
	.word	-1,.L52,0,.L386-.L52
	.half	1
	.byte	101
	.word	.L389-.L52,.L210-.L52
	.half	1
	.byte	109
	.word	0,0
.L272:
	.word	0,0
.L274:
	.word	0,0
.L268:
	.word	-1,.L52,.L406-.L52,.L407-.L52
	.half	1
	.byte	111
	.word	0,0
.L215:
	.word	-1,.L52,.L390-.L52,.L391-.L52
	.half	1
	.byte	98
	.word	0,0
.L221:
	.word	-1,.L52,.L403-.L52,.L404-.L52
	.half	1
	.byte	111
	.word	0,0
.L225:
	.word	0,0
.L242:
	.word	-1,.L52,.L404-.L52,.L405-.L52
	.half	1
	.byte	111
	.word	0,0
.L246:
	.word	0,0
.L281:
	.word	-1,.L52,.L407-.L52,.L19-.L52
	.half	1
	.byte	111
	.word	0,0
.L285:
	.word	0,0
.L287:
	.word	0,0
.L239:
	.word	0,0
.L263:
	.word	0,0
.L276:
	.word	0,0
.L229:
	.word	0,0
.L250:
	.word	0,0
.L289:
	.word	0,0
.L237:
	.word	0,0
.L227:
	.word	0,0
.L248:
	.word	0,0
.L218:
	.word	-1,.L52,.L388-.L52,.L210-.L52
	.half	1
	.byte	108
	.word	0,0
.L235:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxDsadc_Dsadc_initChannelConfig')
	.sect	'.debug_loc'
.L298:
	.word	0,0
.L53:
	.word	-1,.L54,0,.L408-.L54
	.half	2
	.byte	138,0
	.word	.L408-.L54,.L293-.L54
	.half	3
	.byte	138,200,0
	.word	.L293-.L54,.L293-.L54
	.half	2
	.byte	138,0
	.word	0,0
.L295:
	.word	-1,.L54,0,.L293-.L54
	.half	1
	.byte	100
	.word	0,0
.L296:
	.word	-1,.L54,0,.L293-.L54
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxDsadc_Dsadc_initCombFilter')
	.sect	'.debug_loc'
.L55:
	.word	-1,.L56,0,.L328-.L56
	.half	2
	.byte	138,0
	.word	0,0
.L329:
	.word	-1,.L56,0,.L328-.L56
	.half	1
	.byte	100
	.word	0,0
.L331:
	.word	-1,.L56,0,.L328-.L56
	.half	1
	.byte	101
	.word	0,0
.L333:
	.word	-1,.L56,.L409-.L56,.L328-.L56
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxDsadc_Dsadc_initDemodulator')
	.sect	'.debug_loc'
.L57:
	.word	-1,.L58,0,.L334-.L58
	.half	2
	.byte	138,0
	.word	0,0
.L335:
	.word	-1,.L58,0,.L334-.L58
	.half	1
	.byte	100
	.word	0,0
.L337:
	.word	-1,.L58,0,.L334-.L58
	.half	1
	.byte	101
	.word	0,0
.L339:
	.word	-1,.L58,.L410-.L58,.L334-.L58
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxDsadc_Dsadc_initFirFilter')
	.sect	'.debug_loc'
.L59:
	.word	-1,.L60,0,.L340-.L60
	.half	2
	.byte	138,0
	.word	0,0
.L341:
	.word	-1,.L60,0,.L340-.L60
	.half	1
	.byte	100
	.word	0,0
.L343:
	.word	-1,.L60,0,.L340-.L60
	.half	1
	.byte	101
	.word	0,0
.L345:
	.word	-1,.L60,.L411-.L60,.L340-.L60
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxDsadc_Dsadc_initIntegrator')
	.sect	'.debug_loc'
.L61:
	.word	-1,.L62,0,.L346-.L62
	.half	2
	.byte	138,0
	.word	0,0
.L347:
	.word	-1,.L62,0,.L346-.L62
	.half	1
	.byte	100
	.word	0,0
.L349:
	.word	-1,.L62,0,.L346-.L62
	.half	1
	.byte	101
	.word	0,0
.L351:
	.word	-1,.L62,.L412-.L62,.L346-.L62
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxDsadc_Dsadc_initModulator')
	.sect	'.debug_loc'
.L63:
	.word	-1,.L64,0,.L413-.L64
	.half	2
	.byte	138,0
	.word	.L413-.L64,.L352-.L64
	.half	2
	.byte	138,8
	.word	.L352-.L64,.L352-.L64
	.half	2
	.byte	138,0
	.word	0,0
.L353:
	.word	-1,.L64,0,.L414-.L64
	.half	1
	.byte	100
	.word	.L416-.L64,.L352-.L64
	.half	1
	.byte	108
	.word	0,0
.L355:
	.word	-1,.L64,0,.L415-.L64
	.half	1
	.byte	101
	.word	.L417-.L64,.L418-.L64
	.half	1
	.byte	111
	.word	0,0
.L357:
	.word	-1,.L64,.L419-.L64,.L352-.L64
	.half	1
	.byte	88
	.word	0,0
.L360:
	.word	-1,.L64,.L415-.L64,.L420-.L64
	.half	1
	.byte	82
	.word	.L421-.L64,.L420-.L64
	.half	1
	.byte	84
	.word	0,0
.L359:
	.word	-1,.L64,0,.L352-.L64
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxDsadc_Dsadc_initModule')
	.sect	'.debug_loc'
.L65:
	.word	-1,.L66,0,.L191-.L66
	.half	2
	.byte	138,0
	.word	0,0
.L194:
	.word	-1,.L66,0,.L422-.L66
	.half	1
	.byte	101
	.word	.L423-.L66,.L191-.L66
	.half	1
	.byte	111
	.word	0,0
.L192:
	.word	-1,.L66,0,.L422-.L66
	.half	1
	.byte	100
	.word	0,0
.L196:
	.word	-1,.L66,.L424-.L66,.L191-.L66
	.half	1
	.byte	108
	.word	0,0
.L203:
	.word	-1,.L66,.L429-.L66,.L191-.L66
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L200:
	.word	-1,.L66,.L422-.L66,.L425-.L66
	.half	1
	.byte	82
	.word	.L426-.L66,.L191-.L66
	.half	1
	.byte	88
	.word	.L425-.L66,.L427-.L66
	.half	1
	.byte	84
	.word	.L428-.L66,.L201-.L66
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxDsadc_Dsadc_initModuleConfig')
	.sect	'.debug_loc'
.L209:
	.word	-1,.L68,.L430-.L68,.L204-.L68
	.half	2
	.byte	144,32
	.word	0,0
.L67:
	.word	-1,.L68,0,.L204-.L68
	.half	2
	.byte	138,0
	.word	0,0
.L206:
	.word	-1,.L68,0,.L204-.L68
	.half	1
	.byte	100
	.word	0,0
.L207:
	.word	-1,.L68,0,.L204-.L68
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxDsadc_Dsadc_initRectifier')
	.sect	'.debug_loc'
.L69:
	.word	-1,.L70,0,.L361-.L70
	.half	2
	.byte	138,0
	.word	0,0
.L362:
	.word	-1,.L70,0,.L361-.L70
	.half	1
	.byte	100
	.word	0,0
.L364:
	.word	-1,.L70,0,.L361-.L70
	.half	1
	.byte	101
	.word	0,0
.L366:
	.word	-1,.L70,.L431-.L70,.L432-.L70
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L743:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('IfxDsadc_Dsadc_calcDIVx')
	.sect	'.debug_frame'
	.word	24
	.word	.L743,.L44,.L313-.L44
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxDsadc_Dsadc_getAuxResult')
	.sect	'.debug_frame'
	.word	24
	.word	.L743,.L46,.L300-.L46
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxDsadc_Dsadc_initAuxFilter')
	.sect	'.debug_frame'
	.word	20
	.word	.L743,.L48,.L322-.L48
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxDsadc_Dsadc_initCarrierGen')
	.sect	'.debug_frame'
	.word	36
	.word	.L743,.L50,.L152-.L50
	.byte	4
	.word	(.L377-.L50)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L152-.L377)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxDsadc_Dsadc_initChannel')
	.sect	'.debug_frame'
	.word	12
	.word	.L743,.L52,.L210-.L52
	.sdecl	'.debug_frame',debug,cluster('IfxDsadc_Dsadc_initChannelConfig')
	.sect	'.debug_frame'
	.word	40
	.word	.L743,.L54,.L293-.L54
	.byte	8,19,8,23,4
	.word	(.L408-.L54)/2
	.byte	19,200,0,22,26,4,19,138,200,0,4
	.word	(.L293-.L408)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('IfxDsadc_Dsadc_initCombFilter')
	.sect	'.debug_frame'
	.word	20
	.word	.L743,.L56,.L328-.L56
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxDsadc_Dsadc_initDemodulator')
	.sect	'.debug_frame'
	.word	20
	.word	.L743,.L58,.L334-.L58
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxDsadc_Dsadc_initFirFilter')
	.sect	'.debug_frame'
	.word	20
	.word	.L743,.L60,.L340-.L60
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxDsadc_Dsadc_initIntegrator')
	.sect	'.debug_frame'
	.word	20
	.word	.L743,.L62,.L346-.L62
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxDsadc_Dsadc_initModulator')
	.sect	'.debug_frame'
	.word	36
	.word	.L743,.L64,.L352-.L64
	.byte	4
	.word	(.L413-.L64)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L352-.L413)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxDsadc_Dsadc_initModule')
	.sect	'.debug_frame'
	.word	12
	.word	.L743,.L66,.L191-.L66
	.sdecl	'.debug_frame',debug,cluster('IfxDsadc_Dsadc_initModuleConfig')
	.sect	'.debug_frame'
	.word	20
	.word	.L743,.L68,.L204-.L68
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxDsadc_Dsadc_initRectifier')
	.sect	'.debug_frame'
	.word	20
	.word	.L743,.L70,.L361-.L70
	.byte	8,19,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxDsadc_Dsadc_initCarrierGenConfig')
	.sect	'.debug_frame'
	.word	24
	.word	.L743,.L72,.L309-.L72
	.byte	8,18,8,19,8,21,8,22,8,23,0,0


	; Module end
