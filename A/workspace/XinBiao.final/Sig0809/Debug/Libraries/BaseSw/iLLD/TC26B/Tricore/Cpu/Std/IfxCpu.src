	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 99277908"
	.compiler_invocation	"ctc --dep-file=Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\.IfxCpu.o.d --fp-model=c,f,l,n,r,S,T,z -D__CPU__=tc26x -D__CPU_TC26X__ --core=tc1.6.x --iso=99 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\CODE -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Build -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\DataHandling -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\InternalMux -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Asc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Lin -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Spi -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Icu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmBc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmHl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Timer -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TimerWithTrigger -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TPwm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Cam -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Irq -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Dma -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Rdc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Dts -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Eray -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Phy_Pef7071 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Crc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Fft -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\IncrEnc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Pwm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Timer -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim\\In -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Pwm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Trig -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\I2c -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Driver -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Msc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Can -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Io -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Psi5 -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Psi5s -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiMaster -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiSlave -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Src -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Adc -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Std -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Platform -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Platform\\Tricore -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Platform\\Tricore\\Compilers -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Sfr -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Sfr\\TC26B -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Service -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Service\\CpuGeneric -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\seekfree_libraries -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\seekfree_libraries\\common -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\seekfree_peripheral -IG:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\USER -g2 -wW557 --make-target=Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.o -t0 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O0 --default-a1-size=0 --default-a0-size=0 --source --align=0 --switch=auto --error-limit=42 -o Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.src ..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c"
	.compiler_name		"ctc"
	;source	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c'

	
$TC16X
	
	.sdecl	'.text.IfxCpu.IfxCpu_acquireMutex',code,cluster('IfxCpu_acquireMutex')
	.sect	'.text.IfxCpu.IfxCpu_acquireMutex'
	.align	2
	
	.global	IfxCpu_acquireMutex

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	     1  /**
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	     2   * \file IfxCpu.c
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	     3   * \brief CPU  basic functionality
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	     4   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	     5   * \version iLLD_1_0_1_11_0
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	     6   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	     7   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	     8   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	     9   *                                 IMPORTANT NOTICE
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    10   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    11   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    12   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    13   * the company in which ordinary course of business you are acting and (ii) 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    14   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    15   * terms of use are agreed, use of this file is subject to following:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    16  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    17  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    19  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    20   * Permission is hereby granted, free of charge, to any person or 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    21   * organization obtaining a copy of the software and accompanying 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    22   * documentation covered by this license (the "Software") to use, reproduce,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    23   * display, distribute, execute, and transmit the Software, and to prepare
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    24   * derivative works of the Software, and to permit third-parties to whom the 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    25   * Software is furnished to do so, all subject to the following:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    26  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    27   * The copyright notices in the Software and this entire statement, including
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    28   * the above license grant, this restriction and the following disclaimer, must
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    29   * be included in all copies of the Software, in whole or in part, and all
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    30   * derivative works of the Software, unless such copies or derivative works are
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    31   * solely in the form of machine-executable object code generated by a source
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    32   * language processor.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    33  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    40   * DEALINGS IN THE SOFTWARE.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    41  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    42   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    43   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    44   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    45  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    46  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    47  /*----------------------------------Includes----------------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    48  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    49  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    50  #include "IfxCpu.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    51  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    52  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    53  /*-------------------------Function Implementations---------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    54  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    55  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    56  boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock)
; Function IfxCpu_acquireMutex
.L62:
IfxCpu_acquireMutex:	.type	func
	sub.a	a10,#8
.L265:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    57  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    58      boolean         retVal;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    59      volatile uint32 spinLockVal;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    60  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    61      retVal      = FALSE;
	mov	d2,#0
.L266:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    62  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    63      spinLockVal = 1UL;
	mov	d15,#1
.L396:
	st.w	[a10],d15
.L397:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    64      spinLockVal =
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    65          (uint32)__cmpAndSwap(((unsigned int *)lock), spinLockVal, 0);
	ld.w	d0,[a10]
	mov	d15,#0
	mov	d1,d15
	cmpswap.w	[a4]0,e0
.L398:
	st.w	[a10],d0
.L399:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    66  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    67      /* Check if the SpinLock WAS set before the attempt to acquire spinlock */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    68      if (spinLockVal == 0)
	ld.w	d15,[a10]
.L400:
	jne	d15,#0,.L2
.L401:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    69      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    70          retVal = TRUE;
	mov	d2,#1
.L2:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    71      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    72  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    73      return retVal;
	j	.L3

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    74  }
.L3:
	ret
.L208:
	
__IfxCpu_acquireMutex_function_end:
	.size	IfxCpu_acquireMutex,__IfxCpu_acquireMutex_function_end-IfxCpu_acquireMutex
.L120:
	; End of function
	
	.sdecl	'.text.IfxCpu.IfxCpu_getCoreMode',code,cluster('IfxCpu_getCoreMode')
	.sect	'.text.IfxCpu.IfxCpu_getCoreMode'
	.align	2
	
	.global	IfxCpu_getCoreMode

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    75  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    76  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    77  IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu)
; Function IfxCpu_getCoreMode
.L64:
IfxCpu_getCoreMode:	.type	func
	mov.aa	a15,a4
.L268:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    78  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    79      IfxCpu_CoreMode    cpuMode;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    80      Ifx_CPU_DBGSR      dbgsr;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    81      IfxCpu_ResourceCpu index = IfxCpu_getIndex(cpu);
	mov.aa	a4,a15
	call	IfxCpu_getIndex
.L267:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    82  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    83      cpuMode = IfxCpu_CoreMode_unknown;
	mov	d0,#5
.L166:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     1  /**
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     5   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_1_11_0
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     8   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     9   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    11   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    12   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    17  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    18  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    20  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    26   * Software is furnished to do so, all subject to the following:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    27  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    33   * language processor.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    34  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    42  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    43   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    44   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    45   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    46   * \ingroup IfxLld_Cpu_Std
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    47   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    48   * \ingroup IfxLld_Cpu_Std
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    49   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    50   * \ingroup IfxLld_Cpu_Std
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    51   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    52   * \ingroup IfxLld_Cpu_Std
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    53   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    54   * \ingroup IfxLld_Cpu_Std
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    55   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    56   * \ingroup IfxLld_Cpu_Std
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    57   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    58   * \ingroup IfxLld_Cpu_Std
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    59   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    60   * \ingroup IfxLld_Cpu_Std
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    61   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    62  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    63  #ifndef IFXCPU_H
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    64  #define IFXCPU_H 1
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    65  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    66  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    67  /*----------------------------------Includes----------------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    68  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    69  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    70  #include "_Impl/IfxCpu_cfg.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    71  #include "IfxSrc_reg.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    72  #include "IfxScu_reg.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    73  #include "IfxStm_reg.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    74  #include "_Impl/IfxScu_cfg.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    75  #include "_Utilities/Ifx_Assert.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    76  #include "Scu/Std/IfxScuWdt.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    77  #include "Scu/Std/IfxScuCcu.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    78  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    79  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    80  /*-----------------------------------Macros-----------------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    81  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    82  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    83  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    84   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    85   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    86   * the CPU number.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    87   * Example usage:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    88   *  \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    89   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    90   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    91   *  \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    92   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    93  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    94  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    95  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    96   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    97   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    98   * the CPU number.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    99   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   100   *   Example usage:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   101   *   \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   102   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   103   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   104   *   \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   105   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   106  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   107  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   108  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   109  /*------------------------------Type Definitions------------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   110  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   111  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   112  /** \brief Lock type Spin lock
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   113   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   114  typedef unsigned int IfxCpu_spinLock;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   115  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   116  /** \brief Lock type Mutex lock
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   117   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   118  typedef unsigned int IfxCpu_mutexLock;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   119  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   120  /** \brief Event used for synchronisation.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   121   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   122  typedef unsigned int IfxCpu_syncEvent;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   123  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   124  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   125  /*--------------------------------Enumerations--------------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   126  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   127  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   128  /** \addtogroup IfxLld_Cpu_Std_Enum
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   129   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   130  /** \brief Enumeration for the Cpu mode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   131   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   132  typedef enum
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   133  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   134      IfxCpu_CoreMode_halt,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   135      IfxCpu_CoreMode_run,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   136      IfxCpu_CoreMode_idle,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   137      IfxCpu_CoreMode_sleep,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   138      IfxCpu_CoreMode_stby,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   139      IfxCpu_CoreMode_unknown
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   140  } IfxCpu_CoreMode;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   141  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   142  /** \brief Performance conunter modes
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   143   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   144  typedef enum
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   145  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   146      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   147      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   148  } IfxCpu_CounterMode;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   149  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   150  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   151  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   152  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   153  /*-----------------------------Data Structures--------------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   154  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   155  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   156  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   157   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   158  /** \brief counter
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   159   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   160  typedef struct
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   161  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   162      uint32  counter;        /**< \brief Counter value */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   163      boolean overlfow;       /**< \brief sticky overlfow */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   164  } IfxCpu_Counter;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   165  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   166  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   167  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   168  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   169   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   170  /** \brief Performance counter result
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   171   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   172  typedef struct
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   173  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   174      IfxCpu_Counter instruction;       /**< \brief Instruction counter */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   175      IfxCpu_Counter clock;             /**< \brief CPU clock counter */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   176      IfxCpu_Counter counter1;          /**< \brief Multi counter 1 */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   177      IfxCpu_Counter counter2;          /**< \brief Multi counter 2 */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   178      IfxCpu_Counter counter3;          /**< \brief Multi counter 3 */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   179  } IfxCpu_Perf;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   180  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   181  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   182  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   183  /** \addtogroup IfxLld_Cpu_Std_Core
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   184   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   185  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   186  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   187  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   188  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   189  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   190  /** \brief API to get the address for CPU HW module register memory map
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   191   * \param cpu Resource index of the CPU
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   192   * \return CPU module register address
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   193   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   194  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   195  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   196  /** \brief API to get core id of the CPU of the caller.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   197   * Caution: Core id of the cpu's may not be continguous and shouldn't be used to index cpu.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   198   * Use IfxCpu_getCoreIndex() to get cpu no.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   199   * \return Resource index of the CPU.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   200   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   201  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   202  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   203  /** \brief API to get cpu index of the caller CPU.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   204   * Note: This api can be used whereever cpu no/index is needed.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   205   * \return Resource index of the CPU.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   206   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   207  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   208  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   209  /** \brief API to initialize the context save area of the CPU where this is called.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   210   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   211   * This API can initialize the CSA of the host CPU where this API is called. This API
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   212   * shall not be used to initialize the CSA of another CPU
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   213   * \param csaBegin Pointer to start of context save area
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   214   * \param csaEnd Pointer to end of context save area
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   215   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   216   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   217  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   218  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   219  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   220   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   221   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   222  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   223  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   224  /** \brief Triggers Software Reset
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   225   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   226   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   227  IFX_INLINE void IfxCpu_triggerSwReset(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   228  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   229  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   230  /*-------------------------Global Function Prototypes-------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   231  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   232  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   233  /** \brief API to get current mode of CPU
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   234   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   235   * \return Current mode of the CPU
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   236   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   237  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   238  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   239  /** \brief API to get current mode of CPU
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   240   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   241   * \return Resource index of the CPU
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   242   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   243  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   244  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   245  /** \brief API to set mode of the CPU
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   246   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   247   * \param mode CPU mode to be set by this API
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   248   * \return Success status of the activity (setting the core mode).
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   249   * \retval TRUE: If the activity successfully be performed.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   250   * \retval FALSE: If the activity can't be performed.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   251   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   252  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   253  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   254  /** \brief API to set the program counter for the CPU specified.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   255   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   256   * \param programCounter Program counter value to be set
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   257   * \return success status of the activity (setting program counter value).
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   258   * \retval TRUE: If the activity successfully be performed.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   259   * \retval FALSE: If the activity can't be performed
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   260   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   261  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   262  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   263  /** \brief API to set the program counter for the CPU specified and start the CPU
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   264   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   265   * \param programCounter Program counter value to start the CPU
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   266   * \return success status of the activity (setting program counter value).
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   267   * \retval TRUE: If the activity successfully be performed.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   268   * \retval FALSE: If the activity can't be performed
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   269   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   270  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   271  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   272  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   273  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   274  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   275   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   276  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   277  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   278  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   279  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   280  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   281  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   282   * This API provides the status of CPU where this API is called
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   283   * \return Status of global interrupt enable bit.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   284   * \retval TRUE: Global interrupts enabled.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   285   * \retval FALSE: Global interrupts disabled
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   286   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   287  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   288  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   289  /** \brief API to disable global interrupt and return the previous status.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   290   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   291   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   292   * used for this activity towards other CPUs
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   293   * \return Previous status of global interrupt enable bit.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   294   * \retval TRUE: Previously, global interrupts enabled.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   295   * \retval FALSE: Previously, global interrupts disabled
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   296   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   297  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   298  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   299  /** \brief API to enable global interrupt.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   300   * This API simply enables the global interrupt.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   301   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   302   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   303  IFX_INLINE void IfxCpu_enableInterrupts(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   304  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   305  /** \brief Disable the Global Interrupt
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   306   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   307   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   308  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   309  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   310  /** \brief API to restore global interrupt with that of the passed parameter.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   311   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   312   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   313   * used for this activity towards other CPUs
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   314   * \param enabled Previous status of the global interrupt enable bit
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   315   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   316   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   317  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   318  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   319  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   320  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   321  /** \addtogroup IfxLld_Cpu_Std_Cache
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   322   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   323  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   324  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   325  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   326  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   327  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   328  /** \brief API to enable/ disable the data cacheability for selected segments
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   329   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   330   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   331   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   332   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   333   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   334   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   335  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   336  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   337  /** \brief API to enable/ disable the instruction cacheability for selected segments
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   338   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   339   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   340   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   341   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   342   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   343   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   344  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   345  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   346  /** \brief API to invalidate the program cache
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   347   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   348   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   349  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   350  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   351  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   352   * \param address Address
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   353   * \return Status TRUE/FALSE
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   354   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   355  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   356  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   357  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   358   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   359   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   360   * used for this activity towards other CPUs
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   361   * \param enable Command to enable or bypass the data cache
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   362   * TRUE: Enable the data cache.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   363   * FALSE: Bypass the data cache.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   364   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   365   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   366  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   367  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   368  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   369   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   370   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   371   * used for this activity towards other CPUs
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   372   * \param enable Command to enable or bypass the program cache.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   373   * TRUE: Enable the program cache.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   374   * FALSE: Bypass the program cache
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   375   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   376   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   377  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   378  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   379  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   380  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   381  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   382   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   383  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   384  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   385  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   386  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   387  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   388  /** \brief API to read the clock counter for the CPU which calls this API.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   389   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   390   * This API can be used to read clock counter of only the caller CPU. It cannot be
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   391   * used for this activity towards other CPUs.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   392   * \return Counter value. 0 to 0x7FFFFFFF.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   393   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   394  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   395  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   396  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   397   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   398   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   399   * It cannot be used for this activity towards other CPUs.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   400   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   401   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   402   * reading the counter
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   403   * \return Status of sticky overflow bit.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   404   * \retval TRUE: Sticky overflow bit is set.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   405   * \retval FALSE: Sticky overflow bit is reset
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   406   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   407  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   408  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   409  /** \brief API to read the instruction counter for the CPU which calls this API.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   410   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   411   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   412   * used for this activity towards other CPUs
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   413   * \return Counter value. 0 to 0x7FFFFFFF.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   414   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   415  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   416  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   417  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   418   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   419   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   420   * It cannot be used for this activity towards other CPUs.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   421   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   422   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   423   * reading the counter
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   424   * \return Status of sticky overflow bit.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   425   * \retval TRUE: Sticky overflow bit is set.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   426   * \retval FALSE: Sticky overflow bit is reset
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   427   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   428  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   429  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   430  /** \brief API to read the performance counter for the CPU which calls this API.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   431   * \param address Address
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   432   * \return counter value
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   433   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   434  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   435  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   436  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   437   * This is generic function to get sticky overflow bit of any performance counters
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   438   * \param address Address
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   439   * \return Status
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   440   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   441  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   442  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   443  /** \brief Reset and start instruction, clock and multi counters
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   444   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   445   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   446   * \param mode Counter mode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   447   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   448   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   449  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   450  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   451  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   452   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   453   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   454   * used for this activity towards other CPUs.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   455   * \param enable enable Command to enable or disable the performance counter.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   456   * TRUE: Enable the performance counter.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   457   * FALSE: Disable the performance counter
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   458   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   459   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   460  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   461  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   462  #if !((defined(__cplusplus)) && (defined(__TASKING__)))
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   463  /** \brief Stop instruction and clock counters, return their values
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   464   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   465   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   466   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   467   * \return Performance counter result
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   468   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   469  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   470  #endif
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   471  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   472  /** \brief API to update clock counter for the CPU which calls this API.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   473   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   474   * This API can be used to update clock counter of only the caller CPU. It cannot be
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   475   * used for this activity towards other CPUs.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   476   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   477   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   478   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   479  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   480  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   481  /** \brief API to update Instruction counter for the CPU which calls this API.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   482   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   483   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   484   * used for this activity towards other CPUs.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   485   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   486   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   487   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   488  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   489  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   490  /** \brief API to update performance counter for the CPU which calls this API.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   491   * This is generic function to update any of the performance counters
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   492   * \param address Address
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   493   * \param count Count
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   494   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   495   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   496  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   497  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   498  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   499  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   500  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   501   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   502  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   503  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   504  /*-------------------------Global Function Prototypes-------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   505  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   506  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   507  /** \brief API to acquire the mutex (binary semaphore).
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   508   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   509   * This API can be used to acquire/get the mutex.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   510   * \param lock lock pointer
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   511   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   512   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   513   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   514   *    IfxCpu_mutexLock resourceLock;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   515   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   516   *    if (flag){
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   517   *      // critical section
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   518   *      IfxCpu_releaseMutex(&resourceLock);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   519   *    }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   520   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   521   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   522   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   523  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   524  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   525  /** \brief API to unlock the mutex .
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   526   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   527   * This API can be used to unlock the previously acquired mutex
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   528   * \param lock lock pointer
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   529   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   530   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   531   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   532   *    IfxCpu_mutexLock resourceLock;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   533   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   534   *    if (flag){
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   535   *      // critical section
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   536   *      IfxCpu_releaseMutex(&resourceLock);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   537   *    }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   538   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   539   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   540   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   541  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   542  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   543  /** \brief API to unlock the resource .
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   544   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   545   * This API can be used to unlock the previously acquired lock
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   546   * \param lock lock pointer
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   547   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   548   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   549  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   550  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   551  /** \brief API to lock the resource in spin mode with the given timeout.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   552   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   553   * This API can be used to spin lock for the lock for the given timeout period.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   554   * \param lock lock pointer
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   555   * \param timeoutCount loop counter value used for timeout to acquire lock
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   556   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   557   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   558   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   559   *    IfxCpu_spinLock resourceLock;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   560   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   561   *    if (flag){
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   562   *      // critical section
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   563   *      IfxCpu_resetSpinLock(&resourceLock);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   564   *    }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   565   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   566   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   567   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   568  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   569  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   570  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   571  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   572  /** \addtogroup IfxLld_Cpu_Std_Utility
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   573   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   574  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   575  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   576  /*-------------------------Global Function Prototypes-------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   577  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   578  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   579  /** \brief API to get random value
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   580   * \param seed Pointer to seed value
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   581   * \return random value
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   582   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   583  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   584  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   585  /** \brief API to get random value with in the range
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   586   * \param seed Pointer to seed value
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   587   * \param min minimum range value
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   588   * \param max maximum range value
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   589   * \return random value
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   590   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   591  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   592  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   593  /** \brief This function waits till all the cores have set their corresponding bits in the event. This function along with
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   594   * IfxCpu_emitEvent() are used to achieve the synchronisation between the configured cores. By default
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   595   * "IFXCPU_CFG_ALLCORE_DONE" macro defined for all the cores. In case the user wants to check for
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   596   * synchronisation among the required cores, the macro can be redefined with the value accroing to the
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   597   * CORE_ID register.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   598   * The IfxCpu_emitEvent() is to be used in the Main functions of the Cores where the user wants to check for synchronisation.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   599   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   600   * e.g:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   601   * 1. Check for synchronisation between core 0 and core 5
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   602   * # define 0x41U
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   603   * 2. Check for synchronisation between core 0 to core 5
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   604   * # define 0x5FU
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   605   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   606   * Note:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   607   * Core id values read from CORE_ID register will be as shown below. The value indicates the position of the bit needs to be set while building the macro.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   608   * Core 0: 0
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   609   * Core 1: 1
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   610   * Core 2: 2
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   611   * Core 3: 3
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   612   * Core 4: 4
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   613   * Core 5: 6
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   614   * \param event Synchronous Event
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   615   * \param timeoutMilliSec timeout in millisec
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   616   * \return Error condition
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   617   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   618   * The functions IfxCpu_waitEvent and IfxCpu_emitEvent are used to achieve synchronisation between all cores (i.e individual cores wait till all cores have reached the synchronisation point). The IfxCpu_waitEvent returns 1 incase a timeout occurs.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   619   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   620   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   621   * // Global variable. preferably located in  shared memory.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   622   * IfxCpu_syncEvent event;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   623   * boolean errorVal;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   624   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   625   * // Below code should be repeated in Each core
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   626   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   627   * // Upon reaching Synchonisation point
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   628   * IfxCpu_emitEvent(&event);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   629   * errorVal = IfxCpu_waitEvent(&event, timeoutMilliSec); // timeoutMilliSec is timeout value to wait
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   630   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   631   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   632   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   633   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   634  IFX_EXTERN boolean IfxCpu_waitEvent(IfxCpu_syncEvent *event, uint32 timeoutMilliSec);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   635  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   636  /** \brief This function sets a bit corresponding to the core in the event.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   637   * \param event Synchronous Event
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   638   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   639   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   640   * A coding example can be found in \ref IfxCpu_waitEvent
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   641   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   642   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   643  IFX_EXTERN void IfxCpu_emitEvent(IfxCpu_syncEvent *event);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   644  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   645  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   646  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   647  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   648  /*---------------------Inline Function Implementations------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   649  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   650  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   651  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   652  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   653      Ifx_CPU_ICR reg;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   654      reg.U = __mfcr(CPU_ICR);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   655      return reg.B.IE != 0;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   656  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   657  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   658  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   659  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   660  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   661      boolean enabled;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   662      enabled = IfxCpu_areInterruptsEnabled();
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   663      __disable();
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   664      __nop();
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   665      return enabled;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   666  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   667  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   668  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   669  IFX_INLINE void IfxCpu_enableInterrupts(void)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   670  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   671      __enable();
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   672  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   673  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   674  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   675  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   676  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   677      uint32 cpu_pmaVal;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   678      uint16 checkRestrictionMask;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   679      uint32 coreIndex   = IfxCpu_getCoreIndex();
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   680      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   681  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   682      /*resolve the restrictions*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   683      /*In PMA0 Segment-C and Segment[7-CoreID] must have the same value */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   684      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xC);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   685  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   686      if ((segmentNumberMask & checkRestrictionMask) != 0)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   687      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   688          segmentNumberMask |= checkRestrictionMask;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   689      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   690  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   691      cpu_pmaVal = __mfcr(CPU_PMA0);                                                              /* Read the CPU_PMA0 */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   692  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   693      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   694  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   695      /*The CPU_PMA registers are ENDINIT protected*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   696      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   697      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   698      /*Write to PMA0 register for selecting the cacheability for data cache*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   699      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   700      __mtcr(CPU_PMA0, cpu_pmaVal);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   701      __isync();      /* ISYNC instruction executed immediately following MTCR */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   702      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   703  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   704  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   705  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   706  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   707  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   708      uint32 cpu_pmaVal;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   709      uint16 checkRestrictionMask;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   710      uint32 coreIndex   = IfxCpu_getCoreIndex();
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   711      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   712  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   713      /*resolve the restrictions*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   714      /*In PMA1 Segment-D and Segment[7-CoreID] must have the same value */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   715      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xD);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   716  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   717      if ((segmentNumberMask & checkRestrictionMask) != 0)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   718      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   719          segmentNumberMask |= checkRestrictionMask;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   720      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   721  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   722      cpu_pmaVal = __mfcr(CPU_PMA1);                                                              /* Read the CPU_PMA1 */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   723  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   724      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   725  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   726      /*The CPU_PMA registers are ENDINIT protected*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   727      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   728      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   729      /*Write to PMA1 register for selecting the cacheability for data cache*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   730      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   731      __mtcr(CPU_PMA1, cpu_pmaVal);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   732      __isync();      /* ISYNC instruction executed immediately following MTCR */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   733      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   734  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   735  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   736  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   737  IFX_INLINE void IfxCpu_forceDisableInterrupts(void)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   738  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   739      __disable();
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   740      __nop();
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   741  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   742  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   743  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   744  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   745  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   746      Ifx_CPU *module;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   747  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   748      if (cpu < IfxCpu_ResourceCpu_none)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   749      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   750          module = (Ifx_CPU *)IfxCpu_cfg_indexMap[cpu].module;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   751      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   752      else
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   753      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   754          module = NULL_PTR;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   755      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   756  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   757      return module;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   758  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   759  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   760  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   761  IFX_INLINE uint32 IfxCpu_getClockCounter(void)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   762  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   763      return IfxCpu_getPerformanceCounter(CPU_CCNT);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   764  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   765  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   766  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   767  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   768  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   769      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_CCNT);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   770  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   771  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   772  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   773  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   774  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   775      Ifx_CPU_CORE_ID reg;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   776      reg.U = __mfcr(CPU_CORE_ID);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   777      return (IfxCpu_Id)reg.B.CORE_ID;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   778  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   779  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   780  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   781  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   782  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   783      Ifx_CPU_CORE_ID reg;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   784      reg.U = __mfcr(CPU_CORE_ID);
	mfcr	d15,#65052
.L271:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   785      return (IfxCpu_ResourceCpu)reg.B.CORE_ID;
	and	d15,#7
.L272:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   785      return (IfxCpu_ResourceCpu)reg.B.CORE_ID;      (inlined)
	j	.L4

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   786  }      (inlined)
.L4:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    84   as the host for this call */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    85      if (IfxCpu_getCoreIndex() != index)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    86      {                           /*status request is for other cpu than the host */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    87          dbgsr = cpu->DBGSR;
	jeq	d15,d2,.L5
.L340:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    88      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    89      else
	movh.a	a3,#1
	add.a	a3,a15
	lea	a3,[a3]-768
	ld.w	d1,[a3]
.L273:
	j	.L6
.L5:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    90      {                           /*status request is for same cpu as the host */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    91          dbgsr.U = __mfcr(CPU_DBGSR);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    92      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    93  
	mfcr	d1,#64768
.L6:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    94      /*Check if the requested CPU is in DBG HALT mode */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    95      if (dbgsr.B.HALT == (uint32)IfxCpu_DBGST_HALT_halt)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    96      {                           /*CPU is in DBG HALT mode */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    97          cpuMode = IfxCpu_CoreMode_halt;
	extr.u	d15,d1,#1,#2
.L341:
	jne	d15,#1,.L7
.L342:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    98      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    99      else
	mov	d0,#0
.L343:
	j	.L8
.L7:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   100      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   101          if (dbgsr.B.HALT == (uint32)IfxCpu_DBGST_HALT_run)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   102          {                       /*CPU is in DBG RUNNING mode now check PMCSR status */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   103              volatile Ifx_SCU_PMCSR *pmcsr_val;
	extr.u	d15,d1,#1,#2
.L344:
	jne	d15,#0,.L9
.L170:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   104  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   105              pmcsr_val = &MODULE_SCU.PMCSR[index];
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   106  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   107              if (pmcsr_val->B.PMST == (uint32)IfxCpu_PMCSR_PMST_normalMode)
	mul	d15,d2,#4
	mov.a	a15,d15
.L269:
	movh.a	a3,#61443
	add.a	a3,a15
	lea	a15,[a3]24788
.L274:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   108              {                   /*Cpu is in normal run mode */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   109                  cpuMode = IfxCpu_CoreMode_run;
	ld.bu	d15,[a15]1
	and	d15,#7
.L345:
	jne	d15,#1,.L10
.L346:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   110              }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   111              else
	mov	d0,#1
.L347:
	j	.L11
.L10:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   112              {                   /*Cpu is not in run mode */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   113                  if (pmcsr_val->B.PMST == (uint32)IfxCpu_PMCSR_PMST_idleMode)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   114                  {               /*Cpu is in idle mode */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   115                      cpuMode = IfxCpu_CoreMode_idle;
	ld.bu	d15,[a15]1
	and	d15,#7
.L348:
	jne	d15,#3,.L12
.L349:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   116                  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   117              }
	mov	d0,#2
.L12:
.L11:
	j	.L13
.L9:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   118          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   119          else
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   120          {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   121              cpuMode = IfxCpu_CoreMode_unknown;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   122          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   123      }
	mov	d0,#5
.L13:
.L8:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   124  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   125      return cpuMode;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   126  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   127  
	mov	d2,d0
.L270:
	j	.L14

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   128  
.L14:
	ret
.L157:
	
__IfxCpu_getCoreMode_function_end:
	.size	IfxCpu_getCoreMode,__IfxCpu_getCoreMode_function_end-IfxCpu_getCoreMode
.L95:
	; End of function
	
	.sdecl	'.text.IfxCpu.IfxCpu_getIndex',code,cluster('IfxCpu_getIndex')
	.sect	'.text.IfxCpu.IfxCpu_getIndex'
	.align	2
	
	.global	IfxCpu_getIndex

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   129  IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   130  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   131      IfxCpu_ResourceCpu result;
; Function IfxCpu_getIndex
.L66:
IfxCpu_getIndex:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   132      uint32             index;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   133      result = IfxCpu_ResourceCpu_none;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   134  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   135      for (index = 0; index < IFXCPU_NUM_MODULES; index++)
	mov	d2,#2
.L275:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   136      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   137          if (IfxCpu_cfg_indexMap[index].module == cpu)
	mov	d0,#0
.L276:
	j	.L15
.L16:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   138          {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   139              result = (IfxCpu_ResourceCpu)IfxCpu_cfg_indexMap[index].index;
	mul	d15,d0,#8
.L354:
	movh.a	a15,#@his(IfxCpu_cfg_indexMap)
	lea	a15,[a15]@los(IfxCpu_cfg_indexMap)
.L355:
	addsc.a	a15,a15,d15,#0
.L356:
	ld.a	a15,[a15]
.L357:
	jne.a	a15,a4,.L17
.L358:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   140              break;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   141          }
	mul	d15,d0,#8
.L359:
	movh.a	a15,#@his(IfxCpu_cfg_indexMap)
	lea	a15,[a15]@los(IfxCpu_cfg_indexMap)
.L360:
	addsc.a	a15,a15,d15,#0
.L361:
	ld.w	d15,[a15]4
.L362:
	extr.u	d2,d15,#0,#8
.L363:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   142      }
	j	.L18
.L17:
	add	d0,#1
.L15:
	jlt.u	d0,#2,.L16

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   143  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   144      return result;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   145  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   146  
.L18:
	j	.L19

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   147  
.L19:
	ret
.L173:
	
__IfxCpu_getIndex_function_end:
	.size	IfxCpu_getIndex,__IfxCpu_getIndex_function_end-IfxCpu_getIndex
.L100:
	; End of function
	
	.sdecl	'.text.IfxCpu.IfxCpu_getRandomValue',code,cluster('IfxCpu_getRandomValue')
	.sect	'.text.IfxCpu.IfxCpu_getRandomValue'
	.align	2
	
	.global	IfxCpu_getRandomValue

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   148  uint32 IfxCpu_getRandomValue(uint32 *seed)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   149  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   150      /*************************************************************************
; Function IfxCpu_getRandomValue
.L68:
IfxCpu_getRandomValue:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   151       * the choice of a and m is important for a long period of the LCG
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   152       * with a =  279470273 and
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   153       *       m = 4294967291
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   154       * a maximum period of 2^32-5 is given
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   155       * values for a:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   156       * 0x5EB0A82F = 1588635695
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   157       * 0x48E7211F = 1223106847
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   158       * 0x10a860c1 =  279470273
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   159       ***************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   160      uint32 x = *seed;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   161  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   162      /* a seed of 0 is not allowed, and therefore will be changed to a valid value */
	ld.w	d0,[a4]
.L277:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   163      if (x == 0)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   164      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   165          x = 42;
	jne	d0,#0,.L20
.L430:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   166      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   167  
	mov	d0,#42
.L20:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   168      uint32 a = 0x10a860c1;  // 279470273
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   169      uint32 m = 0xfffffffb;  // 4294967291
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   170      uint32 result;
	mov	d1,#24769
.L278:
	addih	d1,d1,#4264
.L431:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   171  
	mov	d2,#-5
.L233:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   378      __asm("      mul.u     e14,%1,%2      ; d15 = Eh; d14 = El    \n"      (inlined)
	
	      mul.u     e14,d1,d0      ; d15 = Eh; d14 = El    
        mov       d12,d14        ;   e12 = El            
        mov       d13,#0         ;                       
        madd.u    e14,e12,d15,#5 ; e14 = El + 5 * d15    
 1:     jge.u     d14,d2,2n      ;                       
        jz        d15,3n         ;                       
 2:     subx      d14,d14,d2     ;  e12=e12-m            
        subc      d15,d15,d13    ; d13=d13-0             
        loopu     1p             ;                       
 3:     mov       d2,d14         ;                       

.L279:
	
.L432:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   389      return result;      (inlined)
	j	.L21

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   390  }      (inlined)
.L21:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   172      //__asm(a,m,x,tmp1,tmp2              );
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   173      //EhEl = a * x;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   174      //result = e14 %  m;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   175      // %0 result
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   176      // %1 a
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   177      // %2 x
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   178      // %3 m
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   179      result = IfxCpu_getRandomVal(a, x, m);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   180  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   181      *seed  = result; // to simplify seed passing
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   182  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   183      return result;
	st.w	[a4],d2
.L234:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   184  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   185  
	j	.L22

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   186  
.L22:
	ret
.L225:
	
__IfxCpu_getRandomValue_function_end:
	.size	IfxCpu_getRandomValue,__IfxCpu_getRandomValue_function_end-IfxCpu_getRandomValue
.L140:
	; End of function
	
	.sdecl	'.text.IfxCpu.IfxCpu_getRandomValueWithinRange',code,cluster('IfxCpu_getRandomValueWithinRange')
	.sect	'.text.IfxCpu.IfxCpu_getRandomValueWithinRange'
	.align	2
	
	.global	IfxCpu_getRandomValueWithinRange

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   187  uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   188  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   189      uint32 new_value = IfxCpu_getRandomValue(seed);
; Function IfxCpu_getRandomValueWithinRange
.L70:
IfxCpu_getRandomValueWithinRange:	.type	func
	mov	d8,d4
.L281:
	mov	d15,d5
.L282:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   190  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   191      /* swap min/max if required */
	call	IfxCpu_getRandomValue
.L280:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   192      if (min > max)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   193      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   194          unsigned swap = max;
	jge.u	d15,d8,.L23
.L248:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   195          max = min;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   196          min = swap;
	mov	d0,d15
.L285:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   197      }
	mov	d15,d8
.L437:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   198  
	mov	d8,d0
.L23:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   199      /* special case */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   200      if ((min == 0) && (max == 0xffffffff))
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   201      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   202          return new_value;
	jne	d8,#0,.L24
.L438:
	jne	d15,#-1,.L25
.L439:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   203      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   204  
	j	.L26
.L25:
.L24:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   205      /* return value within range */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   206      return (new_value % (max - min + 1)) + min;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   207  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   208  
	sub	d15,d8
.L283:
	add	d15,#1
.L440:
	div.u	e0,d2,d15
.L441:
	add	d2,d1,d8
.L284:
	j	.L27

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   209  
.L27:
.L26:
	ret
.L243:
	
__IfxCpu_getRandomValueWithinRange_function_end:
	.size	IfxCpu_getRandomValueWithinRange,__IfxCpu_getRandomValueWithinRange_function_end-IfxCpu_getRandomValueWithinRange
.L145:
	; End of function
	
	.sdecl	'.text.IfxCpu.IfxCpu_releaseMutex',code,cluster('IfxCpu_releaseMutex')
	.sect	'.text.IfxCpu.IfxCpu_releaseMutex'
	.align	2
	
	.global	IfxCpu_releaseMutex

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   210  void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   211  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   212      /*Reset the SpinLock*/
; Function IfxCpu_releaseMutex
.L72:
IfxCpu_releaseMutex:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   213      *lock = 0;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   214  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   215  
	mov	d15,#0
.L406:
	st.w	[a4],d15
.L407:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   216  
	ret
.L214:
	
__IfxCpu_releaseMutex_function_end:
	.size	IfxCpu_releaseMutex,__IfxCpu_releaseMutex_function_end-IfxCpu_releaseMutex
.L125:
	; End of function
	
	.sdecl	'.text.IfxCpu.IfxCpu_resetSpinLock',code,cluster('IfxCpu_resetSpinLock')
	.sect	'.text.IfxCpu.IfxCpu_resetSpinLock'
	.align	2
	
	.global	IfxCpu_resetSpinLock

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   217  void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   218  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   219      /*Reset the SpinLock*/
; Function IfxCpu_resetSpinLock
.L74:
IfxCpu_resetSpinLock:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   220      *lock = 0;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   221  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   222  
	mov	d15,#0
.L412:
	st.w	[a4],d15
.L413:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   223  
	ret
.L216:
	
__IfxCpu_resetSpinLock_function_end:
	.size	IfxCpu_resetSpinLock,__IfxCpu_resetSpinLock_function_end-IfxCpu_resetSpinLock
.L130:
	; End of function
	
	.sdecl	'.text.IfxCpu.IfxCpu_setCoreMode',code,cluster('IfxCpu_setCoreMode')
	.sect	'.text.IfxCpu.IfxCpu_setCoreMode'
	.align	2
	
	.global	IfxCpu_setCoreMode

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   224  boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   225  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   226      uint8              reqslp;
; Function IfxCpu_setCoreMode
.L76:
IfxCpu_setCoreMode:	.type	func
	mov.aa	a15,a4
.L287:
	mov	d15,d4
.L289:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   227      boolean            retValue;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   228      IfxCpu_ResourceCpu index = IfxCpu_getIndex(cpu);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   229  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   230      /*Modes such as HALT, SLEEP and STBY are not handled at CPU level */
	mov.aa	a4,a15
	call	IfxCpu_getIndex
.L286:
	mov	d8,d2
.L292:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   231      retValue = ((mode == IfxCpu_CoreMode_halt) || (mode == IfxCpu_CoreMode_sleep)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   232                  || (mode == IfxCpu_CoreMode_stby)) ? FALSE : TRUE;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   233  
	jeq	d15,#0,.L28
.L368:
	jeq	d15,#3,.L29
.L369:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   234      reqslp = (mode == IfxCpu_CoreMode_idle) ? IfxScu_PMCSR_REQSLP_Idle : IfxScu_PMCSR_REQSLP_Run;
	jne	d15,#4,.L30
.L29:
.L28:
	mov	d9,#0
.L293:
	j	.L31
.L30:
	mov	d9,#1
.L31:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   235  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   236      if (retValue == TRUE)
	jne	d15,#2,.L32
.L370:
	mov	d10,#1
.L294:
	j	.L33
.L32:
	mov	d10,#0
.L33:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   237      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   238          /*Check if the same core is requesting to change the core run mode */
	jne	d9,#1,.L34
.L185:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     1  /**
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     5   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_1_11_0
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     8   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     9   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    11   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    12   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    17  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    18  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    20  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    26   * Software is furnished to do so, all subject to the following:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    27  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    33   * language processor.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    34  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    42  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    43   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    44   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    45   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    46   * \ingroup IfxLld_Cpu_Std
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    47   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    48   * \ingroup IfxLld_Cpu_Std
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    49   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    50   * \ingroup IfxLld_Cpu_Std
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    51   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    52   * \ingroup IfxLld_Cpu_Std
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    53   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    54   * \ingroup IfxLld_Cpu_Std
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    55   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    56   * \ingroup IfxLld_Cpu_Std
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    57   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    58   * \ingroup IfxLld_Cpu_Std
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    59   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    60   * \ingroup IfxLld_Cpu_Std
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    61   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    62  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    63  #ifndef IFXCPU_H
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    64  #define IFXCPU_H 1
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    65  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    66  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    67  /*----------------------------------Includes----------------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    68  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    69  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    70  #include "_Impl/IfxCpu_cfg.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    71  #include "IfxSrc_reg.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    72  #include "IfxScu_reg.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    73  #include "IfxStm_reg.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    74  #include "_Impl/IfxScu_cfg.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    75  #include "_Utilities/Ifx_Assert.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    76  #include "Scu/Std/IfxScuWdt.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    77  #include "Scu/Std/IfxScuCcu.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    78  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    79  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    80  /*-----------------------------------Macros-----------------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    81  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    82  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    83  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    84   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    85   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    86   * the CPU number.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    87   * Example usage:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    88   *  \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    89   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    90   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    91   *  \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    92   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    93  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    94  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    95  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    96   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    97   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    98   * the CPU number.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    99   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   100   *   Example usage:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   101   *   \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   102   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   103   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   104   *   \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   105   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   106  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   107  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   108  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   109  /*------------------------------Type Definitions------------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   110  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   111  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   112  /** \brief Lock type Spin lock
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   113   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   114  typedef unsigned int IfxCpu_spinLock;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   115  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   116  /** \brief Lock type Mutex lock
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   117   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   118  typedef unsigned int IfxCpu_mutexLock;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   119  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   120  /** \brief Event used for synchronisation.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   121   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   122  typedef unsigned int IfxCpu_syncEvent;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   123  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   124  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   125  /*--------------------------------Enumerations--------------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   126  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   127  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   128  /** \addtogroup IfxLld_Cpu_Std_Enum
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   129   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   130  /** \brief Enumeration for the Cpu mode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   131   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   132  typedef enum
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   133  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   134      IfxCpu_CoreMode_halt,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   135      IfxCpu_CoreMode_run,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   136      IfxCpu_CoreMode_idle,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   137      IfxCpu_CoreMode_sleep,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   138      IfxCpu_CoreMode_stby,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   139      IfxCpu_CoreMode_unknown
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   140  } IfxCpu_CoreMode;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   141  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   142  /** \brief Performance conunter modes
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   143   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   144  typedef enum
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   145  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   146      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   147      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   148  } IfxCpu_CounterMode;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   149  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   150  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   151  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   152  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   153  /*-----------------------------Data Structures--------------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   154  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   155  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   156  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   157   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   158  /** \brief counter
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   159   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   160  typedef struct
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   161  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   162      uint32  counter;        /**< \brief Counter value */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   163      boolean overlfow;       /**< \brief sticky overlfow */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   164  } IfxCpu_Counter;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   165  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   166  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   167  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   168  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   169   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   170  /** \brief Performance counter result
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   171   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   172  typedef struct
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   173  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   174      IfxCpu_Counter instruction;       /**< \brief Instruction counter */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   175      IfxCpu_Counter clock;             /**< \brief CPU clock counter */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   176      IfxCpu_Counter counter1;          /**< \brief Multi counter 1 */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   177      IfxCpu_Counter counter2;          /**< \brief Multi counter 2 */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   178      IfxCpu_Counter counter3;          /**< \brief Multi counter 3 */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   179  } IfxCpu_Perf;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   180  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   181  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   182  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   183  /** \addtogroup IfxLld_Cpu_Std_Core
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   184   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   185  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   186  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   187  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   188  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   189  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   190  /** \brief API to get the address for CPU HW module register memory map
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   191   * \param cpu Resource index of the CPU
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   192   * \return CPU module register address
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   193   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   194  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   195  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   196  /** \brief API to get core id of the CPU of the caller.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   197   * Caution: Core id of the cpu's may not be continguous and shouldn't be used to index cpu.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   198   * Use IfxCpu_getCoreIndex() to get cpu no.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   199   * \return Resource index of the CPU.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   200   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   201  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   202  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   203  /** \brief API to get cpu index of the caller CPU.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   204   * Note: This api can be used whereever cpu no/index is needed.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   205   * \return Resource index of the CPU.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   206   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   207  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   208  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   209  /** \brief API to initialize the context save area of the CPU where this is called.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   210   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   211   * This API can initialize the CSA of the host CPU where this API is called. This API
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   212   * shall not be used to initialize the CSA of another CPU
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   213   * \param csaBegin Pointer to start of context save area
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   214   * \param csaEnd Pointer to end of context save area
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   215   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   216   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   217  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   218  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   219  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   220   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   221   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   222  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   223  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   224  /** \brief Triggers Software Reset
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   225   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   226   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   227  IFX_INLINE void IfxCpu_triggerSwReset(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   228  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   229  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   230  /*-------------------------Global Function Prototypes-------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   231  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   232  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   233  /** \brief API to get current mode of CPU
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   234   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   235   * \return Current mode of the CPU
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   236   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   237  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   238  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   239  /** \brief API to get current mode of CPU
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   240   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   241   * \return Resource index of the CPU
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   242   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   243  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   244  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   245  /** \brief API to set mode of the CPU
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   246   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   247   * \param mode CPU mode to be set by this API
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   248   * \return Success status of the activity (setting the core mode).
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   249   * \retval TRUE: If the activity successfully be performed.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   250   * \retval FALSE: If the activity can't be performed.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   251   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   252  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   253  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   254  /** \brief API to set the program counter for the CPU specified.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   255   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   256   * \param programCounter Program counter value to be set
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   257   * \return success status of the activity (setting program counter value).
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   258   * \retval TRUE: If the activity successfully be performed.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   259   * \retval FALSE: If the activity can't be performed
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   260   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   261  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   262  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   263  /** \brief API to set the program counter for the CPU specified and start the CPU
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   264   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   265   * \param programCounter Program counter value to start the CPU
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   266   * \return success status of the activity (setting program counter value).
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   267   * \retval TRUE: If the activity successfully be performed.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   268   * \retval FALSE: If the activity can't be performed
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   269   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   270  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   271  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   272  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   273  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   274  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   275   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   276  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   277  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   278  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   279  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   280  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   281  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   282   * This API provides the status of CPU where this API is called
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   283   * \return Status of global interrupt enable bit.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   284   * \retval TRUE: Global interrupts enabled.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   285   * \retval FALSE: Global interrupts disabled
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   286   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   287  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   288  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   289  /** \brief API to disable global interrupt and return the previous status.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   290   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   291   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   292   * used for this activity towards other CPUs
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   293   * \return Previous status of global interrupt enable bit.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   294   * \retval TRUE: Previously, global interrupts enabled.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   295   * \retval FALSE: Previously, global interrupts disabled
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   296   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   297  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   298  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   299  /** \brief API to enable global interrupt.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   300   * This API simply enables the global interrupt.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   301   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   302   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   303  IFX_INLINE void IfxCpu_enableInterrupts(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   304  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   305  /** \brief Disable the Global Interrupt
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   306   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   307   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   308  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   309  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   310  /** \brief API to restore global interrupt with that of the passed parameter.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   311   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   312   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   313   * used for this activity towards other CPUs
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   314   * \param enabled Previous status of the global interrupt enable bit
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   315   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   316   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   317  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   318  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   319  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   320  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   321  /** \addtogroup IfxLld_Cpu_Std_Cache
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   322   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   323  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   324  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   325  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   326  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   327  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   328  /** \brief API to enable/ disable the data cacheability for selected segments
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   329   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   330   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   331   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   332   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   333   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   334   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   335  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   336  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   337  /** \brief API to enable/ disable the instruction cacheability for selected segments
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   338   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   339   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   340   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   341   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   342   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   343   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   344  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   345  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   346  /** \brief API to invalidate the program cache
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   347   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   348   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   349  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   350  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   351  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   352   * \param address Address
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   353   * \return Status TRUE/FALSE
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   354   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   355  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   356  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   357  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   358   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   359   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   360   * used for this activity towards other CPUs
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   361   * \param enable Command to enable or bypass the data cache
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   362   * TRUE: Enable the data cache.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   363   * FALSE: Bypass the data cache.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   364   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   365   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   366  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   367  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   368  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   369   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   370   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   371   * used for this activity towards other CPUs
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   372   * \param enable Command to enable or bypass the program cache.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   373   * TRUE: Enable the program cache.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   374   * FALSE: Bypass the program cache
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   375   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   376   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   377  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   378  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   379  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   380  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   381  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   382   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   383  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   384  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   385  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   386  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   387  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   388  /** \brief API to read the clock counter for the CPU which calls this API.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   389   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   390   * This API can be used to read clock counter of only the caller CPU. It cannot be
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   391   * used for this activity towards other CPUs.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   392   * \return Counter value. 0 to 0x7FFFFFFF.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   393   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   394  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   395  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   396  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   397   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   398   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   399   * It cannot be used for this activity towards other CPUs.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   400   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   401   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   402   * reading the counter
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   403   * \return Status of sticky overflow bit.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   404   * \retval TRUE: Sticky overflow bit is set.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   405   * \retval FALSE: Sticky overflow bit is reset
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   406   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   407  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   408  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   409  /** \brief API to read the instruction counter for the CPU which calls this API.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   410   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   411   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   412   * used for this activity towards other CPUs
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   413   * \return Counter value. 0 to 0x7FFFFFFF.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   414   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   415  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   416  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   417  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   418   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   419   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   420   * It cannot be used for this activity towards other CPUs.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   421   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   422   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   423   * reading the counter
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   424   * \return Status of sticky overflow bit.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   425   * \retval TRUE: Sticky overflow bit is set.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   426   * \retval FALSE: Sticky overflow bit is reset
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   427   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   428  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   429  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   430  /** \brief API to read the performance counter for the CPU which calls this API.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   431   * \param address Address
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   432   * \return counter value
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   433   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   434  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   435  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   436  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   437   * This is generic function to get sticky overflow bit of any performance counters
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   438   * \param address Address
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   439   * \return Status
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   440   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   441  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   442  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   443  /** \brief Reset and start instruction, clock and multi counters
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   444   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   445   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   446   * \param mode Counter mode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   447   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   448   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   449  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   450  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   451  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   452   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   453   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   454   * used for this activity towards other CPUs.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   455   * \param enable enable Command to enable or disable the performance counter.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   456   * TRUE: Enable the performance counter.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   457   * FALSE: Disable the performance counter
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   458   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   459   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   460  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   461  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   462  #if !((defined(__cplusplus)) && (defined(__TASKING__)))
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   463  /** \brief Stop instruction and clock counters, return their values
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   464   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   465   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   466   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   467   * \return Performance counter result
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   468   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   469  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   470  #endif
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   471  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   472  /** \brief API to update clock counter for the CPU which calls this API.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   473   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   474   * This API can be used to update clock counter of only the caller CPU. It cannot be
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   475   * used for this activity towards other CPUs.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   476   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   477   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   478   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   479  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   480  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   481  /** \brief API to update Instruction counter for the CPU which calls this API.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   482   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   483   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   484   * used for this activity towards other CPUs.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   485   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   486   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   487   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   488  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   489  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   490  /** \brief API to update performance counter for the CPU which calls this API.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   491   * This is generic function to update any of the performance counters
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   492   * \param address Address
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   493   * \param count Count
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   494   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   495   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   496  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   497  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   498  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   499  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   500  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   501   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   502  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   503  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   504  /*-------------------------Global Function Prototypes-------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   505  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   506  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   507  /** \brief API to acquire the mutex (binary semaphore).
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   508   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   509   * This API can be used to acquire/get the mutex.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   510   * \param lock lock pointer
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   511   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   512   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   513   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   514   *    IfxCpu_mutexLock resourceLock;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   515   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   516   *    if (flag){
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   517   *      // critical section
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   518   *      IfxCpu_releaseMutex(&resourceLock);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   519   *    }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   520   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   521   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   522   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   523  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   524  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   525  /** \brief API to unlock the mutex .
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   526   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   527   * This API can be used to unlock the previously acquired mutex
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   528   * \param lock lock pointer
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   529   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   530   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   531   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   532   *    IfxCpu_mutexLock resourceLock;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   533   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   534   *    if (flag){
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   535   *      // critical section
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   536   *      IfxCpu_releaseMutex(&resourceLock);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   537   *    }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   538   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   539   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   540   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   541  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   542  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   543  /** \brief API to unlock the resource .
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   544   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   545   * This API can be used to unlock the previously acquired lock
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   546   * \param lock lock pointer
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   547   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   548   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   549  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   550  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   551  /** \brief API to lock the resource in spin mode with the given timeout.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   552   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   553   * This API can be used to spin lock for the lock for the given timeout period.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   554   * \param lock lock pointer
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   555   * \param timeoutCount loop counter value used for timeout to acquire lock
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   556   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   557   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   558   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   559   *    IfxCpu_spinLock resourceLock;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   560   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   561   *    if (flag){
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   562   *      // critical section
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   563   *      IfxCpu_resetSpinLock(&resourceLock);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   564   *    }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   565   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   566   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   567   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   568  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   569  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   570  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   571  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   572  /** \addtogroup IfxLld_Cpu_Std_Utility
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   573   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   574  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   575  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   576  /*-------------------------Global Function Prototypes-------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   577  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   578  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   579  /** \brief API to get random value
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   580   * \param seed Pointer to seed value
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   581   * \return random value
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   582   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   583  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   584  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   585  /** \brief API to get random value with in the range
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   586   * \param seed Pointer to seed value
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   587   * \param min minimum range value
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   588   * \param max maximum range value
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   589   * \return random value
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   590   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   591  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   592  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   593  /** \brief This function waits till all the cores have set their corresponding bits in the event. This function along with
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   594   * IfxCpu_emitEvent() are used to achieve the synchronisation between the configured cores. By default
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   595   * "IFXCPU_CFG_ALLCORE_DONE" macro defined for all the cores. In case the user wants to check for
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   596   * synchronisation among the required cores, the macro can be redefined with the value accroing to the
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   597   * CORE_ID register.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   598   * The IfxCpu_emitEvent() is to be used in the Main functions of the Cores where the user wants to check for synchronisation.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   599   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   600   * e.g:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   601   * 1. Check for synchronisation between core 0 and core 5
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   602   * # define 0x41U
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   603   * 2. Check for synchronisation between core 0 to core 5
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   604   * # define 0x5FU
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   605   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   606   * Note:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   607   * Core id values read from CORE_ID register will be as shown below. The value indicates the position of the bit needs to be set while building the macro.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   608   * Core 0: 0
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   609   * Core 1: 1
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   610   * Core 2: 2
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   611   * Core 3: 3
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   612   * Core 4: 4
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   613   * Core 5: 6
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   614   * \param event Synchronous Event
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   615   * \param timeoutMilliSec timeout in millisec
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   616   * \return Error condition
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   617   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   618   * The functions IfxCpu_waitEvent and IfxCpu_emitEvent are used to achieve synchronisation between all cores (i.e individual cores wait till all cores have reached the synchronisation point). The IfxCpu_waitEvent returns 1 incase a timeout occurs.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   619   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   620   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   621   * // Global variable. preferably located in  shared memory.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   622   * IfxCpu_syncEvent event;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   623   * boolean errorVal;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   624   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   625   * // Below code should be repeated in Each core
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   626   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   627   * // Upon reaching Synchonisation point
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   628   * IfxCpu_emitEvent(&event);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   629   * errorVal = IfxCpu_waitEvent(&event, timeoutMilliSec); // timeoutMilliSec is timeout value to wait
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   630   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   631   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   632   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   633   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   634  IFX_EXTERN boolean IfxCpu_waitEvent(IfxCpu_syncEvent *event, uint32 timeoutMilliSec);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   635  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   636  /** \brief This function sets a bit corresponding to the core in the event.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   637   * \param event Synchronous Event
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   638   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   639   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   640   * A coding example can be found in \ref IfxCpu_waitEvent
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   641   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   642   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   643  IFX_EXTERN void IfxCpu_emitEvent(IfxCpu_syncEvent *event);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   644  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   645  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   646  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   647  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   648  /*---------------------Inline Function Implementations------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   649  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   650  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   651  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   652  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   653      Ifx_CPU_ICR reg;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   654      reg.U = __mfcr(CPU_ICR);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   655      return reg.B.IE != 0;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   656  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   657  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   658  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   659  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   660  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   661      boolean enabled;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   662      enabled = IfxCpu_areInterruptsEnabled();
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   663      __disable();
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   664      __nop();
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   665      return enabled;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   666  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   667  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   668  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   669  IFX_INLINE void IfxCpu_enableInterrupts(void)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   670  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   671      __enable();
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   672  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   673  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   674  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   675  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   676  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   677      uint32 cpu_pmaVal;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   678      uint16 checkRestrictionMask;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   679      uint32 coreIndex   = IfxCpu_getCoreIndex();
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   680      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   681  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   682      /*resolve the restrictions*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   683      /*In PMA0 Segment-C and Segment[7-CoreID] must have the same value */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   684      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xC);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   685  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   686      if ((segmentNumberMask & checkRestrictionMask) != 0)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   687      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   688          segmentNumberMask |= checkRestrictionMask;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   689      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   690  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   691      cpu_pmaVal = __mfcr(CPU_PMA0);                                                              /* Read the CPU_PMA0 */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   692  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   693      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   694  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   695      /*The CPU_PMA registers are ENDINIT protected*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   696      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   697      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   698      /*Write to PMA0 register for selecting the cacheability for data cache*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   699      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   700      __mtcr(CPU_PMA0, cpu_pmaVal);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   701      __isync();      /* ISYNC instruction executed immediately following MTCR */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   702      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   703  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   704  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   705  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   706  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   707  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   708      uint32 cpu_pmaVal;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   709      uint16 checkRestrictionMask;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   710      uint32 coreIndex   = IfxCpu_getCoreIndex();
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   711      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   712  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   713      /*resolve the restrictions*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   714      /*In PMA1 Segment-D and Segment[7-CoreID] must have the same value */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   715      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xD);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   716  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   717      if ((segmentNumberMask & checkRestrictionMask) != 0)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   718      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   719          segmentNumberMask |= checkRestrictionMask;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   720      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   721  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   722      cpu_pmaVal = __mfcr(CPU_PMA1);                                                              /* Read the CPU_PMA1 */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   723  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   724      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   725  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   726      /*The CPU_PMA registers are ENDINIT protected*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   727      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   728      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   729      /*Write to PMA1 register for selecting the cacheability for data cache*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   730      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   731      __mtcr(CPU_PMA1, cpu_pmaVal);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   732      __isync();      /* ISYNC instruction executed immediately following MTCR */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   733      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   734  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   735  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   736  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   737  IFX_INLINE void IfxCpu_forceDisableInterrupts(void)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   738  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   739      __disable();
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   740      __nop();
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   741  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   742  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   743  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   744  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   745  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   746      Ifx_CPU *module;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   747  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   748      if (cpu < IfxCpu_ResourceCpu_none)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   749      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   750          module = (Ifx_CPU *)IfxCpu_cfg_indexMap[cpu].module;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   751      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   752      else
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   753      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   754          module = NULL_PTR;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   755      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   756  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   757      return module;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   758  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   759  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   760  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   761  IFX_INLINE uint32 IfxCpu_getClockCounter(void)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   762  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   763      return IfxCpu_getPerformanceCounter(CPU_CCNT);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   764  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   765  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   766  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   767  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   768  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   769      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_CCNT);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   770  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   771  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   772  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   773  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   774  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   775      Ifx_CPU_CORE_ID reg;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   776      reg.U = __mfcr(CPU_CORE_ID);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   777      return (IfxCpu_Id)reg.B.CORE_ID;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   778  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   779  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   780  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   781  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   782  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   783      Ifx_CPU_CORE_ID reg;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   784      reg.U = __mfcr(CPU_CORE_ID);
	mfcr	d15,#65052
.L290:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   785      return (IfxCpu_ResourceCpu)reg.B.CORE_ID;
	and	d15,#7
.L295:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   785      return (IfxCpu_ResourceCpu)reg.B.CORE_ID;      (inlined)
	j	.L35

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   786  }      (inlined)
.L35:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   239  EQSLP_Run;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   240  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   241      if (retValue == TRUE)
	jeq	d15,d8,.L36
.L187:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   242      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   243          /*Check if the same core is requesting to change the core run mode */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   244          if (IfxCpu_getCoreIndex() != index)
	call	IfxScuWdt_getSafetyWatchdogPassword
.L291:
	mov	d15,d2
.L297:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   245          {                       /*Request is for the other core */
	mov	d4,d15
.L296:
	call	IfxScuWdt_clearSafetyEndinit
.L299:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   246              /*To access PMCSR of other CPUs handle the safety EndInit protection */
	mov.aa	a4,a15
.L300:
	call	IfxCpu_getIndex
.L301:
	mul	d0,d2,#4
	mov.a	a2,d0
	movh.a	a3,#61443
	add.a	a3,a2
	lea	a2,[a3]24788
.L371:
	ld.bu	d0,[a2]
	insert	d0,d0,d10,#0,#2
	st.b	[a2],d0
.L372:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   247              uint16 safetyWdtPw = IfxScuWdt_getSafetyWatchdogPassword();
	mov	d4,d15
.L302:
	call	IfxScuWdt_setSafetyEndinit
.L303:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   248              IfxScuWdt_clearSafetyEndinit(safetyWdtPw);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   249              MODULE_SCU.PMCSR[(uint32)IfxCpu_getIndex(cpu)].B.REQSLP = reqslp;
	movh.a	a3,#1
	add.a	a3,a15
	lea	a3,[a3]-768
	ld.w	d15,[a3]
.L298:
	insert	d15,d15,#2,#1,#2
	movh.a	a3,#1
	add.a	a3,a15
	lea	a3,[a3]-768
	st.w	[a3],d15
.L188:
	j	.L37
.L36:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   250              IfxScuWdt_setSafetyEndinit(safetyWdtPw);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   251  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   252              cpu->DBGSR.B.HALT = 2; /*reset the HALT bit, if it is already done it is no harm in writing again */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   253          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   254          else
	call	IfxScuWdt_getCpuWatchdogPassword
.L304:
	mov	d15,d2
.L306:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   255          {                          /*Request is for self, this request normally only for halt, otherwise the core is already running anyway! */
	mov	d4,d15
.L305:
	call	IfxScuWdt_clearCpuEndinit
.L307:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   256              /*To access PMCSR of self handle the cpu EndInit protection */
	mul	d0,d8,#4
	mov.a	a15,d0
.L288:
	movh.a	a3,#61443
	add.a	a3,a15
	lea	a15,[a3]24788
	mul	d0,d8,#4
	mov.a	a2,d0
	movh.a	a3,#61443
	add.a	a3,a2
	lea	a2,[a3]24788
.L373:
	ld.bu	d0,[a2]
.L374:
	insert	d0,d0,d10,#0,#2
	st.b	[a15],d0
.L375:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   257              uint16 cpuWdtPw = IfxScuWdt_getCpuWatchdogPassword();
	mov	d4,d15
.L308:
	call	IfxScuWdt_setCpuEndinit
.L37:
.L34:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   258              IfxScuWdt_clearCpuEndinit(cpuWdtPw);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   259              MODULE_SCU.PMCSR[(uint32)index].B.REQSLP = reqslp;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   260              IfxScuWdt_setCpuEndinit(cpuWdtPw);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   261          }
	mov	d2,d9
	j	.L38

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   262      }
.L38:
	ret
.L179:
	
__IfxCpu_setCoreMode_function_end:
	.size	IfxCpu_setCoreMode,__IfxCpu_setCoreMode_function_end-IfxCpu_setCoreMode
.L105:
	; End of function
	
	.sdecl	'.text.IfxCpu.IfxCpu_setProgramCounter',code,cluster('IfxCpu_setProgramCounter')
	.sect	'.text.IfxCpu.IfxCpu_setProgramCounter'
	.align	2
	
	.global	IfxCpu_setProgramCounter

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   263  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   264      return retValue;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   265  }
; Function IfxCpu_setProgramCounter
.L78:
IfxCpu_setProgramCounter:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   266  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   267  
	mov	d2,#1
.L196:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     1  /**
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     5   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_1_11_0
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     8   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     9   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    11   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    12   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    17  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    18  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    20  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    26   * Software is furnished to do so, all subject to the following:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    27  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    33   * language processor.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    34  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    42  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    43   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    44   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    45   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    46   * \ingroup IfxLld_Cpu_Std
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    47   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    48   * \ingroup IfxLld_Cpu_Std
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    49   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    50   * \ingroup IfxLld_Cpu_Std
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    51   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    52   * \ingroup IfxLld_Cpu_Std
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    53   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    54   * \ingroup IfxLld_Cpu_Std
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    55   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    56   * \ingroup IfxLld_Cpu_Std
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    57   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    58   * \ingroup IfxLld_Cpu_Std
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    59   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    60   * \ingroup IfxLld_Cpu_Std
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    61   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    62  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    63  #ifndef IFXCPU_H
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    64  #define IFXCPU_H 1
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    65  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    66  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    67  /*----------------------------------Includes----------------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    68  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    69  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    70  #include "_Impl/IfxCpu_cfg.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    71  #include "IfxSrc_reg.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    72  #include "IfxScu_reg.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    73  #include "IfxStm_reg.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    74  #include "_Impl/IfxScu_cfg.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    75  #include "_Utilities/Ifx_Assert.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    76  #include "Scu/Std/IfxScuWdt.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    77  #include "Scu/Std/IfxScuCcu.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    78  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    79  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    80  /*-----------------------------------Macros-----------------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    81  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    82  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    83  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    84   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    85   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    86   * the CPU number.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    87   * Example usage:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    88   *  \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    89   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    90   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    91   *  \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    92   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    93  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    94  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    95  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    96   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    97   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    98   * the CPU number.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    99   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   100   *   Example usage:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   101   *   \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   102   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   103   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   104   *   \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   105   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   106  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   107  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   108  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   109  /*------------------------------Type Definitions------------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   110  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   111  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   112  /** \brief Lock type Spin lock
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   113   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   114  typedef unsigned int IfxCpu_spinLock;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   115  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   116  /** \brief Lock type Mutex lock
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   117   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   118  typedef unsigned int IfxCpu_mutexLock;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   119  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   120  /** \brief Event used for synchronisation.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   121   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   122  typedef unsigned int IfxCpu_syncEvent;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   123  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   124  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   125  /*--------------------------------Enumerations--------------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   126  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   127  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   128  /** \addtogroup IfxLld_Cpu_Std_Enum
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   129   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   130  /** \brief Enumeration for the Cpu mode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   131   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   132  typedef enum
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   133  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   134      IfxCpu_CoreMode_halt,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   135      IfxCpu_CoreMode_run,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   136      IfxCpu_CoreMode_idle,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   137      IfxCpu_CoreMode_sleep,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   138      IfxCpu_CoreMode_stby,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   139      IfxCpu_CoreMode_unknown
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   140  } IfxCpu_CoreMode;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   141  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   142  /** \brief Performance conunter modes
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   143   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   144  typedef enum
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   145  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   146      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   147      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   148  } IfxCpu_CounterMode;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   149  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   150  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   151  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   152  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   153  /*-----------------------------Data Structures--------------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   154  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   155  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   156  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   157   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   158  /** \brief counter
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   159   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   160  typedef struct
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   161  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   162      uint32  counter;        /**< \brief Counter value */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   163      boolean overlfow;       /**< \brief sticky overlfow */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   164  } IfxCpu_Counter;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   165  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   166  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   167  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   168  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   169   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   170  /** \brief Performance counter result
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   171   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   172  typedef struct
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   173  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   174      IfxCpu_Counter instruction;       /**< \brief Instruction counter */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   175      IfxCpu_Counter clock;             /**< \brief CPU clock counter */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   176      IfxCpu_Counter counter1;          /**< \brief Multi counter 1 */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   177      IfxCpu_Counter counter2;          /**< \brief Multi counter 2 */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   178      IfxCpu_Counter counter3;          /**< \brief Multi counter 3 */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   179  } IfxCpu_Perf;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   180  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   181  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   182  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   183  /** \addtogroup IfxLld_Cpu_Std_Core
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   184   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   185  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   186  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   187  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   188  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   189  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   190  /** \brief API to get the address for CPU HW module register memory map
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   191   * \param cpu Resource index of the CPU
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   192   * \return CPU module register address
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   193   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   194  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   195  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   196  /** \brief API to get core id of the CPU of the caller.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   197   * Caution: Core id of the cpu's may not be continguous and shouldn't be used to index cpu.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   198   * Use IfxCpu_getCoreIndex() to get cpu no.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   199   * \return Resource index of the CPU.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   200   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   201  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   202  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   203  /** \brief API to get cpu index of the caller CPU.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   204   * Note: This api can be used whereever cpu no/index is needed.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   205   * \return Resource index of the CPU.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   206   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   207  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   208  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   209  /** \brief API to initialize the context save area of the CPU where this is called.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   210   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   211   * This API can initialize the CSA of the host CPU where this API is called. This API
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   212   * shall not be used to initialize the CSA of another CPU
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   213   * \param csaBegin Pointer to start of context save area
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   214   * \param csaEnd Pointer to end of context save area
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   215   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   216   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   217  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   218  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   219  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   220   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   221   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   222  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   223  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   224  /** \brief Triggers Software Reset
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   225   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   226   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   227  IFX_INLINE void IfxCpu_triggerSwReset(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   228  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   229  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   230  /*-------------------------Global Function Prototypes-------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   231  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   232  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   233  /** \brief API to get current mode of CPU
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   234   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   235   * \return Current mode of the CPU
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   236   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   237  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   238  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   239  /** \brief API to get current mode of CPU
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   240   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   241   * \return Resource index of the CPU
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   242   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   243  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   244  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   245  /** \brief API to set mode of the CPU
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   246   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   247   * \param mode CPU mode to be set by this API
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   248   * \return Success status of the activity (setting the core mode).
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   249   * \retval TRUE: If the activity successfully be performed.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   250   * \retval FALSE: If the activity can't be performed.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   251   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   252  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   253  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   254  /** \brief API to set the program counter for the CPU specified.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   255   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   256   * \param programCounter Program counter value to be set
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   257   * \return success status of the activity (setting program counter value).
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   258   * \retval TRUE: If the activity successfully be performed.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   259   * \retval FALSE: If the activity can't be performed
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   260   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   261  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   262  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   263  /** \brief API to set the program counter for the CPU specified and start the CPU
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   264   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   265   * \param programCounter Program counter value to start the CPU
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   266   * \return success status of the activity (setting program counter value).
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   267   * \retval TRUE: If the activity successfully be performed.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   268   * \retval FALSE: If the activity can't be performed
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   269   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   270  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   271  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   272  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   273  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   274  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   275   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   276  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   277  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   278  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   279  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   280  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   281  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   282   * This API provides the status of CPU where this API is called
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   283   * \return Status of global interrupt enable bit.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   284   * \retval TRUE: Global interrupts enabled.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   285   * \retval FALSE: Global interrupts disabled
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   286   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   287  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   288  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   289  /** \brief API to disable global interrupt and return the previous status.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   290   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   291   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   292   * used for this activity towards other CPUs
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   293   * \return Previous status of global interrupt enable bit.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   294   * \retval TRUE: Previously, global interrupts enabled.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   295   * \retval FALSE: Previously, global interrupts disabled
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   296   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   297  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   298  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   299  /** \brief API to enable global interrupt.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   300   * This API simply enables the global interrupt.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   301   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   302   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   303  IFX_INLINE void IfxCpu_enableInterrupts(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   304  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   305  /** \brief Disable the Global Interrupt
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   306   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   307   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   308  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   309  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   310  /** \brief API to restore global interrupt with that of the passed parameter.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   311   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   312   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   313   * used for this activity towards other CPUs
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   314   * \param enabled Previous status of the global interrupt enable bit
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   315   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   316   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   317  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   318  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   319  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   320  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   321  /** \addtogroup IfxLld_Cpu_Std_Cache
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   322   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   323  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   324  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   325  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   326  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   327  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   328  /** \brief API to enable/ disable the data cacheability for selected segments
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   329   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   330   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   331   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   332   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   333   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   334   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   335  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   336  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   337  /** \brief API to enable/ disable the instruction cacheability for selected segments
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   338   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   339   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   340   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   341   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   342   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   343   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   344  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   345  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   346  /** \brief API to invalidate the program cache
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   347   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   348   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   349  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   350  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   351  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   352   * \param address Address
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   353   * \return Status TRUE/FALSE
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   354   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   355  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   356  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   357  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   358   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   359   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   360   * used for this activity towards other CPUs
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   361   * \param enable Command to enable or bypass the data cache
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   362   * TRUE: Enable the data cache.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   363   * FALSE: Bypass the data cache.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   364   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   365   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   366  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   367  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   368  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   369   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   370   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   371   * used for this activity towards other CPUs
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   372   * \param enable Command to enable or bypass the program cache.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   373   * TRUE: Enable the program cache.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   374   * FALSE: Bypass the program cache
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   375   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   376   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   377  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   378  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   379  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   380  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   381  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   382   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   383  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   384  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   385  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   386  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   387  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   388  /** \brief API to read the clock counter for the CPU which calls this API.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   389   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   390   * This API can be used to read clock counter of only the caller CPU. It cannot be
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   391   * used for this activity towards other CPUs.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   392   * \return Counter value. 0 to 0x7FFFFFFF.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   393   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   394  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   395  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   396  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   397   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   398   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   399   * It cannot be used for this activity towards other CPUs.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   400   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   401   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   402   * reading the counter
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   403   * \return Status of sticky overflow bit.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   404   * \retval TRUE: Sticky overflow bit is set.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   405   * \retval FALSE: Sticky overflow bit is reset
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   406   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   407  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   408  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   409  /** \brief API to read the instruction counter for the CPU which calls this API.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   410   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   411   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   412   * used for this activity towards other CPUs
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   413   * \return Counter value. 0 to 0x7FFFFFFF.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   414   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   415  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   416  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   417  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   418   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   419   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   420   * It cannot be used for this activity towards other CPUs.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   421   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   422   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   423   * reading the counter
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   424   * \return Status of sticky overflow bit.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   425   * \retval TRUE: Sticky overflow bit is set.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   426   * \retval FALSE: Sticky overflow bit is reset
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   427   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   428  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   429  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   430  /** \brief API to read the performance counter for the CPU which calls this API.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   431   * \param address Address
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   432   * \return counter value
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   433   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   434  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   435  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   436  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   437   * This is generic function to get sticky overflow bit of any performance counters
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   438   * \param address Address
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   439   * \return Status
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   440   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   441  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   442  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   443  /** \brief Reset and start instruction, clock and multi counters
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   444   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   445   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   446   * \param mode Counter mode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   447   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   448   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   449  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   450  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   451  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   452   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   453   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   454   * used for this activity towards other CPUs.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   455   * \param enable enable Command to enable or disable the performance counter.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   456   * TRUE: Enable the performance counter.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   457   * FALSE: Disable the performance counter
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   458   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   459   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   460  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   461  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   462  #if !((defined(__cplusplus)) && (defined(__TASKING__)))
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   463  /** \brief Stop instruction and clock counters, return their values
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   464   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   465   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   466   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   467   * \return Performance counter result
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   468   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   469  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   470  #endif
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   471  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   472  /** \brief API to update clock counter for the CPU which calls this API.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   473   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   474   * This API can be used to update clock counter of only the caller CPU. It cannot be
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   475   * used for this activity towards other CPUs.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   476   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   477   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   478   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   479  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   480  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   481  /** \brief API to update Instruction counter for the CPU which calls this API.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   482   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   483   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   484   * used for this activity towards other CPUs.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   485   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   486   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   487   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   488  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   489  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   490  /** \brief API to update performance counter for the CPU which calls this API.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   491   * This is generic function to update any of the performance counters
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   492   * \param address Address
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   493   * \param count Count
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   494   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   495   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   496  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   497  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   498  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   499  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   500  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   501   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   502  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   503  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   504  /*-------------------------Global Function Prototypes-------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   505  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   506  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   507  /** \brief API to acquire the mutex (binary semaphore).
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   508   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   509   * This API can be used to acquire/get the mutex.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   510   * \param lock lock pointer
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   511   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   512   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   513   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   514   *    IfxCpu_mutexLock resourceLock;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   515   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   516   *    if (flag){
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   517   *      // critical section
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   518   *      IfxCpu_releaseMutex(&resourceLock);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   519   *    }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   520   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   521   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   522   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   523  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   524  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   525  /** \brief API to unlock the mutex .
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   526   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   527   * This API can be used to unlock the previously acquired mutex
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   528   * \param lock lock pointer
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   529   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   530   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   531   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   532   *    IfxCpu_mutexLock resourceLock;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   533   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   534   *    if (flag){
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   535   *      // critical section
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   536   *      IfxCpu_releaseMutex(&resourceLock);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   537   *    }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   538   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   539   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   540   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   541  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   542  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   543  /** \brief API to unlock the resource .
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   544   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   545   * This API can be used to unlock the previously acquired lock
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   546   * \param lock lock pointer
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   547   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   548   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   549  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   550  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   551  /** \brief API to lock the resource in spin mode with the given timeout.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   552   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   553   * This API can be used to spin lock for the lock for the given timeout period.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   554   * \param lock lock pointer
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   555   * \param timeoutCount loop counter value used for timeout to acquire lock
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   556   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   557   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   558   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   559   *    IfxCpu_spinLock resourceLock;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   560   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   561   *    if (flag){
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   562   *      // critical section
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   563   *      IfxCpu_resetSpinLock(&resourceLock);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   564   *    }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   565   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   566   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   567   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   568  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   569  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   570  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   571  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   572  /** \addtogroup IfxLld_Cpu_Std_Utility
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   573   * \{ */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   574  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   575  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   576  /*-------------------------Global Function Prototypes-------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   577  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   578  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   579  /** \brief API to get random value
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   580   * \param seed Pointer to seed value
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   581   * \return random value
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   582   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   583  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   584  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   585  /** \brief API to get random value with in the range
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   586   * \param seed Pointer to seed value
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   587   * \param min minimum range value
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   588   * \param max maximum range value
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   589   * \return random value
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   590   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   591  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   592  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   593  /** \brief This function waits till all the cores have set their corresponding bits in the event. This function along with
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   594   * IfxCpu_emitEvent() are used to achieve the synchronisation between the configured cores. By default
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   595   * "IFXCPU_CFG_ALLCORE_DONE" macro defined for all the cores. In case the user wants to check for
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   596   * synchronisation among the required cores, the macro can be redefined with the value accroing to the
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   597   * CORE_ID register.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   598   * The IfxCpu_emitEvent() is to be used in the Main functions of the Cores where the user wants to check for synchronisation.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   599   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   600   * e.g:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   601   * 1. Check for synchronisation between core 0 and core 5
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   602   * # define 0x41U
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   603   * 2. Check for synchronisation between core 0 to core 5
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   604   * # define 0x5FU
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   605   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   606   * Note:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   607   * Core id values read from CORE_ID register will be as shown below. The value indicates the position of the bit needs to be set while building the macro.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   608   * Core 0: 0
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   609   * Core 1: 1
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   610   * Core 2: 2
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   611   * Core 3: 3
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   612   * Core 4: 4
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   613   * Core 5: 6
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   614   * \param event Synchronous Event
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   615   * \param timeoutMilliSec timeout in millisec
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   616   * \return Error condition
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   617   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   618   * The functions IfxCpu_waitEvent and IfxCpu_emitEvent are used to achieve synchronisation between all cores (i.e individual cores wait till all cores have reached the synchronisation point). The IfxCpu_waitEvent returns 1 incase a timeout occurs.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   619   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   620   * \code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   621   * // Global variable. preferably located in  shared memory.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   622   * IfxCpu_syncEvent event;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   623   * boolean errorVal;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   624   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   625   * // Below code should be repeated in Each core
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   626   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   627   * // Upon reaching Synchonisation point
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   628   * IfxCpu_emitEvent(&event);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   629   * errorVal = IfxCpu_waitEvent(&event, timeoutMilliSec); // timeoutMilliSec is timeout value to wait
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   630   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   631   * \endcode
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   632   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   633   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   634  IFX_EXTERN boolean IfxCpu_waitEvent(IfxCpu_syncEvent *event, uint32 timeoutMilliSec);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   635  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   636  /** \brief This function sets a bit corresponding to the core in the event.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   637   * \param event Synchronous Event
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   638   * \return None
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   639   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   640   * A coding example can be found in \ref IfxCpu_waitEvent
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   641   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   642   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   643  IFX_EXTERN void IfxCpu_emitEvent(IfxCpu_syncEvent *event);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   644  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   645  /** \} */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   646  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   647  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   648  /*---------------------Inline Function Implementations------------------------*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   649  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   650  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   651  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   652  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   653      Ifx_CPU_ICR reg;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   654      reg.U = __mfcr(CPU_ICR);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   655      return reg.B.IE != 0;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   656  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   657  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   658  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   659  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   660  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   661      boolean enabled;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   662      enabled = IfxCpu_areInterruptsEnabled();
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   663      __disable();
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   664      __nop();
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   665      return enabled;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   666  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   667  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   668  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   669  IFX_INLINE void IfxCpu_enableInterrupts(void)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   670  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   671      __enable();
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   672  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   673  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   674  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   675  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   676  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   677      uint32 cpu_pmaVal;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   678      uint16 checkRestrictionMask;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   679      uint32 coreIndex   = IfxCpu_getCoreIndex();
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   680      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   681  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   682      /*resolve the restrictions*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   683      /*In PMA0 Segment-C and Segment[7-CoreID] must have the same value */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   684      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xC);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   685  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   686      if ((segmentNumberMask & checkRestrictionMask) != 0)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   687      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   688          segmentNumberMask |= checkRestrictionMask;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   689      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   690  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   691      cpu_pmaVal = __mfcr(CPU_PMA0);                                                              /* Read the CPU_PMA0 */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   692  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   693      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   694  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   695      /*The CPU_PMA registers are ENDINIT protected*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   696      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   697      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   698      /*Write to PMA0 register for selecting the cacheability for data cache*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   699      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   700      __mtcr(CPU_PMA0, cpu_pmaVal);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   701      __isync();      /* ISYNC instruction executed immediately following MTCR */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   702      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   703  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   704  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   705  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   706  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   707  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   708      uint32 cpu_pmaVal;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   709      uint16 checkRestrictionMask;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   710      uint32 coreIndex   = IfxCpu_getCoreIndex();
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   711      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   712  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   713      /*resolve the restrictions*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   714      /*In PMA1 Segment-D and Segment[7-CoreID] must have the same value */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   715      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xD);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   716  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   717      if ((segmentNumberMask & checkRestrictionMask) != 0)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   718      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   719          segmentNumberMask |= checkRestrictionMask;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   720      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   721  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   722      cpu_pmaVal = __mfcr(CPU_PMA1);                                                              /* Read the CPU_PMA1 */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   723  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   724      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   725  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   726      /*The CPU_PMA registers are ENDINIT protected*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   727      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   728      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   729      /*Write to PMA1 register for selecting the cacheability for data cache*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   730      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   731      __mtcr(CPU_PMA1, cpu_pmaVal);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   732      __isync();      /* ISYNC instruction executed immediately following MTCR */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   733      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   734  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   735  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   736  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   737  IFX_INLINE void IfxCpu_forceDisableInterrupts(void)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   738  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   739      __disable();
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   740      __nop();
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   741  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   742  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   743  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   744  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   745  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   746      Ifx_CPU *module;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   747  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   748      if (cpu < IfxCpu_ResourceCpu_none)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   749      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   750          module = (Ifx_CPU *)IfxCpu_cfg_indexMap[cpu].module;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   751      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   752      else
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   753      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   754          module = NULL_PTR;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   755      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   756  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   757      return module;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   758  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   759  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   760  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   761  IFX_INLINE uint32 IfxCpu_getClockCounter(void)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   762  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   763      return IfxCpu_getPerformanceCounter(CPU_CCNT);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   764  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   765  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   766  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   767  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   768  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   769      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_CCNT);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   770  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   771  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   772  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   773  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   774  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   775      Ifx_CPU_CORE_ID reg;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   776      reg.U = __mfcr(CPU_CORE_ID);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   777      return (IfxCpu_Id)reg.B.CORE_ID;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   778  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   779  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   780  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   781  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   782  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   783      Ifx_CPU_CORE_ID reg;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   784      reg.U = __mfcr(CPU_CORE_ID);
	mfcr	d15,#65052
.L310:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   785      return (IfxCpu_ResourceCpu)reg.B.CORE_ID;
	and	d15,#7
.L311:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   785      return (IfxCpu_ResourceCpu)reg.B.CORE_ID;      (inlined)
	j	.L39

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   786  }      (inlined)
.L39:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   748      if (cpu < IfxCpu_ResourceCpu_none)      (inlined)
	jge.u	d15,#2,.L40
.L380:
	mul	d15,d15,#8
.L381:
	movh.a	a15,#@his(IfxCpu_cfg_indexMap)
	lea	a15,[a15]@los(IfxCpu_cfg_indexMap)
.L382:
	addsc.a	a15,a15,d15,#0
.L383:
	ld.a	a15,[a15]
.L312:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   750          module = (Ifx_CPU *)IfxCpu_cfg_indexMap[cpu].module;      (inlined)
	j	.L41

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   748      if (cpu < IfxCpu_ResourceCpu_none)      (inlined)
.L40:
	mov.a	a15,#0

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   752      else      (inlined)
.L41:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   757      return module;      (inlined)
	j	.L42

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   758  }      (inlined)
.L42:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   268   reqslp;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   269              IfxScuWdt_setCpuEndinit(cpuWdtPw);
	jne.a	a4,a15,.L43
.L199:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   270          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   271      }
	mov	d2,#0
.L384:
	j	.L44
.L43:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   272  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   273      return retValue;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   274  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   275  
	movh.a	a3,#1
	add.a	a3,a4
	lea	a3,[a3]-504
	ld.w	d15,[a3]
.L385:
	sh	d4,#-1
.L309:
	insert	d15,d15,d4,#1,#31
	movh.a	a3,#1
	add.a	a3,a4
	lea	a3,[a3]-504
	st.w	[a3],d15
.L44:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   276  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   277  boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   278  {
	j	.L45

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   279      boolean retVal = TRUE;
.L45:
	ret
.L192:
	
__IfxCpu_setProgramCounter_function_end:
	.size	IfxCpu_setProgramCounter,__IfxCpu_setProgramCounter_function_end-IfxCpu_setProgramCounter
.L110:
	; End of function
	
	.sdecl	'.text.IfxCpu.IfxCpu_setSpinLock',code,cluster('IfxCpu_setSpinLock')
	.sect	'.text.IfxCpu.IfxCpu_setSpinLock'
	.align	2
	
	.global	IfxCpu_setSpinLock

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   280  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   281      if (cpu == IfxCpu_getAddress(IfxCpu_getCoreIndex()))
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   282      {
; Function IfxCpu_setSpinLock
.L80:
IfxCpu_setSpinLock:	.type	func
	sub.a	a10,#8
.L313:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   283          retVal = FALSE;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   284      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   285      else
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   286      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   287          cpu->PC.B.PC = programCounter >> 1;
	mov	d2,#0

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   288      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   289  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   290      return retVal;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   291  }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   292  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   293  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   294  boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   295  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   296      boolean         retVal;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   297      volatile uint32 spinLockVal;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   298  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   299      retVal = FALSE;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   300  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   301      do
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   302      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   303          spinLockVal = 1UL;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   304          spinLockVal =
.L46:
	mov	d15,#1
.L418:
	st.w	[a10],d15
.L419:
	ld.w	d0,[a10]
	mov	d15,#0
	mov	d1,d15
	cmpswap.w	[a4]0,e0
.L420:
	st.w	[a10],d0
.L421:
	ld.w	d15,[a10]
.L422:
	jne	d15,#0,.L47
.L423:
	mov	d2,#1
.L424:
	j	.L48
.L47:
	add	d4,#-1
.L48:
	jne	d2,#0,.L49
.L425:
	jge.u	d4,#1,.L46
.L49:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   305              (uint32)__cmpAndSwap(((unsigned int *)lock), spinLockVal, 0);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   306  
	j	.L50

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   307          /* Check if the SpinLock WAS set before the attempt to acquire spinlock */
.L50:
	ret
.L219:
	
__IfxCpu_setSpinLock_function_end:
	.size	IfxCpu_setSpinLock,__IfxCpu_setSpinLock_function_end-IfxCpu_setSpinLock
.L135:
	; End of function
	
	.sdecl	'.text.IfxCpu.IfxCpu_startCore',code,cluster('IfxCpu_startCore')
	.sect	'.text.IfxCpu.IfxCpu_startCore'
	.align	2
	
	.global	IfxCpu_startCore

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   308          if (spinLockVal == 0)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   309          {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   310              retVal = TRUE;
; Function IfxCpu_startCore
.L82:
IfxCpu_startCore:	.type	func
	mov.aa	a15,a4
.L315:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   311          }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   312          else
	mov	d15,#1
.L316:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   313          {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   314              timeoutCount--;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   315          }
	mov.aa	a4,a15
	call	IfxCpu_setProgramCounter
.L314:
	and	d15,d2
.L390:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   316      } while ((retVal == FALSE) && (timeoutCount > 0));
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   317  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   318      return retVal;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   319  }
	mov.aa	a4,a15
.L317:
	call	IfxCpu_getCoreMode
.L318:
	jne	d2,#0,.L51
.L391:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   320  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   321  
	mov	d4,#1
	mov.aa	a4,a15
.L319:
	call	IfxCpu_setCoreMode
.L320:
	and	d15,d2
.L51:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   322  boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   323  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   324      boolean retVal = TRUE;
	mov	d2,d15
.L321:
	j	.L52

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   325  
.L52:
	ret
.L204:
	
__IfxCpu_startCore_function_end:
	.size	IfxCpu_startCore,__IfxCpu_startCore_function_end-IfxCpu_startCore
.L115:
	; End of function
	
	.sdecl	'.text.IfxCpu.IfxCpu_waitEvent',code,cluster('IfxCpu_waitEvent')
	.sect	'.text.IfxCpu.IfxCpu_waitEvent'
	.align	2
	
	.global	IfxCpu_waitEvent

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   326      /* Set the PC for Core 1 */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   327      retVal &= IfxCpu_setProgramCounter(cpu, programCounter);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   328      /* Get the mode for Core 1 and set it to RUNNING */
; Function IfxCpu_waitEvent
.L84:
IfxCpu_waitEvent:	.type	func
	mov	d8,d4
.L323:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   329  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   330      /* Core not running already */
	mov.d	d15,a4
.L324:
	insert	d15,d15,#0,#0,#28
.L325:
	movh	d0,#53248
	jne	d15,d0,.L53
	mov.d	d15,a4
.L326:
	insert	d15,d15,#0,#20,#12
.L327:
	insert	d15,d15,#7,#28,#3
	mfcr	d0,#65052
	movh	d1,#4096
	mul	d0,d1
	sub	d15,d0
	j	.L54
.L53:
	mov.d	d15,a4
.L54:
	mov.a	a15,d15
.L328:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   331      if (IfxCpu_getCoreMode(cpu) == IfxCpu_CoreMode_halt)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   332      {
	mov	d9,#0
.L261:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     1  /**
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     2   * \file IfxScuCcu.h
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     3   * \brief SCU  basic functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     4   * \ingroup IfxLld_Scu
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     5   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     6   * \version iLLD_1_0_1_11_0
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     8   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     9   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    10   *                                 IMPORTANT NOTICE
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    11   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    12   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    17  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    18  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    20  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    27  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    33   * language processor.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    34  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    42  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    43   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    44   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    45   * \defgroup IfxLld_Scu SCU
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    46   * \addtogroup IfxLld_Scu
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    47   * \{
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    48   * \defgroup IfxLld_ScuCcu How to use the Scu Clock driver?
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    49   * \addtogroup IfxLld_ScuCcu
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    50   * \{
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    51   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    52   * The Scu Clock control unit driver provides a default configuration for pll and Clock initialisation and set of peripheral clock configuration functions.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    53   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    54   * In the following sections it will be described, how to integrate the driver into the application framework.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    55   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    56   * \section IfxLld_ScuCcu_Std_Preparation Preparation
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    57   * \subsection IfxLld_ScuCcu_Std_Include Include Files
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    58   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    59   * Include following header file into your C code:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    60   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    61   * #include <Scu/Std/IfxScuCcu.h>
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    62   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    63   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    64   * \subsection IfxLld_ScuCcu_Std_Variables Variables
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    65   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    66   * Declare the Clock Configuration variables in your C code:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    67   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    68   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    69   * // used globally
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    70   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    71   * // configuration for the PLL  steps
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    72   * static IfxScuCcu_PllStepsConfig IfxScuCcu_testPllConfigSteps[] = {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    73   *     IFXSCU_CFG_PLL_STEPS
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    74   * };
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    75   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    76   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    77   * // Default configuration for the Clock Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    78   * IfxScuCcu_Config                      IfxScuCcu_testClockConfig = {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    79   *     {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    80   *        sizeof(IfxScuCcu_testPllConfigSteps) / sizeof(IfxScuCcu_PllStepsConfig),
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    81   *        (IfxScuCcu_PllStepsConfig *)IfxScuCcu_testPllConfigSteps,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    82   *        IFXSCU_CFG_PLL_INITIAL_STEP,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    83   *     },
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    84   *     IFXSCU_CFG_CLK_DISTRIBUTION,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    85   *     IFXSCU_CFG_FLASH_WAITSTATE,
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    86   *     IFX_CFG_SCU_XTAL_FREQUENCY
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    87   * };
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    88   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    89   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    90   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    91   * \subsection IfxLld_ScuCcu_Std_Init Module Initialisation
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    92   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    93   * The module initialisation can be done in the same function. Here an example:
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    94   * \code
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    95   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    96   *        // standard PLL & clock initialisation
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    97   *         IfxScuCcu_init(&IfxScuCcu_testClockConfig);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    98   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    99   * \endcode
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   100   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   101   *    The PLL and clocks are now initialised based on the IFXSCU_CFG_XTAL_FREQ and  IFXSCU_CFG_PLL_FREQ values configured in Ifx_Cfg.h.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   102   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   103   * \}
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   104   * \}
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   105   *
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   106   * \defgroup IfxLld_Scu_Std_Ccu Ccu Basic Functionality
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   107   * \ingroup IfxLld_Scu_Std
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   108   * \defgroup IfxLld_Scu_Std_Ccu_Ccu Clock Control Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   109   * \ingroup IfxLld_Scu_Std_Ccu
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   110   * \defgroup IfxLld_Scu_Std_Ccu_Ccu_Operative Clock Control Operative Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   111   * \ingroup IfxLld_Scu_Std_Ccu
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   112   * \defgroup IfxLld_Scu_Std_Ccu_Ccu_Configuration Clock Control Configuration Functions
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   113   * \ingroup IfxLld_Scu_Std_Ccu
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   114   * \defgroup IfxLld_Scu_Std_Ccu_Enum Enumerations
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   115   * \ingroup IfxLld_Scu_Std_Ccu
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   116   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   117  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   118  #ifndef IFXSCUCCU_H
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   119  #define IFXSCUCCU_H 1
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   120  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   121  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   122  /*----------------------------------Includes----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   123  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   124  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   125  #include "_Impl/IfxScu_cfg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   126  #include "Scu/Std/IfxScuWdt.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   127  #include "Cpu/Std/IfxCpu.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   128  #include "IfxStm_reg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   129  #include "IfxScu_reg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   130  #include "IfxFlash_reg.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   131  #include "_PinMap/IfxScu_PinMap.h"
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   132  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   133  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   134  /*-----------------------------------Macros-----------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   135  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   136  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   137  /** \brief Oscillator stability check timeout count
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   138   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   139  #define IFXSCUCCU_OSC_STABLECHK_TIME (640)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   140  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   141  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   142  /*------------------------------Type Definitions------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   143  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   144  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   145  /** \brief Function pointer type for the hooks
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   146   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   147   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   148  typedef void (*IfxScuCcu_PllStepsFunctionHook)(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   149  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   150  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   151  /*--------------------------------Enumerations--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   152  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   153  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   154  /** \addtogroup IfxLld_Scu_Std_Ccu_Enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   155   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   156  /** \brief MODULE_SCU.PLLCON1.B.K1DIV, specifies the K1-Divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   157   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   158  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   159  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   160      IfxScuCcu_K1divider_1 = 0,      /**< \brief K1-Divider 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   161      IfxScuCcu_K1divider_2,          /**< \brief K1-Divider 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   162      IfxScuCcu_K1divider_3,          /**< \brief K1-Divider 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   163      IfxScuCcu_K1divider_4,          /**< \brief K1-Divider 4  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   164      IfxScuCcu_K1divider_5,          /**< \brief K1-Divider 5  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   165      IfxScuCcu_K1divider_6,          /**< \brief K1-Divider 6  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   166      IfxScuCcu_K1divider_7,          /**< \brief K1-Divider 7  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   167      IfxScuCcu_K1divider_8,          /**< \brief K1-Divider 8  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   168      IfxScuCcu_K1divider_9,          /**< \brief K1-Divider 9  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   169      IfxScuCcu_K1divider_10,         /**< \brief K1-Divider 10  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   170      IfxScuCcu_K1divider_11,         /**< \brief K1-Divider 11  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   171      IfxScuCcu_K1divider_12,         /**< \brief K1-Divider 12  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   172      IfxScuCcu_K1divider_13,         /**< \brief K1-Divider 13  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   173      IfxScuCcu_K1divider_14,         /**< \brief K1-Divider 14  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   174      IfxScuCcu_K1divider_15,         /**< \brief K1-Divider 15  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   175      IfxScuCcu_K1divider_16,         /**< \brief K1-Divider 16  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   176      IfxScuCcu_K1divider_17,         /**< \brief K1-Divider 17  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   177      IfxScuCcu_K1divider_18,         /**< \brief K1-Divider 18  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   178      IfxScuCcu_K1divider_19,         /**< \brief K1-Divider 19  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   179      IfxScuCcu_K1divider_20,         /**< \brief K1-Divider 20  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   180      IfxScuCcu_K1divider_21,         /**< \brief K1-Divider 21  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   181      IfxScuCcu_K1divider_22,         /**< \brief K1-Divider 22  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   182      IfxScuCcu_K1divider_23,         /**< \brief K1-Divider 23  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   183      IfxScuCcu_K1divider_24,         /**< \brief K1-Divider 24  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   184      IfxScuCcu_K1divider_25,         /**< \brief K1-Divider 25  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   185      IfxScuCcu_K1divider_26,         /**< \brief K1-Divider 26  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   186      IfxScuCcu_K1divider_27,         /**< \brief K1-Divider 27  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   187      IfxScuCcu_K1divider_28,         /**< \brief K1-Divider 28  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   188      IfxScuCcu_K1divider_29,         /**< \brief K1-Divider 29  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   189      IfxScuCcu_K1divider_30,         /**< \brief K1-Divider 30  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   190      IfxScuCcu_K1divider_31,         /**< \brief K1-Divider 31  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   191      IfxScuCcu_K1divider_32,         /**< \brief K1-Divider 32  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   192      IfxScuCcu_K1divider_33,         /**< \brief K1-Divider 33  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   193      IfxScuCcu_K1divider_34,         /**< \brief K1-Divider 34  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   194      IfxScuCcu_K1divider_35,         /**< \brief K1-Divider 35  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   195      IfxScuCcu_K1divider_36,         /**< \brief K1-Divider 36  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   196      IfxScuCcu_K1divider_37,         /**< \brief K1-Divider 37  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   197      IfxScuCcu_K1divider_38,         /**< \brief K1-Divider 38  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   198      IfxScuCcu_K1divider_39,         /**< \brief K1-Divider 39  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   199      IfxScuCcu_K1divider_40,         /**< \brief K1-Divider 40  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   200      IfxScuCcu_K1divider_41,         /**< \brief K1-Divider 41  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   201      IfxScuCcu_K1divider_42,         /**< \brief K1-Divider 42  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   202      IfxScuCcu_K1divider_43,         /**< \brief K1-Divider 43  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   203      IfxScuCcu_K1divider_44,         /**< \brief K1-Divider 44  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   204      IfxScuCcu_K1divider_45,         /**< \brief K1-Divider 45  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   205      IfxScuCcu_K1divider_46,         /**< \brief K1-Divider 46  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   206      IfxScuCcu_K1divider_47,         /**< \brief K1-Divider 47  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   207      IfxScuCcu_K1divider_48,         /**< \brief K1-Divider 48  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   208      IfxScuCcu_K1divider_49,         /**< \brief K1-Divider 49  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   209      IfxScuCcu_K1divider_50,         /**< \brief K1-Divider 50  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   210      IfxScuCcu_K1divider_51,         /**< \brief K1-Divider 51  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   211      IfxScuCcu_K1divider_52,         /**< \brief K1-Divider 52  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   212      IfxScuCcu_K1divider_53,         /**< \brief K1-Divider 53  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   213      IfxScuCcu_K1divider_54,         /**< \brief K1-Divider 54  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   214      IfxScuCcu_K1divider_55,         /**< \brief K1-Divider 55  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   215      IfxScuCcu_K1divider_56,         /**< \brief K1-Divider 56  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   216      IfxScuCcu_K1divider_57,         /**< \brief K1-Divider 57  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   217      IfxScuCcu_K1divider_58,         /**< \brief K1-Divider 58  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   218      IfxScuCcu_K1divider_59,         /**< \brief K1-Divider 59  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   219      IfxScuCcu_K1divider_60,         /**< \brief K1-Divider 60  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   220      IfxScuCcu_K1divider_61,         /**< \brief K1-Divider 61  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   221      IfxScuCcu_K1divider_62,         /**< \brief K1-Divider 62  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   222      IfxScuCcu_K1divider_63,         /**< \brief K1-Divider 63  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   223      IfxScuCcu_K1divider_64,         /**< \brief K1-Divider 64  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   224      IfxScuCcu_K1divider_65,         /**< \brief K1-Divider 65  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   225      IfxScuCcu_K1divider_66,         /**< \brief K1-Divider 66  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   226      IfxScuCcu_K1divider_67,         /**< \brief K1-Divider 67  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   227      IfxScuCcu_K1divider_68,         /**< \brief K1-Divider 68  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   228      IfxScuCcu_K1divider_69,         /**< \brief K1-Divider 69  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   229      IfxScuCcu_K1divider_70,         /**< \brief K1-Divider 70  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   230      IfxScuCcu_K1divider_71,         /**< \brief K1-Divider 71  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   231      IfxScuCcu_K1divider_72,         /**< \brief K1-Divider 72  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   232      IfxScuCcu_K1divider_73,         /**< \brief K1-Divider 73  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   233      IfxScuCcu_K1divider_74,         /**< \brief K1-Divider 74  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   234      IfxScuCcu_K1divider_75,         /**< \brief K1-Divider 75  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   235      IfxScuCcu_K1divider_76,         /**< \brief K1-Divider 76  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   236      IfxScuCcu_K1divider_77,         /**< \brief K1-Divider 77  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   237      IfxScuCcu_K1divider_78,         /**< \brief K1-Divider 78  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   238      IfxScuCcu_K1divider_79,         /**< \brief K1-Divider 79  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   239      IfxScuCcu_K1divider_80,         /**< \brief K1-Divider 80  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   240      IfxScuCcu_K1divider_81,         /**< \brief K1-Divider 81  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   241      IfxScuCcu_K1divider_82,         /**< \brief K1-Divider 82  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   242      IfxScuCcu_K1divider_83,         /**< \brief K1-Divider 83  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   243      IfxScuCcu_K1divider_84,         /**< \brief K1-Divider 84  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   244      IfxScuCcu_K1divider_85,         /**< \brief K1-Divider 85  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   245      IfxScuCcu_K1divider_86,         /**< \brief K1-Divider 86  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   246      IfxScuCcu_K1divider_87,         /**< \brief K1-Divider 87  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   247      IfxScuCcu_K1divider_88,         /**< \brief K1-Divider 88  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   248      IfxScuCcu_K1divider_89,         /**< \brief K1-Divider 89  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   249      IfxScuCcu_K1divider_90,         /**< \brief K1-Divider 90  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   250      IfxScuCcu_K1divider_91,         /**< \brief K1-Divider 91  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   251      IfxScuCcu_K1divider_92,         /**< \brief K1-Divider 92  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   252      IfxScuCcu_K1divider_93,         /**< \brief K1-Divider 93  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   253      IfxScuCcu_K1divider_94,         /**< \brief K1-Divider 94  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   254      IfxScuCcu_K1divider_95,         /**< \brief K1-Divider 95  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   255      IfxScuCcu_K1divider_96,         /**< \brief K1-Divider 96  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   256      IfxScuCcu_K1divider_97,         /**< \brief K1-Divider 97  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   257      IfxScuCcu_K1divider_98,         /**< \brief K1-Divider 98  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   258      IfxScuCcu_K1divider_99,         /**< \brief K1-Divider 99  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   259      IfxScuCcu_K1divider_100,        /**< \brief K1-Divider 100  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   260      IfxScuCcu_K1divider_101,        /**< \brief K1-Divider 101  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   261      IfxScuCcu_K1divider_102,        /**< \brief K1-Divider 102  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   262      IfxScuCcu_K1divider_103,        /**< \brief K1-Divider 103  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   263      IfxScuCcu_K1divider_104,        /**< \brief K1-Divider 104  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   264      IfxScuCcu_K1divider_105,        /**< \brief K1-Divider 105  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   265      IfxScuCcu_K1divider_106,        /**< \brief K1-Divider 106  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   266      IfxScuCcu_K1divider_107,        /**< \brief K1-Divider 107  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   267      IfxScuCcu_K1divider_108,        /**< \brief K1-Divider 108  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   268      IfxScuCcu_K1divider_109,        /**< \brief K1-Divider 109  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   269      IfxScuCcu_K1divider_110,        /**< \brief K1-Divider 110  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   270      IfxScuCcu_K1divider_111,        /**< \brief K1-Divider 111  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   271      IfxScuCcu_K1divider_112,        /**< \brief K1-Divider 112  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   272      IfxScuCcu_K1divider_113,        /**< \brief K1-Divider 113  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   273      IfxScuCcu_K1divider_114,        /**< \brief K1-Divider 114  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   274      IfxScuCcu_K1divider_115,        /**< \brief K1-Divider 115  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   275      IfxScuCcu_K1divider_116,        /**< \brief K1-Divider 116  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   276      IfxScuCcu_K1divider_117,        /**< \brief K1-Divider 117  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   277      IfxScuCcu_K1divider_118,        /**< \brief K1-Divider 118  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   278      IfxScuCcu_K1divider_119,        /**< \brief K1-Divider 119  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   279      IfxScuCcu_K1divider_120,        /**< \brief K1-Divider 120  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   280      IfxScuCcu_K1divider_121,        /**< \brief K1-Divider 121  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   281      IfxScuCcu_K1divider_122,        /**< \brief K1-Divider 122  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   282      IfxScuCcu_K1divider_123,        /**< \brief K1-Divider 123  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   283      IfxScuCcu_K1divider_124,        /**< \brief K1-Divider 124  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   284      IfxScuCcu_K1divider_125,        /**< \brief K1-Divider 125  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   285      IfxScuCcu_K1divider_126,        /**< \brief K1-Divider 126  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   286      IfxScuCcu_K1divider_127,        /**< \brief K1-Divider 127  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   287      IfxScuCcu_K1divider_128         /**< \brief K1-Divider 128  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   288  } IfxScuCcu_K1divider;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   289  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   290  /** \brief MODULE_SCU.PLLCON1.B.K2DIV, specifies the K2-Divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   291   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   292  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   293  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   294      IfxScuCcu_K2divider_1 = 0,      /**< \brief K2-Divider 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   295      IfxScuCcu_K2divider_2,          /**< \brief K2-Divider 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   296      IfxScuCcu_K2divider_3,          /**< \brief K2-Divider 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   297      IfxScuCcu_K2divider_4,          /**< \brief K2-Divider 4  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   298      IfxScuCcu_K2divider_5,          /**< \brief K2-Divider 5  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   299      IfxScuCcu_K2divider_6,          /**< \brief K2-Divider 6  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   300      IfxScuCcu_K2divider_7,          /**< \brief K2-Divider 7  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   301      IfxScuCcu_K2divider_8,          /**< \brief K2-Divider 8  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   302      IfxScuCcu_K2divider_9,          /**< \brief K2-Divider 9  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   303      IfxScuCcu_K2divider_10,         /**< \brief K2-Divider 10  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   304      IfxScuCcu_K2divider_11,         /**< \brief K2-Divider 11  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   305      IfxScuCcu_K2divider_12,         /**< \brief K2-Divider 12  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   306      IfxScuCcu_K2divider_13,         /**< \brief K2-Divider 13  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   307      IfxScuCcu_K2divider_14,         /**< \brief K2-Divider 14  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   308      IfxScuCcu_K2divider_15,         /**< \brief K2-Divider 15  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   309      IfxScuCcu_K2divider_16,         /**< \brief K2-Divider 16  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   310      IfxScuCcu_K2divider_17,         /**< \brief K2-Divider 17  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   311      IfxScuCcu_K2divider_18,         /**< \brief K2-Divider 18  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   312      IfxScuCcu_K2divider_19,         /**< \brief K2-Divider 19  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   313      IfxScuCcu_K2divider_20,         /**< \brief K2-Divider 20  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   314      IfxScuCcu_K2divider_21,         /**< \brief K2-Divider 21  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   315      IfxScuCcu_K2divider_22,         /**< \brief K2-Divider 22  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   316      IfxScuCcu_K2divider_23,         /**< \brief K2-Divider 23  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   317      IfxScuCcu_K2divider_24,         /**< \brief K2-Divider 24  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   318      IfxScuCcu_K2divider_25,         /**< \brief K2-Divider 25  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   319      IfxScuCcu_K2divider_26,         /**< \brief K2-Divider 26  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   320      IfxScuCcu_K2divider_27,         /**< \brief K2-Divider 27  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   321      IfxScuCcu_K2divider_28,         /**< \brief K2-Divider 28  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   322      IfxScuCcu_K2divider_29,         /**< \brief K2-Divider 29  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   323      IfxScuCcu_K2divider_30,         /**< \brief K2-Divider 30  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   324      IfxScuCcu_K2divider_31,         /**< \brief K2-Divider 31  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   325      IfxScuCcu_K2divider_32,         /**< \brief K2-Divider 32  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   326      IfxScuCcu_K2divider_33,         /**< \brief K2-Divider 33  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   327      IfxScuCcu_K2divider_34,         /**< \brief K2-Divider 34  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   328      IfxScuCcu_K2divider_35,         /**< \brief K2-Divider 35  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   329      IfxScuCcu_K2divider_36,         /**< \brief K2-Divider 36  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   330      IfxScuCcu_K2divider_37,         /**< \brief K2-Divider 37  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   331      IfxScuCcu_K2divider_38,         /**< \brief K2-Divider 38  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   332      IfxScuCcu_K2divider_39,         /**< \brief K2-Divider 39  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   333      IfxScuCcu_K2divider_40,         /**< \brief K2-Divider 40  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   334      IfxScuCcu_K2divider_41,         /**< \brief K2-Divider 41  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   335      IfxScuCcu_K2divider_42,         /**< \brief K2-Divider 42  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   336      IfxScuCcu_K2divider_43,         /**< \brief K2-Divider 43  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   337      IfxScuCcu_K2divider_44,         /**< \brief K2-Divider 44  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   338      IfxScuCcu_K2divider_45,         /**< \brief K2-Divider 45  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   339      IfxScuCcu_K2divider_46,         /**< \brief K2-Divider 46  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   340      IfxScuCcu_K2divider_47,         /**< \brief K2-Divider 47  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   341      IfxScuCcu_K2divider_48,         /**< \brief K2-Divider 48  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   342      IfxScuCcu_K2divider_49,         /**< \brief K2-Divider 49  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   343      IfxScuCcu_K2divider_50,         /**< \brief K2-Divider 50  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   344      IfxScuCcu_K2divider_51,         /**< \brief K2-Divider 51  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   345      IfxScuCcu_K2divider_52,         /**< \brief K2-Divider 52  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   346      IfxScuCcu_K2divider_53,         /**< \brief K2-Divider 53  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   347      IfxScuCcu_K2divider_54,         /**< \brief K2-Divider 54  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   348      IfxScuCcu_K2divider_55,         /**< \brief K2-Divider 55  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   349      IfxScuCcu_K2divider_56,         /**< \brief K2-Divider 56  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   350      IfxScuCcu_K2divider_57,         /**< \brief K2-Divider 57  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   351      IfxScuCcu_K2divider_58,         /**< \brief K2-Divider 58  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   352      IfxScuCcu_K2divider_59,         /**< \brief K2-Divider 59  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   353      IfxScuCcu_K2divider_60,         /**< \brief K2-Divider 60  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   354      IfxScuCcu_K2divider_61,         /**< \brief K2-Divider 61  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   355      IfxScuCcu_K2divider_62,         /**< \brief K2-Divider 62  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   356      IfxScuCcu_K2divider_63,         /**< \brief K2-Divider 63  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   357      IfxScuCcu_K2divider_64,         /**< \brief K2-Divider 64  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   358      IfxScuCcu_K2divider_65,         /**< \brief K2-Divider 65  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   359      IfxScuCcu_K2divider_66,         /**< \brief K2-Divider 66  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   360      IfxScuCcu_K2divider_67,         /**< \brief K2-Divider 67  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   361      IfxScuCcu_K2divider_68,         /**< \brief K2-Divider 68  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   362      IfxScuCcu_K2divider_69,         /**< \brief K2-Divider 69  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   363      IfxScuCcu_K2divider_70,         /**< \brief K2-Divider 70  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   364      IfxScuCcu_K2divider_71,         /**< \brief K2-Divider 71  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   365      IfxScuCcu_K2divider_72,         /**< \brief K2-Divider 72  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   366      IfxScuCcu_K2divider_73,         /**< \brief K2-Divider 73  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   367      IfxScuCcu_K2divider_74,         /**< \brief K2-Divider 74  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   368      IfxScuCcu_K2divider_75,         /**< \brief K2-Divider 75  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   369      IfxScuCcu_K2divider_76,         /**< \brief K2-Divider 76  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   370      IfxScuCcu_K2divider_77,         /**< \brief K2-Divider 77  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   371      IfxScuCcu_K2divider_78,         /**< \brief K2-Divider 78  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   372      IfxScuCcu_K2divider_79,         /**< \brief K2-Divider 79  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   373      IfxScuCcu_K2divider_80,         /**< \brief K2-Divider 80  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   374      IfxScuCcu_K2divider_81,         /**< \brief K2-Divider 81  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   375      IfxScuCcu_K2divider_82,         /**< \brief K2-Divider 82  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   376      IfxScuCcu_K2divider_83,         /**< \brief K2-Divider 83  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   377      IfxScuCcu_K2divider_84,         /**< \brief K2-Divider 84  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   378      IfxScuCcu_K2divider_85,         /**< \brief K2-Divider 85  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   379      IfxScuCcu_K2divider_86,         /**< \brief K2-Divider 86  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   380      IfxScuCcu_K2divider_87,         /**< \brief K2-Divider 87  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   381      IfxScuCcu_K2divider_88,         /**< \brief K2-Divider 88  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   382      IfxScuCcu_K2divider_89,         /**< \brief K2-Divider 89  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   383      IfxScuCcu_K2divider_90,         /**< \brief K2-Divider 90  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   384      IfxScuCcu_K2divider_91,         /**< \brief K2-Divider 91  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   385      IfxScuCcu_K2divider_92,         /**< \brief K2-Divider 92  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   386      IfxScuCcu_K2divider_93,         /**< \brief K2-Divider 93  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   387      IfxScuCcu_K2divider_94,         /**< \brief K2-Divider 94  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   388      IfxScuCcu_K2divider_95,         /**< \brief K2-Divider 95  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   389      IfxScuCcu_K2divider_96,         /**< \brief K2-Divider 96  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   390      IfxScuCcu_K2divider_97,         /**< \brief K2-Divider 97  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   391      IfxScuCcu_K2divider_98,         /**< \brief K2-Divider 98  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   392      IfxScuCcu_K2divider_99,         /**< \brief K2-Divider 99  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   393      IfxScuCcu_K2divider_100,        /**< \brief K2-Divider 100  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   394      IfxScuCcu_K2divider_101,        /**< \brief K2-Divider 101  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   395      IfxScuCcu_K2divider_102,        /**< \brief K2-Divider 102  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   396      IfxScuCcu_K2divider_103,        /**< \brief K2-Divider 103  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   397      IfxScuCcu_K2divider_104,        /**< \brief K2-Divider 104  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   398      IfxScuCcu_K2divider_105,        /**< \brief K2-Divider 105  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   399      IfxScuCcu_K2divider_106,        /**< \brief K2-Divider 106  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   400      IfxScuCcu_K2divider_107,        /**< \brief K2-Divider 107  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   401      IfxScuCcu_K2divider_108,        /**< \brief K2-Divider 108  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   402      IfxScuCcu_K2divider_109,        /**< \brief K2-Divider 109  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   403      IfxScuCcu_K2divider_110,        /**< \brief K2-Divider 110  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   404      IfxScuCcu_K2divider_111,        /**< \brief K2-Divider 111  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   405      IfxScuCcu_K2divider_112,        /**< \brief K2-Divider 112  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   406      IfxScuCcu_K2divider_113,        /**< \brief K2-Divider 113  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   407      IfxScuCcu_K2divider_114,        /**< \brief K2-Divider 114  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   408      IfxScuCcu_K2divider_115,        /**< \brief K2-Divider 115  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   409      IfxScuCcu_K2divider_116,        /**< \brief K2-Divider 116  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   410      IfxScuCcu_K2divider_117,        /**< \brief K2-Divider 117  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   411      IfxScuCcu_K2divider_118,        /**< \brief K2-Divider 118  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   412      IfxScuCcu_K2divider_119,        /**< \brief K2-Divider 119  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   413      IfxScuCcu_K2divider_120,        /**< \brief K2-Divider 120  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   414      IfxScuCcu_K2divider_121,        /**< \brief K2-Divider 121  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   415      IfxScuCcu_K2divider_122,        /**< \brief K2-Divider 122  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   416      IfxScuCcu_K2divider_123,        /**< \brief K2-Divider 123  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   417      IfxScuCcu_K2divider_124,        /**< \brief K2-Divider 124  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   418      IfxScuCcu_K2divider_125,        /**< \brief K2-Divider 125  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   419      IfxScuCcu_K2divider_126,        /**< \brief K2-Divider 126  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   420      IfxScuCcu_K2divider_127,        /**< \brief K2-Divider 127  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   421      IfxScuCcu_K2divider_128         /**< \brief K2-Divider 128  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   422  } IfxScuCcu_K2divider;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   423  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   424  /** \brief MODULE_SCU.PLLCON1.B.K3DIV, specifies the K3-Divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   425   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   426  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   427  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   428      IfxScuCcu_K3divider_1 = 0,      /**< \brief K3-Divider 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   429      IfxScuCcu_K3divider_2,          /**< \brief K3-Divider 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   430      IfxScuCcu_K3divider_3,          /**< \brief K3-Divider 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   431      IfxScuCcu_K3divider_4,          /**< \brief K3-Divider 4  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   432      IfxScuCcu_K3divider_5,          /**< \brief K3-Divider 5  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   433      IfxScuCcu_K3divider_6,          /**< \brief K3-Divider 6  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   434      IfxScuCcu_K3divider_7,          /**< \brief K3-Divider 7  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   435      IfxScuCcu_K3divider_8,          /**< \brief K3-Divider 8  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   436      IfxScuCcu_K3divider_9,          /**< \brief K3-Divider 9  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   437      IfxScuCcu_K3divider_10,         /**< \brief K3-Divider 10  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   438      IfxScuCcu_K3divider_11,         /**< \brief K3-Divider 11  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   439      IfxScuCcu_K3divider_12,         /**< \brief K3-Divider 12  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   440      IfxScuCcu_K3divider_13,         /**< \brief K3-Divider 13  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   441      IfxScuCcu_K3divider_14,         /**< \brief K3-Divider 14  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   442      IfxScuCcu_K3divider_15,         /**< \brief K3-Divider 15  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   443      IfxScuCcu_K3divider_16,         /**< \brief K3-Divider 16  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   444      IfxScuCcu_K3divider_17,         /**< \brief K3-Divider 17  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   445      IfxScuCcu_K3divider_18,         /**< \brief K3-Divider 18  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   446      IfxScuCcu_K3divider_19,         /**< \brief K3-Divider 19  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   447      IfxScuCcu_K3divider_20,         /**< \brief K3-Divider 20  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   448      IfxScuCcu_K3divider_21,         /**< \brief K3-Divider 21  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   449      IfxScuCcu_K3divider_22,         /**< \brief K3-Divider 22  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   450      IfxScuCcu_K3divider_23,         /**< \brief K3-Divider 23  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   451      IfxScuCcu_K3divider_24,         /**< \brief K3-Divider 24  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   452      IfxScuCcu_K3divider_25,         /**< \brief K3-Divider 25  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   453      IfxScuCcu_K3divider_26,         /**< \brief K3-Divider 26  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   454      IfxScuCcu_K3divider_27,         /**< \brief K3-Divider 27  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   455      IfxScuCcu_K3divider_28,         /**< \brief K3-Divider 28  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   456      IfxScuCcu_K3divider_29,         /**< \brief K3-Divider 29  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   457      IfxScuCcu_K3divider_30,         /**< \brief K3-Divider 30  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   458      IfxScuCcu_K3divider_31,         /**< \brief K3-Divider 31  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   459      IfxScuCcu_K3divider_32,         /**< \brief K3-Divider 32  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   460      IfxScuCcu_K3divider_33,         /**< \brief K3-Divider 33  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   461      IfxScuCcu_K3divider_34,         /**< \brief K3-Divider 34  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   462      IfxScuCcu_K3divider_35,         /**< \brief K3-Divider 35  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   463      IfxScuCcu_K3divider_36,         /**< \brief K3-Divider 36  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   464      IfxScuCcu_K3divider_37,         /**< \brief K3-Divider 37  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   465      IfxScuCcu_K3divider_38,         /**< \brief K3-Divider 38  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   466      IfxScuCcu_K3divider_39,         /**< \brief K3-Divider 39  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   467      IfxScuCcu_K3divider_40,         /**< \brief K3-Divider 40  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   468      IfxScuCcu_K3divider_41,         /**< \brief K3-Divider 41  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   469      IfxScuCcu_K3divider_42,         /**< \brief K3-Divider 42  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   470      IfxScuCcu_K3divider_43,         /**< \brief K3-Divider 43  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   471      IfxScuCcu_K3divider_44,         /**< \brief K3-Divider 44  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   472      IfxScuCcu_K3divider_45,         /**< \brief K3-Divider 45  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   473      IfxScuCcu_K3divider_46,         /**< \brief K3-Divider 46  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   474      IfxScuCcu_K3divider_47,         /**< \brief K3-Divider 47  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   475      IfxScuCcu_K3divider_48,         /**< \brief K3-Divider 48  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   476      IfxScuCcu_K3divider_49,         /**< \brief K3-Divider 49  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   477      IfxScuCcu_K3divider_50,         /**< \brief K3-Divider 50  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   478      IfxScuCcu_K3divider_51,         /**< \brief K3-Divider 51  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   479      IfxScuCcu_K3divider_52,         /**< \brief K3-Divider 52  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   480      IfxScuCcu_K3divider_53,         /**< \brief K3-Divider 53  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   481      IfxScuCcu_K3divider_54,         /**< \brief K3-Divider 54  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   482      IfxScuCcu_K3divider_55,         /**< \brief K3-Divider 55  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   483      IfxScuCcu_K3divider_56,         /**< \brief K3-Divider 56  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   484      IfxScuCcu_K3divider_57,         /**< \brief K3-Divider 57  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   485      IfxScuCcu_K3divider_58,         /**< \brief K3-Divider 58  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   486      IfxScuCcu_K3divider_59,         /**< \brief K3-Divider 59  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   487      IfxScuCcu_K3divider_60,         /**< \brief K3-Divider 60  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   488      IfxScuCcu_K3divider_61,         /**< \brief K3-Divider 61  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   489      IfxScuCcu_K3divider_62,         /**< \brief K3-Divider 62  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   490      IfxScuCcu_K3divider_63,         /**< \brief K3-Divider 63  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   491      IfxScuCcu_K3divider_64,         /**< \brief K3-Divider 64  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   492      IfxScuCcu_K3divider_65,         /**< \brief K3-Divider 65  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   493      IfxScuCcu_K3divider_66,         /**< \brief K3-Divider 66  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   494      IfxScuCcu_K3divider_67,         /**< \brief K3-Divider 67  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   495      IfxScuCcu_K3divider_68,         /**< \brief K3-Divider 68  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   496      IfxScuCcu_K3divider_69,         /**< \brief K3-Divider 69  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   497      IfxScuCcu_K3divider_70,         /**< \brief K3-Divider 70  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   498      IfxScuCcu_K3divider_71,         /**< \brief K3-Divider 71  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   499      IfxScuCcu_K3divider_72,         /**< \brief K3-Divider 72  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   500      IfxScuCcu_K3divider_73,         /**< \brief K3-Divider 73  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   501      IfxScuCcu_K3divider_74,         /**< \brief K3-Divider 74  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   502      IfxScuCcu_K3divider_75,         /**< \brief K3-Divider 75  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   503      IfxScuCcu_K3divider_76,         /**< \brief K3-Divider 76  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   504      IfxScuCcu_K3divider_77,         /**< \brief K3-Divider 77  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   505      IfxScuCcu_K3divider_78,         /**< \brief K3-Divider 78  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   506      IfxScuCcu_K3divider_79,         /**< \brief K3-Divider 79  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   507      IfxScuCcu_K3divider_80,         /**< \brief K3-Divider 80  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   508      IfxScuCcu_K3divider_81,         /**< \brief K3-Divider 81  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   509      IfxScuCcu_K3divider_82,         /**< \brief K3-Divider 82  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   510      IfxScuCcu_K3divider_83,         /**< \brief K3-Divider 83  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   511      IfxScuCcu_K3divider_84,         /**< \brief K3-Divider 84  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   512      IfxScuCcu_K3divider_85,         /**< \brief K3-Divider 85  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   513      IfxScuCcu_K3divider_86,         /**< \brief K3-Divider 86  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   514      IfxScuCcu_K3divider_87,         /**< \brief K3-Divider 87  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   515      IfxScuCcu_K3divider_88,         /**< \brief K3-Divider 88  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   516      IfxScuCcu_K3divider_89,         /**< \brief K3-Divider 89  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   517      IfxScuCcu_K3divider_90,         /**< \brief K3-Divider 90  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   518      IfxScuCcu_K3divider_91,         /**< \brief K3-Divider 91  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   519      IfxScuCcu_K3divider_92,         /**< \brief K3-Divider 92  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   520      IfxScuCcu_K3divider_93,         /**< \brief K3-Divider 93  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   521      IfxScuCcu_K3divider_94,         /**< \brief K3-Divider 94  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   522      IfxScuCcu_K3divider_95,         /**< \brief K3-Divider 95  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   523      IfxScuCcu_K3divider_96,         /**< \brief K3-Divider 96  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   524      IfxScuCcu_K3divider_97,         /**< \brief K3-Divider 97  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   525      IfxScuCcu_K3divider_98,         /**< \brief K3-Divider 98  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   526      IfxScuCcu_K3divider_99,         /**< \brief K3-Divider 99  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   527      IfxScuCcu_K3divider_100,        /**< \brief K3-Divider 100  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   528      IfxScuCcu_K3divider_101,        /**< \brief K3-Divider 101  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   529      IfxScuCcu_K3divider_102,        /**< \brief K3-Divider 102  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   530      IfxScuCcu_K3divider_103,        /**< \brief K3-Divider 103  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   531      IfxScuCcu_K3divider_104,        /**< \brief K3-Divider 104  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   532      IfxScuCcu_K3divider_105,        /**< \brief K3-Divider 105  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   533      IfxScuCcu_K3divider_106,        /**< \brief K3-Divider 106  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   534      IfxScuCcu_K3divider_107,        /**< \brief K3-Divider 107  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   535      IfxScuCcu_K3divider_108,        /**< \brief K3-Divider 108  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   536      IfxScuCcu_K3divider_109,        /**< \brief K3-Divider 109  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   537      IfxScuCcu_K3divider_110,        /**< \brief K3-Divider 110  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   538      IfxScuCcu_K3divider_111,        /**< \brief K3-Divider 111  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   539      IfxScuCcu_K3divider_112,        /**< \brief K3-Divider 112  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   540      IfxScuCcu_K3divider_113,        /**< \brief K3-Divider 113  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   541      IfxScuCcu_K3divider_114,        /**< \brief K3-Divider 114  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   542      IfxScuCcu_K3divider_115,        /**< \brief K3-Divider 115  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   543      IfxScuCcu_K3divider_116,        /**< \brief K3-Divider 116  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   544      IfxScuCcu_K3divider_117,        /**< \brief K3-Divider 117  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   545      IfxScuCcu_K3divider_118,        /**< \brief K3-Divider 118  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   546      IfxScuCcu_K3divider_119,        /**< \brief K3-Divider 119  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   547      IfxScuCcu_K3divider_120,        /**< \brief K3-Divider 120  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   548      IfxScuCcu_K3divider_121,        /**< \brief K3-Divider 121  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   549      IfxScuCcu_K3divider_122,        /**< \brief K3-Divider 122  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   550      IfxScuCcu_K3divider_123,        /**< \brief K3-Divider 123  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   551      IfxScuCcu_K3divider_124,        /**< \brief K3-Divider 124  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   552      IfxScuCcu_K3divider_125,        /**< \brief K3-Divider 125  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   553      IfxScuCcu_K3divider_126,        /**< \brief K3-Divider 126  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   554      IfxScuCcu_K3divider_127,        /**< \brief K3-Divider 127  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   555      IfxScuCcu_K3divider_128         /**< \brief K3-Divider 128  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   556  } IfxScuCcu_K3divider;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   557  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   558  /** \brief MODULE_SCU.PLLCON0.B.NDIV, specifies the N-Divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   559   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   560  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   561  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   562      IfxScuCcu_Ndivider_1 = 0,      /**< \brief  N-divider 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   563      IfxScuCcu_Ndivider_2,          /**< \brief  N-divider 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   564      IfxScuCcu_Ndivider_3,          /**< \brief  N-divider 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   565      IfxScuCcu_Ndivider_4,          /**< \brief  N-divider 4  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   566      IfxScuCcu_Ndivider_5,          /**< \brief  N-divider 5  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   567      IfxScuCcu_Ndivider_6,          /**< \brief  N-divider 6  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   568      IfxScuCcu_Ndivider_7,          /**< \brief  N-divider 7  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   569      IfxScuCcu_Ndivider_8,          /**< \brief  N-divider 8  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   570      IfxScuCcu_Ndivider_9,          /**< \brief  N-divider 9  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   571      IfxScuCcu_Ndivider_10,         /**< \brief  N-divider 10  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   572      IfxScuCcu_Ndivider_11,         /**< \brief  N-divider 11  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   573      IfxScuCcu_Ndivider_12,         /**< \brief  N-divider 12  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   574      IfxScuCcu_Ndivider_13,         /**< \brief  N-divider 13  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   575      IfxScuCcu_Ndivider_14,         /**< \brief  N-divider 14  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   576      IfxScuCcu_Ndivider_15,         /**< \brief  N-divider 15  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   577      IfxScuCcu_Ndivider_16,         /**< \brief  N-divider 16  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   578      IfxScuCcu_Ndivider_17,         /**< \brief  N-divider 17  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   579      IfxScuCcu_Ndivider_18,         /**< \brief  N-divider 18  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   580      IfxScuCcu_Ndivider_19,         /**< \brief  N-divider 19  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   581      IfxScuCcu_Ndivider_20,         /**< \brief  N-divider 20  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   582      IfxScuCcu_Ndivider_21,         /**< \brief  N-divider 21  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   583      IfxScuCcu_Ndivider_22,         /**< \brief  N-divider 22  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   584      IfxScuCcu_Ndivider_23,         /**< \brief  N-divider 23  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   585      IfxScuCcu_Ndivider_24,         /**< \brief  N-divider 24  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   586      IfxScuCcu_Ndivider_25,         /**< \brief  N-divider 25  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   587      IfxScuCcu_Ndivider_26,         /**< \brief  N-divider 26  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   588      IfxScuCcu_Ndivider_27,         /**< \brief  N-divider 27  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   589      IfxScuCcu_Ndivider_28,         /**< \brief  N-divider 28  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   590      IfxScuCcu_Ndivider_29,         /**< \brief  N-divider 29  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   591      IfxScuCcu_Ndivider_30,         /**< \brief  N-divider 30  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   592      IfxScuCcu_Ndivider_31,         /**< \brief  N-divider 31  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   593      IfxScuCcu_Ndivider_32,         /**< \brief  N-divider 32  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   594      IfxScuCcu_Ndivider_33,         /**< \brief  N-divider 33  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   595      IfxScuCcu_Ndivider_34,         /**< \brief  N-divider 34  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   596      IfxScuCcu_Ndivider_35,         /**< \brief  N-divider 35  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   597      IfxScuCcu_Ndivider_36,         /**< \brief  N-divider 36  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   598      IfxScuCcu_Ndivider_37,         /**< \brief  N-divider 37  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   599      IfxScuCcu_Ndivider_38,         /**< \brief  N-divider 38  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   600      IfxScuCcu_Ndivider_39,         /**< \brief  N-divider 39  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   601      IfxScuCcu_Ndivider_40,         /**< \brief  N-divider 40  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   602      IfxScuCcu_Ndivider_41,         /**< \brief  N-divider 41  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   603      IfxScuCcu_Ndivider_42,         /**< \brief  N-divider 42  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   604      IfxScuCcu_Ndivider_43,         /**< \brief  N-divider 43  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   605      IfxScuCcu_Ndivider_44,         /**< \brief  N-divider 44  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   606      IfxScuCcu_Ndivider_45,         /**< \brief  N-divider 45  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   607      IfxScuCcu_Ndivider_46,         /**< \brief  N-divider 46  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   608      IfxScuCcu_Ndivider_47,         /**< \brief  N-divider 47  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   609      IfxScuCcu_Ndivider_48,         /**< \brief  N-divider 48  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   610      IfxScuCcu_Ndivider_49,         /**< \brief  N-divider 49  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   611      IfxScuCcu_Ndivider_50,         /**< \brief  N-divider 50  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   612      IfxScuCcu_Ndivider_51,         /**< \brief  N-divider 51  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   613      IfxScuCcu_Ndivider_52,         /**< \brief  N-divider 52  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   614      IfxScuCcu_Ndivider_53,         /**< \brief  N-divider 53  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   615      IfxScuCcu_Ndivider_54,         /**< \brief  N-divider 54  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   616      IfxScuCcu_Ndivider_55,         /**< \brief  N-divider 55  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   617      IfxScuCcu_Ndivider_56,         /**< \brief  N-divider 56  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   618      IfxScuCcu_Ndivider_57,         /**< \brief  N-divider 57  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   619      IfxScuCcu_Ndivider_58,         /**< \brief  N-divider 58  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   620      IfxScuCcu_Ndivider_59,         /**< \brief  N-divider 59  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   621      IfxScuCcu_Ndivider_60,         /**< \brief  N-divider 60  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   622      IfxScuCcu_Ndivider_61,         /**< \brief  N-divider 61  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   623      IfxScuCcu_Ndivider_62,         /**< \brief  N-divider 62  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   624      IfxScuCcu_Ndivider_63,         /**< \brief  N-divider 63  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   625      IfxScuCcu_Ndivider_64,         /**< \brief  N-divider 64  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   626      IfxScuCcu_Ndivider_65,         /**< \brief  N-divider 65  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   627      IfxScuCcu_Ndivider_66,         /**< \brief  N-divider 66  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   628      IfxScuCcu_Ndivider_67,         /**< \brief  N-divider 67  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   629      IfxScuCcu_Ndivider_68,         /**< \brief  N-divider 68  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   630      IfxScuCcu_Ndivider_69,         /**< \brief  N-divider 69  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   631      IfxScuCcu_Ndivider_70,         /**< \brief  N-divider 70  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   632      IfxScuCcu_Ndivider_71,         /**< \brief  N-divider 71  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   633      IfxScuCcu_Ndivider_72,         /**< \brief  N-divider 72  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   634      IfxScuCcu_Ndivider_73,         /**< \brief  N-divider 73  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   635      IfxScuCcu_Ndivider_74,         /**< \brief  N-divider 74  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   636      IfxScuCcu_Ndivider_75,         /**< \brief  N-divider 75  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   637      IfxScuCcu_Ndivider_76,         /**< \brief  N-divider 76  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   638      IfxScuCcu_Ndivider_77,         /**< \brief  N-divider 77  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   639      IfxScuCcu_Ndivider_78,         /**< \brief  N-divider 78  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   640      IfxScuCcu_Ndivider_79,         /**< \brief  N-divider 79  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   641      IfxScuCcu_Ndivider_80,         /**< \brief  N-divider 80  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   642      IfxScuCcu_Ndivider_81,         /**< \brief  N-divider 81  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   643      IfxScuCcu_Ndivider_82,         /**< \brief  N-divider 82  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   644      IfxScuCcu_Ndivider_83,         /**< \brief  N-divider 83  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   645      IfxScuCcu_Ndivider_84,         /**< \brief  N-divider 84  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   646      IfxScuCcu_Ndivider_85,         /**< \brief  N-divider 85  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   647      IfxScuCcu_Ndivider_86,         /**< \brief  N-divider 86  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   648      IfxScuCcu_Ndivider_87,         /**< \brief  N-divider 87  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   649      IfxScuCcu_Ndivider_88,         /**< \brief  N-divider 88  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   650      IfxScuCcu_Ndivider_89,         /**< \brief  N-divider 89  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   651      IfxScuCcu_Ndivider_90,         /**< \brief  N-divider 90  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   652      IfxScuCcu_Ndivider_91,         /**< \brief  N-divider 91  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   653      IfxScuCcu_Ndivider_92,         /**< \brief  N-divider 92  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   654      IfxScuCcu_Ndivider_93,         /**< \brief  N-divider 93  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   655      IfxScuCcu_Ndivider_94,         /**< \brief  N-divider 94  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   656      IfxScuCcu_Ndivider_95,         /**< \brief  N-divider 95  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   657      IfxScuCcu_Ndivider_96,         /**< \brief  N-divider 96  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   658      IfxScuCcu_Ndivider_97,         /**< \brief  N-divider 97  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   659      IfxScuCcu_Ndivider_98,         /**< \brief  N-divider 98  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   660      IfxScuCcu_Ndivider_99,         /**< \brief  N-divider 99  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   661      IfxScuCcu_Ndivider_100,        /**< \brief  N-divider 100  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   662      IfxScuCcu_Ndivider_101,        /**< \brief  N-divider 101  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   663      IfxScuCcu_Ndivider_102,        /**< \brief  N-divider 102  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   664      IfxScuCcu_Ndivider_103,        /**< \brief  N-divider 103  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   665      IfxScuCcu_Ndivider_104,        /**< \brief  N-divider 104  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   666      IfxScuCcu_Ndivider_105,        /**< \brief  N-divider 105  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   667      IfxScuCcu_Ndivider_106,        /**< \brief  N-divider 106  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   668      IfxScuCcu_Ndivider_107,        /**< \brief  N-divider 107  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   669      IfxScuCcu_Ndivider_108,        /**< \brief  N-divider 108  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   670      IfxScuCcu_Ndivider_109,        /**< \brief  N-divider 109  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   671      IfxScuCcu_Ndivider_110,        /**< \brief  N-divider 110  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   672      IfxScuCcu_Ndivider_111,        /**< \brief  N-divider 111  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   673      IfxScuCcu_Ndivider_112,        /**< \brief  N-divider 112  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   674      IfxScuCcu_Ndivider_113,        /**< \brief  N-divider 113  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   675      IfxScuCcu_Ndivider_114,        /**< \brief  N-divider 114  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   676      IfxScuCcu_Ndivider_115,        /**< \brief  N-divider 115  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   677      IfxScuCcu_Ndivider_116,        /**< \brief  N-divider 116  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   678      IfxScuCcu_Ndivider_117,        /**< \brief  N-divider 117  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   679      IfxScuCcu_Ndivider_118,        /**< \brief  N-divider 118  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   680      IfxScuCcu_Ndivider_119,        /**< \brief  N-divider 119  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   681      IfxScuCcu_Ndivider_120,        /**< \brief  N-divider 120  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   682      IfxScuCcu_Ndivider_121,        /**< \brief  N-divider 121  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   683      IfxScuCcu_Ndivider_122,        /**< \brief  N-divider 122  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   684      IfxScuCcu_Ndivider_123,        /**< \brief  N-divider 123  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   685      IfxScuCcu_Ndivider_124,        /**< \brief  N-divider 124  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   686      IfxScuCcu_Ndivider_125,        /**< \brief  N-divider 125  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   687      IfxScuCcu_Ndivider_126,        /**< \brief  N-divider 126  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   688      IfxScuCcu_Ndivider_127,        /**< \brief  N-divider 127  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   689      IfxScuCcu_Ndivider_128         /**< \brief  N-divider 128  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   690  } IfxScuCcu_Ndivider;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   691  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   692  /** \brief MODULE_SCU.PLLCON0.B.PDIV, specifies the P-Divider
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   693   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   694  typedef enum
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   695  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   696      IfxScuCcu_Pdivider_1 = 0,      /**< \brief  P-divider 1  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   697      IfxScuCcu_Pdivider_2,          /**< \brief  P-divider 2  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   698      IfxScuCcu_Pdivider_3,          /**< \brief  P-divider 3  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   699      IfxScuCcu_Pdivider_4,          /**< \brief  P-divider 4  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   700      IfxScuCcu_Pdivider_5,          /**< \brief  P-divider 5  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   701      IfxScuCcu_Pdivider_6,          /**< \brief  P-divider 6  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   702      IfxScuCcu_Pdivider_7,          /**< \brief  P-divider 7  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   703      IfxScuCcu_Pdivider_8,          /**< \brief  P-divider 8  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   704      IfxScuCcu_Pdivider_9,          /**< \brief  P-divider 9  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   705      IfxScuCcu_Pdivider_10,         /**< \brief  P-divider 10  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   706      IfxScuCcu_Pdivider_11,         /**< \brief  P-divider 11  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   707      IfxScuCcu_Pdivider_12,         /**< \brief  P-divider 12  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   708      IfxScuCcu_Pdivider_13,         /**< \brief  P-divider 13  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   709      IfxScuCcu_Pdivider_14,         /**< \brief  P-divider 14  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   710      IfxScuCcu_Pdivider_15,         /**< \brief  P-divider 15  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   711      IfxScuCcu_Pdivider_16          /**< \brief  P-divider 16  */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   712  } IfxScuCcu_Pdivider;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   713  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   714  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   715  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   716  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   717  /*-----------------------------Data Structures--------------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   718  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   719  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   720  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   721   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   722  /** \brief Configuration structure type for CCUCON registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   723   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   724  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   725  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   726      uint32 value;       /**< \brief CCUCON Register value to be updated. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   727      uint32 mask;        /**< \brief CCUCON Mask to select the bit fields to be updated. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   728  } IfxScuCcu_CcuconRegConfig;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   729  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   730  /** \brief Configuration structure type for the Pll initial step.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   731   * This structure must be used to configure the P, N and K2 dividers for initial step.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   732   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   733  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   734  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   735      uint8   pDivider;        /**< \brief P divider value for basic (initial) step */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   736      uint8   nDivider;        /**< \brief N divider value for basic (initial) step */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   737      uint8   k2Initial;       /**< \brief K2 divider value for basic (initial) step */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   738      float32 waitTime;        /**< \brief Wait time for for basic (initial) step */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   739  } IfxScuCcu_InitialStepConfig;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   740  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   741  /** \brief Configuration structure type for the Pll Steps for current jump control.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   742   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   743  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   744  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   745      uint8                          k2Step;             /**< \brief K2 divider value for this step. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   746      float32                        waitTime;           /**< \brief Wait time for for this step. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   747      IfxScuCcu_PllStepsFunctionHook hookFunction;       /**< \brief Hook function called at the end of this step. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   748  } IfxScuCcu_PllStepsConfig;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   749  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   750  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   751  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   752  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   753   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   754  /** \brief Configuration structure type for all the CCUCON registers to configure clock distribution.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   755   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   756  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   757  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   758      IfxScuCcu_CcuconRegConfig ccucon0;       /**< \brief CCUCON0 Register configuration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   759      IfxScuCcu_CcuconRegConfig ccucon1;       /**< \brief CCUCON1 Register configuration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   760      IfxScuCcu_CcuconRegConfig ccucon2;       /**< \brief CCUCON2 Register configuration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   761      IfxScuCcu_CcuconRegConfig ccucon5;       /**< \brief CCUCON5 Register configuration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   762      IfxScuCcu_CcuconRegConfig ccucon6;       /**< \brief CCUCON6 Register configuration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   763      IfxScuCcu_CcuconRegConfig ccucon7;       /**< \brief CCUCON7 Register configuration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   764  } IfxScuCcu_ClockDistributionConfig;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   765  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   766  /** \brief Configuration structure type for the Flash waitstate configuration.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   767   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   768  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   769  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   770      uint32 value;       /**< \brief FLASH.FCON Register value to be updated. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   771      uint32 mask;        /**< \brief FLASH.FCON Mask to select the bit fields to be updated. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   772  } IfxScuCcu_FlashWaitstateConfig;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   773  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   774  /** \brief Configuration structure type for the System Pll step.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   775   * This structure must be used to configure the P, N and K1 dividers .
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   776   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   777  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   778  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   779      uint8                       numOfPllDividerSteps;       /**< \brief Number of PLL divider steps during clock throttling. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   780      IfxScuCcu_PllStepsConfig   *pllDividerStep;             /**< \brief Pointer to the array of Pll divider step configuration. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   781      IfxScuCcu_InitialStepConfig pllInitialStep;             /**< \brief Configuration of first step which is same as internal osc frequency. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   782  } IfxScuCcu_SysPllConfig;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   783  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   784  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   785  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   786  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   787   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   788  /** \brief Configuration structure SCU module
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   789   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   790  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   791  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   792      IfxScuCcu_SysPllConfig            sysPll;                         /**< \brief System PLL configuration */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   793      IfxScuCcu_ClockDistributionConfig clockDistribution;              /**< \brief Configuration of of bus clocks and other module clock distribution. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   794      IfxScuCcu_FlashWaitstateConfig    flashFconWaitStateConfig;       /**< \brief Configuration of flash waitstate */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   795      uint32                            xtalFrequency;                  /**< \brief Xtal Frequency */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   796  } IfxScuCcu_Config;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   797  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   798  /** \brief Configuration structure for E-ray PLL
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   799   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   800  typedef struct
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   801  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   802      IfxScuCcu_InitialStepConfig pllInitialStep;       /**< \brief Configuration of first step which is same as internal osc frequency. */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   803  } IfxScuCcu_ErayPllConfig;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   804  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   805  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   806  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   807  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Operative
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   808   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   809  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   810  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   811  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   812  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   813  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   814  /** \brief API to get EVR Oscillator frequency.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   815   * This API returns the constant which is specific to the ScuCcu of the controller.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   816   * \return EVR Oscillator frequency (fBACK or fEVR) in Hz.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   817   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   818  IFX_INLINE float32 IfxScuCcu_getEvrFrequency(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   819  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   820  /** \brief API to get actual PLL2 (K3 Divider for ADC clock) frequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   821   * This API returns the  PLL2ERAY frequency based on the K3 divider value in PLLERAYCON and the VCO frequency. This frequency is one of the configurable inputs to ADC clock.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   822   * \return PLL2ERAY (K3 Divider for ADC clock) frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   823   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   824  IFX_INLINE float32 IfxScuCcu_getPll2ErayFrequency(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   825  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   826  /** \brief API to get actual PLL2 (K3 Divider for ADC clock) frequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   827   * This API returns the  PLL2 frequency based on the K3 divider value in PLLCON and the VCO frequency. This frequency is one of the configurable inputs to ADC clock.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   828   * \return PLL2 (K3 Divider for ADC clock) frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   829   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   830  IFX_INLINE float32 IfxScuCcu_getPll2Frequency(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   831  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   832  /** \brief Returns the clock source selection
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   833   * \return Clock source selection
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   834   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   835  IFX_INLINE IfxScu_CCUCON0_CLKSEL IfxScuCcu_getSourceSelection(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   836  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   837  /** \brief API to get STM divider frequency.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   838   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   839   * \return STM frequency (fSTM) in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   840   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   841  IFX_INLINE float32 IfxScuCcu_getStmFrequency(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   842  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   843  /** \brief API to get CAN divider frequency.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   844   * This API returns the fCAN frequency based on the divider value in CCUCON register and fSOURCE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   845   * \return STM frequency (fSTM) in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   846   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   847  IFX_INLINE float32 IfxScuCcu_getCanFrequency(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   848  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   849  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   850  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   851  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   852  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   853  /** \brief API to get BAUD1 divider frequency.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   854   * This API returns the based on the divider value in CCUCON register and the input oscillator.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   855   * \return Baud1 frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   856   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   857  IFX_EXTERN float32 IfxScuCcu_getBaud1Frequency(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   858  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   859  /** \brief API to get BAUD2 divider frequency.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   860   * This API returns the Baud2 frequency based on the divider value in CCUCON register and the fMAX.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   861   * \return Baud2 frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   862   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   863  IFX_EXTERN float32 IfxScuCcu_getBaud2Frequency(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   864  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   865  /** \brief API to get BBB divider frequency.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   866   * This API returns the BBBDivider frequency based on the divider value in CCUCON register and the input oscillator.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   867   * \return BBB frequency (fBBB) in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   868   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   869  IFX_EXTERN float32 IfxScuCcu_getBbbFrequency(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   870  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   871  /** \brief This API returns the Cpu frequency based on the divider value in CCUCON register and fSource frequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   872   * \param cpu CPU number for which effective fCPU is sought
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   873   * \return Cpu[x] frequency in Hz, where x is cpu number passed as parameter
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   874   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   875  IFX_EXTERN float32 IfxScuCcu_getCpuFrequency(const IfxCpu_ResourceCpu cpu);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   876  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   877  /** \brief API to get FSI2 divider frequency in Hz.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   878   * This API returns the fFSI2 frequency based on the divider value in CCUCON register and the input oscillator.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   879   * \return FSI2 frequency (fFSI2) in Hz.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   880   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   881  IFX_EXTERN float32 IfxScuCcu_getFsi2Frequency(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   882  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   883  /** \brief API to get FSI divider frequency in Hz.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   884   * This API returns the fFSI based on the divider value in CCUCON register and the input oscillator.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   885   * \return FSI frequency (fFSI) in Hz.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   886   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   887  IFX_EXTERN float32 IfxScuCcu_getFsiFrequency(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   888  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   889  /** \brief API to get FMAX divider frequency.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   890   * This API returns the fMax frequency based on the divider value in CCUCON register and the input oscillator.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   891   * \return Max frequency (fMAX) in Hz.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   892   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   893  IFX_EXTERN float32 IfxScuCcu_getMaxFrequency(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   894  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   895  /** \brief get source frequency fSOURCE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   896   * This API returns the source frequency based on the configurations with CCUCON register configuration.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   897   * \return Module frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   898   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   899  IFX_EXTERN float32 IfxScuCcu_getModuleFrequency(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   900  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   901  /** \brief API to get Oscillator 0 frequency.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   902   * This API returns the fOsc0 frequency based on the divider value in CCUCON register and the input oscillator.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   903   * \return Osc0 frequency (fOSC0) in Hz.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   904   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   905  IFX_EXTERN float32 IfxScuCcu_getOsc0Frequency(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   906  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   907  /** \brief API to get Oscillator 0 frequency.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   908   * This API returns the fOsc0 frequency based on the divider value in CCUCON register and the input oscillator.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   909   * \return Osc frequency (fOSC) in Hz.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   910   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   911  IFX_EXTERN float32 IfxScuCcu_getOscFrequency(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   912  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   913  /** \brief API to get actual PLL (Eray) frequency.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   914   * This API returns the based on the divider values in CCUCON, PLLCON registers and the input oscillator.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   915   * \return frequency of Pll Eray (fPLLERAY) in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   916   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   917  IFX_EXTERN float32 IfxScuCcu_getPllErayFrequency(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   918  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   919  /** \brief API to get actual ERAY PLL Voltage Controlled Oscillator frequency.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   920   * This API returns the based on the divider values in PLLERAYCON registers and the input oscillator.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   921   * \return Pll (Eray) VCO frequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   922   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   923  IFX_EXTERN float32 IfxScuCcu_getPllErayVcoFrequency(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   924  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   925  /** \brief API to get actual PLL output frequency.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   926   * This API returns the based on the divider values in CCUCON, PLLCON registers and the input oscillator.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   927   * \return Pll (fPLL) frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   928   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   929  IFX_EXTERN float32 IfxScuCcu_getPllFrequency(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   930  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   931  /** \brief API to get actual PLL Voltage Controlled Oscillator frequency.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   932   * This API returns the based on the divider values in PLLCON registers and the input oscillator.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   933   * \return Pll VCO frequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   934   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   935  IFX_EXTERN float32 IfxScuCcu_getPllVcoFrequency(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   936  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   937  /** \brief get source frequency fSOURCE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   938   * This API returns the source frequency based on the configurations with CCUCON register configuration.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   939   * \return Effective fSOURCE in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   940   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   941  IFX_EXTERN float32 IfxScuCcu_getSourceFrequency(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   942  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   943  /** \brief API to get SPB divider frequency.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   944   * This API returns the based on fSOURCE and also on Low power divider mode and/or SPBDIV divider value in CCUCON registers.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   945   * \return SPB frequency (fSPB) in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   946   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   947  IFX_EXTERN float32 IfxScuCcu_getSpbFrequency(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   948  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   949  /** \brief API to get SRI divider frequency.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   950   * This API returns the Sri frequency based on the divider values in CCUCON registers and fSOURCE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   951   * \return Sri frequency (fSRI) in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   952   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   953  IFX_EXTERN float32 IfxScuCcu_getSriFrequency(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   954  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   955  /** \brief API to set CPU frequency (with CPU divider)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   956   * This API configure CPU divider values in CCUCON registers. The actual frequency is always depends on the feasibility with the divider value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   957   * \param cpu CPU number for which fCPU to be configured
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   958   * \param cpuFreq Desired CPU frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   959   * \return Actual CPU[x] frequency in Hz, where x is the cpu number passed as parameter
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   960   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   961  IFX_EXTERN float32 IfxScuCcu_setCpuFrequency(IfxCpu_ResourceCpu cpu, float32 cpuFreq);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   962  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   963  /** \brief API to configure PLL2ERAY (K3 Divider for ADC clock) for desired frequency.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   964   * This API configure K3 divider value in CCUCON. The actual frequency always depends on the feasibility with the divider value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   965   * \param pll2ErayFreq PLL2ERAY (K3 Divider for ADC clock) frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   966   * \return Actual PLL2 (K3 Divider for ADC clock) frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   967   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   968  IFX_EXTERN float32 IfxScuCcu_setPll2ErayFrequency(float32 pll2ErayFreq);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   969  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   970  /** \brief API to configure PLL2 (K3 Divider for ADC clock) for desired frequency.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   971   * This API configure K3 divider value in CCUCON. The actual frequency always depends on the feasibility with the divider value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   972   * \param pll2Freq PLL2 (K3 Divider for ADC clock) frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   973   * \return Actual PLL2 (K3 Divider for ADC clock) frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   974   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   975  IFX_EXTERN float32 IfxScuCcu_setPll2Frequency(float32 pll2Freq);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   976  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   977  /** \brief API to set SPB frequency (with SPB divider)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   978   * This API configure SPB divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   979   * \param spbFreq Desired SPB frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   980   * \return Actual SPB frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   981   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   982  IFX_EXTERN float32 IfxScuCcu_setSpbFrequency(float32 spbFreq);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   983  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   984  /** \brief API to set SRI frequency (with SRI divider)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   985   * This API configure Sri divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   986   * \param sriFreq Sri frequency (fSRI) in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   987   * \return Actual Sri frequency (fSRI) in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   988   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   989  IFX_EXTERN float32 IfxScuCcu_setSriFrequency(float32 sriFreq);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   990  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   991  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   992  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   993  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Configuration
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   994   * \{ */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   995  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   996  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   997  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   998  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   999  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1000  /** \brief The api calculates the system PLL divider values P, N, K based on given xtal frequency and PLL frequency.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1001   * \param cfg Pointer to the configuration structure of the ScuCcu
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1002   * \param fPll Desired PLL frequency.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1003   * \return 0- Success, 1 - Failure
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1004   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1005  IFX_EXTERN boolean IfxScuCcu_calculateSysPllDividers(IfxScuCcu_Config *cfg, uint32 fPll);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1006  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1007  /** \brief API to initialize the SCU Clock Control Unit.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1008   * This API initialize the PLL with ramp steps, BUS dividers for the configuration provided by the configuration structure.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1009   * \param cfg Pointer to the configuration structure of the ScuCcu
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1010   * \return Error status of the ScuCcu initialization process.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1011   * \retval TRUE: If an error occurred during initialization.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1012   * \retval FALSE: If initialization was successful.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1013   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1014  IFX_EXTERN boolean IfxScuCcu_init(const IfxScuCcu_Config *cfg);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1015  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1016  /** \brief Initializes the clock configuration with default values
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1017   * \param cfg Pointer to the configuration structure of the ScuCcu
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1018   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1019   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1020  IFX_EXTERN void IfxScuCcu_initConfig(IfxScuCcu_Config *cfg);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1021  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1022  /** \brief API to initialize the SCU Eray Pll
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1023   * This API initialize the Eray PLL for the configuration provided by the configuration structure.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1024   * \param cfg Pointer to the configuration structure of the Eray Pll
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1025   * \return Error status of the ScuCcu Eray Pll initialization process.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1026   * \retval TRUE: If an error occurred during initialization.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1027   * \retval FALSE: If initialization was successful.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1028   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1029  IFX_EXTERN boolean IfxScuCcu_initErayPll(const IfxScuCcu_ErayPllConfig *cfg);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1030  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1031  /** \brief Initializes the clock configuration with default values
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1032   * \param cfg Pointer to the configuration structure of the ScuCcuEray Pll
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1033   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1034   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1035  IFX_EXTERN void IfxScuCcu_initErayPllConfig(IfxScuCcu_ErayPllConfig *cfg);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1036  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1037  /** \brief API to switch to Backup clock from the current PLL frequency.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1038   * \param cfg Pointer to the configuration structure of the ScuCcu
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1039   * \return None
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1040   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1041  IFX_EXTERN void IfxScuCcu_switchToBackupClock(const IfxScuCcu_Config *cfg);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1042  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1043  /** \} */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1044  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1045  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1046  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1047  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1048  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1049  /** \brief API to get GTMdivider frequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1050   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1051   * return GTM frequency (fGTM) in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1052   * \return Gtm Frequency
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1053   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1054  IFX_INLINE float32 IfxScuCcu_getGtmFrequency(void);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1055  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1056  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1057  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1058  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1059  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1060  /** \brief API to set GTM frequency (with GTM divider)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1061   * This API configure GTM divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1062   * \param gtmFreq Desired GTM frequency in Hz
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1063   * \return Actual GTM frequency in HZ
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1064   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1065  IFX_EXTERN float32 IfxScuCcu_setGtmFrequency(float32 gtmFreq);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1066  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1067  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1068  /*-------------------Global Exported Variables/Constants----------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1069  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1070  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1071  /** \brief Configuration structure for SCU CCU driver.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1072   * The values of this structure are defined as # defined macros in the implementation of Scu
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1073   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1074  IFX_EXTERN IFX_CONST IfxScuCcu_Config IfxScuCcu_defaultClockConfig;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1075  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1076  /** \brief Configuration structure for SCU CCU driver.
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1077   * The values of this structure are defined as # defined macros in the implementation of Scu
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1078   */
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1079  IFX_EXTERN IFX_CONST IfxScuCcu_ErayPllConfig IfxScuCcu_defaultErayPllConfig;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1080  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1081  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1082  /*---------------------Inline Function Implementations------------------------*/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1083  /******************************************************************************/
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1084  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1085  IFX_INLINE float32 IfxScuCcu_getEvrFrequency(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1086  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1087      return IFXSCU_EVR_OSC_FREQUENCY;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1088  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1089  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1090  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1091  IFX_INLINE float32 IfxScuCcu_getGtmFrequency(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1092  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1093      return IfxScuCcu_getSourceFrequency() / SCU_CCUCON1.B.GTMDIV;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1094  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1095  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1096  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1097  IFX_INLINE float32 IfxScuCcu_getPll2ErayFrequency(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1098  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1099      float32 pll2ErayFrequency;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1100  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1101      pll2ErayFrequency = IfxScuCcu_getPllErayVcoFrequency() / (SCU_PLLERAYCON1.B.K3DIV + 1);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1102  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1103      return pll2ErayFrequency;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1104  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1105  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1106  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1107  IFX_INLINE float32 IfxScuCcu_getPll2Frequency(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1108  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1109      float32 pll2Frequency;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1110      pll2Frequency = IfxScuCcu_getPllVcoFrequency() / (SCU_PLLCON1.B.K3DIV + 1);
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1111  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1112      return pll2Frequency;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1113  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1114  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1115  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1116  IFX_INLINE IfxScu_CCUCON0_CLKSEL IfxScuCcu_getSourceSelection(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1117  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1118      return (IfxScu_CCUCON0_CLKSEL)SCU_CCUCON0.B.CLKSEL;
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1119  }
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1120  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1121  
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1122  IFX_INLINE float32 IfxScuCcu_getStmFrequency(void)
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1123  {
; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1124      return IfxScuCcu_getSourceFrequency() / SCU_CCUCON1.B.STMDIV;
	call	IfxScuCcu_getSourceFrequency
.L322:
	movh.a	a2,#61443
	ld.bu	d15,[a2]@los(0xf0036035)
	and	d15,#15
	itof	d15,d15
.L446:
	div.f	d15,d2,d15
.L447:

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1124      return IfxScuCcu_getSourceFrequency() / SCU_CCUCON1.B.STMDIV;      (inlined)
	j	.L55

; G:\Hello_world\TC264\A\workspace\Sig0809\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1125  }      (inlined)
.L55:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   333  eMode(cpu) == IfxCpu_CoreMode_halt)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   334      {
	movh	d0,#17530
.L448:
	div.f	d15,d15,d0
.L449:
	utof	d0,d8
.L450:
	mul.f	d15,d15,d0
.L451:
	ftouz	d0,d15
.L329:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   335          retVal &= IfxCpu_setCoreMode(cpu, IfxCpu_CoreMode_run);
	ld.w	d1,0xf0000010
.L330:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   336      }
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   337  
	j	.L56
.L57:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   338      return retVal;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   339  }
	nop
.L452:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   340  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   341  
	ld.w	d15,0xf0000010
.L453:
	sub	d15,d1
.L454:
	jlt.u	d15,d0,.L58
.L455:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   342  boolean IfxCpu_waitEvent(IfxCpu_syncEvent *event, uint32 timeoutMilliSec)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   343  {
	mov	d9,#1
.L456:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   344      volatile uint32 *sync          = (volatile uint32 *)IFXCPU_GLB_ADDR_DSPR(__mfcr(CPU_CORE_ID), event);
	j	.L59
.L58:
.L56:
	ld.w	d15,[a15]
.L457:
	and	d15,#3
.L458:
	jne	d15,#3,.L57

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   345  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   346      boolean          errorcnt      = 0U;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   347      /* Divide with 1000, gives the count value equivalent to milliseconds */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   348      uint32           stmCount      = (uint32)((IfxScuCcu_getStmFrequency() / 1000) * timeoutMilliSec);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   349      uint32           stmCountBegin = STM0_TIM0.U;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   350  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   351      while ((*sync & IFXCPU_CFG_ALLCORE_DONE) != IFXCPU_CFG_ALLCORE_DONE)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   352      {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   353          __nop();
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   354  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   355          if ((uint32)(STM0_TIM0.U - stmCountBegin) >= stmCount)
.L59:
	mov	d2,d9
.L331:
	j	.L60

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   356          {
.L60:
	ret
.L251:
	
__IfxCpu_waitEvent_function_end:
	.size	IfxCpu_waitEvent,__IfxCpu_waitEvent_function_end-IfxCpu_waitEvent
.L150:
	; End of function
	
	.sdecl	'.text.IfxCpu.IfxCpu_emitEvent',code,cluster('IfxCpu_emitEvent')
	.sect	'.text.IfxCpu.IfxCpu_emitEvent'
	.align	2
	
	.global	IfxCpu_emitEvent

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   357              errorcnt = 1;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   358              break;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   359          }
; Function IfxCpu_emitEvent
.L86:
IfxCpu_emitEvent:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   360  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   361          /* There is no need to check overflow of the STM timer.
	mfcr	d15,#65052
	imask	e0,#1,d15,#1
	ldmst	[a4]0,e0
.L463:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   362           * When counter after overflow subtracted with counter before overflow,
	ret
.L263:
	
__IfxCpu_emitEvent_function_end:
	.size	IfxCpu_emitEvent,__IfxCpu_emitEvent_function_end-IfxCpu_emitEvent
.L155:
	; End of function
	
	.calls	'IfxCpu_getCoreMode','IfxCpu_getIndex'
	.calls	'IfxCpu_getRandomValueWithinRange','IfxCpu_getRandomValue'
	.calls	'IfxCpu_setCoreMode','IfxCpu_getIndex'
	.calls	'IfxCpu_setCoreMode','IfxScuWdt_getSafetyWatchdogPassword'
	.calls	'IfxCpu_setCoreMode','IfxScuWdt_clearSafetyEndinit'
	.calls	'IfxCpu_setCoreMode','IfxScuWdt_setSafetyEndinit'
	.calls	'IfxCpu_setCoreMode','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'IfxCpu_setCoreMode','IfxScuWdt_clearCpuEndinit'
	.calls	'IfxCpu_setCoreMode','IfxScuWdt_setCpuEndinit'
	.calls	'IfxCpu_startCore','IfxCpu_setProgramCounter'
	.calls	'IfxCpu_startCore','IfxCpu_getCoreMode'
	.calls	'IfxCpu_startCore','IfxCpu_setCoreMode'
	.calls	'IfxCpu_waitEvent','IfxScuCcu_getSourceFrequency'
	.calls	'IfxCpu_acquireMutex','',8
	.calls	'IfxCpu_getCoreMode','',0
	.calls	'IfxCpu_getIndex','',0
	.calls	'IfxCpu_getRandomValue','',0
	.calls	'IfxCpu_getRandomValueWithinRange','',0
	.calls	'IfxCpu_releaseMutex','',0
	.calls	'IfxCpu_resetSpinLock','',0
	.calls	'IfxCpu_setCoreMode','',0
	.calls	'IfxCpu_setProgramCounter','',0
	.calls	'IfxCpu_setSpinLock','',8
	.calls	'IfxCpu_startCore','',0
	.calls	'IfxCpu_waitEvent','',0
	.extern	IfxCpu_cfg_indexMap
	.extern	IfxScuWdt_clearCpuEndinit
	.extern	IfxScuWdt_clearSafetyEndinit
	.extern	IfxScuWdt_setCpuEndinit
	.extern	IfxScuWdt_setSafetyEndinit
	.extern	IfxScuWdt_getCpuWatchdogPassword
	.extern	IfxScuWdt_getSafetyWatchdogPassword
	.extern	IfxScuCcu_getSourceFrequency
	.calls	'IfxCpu_emitEvent','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L88:
	.word	78449
	.half	3
	.word	.L89
	.byte	4
.L87:
	.byte	1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L90
	.byte	2,1,1,3
	.word	165
	.byte	4
	.byte	'Ifx__jump_and_link',0,3,1,61,17,1,1,5
	.byte	'fun',0,1,61,43
	.word	168
	.byte	6,0,7
	.byte	'__fract',0,4,128,1,7
	.byte	'float',0,4,4,8
	.byte	'Ifx__float_to_fract',0,3,1,152,2,18
	.word	213
	.byte	1,1,5
	.byte	'a',0,1,152,2,44
	.word	225
	.byte	6,0,4
	.byte	'Ifx__stopPerfCounters',0,3,1,172,2,17,1,1,6,0
.L176:
	.byte	7
	.byte	'unsigned long int',0,4,7
.L232:
	.byte	8
	.byte	'IfxCpu_getRandomVal',0,3,1,247,2,19
	.word	311
	.byte	1,1
.L235:
	.byte	5
	.byte	'a',0,1,247,2,46
	.word	311
.L237:
	.byte	5
	.byte	'x',0,1,247,2,56
	.word	311
.L239:
	.byte	5
	.byte	'm',0,1,247,2,66
	.word	311
.L241:
	.byte	6,0,7
	.byte	'unsigned long long int',0,8,7,9
	.byte	'void',0,3
	.word	425
	.byte	8
	.byte	'__ld64',0,3,2,135,1,19
	.word	399
	.byte	1,1,5
	.byte	'addr',0,2,135,1,32
	.word	431
	.byte	6,0,4
	.byte	'__st64',0,3,2,143,1,17,1,1,5
	.byte	'addr',0,2,143,1,30
	.word	431
	.byte	5
	.byte	'value',0,2,143,1,43
	.word	399
	.byte	6,0
.L249:
	.byte	7
	.byte	'unsigned int',0,4,7,7
	.byte	'int',0,4,5,7
	.byte	'unsigned int',0,4,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,4,241,8,16,4,11
	.byte	'ENDINIT',0,4
	.word	540
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	540
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	540
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	540
	.byte	16,0,2,35,0,0,12,4,247,14,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	556
	.byte	4,2,35,0,0
.L178:
	.byte	7
	.byte	'unsigned char',0,1,8
.L189:
	.byte	7
	.byte	'unsigned short int',0,2,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,4,250,8,16,4,11
	.byte	'reserved_0',0,1
	.word	692
	.byte	2,6,2,35,0,11
	.byte	'IR0',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	692
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	692
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	692
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	692
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	709
	.byte	16,0,2,35,2,0,12,4,255,14,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	731
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,4,137,9,16,4,11
	.byte	'AE',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	692
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	692
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	692
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	692
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	709
	.byte	16,0,2,35,2,0,12,4,135,15,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	975
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU',0,4,175,15,25,12,13
	.byte	'CON0',0
	.word	652
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	935
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	1166
	.byte	4,2,35,8,0,14
	.word	1206
	.byte	3
	.word	1269
	.byte	4
	.byte	'IfxScuWdt_clearCpuEndinitInline',0,3,3,181,3,17,1,1,5
	.byte	'watchdog',0,3,181,3,65
	.word	1274
	.byte	5
	.byte	'password',0,3,181,3,82
	.word	709
	.byte	6,0,4
	.byte	'IfxScuWdt_setCpuEndinitInline',0,3,3,140,4,17,1,1,5
	.byte	'watchdog',0,3,140,4,63
	.word	1274
	.byte	5
	.byte	'password',0,3,140,4,80
	.word	709
	.byte	6,0,8
	.byte	'IfxScuWdt_getCpuWatchdogPasswordInline',0,3,3,227,3,19
	.word	709
	.byte	1,1,5
	.byte	'watchdog',0,3,227,3,74
	.word	1274
	.byte	6,0,10
	.byte	'_Ifx_P_OUT_Bits',0,6,143,3,16,4,11
	.byte	'P0',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	692
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	692
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	692
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	692
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	692
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	692
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	692
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	692
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	692
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	692
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	709
	.byte	16,0,2,35,2,0,12,6,181,5,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1504
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMR_Bits',0,6,169,2,16,4,11
	.byte	'PS0',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	692
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	692
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	692
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	692
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	692
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	692
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	692
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	692
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	692
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	692
	.byte	1,0,2,35,1,11
	.byte	'PCL0',0,1
	.word	692
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	692
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	692
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	692
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	692
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	692
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	692
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	692
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	692
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	692
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	692
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	692
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	692
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	692
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	692
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	692
	.byte	1,0,2,35,3,0,12,6,133,5,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1820
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ID_Bits',0,6,110,16,4,11
	.byte	'MODREV',0,1
	.word	692
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	692
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	709
	.byte	16,0,2,35,2,0,12,6,148,4,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2391
	.byte	4,2,35,0,0,15,4
	.word	692
	.byte	16,3,0,10
	.byte	'_Ifx_P_IOCR0_Bits',0,6,140,1,16,4,11
	.byte	'reserved_0',0,1
	.word	692
	.byte	3,5,2,35,0,11
	.byte	'PC0',0,1
	.word	692
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	692
	.byte	3,5,2,35,1,11
	.byte	'PC1',0,1
	.word	692
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	692
	.byte	3,5,2,35,2,11
	.byte	'PC2',0,1
	.word	692
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	692
	.byte	3,5,2,35,3,11
	.byte	'PC3',0,1
	.word	692
	.byte	5,0,2,35,3,0,12,6,164,4,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2519
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR4_Bits',0,6,166,1,16,4,11
	.byte	'reserved_0',0,1
	.word	692
	.byte	3,5,2,35,0,11
	.byte	'PC4',0,1
	.word	692
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	692
	.byte	3,5,2,35,1,11
	.byte	'PC5',0,1
	.word	692
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	692
	.byte	3,5,2,35,2,11
	.byte	'PC6',0,1
	.word	692
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	692
	.byte	3,5,2,35,3,11
	.byte	'PC7',0,1
	.word	692
	.byte	5,0,2,35,3,0,12,6,180,4,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2734
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR8_Bits',0,6,179,1,16,4,11
	.byte	'reserved_0',0,1
	.word	692
	.byte	3,5,2,35,0,11
	.byte	'PC8',0,1
	.word	692
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	692
	.byte	3,5,2,35,1,11
	.byte	'PC9',0,1
	.word	692
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	692
	.byte	3,5,2,35,2,11
	.byte	'PC10',0,1
	.word	692
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	692
	.byte	3,5,2,35,3,11
	.byte	'PC11',0,1
	.word	692
	.byte	5,0,2,35,3,0,12,6,188,4,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2949
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR12_Bits',0,6,153,1,16,4,11
	.byte	'reserved_0',0,1
	.word	692
	.byte	3,5,2,35,0,11
	.byte	'PC12',0,1
	.word	692
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	692
	.byte	3,5,2,35,1,11
	.byte	'PC13',0,1
	.word	692
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	692
	.byte	3,5,2,35,2,11
	.byte	'PC14',0,1
	.word	692
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	692
	.byte	3,5,2,35,3,11
	.byte	'PC15',0,1
	.word	692
	.byte	5,0,2,35,3,0,12,6,172,4,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3166
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IN_Bits',0,6,118,16,4,11
	.byte	'P0',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	692
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	692
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	692
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	692
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	692
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	692
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	692
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	692
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	692
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	692
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	709
	.byte	16,0,2,35,2,0,12,6,156,4,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3386
	.byte	4,2,35,0,0,15,24
	.word	692
	.byte	16,23,0,10
	.byte	'_Ifx_P_PDR0_Bits',0,6,205,3,16,4,11
	.byte	'PD0',0,1
	.word	692
	.byte	3,5,2,35,0,11
	.byte	'PL0',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'PD1',0,1
	.word	692
	.byte	3,1,2,35,0,11
	.byte	'PL1',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'PD2',0,1
	.word	692
	.byte	3,5,2,35,1,11
	.byte	'PL2',0,1
	.word	692
	.byte	1,4,2,35,1,11
	.byte	'PD3',0,1
	.word	692
	.byte	3,1,2,35,1,11
	.byte	'PL3',0,1
	.word	692
	.byte	1,0,2,35,1,11
	.byte	'PD4',0,1
	.word	692
	.byte	3,5,2,35,2,11
	.byte	'PL4',0,1
	.word	692
	.byte	1,4,2,35,2,11
	.byte	'PD5',0,1
	.word	692
	.byte	3,1,2,35,2,11
	.byte	'PL5',0,1
	.word	692
	.byte	1,0,2,35,2,11
	.byte	'PD6',0,1
	.word	692
	.byte	3,5,2,35,3,11
	.byte	'PL6',0,1
	.word	692
	.byte	1,4,2,35,3,11
	.byte	'PD7',0,1
	.word	692
	.byte	3,1,2,35,3,11
	.byte	'PL7',0,1
	.word	692
	.byte	1,0,2,35,3,0,12,6,205,5,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3709
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PDR1_Bits',0,6,226,3,16,4,11
	.byte	'PD8',0,1
	.word	692
	.byte	3,5,2,35,0,11
	.byte	'PL8',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'PD9',0,1
	.word	692
	.byte	3,1,2,35,0,11
	.byte	'PL9',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'PD10',0,1
	.word	692
	.byte	3,5,2,35,1,11
	.byte	'PL10',0,1
	.word	692
	.byte	1,4,2,35,1,11
	.byte	'PD11',0,1
	.word	692
	.byte	3,1,2,35,1,11
	.byte	'PL11',0,1
	.word	692
	.byte	1,0,2,35,1,11
	.byte	'PD12',0,1
	.word	692
	.byte	3,5,2,35,2,11
	.byte	'PL12',0,1
	.word	692
	.byte	1,4,2,35,2,11
	.byte	'PD13',0,1
	.word	692
	.byte	3,1,2,35,2,11
	.byte	'PL13',0,1
	.word	692
	.byte	1,0,2,35,2,11
	.byte	'PD14',0,1
	.word	692
	.byte	3,5,2,35,3,11
	.byte	'PL14',0,1
	.word	692
	.byte	1,4,2,35,3,11
	.byte	'PD15',0,1
	.word	692
	.byte	3,1,2,35,3,11
	.byte	'PL15',0,1
	.word	692
	.byte	1,0,2,35,3,0,12,6,213,5,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4013
	.byte	4,2,35,0,0,15,8
	.word	692
	.byte	16,7,0,10
	.byte	'_Ifx_P_ESR_Bits',0,6,88,16,4,11
	.byte	'EN0',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	692
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	692
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	692
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	692
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	692
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	692
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	692
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	692
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	692
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	692
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	709
	.byte	16,0,2,35,2,0,12,6,140,4,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4338
	.byte	4,2,35,0,0,15,12
	.word	692
	.byte	16,11,0,10
	.byte	'_Ifx_P_PDISC_Bits',0,6,183,3,16,4,11
	.byte	'PDIS0',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'PDIS2',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'PDIS3',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'PDIS4',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'PDIS5',0,1
	.word	692
	.byte	1,2,2,35,0,11
	.byte	'PDIS6',0,1
	.word	692
	.byte	1,1,2,35,0,11
	.byte	'PDIS7',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'PDIS8',0,1
	.word	692
	.byte	1,7,2,35,1,11
	.byte	'PDIS9',0,1
	.word	692
	.byte	1,6,2,35,1,11
	.byte	'PDIS10',0,1
	.word	692
	.byte	1,5,2,35,1,11
	.byte	'PDIS11',0,1
	.word	692
	.byte	1,4,2,35,1,11
	.byte	'PDIS12',0,1
	.word	692
	.byte	1,3,2,35,1,11
	.byte	'PDIS13',0,1
	.word	692
	.byte	1,2,2,35,1,11
	.byte	'PDIS14',0,1
	.word	692
	.byte	1,1,2,35,1,11
	.byte	'PDIS15',0,1
	.word	692
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	709
	.byte	16,0,2,35,2,0,12,6,197,5,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4678
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PCSR_Bits',0,6,165,3,16,4,11
	.byte	'SEL0',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'SEL1',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'SEL2',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'SEL3',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'SEL4',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'SEL5',0,1
	.word	692
	.byte	1,2,2,35,0,11
	.byte	'SEL6',0,1
	.word	692
	.byte	1,1,2,35,0,11
	.byte	'SEL7',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	692
	.byte	2,6,2,35,1,11
	.byte	'SEL10',0,1
	.word	692
	.byte	1,5,2,35,1,11
	.byte	'SEL11',0,1
	.word	692
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	517
	.byte	19,1,2,35,0,11
	.byte	'LCK',0,1
	.word	692
	.byte	1,0,2,35,3,0,12,6,189,5,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5044
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR0_Bits',0,6,206,2,16,4,11
	.byte	'PS0',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	517
	.byte	28,0,2,35,0,0,12,6,149,5,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5330
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR4_Bits',0,6,227,2,16,4,11
	.byte	'reserved_0',0,1
	.word	692
	.byte	4,4,2,35,0,11
	.byte	'PS4',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	692
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	692
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	517
	.byte	24,0,2,35,0,0,12,6,165,5,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5477
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR8_Bits',0,6,238,2,16,4,11
	.byte	'reserved_0',0,1
	.word	692
	.byte	8,0,2,35,0,11
	.byte	'PS8',0,1
	.word	692
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	692
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	692
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	692
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	517
	.byte	20,0,2,35,0,0,12,6,173,5,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5646
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR12_Bits',0,6,216,2,16,4,11
	.byte	'reserved_0',0,2
	.word	709
	.byte	12,4,2,35,0,11
	.byte	'PS12',0,1
	.word	692
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	692
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	692
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	692
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	709
	.byte	16,0,2,35,2,0,12,6,157,5,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5818
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR0_Bits',0,6,232,1,16,4,11
	.byte	'reserved_0',0,2
	.word	709
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	692
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	692
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	692
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	692
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	709
	.byte	12,0,2,35,2,0,12,6,229,4,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5993
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR4_Bits',0,6,253,1,16,4,11
	.byte	'reserved_0',0,4
	.word	517
	.byte	20,12,2,35,0,11
	.byte	'PCL4',0,1
	.word	692
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	692
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	692
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	692
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	692
	.byte	8,0,2,35,3,0,12,6,245,4,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6167
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR8_Bits',0,6,136,2,16,4,11
	.byte	'reserved_0',0,4
	.word	517
	.byte	24,8,2,35,0,11
	.byte	'PCL8',0,1
	.word	692
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	692
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	692
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	692
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	692
	.byte	4,0,2,35,3,0,12,6,253,4,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6341
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR12_Bits',0,6,243,1,16,4,11
	.byte	'reserved_0',0,4
	.word	517
	.byte	28,4,2,35,0,11
	.byte	'PCL12',0,1
	.word	692
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	692
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	692
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	692
	.byte	1,0,2,35,3,0,12,6,237,4,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6517
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR_Bits',0,6,249,2,16,4,11
	.byte	'PS0',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	692
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	692
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	692
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	692
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	692
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	692
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	692
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	692
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	692
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	692
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	709
	.byte	16,0,2,35,2,0,12,6,141,5,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6673
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR_Bits',0,6,147,2,16,4,11
	.byte	'reserved_0',0,2
	.word	709
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	692
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	692
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	692
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	692
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	692
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	692
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	692
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	692
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	692
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	692
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	692
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	692
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	692
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	692
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	692
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	692
	.byte	1,0,2,35,3,0,12,6,221,4,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7006
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR0_Bits',0,6,192,1,16,4,11
	.byte	'reserved_0',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	517
	.byte	30,0,2,35,0,0,12,6,196,4,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7354
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR1_Bits',0,6,200,1,16,4,11
	.byte	'reserved_0',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	517
	.byte	30,0,2,35,0,0,10
	.byte	'_Ifx_P_LPCR1_P21_Bits',0,6,208,1,16,4,11
	.byte	'RDIS_CTRL',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'RX_DIS',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'TERM',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'LRXTERM',0,1
	.word	692
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	517
	.byte	24,0,2,35,0,0,12,6,204,4,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7478
	.byte	4,2,35,0,13
	.byte	'B_P21',0
	.word	7562
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR2_Bits',0,6,218,1,16,4,11
	.byte	'reserved_0',0,1
	.word	692
	.byte	8,0,2,35,0,11
	.byte	'LVDSR',0,1
	.word	692
	.byte	1,7,2,35,1,11
	.byte	'LVDSRL',0,1
	.word	692
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	692
	.byte	2,4,2,35,1,11
	.byte	'TDIS_CTRL',0,1
	.word	692
	.byte	1,3,2,35,1,11
	.byte	'TX_DIS',0,1
	.word	692
	.byte	1,2,2,35,1,11
	.byte	'TX_PD',0,1
	.word	692
	.byte	1,1,2,35,1,11
	.byte	'TX_PWDPD',0,1
	.word	692
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	709
	.byte	16,0,2,35,2,0,12,6,213,4,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7742
	.byte	4,2,35,0,0,15,76
	.word	692
	.byte	16,75,0,10
	.byte	'_Ifx_P_ACCEN1_Bits',0,6,82,16,4,11
	.byte	'reserved_0',0,4
	.word	517
	.byte	32,0,2,35,0,0,12,6,132,4,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7995
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ACCEN0_Bits',0,6,45,16,4,11
	.byte	'EN0',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	692
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	692
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	692
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	692
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	692
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	692
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	692
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	692
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	692
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	692
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	692
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	692
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	692
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	692
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	692
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	692
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	692
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	692
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	692
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	692
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	692
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	692
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	692
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	692
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	692
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	692
	.byte	1,0,2,35,3,0,12,6,252,3,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8082
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P',0,6,229,5,25,128,2,13
	.byte	'OUT',0
	.word	1780
	.byte	4,2,35,0,13
	.byte	'OMR',0
	.word	2351
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	2470
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2510
	.byte	4,2,35,12,13
	.byte	'IOCR0',0
	.word	2694
	.byte	4,2,35,16,13
	.byte	'IOCR4',0
	.word	2909
	.byte	4,2,35,20,13
	.byte	'IOCR8',0
	.word	3126
	.byte	4,2,35,24,13
	.byte	'IOCR12',0
	.word	3346
	.byte	4,2,35,28,13
	.byte	'reserved_20',0
	.word	2510
	.byte	4,2,35,32,13
	.byte	'IN',0
	.word	3660
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	3700
	.byte	24,2,35,40,13
	.byte	'PDR0',0
	.word	3973
	.byte	4,2,35,64,13
	.byte	'PDR1',0
	.word	4289
	.byte	4,2,35,68,13
	.byte	'reserved_48',0
	.word	4329
	.byte	8,2,35,72,13
	.byte	'ESR',0
	.word	4629
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	4669
	.byte	12,2,35,84,13
	.byte	'PDISC',0
	.word	5004
	.byte	4,2,35,96,13
	.byte	'PCSR',0
	.word	5290
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	4329
	.byte	8,2,35,104,13
	.byte	'OMSR0',0
	.word	5437
	.byte	4,2,35,112,13
	.byte	'OMSR4',0
	.word	5606
	.byte	4,2,35,116,13
	.byte	'OMSR8',0
	.word	5778
	.byte	4,2,35,120,13
	.byte	'OMSR12',0
	.word	5953
	.byte	4,2,35,124,13
	.byte	'OMCR0',0
	.word	6127
	.byte	4,3,35,128,1,13
	.byte	'OMCR4',0
	.word	6301
	.byte	4,3,35,132,1,13
	.byte	'OMCR8',0
	.word	6477
	.byte	4,3,35,136,1,13
	.byte	'OMCR12',0
	.word	6633
	.byte	4,3,35,140,1,13
	.byte	'OMSR',0
	.word	6966
	.byte	4,3,35,144,1,13
	.byte	'OMCR',0
	.word	7314
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	4329
	.byte	8,3,35,152,1,13
	.byte	'LPCR0',0
	.word	7438
	.byte	4,3,35,160,1,13
	.byte	'LPCR1',0
	.word	7687
	.byte	4,3,35,164,1,13
	.byte	'LPCR2',0
	.word	7946
	.byte	4,3,35,168,1,13
	.byte	'reserved_A4',0
	.word	7986
	.byte	76,3,35,172,1,13
	.byte	'ACCEN1',0
	.word	8042
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	8609
	.byte	4,3,35,252,1,0,14
	.word	8649
	.byte	3
	.word	9252
	.byte	17,5,172,1,9,4,18
	.byte	'IfxPort_State_notChanged',0,0,18
	.byte	'IfxPort_State_high',0,1,18
	.byte	'IfxPort_State_low',0,128,128,4,18
	.byte	'IfxPort_State_toggled',0,129,128,4,0,4
	.byte	'IfxPort_setPinState',0,3,5,208,4,17,1,1,5
	.byte	'port',0,5,208,4,44
	.word	9257
	.byte	5
	.byte	'pinIndex',0,5,208,4,56
	.word	692
	.byte	5
	.byte	'action',0,5,208,4,80
	.word	9262
	.byte	6,0
.L260:
	.byte	8
	.byte	'IfxScuCcu_getStmFrequency',0,3,7,226,8,20
	.word	225
	.byte	1,1
.L262:
	.byte	6,0,15,176,32
	.word	692
	.byte	16,175,32,0,10
	.byte	'_Ifx_CPU_SEGEN_Bits',0,9,150,4,16,4,11
	.byte	'ADFLIP',0,4
	.word	540
	.byte	8,24,2,35,0,11
	.byte	'ADTYPE',0,4
	.word	540
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	540
	.byte	21,1,2,35,0,11
	.byte	'AE',0,4
	.word	540
	.byte	1,0,2,35,0,0,12,9,239,8,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	9494
	.byte	4,2,35,0,0,15,208,223,1
	.word	692
	.byte	16,207,223,1,0,10
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,9,234,4,16,4,11
	.byte	'ASI',0,4
	.word	540
	.byte	5,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	540
	.byte	27,0,2,35,0,0,12,9,191,9,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	9647
	.byte	4,2,35,0,0,15,248,1
	.word	692
	.byte	16,247,1,0,10
	.byte	'_Ifx_CPU_PMA0_Bits',0,9,224,3,16,4,11
	.byte	'reserved_0',0,4
	.word	540
	.byte	13,19,2,35,0,11
	.byte	'DAC',0,4
	.word	540
	.byte	3,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	540
	.byte	16,0,2,35,0,0,12,9,199,8,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	9765
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_PMA1_Bits',0,9,232,3,16,4,11
	.byte	'reserved_0',0,4
	.word	540
	.byte	14,18,2,35,0,11
	.byte	'CAC',0,4
	.word	540
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	540
	.byte	16,0,2,35,0,0,12,9,207,8,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	9891
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_PMA2_Bits',0,9,240,3,16,4,11
	.byte	'PSI',0,4
	.word	540
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	540
	.byte	16,0,2,35,0,0,12,9,215,8,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10017
	.byte	4,2,35,0,0,15,244,29
	.word	692
	.byte	16,243,29,0,10
	.byte	'_Ifx_CPU_DCON2_Bits',0,9,195,1,16,4,11
	.byte	'DCACHE_SZE',0,4
	.word	540
	.byte	16,16,2,35,0,11
	.byte	'DSCRATCH_SZE',0,4
	.word	540
	.byte	16,0,2,35,0,0,12,9,191,6,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10132
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_SMACON_Bits',0,9,159,4,16,4,11
	.byte	'PC',0,4
	.word	540
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	540
	.byte	1,30,2,35,0,11
	.byte	'PT',0,4
	.word	540
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	540
	.byte	5,24,2,35,0,11
	.byte	'DC',0,4
	.word	540
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	540
	.byte	1,22,2,35,0,11
	.byte	'DT',0,4
	.word	540
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	540
	.byte	13,8,2,35,0,11
	.byte	'IODT',0,4
	.word	540
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	540
	.byte	7,0,2,35,0,0,12,9,247,8,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10245
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DSTR_Bits',0,9,143,2,16,4,11
	.byte	'SRE',0,4
	.word	540
	.byte	1,31,2,35,0,11
	.byte	'GAE',0,4
	.word	540
	.byte	1,30,2,35,0,11
	.byte	'LBE',0,4
	.word	540
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	540
	.byte	3,26,2,35,0,11
	.byte	'CRE',0,4
	.word	540
	.byte	1,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	540
	.byte	7,18,2,35,0,11
	.byte	'DTME',0,4
	.word	540
	.byte	1,17,2,35,0,11
	.byte	'LOE',0,4
	.word	540
	.byte	1,16,2,35,0,11
	.byte	'SDE',0,4
	.word	540
	.byte	1,15,2,35,0,11
	.byte	'SCE',0,4
	.word	540
	.byte	1,14,2,35,0,11
	.byte	'CAC',0,4
	.word	540
	.byte	1,13,2,35,0,11
	.byte	'MPE',0,4
	.word	540
	.byte	1,12,2,35,0,11
	.byte	'CLE',0,4
	.word	540
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	540
	.byte	3,8,2,35,0,11
	.byte	'ALN',0,4
	.word	540
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	540
	.byte	7,0,2,35,0,0,12,9,143,7,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10497
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DATR_Bits',0,9,152,1,16,4,11
	.byte	'reserved_0',0,4
	.word	540
	.byte	3,29,2,35,0,11
	.byte	'SBE',0,4
	.word	540
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	540
	.byte	5,23,2,35,0,11
	.byte	'CWE',0,4
	.word	540
	.byte	1,22,2,35,0,11
	.byte	'CFE',0,4
	.word	540
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	540
	.byte	3,18,2,35,0,11
	.byte	'SOE',0,4
	.word	540
	.byte	1,17,2,35,0,11
	.byte	'SME',0,4
	.word	540
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	540
	.byte	16,0,2,35,0,0,12,9,159,6,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10834
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DEADD_Bits',0,9,209,1,16,4,11
	.byte	'ERROR_ADDRESS',0,4
	.word	540
	.byte	32,0,2,35,0,0,12,9,207,6,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11065
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DIEAR_Bits',0,9,215,1,16,4,11
	.byte	'TA',0,4
	.word	540
	.byte	32,0,2,35,0,0,12,9,215,6,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11157
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DIETR_Bits',0,9,221,1,16,4,11
	.byte	'IED',0,4
	.word	540
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	540
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	540
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	540
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	540
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	540
	.byte	6,21,2,35,0,11
	.byte	'IE_DUAL',0,4
	.word	540
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	540
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	540
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	540
	.byte	18,0,2,35,0,0,12,9,223,6,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11238
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DCON0_Bits',0,9,187,1,16,4,11
	.byte	'reserved_0',0,4
	.word	540
	.byte	1,31,2,35,0,11
	.byte	'DCBYP',0,4
	.word	540
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	540
	.byte	30,0,2,35,0,0,12,9,183,6,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11479
	.byte	4,2,35,0,0,15,188,3
	.word	692
	.byte	16,187,3,0,10
	.byte	'_Ifx_CPU_PSTR_Bits',0,9,247,3,16,4,11
	.byte	'FRE',0,4
	.word	540
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	540
	.byte	1,30,2,35,0,11
	.byte	'FBE',0,4
	.word	540
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	540
	.byte	9,20,2,35,0,11
	.byte	'FPE',0,4
	.word	540
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	540
	.byte	1,18,2,35,0,11
	.byte	'FME',0,4
	.word	540
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	540
	.byte	17,0,2,35,0,0,12,9,223,8,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11618
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_PCON1_Bits',0,9,178,3,16,4,11
	.byte	'PCINV',0,4
	.word	540
	.byte	1,31,2,35,0,11
	.byte	'PBINV',0,4
	.word	540
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	540
	.byte	30,0,2,35,0,0,12,9,159,8,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11834
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_PCON2_Bits',0,9,186,3,16,4,11
	.byte	'PCACHE_SZE',0,4
	.word	540
	.byte	16,16,2,35,0,11
	.byte	'PSCRATCH_SZE',0,4
	.word	540
	.byte	16,0,2,35,0,0,12,9,167,8,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11957
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_PCON0_Bits',0,9,170,3,16,4,11
	.byte	'reserved_0',0,4
	.word	540
	.byte	1,31,2,35,0,11
	.byte	'PCBYP',0,4
	.word	540
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	540
	.byte	30,0,2,35,0,0,12,9,151,8,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12070
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_PIEAR_Bits',0,9,203,3,16,4,11
	.byte	'TA',0,4
	.word	540
	.byte	32,0,2,35,0,0,12,9,183,8,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12198
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_PIETR_Bits',0,9,209,3,16,4,11
	.byte	'IED',0,4
	.word	540
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	540
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	540
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	540
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	540
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	540
	.byte	6,21,2,35,0,11
	.byte	'IE_DUAL',0,4
	.word	540
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	540
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	540
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	540
	.byte	18,0,2,35,0,0,12,9,191,8,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12279
	.byte	4,2,35,0,0,15,232,3
	.word	692
	.byte	16,231,3,0,10
	.byte	'_Ifx_CPU_COMPAT_Bits',0,9,83,16,4,11
	.byte	'reserved_0',0,4
	.word	540
	.byte	3,29,2,35,0,11
	.byte	'RM',0,4
	.word	540
	.byte	1,28,2,35,0,11
	.byte	'SP',0,4
	.word	540
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	540
	.byte	27,0,2,35,0,0,12,9,215,5,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12531
	.byte	4,2,35,0,0,15,252,23
	.word	692
	.byte	16,251,23,0,10
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,9,183,2,16,4,11
	.byte	'TST',0,4
	.word	540
	.byte	1,31,2,35,0,11
	.byte	'TCL',0,4
	.word	540
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	540
	.byte	6,24,2,35,0,11
	.byte	'RM',0,4
	.word	540
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	540
	.byte	8,14,2,35,0,11
	.byte	'FXE',0,4
	.word	540
	.byte	1,13,2,35,0,11
	.byte	'FUE',0,4
	.word	540
	.byte	1,12,2,35,0,11
	.byte	'FZE',0,4
	.word	540
	.byte	1,11,2,35,0,11
	.byte	'FVE',0,4
	.word	540
	.byte	1,10,2,35,0,11
	.byte	'FIE',0,4
	.word	540
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	540
	.byte	3,6,2,35,0,11
	.byte	'FX',0,4
	.word	540
	.byte	1,5,2,35,0,11
	.byte	'FU',0,4
	.word	540
	.byte	1,4,2,35,0,11
	.byte	'FZ',0,4
	.word	540
	.byte	1,3,2,35,0,11
	.byte	'FV',0,4
	.word	540
	.byte	1,2,2,35,0,11
	.byte	'FI',0,4
	.word	540
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	540
	.byte	1,0,2,35,0,0,12,9,167,7,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12681
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,9,215,2,16,4,11
	.byte	'PC',0,4
	.word	540
	.byte	32,0,2,35,0,0,12,9,183,7,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13035
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,9,205,2,16,4,11
	.byte	'OPC',0,4
	.word	540
	.byte	8,24,2,35,0,11
	.byte	'FMT',0,4
	.word	540
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	540
	.byte	7,16,2,35,0,11
	.byte	'DREG',0,4
	.word	540
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	540
	.byte	12,0,2,35,0,0,12,9,175,7,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13122
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,9,221,2,16,4,11
	.byte	'SRC1',0,4
	.word	540
	.byte	32,0,2,35,0,0,12,9,191,7,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13287
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,9,227,2,16,4,11
	.byte	'SRC2',0,4
	.word	540
	.byte	32,0,2,35,0,0,12,9,199,7,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13378
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,9,233,2,16,4,11
	.byte	'SRC3',0,4
	.word	540
	.byte	32,0,2,35,0,0,12,9,207,7,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13469
	.byte	4,2,35,0,0,15,228,63
	.word	692
	.byte	16,227,63,0,10
	.byte	'_Ifx_CPU_DPR_L_Bits',0,9,243,1,16,4,11
	.byte	'reserved_0',0,4
	.word	540
	.byte	3,29,2,35,0,11
	.byte	'LOWBND',0,4
	.word	540
	.byte	29,0,2,35,0,0,12,9,239,6,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13571
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DPR_U_Bits',0,9,250,1,16,4,11
	.byte	'reserved_0',0,4
	.word	540
	.byte	3,29,2,35,0,11
	.byte	'UPPBND',0,4
	.word	540
	.byte	29,0,2,35,0,0,12,9,247,6,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13678
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DPR',0,9,254,9,25,8,13
	.byte	'L',0
	.word	13638
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	13745
	.byte	4,2,35,4,0,15,128,1
	.word	13785
	.byte	16,15,0,14
	.word	13827
	.byte	15,128,31
	.word	692
	.byte	16,255,30,0,10
	.byte	'_Ifx_CPU_CPR_L_Bits',0,9,99,16,4,11
	.byte	'reserved_0',0,4
	.word	540
	.byte	3,29,2,35,0,11
	.byte	'LOWBND',0,4
	.word	540
	.byte	29,0,2,35,0,0,12,9,231,5,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13853
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_CPR_U_Bits',0,9,106,16,4,11
	.byte	'reserved_0',0,4
	.word	540
	.byte	3,29,2,35,0,11
	.byte	'UPPBND',0,4
	.word	540
	.byte	29,0,2,35,0,0,12,9,239,5,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13959
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_CPR',0,9,247,9,25,8,13
	.byte	'L',0
	.word	13919
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	14025
	.byte	4,2,35,4,0,15,64
	.word	14065
	.byte	16,7,0,14
	.word	14107
	.byte	15,192,31
	.word	692
	.byte	16,191,31,0,10
	.byte	'_Ifx_CPU_CPXE_Bits',0,9,121,16,4,11
	.byte	'XE',0,4
	.word	540
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	540
	.byte	24,0,2,35,0,0,12,9,255,5,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14132
	.byte	4,2,35,0,0,15,16
	.word	14193
	.byte	16,3,0,10
	.byte	'_Ifx_CPU_DPRE_Bits',0,9,129,2,16,4,11
	.byte	'RE',0,4
	.word	540
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	540
	.byte	16,0,2,35,0,0,12,9,255,6,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14242
	.byte	4,2,35,0,0,15,16
	.word	14305
	.byte	16,3,0,10
	.byte	'_Ifx_CPU_DPWE_Bits',0,9,136,2,16,4,11
	.byte	'WE',0,4
	.word	540
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	540
	.byte	16,0,2,35,0,0,12,9,135,7,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14354
	.byte	4,2,35,0,0,15,16
	.word	14417
	.byte	16,3,0,15,208,7
	.word	692
	.byte	16,207,7,0,10
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,9,241,4,16,4,11
	.byte	'TEXP0',0,4
	.word	540
	.byte	1,31,2,35,0,11
	.byte	'TEXP1',0,4
	.word	540
	.byte	1,30,2,35,0,11
	.byte	'TEXP2',0,4
	.word	540
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	540
	.byte	13,16,2,35,0,11
	.byte	'TTRAP',0,4
	.word	540
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	540
	.byte	15,0,2,35,0,0,12,9,199,9,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14477
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,9,252,4,16,4,11
	.byte	'Timer',0,4
	.word	540
	.byte	32,0,2,35,0,0,12,9,207,9,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14659
	.byte	4,2,35,0,0,15,12
	.word	14707
	.byte	16,2,0,10
	.byte	'_Ifx_CPU_TPS',0,9,142,10,25,16,13
	.byte	'CON',0
	.word	14619
	.byte	4,2,35,0,13
	.byte	'TIMER',0
	.word	14747
	.byte	12,2,35,4,0,14
	.word	14756
	.byte	15,240,23
	.word	692
	.byte	16,239,23,0,10
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,9,136,5,16,4,11
	.byte	'EVTA',0,4
	.word	540
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	540
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	540
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	540
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	540
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	540
	.byte	4,20,2,35,0,11
	.byte	'TYP',0,4
	.word	540
	.byte	1,19,2,35,0,11
	.byte	'RNG',0,4
	.word	540
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	540
	.byte	1,17,2,35,0,11
	.byte	'ASI_EN',0,4
	.word	540
	.byte	1,16,2,35,0,11
	.byte	'ASI',0,4
	.word	540
	.byte	5,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	540
	.byte	6,5,2,35,0,11
	.byte	'AST',0,4
	.word	540
	.byte	1,4,2,35,0,11
	.byte	'ALD',0,4
	.word	540
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	540
	.byte	3,0,2,35,0,0,12,9,223,9,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14820
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,9,130,5,16,4,11
	.byte	'ADDR',0,4
	.word	540
	.byte	32,0,2,35,0,0,12,9,215,9,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15149
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_TR',0,9,149,10,25,8,13
	.byte	'EVT',0
	.word	15109
	.byte	4,2,35,0,13
	.byte	'ADR',0
	.word	15193
	.byte	4,2,35,4,0,15,64
	.word	15233
	.byte	16,7,0,14
	.word	15278
	.byte	15,192,23
	.word	692
	.byte	16,191,23,0,10
	.byte	'_Ifx_CPU_CCTRL_Bits',0,9,72,16,4,11
	.byte	'CM',0,4
	.word	540
	.byte	1,31,2,35,0,11
	.byte	'CE',0,4
	.word	540
	.byte	1,30,2,35,0,11
	.byte	'M1',0,4
	.word	540
	.byte	3,27,2,35,0,11
	.byte	'M2',0,4
	.word	540
	.byte	3,24,2,35,0,11
	.byte	'M3',0,4
	.word	540
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	540
	.byte	21,0,2,35,0,0,12,9,207,5,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15303
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_CCNT_Bits',0,9,65,16,4,11
	.byte	'CountValue',0,4
	.word	540
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	540
	.byte	1,0,2,35,0,0,12,9,199,5,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15462
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_ICNT_Bits',0,9,239,2,16,4,11
	.byte	'CountValue',0,4
	.word	540
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	540
	.byte	1,0,2,35,0,0,12,9,215,7,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15565
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_M1CNT_Bits',0,9,142,3,16,4,11
	.byte	'CountValue',0,4
	.word	540
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	540
	.byte	1,0,2,35,0,0,12,9,247,7,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15669
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_M2CNT_Bits',0,9,149,3,16,4,11
	.byte	'CountValue',0,4
	.word	540
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	540
	.byte	1,0,2,35,0,0,12,9,255,7,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15774
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_M3CNT_Bits',0,9,156,3,16,4,11
	.byte	'CountValue',0,4
	.word	540
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	540
	.byte	1,0,2,35,0,0,12,9,135,8,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15879
	.byte	4,2,35,0,0,15,232,1
	.word	692
	.byte	16,231,1,0,10
	.byte	'_Ifx_CPU_DBGSR_Bits',0,9,166,1,16,4,11
	.byte	'DE',0,4
	.word	540
	.byte	1,31,2,35,0,11
	.byte	'HALT',0,4
	.word	540
	.byte	2,29,2,35,0,11
	.byte	'SIH',0,4
	.word	540
	.byte	1,28,2,35,0,11
	.byte	'SUSP',0,4
	.word	540
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	540
	.byte	1,26,2,35,0,11
	.byte	'PREVSUSP',0,4
	.word	540
	.byte	1,25,2,35,0,11
	.byte	'PEVT',0,4
	.word	540
	.byte	1,24,2,35,0,11
	.byte	'EVTSRC',0,4
	.word	540
	.byte	5,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	540
	.byte	19,0,2,35,0,0
.L161:
	.byte	12,9,167,6,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15995
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_EXEVT_Bits',0,9,164,2,16,4,11
	.byte	'EVTA',0,4
	.word	540
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	540
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	540
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	540
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	540
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	540
	.byte	24,0,2,35,0,0,12,9,151,7,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16222
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_CREVT_Bits',0,9,128,1,16,4,11
	.byte	'EVTA',0,4
	.word	540
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	540
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	540
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	540
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	540
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	540
	.byte	24,0,2,35,0,0,12,9,135,6,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16388
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_SWEVT_Bits',0,9,212,4,16,4,11
	.byte	'EVTA',0,4
	.word	540
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	540
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	540
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	540
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	540
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	540
	.byte	24,0,2,35,0,0,12,9,175,9,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16554
	.byte	4,2,35,0,0,15,28
	.word	692
	.byte	16,27,0,10
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,9,156,5,16,4,11
	.byte	'T0',0,4
	.word	540
	.byte	1,31,2,35,0,11
	.byte	'T1',0,4
	.word	540
	.byte	1,30,2,35,0,11
	.byte	'T2',0,4
	.word	540
	.byte	1,29,2,35,0,11
	.byte	'T3',0,4
	.word	540
	.byte	1,28,2,35,0,11
	.byte	'T4',0,4
	.word	540
	.byte	1,27,2,35,0,11
	.byte	'T5',0,4
	.word	540
	.byte	1,26,2,35,0,11
	.byte	'T6',0,4
	.word	540
	.byte	1,25,2,35,0,11
	.byte	'T7',0,4
	.word	540
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	540
	.byte	24,0,2,35,0,0,12,9,231,9,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16729
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DMS_Bits',0,9,236,1,16,4,11
	.byte	'reserved_0',0,4
	.word	540
	.byte	1,31,2,35,0,11
	.byte	'DMSValue',0,4
	.word	540
	.byte	31,0,2,35,0,0,12,9,231,6,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16933
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DCX_Bits',0,9,202,1,16,4,11
	.byte	'reserved_0',0,4
	.word	540
	.byte	6,26,2,35,0,11
	.byte	'DCXValue',0,4
	.word	540
	.byte	26,0,2,35,0,0,12,9,199,6,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17040
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,9,180,1,16,4,11
	.byte	'DTA',0,4
	.word	540
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	540
	.byte	31,0,2,35,0,0,12,9,175,6,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17147
	.byte	4,2,35,0,0,15,180,1
	.word	692
	.byte	16,179,1,0,10
	.byte	'_Ifx_CPU_PCXI_Bits',0,9,193,3,16,4,11
	.byte	'PCXO',0,4
	.word	540
	.byte	16,16,2,35,0,11
	.byte	'PCXS',0,4
	.word	540
	.byte	4,12,2,35,0,11
	.byte	'UL',0,4
	.word	540
	.byte	1,11,2,35,0,11
	.byte	'PIE',0,4
	.word	540
	.byte	1,10,2,35,0,11
	.byte	'PCPN',0,4
	.word	540
	.byte	10,0,2,35,0,0,12,9,175,8,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17263
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_PSW_Bits',0,9,132,4,16,4,11
	.byte	'CDC',0,4
	.word	540
	.byte	7,25,2,35,0,11
	.byte	'CDE',0,4
	.word	540
	.byte	1,24,2,35,0,11
	.byte	'GW',0,4
	.word	540
	.byte	1,23,2,35,0,11
	.byte	'IS',0,4
	.word	540
	.byte	1,22,2,35,0,11
	.byte	'IO',0,4
	.word	540
	.byte	2,20,2,35,0,11
	.byte	'PRS',0,4
	.word	540
	.byte	2,18,2,35,0,11
	.byte	'S',0,4
	.word	540
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	540
	.byte	12,5,2,35,0,11
	.byte	'SAV',0,4
	.word	540
	.byte	1,4,2,35,0,11
	.byte	'AV',0,4
	.word	540
	.byte	1,3,2,35,0,11
	.byte	'SV',0,4
	.word	540
	.byte	1,2,2,35,0,11
	.byte	'V',0,4
	.word	540
	.byte	1,1,2,35,0,11
	.byte	'C',0,4
	.word	540
	.byte	1,0,2,35,0,0,12,9,231,8,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17406
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_PC_Bits',0,9,163,3,16,4,11
	.byte	'reserved_0',0,4
	.word	540
	.byte	1,31,2,35,0,11
	.byte	'PC',0,4
	.word	540
	.byte	31,0,2,35,0,0,12,9,143,8,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17663
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_SYSCON_Bits',0,9,223,4,16,4,11
	.byte	'FCDSF',0,4
	.word	540
	.byte	1,31,2,35,0,11
	.byte	'PROTEN',0,4
	.word	540
	.byte	1,30,2,35,0,11
	.byte	'TPROTEN',0,4
	.word	540
	.byte	1,29,2,35,0,11
	.byte	'IS',0,4
	.word	540
	.byte	1,28,2,35,0,11
	.byte	'IT',0,4
	.word	540
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	540
	.byte	27,0,2,35,0,0,12,9,183,9,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17763
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,9,113,16,4,11
	.byte	'MODREV',0,4
	.word	540
	.byte	8,24,2,35,0,11
	.byte	'MOD_32B',0,4
	.word	540
	.byte	8,16,2,35,0,11
	.byte	'MOD',0,4
	.word	540
	.byte	16,0,2,35,0,0,12,9,247,5,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17935
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,9,92,16,4,11
	.byte	'CORE_ID',0,4
	.word	540
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	540
	.byte	29,0,2,35,0,0
.L168:
	.byte	12,9,223,5,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18054
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_BIV_Bits',0,9,51,16,4,11
	.byte	'VSS',0,4
	.word	540
	.byte	1,31,2,35,0,11
	.byte	'BIV',0,4
	.word	540
	.byte	31,0,2,35,0,0,12,9,183,5,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18163
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_BTV_Bits',0,9,58,16,4,11
	.byte	'reserved_0',0,4
	.word	540
	.byte	1,31,2,35,0,11
	.byte	'BTV',0,4
	.word	540
	.byte	31,0,2,35,0,0,12,9,191,5,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18257
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_ISP_Bits',0,9,128,3,16,4,11
	.byte	'ISP',0,4
	.word	540
	.byte	32,0,2,35,0,0,12,9,231,7,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18358
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_ICR_Bits',0,9,246,2,16,4,11
	.byte	'CCPN',0,4
	.word	540
	.byte	10,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	540
	.byte	5,17,2,35,0,11
	.byte	'IE',0,4
	.word	540
	.byte	1,16,2,35,0,11
	.byte	'PIPN',0,4
	.word	540
	.byte	10,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	540
	.byte	6,0,2,35,0,0,12,9,223,7,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18438
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_FCX_Bits',0,9,175,2,16,4,11
	.byte	'FCXO',0,4
	.word	540
	.byte	16,16,2,35,0,11
	.byte	'FCXS',0,4
	.word	540
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	540
	.byte	12,0,2,35,0,0,12,9,159,7,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18595
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_LCX_Bits',0,9,134,3,16,4,11
	.byte	'LCXO',0,4
	.word	540
	.byte	16,16,2,35,0,11
	.byte	'LCXS',0,4
	.word	540
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	540
	.byte	12,0,2,35,0,0,12,9,239,7,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18715
	.byte	4,2,35,0,0,15,16
	.word	692
	.byte	16,15,0,10
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,9,139,1,16,4,11
	.byte	'CID',0,4
	.word	540
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	540
	.byte	29,0,2,35,0,0,12,9,143,6,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18844
	.byte	4,2,35,0,0,15,172,1
	.word	692
	.byte	16,171,1,0,10
	.byte	'_Ifx_CPU_D_Bits',0,9,146,1,16,4,11
	.byte	'DATA',0,4
	.word	540
	.byte	32,0,2,35,0,0,12,9,151,6,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18960
	.byte	4,2,35,0,0,15,64
	.word	18999
	.byte	16,15,0,15,64
	.word	692
	.byte	16,63,0,10
	.byte	'_Ifx_CPU_A_Bits',0,9,45,16,4,11
	.byte	'ADDR',0,4
	.word	540
	.byte	32,0,2,35,0,0,12,9,175,5,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19057
	.byte	4,2,35,0,0,15,64
	.word	19095
	.byte	16,15,0,10
	.byte	'_Ifx_CPU',0,9,166,10,25,128,128,4,13
	.byte	'reserved_0',0
	.word	9483
	.byte	176,32,2,35,0,13
	.byte	'SEGEN',0
	.word	9594
	.byte	4,3,35,176,32,13
	.byte	'reserved_1034',0
	.word	9634
	.byte	208,223,1,3,35,180,32,13
	.byte	'TASK_ASI',0
	.word	9714
	.byte	4,4,35,132,128,2,13
	.byte	'reserved_8008',0
	.word	9754
	.byte	248,1,4,35,136,128,2,13
	.byte	'PMA0',0
	.word	9851
	.byte	4,4,35,128,130,2,13
	.byte	'PMA1',0
	.word	9977
	.byte	4,4,35,132,130,2,13
	.byte	'PMA2',0
	.word	10081
	.byte	4,4,35,136,130,2,13
	.byte	'reserved_810C',0
	.word	10121
	.byte	244,29,4,35,140,130,2,13
	.byte	'DCON2',0
	.word	10205
	.byte	4,4,35,128,160,2,13
	.byte	'reserved_9004',0
	.word	4329
	.byte	8,4,35,132,160,2,13
	.byte	'SMACON',0
	.word	10457
	.byte	4,4,35,140,160,2,13
	.byte	'DSTR',0
	.word	10794
	.byte	4,4,35,144,160,2,13
	.byte	'reserved_9014',0
	.word	2510
	.byte	4,4,35,148,160,2,13
	.byte	'DATR',0
	.word	11025
	.byte	4,4,35,152,160,2,13
	.byte	'DEADD',0
	.word	11117
	.byte	4,4,35,156,160,2,13
	.byte	'DIEAR',0
	.word	11198
	.byte	4,4,35,160,160,2,13
	.byte	'DIETR',0
	.word	11439
	.byte	4,4,35,164,160,2,13
	.byte	'reserved_9028',0
	.word	3700
	.byte	24,4,35,168,160,2,13
	.byte	'DCON0',0
	.word	11567
	.byte	4,4,35,192,160,2,13
	.byte	'reserved_9044',0
	.word	11607
	.byte	188,3,4,35,196,160,2,13
	.byte	'PSTR',0
	.word	11794
	.byte	4,4,35,128,164,2,13
	.byte	'PCON1',0
	.word	11917
	.byte	4,4,35,132,164,2,13
	.byte	'PCON2',0
	.word	12030
	.byte	4,4,35,136,164,2,13
	.byte	'PCON0',0
	.word	12158
	.byte	4,4,35,140,164,2,13
	.byte	'PIEAR',0
	.word	12239
	.byte	4,4,35,144,164,2,13
	.byte	'PIETR',0
	.word	12480
	.byte	4,4,35,148,164,2,13
	.byte	'reserved_9218',0
	.word	12520
	.byte	232,3,4,35,152,164,2,13
	.byte	'COMPAT',0
	.word	12630
	.byte	4,4,35,128,168,2,13
	.byte	'reserved_9404',0
	.word	12670
	.byte	252,23,4,35,132,168,2,13
	.byte	'FPU_TRAP_CON',0
	.word	12995
	.byte	4,4,35,128,192,2,13
	.byte	'FPU_TRAP_PC',0
	.word	13082
	.byte	4,4,35,132,192,2,13
	.byte	'FPU_TRAP_OPC',0
	.word	13247
	.byte	4,4,35,136,192,2,13
	.byte	'reserved_A00C',0
	.word	2510
	.byte	4,4,35,140,192,2,13
	.byte	'FPU_TRAP_SRC1',0
	.word	13338
	.byte	4,4,35,144,192,2,13
	.byte	'FPU_TRAP_SRC2',0
	.word	13429
	.byte	4,4,35,148,192,2,13
	.byte	'FPU_TRAP_SRC3',0
	.word	13520
	.byte	4,4,35,152,192,2,13
	.byte	'reserved_A01C',0
	.word	13560
	.byte	228,63,4,35,156,192,2,13
	.byte	'DPR',0
	.word	13837
	.byte	128,1,4,35,128,128,3,13
	.byte	'reserved_C080',0
	.word	13842
	.byte	128,31,4,35,128,129,3,13
	.byte	'CPR',0
	.word	14116
	.byte	64,4,35,128,160,3,13
	.byte	'reserved_D040',0
	.word	14121
	.byte	192,31,4,35,192,160,3,13
	.byte	'CPXE',0
	.word	14233
	.byte	16,4,35,128,192,3,13
	.byte	'DPRE',0
	.word	14345
	.byte	16,4,35,144,192,3,13
	.byte	'DPWE',0
	.word	14457
	.byte	16,4,35,160,192,3,13
	.byte	'reserved_E030',0
	.word	14466
	.byte	208,7,4,35,176,192,3,13
	.byte	'TPS',0
	.word	14804
	.byte	16,4,35,128,200,3,13
	.byte	'reserved_E410',0
	.word	14809
	.byte	240,23,4,35,144,200,3,13
	.byte	'TR',0
	.word	15287
	.byte	64,4,35,128,224,3,13
	.byte	'reserved_F040',0
	.word	15292
	.byte	192,23,4,35,192,224,3,13
	.byte	'CCTRL',0
	.word	15422
	.byte	4,4,35,128,248,3,13
	.byte	'CCNT',0
	.word	15525
	.byte	4,4,35,132,248,3,13
	.byte	'ICNT',0
	.word	15629
	.byte	4,4,35,136,248,3,13
	.byte	'M1CNT',0
	.word	15734
	.byte	4,4,35,140,248,3,13
	.byte	'M2CNT',0
	.word	15839
	.byte	4,4,35,144,248,3,13
	.byte	'M3CNT',0
	.word	15944
	.byte	4,4,35,148,248,3,13
	.byte	'reserved_FC18',0
	.word	15984
	.byte	232,1,4,35,152,248,3,13
	.byte	'DBGSR',0
	.word	16182
	.byte	4,4,35,128,250,3,13
	.byte	'reserved_FD04',0
	.word	2510
	.byte	4,4,35,132,250,3,13
	.byte	'EXEVT',0
	.word	16348
	.byte	4,4,35,136,250,3,13
	.byte	'CREVT',0
	.word	16514
	.byte	4,4,35,140,250,3,13
	.byte	'SWEVT',0
	.word	16680
	.byte	4,4,35,144,250,3,13
	.byte	'reserved_FD14',0
	.word	16720
	.byte	28,4,35,148,250,3,13
	.byte	'TRIG_ACC',0
	.word	16893
	.byte	4,4,35,176,250,3,13
	.byte	'reserved_FD34',0
	.word	4669
	.byte	12,4,35,180,250,3,13
	.byte	'DMS',0
	.word	17000
	.byte	4,4,35,192,250,3,13
	.byte	'DCX',0
	.word	17107
	.byte	4,4,35,196,250,3,13
	.byte	'DBGTCR',0
	.word	17212
	.byte	4,4,35,200,250,3,13
	.byte	'reserved_FD4C',0
	.word	17252
	.byte	180,1,4,35,204,250,3,13
	.byte	'PCXI',0
	.word	17366
	.byte	4,4,35,128,252,3,13
	.byte	'PSW',0
	.word	17623
	.byte	4,4,35,132,252,3,13
	.byte	'PC',0
	.word	17723
	.byte	4,4,35,136,252,3,13
	.byte	'reserved_FE0C',0
	.word	4329
	.byte	8,4,35,140,252,3,13
	.byte	'SYSCON',0
	.word	17895
	.byte	4,4,35,148,252,3,13
	.byte	'CPU_ID',0
	.word	18014
	.byte	4,4,35,152,252,3,13
	.byte	'CORE_ID',0
	.word	18123
	.byte	4,4,35,156,252,3,13
	.byte	'BIV',0
	.word	18217
	.byte	4,4,35,160,252,3,13
	.byte	'BTV',0
	.word	18318
	.byte	4,4,35,164,252,3,13
	.byte	'ISP',0
	.word	18398
	.byte	4,4,35,168,252,3,13
	.byte	'ICR',0
	.word	18555
	.byte	4,4,35,172,252,3,13
	.byte	'reserved_FE30',0
	.word	4329
	.byte	8,4,35,176,252,3,13
	.byte	'FCX',0
	.word	18675
	.byte	4,4,35,184,252,3,13
	.byte	'LCX',0
	.word	18795
	.byte	4,4,35,188,252,3,13
	.byte	'reserved_FE40',0
	.word	18835
	.byte	16,4,35,192,252,3,13
	.byte	'CUS_ID',0
	.word	18909
	.byte	4,4,35,208,252,3,13
	.byte	'reserved_FE54',0
	.word	18949
	.byte	172,1,4,35,212,252,3,13
	.byte	'D',0
	.word	19039
	.byte	64,4,35,128,254,3,13
	.byte	'reserved_FF40',0
	.word	19048
	.byte	64,4,35,192,254,3,13
	.byte	'A',0
	.word	19135
	.byte	64,4,35,128,255,3,13
	.byte	'reserved_FFC0',0
	.word	19048
	.byte	64,4,35,192,255,3,0,14
	.word	19144
.L158:
	.byte	3
	.word	20935
.L163:
	.byte	17,10,156,1,9,1,18
	.byte	'IfxCpu_ResourceCpu_0',0,0,18
	.byte	'IfxCpu_ResourceCpu_1',0,1,18
	.byte	'IfxCpu_ResourceCpu_none',0,2,0
.L198:
	.byte	8
	.byte	'IfxCpu_getAddress',0,3,8,232,5,21
	.word	20940
	.byte	1,1
.L200:
	.byte	5
	.byte	'cpu',0,8,232,5,58
	.word	20945
.L202:
	.byte	6,0
.L165:
	.byte	8
	.byte	'IfxCpu_getCoreIndex',0,3,8,141,6,31
	.word	20945
	.byte	1,1
.L167:
	.byte	6,0,8
	.byte	'IfxCpu_areInterruptsEnabled',0,3,8,139,5,20
	.word	692
	.byte	1,1,6,0,8
	.byte	'IfxCpu_getPerformanceCounter',0,3,8,161,6,19
	.word	311
	.byte	1,1,5
	.byte	'address',0,8,161,6,55
	.word	709
	.byte	6,0,8
	.byte	'IfxCpu_getPerformanceCounterStickyOverflow',0,3,8,190,6,20
	.word	692
	.byte	1,1,5
	.byte	'address',0,8,190,6,70
	.word	709
	.byte	6,0,4
	.byte	'IfxCpu_updatePerformanceCounter',0,3,8,172,8,17,1,1,5
	.byte	'address',0,8,172,8,56
	.word	311
	.byte	5
	.byte	'count',0,8,172,8,72
	.word	311
	.byte	19,6,0,0,20
	.word	533
	.byte	21
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,22
	.word	21355
	.byte	0,14
	.word	517
	.byte	3
	.word	517
	.byte	23
	.byte	'__cmpswapw',0
	.word	21397
	.byte	1,1,1,1,24
	.byte	'p',0
	.word	21402
	.byte	24
	.byte	'value',0
	.word	517
	.byte	24
	.byte	'compare',0
	.word	517
	.byte	0,3
	.word	533
	.byte	21
	.byte	'__imaskldmst',0,1,1,1,1,22
	.word	21459
	.byte	22
	.word	533
	.byte	22
	.word	533
	.byte	22
	.word	533
	.byte	0,14
	.word	533
	.byte	23
	.byte	'__mfcr',0
	.word	21503
	.byte	1,1,1,1,22
	.word	533
	.byte	0,25
	.byte	'__nop',0,1,1,1,1,26
	.word	173
	.byte	27
	.word	199
	.byte	6,0,26
	.word	234
	.byte	27
	.word	266
	.byte	6,0,26
	.word	279
	.byte	6,0,26
	.word	332
	.byte	27
	.word	364
	.byte	27
	.word	375
	.byte	27
	.word	386
	.byte	6,0,26
	.word	436
	.byte	27
	.word	455
	.byte	6,0,26
	.word	471
	.byte	27
	.word	486
	.byte	27
	.word	500
	.byte	6,0,26
	.word	1279
	.byte	27
	.word	1319
	.byte	27
	.word	1337
	.byte	6,0,26
	.word	1357
	.byte	27
	.word	1395
	.byte	27
	.word	1413
	.byte	6,0,28
	.byte	'IfxScuWdt_clearCpuEndinit',0,3,217,1,17,1,1,1,1,5
	.byte	'password',0,3,217,1,50
	.word	709
	.byte	0,28
	.byte	'IfxScuWdt_clearSafetyEndinit',0,3,229,1,17,1,1,1,1,5
	.byte	'password',0,3,229,1,53
	.word	709
	.byte	0,28
	.byte	'IfxScuWdt_setCpuEndinit',0,3,239,1,17,1,1,1,1,5
	.byte	'password',0,3,239,1,48
	.word	709
	.byte	0,28
	.byte	'IfxScuWdt_setSafetyEndinit',0,3,249,1,17,1,1,1,1,5
	.byte	'password',0,3,249,1,51
	.word	709
	.byte	0,26
	.word	1433
	.byte	27
	.word	1484
	.byte	6,0,29
	.byte	'IfxScuWdt_getCpuWatchdogPassword',0,3,129,3,19
	.word	709
	.byte	1,1,1,1,29
	.byte	'IfxScuWdt_getSafetyWatchdogPassword',0,3,143,3,19
	.word	709
	.byte	1,1,1,1,26
	.word	9365
	.byte	27
	.word	9393
	.byte	27
	.word	9407
	.byte	27
	.word	9425
	.byte	6,0,26
	.word	9443
	.byte	6,0,29
	.byte	'IfxScuCcu_getSourceFrequency',0,7,173,7,20
	.word	225
	.byte	1,1,1,1,26
	.word	21024
	.byte	27
	.word	21054
	.byte	6,0,26
	.word	21069
	.byte	6,0
.L156:
	.byte	17,8,132,1,9,1,18
	.byte	'IfxCpu_CoreMode_halt',0,0,18
	.byte	'IfxCpu_CoreMode_run',0,1,18
	.byte	'IfxCpu_CoreMode_idle',0,2,18
	.byte	'IfxCpu_CoreMode_sleep',0,3,18
	.byte	'IfxCpu_CoreMode_stby',0,4,18
	.byte	'IfxCpu_CoreMode_unknown',0,5,0,10
	.byte	'_Ifx_SCU_PMCSR_Bits',0,4,244,6,16,4,11
	.byte	'REQSLP',0,1
	.word	692
	.byte	2,6,2,35,0,11
	.byte	'SMUSLP',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	692
	.byte	5,0,2,35,0,11
	.byte	'PMST',0,1
	.word	692
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	517
	.byte	21,0,2,35,0,0,12,4,239,13,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22220
	.byte	4,2,35,0,0,14
	.word	22344
.L171:
	.byte	3
	.word	22384
	.byte	26
	.word	21103
	.byte	6,0,26
	.word	21145
	.byte	27
	.word	21186
	.byte	6,0,26
	.word	21205
	.byte	27
	.word	21260
	.byte	6,0,26
	.word	21279
	.byte	27
	.word	21319
	.byte	27
	.word	21336
	.byte	19,6,0,0
.L209:
	.byte	3
	.word	517
.L212:
	.byte	14
	.word	311
.L217:
	.byte	3
	.word	517
.L223:
	.byte	14
	.word	311
.L226:
	.byte	3
	.word	311
.L252:
	.byte	3
	.word	517
	.byte	14
	.word	311
.L255:
	.byte	3
	.word	22474
	.byte	7
	.byte	'short int',0,2,5,30
	.byte	'__wchar_t',0,11,1,1
	.word	22484
	.byte	30
	.byte	'__size_t',0,11,1,1
	.word	517
	.byte	30
	.byte	'__ptrdiff_t',0,11,1,1
	.word	533
	.byte	31,1,3
	.word	22552
	.byte	30
	.byte	'__codeptr',0,11,1,1
	.word	22554
	.byte	30
	.byte	'boolean',0,12,101,29
	.word	692
	.byte	30
	.byte	'uint8',0,12,105,29
	.word	692
	.byte	30
	.byte	'uint16',0,12,109,29
	.word	709
	.byte	30
	.byte	'uint32',0,12,113,29
	.word	311
	.byte	30
	.byte	'uint64',0,12,118,29
	.word	399
	.byte	30
	.byte	'sint16',0,12,126,29
	.word	22484
	.byte	7
	.byte	'long int',0,4,5,30
	.byte	'sint32',0,12,131,1,29
	.word	22667
	.byte	7
	.byte	'long long int',0,8,5,30
	.byte	'sint64',0,12,138,1,29
	.word	22695
	.byte	30
	.byte	'float32',0,12,167,1,29
	.word	225
	.byte	30
	.byte	'pvoid',0,13,57,28
	.word	431
	.byte	30
	.byte	'Ifx_TickTime',0,13,79,28
	.word	22695
	.byte	17,13,130,1,9,1,18
	.byte	'Ifx_RxSel_a',0,0,18
	.byte	'Ifx_RxSel_b',0,1,18
	.byte	'Ifx_RxSel_c',0,2,18
	.byte	'Ifx_RxSel_d',0,3,18
	.byte	'Ifx_RxSel_e',0,4,18
	.byte	'Ifx_RxSel_f',0,5,18
	.byte	'Ifx_RxSel_g',0,6,18
	.byte	'Ifx_RxSel_h',0,7,0,30
	.byte	'Ifx_RxSel',0,13,140,1,3
	.word	22780
	.byte	14
	.word	425
	.byte	3
	.word	22918
	.byte	32,13,143,1,9,8,13
	.byte	'module',0
	.word	22923
	.byte	4,2,35,0,13
	.byte	'index',0
	.word	22667
	.byte	4,2,35,4,0,30
	.byte	'IfxModule_IndexMap',0,13,147,1,3
	.word	22928
	.byte	30
	.byte	'Ifx_CPU_A_Bits',0,9,48,3
	.word	19057
	.byte	30
	.byte	'Ifx_CPU_BIV_Bits',0,9,55,3
	.word	18163
	.byte	30
	.byte	'Ifx_CPU_BTV_Bits',0,9,62,3
	.word	18257
	.byte	30
	.byte	'Ifx_CPU_CCNT_Bits',0,9,69,3
	.word	15462
	.byte	30
	.byte	'Ifx_CPU_CCTRL_Bits',0,9,80,3
	.word	15303
	.byte	30
	.byte	'Ifx_CPU_COMPAT_Bits',0,9,89,3
	.word	12531
	.byte	30
	.byte	'Ifx_CPU_CORE_ID_Bits',0,9,96,3
	.word	18054
	.byte	30
	.byte	'Ifx_CPU_CPR_L_Bits',0,9,103,3
	.word	13853
	.byte	30
	.byte	'Ifx_CPU_CPR_U_Bits',0,9,110,3
	.word	13959
	.byte	30
	.byte	'Ifx_CPU_CPU_ID_Bits',0,9,118,3
	.word	17935
	.byte	30
	.byte	'Ifx_CPU_CPXE_Bits',0,9,125,3
	.word	14132
	.byte	30
	.byte	'Ifx_CPU_CREVT_Bits',0,9,136,1,3
	.word	16388
	.byte	30
	.byte	'Ifx_CPU_CUS_ID_Bits',0,9,143,1,3
	.word	18844
	.byte	30
	.byte	'Ifx_CPU_D_Bits',0,9,149,1,3
	.word	18960
	.byte	30
	.byte	'Ifx_CPU_DATR_Bits',0,9,163,1,3
	.word	10834
	.byte	30
	.byte	'Ifx_CPU_DBGSR_Bits',0,9,177,1,3
	.word	15995
	.byte	30
	.byte	'Ifx_CPU_DBGTCR_Bits',0,9,184,1,3
	.word	17147
	.byte	30
	.byte	'Ifx_CPU_DCON0_Bits',0,9,192,1,3
	.word	11479
	.byte	30
	.byte	'Ifx_CPU_DCON2_Bits',0,9,199,1,3
	.word	10132
	.byte	30
	.byte	'Ifx_CPU_DCX_Bits',0,9,206,1,3
	.word	17040
	.byte	30
	.byte	'Ifx_CPU_DEADD_Bits',0,9,212,1,3
	.word	11065
	.byte	30
	.byte	'Ifx_CPU_DIEAR_Bits',0,9,218,1,3
	.word	11157
	.byte	30
	.byte	'Ifx_CPU_DIETR_Bits',0,9,233,1,3
	.word	11238
	.byte	30
	.byte	'Ifx_CPU_DMS_Bits',0,9,240,1,3
	.word	16933
	.byte	30
	.byte	'Ifx_CPU_DPR_L_Bits',0,9,247,1,3
	.word	13571
	.byte	30
	.byte	'Ifx_CPU_DPR_U_Bits',0,9,254,1,3
	.word	13678
	.byte	30
	.byte	'Ifx_CPU_DPRE_Bits',0,9,133,2,3
	.word	14242
	.byte	30
	.byte	'Ifx_CPU_DPWE_Bits',0,9,140,2,3
	.word	14354
	.byte	30
	.byte	'Ifx_CPU_DSTR_Bits',0,9,161,2,3
	.word	10497
	.byte	30
	.byte	'Ifx_CPU_EXEVT_Bits',0,9,172,2,3
	.word	16222
	.byte	30
	.byte	'Ifx_CPU_FCX_Bits',0,9,180,2,3
	.word	18595
	.byte	30
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,9,202,2,3
	.word	12681
	.byte	30
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,9,212,2,3
	.word	13122
	.byte	30
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,9,218,2,3
	.word	13035
	.byte	30
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,9,224,2,3
	.word	13287
	.byte	30
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,9,230,2,3
	.word	13378
	.byte	30
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,9,236,2,3
	.word	13469
	.byte	30
	.byte	'Ifx_CPU_ICNT_Bits',0,9,243,2,3
	.word	15565
	.byte	30
	.byte	'Ifx_CPU_ICR_Bits',0,9,253,2,3
	.word	18438
	.byte	30
	.byte	'Ifx_CPU_ISP_Bits',0,9,131,3,3
	.word	18358
	.byte	30
	.byte	'Ifx_CPU_LCX_Bits',0,9,139,3,3
	.word	18715
	.byte	30
	.byte	'Ifx_CPU_M1CNT_Bits',0,9,146,3,3
	.word	15669
	.byte	30
	.byte	'Ifx_CPU_M2CNT_Bits',0,9,153,3,3
	.word	15774
	.byte	30
	.byte	'Ifx_CPU_M3CNT_Bits',0,9,160,3,3
	.word	15879
	.byte	30
	.byte	'Ifx_CPU_PC_Bits',0,9,167,3,3
	.word	17663
	.byte	30
	.byte	'Ifx_CPU_PCON0_Bits',0,9,175,3,3
	.word	12070
	.byte	30
	.byte	'Ifx_CPU_PCON1_Bits',0,9,183,3,3
	.word	11834
	.byte	30
	.byte	'Ifx_CPU_PCON2_Bits',0,9,190,3,3
	.word	11957
	.byte	30
	.byte	'Ifx_CPU_PCXI_Bits',0,9,200,3,3
	.word	17263
	.byte	30
	.byte	'Ifx_CPU_PIEAR_Bits',0,9,206,3,3
	.word	12198
	.byte	30
	.byte	'Ifx_CPU_PIETR_Bits',0,9,221,3,3
	.word	12279
	.byte	30
	.byte	'Ifx_CPU_PMA0_Bits',0,9,229,3,3
	.word	9765
	.byte	30
	.byte	'Ifx_CPU_PMA1_Bits',0,9,237,3,3
	.word	9891
	.byte	30
	.byte	'Ifx_CPU_PMA2_Bits',0,9,244,3,3
	.word	10017
	.byte	30
	.byte	'Ifx_CPU_PSTR_Bits',0,9,129,4,3
	.word	11618
	.byte	30
	.byte	'Ifx_CPU_PSW_Bits',0,9,147,4,3
	.word	17406
	.byte	30
	.byte	'Ifx_CPU_SEGEN_Bits',0,9,156,4,3
	.word	9494
	.byte	30
	.byte	'Ifx_CPU_SMACON_Bits',0,9,171,4,3
	.word	10245
	.byte	10
	.byte	'_Ifx_CPU_SPROT_ACCENA_Bits',0,9,174,4,16,4,11
	.byte	'EN',0,4
	.word	517
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_CPU_SPROT_ACCENA_Bits',0,9,177,4,3
	.word	24617
	.byte	10
	.byte	'_Ifx_CPU_SPROT_ACCENB_Bits',0,9,180,4,16,4,11
	.byte	'reserved_0',0,4
	.word	517
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_CPU_SPROT_ACCENB_Bits',0,9,183,4,3
	.word	24700
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,9,186,4,16,4,11
	.byte	'EN',0,4
	.word	517
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,9,189,4,3
	.word	24791
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,9,192,4,16,4,11
	.byte	'reserved_0',0,4
	.word	517
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,9,195,4,3
	.word	24882
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_LA_Bits',0,9,198,4,16,4,11
	.byte	'reserved_0',0,1
	.word	692
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	517
	.byte	27,0,2,35,0,0,30
	.byte	'Ifx_CPU_SPROT_RGN_LA_Bits',0,9,202,4,3
	.word	24981
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_UA_Bits',0,9,205,4,16,4,11
	.byte	'reserved_0',0,1
	.word	692
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	517
	.byte	27,0,2,35,0,0,30
	.byte	'Ifx_CPU_SPROT_RGN_UA_Bits',0,9,209,4,3
	.word	25088
	.byte	30
	.byte	'Ifx_CPU_SWEVT_Bits',0,9,220,4,3
	.word	16554
	.byte	30
	.byte	'Ifx_CPU_SYSCON_Bits',0,9,231,4,3
	.word	17763
	.byte	30
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,9,238,4,3
	.word	9647
	.byte	30
	.byte	'Ifx_CPU_TPS_CON_Bits',0,9,249,4,3
	.word	14477
	.byte	30
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,9,255,4,3
	.word	14659
	.byte	30
	.byte	'Ifx_CPU_TR_ADR_Bits',0,9,133,5,3
	.word	15149
	.byte	30
	.byte	'Ifx_CPU_TR_EVT_Bits',0,9,153,5,3
	.word	14820
	.byte	30
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,9,167,5,3
	.word	16729
	.byte	30
	.byte	'Ifx_CPU_A',0,9,180,5,3
	.word	19095
	.byte	30
	.byte	'Ifx_CPU_BIV',0,9,188,5,3
	.word	18217
	.byte	30
	.byte	'Ifx_CPU_BTV',0,9,196,5,3
	.word	18318
	.byte	30
	.byte	'Ifx_CPU_CCNT',0,9,204,5,3
	.word	15525
	.byte	30
	.byte	'Ifx_CPU_CCTRL',0,9,212,5,3
	.word	15422
	.byte	30
	.byte	'Ifx_CPU_COMPAT',0,9,220,5,3
	.word	12630
	.byte	30
	.byte	'Ifx_CPU_CORE_ID',0,9,228,5,3
	.word	18123
	.byte	30
	.byte	'Ifx_CPU_CPR_L',0,9,236,5,3
	.word	13919
	.byte	30
	.byte	'Ifx_CPU_CPR_U',0,9,244,5,3
	.word	14025
	.byte	30
	.byte	'Ifx_CPU_CPU_ID',0,9,252,5,3
	.word	18014
	.byte	30
	.byte	'Ifx_CPU_CPXE',0,9,132,6,3
	.word	14193
	.byte	30
	.byte	'Ifx_CPU_CREVT',0,9,140,6,3
	.word	16514
	.byte	30
	.byte	'Ifx_CPU_CUS_ID',0,9,148,6,3
	.word	18909
	.byte	30
	.byte	'Ifx_CPU_D',0,9,156,6,3
	.word	18999
	.byte	30
	.byte	'Ifx_CPU_DATR',0,9,164,6,3
	.word	11025
	.byte	30
	.byte	'Ifx_CPU_DBGSR',0,9,172,6,3
	.word	16182
	.byte	30
	.byte	'Ifx_CPU_DBGTCR',0,9,180,6,3
	.word	17212
	.byte	30
	.byte	'Ifx_CPU_DCON0',0,9,188,6,3
	.word	11567
	.byte	30
	.byte	'Ifx_CPU_DCON2',0,9,196,6,3
	.word	10205
	.byte	30
	.byte	'Ifx_CPU_DCX',0,9,204,6,3
	.word	17107
	.byte	30
	.byte	'Ifx_CPU_DEADD',0,9,212,6,3
	.word	11117
	.byte	30
	.byte	'Ifx_CPU_DIEAR',0,9,220,6,3
	.word	11198
	.byte	30
	.byte	'Ifx_CPU_DIETR',0,9,228,6,3
	.word	11439
	.byte	30
	.byte	'Ifx_CPU_DMS',0,9,236,6,3
	.word	17000
	.byte	30
	.byte	'Ifx_CPU_DPR_L',0,9,244,6,3
	.word	13638
	.byte	30
	.byte	'Ifx_CPU_DPR_U',0,9,252,6,3
	.word	13745
	.byte	30
	.byte	'Ifx_CPU_DPRE',0,9,132,7,3
	.word	14305
	.byte	30
	.byte	'Ifx_CPU_DPWE',0,9,140,7,3
	.word	14417
	.byte	30
	.byte	'Ifx_CPU_DSTR',0,9,148,7,3
	.word	10794
	.byte	30
	.byte	'Ifx_CPU_EXEVT',0,9,156,7,3
	.word	16348
	.byte	30
	.byte	'Ifx_CPU_FCX',0,9,164,7,3
	.word	18675
	.byte	30
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,9,172,7,3
	.word	12995
	.byte	30
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,9,180,7,3
	.word	13247
	.byte	30
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,9,188,7,3
	.word	13082
	.byte	30
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,9,196,7,3
	.word	13338
	.byte	30
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,9,204,7,3
	.word	13429
	.byte	30
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,9,212,7,3
	.word	13520
	.byte	30
	.byte	'Ifx_CPU_ICNT',0,9,220,7,3
	.word	15629
	.byte	30
	.byte	'Ifx_CPU_ICR',0,9,228,7,3
	.word	18555
	.byte	30
	.byte	'Ifx_CPU_ISP',0,9,236,7,3
	.word	18398
	.byte	30
	.byte	'Ifx_CPU_LCX',0,9,244,7,3
	.word	18795
	.byte	30
	.byte	'Ifx_CPU_M1CNT',0,9,252,7,3
	.word	15734
	.byte	30
	.byte	'Ifx_CPU_M2CNT',0,9,132,8,3
	.word	15839
	.byte	30
	.byte	'Ifx_CPU_M3CNT',0,9,140,8,3
	.word	15944
	.byte	30
	.byte	'Ifx_CPU_PC',0,9,148,8,3
	.word	17723
	.byte	30
	.byte	'Ifx_CPU_PCON0',0,9,156,8,3
	.word	12158
	.byte	30
	.byte	'Ifx_CPU_PCON1',0,9,164,8,3
	.word	11917
	.byte	30
	.byte	'Ifx_CPU_PCON2',0,9,172,8,3
	.word	12030
	.byte	30
	.byte	'Ifx_CPU_PCXI',0,9,180,8,3
	.word	17366
	.byte	30
	.byte	'Ifx_CPU_PIEAR',0,9,188,8,3
	.word	12239
	.byte	30
	.byte	'Ifx_CPU_PIETR',0,9,196,8,3
	.word	12480
	.byte	30
	.byte	'Ifx_CPU_PMA0',0,9,204,8,3
	.word	9851
	.byte	30
	.byte	'Ifx_CPU_PMA1',0,9,212,8,3
	.word	9977
	.byte	30
	.byte	'Ifx_CPU_PMA2',0,9,220,8,3
	.word	10081
	.byte	30
	.byte	'Ifx_CPU_PSTR',0,9,228,8,3
	.word	11794
	.byte	30
	.byte	'Ifx_CPU_PSW',0,9,236,8,3
	.word	17623
	.byte	30
	.byte	'Ifx_CPU_SEGEN',0,9,244,8,3
	.word	9594
	.byte	30
	.byte	'Ifx_CPU_SMACON',0,9,252,8,3
	.word	10457
	.byte	12,9,255,8,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24617
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_SPROT_ACCENA',0,9,132,9,3
	.word	26778
	.byte	12,9,135,9,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24700
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_SPROT_ACCENB',0,9,140,9,3
	.word	26848
	.byte	12,9,143,9,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24791
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA',0,9,148,9,3
	.word	26918
	.byte	12,9,151,9,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24882
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB',0,9,156,9,3
	.word	26992
	.byte	12,9,159,9,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24981
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_SPROT_RGN_LA',0,9,164,9,3
	.word	27066
	.byte	12,9,167,9,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25088
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_SPROT_RGN_UA',0,9,172,9,3
	.word	27136
	.byte	30
	.byte	'Ifx_CPU_SWEVT',0,9,180,9,3
	.word	16680
	.byte	30
	.byte	'Ifx_CPU_SYSCON',0,9,188,9,3
	.word	17895
	.byte	30
	.byte	'Ifx_CPU_TASK_ASI',0,9,196,9,3
	.word	9714
	.byte	30
	.byte	'Ifx_CPU_TPS_CON',0,9,204,9,3
	.word	14619
	.byte	30
	.byte	'Ifx_CPU_TPS_TIMER',0,9,212,9,3
	.word	14707
	.byte	30
	.byte	'Ifx_CPU_TR_ADR',0,9,220,9,3
	.word	15193
	.byte	30
	.byte	'Ifx_CPU_TR_EVT',0,9,228,9,3
	.word	15109
	.byte	30
	.byte	'Ifx_CPU_TRIG_ACC',0,9,236,9,3
	.word	16893
	.byte	14
	.word	14065
	.byte	30
	.byte	'Ifx_CPU_CPR',0,9,251,9,3
	.word	27405
	.byte	14
	.word	13785
	.byte	30
	.byte	'Ifx_CPU_DPR',0,9,130,10,3
	.word	27431
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN',0,9,133,10,25,16,13
	.byte	'LA',0
	.word	27066
	.byte	4,2,35,0,13
	.byte	'UA',0
	.word	27136
	.byte	4,2,35,4,13
	.byte	'ACCENA',0
	.word	26918
	.byte	4,2,35,8,13
	.byte	'ACCENB',0
	.word	26992
	.byte	4,2,35,12,0,14
	.word	27457
	.byte	30
	.byte	'Ifx_CPU_SPROT_RGN',0,9,139,10,3
	.word	27539
	.byte	14
	.word	14756
	.byte	30
	.byte	'Ifx_CPU_TPS',0,9,146,10,3
	.word	27571
	.byte	14
	.word	15233
	.byte	30
	.byte	'Ifx_CPU_TR',0,9,153,10,3
	.word	27597
	.byte	14
	.word	19144
	.byte	30
	.byte	'Ifx_CPU',0,9,130,11,3
	.word	27622
	.byte	17,10,127,9,1,18
	.byte	'IfxCpu_Id_0',0,0,18
	.byte	'IfxCpu_Id_1',0,1,18
	.byte	'IfxCpu_Id_none',0,2,0,30
	.byte	'IfxCpu_Id',0,10,132,1,3
	.word	27644
	.byte	30
	.byte	'IfxCpu_ResourceCpu',0,10,161,1,3
	.word	20945
	.byte	15,16
	.word	22928
	.byte	16,1,0,20
	.word	27742
	.byte	33
	.byte	'IfxCpu_cfg_indexMap',0,10,167,1,41
	.word	27751
	.byte	1,1,10
	.byte	'_Ifx_SRC_SRCR_Bits',0,14,45,16,4,11
	.byte	'SRPN',0,1
	.word	692
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	692
	.byte	2,6,2,35,1,11
	.byte	'SRE',0,1
	.word	692
	.byte	1,5,2,35,1,11
	.byte	'TOS',0,1
	.word	692
	.byte	2,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	692
	.byte	3,0,2,35,1,11
	.byte	'ECC',0,1
	.word	692
	.byte	6,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	692
	.byte	2,0,2,35,2,11
	.byte	'SRR',0,1
	.word	692
	.byte	1,7,2,35,3,11
	.byte	'CLRR',0,1
	.word	692
	.byte	1,6,2,35,3,11
	.byte	'SETR',0,1
	.word	692
	.byte	1,5,2,35,3,11
	.byte	'IOV',0,1
	.word	692
	.byte	1,4,2,35,3,11
	.byte	'IOVCLR',0,1
	.word	692
	.byte	1,3,2,35,3,11
	.byte	'SWS',0,1
	.word	692
	.byte	1,2,2,35,3,11
	.byte	'SWSCLR',0,1
	.word	692
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SRC_SRCR_Bits',0,14,62,3
	.word	27787
	.byte	12,14,70,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27787
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SRC_SRCR',0,14,75,3
	.word	28103
	.byte	10
	.byte	'_Ifx_SRC_AGBT',0,14,86,25,4,13
	.byte	'SR',0
	.word	28103
	.byte	4,2,35,0,0,14
	.word	28163
	.byte	30
	.byte	'Ifx_SRC_AGBT',0,14,89,3
	.word	28195
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN',0,14,92,25,12,13
	.byte	'TX',0
	.word	28103
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	28103
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	28103
	.byte	4,2,35,8,0,14
	.word	28221
	.byte	30
	.byte	'Ifx_SRC_ASCLIN',0,14,97,3
	.word	28280
	.byte	10
	.byte	'_Ifx_SRC_BCUSPB',0,14,100,25,4,13
	.byte	'SBSRC',0
	.word	28103
	.byte	4,2,35,0,0,14
	.word	28308
	.byte	30
	.byte	'Ifx_SRC_BCUSPB',0,14,103,3
	.word	28345
	.byte	15,64
	.word	28103
	.byte	16,15,0,10
	.byte	'_Ifx_SRC_CAN',0,14,106,25,64,13
	.byte	'INT',0
	.word	28373
	.byte	64,2,35,0,0,14
	.word	28382
	.byte	30
	.byte	'Ifx_SRC_CAN',0,14,109,3
	.word	28414
	.byte	10
	.byte	'_Ifx_SRC_CCU6',0,14,112,25,16,13
	.byte	'SR0',0
	.word	28103
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	28103
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	28103
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	28103
	.byte	4,2,35,12,0,14
	.word	28439
	.byte	30
	.byte	'Ifx_SRC_CCU6',0,14,118,3
	.word	28511
	.byte	15,8
	.word	28103
	.byte	16,1,0,10
	.byte	'_Ifx_SRC_CERBERUS',0,14,121,25,8,13
	.byte	'SR',0
	.word	28537
	.byte	8,2,35,0,0,14
	.word	28546
	.byte	30
	.byte	'Ifx_SRC_CERBERUS',0,14,124,3
	.word	28582
	.byte	10
	.byte	'_Ifx_SRC_CIF',0,14,127,25,16,13
	.byte	'MI',0
	.word	28103
	.byte	4,2,35,0,13
	.byte	'MIEP',0
	.word	28103
	.byte	4,2,35,4,13
	.byte	'ISP',0
	.word	28103
	.byte	4,2,35,8,13
	.byte	'MJPEG',0
	.word	28103
	.byte	4,2,35,12,0,14
	.word	28612
	.byte	30
	.byte	'Ifx_SRC_CIF',0,14,133,1,3
	.word	28685
	.byte	10
	.byte	'_Ifx_SRC_CPU',0,14,136,1,25,4,13
	.byte	'SBSRC',0
	.word	28103
	.byte	4,2,35,0,0,14
	.word	28711
	.byte	30
	.byte	'Ifx_SRC_CPU',0,14,139,1,3
	.word	28746
	.byte	15,192,1
	.word	28103
	.byte	16,47,0,10
	.byte	'_Ifx_SRC_DMA',0,14,142,1,25,208,1,13
	.byte	'ERR',0
	.word	28103
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	4669
	.byte	12,2,35,4,13
	.byte	'CH',0
	.word	28772
	.byte	192,1,2,35,16,0,14
	.word	28782
	.byte	30
	.byte	'Ifx_SRC_DMA',0,14,147,1,3
	.word	28849
	.byte	10
	.byte	'_Ifx_SRC_DSADC',0,14,150,1,25,8,13
	.byte	'SRM',0
	.word	28103
	.byte	4,2,35,0,13
	.byte	'SRA',0
	.word	28103
	.byte	4,2,35,4,0,14
	.word	28875
	.byte	30
	.byte	'Ifx_SRC_DSADC',0,14,154,1,3
	.word	28923
	.byte	10
	.byte	'_Ifx_SRC_EMEM',0,14,157,1,25,4,13
	.byte	'SR',0
	.word	28103
	.byte	4,2,35,0,0,14
	.word	28951
	.byte	30
	.byte	'Ifx_SRC_EMEM',0,14,160,1,3
	.word	28984
	.byte	15,40
	.word	692
	.byte	16,39,0,10
	.byte	'_Ifx_SRC_ERAY',0,14,163,1,25,80,13
	.byte	'INT',0
	.word	28537
	.byte	8,2,35,0,13
	.byte	'TINT',0
	.word	28537
	.byte	8,2,35,8,13
	.byte	'NDAT',0
	.word	28537
	.byte	8,2,35,16,13
	.byte	'MBSC',0
	.word	28537
	.byte	8,2,35,24,13
	.byte	'OBUSY',0
	.word	28103
	.byte	4,2,35,32,13
	.byte	'IBUSY',0
	.word	28103
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	29011
	.byte	40,2,35,40,0,14
	.word	29020
	.byte	30
	.byte	'Ifx_SRC_ERAY',0,14,172,1,3
	.word	29147
	.byte	10
	.byte	'_Ifx_SRC_ETH',0,14,175,1,25,4,13
	.byte	'SR',0
	.word	28103
	.byte	4,2,35,0,0,14
	.word	29174
	.byte	30
	.byte	'Ifx_SRC_ETH',0,14,178,1,3
	.word	29206
	.byte	10
	.byte	'_Ifx_SRC_FCE',0,14,181,1,25,4,13
	.byte	'SR',0
	.word	28103
	.byte	4,2,35,0,0,14
	.word	29232
	.byte	30
	.byte	'Ifx_SRC_FCE',0,14,184,1,3
	.word	29264
	.byte	10
	.byte	'_Ifx_SRC_FFT',0,14,187,1,25,12,13
	.byte	'DONE',0
	.word	28103
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	28103
	.byte	4,2,35,4,13
	.byte	'RFS',0
	.word	28103
	.byte	4,2,35,8,0,14
	.word	29290
	.byte	30
	.byte	'Ifx_SRC_FFT',0,14,192,1,3
	.word	29350
	.byte	10
	.byte	'_Ifx_SRC_GPSR',0,14,195,1,25,32,13
	.byte	'SR0',0
	.word	28103
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	28103
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	28103
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	28103
	.byte	4,2,35,12,13
	.byte	'reserved_10',0
	.word	18835
	.byte	16,2,35,16,0,14
	.word	29376
	.byte	30
	.byte	'Ifx_SRC_GPSR',0,14,202,1,3
	.word	29470
	.byte	10
	.byte	'_Ifx_SRC_GPT12',0,14,205,1,25,48,13
	.byte	'CIRQ',0
	.word	28103
	.byte	4,2,35,0,13
	.byte	'T2',0
	.word	28103
	.byte	4,2,35,4,13
	.byte	'T3',0
	.word	28103
	.byte	4,2,35,8,13
	.byte	'T4',0
	.word	28103
	.byte	4,2,35,12,13
	.byte	'T5',0
	.word	28103
	.byte	4,2,35,16,13
	.byte	'T6',0
	.word	28103
	.byte	4,2,35,20,13
	.byte	'reserved_18',0
	.word	3700
	.byte	24,2,35,24,0,14
	.word	29497
	.byte	30
	.byte	'Ifx_SRC_GPT12',0,14,214,1,3
	.word	29614
	.byte	15,12
	.word	28103
	.byte	16,2,0,15,32
	.word	28103
	.byte	16,7,0,15,32
	.word	29651
	.byte	16,0,0,15,88
	.word	692
	.byte	16,87,0,15,108
	.word	28103
	.byte	16,26,0,15,96
	.word	692
	.byte	16,95,0,15,96
	.word	29651
	.byte	16,2,0,15,160,3
	.word	692
	.byte	16,159,3,0,15,64
	.word	29651
	.byte	16,1,0,15,192,3
	.word	692
	.byte	16,191,3,0,15,16
	.word	28103
	.byte	16,3,0,15,64
	.word	29736
	.byte	16,3,0,15,192,2
	.word	692
	.byte	16,191,2,0,15,52
	.word	692
	.byte	16,51,0,10
	.byte	'_Ifx_SRC_GTM',0,14,217,1,25,204,18,13
	.byte	'AEIIRQ',0
	.word	28103
	.byte	4,2,35,0,13
	.byte	'ARUIRQ',0
	.word	29642
	.byte	12,2,35,4,13
	.byte	'reserved_10',0
	.word	2510
	.byte	4,2,35,16,13
	.byte	'BRCIRQ',0
	.word	28103
	.byte	4,2,35,20,13
	.byte	'CMPIRQ',0
	.word	28103
	.byte	4,2,35,24,13
	.byte	'SPEIRQ',0
	.word	28537
	.byte	8,2,35,28,13
	.byte	'reserved_24',0
	.word	4329
	.byte	8,2,35,36,13
	.byte	'PSM',0
	.word	29660
	.byte	32,2,35,44,13
	.byte	'reserved_4C',0
	.word	29669
	.byte	88,2,35,76,13
	.byte	'DPLL',0
	.word	29678
	.byte	108,3,35,164,1,13
	.byte	'reserved_110',0
	.word	29687
	.byte	96,3,35,144,2,13
	.byte	'ERR',0
	.word	28103
	.byte	4,3,35,240,2,13
	.byte	'reserved_174',0
	.word	4669
	.byte	12,3,35,244,2,13
	.byte	'TIM',0
	.word	29696
	.byte	96,3,35,128,3,13
	.byte	'reserved_1E0',0
	.word	29705
	.byte	160,3,3,35,224,3,13
	.byte	'MCS',0
	.word	29696
	.byte	96,3,35,128,7,13
	.byte	'reserved_3E0',0
	.word	29705
	.byte	160,3,3,35,224,7,13
	.byte	'TOM',0
	.word	29716
	.byte	64,3,35,128,11,13
	.byte	'reserved_5C0',0
	.word	29725
	.byte	192,3,3,35,192,11,13
	.byte	'ATOM',0
	.word	29745
	.byte	64,3,35,128,15,13
	.byte	'reserved_7C0',0
	.word	29754
	.byte	192,2,3,35,192,15,13
	.byte	'MCSW0',0
	.word	29642
	.byte	12,3,35,128,18,13
	.byte	'reserved_90C',0
	.word	29765
	.byte	52,3,35,140,18,13
	.byte	'MCSW1',0
	.word	29642
	.byte	12,3,35,192,18,0,14
	.word	29774
	.byte	30
	.byte	'Ifx_SRC_GTM',0,14,243,1,3
	.word	30234
	.byte	10
	.byte	'_Ifx_SRC_HSCT',0,14,246,1,25,4,13
	.byte	'SR',0
	.word	28103
	.byte	4,2,35,0,0,14
	.word	30260
	.byte	30
	.byte	'Ifx_SRC_HSCT',0,14,249,1,3
	.word	30293
	.byte	10
	.byte	'_Ifx_SRC_HSSL',0,14,252,1,25,16,13
	.byte	'COK',0
	.word	28103
	.byte	4,2,35,0,13
	.byte	'RDI',0
	.word	28103
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	28103
	.byte	4,2,35,8,13
	.byte	'TRG',0
	.word	28103
	.byte	4,2,35,12,0,14
	.word	30320
	.byte	30
	.byte	'Ifx_SRC_HSSL',0,14,130,2,3
	.word	30393
	.byte	15,56
	.word	692
	.byte	16,55,0,10
	.byte	'_Ifx_SRC_I2C',0,14,133,2,25,80,13
	.byte	'BREQ',0
	.word	28103
	.byte	4,2,35,0,13
	.byte	'LBREQ',0
	.word	28103
	.byte	4,2,35,4,13
	.byte	'SREQ',0
	.word	28103
	.byte	4,2,35,8,13
	.byte	'LSREQ',0
	.word	28103
	.byte	4,2,35,12,13
	.byte	'ERR',0
	.word	28103
	.byte	4,2,35,16,13
	.byte	'P',0
	.word	28103
	.byte	4,2,35,20,13
	.byte	'reserved_18',0
	.word	30420
	.byte	56,2,35,24,0,14
	.word	30429
	.byte	30
	.byte	'Ifx_SRC_I2C',0,14,142,2,3
	.word	30552
	.byte	10
	.byte	'_Ifx_SRC_LMU',0,14,145,2,25,4,13
	.byte	'SR',0
	.word	28103
	.byte	4,2,35,0,0,14
	.word	30578
	.byte	30
	.byte	'Ifx_SRC_LMU',0,14,148,2,3
	.word	30610
	.byte	10
	.byte	'_Ifx_SRC_MSC',0,14,151,2,25,20,13
	.byte	'SR0',0
	.word	28103
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	28103
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	28103
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	28103
	.byte	4,2,35,12,13
	.byte	'SR4',0
	.word	28103
	.byte	4,2,35,16,0,14
	.word	30636
	.byte	30
	.byte	'Ifx_SRC_MSC',0,14,158,2,3
	.word	30721
	.byte	10
	.byte	'_Ifx_SRC_PMU',0,14,161,2,25,4,13
	.byte	'SR',0
	.word	28103
	.byte	4,2,35,0,0,14
	.word	30747
	.byte	30
	.byte	'Ifx_SRC_PMU',0,14,164,2,3
	.word	30779
	.byte	10
	.byte	'_Ifx_SRC_PSI5',0,14,167,2,25,32,13
	.byte	'SR',0
	.word	29651
	.byte	32,2,35,0,0,14
	.word	30805
	.byte	30
	.byte	'Ifx_SRC_PSI5',0,14,170,2,3
	.word	30838
	.byte	10
	.byte	'_Ifx_SRC_PSI5S',0,14,173,2,25,32,13
	.byte	'SR',0
	.word	29651
	.byte	32,2,35,0,0,14
	.word	30865
	.byte	30
	.byte	'Ifx_SRC_PSI5S',0,14,176,2,3
	.word	30899
	.byte	10
	.byte	'_Ifx_SRC_QSPI',0,14,179,2,25,24,13
	.byte	'TX',0
	.word	28103
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	28103
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	28103
	.byte	4,2,35,8,13
	.byte	'PT',0
	.word	28103
	.byte	4,2,35,12,13
	.byte	'HC',0
	.word	28103
	.byte	4,2,35,16,13
	.byte	'U',0
	.word	28103
	.byte	4,2,35,20,0,14
	.word	30927
	.byte	30
	.byte	'Ifx_SRC_QSPI',0,14,187,2,3
	.word	31020
	.byte	10
	.byte	'_Ifx_SRC_SCR',0,14,190,2,25,4,13
	.byte	'SR',0
	.word	28103
	.byte	4,2,35,0,0,14
	.word	31047
	.byte	30
	.byte	'Ifx_SRC_SCR',0,14,193,2,3
	.word	31079
	.byte	10
	.byte	'_Ifx_SRC_SCU',0,14,196,2,25,20,13
	.byte	'DTS',0
	.word	28103
	.byte	4,2,35,0,13
	.byte	'ERU',0
	.word	29736
	.byte	16,2,35,4,0,14
	.word	31105
	.byte	30
	.byte	'Ifx_SRC_SCU',0,14,200,2,3
	.word	31151
	.byte	15,24
	.word	28103
	.byte	16,5,0,10
	.byte	'_Ifx_SRC_SENT',0,14,203,2,25,24,13
	.byte	'SR',0
	.word	31177
	.byte	24,2,35,0,0,14
	.word	31186
	.byte	30
	.byte	'Ifx_SRC_SENT',0,14,206,2,3
	.word	31219
	.byte	10
	.byte	'_Ifx_SRC_SMU',0,14,209,2,25,12,13
	.byte	'SR',0
	.word	29642
	.byte	12,2,35,0,0,14
	.word	31246
	.byte	30
	.byte	'Ifx_SRC_SMU',0,14,212,2,3
	.word	31278
	.byte	10
	.byte	'_Ifx_SRC_STM',0,14,215,2,25,8,13
	.byte	'SR0',0
	.word	28103
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	28103
	.byte	4,2,35,4,0,14
	.word	31304
	.byte	30
	.byte	'Ifx_SRC_STM',0,14,219,2,3
	.word	31350
	.byte	10
	.byte	'_Ifx_SRC_VADCCG',0,14,222,2,25,16,13
	.byte	'SR0',0
	.word	28103
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	28103
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	28103
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	28103
	.byte	4,2,35,12,0,14
	.word	31376
	.byte	30
	.byte	'Ifx_SRC_VADCCG',0,14,228,2,3
	.word	31451
	.byte	10
	.byte	'_Ifx_SRC_VADCG',0,14,231,2,25,16,13
	.byte	'SR0',0
	.word	28103
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	28103
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	28103
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	28103
	.byte	4,2,35,12,0,14
	.word	31480
	.byte	30
	.byte	'Ifx_SRC_VADCG',0,14,237,2,3
	.word	31554
	.byte	10
	.byte	'_Ifx_SRC_XBAR',0,14,240,2,25,4,13
	.byte	'SRC',0
	.word	28103
	.byte	4,2,35,0,0,14
	.word	31582
	.byte	30
	.byte	'Ifx_SRC_XBAR',0,14,243,2,3
	.word	31616
	.byte	15,4
	.word	28163
	.byte	16,0,0,14
	.word	31643
	.byte	10
	.byte	'_Ifx_SRC_GAGBT',0,14,128,3,25,4,13
	.byte	'AGBT',0
	.word	31652
	.byte	4,2,35,0,0,14
	.word	31657
	.byte	30
	.byte	'Ifx_SRC_GAGBT',0,14,131,3,3
	.word	31693
	.byte	15,48
	.word	28221
	.byte	16,3,0,14
	.word	31721
	.byte	10
	.byte	'_Ifx_SRC_GASCLIN',0,14,134,3,25,48,13
	.byte	'ASCLIN',0
	.word	31730
	.byte	48,2,35,0,0,14
	.word	31735
	.byte	30
	.byte	'Ifx_SRC_GASCLIN',0,14,137,3,3
	.word	31775
	.byte	14
	.word	28308
	.byte	10
	.byte	'_Ifx_SRC_GBCU',0,14,140,3,25,4,13
	.byte	'SPB',0
	.word	31805
	.byte	4,2,35,0,0,14
	.word	31810
	.byte	30
	.byte	'Ifx_SRC_GBCU',0,14,143,3,3
	.word	31844
	.byte	15,64
	.word	28382
	.byte	16,0,0,14
	.word	31871
	.byte	10
	.byte	'_Ifx_SRC_GCAN',0,14,146,3,25,64,13
	.byte	'CAN',0
	.word	31880
	.byte	64,2,35,0,0,14
	.word	31885
	.byte	30
	.byte	'Ifx_SRC_GCAN',0,14,149,3,3
	.word	31919
	.byte	15,32
	.word	28439
	.byte	16,1,0,14
	.word	31946
	.byte	10
	.byte	'_Ifx_SRC_GCCU6',0,14,152,3,25,32,13
	.byte	'CCU6',0
	.word	31955
	.byte	32,2,35,0,0,14
	.word	31960
	.byte	30
	.byte	'Ifx_SRC_GCCU6',0,14,155,3,3
	.word	31996
	.byte	14
	.word	28546
	.byte	10
	.byte	'_Ifx_SRC_GCERBERUS',0,14,158,3,25,8,13
	.byte	'CERBERUS',0
	.word	32024
	.byte	8,2,35,0,0,14
	.word	32029
	.byte	30
	.byte	'Ifx_SRC_GCERBERUS',0,14,161,3,3
	.word	32073
	.byte	15,16
	.word	28612
	.byte	16,0,0,14
	.word	32105
	.byte	10
	.byte	'_Ifx_SRC_GCIF',0,14,164,3,25,16,13
	.byte	'CIF',0
	.word	32114
	.byte	16,2,35,0,0,14
	.word	32119
	.byte	30
	.byte	'Ifx_SRC_GCIF',0,14,167,3,3
	.word	32153
	.byte	15,8
	.word	28711
	.byte	16,1,0,14
	.word	32180
	.byte	10
	.byte	'_Ifx_SRC_GCPU',0,14,170,3,25,8,13
	.byte	'CPU',0
	.word	32189
	.byte	8,2,35,0,0,14
	.word	32194
	.byte	30
	.byte	'Ifx_SRC_GCPU',0,14,173,3,3
	.word	32228
	.byte	15,208,1
	.word	28782
	.byte	16,0,0,14
	.word	32255
	.byte	10
	.byte	'_Ifx_SRC_GDMA',0,14,176,3,25,208,1,13
	.byte	'DMA',0
	.word	32265
	.byte	208,1,2,35,0,0,14
	.word	32270
	.byte	30
	.byte	'Ifx_SRC_GDMA',0,14,179,3,3
	.word	32306
	.byte	14
	.word	28875
	.byte	14
	.word	28875
	.byte	14
	.word	28875
	.byte	10
	.byte	'_Ifx_SRC_GDSADC',0,14,182,3,25,32,13
	.byte	'DSADC0',0
	.word	32333
	.byte	8,2,35,0,13
	.byte	'reserved_8',0
	.word	4329
	.byte	8,2,35,8,13
	.byte	'DSADC2',0
	.word	32338
	.byte	8,2,35,16,13
	.byte	'DSADC3',0
	.word	32343
	.byte	8,2,35,24,0,14
	.word	32348
	.byte	30
	.byte	'Ifx_SRC_GDSADC',0,14,188,3,3
	.word	32439
	.byte	15,4
	.word	28951
	.byte	16,0,0,14
	.word	32468
	.byte	10
	.byte	'_Ifx_SRC_GEMEM',0,14,191,3,25,4,13
	.byte	'EMEM',0
	.word	32477
	.byte	4,2,35,0,0,14
	.word	32482
	.byte	30
	.byte	'Ifx_SRC_GEMEM',0,14,194,3,3
	.word	32518
	.byte	15,80
	.word	29020
	.byte	16,0,0,14
	.word	32546
	.byte	10
	.byte	'_Ifx_SRC_GERAY',0,14,197,3,25,80,13
	.byte	'ERAY',0
	.word	32555
	.byte	80,2,35,0,0,14
	.word	32560
	.byte	30
	.byte	'Ifx_SRC_GERAY',0,14,200,3,3
	.word	32596
	.byte	15,4
	.word	29174
	.byte	16,0,0,14
	.word	32624
	.byte	10
	.byte	'_Ifx_SRC_GETH',0,14,203,3,25,4,13
	.byte	'ETH',0
	.word	32633
	.byte	4,2,35,0,0,14
	.word	32638
	.byte	30
	.byte	'Ifx_SRC_GETH',0,14,206,3,3
	.word	32672
	.byte	15,4
	.word	29232
	.byte	16,0,0,14
	.word	32699
	.byte	10
	.byte	'_Ifx_SRC_GFCE',0,14,209,3,25,4,13
	.byte	'FCE',0
	.word	32708
	.byte	4,2,35,0,0,14
	.word	32713
	.byte	30
	.byte	'Ifx_SRC_GFCE',0,14,212,3,3
	.word	32747
	.byte	15,12
	.word	29290
	.byte	16,0,0,14
	.word	32774
	.byte	10
	.byte	'_Ifx_SRC_GFFT',0,14,215,3,25,12,13
	.byte	'FFT',0
	.word	32783
	.byte	12,2,35,0,0,14
	.word	32788
	.byte	30
	.byte	'Ifx_SRC_GFFT',0,14,218,3,3
	.word	32822
	.byte	15,64
	.word	29376
	.byte	16,1,0,14
	.word	32849
	.byte	10
	.byte	'_Ifx_SRC_GGPSR',0,14,221,3,25,64,13
	.byte	'GPSR',0
	.word	32858
	.byte	64,2,35,0,0,14
	.word	32863
	.byte	30
	.byte	'Ifx_SRC_GGPSR',0,14,224,3,3
	.word	32899
	.byte	15,48
	.word	29497
	.byte	16,0,0,14
	.word	32927
	.byte	10
	.byte	'_Ifx_SRC_GGPT12',0,14,227,3,25,48,13
	.byte	'GPT12',0
	.word	32936
	.byte	48,2,35,0,0,14
	.word	32941
	.byte	30
	.byte	'Ifx_SRC_GGPT12',0,14,230,3,3
	.word	32979
	.byte	15,204,18
	.word	29774
	.byte	16,0,0,14
	.word	33008
	.byte	10
	.byte	'_Ifx_SRC_GGTM',0,14,233,3,25,204,18,13
	.byte	'GTM',0
	.word	33018
	.byte	204,18,2,35,0,0,14
	.word	33023
	.byte	30
	.byte	'Ifx_SRC_GGTM',0,14,236,3,3
	.word	33059
	.byte	15,4
	.word	30260
	.byte	16,0,0,14
	.word	33086
	.byte	10
	.byte	'_Ifx_SRC_GHSCT',0,14,239,3,25,4,13
	.byte	'HSCT',0
	.word	33095
	.byte	4,2,35,0,0,14
	.word	33100
	.byte	30
	.byte	'Ifx_SRC_GHSCT',0,14,242,3,3
	.word	33136
	.byte	15,64
	.word	30320
	.byte	16,3,0,14
	.word	33164
	.byte	10
	.byte	'_Ifx_SRC_GHSSL',0,14,245,3,25,68,13
	.byte	'HSSL',0
	.word	33173
	.byte	64,2,35,0,13
	.byte	'EXI',0
	.word	28103
	.byte	4,2,35,64,0,14
	.word	33178
	.byte	30
	.byte	'Ifx_SRC_GHSSL',0,14,249,3,3
	.word	33227
	.byte	15,80
	.word	30429
	.byte	16,0,0,14
	.word	33255
	.byte	10
	.byte	'_Ifx_SRC_GI2C',0,14,252,3,25,80,13
	.byte	'I2C',0
	.word	33264
	.byte	80,2,35,0,0,14
	.word	33269
	.byte	30
	.byte	'Ifx_SRC_GI2C',0,14,255,3,3
	.word	33303
	.byte	15,4
	.word	30578
	.byte	16,0,0,14
	.word	33330
	.byte	10
	.byte	'_Ifx_SRC_GLMU',0,14,130,4,25,4,13
	.byte	'LMU',0
	.word	33339
	.byte	4,2,35,0,0,14
	.word	33344
	.byte	30
	.byte	'Ifx_SRC_GLMU',0,14,133,4,3
	.word	33378
	.byte	15,40
	.word	30636
	.byte	16,1,0,14
	.word	33405
	.byte	10
	.byte	'_Ifx_SRC_GMSC',0,14,136,4,25,40,13
	.byte	'MSC',0
	.word	33414
	.byte	40,2,35,0,0,14
	.word	33419
	.byte	30
	.byte	'Ifx_SRC_GMSC',0,14,139,4,3
	.word	33453
	.byte	15,8
	.word	30747
	.byte	16,1,0,14
	.word	33480
	.byte	10
	.byte	'_Ifx_SRC_GPMU',0,14,142,4,25,8,13
	.byte	'PMU',0
	.word	33489
	.byte	8,2,35,0,0,14
	.word	33494
	.byte	30
	.byte	'Ifx_SRC_GPMU',0,14,145,4,3
	.word	33528
	.byte	15,32
	.word	30805
	.byte	16,0,0,14
	.word	33555
	.byte	10
	.byte	'_Ifx_SRC_GPSI5',0,14,148,4,25,32,13
	.byte	'PSI5',0
	.word	33564
	.byte	32,2,35,0,0,14
	.word	33569
	.byte	30
	.byte	'Ifx_SRC_GPSI5',0,14,151,4,3
	.word	33605
	.byte	15,32
	.word	30865
	.byte	16,0,0,14
	.word	33633
	.byte	10
	.byte	'_Ifx_SRC_GPSI5S',0,14,154,4,25,32,13
	.byte	'PSI5S',0
	.word	33642
	.byte	32,2,35,0,0,14
	.word	33647
	.byte	30
	.byte	'Ifx_SRC_GPSI5S',0,14,157,4,3
	.word	33685
	.byte	15,96
	.word	30927
	.byte	16,3,0,14
	.word	33714
	.byte	10
	.byte	'_Ifx_SRC_GQSPI',0,14,160,4,25,96,13
	.byte	'QSPI',0
	.word	33723
	.byte	96,2,35,0,0,14
	.word	33728
	.byte	30
	.byte	'Ifx_SRC_GQSPI',0,14,163,4,3
	.word	33764
	.byte	15,4
	.word	31047
	.byte	16,0,0,14
	.word	33792
	.byte	10
	.byte	'_Ifx_SRC_GSCR',0,14,166,4,25,4,13
	.byte	'SCR',0
	.word	33801
	.byte	4,2,35,0,0,14
	.word	33806
	.byte	30
	.byte	'Ifx_SRC_GSCR',0,14,169,4,3
	.word	33840
	.byte	14
	.word	31105
	.byte	10
	.byte	'_Ifx_SRC_GSCU',0,14,172,4,25,20,13
	.byte	'SCU',0
	.word	33867
	.byte	20,2,35,0,0,14
	.word	33872
	.byte	30
	.byte	'Ifx_SRC_GSCU',0,14,175,4,3
	.word	33906
	.byte	15,24
	.word	31186
	.byte	16,0,0,14
	.word	33933
	.byte	10
	.byte	'_Ifx_SRC_GSENT',0,14,178,4,25,24,13
	.byte	'SENT',0
	.word	33942
	.byte	24,2,35,0,0,14
	.word	33947
	.byte	30
	.byte	'Ifx_SRC_GSENT',0,14,181,4,3
	.word	33983
	.byte	15,12
	.word	31246
	.byte	16,0,0,14
	.word	34011
	.byte	10
	.byte	'_Ifx_SRC_GSMU',0,14,184,4,25,12,13
	.byte	'SMU',0
	.word	34020
	.byte	12,2,35,0,0,14
	.word	34025
	.byte	30
	.byte	'Ifx_SRC_GSMU',0,14,187,4,3
	.word	34059
	.byte	15,16
	.word	31304
	.byte	16,1,0,14
	.word	34086
	.byte	10
	.byte	'_Ifx_SRC_GSTM',0,14,190,4,25,16,13
	.byte	'STM',0
	.word	34095
	.byte	16,2,35,0,0,14
	.word	34100
	.byte	30
	.byte	'Ifx_SRC_GSTM',0,14,193,4,3
	.word	34134
	.byte	15,64
	.word	31480
	.byte	16,3,0,14
	.word	34161
	.byte	15,224,1
	.word	692
	.byte	16,223,1,0,15,32
	.word	31376
	.byte	16,1,0,14
	.word	34186
	.byte	10
	.byte	'_Ifx_SRC_GVADC',0,14,196,4,25,192,2,13
	.byte	'G',0
	.word	34170
	.byte	64,2,35,0,13
	.byte	'reserved_40',0
	.word	34175
	.byte	224,1,2,35,64,13
	.byte	'CG',0
	.word	34195
	.byte	32,3,35,160,2,0,14
	.word	34200
	.byte	30
	.byte	'Ifx_SRC_GVADC',0,14,201,4,3
	.word	34269
	.byte	14
	.word	31582
	.byte	10
	.byte	'_Ifx_SRC_GXBAR',0,14,204,4,25,4,13
	.byte	'XBAR',0
	.word	34297
	.byte	4,2,35,0,0,14
	.word	34302
	.byte	30
	.byte	'Ifx_SRC_GXBAR',0,14,207,4,3
	.word	34338
	.byte	10
	.byte	'_Ifx_SCU_ACCEN0_Bits',0,4,45,16,4,11
	.byte	'EN0',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	692
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	692
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	692
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	692
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	692
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	692
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	692
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	692
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	692
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	692
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	692
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	692
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	692
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	692
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	692
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	692
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	692
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	692
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	692
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	692
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	692
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	692
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	692
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	692
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	692
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_ACCEN0_Bits',0,4,79,3
	.word	34366
	.byte	10
	.byte	'_Ifx_SCU_ACCEN1_Bits',0,4,82,16,4,11
	.byte	'reserved_0',0,4
	.word	517
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_SCU_ACCEN1_Bits',0,4,85,3
	.word	34923
	.byte	10
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,4,88,16,4,11
	.byte	'STM0DIS',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'STM1DIS',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'STM2DIS',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	517
	.byte	29,0,2,35,0,0,30
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,4,94,3
	.word	35000
	.byte	10
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,4,97,16,4,11
	.byte	'BAUD1DIV',0,1
	.word	692
	.byte	4,4,2,35,0,11
	.byte	'BAUD2DIV',0,1
	.word	692
	.byte	4,0,2,35,0,11
	.byte	'SRIDIV',0,1
	.word	692
	.byte	4,4,2,35,1,11
	.byte	'LPDIV',0,1
	.word	692
	.byte	4,0,2,35,1,11
	.byte	'SPBDIV',0,1
	.word	692
	.byte	4,4,2,35,2,11
	.byte	'FSI2DIV',0,1
	.word	692
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	692
	.byte	2,0,2,35,2,11
	.byte	'FSIDIV',0,1
	.word	692
	.byte	2,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	692
	.byte	2,4,2,35,3,11
	.byte	'CLKSEL',0,1
	.word	692
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	692
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_CCUCON0_Bits',0,4,111,3
	.word	35136
	.byte	10
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,4,114,16,4,11
	.byte	'CANDIV',0,1
	.word	692
	.byte	4,4,2,35,0,11
	.byte	'ERAYDIV',0,1
	.word	692
	.byte	4,0,2,35,0,11
	.byte	'STMDIV',0,1
	.word	692
	.byte	4,4,2,35,1,11
	.byte	'GTMDIV',0,1
	.word	692
	.byte	4,0,2,35,1,11
	.byte	'ETHDIV',0,1
	.word	692
	.byte	4,4,2,35,2,11
	.byte	'ASCLINFDIV',0,1
	.word	692
	.byte	4,0,2,35,2,11
	.byte	'ASCLINSDIV',0,1
	.word	692
	.byte	4,4,2,35,3,11
	.byte	'INSEL',0,1
	.word	692
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	692
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_CCUCON1_Bits',0,4,126,3
	.word	35416
	.byte	10
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,4,129,1,16,4,11
	.byte	'BBBDIV',0,1
	.word	692
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	517
	.byte	26,2,2,35,0,11
	.byte	'UP',0,1
	.word	692
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_CCUCON2_Bits',0,4,135,1,3
	.word	35654
	.byte	10
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,4,138,1,16,4,11
	.byte	'PLLDIV',0,1
	.word	692
	.byte	6,2,2,35,0,11
	.byte	'PLLSEL',0,1
	.word	692
	.byte	2,0,2,35,0,11
	.byte	'PLLERAYDIV',0,1
	.word	692
	.byte	6,2,2,35,1,11
	.byte	'PLLERAYSEL',0,1
	.word	692
	.byte	2,0,2,35,1,11
	.byte	'SRIDIV',0,1
	.word	692
	.byte	6,2,2,35,2,11
	.byte	'SRISEL',0,1
	.word	692
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	692
	.byte	5,3,2,35,3,11
	.byte	'SLCK',0,1
	.word	692
	.byte	1,2,2,35,3,11
	.byte	'UP',0,1
	.word	692
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_CCUCON3_Bits',0,4,150,1,3
	.word	35782
	.byte	10
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,4,153,1,16,4,11
	.byte	'SPBDIV',0,1
	.word	692
	.byte	6,2,2,35,0,11
	.byte	'SPBSEL',0,1
	.word	692
	.byte	2,0,2,35,0,11
	.byte	'GTMDIV',0,1
	.word	692
	.byte	6,2,2,35,1,11
	.byte	'GTMSEL',0,1
	.word	692
	.byte	2,0,2,35,1,11
	.byte	'STMDIV',0,1
	.word	692
	.byte	6,2,2,35,2,11
	.byte	'STMSEL',0,1
	.word	692
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	692
	.byte	5,3,2,35,3,11
	.byte	'SLCK',0,1
	.word	692
	.byte	1,2,2,35,3,11
	.byte	'UP',0,1
	.word	692
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_CCUCON4_Bits',0,4,165,1,3
	.word	36025
	.byte	10
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,4,168,1,16,4,11
	.byte	'MAXDIV',0,1
	.word	692
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	517
	.byte	26,2,2,35,0,11
	.byte	'UP',0,1
	.word	692
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_CCUCON5_Bits',0,4,174,1,3
	.word	36260
	.byte	10
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,4,177,1,16,4,11
	.byte	'CPU0DIV',0,1
	.word	692
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	517
	.byte	26,0,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON6_Bits',0,4,181,1,3
	.word	36388
	.byte	10
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,4,184,1,16,4,11
	.byte	'CPU1DIV',0,1
	.word	692
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	517
	.byte	26,0,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON7_Bits',0,4,188,1,3
	.word	36488
	.byte	10
	.byte	'_Ifx_SCU_CHIPID_Bits',0,4,191,1,16,4,11
	.byte	'CHREV',0,1
	.word	692
	.byte	6,2,2,35,0,11
	.byte	'CHTEC',0,1
	.word	692
	.byte	2,0,2,35,0,11
	.byte	'CHID',0,1
	.word	692
	.byte	8,0,2,35,1,11
	.byte	'EEA',0,1
	.word	692
	.byte	1,7,2,35,2,11
	.byte	'UCODE',0,1
	.word	692
	.byte	7,0,2,35,2,11
	.byte	'FSIZE',0,1
	.word	692
	.byte	4,4,2,35,3,11
	.byte	'SP',0,1
	.word	692
	.byte	2,2,2,35,3,11
	.byte	'SEC',0,1
	.word	692
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_CHIPID_Bits',0,4,202,1,3
	.word	36588
	.byte	10
	.byte	'_Ifx_SCU_DTSCON_Bits',0,4,205,1,16,4,11
	.byte	'PWD',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'START',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	692
	.byte	2,4,2,35,0,11
	.byte	'CAL',0,4
	.word	517
	.byte	20,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	692
	.byte	7,1,2,35,3,11
	.byte	'SLCK',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_DTSCON_Bits',0,4,213,1,3
	.word	36796
	.byte	10
	.byte	'_Ifx_SCU_DTSLIM_Bits',0,4,216,1,16,4,11
	.byte	'LOWER',0,2
	.word	709
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	692
	.byte	5,1,2,35,1,11
	.byte	'LLU',0,1
	.word	692
	.byte	1,0,2,35,1,11
	.byte	'UPPER',0,2
	.word	709
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	692
	.byte	4,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	692
	.byte	1,1,2,35,3,11
	.byte	'UOF',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_DTSLIM_Bits',0,4,225,1,3
	.word	36961
	.byte	10
	.byte	'_Ifx_SCU_DTSSTAT_Bits',0,4,228,1,16,4,11
	.byte	'RESULT',0,2
	.word	709
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	692
	.byte	4,2,2,35,1,11
	.byte	'RDY',0,1
	.word	692
	.byte	1,1,2,35,1,11
	.byte	'BUSY',0,1
	.word	692
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	709
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_DTSSTAT_Bits',0,4,235,1,3
	.word	37144
	.byte	10
	.byte	'_Ifx_SCU_EICR_Bits',0,4,238,1,16,4,11
	.byte	'reserved_0',0,1
	.word	692
	.byte	4,4,2,35,0,11
	.byte	'EXIS0',0,1
	.word	692
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'FEN0',0,1
	.word	692
	.byte	1,7,2,35,1,11
	.byte	'REN0',0,1
	.word	692
	.byte	1,6,2,35,1,11
	.byte	'LDEN0',0,1
	.word	692
	.byte	1,5,2,35,1,11
	.byte	'EIEN0',0,1
	.word	692
	.byte	1,4,2,35,1,11
	.byte	'INP0',0,1
	.word	692
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	517
	.byte	5,12,2,35,0,11
	.byte	'EXIS1',0,1
	.word	692
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	692
	.byte	1,0,2,35,2,11
	.byte	'FEN1',0,1
	.word	692
	.byte	1,7,2,35,3,11
	.byte	'REN1',0,1
	.word	692
	.byte	1,6,2,35,3,11
	.byte	'LDEN1',0,1
	.word	692
	.byte	1,5,2,35,3,11
	.byte	'EIEN1',0,1
	.word	692
	.byte	1,4,2,35,3,11
	.byte	'INP1',0,1
	.word	692
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EICR_Bits',0,4,129,2,3
	.word	37298
	.byte	10
	.byte	'_Ifx_SCU_EIFR_Bits',0,4,132,2,16,4,11
	.byte	'INTF0',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'INTF1',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'INTF2',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'INTF3',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'INTF4',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'INTF5',0,1
	.word	692
	.byte	1,2,2,35,0,11
	.byte	'INTF6',0,1
	.word	692
	.byte	1,1,2,35,0,11
	.byte	'INTF7',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	517
	.byte	24,0,2,35,0,0,30
	.byte	'Ifx_SCU_EIFR_Bits',0,4,143,2,3
	.word	37662
	.byte	10
	.byte	'_Ifx_SCU_EMSR_Bits',0,4,146,2,16,4,11
	.byte	'POL',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'MODE',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'ENON',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'PSEL',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	709
	.byte	12,0,2,35,0,11
	.byte	'EMSF',0,1
	.word	692
	.byte	1,7,2,35,2,11
	.byte	'SEMSF',0,1
	.word	692
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	692
	.byte	6,0,2,35,2,11
	.byte	'EMSFM',0,1
	.word	692
	.byte	2,6,2,35,3,11
	.byte	'SEMSFM',0,1
	.word	692
	.byte	2,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	692
	.byte	4,0,2,35,3,0,30
	.byte	'Ifx_SCU_EMSR_Bits',0,4,159,2,3
	.word	37873
	.byte	10
	.byte	'_Ifx_SCU_ESRCFG_Bits',0,4,162,2,16,4,11
	.byte	'reserved_0',0,1
	.word	692
	.byte	7,1,2,35,0,11
	.byte	'EDCON',0,2
	.word	709
	.byte	2,7,2,35,0,11
	.byte	'reserved_9',0,4
	.word	517
	.byte	23,0,2,35,0,0,30
	.byte	'Ifx_SCU_ESRCFG_Bits',0,4,167,2,3
	.word	38125
	.byte	10
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,4,170,2,16,4,11
	.byte	'ARI',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'ARC',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	517
	.byte	30,0,2,35,0,0,30
	.byte	'Ifx_SCU_ESROCFG_Bits',0,4,175,2,3
	.word	38243
	.byte	10
	.byte	'_Ifx_SCU_EVR13CON_Bits',0,4,178,2,16,4,11
	.byte	'reserved_0',0,4
	.word	517
	.byte	28,4,2,35,0,11
	.byte	'EVR13OFF',0,1
	.word	692
	.byte	1,3,2,35,3,11
	.byte	'BPEVR13OFF',0,1
	.word	692
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	692
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EVR13CON_Bits',0,4,185,2,3
	.word	38354
	.byte	10
	.byte	'_Ifx_SCU_EVR33CON_Bits',0,4,188,2,16,4,11
	.byte	'reserved_0',0,4
	.word	517
	.byte	28,4,2,35,0,11
	.byte	'EVR33OFF',0,1
	.word	692
	.byte	1,3,2,35,3,11
	.byte	'BPEVR33OFF',0,1
	.word	692
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	692
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EVR33CON_Bits',0,4,195,2,3
	.word	38517
	.byte	10
	.byte	'_Ifx_SCU_EVRADCSTAT_Bits',0,4,198,2,16,4,11
	.byte	'ADC13V',0,1
	.word	692
	.byte	8,0,2,35,0,11
	.byte	'ADC33V',0,1
	.word	692
	.byte	8,0,2,35,1,11
	.byte	'ADCSWDV',0,1
	.word	692
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	692
	.byte	7,1,2,35,3,11
	.byte	'VAL',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EVRADCSTAT_Bits',0,4,205,2,3
	.word	38680
	.byte	10
	.byte	'_Ifx_SCU_EVRDVSTAT_Bits',0,4,208,2,16,4,11
	.byte	'DVS13TRIM',0,1
	.word	692
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	692
	.byte	8,0,2,35,1,11
	.byte	'DVS33TRIM',0,1
	.word	692
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	692
	.byte	7,1,2,35,3,11
	.byte	'VAL',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EVRDVSTAT_Bits',0,4,215,2,3
	.word	38838
	.byte	10
	.byte	'_Ifx_SCU_EVRMONCTRL_Bits',0,4,218,2,16,4,11
	.byte	'EVR13OVMOD',0,1
	.word	692
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	692
	.byte	2,4,2,35,0,11
	.byte	'EVR13UVMOD',0,1
	.word	692
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	692
	.byte	2,0,2,35,0,11
	.byte	'EVR33OVMOD',0,1
	.word	692
	.byte	2,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	692
	.byte	2,4,2,35,1,11
	.byte	'EVR33UVMOD',0,1
	.word	692
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	692
	.byte	2,0,2,35,1,11
	.byte	'SWDOVMOD',0,1
	.word	692
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	692
	.byte	2,4,2,35,2,11
	.byte	'SWDUVMOD',0,1
	.word	692
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	709
	.byte	10,0,2,35,2,0,30
	.byte	'Ifx_SCU_EVRMONCTRL_Bits',0,4,232,2,3
	.word	39003
	.byte	10
	.byte	'_Ifx_SCU_EVROSCCTRL_Bits',0,4,235,2,16,4,11
	.byte	'OSCTRIM',0,2
	.word	709
	.byte	10,6,2,35,0,11
	.byte	'OSCPTAT',0,1
	.word	692
	.byte	6,0,2,35,1,11
	.byte	'OSCANASEL',0,1
	.word	692
	.byte	4,4,2,35,2,11
	.byte	'HPBGTRIM',0,2
	.word	709
	.byte	7,5,2,35,2,11
	.byte	'HPBGCLKEN',0,1
	.word	692
	.byte	1,4,2,35,3,11
	.byte	'OSC3V3',0,1
	.word	692
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	692
	.byte	2,1,2,35,3,11
	.byte	'LCK',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EVROSCCTRL_Bits',0,4,245,2,3
	.word	39332
	.byte	10
	.byte	'_Ifx_SCU_EVROVMON_Bits',0,4,248,2,16,4,11
	.byte	'EVR13OVVAL',0,1
	.word	692
	.byte	8,0,2,35,0,11
	.byte	'EVR33OVVAL',0,1
	.word	692
	.byte	8,0,2,35,1,11
	.byte	'SWDOVVAL',0,1
	.word	692
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	692
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EVROVMON_Bits',0,4,255,2,3
	.word	39553
	.byte	10
	.byte	'_Ifx_SCU_EVRRSTCON_Bits',0,4,130,3,16,4,11
	.byte	'RST13TRIM',0,1
	.word	692
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	517
	.byte	16,8,2,35,0,11
	.byte	'RST13OFF',0,1
	.word	692
	.byte	1,7,2,35,3,11
	.byte	'BPRST13OFF',0,1
	.word	692
	.byte	1,6,2,35,3,11
	.byte	'RST33OFF',0,1
	.word	692
	.byte	1,5,2,35,3,11
	.byte	'BPRST33OFF',0,1
	.word	692
	.byte	1,4,2,35,3,11
	.byte	'RSTSWDOFF',0,1
	.word	692
	.byte	1,3,2,35,3,11
	.byte	'BPRSTSWDOFF',0,1
	.word	692
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	692
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EVRRSTCON_Bits',0,4,142,3,3
	.word	39716
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF1_Bits',0,4,145,3,16,4,11
	.byte	'SD5P',0,1
	.word	692
	.byte	8,0,2,35,0,11
	.byte	'SD5I',0,1
	.word	692
	.byte	8,0,2,35,1,11
	.byte	'SD5D',0,1
	.word	692
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	692
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EVRSDCOEFF1_Bits',0,4,152,3,3
	.word	39988
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF2_Bits',0,4,155,3,16,4,11
	.byte	'SD33P',0,1
	.word	692
	.byte	8,0,2,35,0,11
	.byte	'SD33I',0,1
	.word	692
	.byte	8,0,2,35,1,11
	.byte	'SD33D',0,1
	.word	692
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	692
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EVRSDCOEFF2_Bits',0,4,162,3,3
	.word	40141
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF3_Bits',0,4,165,3,16,4,11
	.byte	'CT5REG0',0,1
	.word	692
	.byte	8,0,2,35,0,11
	.byte	'CT5REG1',0,1
	.word	692
	.byte	8,0,2,35,1,11
	.byte	'CT5REG2',0,1
	.word	692
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	692
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EVRSDCOEFF3_Bits',0,4,172,3,3
	.word	40297
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF4_Bits',0,4,175,3,16,4,11
	.byte	'CT5REG3',0,1
	.word	692
	.byte	8,0,2,35,0,11
	.byte	'CT5REG4',0,1
	.word	692
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	709
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EVRSDCOEFF4_Bits',0,4,181,3,3
	.word	40459
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF5_Bits',0,4,184,3,16,4,11
	.byte	'CT33REG0',0,1
	.word	692
	.byte	8,0,2,35,0,11
	.byte	'CT33REG1',0,1
	.word	692
	.byte	8,0,2,35,1,11
	.byte	'CT33REG2',0,1
	.word	692
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	692
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EVRSDCOEFF5_Bits',0,4,191,3,3
	.word	40602
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF6_Bits',0,4,194,3,16,4,11
	.byte	'CT33REG3',0,1
	.word	692
	.byte	8,0,2,35,0,11
	.byte	'CT33REG4',0,1
	.word	692
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	709
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EVRSDCOEFF6_Bits',0,4,200,3,3
	.word	40767
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL1_Bits',0,4,203,3,16,4,11
	.byte	'SDFREQSPRD',0,2
	.word	709
	.byte	16,0,2,35,0,11
	.byte	'SDFREQ',0,1
	.word	692
	.byte	8,0,2,35,2,11
	.byte	'SDSTEP',0,1
	.word	692
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	692
	.byte	2,2,2,35,3,11
	.byte	'SDSAMPLE',0,1
	.word	692
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EVRSDCTRL1_Bits',0,4,211,3,3
	.word	40912
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL2_Bits',0,4,214,3,16,4,11
	.byte	'DRVP',0,1
	.word	692
	.byte	8,0,2,35,0,11
	.byte	'SDMINMAXDC',0,1
	.word	692
	.byte	8,0,2,35,1,11
	.byte	'DRVN',0,1
	.word	692
	.byte	8,0,2,35,2,11
	.byte	'SDLUT',0,1
	.word	692
	.byte	6,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	692
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EVRSDCTRL2_Bits',0,4,222,3,3
	.word	41093
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL3_Bits',0,4,225,3,16,4,11
	.byte	'SDPWMPRE',0,1
	.word	692
	.byte	8,0,2,35,0,11
	.byte	'SDPID',0,1
	.word	692
	.byte	8,0,2,35,1,11
	.byte	'SDVOKLVL',0,1
	.word	692
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	692
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EVRSDCTRL3_Bits',0,4,232,3,3
	.word	41267
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL4_Bits',0,4,235,3,16,4,11
	.byte	'reserved_0',0,1
	.word	692
	.byte	8,0,2,35,0,11
	.byte	'SYNCDIV',0,1
	.word	692
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	517
	.byte	20,1,2,35,0,11
	.byte	'LCK',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EVRSDCTRL4_Bits',0,4,241,3,3
	.word	41427
	.byte	10
	.byte	'_Ifx_SCU_EVRSTAT_Bits',0,4,244,3,16,4,11
	.byte	'EVR13',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'OV13',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'EVR33',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'OV33',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'OVSWD',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'UV13',0,1
	.word	692
	.byte	1,2,2,35,0,11
	.byte	'UV33',0,1
	.word	692
	.byte	1,1,2,35,0,11
	.byte	'UVSWD',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'EXTPASS13',0,1
	.word	692
	.byte	1,7,2,35,1,11
	.byte	'EXTPASS33',0,1
	.word	692
	.byte	1,6,2,35,1,11
	.byte	'BGPROK',0,1
	.word	692
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	517
	.byte	21,0,2,35,0,0,30
	.byte	'Ifx_SCU_EVRSTAT_Bits',0,4,130,4,3
	.word	41571
	.byte	10
	.byte	'_Ifx_SCU_EVRTRIM_Bits',0,4,133,4,16,4,11
	.byte	'EVR13TRIM',0,1
	.word	692
	.byte	8,0,2,35,0,11
	.byte	'SDVOUTSEL',0,1
	.word	692
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	709
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EVRTRIM_Bits',0,4,139,4,3
	.word	41845
	.byte	10
	.byte	'_Ifx_SCU_EVRUVMON_Bits',0,4,142,4,16,4,11
	.byte	'EVR13UVVAL',0,1
	.word	692
	.byte	8,0,2,35,0,11
	.byte	'EVR33UVVAL',0,1
	.word	692
	.byte	8,0,2,35,1,11
	.byte	'SWDUVVAL',0,1
	.word	692
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	692
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EVRUVMON_Bits',0,4,149,4,3
	.word	41984
	.byte	10
	.byte	'_Ifx_SCU_EXTCON_Bits',0,4,152,4,16,4,11
	.byte	'EN0',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'SEL0',0,1
	.word	692
	.byte	4,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	709
	.byte	10,0,2,35,0,11
	.byte	'EN1',0,1
	.word	692
	.byte	1,7,2,35,2,11
	.byte	'NSEL',0,1
	.word	692
	.byte	1,6,2,35,2,11
	.byte	'SEL1',0,1
	.word	692
	.byte	4,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	692
	.byte	2,0,2,35,2,11
	.byte	'DIV1',0,1
	.word	692
	.byte	8,0,2,35,3,0,30
	.byte	'Ifx_SCU_EXTCON_Bits',0,4,163,4,3
	.word	42147
	.byte	10
	.byte	'_Ifx_SCU_FDR_Bits',0,4,166,4,16,4,11
	.byte	'STEP',0,2
	.word	709
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	692
	.byte	4,2,2,35,1,11
	.byte	'DM',0,1
	.word	692
	.byte	2,0,2,35,1,11
	.byte	'RESULT',0,2
	.word	709
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	692
	.byte	5,1,2,35,3,11
	.byte	'DISCLK',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_FDR_Bits',0,4,174,4,3
	.word	42365
	.byte	10
	.byte	'_Ifx_SCU_FMR_Bits',0,4,177,4,16,4,11
	.byte	'FS0',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'FS1',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'FS2',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'FS3',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'FS4',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'FS5',0,1
	.word	692
	.byte	1,2,2,35,0,11
	.byte	'FS6',0,1
	.word	692
	.byte	1,1,2,35,0,11
	.byte	'FS7',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	692
	.byte	8,0,2,35,1,11
	.byte	'FC0',0,1
	.word	692
	.byte	1,7,2,35,2,11
	.byte	'FC1',0,1
	.word	692
	.byte	1,6,2,35,2,11
	.byte	'FC2',0,1
	.word	692
	.byte	1,5,2,35,2,11
	.byte	'FC3',0,1
	.word	692
	.byte	1,4,2,35,2,11
	.byte	'FC4',0,1
	.word	692
	.byte	1,3,2,35,2,11
	.byte	'FC5',0,1
	.word	692
	.byte	1,2,2,35,2,11
	.byte	'FC6',0,1
	.word	692
	.byte	1,1,2,35,2,11
	.byte	'FC7',0,1
	.word	692
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	692
	.byte	8,0,2,35,3,0,30
	.byte	'Ifx_SCU_FMR_Bits',0,4,197,4,3
	.word	42528
	.byte	10
	.byte	'_Ifx_SCU_ID_Bits',0,4,200,4,16,4,11
	.byte	'MODREV',0,1
	.word	692
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	692
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	709
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_ID_Bits',0,4,205,4,3
	.word	42864
	.byte	10
	.byte	'_Ifx_SCU_IGCR_Bits',0,4,208,4,16,4,11
	.byte	'IPEN00',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'IPEN01',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'IPEN02',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'IPEN03',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'IPEN04',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'IPEN05',0,1
	.word	692
	.byte	1,2,2,35,0,11
	.byte	'IPEN06',0,1
	.word	692
	.byte	1,1,2,35,0,11
	.byte	'IPEN07',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	692
	.byte	5,3,2,35,1,11
	.byte	'GEEN0',0,1
	.word	692
	.byte	1,2,2,35,1,11
	.byte	'IGP0',0,1
	.word	692
	.byte	2,0,2,35,1,11
	.byte	'IPEN10',0,1
	.word	692
	.byte	1,7,2,35,2,11
	.byte	'IPEN11',0,1
	.word	692
	.byte	1,6,2,35,2,11
	.byte	'IPEN12',0,1
	.word	692
	.byte	1,5,2,35,2,11
	.byte	'IPEN13',0,1
	.word	692
	.byte	1,4,2,35,2,11
	.byte	'IPEN14',0,1
	.word	692
	.byte	1,3,2,35,2,11
	.byte	'IPEN15',0,1
	.word	692
	.byte	1,2,2,35,2,11
	.byte	'IPEN16',0,1
	.word	692
	.byte	1,1,2,35,2,11
	.byte	'IPEN17',0,1
	.word	692
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	692
	.byte	5,3,2,35,3,11
	.byte	'GEEN1',0,1
	.word	692
	.byte	1,2,2,35,3,11
	.byte	'IGP1',0,1
	.word	692
	.byte	2,0,2,35,3,0,30
	.byte	'Ifx_SCU_IGCR_Bits',0,4,232,4,3
	.word	42971
	.byte	10
	.byte	'_Ifx_SCU_IN_Bits',0,4,235,4,16,4,11
	.byte	'P0',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	517
	.byte	30,0,2,35,0,0,30
	.byte	'Ifx_SCU_IN_Bits',0,4,240,4,3
	.word	43423
	.byte	10
	.byte	'_Ifx_SCU_IOCR_Bits',0,4,243,4,16,4,11
	.byte	'reserved_0',0,1
	.word	692
	.byte	4,4,2,35,0,11
	.byte	'PC0',0,1
	.word	692
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	692
	.byte	4,4,2,35,1,11
	.byte	'PC1',0,1
	.word	692
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	709
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_IOCR_Bits',0,4,250,4,3
	.word	43522
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,4,253,4,16,4,11
	.byte	'LBISTREQ',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'LBISTREQP',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'PATTERNS',0,2
	.word	709
	.byte	14,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	709
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,4,131,5,3
	.word	43672
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,4,134,5,16,4,11
	.byte	'SEED',0,4
	.word	517
	.byte	23,9,2,35,0,11
	.byte	'reserved_23',0,1
	.word	692
	.byte	1,0,2,35,2,11
	.byte	'SPLITSH',0,1
	.word	692
	.byte	3,5,2,35,3,11
	.byte	'BODY',0,1
	.word	692
	.byte	1,4,2,35,3,11
	.byte	'LBISTFREQU',0,1
	.word	692
	.byte	4,0,2,35,3,0,30
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,4,141,5,3
	.word	43821
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,4,144,5,16,4,11
	.byte	'SIGNATURE',0,4
	.word	517
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	692
	.byte	7,1,2,35,3,11
	.byte	'LBISTDONE',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,4,149,5,3
	.word	43982
	.byte	10
	.byte	'_Ifx_SCU_LCLCON_Bits',0,4,152,5,16,4,11
	.byte	'reserved_0',0,2
	.word	709
	.byte	16,0,2,35,0,11
	.byte	'LS',0,1
	.word	692
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	709
	.byte	14,1,2,35,2,11
	.byte	'LSEN',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_LCLCON_Bits',0,4,158,5,3
	.word	44112
	.byte	10
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,4,161,5,16,4,11
	.byte	'LCLT0',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'LCLT1',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	517
	.byte	30,0,2,35,0,0,30
	.byte	'Ifx_SCU_LCLTEST_Bits',0,4,166,5,3
	.word	44244
	.byte	10
	.byte	'_Ifx_SCU_MANID_Bits',0,4,169,5,16,4,11
	.byte	'DEPT',0,1
	.word	692
	.byte	5,3,2,35,0,11
	.byte	'MANUF',0,2
	.word	709
	.byte	11,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	709
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_MANID_Bits',0,4,174,5,3
	.word	44359
	.byte	10
	.byte	'_Ifx_SCU_OMR_Bits',0,4,177,5,16,4,11
	.byte	'PS0',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	709
	.byte	14,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	692
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	692
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	709
	.byte	14,0,2,35,2,0,30
	.byte	'Ifx_SCU_OMR_Bits',0,4,185,5,3
	.word	44470
	.byte	10
	.byte	'_Ifx_SCU_OSCCON_Bits',0,4,188,5,16,4,11
	.byte	'reserved_0',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'PLLLV',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'OSCRES',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'GAINSEL',0,1
	.word	692
	.byte	2,3,2,35,0,11
	.byte	'MODE',0,1
	.word	692
	.byte	2,1,2,35,0,11
	.byte	'SHBY',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'PLLHV',0,1
	.word	692
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	692
	.byte	1,6,2,35,1,11
	.byte	'X1D',0,1
	.word	692
	.byte	1,5,2,35,1,11
	.byte	'X1DEN',0,1
	.word	692
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	692
	.byte	4,0,2,35,1,11
	.byte	'OSCVAL',0,1
	.word	692
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	692
	.byte	2,1,2,35,2,11
	.byte	'APREN',0,1
	.word	692
	.byte	1,0,2,35,2,11
	.byte	'CAP0EN',0,1
	.word	692
	.byte	1,7,2,35,3,11
	.byte	'CAP1EN',0,1
	.word	692
	.byte	1,6,2,35,3,11
	.byte	'CAP2EN',0,1
	.word	692
	.byte	1,5,2,35,3,11
	.byte	'CAP3EN',0,1
	.word	692
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	692
	.byte	4,0,2,35,3,0,30
	.byte	'Ifx_SCU_OSCCON_Bits',0,4,209,5,3
	.word	44628
	.byte	10
	.byte	'_Ifx_SCU_OUT_Bits',0,4,212,5,16,4,11
	.byte	'P0',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	517
	.byte	30,0,2,35,0,0,30
	.byte	'Ifx_SCU_OUT_Bits',0,4,217,5,3
	.word	45040
	.byte	10
	.byte	'_Ifx_SCU_OVCCON_Bits',0,4,220,5,16,4,11
	.byte	'CSEL0',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'CSEL1',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'CSEL2',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	709
	.byte	13,0,2,35,0,11
	.byte	'OVSTRT',0,1
	.word	692
	.byte	1,7,2,35,2,11
	.byte	'OVSTP',0,1
	.word	692
	.byte	1,6,2,35,2,11
	.byte	'DCINVAL',0,1
	.word	692
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	692
	.byte	5,0,2,35,2,11
	.byte	'OVCONF',0,1
	.word	692
	.byte	1,7,2,35,3,11
	.byte	'POVCONF',0,1
	.word	692
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	692
	.byte	6,0,2,35,3,0,30
	.byte	'Ifx_SCU_OVCCON_Bits',0,4,233,5,3
	.word	45141
	.byte	10
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,4,236,5,16,4,11
	.byte	'OVEN0',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'OVEN1',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'OVEN2',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	517
	.byte	29,0,2,35,0,0,30
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,4,242,5,3
	.word	45408
	.byte	10
	.byte	'_Ifx_SCU_PDISC_Bits',0,4,245,5,16,4,11
	.byte	'PDIS0',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	517
	.byte	30,0,2,35,0,0,30
	.byte	'Ifx_SCU_PDISC_Bits',0,4,250,5,3
	.word	45544
	.byte	10
	.byte	'_Ifx_SCU_PDR_Bits',0,4,253,5,16,4,11
	.byte	'PD0',0,1
	.word	692
	.byte	3,5,2,35,0,11
	.byte	'PL0',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'PD1',0,1
	.word	692
	.byte	3,1,2,35,0,11
	.byte	'PL1',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	517
	.byte	24,0,2,35,0,0,30
	.byte	'Ifx_SCU_PDR_Bits',0,4,132,6,3
	.word	45655
	.byte	10
	.byte	'_Ifx_SCU_PDRR_Bits',0,4,135,6,16,4,11
	.byte	'PDR0',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'PDR1',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'PDR2',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'PDR3',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'PDR4',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'PDR5',0,1
	.word	692
	.byte	1,2,2,35,0,11
	.byte	'PDR6',0,1
	.word	692
	.byte	1,1,2,35,0,11
	.byte	'PDR7',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	517
	.byte	24,0,2,35,0,0,30
	.byte	'Ifx_SCU_PDRR_Bits',0,4,146,6,3
	.word	45788
	.byte	10
	.byte	'_Ifx_SCU_PLLCON0_Bits',0,4,149,6,16,4,11
	.byte	'VCOBYP',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'VCOPWD',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'MODEN',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'SETFINDIS',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'CLRFINDIS',0,1
	.word	692
	.byte	1,2,2,35,0,11
	.byte	'OSCDISCDIS',0,1
	.word	692
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	709
	.byte	2,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	692
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	692
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	692
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	692
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	692
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	692
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	692
	.byte	4,0,2,35,3,0,30
	.byte	'Ifx_SCU_PLLCON0_Bits',0,4,166,6,3
	.word	45991
	.byte	10
	.byte	'_Ifx_SCU_PLLCON1_Bits',0,4,169,6,16,4,11
	.byte	'K2DIV',0,1
	.word	692
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	692
	.byte	7,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	692
	.byte	1,0,2,35,1,11
	.byte	'K1DIV',0,1
	.word	692
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	709
	.byte	9,0,2,35,2,0,30
	.byte	'Ifx_SCU_PLLCON1_Bits',0,4,177,6,3
	.word	46347
	.byte	10
	.byte	'_Ifx_SCU_PLLCON2_Bits',0,4,180,6,16,4,11
	.byte	'MODCFG',0,2
	.word	709
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	709
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_PLLCON2_Bits',0,4,184,6,3
	.word	46525
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYCON0_Bits',0,4,187,6,16,4,11
	.byte	'VCOBYP',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'VCOPWD',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	692
	.byte	2,4,2,35,0,11
	.byte	'SETFINDIS',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'CLRFINDIS',0,1
	.word	692
	.byte	1,2,2,35,0,11
	.byte	'OSCDISCDIS',0,1
	.word	692
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	709
	.byte	2,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	692
	.byte	5,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	692
	.byte	2,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	692
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	692
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	692
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	692
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	692
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	692
	.byte	4,0,2,35,3,0,30
	.byte	'Ifx_SCU_PLLERAYCON0_Bits',0,4,204,6,3
	.word	46625
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYCON1_Bits',0,4,207,6,16,4,11
	.byte	'K2DIV',0,1
	.word	692
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	692
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	692
	.byte	4,0,2,35,1,11
	.byte	'K1DIV',0,1
	.word	692
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	709
	.byte	9,0,2,35,2,0,30
	.byte	'Ifx_SCU_PLLERAYCON1_Bits',0,4,215,6,3
	.word	46995
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYSTAT_Bits',0,4,218,6,16,4,11
	.byte	'VCOBYST',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'VCOLOCK',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'FINDIS',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'K1RDY',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	692
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	517
	.byte	26,0,2,35,0,0,30
	.byte	'Ifx_SCU_PLLERAYSTAT_Bits',0,4,227,6,3
	.word	47181
	.byte	10
	.byte	'_Ifx_SCU_PLLSTAT_Bits',0,4,230,6,16,4,11
	.byte	'VCOBYST',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'VCOLOCK',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'FINDIS',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'K1RDY',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	692
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	692
	.byte	1,1,2,35,0,11
	.byte	'MODRUN',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	517
	.byte	24,0,2,35,0,0,30
	.byte	'Ifx_SCU_PLLSTAT_Bits',0,4,241,6,3
	.word	47379
	.byte	30
	.byte	'Ifx_SCU_PMCSR_Bits',0,4,251,6,3
	.word	22220
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR0_Bits',0,4,254,6,16,4,11
	.byte	'reserved_0',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'ESR1WKEN',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'PINAWKEN',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'PINBWKEN',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'ESR0DFEN',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'ESR0EDCON',0,1
	.word	692
	.byte	2,1,2,35,0,11
	.byte	'ESR1DFEN',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'ESR1EDCON',0,1
	.word	692
	.byte	2,6,2,35,1,11
	.byte	'PINADFEN',0,1
	.word	692
	.byte	1,5,2,35,1,11
	.byte	'PINAEDCON',0,1
	.word	692
	.byte	2,3,2,35,1,11
	.byte	'PINBDFEN',0,1
	.word	692
	.byte	1,2,2,35,1,11
	.byte	'PINBEDCON',0,1
	.word	692
	.byte	2,0,2,35,1,11
	.byte	'SCREN',0,1
	.word	692
	.byte	1,7,2,35,2,11
	.byte	'STBYRAMSEL',0,1
	.word	692
	.byte	2,5,2,35,2,11
	.byte	'SCRCLKSEL',0,1
	.word	692
	.byte	1,4,2,35,2,11
	.byte	'SCRWKEN',0,1
	.word	692
	.byte	1,3,2,35,2,11
	.byte	'TRISTEN',0,1
	.word	692
	.byte	1,2,2,35,2,11
	.byte	'TRISTREQ',0,1
	.word	692
	.byte	1,1,2,35,2,11
	.byte	'PORSTDF',0,1
	.word	692
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	692
	.byte	1,7,2,35,3,11
	.byte	'DCDCSYNC',0,1
	.word	692
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	692
	.byte	3,3,2,35,3,11
	.byte	'ESR0TRIST',0,1
	.word	692
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	692
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_PMSWCR0_Bits',0,4,153,7,3
	.word	47640
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,4,156,7,16,4,11
	.byte	'SCRSTEN',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'SCRSTREQ',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	692
	.byte	6,0,2,35,0,11
	.byte	'CPUIDLSEL',0,1
	.word	692
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	692
	.byte	1,4,2,35,1,11
	.byte	'IRADIS',0,1
	.word	692
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	692
	.byte	3,0,2,35,1,11
	.byte	'SCRCFG',0,1
	.word	692
	.byte	8,0,2,35,2,11
	.byte	'CPUSEL',0,1
	.word	692
	.byte	3,5,2,35,3,11
	.byte	'STBYEVEN',0,1
	.word	692
	.byte	1,4,2,35,3,11
	.byte	'STBYEV',0,1
	.word	692
	.byte	3,1,2,35,3,11
	.byte	'LCK',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,4,170,7,3
	.word	48207
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR2_Bits',0,4,173,7,16,4,11
	.byte	'SCRINT',0,1
	.word	692
	.byte	8,0,2,35,0,11
	.byte	'BUSY',0,1
	.word	692
	.byte	1,7,2,35,1,11
	.byte	'SCRECC',0,1
	.word	692
	.byte	1,6,2,35,1,11
	.byte	'SCRWDT',0,1
	.word	692
	.byte	1,5,2,35,1,11
	.byte	'SCRRST',0,1
	.word	692
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	692
	.byte	4,0,2,35,1,11
	.byte	'TCINT',0,1
	.word	692
	.byte	8,0,2,35,2,11
	.byte	'TCINTREQ',0,1
	.word	692
	.byte	1,7,2,35,3,11
	.byte	'SMURST',0,1
	.word	692
	.byte	1,6,2,35,3,11
	.byte	'RST',0,1
	.word	692
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	692
	.byte	4,1,2,35,3,11
	.byte	'LCK',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_PMSWCR2_Bits',0,4,187,7,3
	.word	48501
	.byte	10
	.byte	'_Ifx_SCU_PMSWSTAT_Bits',0,4,190,7,16,4,11
	.byte	'reserved_0',0,1
	.word	692
	.byte	2,6,2,35,0,11
	.byte	'ESR1WKP',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'ESR1OVRUN',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'PINAWKP',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'PINAOVRUN',0,1
	.word	692
	.byte	1,2,2,35,0,11
	.byte	'PINBWKP',0,1
	.word	692
	.byte	1,1,2,35,0,11
	.byte	'PINBOVRUN',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	692
	.byte	1,7,2,35,1,11
	.byte	'PORSTDF',0,1
	.word	692
	.byte	1,6,2,35,1,11
	.byte	'HWCFGEVR',0,1
	.word	692
	.byte	3,3,2,35,1,11
	.byte	'STBYRAM',0,1
	.word	692
	.byte	2,1,2,35,1,11
	.byte	'TRIST',0,1
	.word	692
	.byte	1,0,2,35,1,11
	.byte	'SCRST',0,1
	.word	692
	.byte	1,7,2,35,2,11
	.byte	'SCRWKP',0,1
	.word	692
	.byte	1,6,2,35,2,11
	.byte	'SCR',0,1
	.word	692
	.byte	1,5,2,35,2,11
	.byte	'SCRWKEN',0,1
	.word	692
	.byte	1,4,2,35,2,11
	.byte	'ESR1WKEN',0,1
	.word	692
	.byte	1,3,2,35,2,11
	.byte	'PINAWKEN',0,1
	.word	692
	.byte	1,2,2,35,2,11
	.byte	'PINBWKEN',0,1
	.word	692
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	709
	.byte	4,5,2,35,2,11
	.byte	'ESR0TRIST',0,1
	.word	692
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	692
	.byte	4,0,2,35,3,0,30
	.byte	'Ifx_SCU_PMSWSTAT_Bits',0,4,214,7,3
	.word	48779
	.byte	10
	.byte	'_Ifx_SCU_PMSWSTATCLR_Bits',0,4,217,7,16,4,11
	.byte	'reserved_0',0,1
	.word	692
	.byte	2,6,2,35,0,11
	.byte	'ESR1WKPCLR',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'ESR1OVRUNCLR',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'PINAWKPCLR',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'PINAOVRUNCLR',0,1
	.word	692
	.byte	1,2,2,35,0,11
	.byte	'PINBWKPCLR',0,1
	.word	692
	.byte	1,1,2,35,0,11
	.byte	'PINBOVRUNCLR',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	692
	.byte	8,0,2,35,1,11
	.byte	'SCRSTCLR',0,1
	.word	692
	.byte	1,7,2,35,2,11
	.byte	'SCRWKPCLR',0,1
	.word	692
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	709
	.byte	14,0,2,35,2,0,30
	.byte	'Ifx_SCU_PMSWSTATCLR_Bits',0,4,230,7,3
	.word	49275
	.byte	10
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,4,233,7,16,4,11
	.byte	'reserved_0',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'CLRC',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	709
	.byte	10,4,2,35,0,11
	.byte	'CSS0',0,1
	.word	692
	.byte	1,3,2,35,1,11
	.byte	'CSS1',0,1
	.word	692
	.byte	1,2,2,35,1,11
	.byte	'CSS2',0,1
	.word	692
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	692
	.byte	1,0,2,35,1,11
	.byte	'USRINFO',0,2
	.word	709
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_RSTCON2_Bits',0,4,243,7,3
	.word	49588
	.byte	10
	.byte	'_Ifx_SCU_RSTCON_Bits',0,4,246,7,16,4,11
	.byte	'ESR0',0,1
	.word	692
	.byte	2,6,2,35,0,11
	.byte	'ESR1',0,1
	.word	692
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	692
	.byte	2,2,2,35,0,11
	.byte	'SMU',0,1
	.word	692
	.byte	2,0,2,35,0,11
	.byte	'SW',0,1
	.word	692
	.byte	2,6,2,35,1,11
	.byte	'STM0',0,1
	.word	692
	.byte	2,4,2,35,1,11
	.byte	'STM1',0,1
	.word	692
	.byte	2,2,2,35,1,11
	.byte	'STM2',0,1
	.word	692
	.byte	2,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	709
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_RSTCON_Bits',0,4,129,8,3
	.word	49797
	.byte	10
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,4,132,8,16,4,11
	.byte	'ESR0',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'ESR1',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'SMU',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'SW',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'STM0',0,1
	.word	692
	.byte	1,2,2,35,0,11
	.byte	'STM1',0,1
	.word	692
	.byte	1,1,2,35,0,11
	.byte	'STM2',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	692
	.byte	8,0,2,35,1,11
	.byte	'PORST',0,1
	.word	692
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	692
	.byte	1,6,2,35,2,11
	.byte	'CB0',0,1
	.word	692
	.byte	1,5,2,35,2,11
	.byte	'CB1',0,1
	.word	692
	.byte	1,4,2,35,2,11
	.byte	'CB3',0,1
	.word	692
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	692
	.byte	2,1,2,35,2,11
	.byte	'EVR13',0,1
	.word	692
	.byte	1,0,2,35,2,11
	.byte	'EVR33',0,1
	.word	692
	.byte	1,7,2,35,3,11
	.byte	'SWD',0,1
	.word	692
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	692
	.byte	2,4,2,35,3,11
	.byte	'STBYR',0,1
	.word	692
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	692
	.byte	3,0,2,35,3,0,30
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,4,155,8,3
	.word	50008
	.byte	10
	.byte	'_Ifx_SCU_SAFECON_Bits',0,4,158,8,16,4,11
	.byte	'HBT',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	517
	.byte	31,0,2,35,0,0,30
	.byte	'Ifx_SCU_SAFECON_Bits',0,4,162,8,3
	.word	50440
	.byte	10
	.byte	'_Ifx_SCU_STSTAT_Bits',0,4,165,8,16,4,11
	.byte	'HWCFG',0,1
	.word	692
	.byte	8,0,2,35,0,11
	.byte	'FTM',0,1
	.word	692
	.byte	7,1,2,35,1,11
	.byte	'MODE',0,1
	.word	692
	.byte	1,0,2,35,1,11
	.byte	'FCBAE',0,1
	.word	692
	.byte	1,7,2,35,2,11
	.byte	'LUDIS',0,1
	.word	692
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	692
	.byte	1,5,2,35,2,11
	.byte	'TRSTL',0,1
	.word	692
	.byte	1,4,2,35,2,11
	.byte	'SPDEN',0,1
	.word	692
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	692
	.byte	3,0,2,35,2,11
	.byte	'RAMINT',0,1
	.word	692
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	692
	.byte	7,0,2,35,3,0,30
	.byte	'Ifx_SCU_STSTAT_Bits',0,4,178,8,3
	.word	50536
	.byte	10
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,4,181,8,16,4,11
	.byte	'reserved_0',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'SWRSTREQ',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	517
	.byte	30,0,2,35,0,0,30
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,4,186,8,3
	.word	50796
	.byte	10
	.byte	'_Ifx_SCU_SYSCON_Bits',0,4,189,8,16,4,11
	.byte	'CCTRIG0',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'RAMINTM',0,1
	.word	692
	.byte	2,4,2,35,0,11
	.byte	'SETLUDIS',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	692
	.byte	3,0,2,35,0,11
	.byte	'DATM',0,1
	.word	692
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,4
	.word	517
	.byte	23,0,2,35,0,0,30
	.byte	'Ifx_SCU_SYSCON_Bits',0,4,198,8,3
	.word	50921
	.byte	10
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,4,201,8,16,4,11
	.byte	'ESR0T',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	517
	.byte	28,0,2,35,0,0,30
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,4,208,8,3
	.word	51118
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS_Bits',0,4,211,8,16,4,11
	.byte	'ESR0T',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	517
	.byte	28,0,2,35,0,0,30
	.byte	'Ifx_SCU_TRAPDIS_Bits',0,4,218,8,3
	.word	51271
	.byte	10
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,4,221,8,16,4,11
	.byte	'ESR0T',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	517
	.byte	28,0,2,35,0,0,30
	.byte	'Ifx_SCU_TRAPSET_Bits',0,4,228,8,3
	.word	51424
	.byte	10
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,4,231,8,16,4,11
	.byte	'ESR0T',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	517
	.byte	28,0,2,35,0,0,30
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,4,238,8,3
	.word	51577
	.byte	30
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,4,247,8,3
	.word	556
	.byte	30
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,4,134,9,3
	.word	731
	.byte	30
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,4,150,9,3
	.word	975
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,4,153,9,16,4,11
	.byte	'ENDINIT',0,4
	.word	540
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	540
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	540
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	540
	.byte	16,0,2,35,0,0,30
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,4,159,9,3
	.word	51832
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,4,162,9,16,4,11
	.byte	'CLRIRF',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	692
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	692
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	692
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	692
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	709
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,4,175,9,3
	.word	51958
	.byte	10
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,4,178,9,16,4,11
	.byte	'AE',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	692
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	692
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	692
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	692
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	709
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,4,191,9,3
	.word	52210
	.byte	12,4,199,9,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34366
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_ACCEN0',0,4,204,9,3
	.word	52429
	.byte	12,4,207,9,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34923
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_ACCEN1',0,4,212,9,3
	.word	52493
	.byte	12,4,215,9,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35000
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_ARSTDIS',0,4,220,9,3
	.word	52557
	.byte	12,4,223,9,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35136
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON0',0,4,228,9,3
	.word	52622
	.byte	12,4,231,9,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35416
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON1',0,4,236,9,3
	.word	52687
	.byte	12,4,239,9,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35654
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON2',0,4,244,9,3
	.word	52752
	.byte	12,4,247,9,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35782
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON3',0,4,252,9,3
	.word	52817
	.byte	12,4,255,9,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36025
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON4',0,4,132,10,3
	.word	52882
	.byte	12,4,135,10,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36260
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON5',0,4,140,10,3
	.word	52947
	.byte	12,4,143,10,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36388
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON6',0,4,148,10,3
	.word	53012
	.byte	12,4,151,10,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36488
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON7',0,4,156,10,3
	.word	53077
	.byte	12,4,159,10,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36588
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CHIPID',0,4,164,10,3
	.word	53142
	.byte	12,4,167,10,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36796
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_DTSCON',0,4,172,10,3
	.word	53206
	.byte	12,4,175,10,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36961
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_DTSLIM',0,4,180,10,3
	.word	53270
	.byte	12,4,183,10,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37144
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_DTSSTAT',0,4,188,10,3
	.word	53334
	.byte	12,4,191,10,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37298
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EICR',0,4,196,10,3
	.word	53399
	.byte	12,4,199,10,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37662
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EIFR',0,4,204,10,3
	.word	53461
	.byte	12,4,207,10,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37873
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EMSR',0,4,212,10,3
	.word	53523
	.byte	12,4,215,10,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38125
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_ESRCFG',0,4,220,10,3
	.word	53585
	.byte	12,4,223,10,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38243
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_ESROCFG',0,4,228,10,3
	.word	53649
	.byte	12,4,231,10,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38354
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVR13CON',0,4,236,10,3
	.word	53714
	.byte	12,4,239,10,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38517
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVR33CON',0,4,244,10,3
	.word	53780
	.byte	12,4,247,10,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38680
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVRADCSTAT',0,4,252,10,3
	.word	53846
	.byte	12,4,255,10,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38838
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVRDVSTAT',0,4,132,11,3
	.word	53914
	.byte	12,4,135,11,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39003
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVRMONCTRL',0,4,140,11,3
	.word	53981
	.byte	12,4,143,11,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39332
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVROSCCTRL',0,4,148,11,3
	.word	54049
	.byte	12,4,151,11,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39553
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVROVMON',0,4,156,11,3
	.word	54117
	.byte	12,4,159,11,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39716
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVRRSTCON',0,4,164,11,3
	.word	54183
	.byte	12,4,167,11,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39988
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVRSDCOEFF1',0,4,172,11,3
	.word	54250
	.byte	12,4,175,11,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40141
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVRSDCOEFF2',0,4,180,11,3
	.word	54319
	.byte	12,4,183,11,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40297
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVRSDCOEFF3',0,4,188,11,3
	.word	54388
	.byte	12,4,191,11,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40459
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVRSDCOEFF4',0,4,196,11,3
	.word	54457
	.byte	12,4,199,11,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40602
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVRSDCOEFF5',0,4,204,11,3
	.word	54526
	.byte	12,4,207,11,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40767
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVRSDCOEFF6',0,4,212,11,3
	.word	54595
	.byte	12,4,215,11,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40912
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVRSDCTRL1',0,4,220,11,3
	.word	54664
	.byte	12,4,223,11,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41093
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVRSDCTRL2',0,4,228,11,3
	.word	54732
	.byte	12,4,231,11,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41267
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVRSDCTRL3',0,4,236,11,3
	.word	54800
	.byte	12,4,239,11,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41427
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVRSDCTRL4',0,4,244,11,3
	.word	54868
	.byte	12,4,247,11,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41571
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVRSTAT',0,4,252,11,3
	.word	54936
	.byte	12,4,255,11,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41845
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVRTRIM',0,4,132,12,3
	.word	55001
	.byte	12,4,135,12,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41984
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVRUVMON',0,4,140,12,3
	.word	55066
	.byte	12,4,143,12,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42147
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EXTCON',0,4,148,12,3
	.word	55132
	.byte	12,4,151,12,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42365
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_FDR',0,4,156,12,3
	.word	55196
	.byte	12,4,159,12,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42528
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_FMR',0,4,164,12,3
	.word	55257
	.byte	12,4,167,12,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42864
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_ID',0,4,172,12,3
	.word	55318
	.byte	12,4,175,12,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42971
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_IGCR',0,4,180,12,3
	.word	55378
	.byte	12,4,183,12,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43423
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_IN',0,4,188,12,3
	.word	55440
	.byte	12,4,191,12,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43522
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_IOCR',0,4,196,12,3
	.word	55500
	.byte	12,4,199,12,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43672
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_LBISTCTRL0',0,4,204,12,3
	.word	55562
	.byte	12,4,207,12,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43821
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_LBISTCTRL1',0,4,212,12,3
	.word	55630
	.byte	12,4,215,12,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43982
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_LBISTCTRL2',0,4,220,12,3
	.word	55698
	.byte	12,4,223,12,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44112
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_LCLCON',0,4,228,12,3
	.word	55766
	.byte	12,4,231,12,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44244
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_LCLTEST',0,4,236,12,3
	.word	55830
	.byte	12,4,239,12,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44359
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_MANID',0,4,244,12,3
	.word	55895
	.byte	12,4,247,12,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44470
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_OMR',0,4,252,12,3
	.word	55958
	.byte	12,4,255,12,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44628
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_OSCCON',0,4,132,13,3
	.word	56019
	.byte	12,4,135,13,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45040
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_OUT',0,4,140,13,3
	.word	56083
	.byte	12,4,143,13,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45141
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_OVCCON',0,4,148,13,3
	.word	56144
	.byte	12,4,151,13,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45408
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_OVCENABLE',0,4,156,13,3
	.word	56208
	.byte	12,4,159,13,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45544
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PDISC',0,4,164,13,3
	.word	56275
	.byte	12,4,167,13,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45655
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PDR',0,4,172,13,3
	.word	56338
	.byte	12,4,175,13,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45788
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PDRR',0,4,180,13,3
	.word	56399
	.byte	12,4,183,13,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45991
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PLLCON0',0,4,188,13,3
	.word	56461
	.byte	12,4,191,13,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46347
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PLLCON1',0,4,196,13,3
	.word	56526
	.byte	12,4,199,13,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46525
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PLLCON2',0,4,204,13,3
	.word	56591
	.byte	12,4,207,13,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46625
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PLLERAYCON0',0,4,212,13,3
	.word	56656
	.byte	12,4,215,13,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46995
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PLLERAYCON1',0,4,220,13,3
	.word	56725
	.byte	12,4,223,13,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47181
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PLLERAYSTAT',0,4,228,13,3
	.word	56794
	.byte	12,4,231,13,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47379
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PLLSTAT',0,4,236,13,3
	.word	56863
	.byte	30
	.byte	'Ifx_SCU_PMCSR',0,4,244,13,3
	.word	22344
	.byte	12,4,247,13,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47640
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PMSWCR0',0,4,252,13,3
	.word	56951
	.byte	12,4,255,13,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48207
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PMSWCR1',0,4,132,14,3
	.word	57016
	.byte	12,4,135,14,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48501
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PMSWCR2',0,4,140,14,3
	.word	57081
	.byte	12,4,143,14,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48779
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PMSWSTAT',0,4,148,14,3
	.word	57146
	.byte	12,4,151,14,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49275
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PMSWSTATCLR',0,4,156,14,3
	.word	57212
	.byte	12,4,159,14,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49797
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_RSTCON',0,4,164,14,3
	.word	57281
	.byte	12,4,167,14,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49588
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_RSTCON2',0,4,172,14,3
	.word	57345
	.byte	12,4,175,14,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50008
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_RSTSTAT',0,4,180,14,3
	.word	57410
	.byte	12,4,183,14,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50440
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_SAFECON',0,4,188,14,3
	.word	57475
	.byte	12,4,191,14,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50536
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_STSTAT',0,4,196,14,3
	.word	57540
	.byte	12,4,199,14,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50796
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_SWRSTCON',0,4,204,14,3
	.word	57604
	.byte	12,4,207,14,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50921
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_SYSCON',0,4,212,14,3
	.word	57670
	.byte	12,4,215,14,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51118
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_TRAPCLR',0,4,220,14,3
	.word	57734
	.byte	12,4,223,14,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51271
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_TRAPDIS',0,4,228,14,3
	.word	57799
	.byte	12,4,231,14,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51424
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_TRAPSET',0,4,236,14,3
	.word	57864
	.byte	12,4,239,14,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51577
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_TRAPSTAT',0,4,244,14,3
	.word	57929
	.byte	30
	.byte	'Ifx_SCU_WDTCPU_CON0',0,4,252,14,3
	.word	652
	.byte	30
	.byte	'Ifx_SCU_WDTCPU_CON1',0,4,132,15,3
	.word	935
	.byte	30
	.byte	'Ifx_SCU_WDTCPU_SR',0,4,140,15,3
	.word	1166
	.byte	12,4,143,15,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51832
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_WDTS_CON0',0,4,148,15,3
	.word	58080
	.byte	12,4,151,15,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51958
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_WDTS_CON1',0,4,156,15,3
	.word	58147
	.byte	12,4,159,15,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52210
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_WDTS_SR',0,4,164,15,3
	.word	58214
	.byte	14
	.word	1206
	.byte	30
	.byte	'Ifx_SCU_WDTCPU',0,4,180,15,3
	.word	58279
	.byte	10
	.byte	'_Ifx_SCU_WDTS',0,4,183,15,25,12,13
	.byte	'CON0',0
	.word	58080
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	58147
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	58214
	.byte	4,2,35,8,0,14
	.word	58308
	.byte	30
	.byte	'Ifx_SCU_WDTS',0,4,188,15,3
	.word	58369
	.byte	15,8
	.word	53585
	.byte	16,1,0,15,20
	.word	692
	.byte	16,19,0,15,8
	.word	22344
	.byte	16,1,0,14
	.word	58308
	.byte	15,24
	.word	1206
	.byte	16,1,0,14
	.word	58428
	.byte	15,16
	.word	53399
	.byte	16,3,0,15,16
	.word	55378
	.byte	16,3,0,15,180,3
	.word	692
	.byte	16,179,3,0,10
	.byte	'_Ifx_SCU',0,4,201,15,25,128,8,13
	.byte	'reserved_0',0
	.word	4329
	.byte	8,2,35,0,13
	.byte	'ID',0
	.word	55318
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2510
	.byte	4,2,35,12,13
	.byte	'OSCCON',0
	.word	56019
	.byte	4,2,35,16,13
	.byte	'PLLSTAT',0
	.word	56863
	.byte	4,2,35,20,13
	.byte	'PLLCON0',0
	.word	56461
	.byte	4,2,35,24,13
	.byte	'PLLCON1',0
	.word	56526
	.byte	4,2,35,28,13
	.byte	'PLLCON2',0
	.word	56591
	.byte	4,2,35,32,13
	.byte	'PLLERAYSTAT',0
	.word	56794
	.byte	4,2,35,36,13
	.byte	'PLLERAYCON0',0
	.word	56656
	.byte	4,2,35,40,13
	.byte	'PLLERAYCON1',0
	.word	56725
	.byte	4,2,35,44,13
	.byte	'CCUCON0',0
	.word	52622
	.byte	4,2,35,48,13
	.byte	'CCUCON1',0
	.word	52687
	.byte	4,2,35,52,13
	.byte	'FDR',0
	.word	55196
	.byte	4,2,35,56,13
	.byte	'EXTCON',0
	.word	55132
	.byte	4,2,35,60,13
	.byte	'CCUCON2',0
	.word	52752
	.byte	4,2,35,64,13
	.byte	'CCUCON3',0
	.word	52817
	.byte	4,2,35,68,13
	.byte	'CCUCON4',0
	.word	52882
	.byte	4,2,35,72,13
	.byte	'CCUCON5',0
	.word	52947
	.byte	4,2,35,76,13
	.byte	'RSTSTAT',0
	.word	57410
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	2510
	.byte	4,2,35,84,13
	.byte	'RSTCON',0
	.word	57281
	.byte	4,2,35,88,13
	.byte	'ARSTDIS',0
	.word	52557
	.byte	4,2,35,92,13
	.byte	'SWRSTCON',0
	.word	57604
	.byte	4,2,35,96,13
	.byte	'RSTCON2',0
	.word	57345
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	2510
	.byte	4,2,35,104,13
	.byte	'EVRRSTCON',0
	.word	54183
	.byte	4,2,35,108,13
	.byte	'ESRCFG',0
	.word	58396
	.byte	8,2,35,112,13
	.byte	'ESROCFG',0
	.word	53649
	.byte	4,2,35,120,13
	.byte	'SYSCON',0
	.word	57670
	.byte	4,2,35,124,13
	.byte	'CCUCON6',0
	.word	53012
	.byte	4,3,35,128,1,13
	.byte	'CCUCON7',0
	.word	53077
	.byte	4,3,35,132,1,13
	.byte	'reserved_88',0
	.word	58405
	.byte	20,3,35,136,1,13
	.byte	'PDR',0
	.word	56338
	.byte	4,3,35,156,1,13
	.byte	'IOCR',0
	.word	55500
	.byte	4,3,35,160,1,13
	.byte	'OUT',0
	.word	56083
	.byte	4,3,35,164,1,13
	.byte	'OMR',0
	.word	55958
	.byte	4,3,35,168,1,13
	.byte	'IN',0
	.word	55440
	.byte	4,3,35,172,1,13
	.byte	'EVRSTAT',0
	.word	54936
	.byte	4,3,35,176,1,13
	.byte	'EVRDVSTAT',0
	.word	53914
	.byte	4,3,35,180,1,13
	.byte	'EVR13CON',0
	.word	53714
	.byte	4,3,35,184,1,13
	.byte	'EVR33CON',0
	.word	53780
	.byte	4,3,35,188,1,13
	.byte	'STSTAT',0
	.word	57540
	.byte	4,3,35,192,1,13
	.byte	'reserved_C4',0
	.word	2510
	.byte	4,3,35,196,1,13
	.byte	'PMSWCR0',0
	.word	56951
	.byte	4,3,35,200,1,13
	.byte	'PMSWSTAT',0
	.word	57146
	.byte	4,3,35,204,1,13
	.byte	'PMSWSTATCLR',0
	.word	57212
	.byte	4,3,35,208,1,13
	.byte	'PMCSR',0
	.word	58414
	.byte	8,3,35,212,1,13
	.byte	'reserved_DC',0
	.word	2510
	.byte	4,3,35,220,1,13
	.byte	'DTSSTAT',0
	.word	53334
	.byte	4,3,35,224,1,13
	.byte	'DTSCON',0
	.word	53206
	.byte	4,3,35,228,1,13
	.byte	'PMSWCR1',0
	.word	57016
	.byte	4,3,35,232,1,13
	.byte	'PMSWCR2',0
	.word	57081
	.byte	4,3,35,236,1,13
	.byte	'WDTS',0
	.word	58423
	.byte	12,3,35,240,1,13
	.byte	'EMSR',0
	.word	53523
	.byte	4,3,35,252,1,13
	.byte	'WDTCPU',0
	.word	58437
	.byte	24,3,35,128,2,13
	.byte	'reserved_118',0
	.word	4669
	.byte	12,3,35,152,2,13
	.byte	'TRAPSTAT',0
	.word	57929
	.byte	4,3,35,164,2,13
	.byte	'TRAPSET',0
	.word	57864
	.byte	4,3,35,168,2,13
	.byte	'TRAPCLR',0
	.word	57734
	.byte	4,3,35,172,2,13
	.byte	'TRAPDIS',0
	.word	57799
	.byte	4,3,35,176,2,13
	.byte	'reserved_134',0
	.word	2510
	.byte	4,3,35,180,2,13
	.byte	'LCLCON1',0
	.word	55766
	.byte	4,3,35,184,2,13
	.byte	'LCLTEST',0
	.word	55830
	.byte	4,3,35,188,2,13
	.byte	'CHIPID',0
	.word	53142
	.byte	4,3,35,192,2,13
	.byte	'MANID',0
	.word	55895
	.byte	4,3,35,196,2,13
	.byte	'reserved_148',0
	.word	4329
	.byte	8,3,35,200,2,13
	.byte	'SAFECON',0
	.word	57475
	.byte	4,3,35,208,2,13
	.byte	'reserved_154',0
	.word	18835
	.byte	16,3,35,212,2,13
	.byte	'LBISTCTRL0',0
	.word	55562
	.byte	4,3,35,228,2,13
	.byte	'LBISTCTRL1',0
	.word	55630
	.byte	4,3,35,232,2,13
	.byte	'LBISTCTRL2',0
	.word	55698
	.byte	4,3,35,236,2,13
	.byte	'reserved_170',0
	.word	16720
	.byte	28,3,35,240,2,13
	.byte	'PDISC',0
	.word	56275
	.byte	4,3,35,140,3,13
	.byte	'reserved_190',0
	.word	4329
	.byte	8,3,35,144,3,13
	.byte	'EVRTRIM',0
	.word	55001
	.byte	4,3,35,152,3,13
	.byte	'EVRADCSTAT',0
	.word	53846
	.byte	4,3,35,156,3,13
	.byte	'EVRUVMON',0
	.word	55066
	.byte	4,3,35,160,3,13
	.byte	'EVROVMON',0
	.word	54117
	.byte	4,3,35,164,3,13
	.byte	'EVRMONCTRL',0
	.word	53981
	.byte	4,3,35,168,3,13
	.byte	'reserved_1AC',0
	.word	2510
	.byte	4,3,35,172,3,13
	.byte	'EVRSDCTRL1',0
	.word	54664
	.byte	4,3,35,176,3,13
	.byte	'EVRSDCTRL2',0
	.word	54732
	.byte	4,3,35,180,3,13
	.byte	'EVRSDCTRL3',0
	.word	54800
	.byte	4,3,35,184,3,13
	.byte	'EVRSDCTRL4',0
	.word	54868
	.byte	4,3,35,188,3,13
	.byte	'EVRSDCOEFF1',0
	.word	54250
	.byte	4,3,35,192,3,13
	.byte	'EVRSDCOEFF2',0
	.word	54319
	.byte	4,3,35,196,3,13
	.byte	'EVRSDCOEFF3',0
	.word	54388
	.byte	4,3,35,200,3,13
	.byte	'EVRSDCOEFF4',0
	.word	54457
	.byte	4,3,35,204,3,13
	.byte	'EVRSDCOEFF5',0
	.word	54526
	.byte	4,3,35,208,3,13
	.byte	'EVRSDCOEFF6',0
	.word	54595
	.byte	4,3,35,212,3,13
	.byte	'EVROSCCTRL',0
	.word	54049
	.byte	4,3,35,216,3,13
	.byte	'reserved_1DC',0
	.word	2510
	.byte	4,3,35,220,3,13
	.byte	'OVCENABLE',0
	.word	56208
	.byte	4,3,35,224,3,13
	.byte	'OVCCON',0
	.word	56144
	.byte	4,3,35,228,3,13
	.byte	'reserved_1E8',0
	.word	29011
	.byte	40,3,35,232,3,13
	.byte	'EICR',0
	.word	58442
	.byte	16,3,35,144,4,13
	.byte	'EIFR',0
	.word	53461
	.byte	4,3,35,160,4,13
	.byte	'FMR',0
	.word	55257
	.byte	4,3,35,164,4,13
	.byte	'PDRR',0
	.word	56399
	.byte	4,3,35,168,4,13
	.byte	'IGCR',0
	.word	58451
	.byte	16,3,35,172,4,13
	.byte	'reserved_23C',0
	.word	2510
	.byte	4,3,35,188,4,13
	.byte	'DTSLIM',0
	.word	53270
	.byte	4,3,35,192,4,13
	.byte	'reserved_244',0
	.word	58460
	.byte	180,3,3,35,196,4,13
	.byte	'ACCEN1',0
	.word	52493
	.byte	4,3,35,248,7,13
	.byte	'ACCEN0',0
	.word	52429
	.byte	4,3,35,252,7,0,14
	.word	58471
	.byte	30
	.byte	'Ifx_SCU',0,4,181,16,3
	.word	60461
	.byte	10
	.byte	'_Ifx_STM_ACCEN0_Bits',0,15,45,16,4,11
	.byte	'EN0',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	692
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	692
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	692
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	692
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	692
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	692
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	692
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	692
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	692
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	692
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	692
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	692
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	692
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	692
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	692
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	692
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	692
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	692
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	692
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	692
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	692
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	692
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	692
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	692
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	692
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_STM_ACCEN0_Bits',0,15,79,3
	.word	60483
	.byte	10
	.byte	'_Ifx_STM_ACCEN1_Bits',0,15,82,16,4,11
	.byte	'reserved_0',0,4
	.word	517
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_STM_ACCEN1_Bits',0,15,85,3
	.word	61040
	.byte	10
	.byte	'_Ifx_STM_CAP_Bits',0,15,88,16,4,11
	.byte	'STMCAP63_32',0,4
	.word	517
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_STM_CAP_Bits',0,15,91,3
	.word	61117
	.byte	10
	.byte	'_Ifx_STM_CAPSV_Bits',0,15,94,16,4,11
	.byte	'STMCAP63_32',0,4
	.word	517
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_STM_CAPSV_Bits',0,15,97,3
	.word	61189
	.byte	10
	.byte	'_Ifx_STM_CLC_Bits',0,15,100,16,4,11
	.byte	'DISR',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	517
	.byte	28,0,2,35,0,0,30
	.byte	'Ifx_STM_CLC_Bits',0,15,107,3
	.word	61265
	.byte	10
	.byte	'_Ifx_STM_CMCON_Bits',0,15,110,16,4,11
	.byte	'MSIZE0',0,1
	.word	692
	.byte	5,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	692
	.byte	3,0,2,35,0,11
	.byte	'MSTART0',0,1
	.word	692
	.byte	5,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	692
	.byte	3,0,2,35,1,11
	.byte	'MSIZE1',0,1
	.word	692
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	692
	.byte	3,0,2,35,2,11
	.byte	'MSTART1',0,1
	.word	692
	.byte	5,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	692
	.byte	3,0,2,35,3,0,30
	.byte	'Ifx_STM_CMCON_Bits',0,15,120,3
	.word	61406
	.byte	10
	.byte	'_Ifx_STM_CMP_Bits',0,15,123,16,4,11
	.byte	'CMPVAL',0,4
	.word	517
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_STM_CMP_Bits',0,15,126,3
	.word	61624
	.byte	10
	.byte	'_Ifx_STM_ICR_Bits',0,15,129,1,16,4,11
	.byte	'CMP0EN',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'CMP0IR',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'CMP0OS',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'CMP1EN',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'CMP1IR',0,1
	.word	692
	.byte	1,2,2,35,0,11
	.byte	'CMP1OS',0,1
	.word	692
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	517
	.byte	25,0,2,35,0,0,30
	.byte	'Ifx_STM_ICR_Bits',0,15,139,1,3
	.word	61691
	.byte	10
	.byte	'_Ifx_STM_ID_Bits',0,15,142,1,16,4,11
	.byte	'MODREV',0,1
	.word	692
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	692
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	709
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_STM_ID_Bits',0,15,147,1,3
	.word	61894
	.byte	10
	.byte	'_Ifx_STM_ISCR_Bits',0,15,150,1,16,4,11
	.byte	'CMP0IRR',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'CMP0IRS',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'CMP1IRR',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'CMP1IRS',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	517
	.byte	28,0,2,35,0,0,30
	.byte	'Ifx_STM_ISCR_Bits',0,15,157,1,3
	.word	62001
	.byte	10
	.byte	'_Ifx_STM_KRST0_Bits',0,15,160,1,16,4,11
	.byte	'RST',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	517
	.byte	30,0,2,35,0,0,30
	.byte	'Ifx_STM_KRST0_Bits',0,15,165,1,3
	.word	62152
	.byte	10
	.byte	'_Ifx_STM_KRST1_Bits',0,15,168,1,16,4,11
	.byte	'RST',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	517
	.byte	31,0,2,35,0,0,30
	.byte	'Ifx_STM_KRST1_Bits',0,15,172,1,3
	.word	62263
	.byte	10
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,15,175,1,16,4,11
	.byte	'CLR',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	517
	.byte	31,0,2,35,0,0,30
	.byte	'Ifx_STM_KRSTCLR_Bits',0,15,179,1,3
	.word	62355
	.byte	10
	.byte	'_Ifx_STM_OCS_Bits',0,15,182,1,16,4,11
	.byte	'reserved_0',0,4
	.word	517
	.byte	24,8,2,35,0,11
	.byte	'SUS',0,1
	.word	692
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	692
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	692
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	692
	.byte	2,0,2,35,3,0,30
	.byte	'Ifx_STM_OCS_Bits',0,15,189,1,3
	.word	62451
	.byte	10
	.byte	'_Ifx_STM_TIM0_Bits',0,15,192,1,16,4,11
	.byte	'STM31_0',0,4
	.word	517
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_STM_TIM0_Bits',0,15,195,1,3
	.word	62597
	.byte	10
	.byte	'_Ifx_STM_TIM0SV_Bits',0,15,198,1,16,4,11
	.byte	'STM31_0',0,4
	.word	517
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_STM_TIM0SV_Bits',0,15,201,1,3
	.word	62669
	.byte	10
	.byte	'_Ifx_STM_TIM1_Bits',0,15,204,1,16,4,11
	.byte	'STM35_4',0,4
	.word	517
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_STM_TIM1_Bits',0,15,207,1,3
	.word	62745
	.byte	10
	.byte	'_Ifx_STM_TIM2_Bits',0,15,210,1,16,4,11
	.byte	'STM39_8',0,4
	.word	517
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_STM_TIM2_Bits',0,15,213,1,3
	.word	62817
	.byte	10
	.byte	'_Ifx_STM_TIM3_Bits',0,15,216,1,16,4,11
	.byte	'STM43_12',0,4
	.word	517
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_STM_TIM3_Bits',0,15,219,1,3
	.word	62889
	.byte	10
	.byte	'_Ifx_STM_TIM4_Bits',0,15,222,1,16,4,11
	.byte	'STM47_16',0,4
	.word	517
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_STM_TIM4_Bits',0,15,225,1,3
	.word	62962
	.byte	10
	.byte	'_Ifx_STM_TIM5_Bits',0,15,228,1,16,4,11
	.byte	'STM51_20',0,4
	.word	517
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_STM_TIM5_Bits',0,15,231,1,3
	.word	63035
	.byte	10
	.byte	'_Ifx_STM_TIM6_Bits',0,15,234,1,16,4,11
	.byte	'STM63_32',0,4
	.word	517
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_STM_TIM6_Bits',0,15,237,1,3
	.word	63108
	.byte	12,15,245,1,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60483
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_ACCEN0',0,15,250,1,3
	.word	63181
	.byte	12,15,253,1,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61040
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_ACCEN1',0,15,130,2,3
	.word	63245
	.byte	12,15,133,2,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61117
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_CAP',0,15,138,2,3
	.word	63309
	.byte	12,15,141,2,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61189
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_CAPSV',0,15,146,2,3
	.word	63370
	.byte	12,15,149,2,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61265
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_CLC',0,15,154,2,3
	.word	63433
	.byte	12,15,157,2,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61406
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_CMCON',0,15,162,2,3
	.word	63494
	.byte	12,15,165,2,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61624
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_CMP',0,15,170,2,3
	.word	63557
	.byte	12,15,173,2,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61691
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_ICR',0,15,178,2,3
	.word	63618
	.byte	12,15,181,2,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61894
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_ID',0,15,186,2,3
	.word	63679
	.byte	12,15,189,2,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62001
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_ISCR',0,15,194,2,3
	.word	63739
	.byte	12,15,197,2,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62152
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_KRST0',0,15,202,2,3
	.word	63801
	.byte	12,15,205,2,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62263
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_KRST1',0,15,210,2,3
	.word	63864
	.byte	12,15,213,2,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62355
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_KRSTCLR',0,15,218,2,3
	.word	63927
	.byte	12,15,221,2,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62451
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_OCS',0,15,226,2,3
	.word	63992
	.byte	12,15,229,2,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62597
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_TIM0',0,15,234,2,3
	.word	64053
	.byte	12,15,237,2,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62669
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_TIM0SV',0,15,242,2,3
	.word	64115
	.byte	12,15,245,2,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62745
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_TIM1',0,15,250,2,3
	.word	64179
	.byte	12,15,253,2,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62817
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_TIM2',0,15,130,3,3
	.word	64241
	.byte	12,15,133,3,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62889
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_TIM3',0,15,138,3,3
	.word	64303
	.byte	12,15,141,3,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62962
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_TIM4',0,15,146,3,3
	.word	64365
	.byte	12,15,149,3,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63035
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_TIM5',0,15,154,3,3
	.word	64427
	.byte	12,15,157,3,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63108
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_TIM6',0,15,162,3,3
	.word	64489
	.byte	17,16,240,10,9,1,18
	.byte	'IfxScu_CCUCON0_CLKSEL_fBack',0,0,18
	.byte	'IfxScu_CCUCON0_CLKSEL_fPll',0,1,0,30
	.byte	'IfxScu_CCUCON0_CLKSEL',0,16,244,10,3
	.word	64551
	.byte	17,16,254,10,9,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,18
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,30
	.byte	'IfxScu_WDTCON1_IR',0,16,131,11,3
	.word	64648
	.byte	10
	.byte	'_Ifx_FLASH_ACCEN0_Bits',0,17,45,16,4,11
	.byte	'EN0',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	692
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	692
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	692
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	692
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	692
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	692
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	692
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	692
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	692
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	692
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	692
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	692
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	692
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	692
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	692
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	692
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	692
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	692
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	692
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	692
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	692
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	692
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	692
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	692
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	692
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_FLASH_ACCEN0_Bits',0,17,79,3
	.word	64770
	.byte	10
	.byte	'_Ifx_FLASH_ACCEN1_Bits',0,17,82,16,4,11
	.byte	'reserved_0',0,4
	.word	517
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_FLASH_ACCEN1_Bits',0,17,85,3
	.word	65331
	.byte	10
	.byte	'_Ifx_FLASH_CBAB_CFG_Bits',0,17,88,16,4,11
	.byte	'SEL',0,1
	.word	692
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	692
	.byte	2,0,2,35,0,11
	.byte	'CLR',0,1
	.word	692
	.byte	1,7,2,35,1,11
	.byte	'DIS',0,1
	.word	692
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	517
	.byte	22,0,2,35,0,0,30
	.byte	'Ifx_FLASH_CBAB_CFG_Bits',0,17,95,3
	.word	65412
	.byte	10
	.byte	'_Ifx_FLASH_CBAB_STAT_Bits',0,17,98,16,4,11
	.byte	'VLD0',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'VLD1',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'VLD2',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'VLD3',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'VLD4',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'VLD5',0,1
	.word	692
	.byte	1,2,2,35,0,11
	.byte	'VLD6',0,1
	.word	692
	.byte	1,1,2,35,0,11
	.byte	'VLD7',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'VLD8',0,1
	.word	692
	.byte	1,7,2,35,1,11
	.byte	'VLD9',0,1
	.word	692
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	517
	.byte	22,0,2,35,0,0,30
	.byte	'Ifx_FLASH_CBAB_STAT_Bits',0,17,111,3
	.word	65565
	.byte	10
	.byte	'_Ifx_FLASH_CBAB_TOP_Bits',0,17,114,16,4,11
	.byte	'reserved_0',0,1
	.word	692
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	517
	.byte	19,8,2,35,0,11
	.byte	'ERR',0,1
	.word	692
	.byte	6,2,2,35,3,11
	.byte	'VLD',0,1
	.word	692
	.byte	1,1,2,35,3,11
	.byte	'CLR',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_FLASH_CBAB_TOP_Bits',0,17,121,3
	.word	65813
	.byte	10
	.byte	'_Ifx_FLASH_COMM0_Bits',0,17,124,16,4,11
	.byte	'STATUS',0,1
	.word	692
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	517
	.byte	24,0,2,35,0,0,30
	.byte	'Ifx_FLASH_COMM0_Bits',0,17,128,1,3
	.word	65959
	.byte	10
	.byte	'_Ifx_FLASH_COMM1_Bits',0,17,131,1,16,4,11
	.byte	'STATUS',0,1
	.word	692
	.byte	8,0,2,35,0,11
	.byte	'DATA',0,1
	.word	692
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	709
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_FLASH_COMM1_Bits',0,17,136,1,3
	.word	66057
	.byte	10
	.byte	'_Ifx_FLASH_COMM2_Bits',0,17,139,1,16,4,11
	.byte	'STATUS',0,1
	.word	692
	.byte	8,0,2,35,0,11
	.byte	'DATA',0,1
	.word	692
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	709
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_FLASH_COMM2_Bits',0,17,144,1,3
	.word	66173
	.byte	10
	.byte	'_Ifx_FLASH_ECCRD_Bits',0,17,147,1,16,4,11
	.byte	'RCODE',0,4
	.word	517
	.byte	22,10,2,35,0,11
	.byte	'reserved_22',0,2
	.word	709
	.byte	8,2,2,35,2,11
	.byte	'EDCERRINJ',0,1
	.word	692
	.byte	1,1,2,35,3,11
	.byte	'ECCORDIS',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_FLASH_ECCRD_Bits',0,17,153,1,3
	.word	66289
	.byte	10
	.byte	'_Ifx_FLASH_ECCRP_Bits',0,17,156,1,16,4,11
	.byte	'RCODE',0,4
	.word	517
	.byte	22,10,2,35,0,11
	.byte	'reserved_22',0,2
	.word	709
	.byte	8,2,2,35,2,11
	.byte	'EDCERRINJ',0,1
	.word	692
	.byte	1,1,2,35,3,11
	.byte	'ECCORDIS',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_FLASH_ECCRP_Bits',0,17,162,1,3
	.word	66429
	.byte	10
	.byte	'_Ifx_FLASH_ECCW_Bits',0,17,165,1,16,4,11
	.byte	'WCODE',0,4
	.word	517
	.byte	22,10,2,35,0,11
	.byte	'reserved_22',0,2
	.word	709
	.byte	8,2,2,35,2,11
	.byte	'DECENCDIS',0,1
	.word	692
	.byte	1,1,2,35,3,11
	.byte	'PECENCDIS',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_FLASH_ECCW_Bits',0,17,171,1,3
	.word	66569
	.byte	10
	.byte	'_Ifx_FLASH_FCON_Bits',0,17,174,1,16,4,11
	.byte	'WSPFLASH',0,1
	.word	692
	.byte	4,4,2,35,0,11
	.byte	'WSECPF',0,1
	.word	692
	.byte	2,2,2,35,0,11
	.byte	'WSDFLASH',0,2
	.word	709
	.byte	6,4,2,35,0,11
	.byte	'WSECDF',0,1
	.word	692
	.byte	3,1,2,35,1,11
	.byte	'IDLE',0,1
	.word	692
	.byte	1,0,2,35,1,11
	.byte	'ESLDIS',0,1
	.word	692
	.byte	1,7,2,35,2,11
	.byte	'SLEEP',0,1
	.word	692
	.byte	1,6,2,35,2,11
	.byte	'NSAFECC',0,1
	.word	692
	.byte	1,5,2,35,2,11
	.byte	'STALL',0,1
	.word	692
	.byte	1,4,2,35,2,11
	.byte	'RES21',0,1
	.word	692
	.byte	2,2,2,35,2,11
	.byte	'RES23',0,1
	.word	692
	.byte	2,0,2,35,2,11
	.byte	'VOPERM',0,1
	.word	692
	.byte	1,7,2,35,3,11
	.byte	'SQERM',0,1
	.word	692
	.byte	1,6,2,35,3,11
	.byte	'PROERM',0,1
	.word	692
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	692
	.byte	3,2,2,35,3,11
	.byte	'PR5V',0,1
	.word	692
	.byte	1,1,2,35,3,11
	.byte	'EOBM',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_FLASH_FCON_Bits',0,17,193,1,3
	.word	66708
	.byte	10
	.byte	'_Ifx_FLASH_FPRO_Bits',0,17,196,1,16,4,11
	.byte	'PROINP',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'PRODISP',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'PROIND',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'PRODISD',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'PROINHSMCOTP',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'RES5',0,1
	.word	692
	.byte	1,2,2,35,0,11
	.byte	'PROINOTP',0,1
	.word	692
	.byte	1,1,2,35,0,11
	.byte	'RES7',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'PROINDBG',0,1
	.word	692
	.byte	1,7,2,35,1,11
	.byte	'PRODISDBG',0,1
	.word	692
	.byte	1,6,2,35,1,11
	.byte	'PROINHSM',0,1
	.word	692
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	692
	.byte	5,0,2,35,1,11
	.byte	'DCFP',0,1
	.word	692
	.byte	1,7,2,35,2,11
	.byte	'DDFP',0,1
	.word	692
	.byte	1,6,2,35,2,11
	.byte	'DDFPX',0,1
	.word	692
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	692
	.byte	1,4,2,35,2,11
	.byte	'DDFD',0,1
	.word	692
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	692
	.byte	1,2,2,35,2,11
	.byte	'ENPE',0,1
	.word	692
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	692
	.byte	8,0,2,35,3,0,30
	.byte	'Ifx_FLASH_FPRO_Bits',0,17,218,1,3
	.word	67070
	.byte	10
	.byte	'_Ifx_FLASH_FSR_Bits',0,17,221,1,16,4,11
	.byte	'FABUSY',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'D0BUSY',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'RES1',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'P0BUSY',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'P1BUSY',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'RES5',0,1
	.word	692
	.byte	1,2,2,35,0,11
	.byte	'RES6',0,1
	.word	692
	.byte	1,1,2,35,0,11
	.byte	'PROG',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'ERASE',0,1
	.word	692
	.byte	1,7,2,35,1,11
	.byte	'PFPAGE',0,1
	.word	692
	.byte	1,6,2,35,1,11
	.byte	'DFPAGE',0,1
	.word	692
	.byte	1,5,2,35,1,11
	.byte	'OPER',0,1
	.word	692
	.byte	1,4,2,35,1,11
	.byte	'SQER',0,1
	.word	692
	.byte	1,3,2,35,1,11
	.byte	'PROER',0,1
	.word	692
	.byte	1,2,2,35,1,11
	.byte	'PFSBER',0,1
	.word	692
	.byte	1,1,2,35,1,11
	.byte	'PFDBER',0,1
	.word	692
	.byte	1,0,2,35,1,11
	.byte	'PFMBER',0,1
	.word	692
	.byte	1,7,2,35,2,11
	.byte	'RES17',0,1
	.word	692
	.byte	1,6,2,35,2,11
	.byte	'DFSBER',0,1
	.word	692
	.byte	1,5,2,35,2,11
	.byte	'DFDBER',0,1
	.word	692
	.byte	1,4,2,35,2,11
	.byte	'DFTBER',0,1
	.word	692
	.byte	1,3,2,35,2,11
	.byte	'DFMBER',0,1
	.word	692
	.byte	1,2,2,35,2,11
	.byte	'SRIADDERR',0,1
	.word	692
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	709
	.byte	2,7,2,35,2,11
	.byte	'PVER',0,1
	.word	692
	.byte	1,6,2,35,3,11
	.byte	'EVER',0,1
	.word	692
	.byte	1,5,2,35,3,11
	.byte	'SPND',0,1
	.word	692
	.byte	1,4,2,35,3,11
	.byte	'SLM',0,1
	.word	692
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	692
	.byte	1,2,2,35,3,11
	.byte	'ORIER',0,1
	.word	692
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_FLASH_FSR_Bits',0,17,254,1,3
	.word	67511
	.byte	10
	.byte	'_Ifx_FLASH_ID_Bits',0,17,129,2,16,4,11
	.byte	'MODREV',0,1
	.word	692
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	692
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	709
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_FLASH_ID_Bits',0,17,134,2,3
	.word	68117
	.byte	10
	.byte	'_Ifx_FLASH_MARD_Bits',0,17,137,2,16,4,11
	.byte	'HMARGIN',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'SELD0',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'SPND',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'SPNDERR',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,2
	.word	709
	.byte	10,1,2,35,0,11
	.byte	'TRAPDIS',0,1
	.word	692
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	709
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_FLASH_MARD_Bits',0,17,147,2,3
	.word	68228
	.byte	10
	.byte	'_Ifx_FLASH_MARP_Bits',0,17,150,2,16,4,11
	.byte	'SELP0',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'SELP1',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'RES2',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'RES3',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	709
	.byte	11,1,2,35,0,11
	.byte	'TRAPDIS',0,1
	.word	692
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	709
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_FLASH_MARP_Bits',0,17,159,2,3
	.word	68442
	.byte	10
	.byte	'_Ifx_FLASH_PROCOND_Bits',0,17,162,2,16,4,11
	.byte	'L',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'NSAFECC',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'RAMIN',0,1
	.word	692
	.byte	2,4,2,35,0,11
	.byte	'RAMINSEL',0,1
	.word	692
	.byte	4,0,2,35,0,11
	.byte	'OSCCFG',0,1
	.word	692
	.byte	1,7,2,35,1,11
	.byte	'MODE',0,1
	.word	692
	.byte	2,5,2,35,1,11
	.byte	'APREN',0,1
	.word	692
	.byte	1,4,2,35,1,11
	.byte	'CAP0EN',0,1
	.word	692
	.byte	1,3,2,35,1,11
	.byte	'CAP1EN',0,1
	.word	692
	.byte	1,2,2,35,1,11
	.byte	'CAP2EN',0,1
	.word	692
	.byte	1,1,2,35,1,11
	.byte	'CAP3EN',0,1
	.word	692
	.byte	1,0,2,35,1,11
	.byte	'ESR0CNT',0,2
	.word	709
	.byte	12,4,2,35,2,11
	.byte	'RES29',0,1
	.word	692
	.byte	2,2,2,35,3,11
	.byte	'RES30',0,1
	.word	692
	.byte	1,1,2,35,3,11
	.byte	'RPRO',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_FLASH_PROCOND_Bits',0,17,179,2,3
	.word	68629
	.byte	10
	.byte	'_Ifx_FLASH_PROCONDBG_Bits',0,17,182,2,16,4,11
	.byte	'OCDSDIS',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'DBGIFLCK',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'EDM',0,1
	.word	692
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	517
	.byte	28,0,2,35,0,0,30
	.byte	'Ifx_FLASH_PROCONDBG_Bits',0,17,188,2,3
	.word	68953
	.byte	10
	.byte	'_Ifx_FLASH_PROCONHSM_Bits',0,17,191,2,16,4,11
	.byte	'HSMDBGDIS',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'DBGIFLCK',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'TSTIFLCK',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'HSMTSTDIS',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'RES15',0,2
	.word	709
	.byte	12,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	709
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_FLASH_PROCONHSM_Bits',0,17,199,2,3
	.word	69096
	.byte	10
	.byte	'_Ifx_FLASH_PROCONHSMCOTP_Bits',0,17,202,2,16,4,11
	.byte	'HSMBOOTEN',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'SSWWAIT',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'HSMDX',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'HSM6X',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'HSM16X',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'HSM17X',0,1
	.word	692
	.byte	1,2,2,35,0,11
	.byte	'S6ROM',0,1
	.word	692
	.byte	1,1,2,35,0,11
	.byte	'HSMENPINS',0,2
	.word	709
	.byte	2,7,2,35,0,11
	.byte	'HSMENRES',0,1
	.word	692
	.byte	2,5,2,35,1,11
	.byte	'DESTDBG',0,1
	.word	692
	.byte	2,3,2,35,1,11
	.byte	'BLKFLAN',0,1
	.word	692
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	692
	.byte	2,0,2,35,1,11
	.byte	'S16ROM',0,1
	.word	692
	.byte	1,7,2,35,2,11
	.byte	'S17ROM',0,1
	.word	692
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	709
	.byte	14,0,2,35,2,0,30
	.byte	'Ifx_FLASH_PROCONHSMCOTP_Bits',0,17,219,2,3
	.word	69285
	.byte	10
	.byte	'_Ifx_FLASH_PROCONOTP_Bits',0,17,222,2,16,4,11
	.byte	'S0ROM',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'S1ROM',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'S2ROM',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'S3ROM',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'S4ROM',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'S5ROM',0,1
	.word	692
	.byte	1,2,2,35,0,11
	.byte	'S6ROM',0,1
	.word	692
	.byte	1,1,2,35,0,11
	.byte	'S7ROM',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'S8ROM',0,1
	.word	692
	.byte	1,7,2,35,1,11
	.byte	'S9ROM',0,1
	.word	692
	.byte	1,6,2,35,1,11
	.byte	'S10ROM',0,1
	.word	692
	.byte	1,5,2,35,1,11
	.byte	'S11ROM',0,1
	.word	692
	.byte	1,4,2,35,1,11
	.byte	'S12ROM',0,1
	.word	692
	.byte	1,3,2,35,1,11
	.byte	'S13ROM',0,1
	.word	692
	.byte	1,2,2,35,1,11
	.byte	'S14ROM',0,1
	.word	692
	.byte	1,1,2,35,1,11
	.byte	'S15ROM',0,1
	.word	692
	.byte	1,0,2,35,1,11
	.byte	'S16ROM',0,1
	.word	692
	.byte	1,7,2,35,2,11
	.byte	'S17ROM',0,1
	.word	692
	.byte	1,6,2,35,2,11
	.byte	'S18ROM',0,1
	.word	692
	.byte	1,5,2,35,2,11
	.byte	'S19ROM',0,1
	.word	692
	.byte	1,4,2,35,2,11
	.byte	'S20ROM',0,1
	.word	692
	.byte	1,3,2,35,2,11
	.byte	'S21ROM',0,1
	.word	692
	.byte	1,2,2,35,2,11
	.byte	'S22ROM',0,1
	.word	692
	.byte	1,1,2,35,2,11
	.byte	'S23ROM',0,1
	.word	692
	.byte	1,0,2,35,2,11
	.byte	'S24ROM',0,1
	.word	692
	.byte	1,7,2,35,3,11
	.byte	'S25ROM',0,1
	.word	692
	.byte	1,6,2,35,3,11
	.byte	'S26ROM',0,1
	.word	692
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	692
	.byte	2,3,2,35,3,11
	.byte	'BML',0,1
	.word	692
	.byte	2,1,2,35,3,11
	.byte	'TP',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_FLASH_PROCONOTP_Bits',0,17,254,2,3
	.word	69648
	.byte	10
	.byte	'_Ifx_FLASH_PROCONP_Bits',0,17,129,3,16,4,11
	.byte	'S0L',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'S1L',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'S2L',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'S3L',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'S4L',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'S5L',0,1
	.word	692
	.byte	1,2,2,35,0,11
	.byte	'S6L',0,1
	.word	692
	.byte	1,1,2,35,0,11
	.byte	'S7L',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'S8L',0,1
	.word	692
	.byte	1,7,2,35,1,11
	.byte	'S9L',0,1
	.word	692
	.byte	1,6,2,35,1,11
	.byte	'S10L',0,1
	.word	692
	.byte	1,5,2,35,1,11
	.byte	'S11L',0,1
	.word	692
	.byte	1,4,2,35,1,11
	.byte	'S12L',0,1
	.word	692
	.byte	1,3,2,35,1,11
	.byte	'S13L',0,1
	.word	692
	.byte	1,2,2,35,1,11
	.byte	'S14L',0,1
	.word	692
	.byte	1,1,2,35,1,11
	.byte	'S15L',0,1
	.word	692
	.byte	1,0,2,35,1,11
	.byte	'S16L',0,1
	.word	692
	.byte	1,7,2,35,2,11
	.byte	'S17L',0,1
	.word	692
	.byte	1,6,2,35,2,11
	.byte	'S18L',0,1
	.word	692
	.byte	1,5,2,35,2,11
	.byte	'S19L',0,1
	.word	692
	.byte	1,4,2,35,2,11
	.byte	'S20L',0,1
	.word	692
	.byte	1,3,2,35,2,11
	.byte	'S21L',0,1
	.word	692
	.byte	1,2,2,35,2,11
	.byte	'S22L',0,1
	.word	692
	.byte	1,1,2,35,2,11
	.byte	'S23L',0,1
	.word	692
	.byte	1,0,2,35,2,11
	.byte	'S24L',0,1
	.word	692
	.byte	1,7,2,35,3,11
	.byte	'S25L',0,1
	.word	692
	.byte	1,6,2,35,3,11
	.byte	'S26L',0,1
	.word	692
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	692
	.byte	4,1,2,35,3,11
	.byte	'RPRO',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_FLASH_PROCONP_Bits',0,17,160,3,3
	.word	70243
	.byte	10
	.byte	'_Ifx_FLASH_PROCONWOP_Bits',0,17,163,3,16,4,11
	.byte	'S0WOP',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'S1WOP',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'S2WOP',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'S3WOP',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'S4WOP',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'S5WOP',0,1
	.word	692
	.byte	1,2,2,35,0,11
	.byte	'S6WOP',0,1
	.word	692
	.byte	1,1,2,35,0,11
	.byte	'S7WOP',0,1
	.word	692
	.byte	1,0,2,35,0,11
	.byte	'S8WOP',0,1
	.word	692
	.byte	1,7,2,35,1,11
	.byte	'S9WOP',0,1
	.word	692
	.byte	1,6,2,35,1,11
	.byte	'S10WOP',0,1
	.word	692
	.byte	1,5,2,35,1,11
	.byte	'S11WOP',0,1
	.word	692
	.byte	1,4,2,35,1,11
	.byte	'S12WOP',0,1
	.word	692
	.byte	1,3,2,35,1,11
	.byte	'S13WOP',0,1
	.word	692
	.byte	1,2,2,35,1,11
	.byte	'S14WOP',0,1
	.word	692
	.byte	1,1,2,35,1,11
	.byte	'S15WOP',0,1
	.word	692
	.byte	1,0,2,35,1,11
	.byte	'S16WOP',0,1
	.word	692
	.byte	1,7,2,35,2,11
	.byte	'S17WOP',0,1
	.word	692
	.byte	1,6,2,35,2,11
	.byte	'S18WOP',0,1
	.word	692
	.byte	1,5,2,35,2,11
	.byte	'S19WOP',0,1
	.word	692
	.byte	1,4,2,35,2,11
	.byte	'S20WOP',0,1
	.word	692
	.byte	1,3,2,35,2,11
	.byte	'S21WOP',0,1
	.word	692
	.byte	1,2,2,35,2,11
	.byte	'S22WOP',0,1
	.word	692
	.byte	1,1,2,35,2,11
	.byte	'S23WOP',0,1
	.word	692
	.byte	1,0,2,35,2,11
	.byte	'S24WOP',0,1
	.word	692
	.byte	1,7,2,35,3,11
	.byte	'S25WOP',0,1
	.word	692
	.byte	1,6,2,35,3,11
	.byte	'S26WOP',0,1
	.word	692
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	692
	.byte	4,1,2,35,3,11
	.byte	'DATM',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_FLASH_PROCONWOP_Bits',0,17,194,3,3
	.word	70767
	.byte	10
	.byte	'_Ifx_FLASH_RDB_CFG0_Bits',0,17,197,3,16,4,11
	.byte	'TAG',0,1
	.word	692
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	517
	.byte	26,0,2,35,0,0,30
	.byte	'Ifx_FLASH_RDB_CFG0_Bits',0,17,201,3,3
	.word	71349
	.byte	10
	.byte	'_Ifx_FLASH_RDB_CFG1_Bits',0,17,204,3,16,4,11
	.byte	'TAG',0,1
	.word	692
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	517
	.byte	26,0,2,35,0,0,30
	.byte	'Ifx_FLASH_RDB_CFG1_Bits',0,17,208,3,3
	.word	71451
	.byte	10
	.byte	'_Ifx_FLASH_RDB_CFG2_Bits',0,17,211,3,16,4,11
	.byte	'TAG',0,1
	.word	692
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	517
	.byte	26,0,2,35,0,0,30
	.byte	'Ifx_FLASH_RDB_CFG2_Bits',0,17,215,3,3
	.word	71553
	.byte	10
	.byte	'_Ifx_FLASH_RRAD_Bits',0,17,218,3,16,4,11
	.byte	'reserved_0',0,1
	.word	692
	.byte	3,5,2,35,0,11
	.byte	'ADD',0,4
	.word	517
	.byte	29,0,2,35,0,0,30
	.byte	'Ifx_FLASH_RRAD_Bits',0,17,222,3,3
	.word	71655
	.byte	10
	.byte	'_Ifx_FLASH_RRCT_Bits',0,17,225,3,16,4,11
	.byte	'STRT',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'STP',0,1
	.word	692
	.byte	1,6,2,35,0,11
	.byte	'BUSY',0,1
	.word	692
	.byte	1,5,2,35,0,11
	.byte	'DONE',0,1
	.word	692
	.byte	1,4,2,35,0,11
	.byte	'ERR',0,1
	.word	692
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	692
	.byte	3,0,2,35,0,11
	.byte	'EOBM',0,1
	.word	692
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	692
	.byte	7,0,2,35,1,11
	.byte	'CNT',0,2
	.word	709
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_FLASH_RRCT_Bits',0,17,236,3,3
	.word	71749
	.byte	10
	.byte	'_Ifx_FLASH_RRD0_Bits',0,17,239,3,16,4,11
	.byte	'DATA',0,4
	.word	517
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_FLASH_RRD0_Bits',0,17,242,3,3
	.word	71959
	.byte	10
	.byte	'_Ifx_FLASH_RRD1_Bits',0,17,245,3,16,4,11
	.byte	'DATA',0,4
	.word	517
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_FLASH_RRD1_Bits',0,17,248,3,3
	.word	72032
	.byte	10
	.byte	'_Ifx_FLASH_UBAB_CFG_Bits',0,17,251,3,16,4,11
	.byte	'SEL',0,1
	.word	692
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	692
	.byte	2,0,2,35,0,11
	.byte	'CLR',0,1
	.word	692
	.byte	1,7,2,35,1,11
	.byte	'DIS',0,1
	.word	692
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	517
	.byte	22,0,2,35,0,0,30
	.byte	'Ifx_FLASH_UBAB_CFG_Bits',0,17,130,4,3
	.word	72105
	.byte	10
	.byte	'_Ifx_FLASH_UBAB_STAT_Bits',0,17,133,4,16,4,11
	.byte	'VLD0',0,1
	.word	692
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	517
	.byte	31,0,2,35,0,0,30
	.byte	'Ifx_FLASH_UBAB_STAT_Bits',0,17,137,4,3
	.word	72260
	.byte	10
	.byte	'_Ifx_FLASH_UBAB_TOP_Bits',0,17,140,4,16,4,11
	.byte	'reserved_0',0,1
	.word	692
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	517
	.byte	19,8,2,35,0,11
	.byte	'ERR',0,1
	.word	692
	.byte	6,2,2,35,3,11
	.byte	'VLD',0,1
	.word	692
	.byte	1,1,2,35,3,11
	.byte	'CLR',0,1
	.word	692
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_FLASH_UBAB_TOP_Bits',0,17,147,4,3
	.word	72365
	.byte	12,17,155,4,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64770
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_ACCEN0',0,17,160,4,3
	.word	72513
	.byte	12,17,163,4,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65331
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_ACCEN1',0,17,168,4,3
	.word	72579
	.byte	12,17,171,4,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65412
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_CBAB_CFG',0,17,176,4,3
	.word	72645
	.byte	12,17,179,4,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65565
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_CBAB_STAT',0,17,184,4,3
	.word	72713
	.byte	12,17,187,4,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65813
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_CBAB_TOP',0,17,192,4,3
	.word	72782
	.byte	12,17,195,4,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65959
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_COMM0',0,17,200,4,3
	.word	72850
	.byte	12,17,203,4,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66057
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_COMM1',0,17,208,4,3
	.word	72915
	.byte	12,17,211,4,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66173
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_COMM2',0,17,216,4,3
	.word	72980
	.byte	12,17,219,4,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66289
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_ECCRD',0,17,224,4,3
	.word	73045
	.byte	12,17,227,4,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66429
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_ECCRP',0,17,232,4,3
	.word	73110
	.byte	12,17,235,4,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66569
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_ECCW',0,17,240,4,3
	.word	73175
	.byte	12,17,243,4,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66708
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_FCON',0,17,248,4,3
	.word	73239
	.byte	12,17,251,4,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67070
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_FPRO',0,17,128,5,3
	.word	73303
	.byte	12,17,131,5,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67511
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_FSR',0,17,136,5,3
	.word	73367
	.byte	12,17,139,5,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68117
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_ID',0,17,144,5,3
	.word	73430
	.byte	12,17,147,5,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68228
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_MARD',0,17,152,5,3
	.word	73492
	.byte	12,17,155,5,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68442
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_MARP',0,17,160,5,3
	.word	73556
	.byte	12,17,163,5,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68629
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_PROCOND',0,17,168,5,3
	.word	73620
	.byte	12,17,171,5,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68953
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_PROCONDBG',0,17,176,5,3
	.word	73687
	.byte	12,17,179,5,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69096
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_PROCONHSM',0,17,184,5,3
	.word	73756
	.byte	12,17,187,5,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69285
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_PROCONHSMCOTP',0,17,192,5,3
	.word	73825
	.byte	12,17,195,5,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69648
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_PROCONOTP',0,17,200,5,3
	.word	73898
	.byte	12,17,203,5,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70243
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_PROCONP',0,17,208,5,3
	.word	73967
	.byte	12,17,211,5,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70767
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_PROCONWOP',0,17,216,5,3
	.word	74034
	.byte	12,17,219,5,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71349
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_RDB_CFG0',0,17,224,5,3
	.word	74103
	.byte	12,17,227,5,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71451
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_RDB_CFG1',0,17,232,5,3
	.word	74171
	.byte	12,17,235,5,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71553
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_RDB_CFG2',0,17,240,5,3
	.word	74239
	.byte	12,17,243,5,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71655
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_RRAD',0,17,248,5,3
	.word	74307
	.byte	12,17,251,5,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71749
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_RRCT',0,17,128,6,3
	.word	74371
	.byte	12,17,131,6,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71959
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_RRD0',0,17,136,6,3
	.word	74435
	.byte	12,17,139,6,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72032
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_RRD1',0,17,144,6,3
	.word	74499
	.byte	12,17,147,6,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72105
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_UBAB_CFG',0,17,152,6,3
	.word	74563
	.byte	12,17,155,6,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72260
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_UBAB_STAT',0,17,160,6,3
	.word	74631
	.byte	12,17,163,6,9,4,13
	.byte	'U',0
	.word	517
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	533
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72365
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_UBAB_TOP',0,17,168,6,3
	.word	74700
	.byte	10
	.byte	'_Ifx_FLASH_CBAB',0,17,179,6,25,12,13
	.byte	'CFG',0
	.word	72645
	.byte	4,2,35,0,13
	.byte	'STAT',0
	.word	72713
	.byte	4,2,35,4,13
	.byte	'TOP',0
	.word	72782
	.byte	4,2,35,8,0,14
	.word	74768
	.byte	30
	.byte	'Ifx_FLASH_CBAB',0,17,184,6,3
	.word	74831
	.byte	10
	.byte	'_Ifx_FLASH_RDB',0,17,187,6,25,12,13
	.byte	'CFG0',0
	.word	74103
	.byte	4,2,35,0,13
	.byte	'CFG1',0
	.word	74171
	.byte	4,2,35,4,13
	.byte	'CFG2',0
	.word	74239
	.byte	4,2,35,8,0,14
	.word	74860
	.byte	30
	.byte	'Ifx_FLASH_RDB',0,17,192,6,3
	.word	74924
	.byte	10
	.byte	'_Ifx_FLASH_UBAB',0,17,195,6,25,12,13
	.byte	'CFG',0
	.word	74563
	.byte	4,2,35,0,13
	.byte	'STAT',0
	.word	74631
	.byte	4,2,35,4,13
	.byte	'TOP',0
	.word	74700
	.byte	4,2,35,8,0,14
	.word	74952
	.byte	30
	.byte	'Ifx_FLASH_UBAB',0,17,200,6,3
	.word	75015
	.byte	30
	.byte	'Ifx_P_ACCEN0_Bits',0,6,79,3
	.word	8082
	.byte	30
	.byte	'Ifx_P_ACCEN1_Bits',0,6,85,3
	.word	7995
	.byte	30
	.byte	'Ifx_P_ESR_Bits',0,6,107,3
	.word	4338
	.byte	30
	.byte	'Ifx_P_ID_Bits',0,6,115,3
	.word	2391
	.byte	30
	.byte	'Ifx_P_IN_Bits',0,6,137,1,3
	.word	3386
	.byte	30
	.byte	'Ifx_P_IOCR0_Bits',0,6,150,1,3
	.word	2519
	.byte	30
	.byte	'Ifx_P_IOCR12_Bits',0,6,163,1,3
	.word	3166
	.byte	30
	.byte	'Ifx_P_IOCR4_Bits',0,6,176,1,3
	.word	2734
	.byte	30
	.byte	'Ifx_P_IOCR8_Bits',0,6,189,1,3
	.word	2949
	.byte	30
	.byte	'Ifx_P_LPCR0_Bits',0,6,197,1,3
	.word	7354
	.byte	30
	.byte	'Ifx_P_LPCR1_Bits',0,6,205,1,3
	.word	7478
	.byte	30
	.byte	'Ifx_P_LPCR1_P21_Bits',0,6,215,1,3
	.word	7562
	.byte	30
	.byte	'Ifx_P_LPCR2_Bits',0,6,229,1,3
	.word	7742
	.byte	30
	.byte	'Ifx_P_OMCR0_Bits',0,6,240,1,3
	.word	5993
	.byte	30
	.byte	'Ifx_P_OMCR12_Bits',0,6,250,1,3
	.word	6517
	.byte	30
	.byte	'Ifx_P_OMCR4_Bits',0,6,133,2,3
	.word	6167
	.byte	30
	.byte	'Ifx_P_OMCR8_Bits',0,6,144,2,3
	.word	6341
	.byte	30
	.byte	'Ifx_P_OMCR_Bits',0,6,166,2,3
	.word	7006
	.byte	30
	.byte	'Ifx_P_OMR_Bits',0,6,203,2,3
	.word	1820
	.byte	30
	.byte	'Ifx_P_OMSR0_Bits',0,6,213,2,3
	.word	5330
	.byte	30
	.byte	'Ifx_P_OMSR12_Bits',0,6,224,2,3
	.word	5818
	.byte	30
	.byte	'Ifx_P_OMSR4_Bits',0,6,235,2,3
	.word	5477
	.byte	30
	.byte	'Ifx_P_OMSR8_Bits',0,6,246,2,3
	.word	5646
	.byte	30
	.byte	'Ifx_P_OMSR_Bits',0,6,140,3,3
	.word	6673
	.byte	30
	.byte	'Ifx_P_OUT_Bits',0,6,162,3,3
	.word	1504
	.byte	30
	.byte	'Ifx_P_PCSR_Bits',0,6,180,3,3
	.word	5044
	.byte	30
	.byte	'Ifx_P_PDISC_Bits',0,6,202,3,3
	.word	4678
	.byte	30
	.byte	'Ifx_P_PDR0_Bits',0,6,223,3,3
	.word	3709
	.byte	30
	.byte	'Ifx_P_PDR1_Bits',0,6,244,3,3
	.word	4013
	.byte	30
	.byte	'Ifx_P_ACCEN0',0,6,129,4,3
	.word	8609
	.byte	30
	.byte	'Ifx_P_ACCEN1',0,6,137,4,3
	.word	8042
	.byte	30
	.byte	'Ifx_P_ESR',0,6,145,4,3
	.word	4629
	.byte	30
	.byte	'Ifx_P_ID',0,6,153,4,3
	.word	2470
	.byte	30
	.byte	'Ifx_P_IN',0,6,161,4,3
	.word	3660
	.byte	30
	.byte	'Ifx_P_IOCR0',0,6,169,4,3
	.word	2694
	.byte	30
	.byte	'Ifx_P_IOCR12',0,6,177,4,3
	.word	3346
	.byte	30
	.byte	'Ifx_P_IOCR4',0,6,185,4,3
	.word	2909
	.byte	30
	.byte	'Ifx_P_IOCR8',0,6,193,4,3
	.word	3126
	.byte	30
	.byte	'Ifx_P_LPCR0',0,6,201,4,3
	.word	7438
	.byte	30
	.byte	'Ifx_P_LPCR1',0,6,210,4,3
	.word	7687
	.byte	30
	.byte	'Ifx_P_LPCR2',0,6,218,4,3
	.word	7946
	.byte	30
	.byte	'Ifx_P_OMCR',0,6,226,4,3
	.word	7314
	.byte	30
	.byte	'Ifx_P_OMCR0',0,6,234,4,3
	.word	6127
	.byte	30
	.byte	'Ifx_P_OMCR12',0,6,242,4,3
	.word	6633
	.byte	30
	.byte	'Ifx_P_OMCR4',0,6,250,4,3
	.word	6301
	.byte	30
	.byte	'Ifx_P_OMCR8',0,6,130,5,3
	.word	6477
	.byte	30
	.byte	'Ifx_P_OMR',0,6,138,5,3
	.word	2351
	.byte	30
	.byte	'Ifx_P_OMSR',0,6,146,5,3
	.word	6966
	.byte	30
	.byte	'Ifx_P_OMSR0',0,6,154,5,3
	.word	5437
	.byte	30
	.byte	'Ifx_P_OMSR12',0,6,162,5,3
	.word	5953
	.byte	30
	.byte	'Ifx_P_OMSR4',0,6,170,5,3
	.word	5606
	.byte	30
	.byte	'Ifx_P_OMSR8',0,6,178,5,3
	.word	5778
	.byte	30
	.byte	'Ifx_P_OUT',0,6,186,5,3
	.word	1780
	.byte	30
	.byte	'Ifx_P_PCSR',0,6,194,5,3
	.word	5290
	.byte	30
	.byte	'Ifx_P_PDISC',0,6,202,5,3
	.word	5004
	.byte	30
	.byte	'Ifx_P_PDR0',0,6,210,5,3
	.word	3973
	.byte	30
	.byte	'Ifx_P_PDR1',0,6,218,5,3
	.word	4289
	.byte	14
	.word	8649
	.byte	30
	.byte	'Ifx_P',0,6,139,6,3
	.word	76362
	.byte	17,5,83,9,1,18
	.byte	'IfxPort_InputMode_undefined',0,127,18
	.byte	'IfxPort_InputMode_noPullDevice',0,0,18
	.byte	'IfxPort_InputMode_pullDown',0,8,18
	.byte	'IfxPort_InputMode_pullUp',0,16,0,30
	.byte	'IfxPort_InputMode',0,5,89,3
	.word	76382
	.byte	17,5,120,9,1,18
	.byte	'IfxPort_OutputIdx_general',0,128,1,18
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,18
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,18
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,18
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,18
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,18
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,18
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,30
	.byte	'IfxPort_OutputIdx',0,5,130,1,3
	.word	76533
	.byte	17,5,134,1,9,1,18
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,18
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,30
	.byte	'IfxPort_OutputMode',0,5,138,1,3
	.word	76777
	.byte	17,5,144,1,9,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,18
	.byte	'IfxPort_PadDriver_lvdsSpeed1',0,4,18
	.byte	'IfxPort_PadDriver_lvdsSpeed2',0,5,18
	.byte	'IfxPort_PadDriver_lvdsSpeed3',0,6,18
	.byte	'IfxPort_PadDriver_lvdsSpeed4',0,7,18
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,18
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,18
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,18
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,0,30
	.byte	'IfxPort_PadDriver',0,5,158,1,3
	.word	76875
	.byte	30
	.byte	'IfxPort_State',0,5,178,1,3
	.word	9262
	.byte	32,5,190,1,9,8,13
	.byte	'port',0
	.word	9257
	.byte	4,2,35,0,13
	.byte	'pinIndex',0
	.word	692
	.byte	1,2,35,4,0,30
	.byte	'IfxPort_Pin',0,5,194,1,3
	.word	77340
	.byte	30
	.byte	'IfxScuCcu_PllStepsFunctionHook',0,7,148,1,16
	.word	168
	.byte	32,7,212,5,9,8,13
	.byte	'value',0
	.word	311
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	311
	.byte	4,2,35,4,0,30
	.byte	'IfxScuCcu_CcuconRegConfig',0,7,216,5,3
	.word	77440
	.byte	32,7,221,5,9,8,13
	.byte	'pDivider',0
	.word	692
	.byte	1,2,35,0,13
	.byte	'nDivider',0
	.word	692
	.byte	1,2,35,1,13
	.byte	'k2Initial',0
	.word	692
	.byte	1,2,35,2,13
	.byte	'waitTime',0
	.word	225
	.byte	4,2,35,4,0,30
	.byte	'IfxScuCcu_InitialStepConfig',0,7,227,5,3
	.word	77511
	.byte	32,7,231,5,9,12,13
	.byte	'k2Step',0
	.word	692
	.byte	1,2,35,0,13
	.byte	'waitTime',0
	.word	225
	.byte	4,2,35,2,13
	.byte	'hookFunction',0
	.word	77400
	.byte	4,2,35,8,0,30
	.byte	'IfxScuCcu_PllStepsConfig',0,7,236,5,3
	.word	77628
	.byte	3
	.word	165
	.byte	32,7,244,5,9,48,13
	.byte	'ccucon0',0
	.word	77440
	.byte	8,2,35,0,13
	.byte	'ccucon1',0
	.word	77440
	.byte	8,2,35,8,13
	.byte	'ccucon2',0
	.word	77440
	.byte	8,2,35,16,13
	.byte	'ccucon5',0
	.word	77440
	.byte	8,2,35,24,13
	.byte	'ccucon6',0
	.word	77440
	.byte	8,2,35,32,13
	.byte	'ccucon7',0
	.word	77440
	.byte	8,2,35,40,0,30
	.byte	'IfxScuCcu_ClockDistributionConfig',0,7,252,5,3
	.word	77730
	.byte	32,7,128,6,9,8,13
	.byte	'value',0
	.word	311
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	311
	.byte	4,2,35,4,0,30
	.byte	'IfxScuCcu_FlashWaitstateConfig',0,7,132,6,3
	.word	77882
	.byte	3
	.word	77628
	.byte	32,7,137,6,9,16,13
	.byte	'numOfPllDividerSteps',0
	.word	692
	.byte	1,2,35,0,13
	.byte	'pllDividerStep',0
	.word	77958
	.byte	4,2,35,4,13
	.byte	'pllInitialStep',0
	.word	77511
	.byte	8,2,35,8,0,30
	.byte	'IfxScuCcu_SysPllConfig',0,7,142,6,3
	.word	77963
	.byte	30
	.byte	'IfxCpu_spinLock',0,8,114,22
	.word	517
	.byte	30
	.byte	'IfxCpu_mutexLock',0,8,118,22
	.word	517
	.byte	30
	.byte	'IfxCpu_syncEvent',0,8,122,22
	.word	517
	.byte	30
	.byte	'IfxCpu_CoreMode',0,8,140,1,3
	.word	22072
	.byte	17,8,144,1,9,1,18
	.byte	'IfxCpu_CounterMode_normal',0,0,18
	.byte	'IfxCpu_CounterMode_task',0,1,0,30
	.byte	'IfxCpu_CounterMode',0,8,148,1,3
	.word	78179
	.byte	32,8,160,1,9,6,13
	.byte	'counter',0
	.word	311
	.byte	4,2,35,0,13
	.byte	'overlfow',0
	.word	692
	.byte	1,2,35,4,0,30
	.byte	'IfxCpu_Counter',0,8,164,1,3
	.word	78268
	.byte	32,8,172,1,9,32,13
	.byte	'instruction',0
	.word	78268
	.byte	6,2,35,0,13
	.byte	'clock',0
	.word	78268
	.byte	6,2,35,6,13
	.byte	'counter1',0
	.word	78268
	.byte	6,2,35,12,13
	.byte	'counter2',0
	.word	78268
	.byte	6,2,35,18,13
	.byte	'counter3',0
	.word	78268
	.byte	6,2,35,24,0,30
	.byte	'IfxCpu_Perf',0,8,179,1,3
	.word	78334
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L89:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,39,12,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,36,0,3,8,11,15,62
	.byte	15,0,0,8,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,9,59,0,3,8,0,0,10,19,1,3,8,58,15,59,15
	.byte	57,15,11,15,0,0,11,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,12,23,1,58,15,59,15,57,15,11,15,0,0,13,13
	.byte	0,3,8,73,19,11,15,56,9,0,0,14,53,0,73,19,0,0,15,1,1,11,15,73,19,0,0,16,33,0,47,15,0,0,17,4,1,58,15,59
	.byte	15,57,15,11,15,0,0,18,40,0,3,8,28,13,0,0,19,11,1,0,0,20,38,0,73,19,0,0,21,46,1,3,8,54,15,39,12,63,12,60
	.byte	12,0,0,22,5,0,73,19,0,0,23,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,24,5,0,3,8,73,19,0,0,25,46,0,3,8
	.byte	54,15,39,12,63,12,60,12,0,0,26,46,1,49,19,0,0,27,5,0,49,19,0,0,28,46,1,3,8,58,15,59,15,57,15,54,15,39
	.byte	12,63,12,60,12,0,0,29,46,0,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,30,22,0,3,8,58,15,59
	.byte	15,57,15,73,19,0,0,31,21,0,54,15,0,0,32,19,1,58,15,59,15,57,15,11,15,0,0,33,52,0,3,8,58,15,59,15,57,15
	.byte	73,19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L90:
	.word	.L333-.L332
.L332:
	.half	3
	.word	.L335-.L334
.L334:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl',0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu_Intrinsics.h',0,1,0,0
	.byte	'IfxScuWdt.h',0,2,0,0
	.byte	'IfxScu_regdef.h',0,3,0,0
	.byte	'IfxPort.h',0,4,0,0
	.byte	'IfxPort_regdef.h',0,3,0,0
	.byte	'IfxScuCcu.h',0,2,0,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.h',0,0,0,0
	.byte	'IfxCpu_regdef.h',0,3,0,0
	.byte	'IfxCpu_cfg.h',0,5,0,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0,0,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Ifx_Types.h',0,1,0,0
	.byte	'IfxSrc_regdef.h',0,3,0,0
	.byte	'IfxStm_regdef.h',0,3,0,0
	.byte	'IfxScu_cfg.h',0,5,0,0
	.byte	'IfxFlash_regdef.h',0,3,0,0,0
.L335:
.L333:
	.sdecl	'.debug_info',debug,cluster('IfxCpu_getCoreMode')
	.sect	'.debug_info'
.L91:
	.word	373
	.half	3
	.word	.L92
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L94,.L93
	.byte	2
	.word	.L87
	.byte	3
	.byte	'IfxCpu_getCoreMode',0,1,77,17
	.word	.L156
	.byte	1,1,1
	.word	.L64,.L157,.L63
	.byte	4
	.byte	'cpu',0,1,77,45
	.word	.L158,.L159
	.byte	5
	.word	.L64,.L157
	.byte	6
	.byte	'cpuMode',0,1,79,24
	.word	.L156,.L160
	.byte	6
	.byte	'dbgsr',0,1,80,24
	.word	.L161,.L162
	.byte	6
	.byte	'index',0,1,81,24
	.word	.L163,.L164
	.byte	7
	.word	.L165,.L166,.L4
	.byte	8
	.word	.L167,.L166,.L4
	.byte	6
	.byte	'reg',0,2,143,6,21
	.word	.L168,.L169
	.byte	0,0,5
	.word	.L170,.L11
	.byte	6
	.byte	'pmcsr_val',0,1,105,37
	.word	.L171,.L172
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCpu_getCoreMode')
	.sect	'.debug_abbrev'
.L92:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCpu_getCoreMode')
	.sect	'.debug_line'
.L93:
	.word	.L337-.L336
.L336:
	.half	3
	.word	.L339-.L338
.L338:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0,0,0,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.h',0,0,0,0,0
.L339:
	.byte	5,17,7,0,5,2
	.word	.L64
	.byte	3,204,0,1,5,48,9
	.half	.L268-.L64
	.byte	3,4,1,5,13,9
	.half	.L267-.L268
	.byte	3,2,1,4,2,5,19,9
	.half	.L166-.L267
	.byte	3,189,5,1,5,37,9
	.half	.L271-.L166
	.byte	3,1,1,5,5,9
	.half	.L272-.L271
	.byte	1,4,1,9
	.half	.L4-.L272
	.byte	3,198,122,1,5,20,7,9
	.half	.L340-.L4
	.byte	3,2,1,5,27,9
	.half	.L273-.L340
	.byte	1,5,25,9
	.half	.L5-.L273
	.byte	3,4,1,5,16,9
	.half	.L6-.L5
	.byte	3,4,1,5,5,9
	.half	.L341-.L6
	.byte	1,5,17,7,9
	.half	.L342-.L341
	.byte	3,2,1,5,39,9
	.half	.L343-.L342
	.byte	1,5,20,9
	.half	.L7-.L343
	.byte	3,4,1,5,9,9
	.half	.L344-.L7
	.byte	1,5,42,7,9
	.half	.L170-.L344
	.byte	3,4,1,5,29,9
	.half	.L274-.L170
	.byte	3,2,1,5,13,9
	.half	.L345-.L274
	.byte	1,5,25,7,9
	.half	.L346-.L345
	.byte	3,2,1,5,46,9
	.half	.L347-.L346
	.byte	1,5,33,9
	.half	.L10-.L347
	.byte	3,4,1,5,17,9
	.half	.L348-.L10
	.byte	1,5,29,7,9
	.half	.L349-.L348
	.byte	3,2,1,5,13,9
	.half	.L11-.L349
	.byte	3,124,1,5,21,9
	.half	.L9-.L11
	.byte	3,10,1,5,5,9
	.half	.L8-.L9
	.byte	3,4,1,5,1,9
	.half	.L14-.L8
	.byte	3,1,1,7,9
	.half	.L95-.L14
	.byte	0,1,1
.L337:
	.sdecl	'.debug_ranges',debug,cluster('IfxCpu_getCoreMode')
	.sect	'.debug_ranges'
.L94:
	.word	-1,.L64,0,.L95-.L64,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCpu_getIndex')
	.sect	'.debug_info'
.L96:
	.word	278
	.half	3
	.word	.L97
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L99,.L98
	.byte	2
	.word	.L87
	.byte	3
	.byte	'IfxCpu_getIndex',0,1,131,1,20
	.word	.L163
	.byte	1,1,1
	.word	.L66,.L173,.L65
	.byte	4
	.byte	'cpu',0,1,131,1,45
	.word	.L158,.L174
	.byte	5
	.word	.L66,.L173
	.byte	6
	.byte	'result',0,1,133,1,24
	.word	.L163,.L175
	.byte	6
	.byte	'index',0,1,134,1,24
	.word	.L176,.L177
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCpu_getIndex')
	.sect	'.debug_abbrev'
.L97:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCpu_getIndex')
	.sect	'.debug_line'
.L98:
	.word	.L351-.L350
.L350:
	.half	3
	.word	.L353-.L352
.L352:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0,0,0,0,0
.L353:
	.byte	5,12,7,0,5,2
	.word	.L66
	.byte	3,134,1,1,5,16,9
	.half	.L275-.L66
	.byte	3,2,1,5,47,9
	.half	.L276-.L275
	.byte	1,5,32,9
	.half	.L16-.L276
	.byte	3,2,1,5,13,9
	.half	.L354-.L16
	.byte	1,5,32,9
	.half	.L355-.L354
	.byte	1,5,39,9
	.half	.L356-.L355
	.byte	1,5,9,9
	.half	.L357-.L356
	.byte	1,5,61,7,9
	.half	.L358-.L357
	.byte	3,2,1,5,42,9
	.half	.L359-.L358
	.byte	1,5,61,9
	.half	.L360-.L359
	.byte	1,5,68,9
	.half	.L361-.L360
	.byte	1,5,22,9
	.half	.L362-.L361
	.byte	1,5,13,9
	.half	.L363-.L362
	.byte	3,1,1,5,54,9
	.half	.L17-.L363
	.byte	3,123,1,5,47,9
	.half	.L15-.L17
	.byte	1,5,5,7,9
	.half	.L18-.L15
	.byte	3,9,1,5,1,9
	.half	.L19-.L18
	.byte	3,1,1,7,9
	.half	.L100-.L19
	.byte	0,1,1
.L351:
	.sdecl	'.debug_ranges',debug,cluster('IfxCpu_getIndex')
	.sect	'.debug_ranges'
.L99:
	.word	-1,.L66,0,.L100-.L66,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCpu_setCoreMode')
	.sect	'.debug_info'
.L101:
	.word	433
	.half	3
	.word	.L102
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L104,.L103
	.byte	2
	.word	.L87
	.byte	3
	.byte	'IfxCpu_setCoreMode',0,1,226,1,9
	.word	.L178
	.byte	1,1,1
	.word	.L76,.L179,.L75
	.byte	4
	.byte	'cpu',0,1,226,1,37
	.word	.L158,.L180
	.byte	4
	.byte	'mode',0,1,226,1,58
	.word	.L156,.L181
	.byte	5
	.word	.L76,.L179
	.byte	6
	.byte	'reqslp',0,1,228,1,24
	.word	.L178,.L182
	.byte	6
	.byte	'retValue',0,1,229,1,24
	.word	.L178,.L183
	.byte	6
	.byte	'index',0,1,230,1,24
	.word	.L163,.L184
	.byte	7
	.word	.L165,.L185,.L35
	.byte	8
	.word	.L167,.L185,.L35
	.byte	6
	.byte	'reg',0,2,143,6,21
	.word	.L168,.L186
	.byte	0,0,5
	.word	.L187,.L188
	.byte	6
	.byte	'safetyWdtPw',0,1,244,1,20
	.word	.L189,.L190
	.byte	0,5
	.word	.L36,.L34
	.byte	6
	.byte	'cpuWdtPw',0,1,254,1,20
	.word	.L189,.L191
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCpu_setCoreMode')
	.sect	'.debug_abbrev'
.L102:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCpu_setCoreMode')
	.sect	'.debug_line'
.L103:
	.word	.L365-.L364
.L364:
	.half	3
	.word	.L367-.L366
.L366:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0,0,0,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.h',0,0,0,0,0
.L367:
	.byte	5,9,7,0,5,2
	.word	.L76
	.byte	3,225,1,1,5,48,9
	.half	.L289-.L76
	.byte	3,4,1,5,30,9
	.half	.L286-.L289
	.byte	1,5,17,9
	.half	.L292-.L286
	.byte	3,3,1,5,57,7,9
	.half	.L368-.L292
	.byte	1,5,26,7,9
	.half	.L369-.L368
	.byte	3,1,1,5,52,7,9
	.half	.L28-.L369
	.byte	1,5,60,9
	.half	.L293-.L28
	.byte	1,5,52,9
	.half	.L30-.L293
	.byte	1,5,14,9
	.half	.L31-.L30
	.byte	3,2,1,5,45,7,9
	.half	.L370-.L31
	.byte	1,5,72,9
	.half	.L294-.L370
	.byte	1,5,45,9
	.half	.L32-.L294
	.byte	1,5,5,9
	.half	.L33-.L32
	.byte	3,2,1,4,2,5,19,7,9
	.half	.L185-.L33
	.byte	3,162,4,1,5,37,9
	.half	.L290-.L185
	.byte	3,1,1,5,5,9
	.half	.L295-.L290
	.byte	1,4,1,5,9,9
	.half	.L35-.L295
	.byte	3,224,123,1,5,69,7,9
	.half	.L187-.L35
	.byte	3,3,1,5,32,9
	.half	.L291-.L187
	.byte	1,5,42,9
	.half	.L297-.L291
	.byte	3,1,1,5,54,9
	.half	.L299-.L297
	.byte	3,1,1,5,29,9
	.half	.L301-.L299
	.byte	1,5,69,9
	.half	.L371-.L301
	.byte	1,5,40,9
	.half	.L372-.L371
	.byte	3,1,1,5,25,9
	.half	.L303-.L372
	.byte	3,2,1,5,31,9
	.half	.L298-.L303
	.byte	1,5,32,9
	.half	.L188-.L298
	.byte	3,123,1,5,63,9
	.half	.L36-.L188
	.byte	3,10,1,5,29,9
	.half	.L304-.L36
	.byte	1,5,39,9
	.half	.L306-.L304
	.byte	3,1,1,5,29,9
	.half	.L307-.L306
	.byte	3,1,1,5,46,9
	.half	.L373-.L307
	.byte	1,5,54,9
	.half	.L374-.L373
	.byte	1,5,37,9
	.half	.L375-.L374
	.byte	3,1,1,5,5,9
	.half	.L34-.L375
	.byte	3,4,1,5,1,9
	.half	.L38-.L34
	.byte	3,1,1,7,9
	.half	.L105-.L38
	.byte	0,1,1
.L365:
	.sdecl	'.debug_ranges',debug,cluster('IfxCpu_setCoreMode')
	.sect	'.debug_ranges'
.L104:
	.word	-1,.L76,0,.L105-.L76,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCpu_setProgramCounter')
	.sect	'.debug_info'
.L106:
	.word	398
	.half	3
	.word	.L107
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L109,.L108
	.byte	2
	.word	.L87
	.byte	3
	.byte	'IfxCpu_setProgramCounter',0,1,137,2,9
	.word	.L178
	.byte	1,1,1
	.word	.L78,.L192,.L77
	.byte	4
	.byte	'cpu',0,1,137,2,43
	.word	.L158,.L193
	.byte	4
	.byte	'programCounter',0,1,137,2,55
	.word	.L176,.L194
	.byte	5
	.word	.L78,.L192
	.byte	6
	.byte	'retVal',0,1,139,2,13
	.word	.L178,.L195
	.byte	7
	.word	.L165,.L196,.L39
	.byte	8
	.word	.L167,.L196,.L39
	.byte	6
	.byte	'reg',0,2,143,6,21
	.word	.L168,.L197
	.byte	0,0,7
	.word	.L198,.L39,.L199
	.byte	9
	.word	.L200,.L201
	.byte	8
	.word	.L202,.L39,.L199
	.byte	6
	.byte	'module',0,2,234,5,14
	.word	.L158,.L203
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCpu_setProgramCounter')
	.sect	'.debug_abbrev'
.L107:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,11,1,49,16,17,1,18,1,0,0,9,5,0,49
	.byte	16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCpu_setProgramCounter')
	.sect	'.debug_line'
.L108:
	.word	.L377-.L376
.L376:
	.half	3
	.word	.L379-.L378
.L378:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0,0,0,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.h',0,0,0,0,0
.L379:
	.byte	5,20,7,0,5,2
	.word	.L78
	.byte	3,138,2,1,4,2,5,19,9
	.half	.L196-.L78
	.byte	3,133,4,1,5,37,9
	.half	.L310-.L196
	.byte	3,1,1,5,5,9
	.half	.L311-.L310
	.byte	1,9
	.half	.L39-.L311
	.byte	3,91,1,5,48,7,9
	.half	.L380-.L39
	.byte	3,2,1,5,29,9
	.half	.L381-.L380
	.byte	1,5,48,9
	.half	.L382-.L381
	.byte	1,5,53,9
	.half	.L383-.L382
	.byte	1,5,60,9
	.half	.L312-.L383
	.byte	1,5,16,9
	.half	.L40-.L312
	.byte	3,4,1,5,5,9
	.half	.L41-.L40
	.byte	3,3,1,4,1,9
	.half	.L42-.L41
	.byte	3,152,124,1,5,16,7,9
	.half	.L199-.L42
	.byte	3,2,1,5,23,9
	.half	.L384-.L199
	.byte	1,5,18,9
	.half	.L43-.L384
	.byte	3,4,1,5,39,9
	.half	.L385-.L43
	.byte	1,5,22,9
	.half	.L309-.L385
	.byte	1,5,5,9
	.half	.L44-.L309
	.byte	3,3,1,5,1,9
	.half	.L45-.L44
	.byte	3,1,1,7,9
	.half	.L110-.L45
	.byte	0,1,1
.L377:
	.sdecl	'.debug_ranges',debug,cluster('IfxCpu_setProgramCounter')
	.sect	'.debug_ranges'
.L109:
	.word	-1,.L78,0,.L110-.L78,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCpu_startCore')
	.sect	'.debug_info'
.L111:
	.word	288
	.half	3
	.word	.L112
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L114,.L113
	.byte	2
	.word	.L87
	.byte	3
	.byte	'IfxCpu_startCore',0,1,182,2,9
	.word	.L178
	.byte	1,1,1
	.word	.L82,.L204,.L81
	.byte	4
	.byte	'cpu',0,1,182,2,35
	.word	.L158,.L205
	.byte	4
	.byte	'programCounter',0,1,182,2,47
	.word	.L176,.L206
	.byte	5
	.word	.L82,.L204
	.byte	6
	.byte	'retVal',0,1,184,2,13
	.word	.L178,.L207
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCpu_startCore')
	.sect	'.debug_abbrev'
.L112:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCpu_startCore')
	.sect	'.debug_line'
.L113:
	.word	.L387-.L386
.L386:
	.half	3
	.word	.L389-.L388
.L388:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0,0,0,0,0
.L389:
	.byte	5,9,7,0,5,2
	.word	.L82
	.byte	3,181,2,1,5,20,9
	.half	.L315-.L82
	.byte	3,2,1,5,45,9
	.half	.L316-.L315
	.byte	3,3,1,5,12,9
	.half	.L314-.L316
	.byte	1,5,28,9
	.half	.L390-.L314
	.byte	3,4,1,5,5,9
	.half	.L318-.L390
	.byte	1,5,43,7,9
	.half	.L391-.L318
	.byte	3,2,1,5,16,9
	.half	.L320-.L391
	.byte	1,5,5,9
	.half	.L51-.L320
	.byte	3,3,1,5,1,9
	.half	.L52-.L51
	.byte	3,1,1,7,9
	.half	.L115-.L52
	.byte	0,1,1
.L387:
	.sdecl	'.debug_ranges',debug,cluster('IfxCpu_startCore')
	.sect	'.debug_ranges'
.L114:
	.word	-1,.L82,0,.L115-.L82,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCpu_acquireMutex')
	.sect	'.debug_info'
.L116:
	.word	285
	.half	3
	.word	.L117
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L119,.L118
	.byte	2
	.word	.L87
	.byte	3
	.byte	'IfxCpu_acquireMutex',0,1,56,9
	.word	.L178
	.byte	1,1,1
	.word	.L62,.L208,.L61
	.byte	4
	.byte	'lock',0,1,56,47
	.word	.L209,.L210
	.byte	5
	.word	.L62,.L208
	.byte	6
	.byte	'retVal',0,1,58,21
	.word	.L178,.L211
	.byte	6
	.byte	'spinLockVal',0,1,59,21
	.word	.L212,.L213
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCpu_acquireMutex')
	.sect	'.debug_abbrev'
.L117:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCpu_acquireMutex')
	.sect	'.debug_line'
.L118:
	.word	.L393-.L392
.L392:
	.half	3
	.word	.L395-.L394
.L394:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0,0,0,0,0
.L395:
	.byte	5,9,7,0,5,2
	.word	.L62
	.byte	3,55,1,5,17,9
	.half	.L265-.L62
	.byte	3,5,1,5,19,9
	.half	.L266-.L265
	.byte	3,2,1,5,17,9
	.half	.L396-.L266
	.byte	1,9
	.half	.L397-.L396
	.byte	3,2,1,9
	.half	.L398-.L397
	.byte	3,127,1,5,9,9
	.half	.L399-.L398
	.byte	3,4,1,5,5,9
	.half	.L400-.L399
	.byte	1,5,16,7,9
	.half	.L401-.L400
	.byte	3,2,1,5,5,9
	.half	.L2-.L401
	.byte	3,3,1,5,1,9
	.half	.L3-.L2
	.byte	3,1,1,7,9
	.half	.L120-.L3
	.byte	0,1,1
.L393:
	.sdecl	'.debug_ranges',debug,cluster('IfxCpu_acquireMutex')
	.sect	'.debug_ranges'
.L119:
	.word	-1,.L62,0,.L120-.L62,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCpu_releaseMutex')
	.sect	'.debug_info'
.L121:
	.word	239
	.half	3
	.word	.L122
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L124,.L123
	.byte	2
	.word	.L87
	.byte	3
	.byte	'IfxCpu_releaseMutex',0,1,212,1,6,1,1,1
	.word	.L72,.L214,.L71
	.byte	4
	.byte	'lock',0,1,212,1,44
	.word	.L209,.L215
	.byte	5
	.word	.L72,.L214
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCpu_releaseMutex')
	.sect	'.debug_abbrev'
.L122:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCpu_releaseMutex')
	.sect	'.debug_line'
.L123:
	.word	.L403-.L402
.L402:
	.half	3
	.word	.L405-.L404
.L404:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0,0,0,0,0
.L405:
	.byte	5,13,7,0,5,2
	.word	.L72
	.byte	3,214,1,1,5,11,9
	.half	.L406-.L72
	.byte	1,5,1,9
	.half	.L407-.L406
	.byte	3,1,1,7,9
	.half	.L125-.L407
	.byte	0,1,1
.L403:
	.sdecl	'.debug_ranges',debug,cluster('IfxCpu_releaseMutex')
	.sect	'.debug_ranges'
.L124:
	.word	-1,.L72,0,.L125-.L72,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCpu_resetSpinLock')
	.sect	'.debug_info'
.L126:
	.word	240
	.half	3
	.word	.L127
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L129,.L128
	.byte	2
	.word	.L87
	.byte	3
	.byte	'IfxCpu_resetSpinLock',0,1,219,1,6,1,1,1
	.word	.L74,.L216,.L73
	.byte	4
	.byte	'lock',0,1,219,1,44
	.word	.L217,.L218
	.byte	5
	.word	.L74,.L216
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCpu_resetSpinLock')
	.sect	'.debug_abbrev'
.L127:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCpu_resetSpinLock')
	.sect	'.debug_line'
.L128:
	.word	.L409-.L408
.L408:
	.half	3
	.word	.L411-.L410
.L410:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0,0,0,0,0
.L411:
	.byte	5,13,7,0,5,2
	.word	.L74
	.byte	3,221,1,1,5,11,9
	.half	.L412-.L74
	.byte	1,5,1,9
	.half	.L413-.L412
	.byte	3,1,1,7,9
	.half	.L130-.L413
	.byte	0,1,1
.L409:
	.sdecl	'.debug_ranges',debug,cluster('IfxCpu_resetSpinLock')
	.sect	'.debug_ranges'
.L129:
	.word	-1,.L74,0,.L130-.L74,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCpu_setSpinLock')
	.sect	'.debug_info'
.L131:
	.word	314
	.half	3
	.word	.L132
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L134,.L133
	.byte	2
	.word	.L87
	.byte	3
	.byte	'IfxCpu_setSpinLock',0,1,154,2,9
	.word	.L178
	.byte	1,1,1
	.word	.L80,.L219,.L79
	.byte	4
	.byte	'lock',0,1,154,2,45
	.word	.L217,.L220
	.byte	4
	.byte	'timeoutCount',0,1,154,2,58
	.word	.L176,.L221
	.byte	5
	.word	.L80,.L219
	.byte	6
	.byte	'retVal',0,1,156,2,21
	.word	.L178,.L222
	.byte	6
	.byte	'spinLockVal',0,1,157,2,21
	.word	.L223,.L224
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCpu_setSpinLock')
	.sect	'.debug_abbrev'
.L132:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCpu_setSpinLock')
	.sect	'.debug_line'
.L133:
	.word	.L415-.L414
.L414:
	.half	3
	.word	.L417-.L416
.L416:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0,0,0,0,0
.L417:
	.byte	5,9,7,0,5,2
	.word	.L80
	.byte	3,153,2,1,5,12,9
	.half	.L313-.L80
	.byte	3,5,1,5,23,9
	.half	.L46-.L313
	.byte	3,4,1,5,21,9
	.half	.L418-.L46
	.byte	1,9
	.half	.L419-.L418
	.byte	3,2,1,9
	.half	.L420-.L419
	.byte	3,127,1,5,13,9
	.half	.L421-.L420
	.byte	3,4,1,5,9,9
	.half	.L422-.L421
	.byte	1,5,20,7,9
	.half	.L423-.L422
	.byte	3,2,1,5,26,9
	.half	.L424-.L423
	.byte	1,5,25,9
	.half	.L47-.L424
	.byte	3,4,1,5,14,9
	.half	.L48-.L47
	.byte	3,2,1,5,49,7,9
	.half	.L425-.L48
	.byte	1,5,5,7,9
	.half	.L49-.L425
	.byte	3,2,1,5,1,9
	.half	.L50-.L49
	.byte	3,1,1,7,9
	.half	.L135-.L50
	.byte	0,1,1
.L415:
	.sdecl	'.debug_ranges',debug,cluster('IfxCpu_setSpinLock')
	.sect	'.debug_ranges'
.L134:
	.word	-1,.L80,0,.L135-.L80,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCpu_getRandomValue')
	.sect	'.debug_info'
.L136:
	.word	396
	.half	3
	.word	.L137
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L139,.L138
	.byte	2
	.word	.L87
	.byte	3
	.byte	'IfxCpu_getRandomValue',0,1,150,1,8
	.word	.L176
	.byte	1,1,1
	.word	.L68,.L225,.L67
	.byte	4
	.byte	'seed',0,1,150,1,38
	.word	.L226,.L227
	.byte	5
	.word	.L68,.L225
	.byte	6
	.byte	'x',0,1,162,1,12
	.word	.L176,.L228
	.byte	5
	.word	.L20,.L225
	.byte	6
	.byte	'a',0,1,170,1,12
	.word	.L176,.L229
	.byte	6
	.byte	'm',0,1,171,1,12
	.word	.L176,.L230
	.byte	6
	.byte	'result',0,1,172,1,12
	.word	.L176,.L231
	.byte	7
	.word	.L232,.L233,.L234
	.byte	8
	.word	.L235,.L236
	.byte	8
	.word	.L237,.L238
	.byte	8
	.word	.L239,.L240
	.byte	9
	.word	.L241,.L233,.L234
	.byte	6
	.byte	'result',0,2,249,2,9
	.word	.L176,.L242
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCpu_getRandomValue')
	.sect	'.debug_abbrev'
.L137:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17
	.byte	1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCpu_getRandomValue')
	.sect	'.debug_line'
.L138:
	.word	.L427-.L426
.L426:
	.half	3
	.word	.L429-.L428
.L428:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0,0,0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0,0
.L429:
	.byte	5,16,7,0,5,2
	.word	.L68
	.byte	3,161,1,1,5,5,9
	.half	.L277-.L68
	.byte	3,3,1,5,11,7,9
	.half	.L430-.L277
	.byte	3,2,1,5,16,9
	.half	.L20-.L430
	.byte	3,3,1,5,14,9
	.half	.L431-.L20
	.byte	3,1,1,4,2,5,5,9
	.half	.L233-.L431
	.byte	3,207,1,1,9
	.half	.L432-.L233
	.byte	3,11,1,4,1,5,12,9
	.half	.L21-.L432
	.byte	3,178,126,1,5,5,9
	.half	.L234-.L21
	.byte	3,2,1,5,1,9
	.half	.L22-.L234
	.byte	3,1,1,7,9
	.half	.L140-.L22
	.byte	0,1,1
.L427:
	.sdecl	'.debug_ranges',debug,cluster('IfxCpu_getRandomValue')
	.sect	'.debug_ranges'
.L139:
	.word	-1,.L68,0,.L140-.L68,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCpu_getRandomValueWithinRange')
	.sect	'.debug_info'
.L141:
	.word	342
	.half	3
	.word	.L142
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L144,.L143
	.byte	2
	.word	.L87
	.byte	3
	.byte	'IfxCpu_getRandomValueWithinRange',0,1,189,1,8
	.word	.L176
	.byte	1,1,1
	.word	.L70,.L243,.L69
	.byte	4
	.byte	'seed',0,1,189,1,49
	.word	.L226,.L244
	.byte	4
	.byte	'min',0,1,189,1,62
	.word	.L176,.L245
	.byte	4
	.byte	'max',0,1,189,1,74
	.word	.L176,.L246
	.byte	5
	.word	.L70,.L243
	.byte	6
	.byte	'new_value',0,1,191,1,12
	.word	.L176,.L247
	.byte	5
	.word	.L248,.L23
	.byte	6
	.byte	'swap',0,1,196,1,18
	.word	.L249,.L250
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCpu_getRandomValueWithinRange')
	.sect	'.debug_abbrev'
.L142:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCpu_getRandomValueWithinRange')
	.sect	'.debug_line'
.L143:
	.word	.L434-.L433
.L433:
	.half	3
	.word	.L436-.L435
.L435:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0,0,0,0,0
.L436:
	.byte	5,8,7,0,5,2
	.word	.L70
	.byte	3,188,1,1,5,46,9
	.half	.L282-.L70
	.byte	3,2,1,5,5,9
	.half	.L280-.L282
	.byte	3,3,1,5,23,7,9
	.half	.L248-.L280
	.byte	3,2,1,5,13,9
	.half	.L285-.L248
	.byte	3,1,1,9
	.half	.L437-.L285
	.byte	3,1,1,5,9,9
	.half	.L23-.L437
	.byte	3,4,1,5,28,7,9
	.half	.L438-.L23
	.byte	1,5,9,7,9
	.half	.L439-.L438
	.byte	3,2,1,5,30,9
	.half	.L24-.L439
	.byte	3,4,1,5,36,9
	.half	.L283-.L24
	.byte	1,5,23,9
	.half	.L440-.L283
	.byte	1,5,42,9
	.half	.L441-.L440
	.byte	1,5,5,9
	.half	.L284-.L441
	.byte	1,5,1,9
	.half	.L26-.L284
	.byte	3,1,1,7,9
	.half	.L145-.L26
	.byte	0,1,1
.L434:
	.sdecl	'.debug_ranges',debug,cluster('IfxCpu_getRandomValueWithinRange')
	.sect	'.debug_ranges'
.L144:
	.word	-1,.L70,0,.L145-.L70,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCpu_waitEvent')
	.sect	'.debug_info'
.L146:
	.word	387
	.half	3
	.word	.L147
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L149,.L148
	.byte	2
	.word	.L87
	.byte	3
	.byte	'IfxCpu_waitEvent',0,1,200,2,9
	.word	.L178
	.byte	1,1,1
	.word	.L84,.L251,.L83
	.byte	4
	.byte	'event',0,1,200,2,44
	.word	.L252,.L253
	.byte	4
	.byte	'timeoutMilliSec',0,1,200,2,58
	.word	.L176,.L254
	.byte	5
	.word	.L84,.L251
	.byte	6
	.byte	'sync',0,1,202,2,22
	.word	.L255,.L256
	.byte	6
	.byte	'errorcnt',0,1,204,2,22
	.word	.L178,.L257
	.byte	6
	.byte	'stmCount',0,1,206,2,22
	.word	.L176,.L258
	.byte	6
	.byte	'stmCountBegin',0,1,207,2,22
	.word	.L176,.L259
	.byte	7
	.word	.L260,.L261,.L55
	.byte	8
	.word	.L262,.L261,.L55
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCpu_waitEvent')
	.sect	'.debug_abbrev'
.L147:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCpu_waitEvent')
	.sect	'.debug_line'
.L148:
	.word	.L443-.L442
.L442:
	.half	3
	.word	.L445-.L444
.L444:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std',0,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0,0,0,0
	.byte	'IfxScuCcu.h',0,1,0,0,0
.L445:
	.byte	5,9,7,0,5,2
	.word	.L84
	.byte	3,199,2,1,5,57,9
	.half	.L323-.L84
	.byte	3,2,1,5,36,9
	.half	.L54-.L323
	.byte	1,9
	.half	.L328-.L54
	.byte	3,2,1,4,2,5,40,9
	.half	.L261-.L328
	.byte	3,152,6,1,5,58,9
	.half	.L322-.L261
	.byte	1,5,43,9
	.half	.L446-.L322
	.byte	1,5,5,9
	.half	.L447-.L446
	.byte	1,4,1,5,78,9
	.half	.L55-.L447
	.byte	3,234,121,1,5,76,9
	.half	.L448-.L55
	.byte	1,5,86,9
	.half	.L449-.L448
	.byte	1,5,84,9
	.half	.L450-.L449
	.byte	1,5,38,9
	.half	.L451-.L450
	.byte	1,5,47,9
	.half	.L329-.L451
	.byte	3,1,1,5,72,9
	.half	.L330-.L329
	.byte	3,2,1,5,14,9
	.half	.L57-.L330
	.byte	3,2,1,5,31,9
	.half	.L452-.L57
	.byte	3,2,1,5,34,9
	.half	.L453-.L452
	.byte	1,5,9,9
	.half	.L454-.L453
	.byte	1,5,22,7,9
	.half	.L455-.L454
	.byte	3,2,1,5,13,9
	.half	.L456-.L455
	.byte	3,1,1,9
	.half	.L56-.L456
	.byte	3,121,1,5,19,9
	.half	.L457-.L56
	.byte	1,5,72,9
	.half	.L458-.L457
	.byte	1,5,5,7,9
	.half	.L59-.L458
	.byte	3,18,1,5,1,9
	.half	.L60-.L59
	.byte	3,1,1,7,9
	.half	.L150-.L60
	.byte	0,1,1
.L443:
	.sdecl	'.debug_ranges',debug,cluster('IfxCpu_waitEvent')
	.sect	'.debug_ranges'
.L149:
	.word	-1,.L84,0,.L150-.L84,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCpu_emitEvent')
	.sect	'.debug_info'
.L151:
	.word	237
	.half	3
	.word	.L152
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Hello_world\\TC264\\A\\workspace\\Sig0809\\Debug\\',0,12,1
	.word	.L154,.L153
	.byte	2
	.word	.L87
	.byte	3
	.byte	'IfxCpu_emitEvent',0,1,231,2,6,1,1,1
	.word	.L86,.L263,.L85
	.byte	4
	.byte	'event',0,1,231,2,41
	.word	.L252,.L264
	.byte	5
	.word	.L86,.L263
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCpu_emitEvent')
	.sect	'.debug_abbrev'
.L152:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCpu_emitEvent')
	.sect	'.debug_line'
.L153:
	.word	.L460-.L459
.L459:
	.half	3
	.word	.L462-.L461
.L461:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0,0,0,0,0
.L462:
	.byte	5,5,7,0,5,2
	.word	.L86
	.byte	3,232,2,1,5,1,9
	.half	.L463-.L86
	.byte	3,1,1,7,9
	.half	.L155-.L463
	.byte	0,1,1
.L460:
	.sdecl	'.debug_ranges',debug,cluster('IfxCpu_emitEvent')
	.sect	'.debug_ranges'
.L154:
	.word	-1,.L86,0,.L155-.L86,0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCpu_acquireMutex')
	.sect	'.debug_loc'
.L61:
	.word	-1,.L62,0,.L265-.L62
	.half	2
	.byte	138,0
	.word	.L265-.L62,.L208-.L62
	.half	2
	.byte	138,8
	.word	.L208-.L62,.L208-.L62
	.half	2
	.byte	138,0
	.word	0,0
.L210:
	.word	-1,.L62,0,.L208-.L62
	.half	1
	.byte	100
	.word	0,0
.L211:
	.word	-1,.L62,.L266-.L62,.L208-.L62
	.half	1
	.byte	82
	.word	0,0
.L213:
	.word	-1,.L62,0,.L208-.L62
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCpu_emitEvent')
	.sect	'.debug_loc'
.L85:
	.word	-1,.L86,0,.L263-.L86
	.half	2
	.byte	138,0
	.word	0,0
.L264:
	.word	-1,.L86,0,.L263-.L86
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCpu_getCoreMode')
	.sect	'.debug_loc'
.L63:
	.word	-1,.L64,0,.L157-.L64
	.half	2
	.byte	138,0
	.word	0,0
.L159:
	.word	-1,.L64,0,.L267-.L64
	.half	1
	.byte	100
	.word	.L268-.L64,.L269-.L64
	.half	1
	.byte	111
	.word	.L9-.L64,.L8-.L64
	.half	1
	.byte	111
	.word	0,0
.L160:
	.word	-1,.L64,.L166-.L64,.L157-.L64
	.half	5
	.byte	144,32,157,32,0
	.word	.L270-.L64,.L157-.L64
	.half	1
	.byte	82
	.word	0,0
.L162:
	.word	-1,.L64,.L273-.L64,.L5-.L64
	.half	1
	.byte	81
	.word	.L6-.L64,.L157-.L64
	.half	1
	.byte	81
	.word	0,0
.L164:
	.word	-1,.L64,.L267-.L64,.L270-.L64
	.half	1
	.byte	82
	.word	0,0
.L172:
	.word	-1,.L64,.L274-.L64,.L9-.L64
	.half	1
	.byte	111
	.word	0,0
.L169:
	.word	-1,.L64,.L271-.L64,.L272-.L64
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCpu_getIndex')
	.sect	'.debug_loc'
.L65:
	.word	-1,.L66,0,.L173-.L66
	.half	2
	.byte	138,0
	.word	0,0
.L174:
	.word	-1,.L66,0,.L173-.L66
	.half	1
	.byte	100
	.word	0,0
.L177:
	.word	-1,.L66,.L276-.L66,.L173-.L66
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L175:
	.word	-1,.L66,.L275-.L66,.L173-.L66
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCpu_getRandomValue')
	.sect	'.debug_loc'
.L67:
	.word	-1,.L68,0,.L225-.L68
	.half	2
	.byte	138,0
	.word	0,0
.L229:
	.word	-1,.L68,.L278-.L68,.L225-.L68
	.half	1
	.byte	81
	.word	0,0
.L236:
	.word	0,0
.L230:
	.word	-1,.L68,.L233-.L68,.L279-.L68
	.half	1
	.byte	82
	.word	0,0
.L240:
	.word	0,0
.L231:
	.word	0,0
.L242:
	.word	-1,.L68,.L279-.L68,.L225-.L68
	.half	1
	.byte	82
	.word	0,0
.L227:
	.word	-1,.L68,0,.L225-.L68
	.half	1
	.byte	100
	.word	0,0
.L228:
	.word	-1,.L68,.L277-.L68,.L225-.L68
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L238:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCpu_getRandomValueWithinRange')
	.sect	'.debug_loc'
.L69:
	.word	-1,.L70,0,.L243-.L70
	.half	2
	.byte	138,0
	.word	0,0
.L246:
	.word	-1,.L70,0,.L280-.L70
	.half	1
	.byte	85
	.word	.L282-.L70,.L283-.L70
	.half	1
	.byte	95
	.word	0,0
.L245:
	.word	-1,.L70,0,.L280-.L70
	.half	1
	.byte	84
	.word	.L281-.L70,.L243-.L70
	.half	1
	.byte	88
	.word	0,0
.L247:
	.word	-1,.L70,.L280-.L70,.L284-.L70
	.half	1
	.byte	82
	.word	0,0
.L244:
	.word	-1,.L70,0,.L280-.L70
	.half	1
	.byte	100
	.word	0,0
.L250:
	.word	-1,.L70,.L285-.L70,.L23-.L70
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCpu_releaseMutex')
	.sect	'.debug_loc'
.L71:
	.word	-1,.L72,0,.L214-.L72
	.half	2
	.byte	138,0
	.word	0,0
.L215:
	.word	-1,.L72,0,.L214-.L72
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCpu_resetSpinLock')
	.sect	'.debug_loc'
.L73:
	.word	-1,.L74,0,.L216-.L74
	.half	2
	.byte	138,0
	.word	0,0
.L218:
	.word	-1,.L74,0,.L216-.L74
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCpu_setCoreMode')
	.sect	'.debug_loc'
.L75:
	.word	-1,.L76,0,.L179-.L76
	.half	2
	.byte	138,0
	.word	0,0
.L180:
	.word	-1,.L76,0,.L286-.L76
	.half	1
	.byte	100
	.word	.L287-.L76,.L288-.L76
	.half	1
	.byte	111
	.word	.L300-.L76,.L301-.L76
	.half	1
	.byte	100
	.word	0,0
.L191:
	.word	-1,.L76,.L304-.L76,.L305-.L76
	.half	1
	.byte	82
	.word	.L306-.L76,.L34-.L76
	.half	1
	.byte	95
	.word	.L305-.L76,.L307-.L76
	.half	1
	.byte	84
	.word	.L308-.L76,.L34-.L76
	.half	1
	.byte	84
	.word	0,0
.L184:
	.word	-1,.L76,.L286-.L76,.L291-.L76
	.half	1
	.byte	82
	.word	.L292-.L76,.L179-.L76
	.half	1
	.byte	88
	.word	.L36-.L76,.L304-.L76
	.half	1
	.byte	82
	.word	0,0
.L181:
	.word	-1,.L76,0,.L286-.L76
	.half	1
	.byte	84
	.word	.L289-.L76,.L290-.L76
	.half	1
	.byte	95
	.word	0,0
.L186:
	.word	-1,.L76,.L290-.L76,.L295-.L76
	.half	1
	.byte	95
	.word	0,0
.L182:
	.word	-1,.L76,.L294-.L76,.L32-.L76
	.half	1
	.byte	90
	.word	.L33-.L76,.L179-.L76
	.half	1
	.byte	90
	.word	0,0
.L183:
	.word	-1,.L76,.L293-.L76,.L30-.L76
	.half	1
	.byte	89
	.word	.L31-.L76,.L179-.L76
	.half	1
	.byte	89
	.word	0,0
.L190:
	.word	-1,.L76,.L291-.L76,.L296-.L76
	.half	1
	.byte	82
	.word	.L297-.L76,.L298-.L76
	.half	1
	.byte	95
	.word	.L296-.L76,.L299-.L76
	.half	1
	.byte	84
	.word	.L302-.L76,.L303-.L76
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCpu_setProgramCounter')
	.sect	'.debug_loc'
.L77:
	.word	-1,.L78,0,.L192-.L78
	.half	2
	.byte	138,0
	.word	0,0
.L193:
	.word	-1,.L78,0,.L192-.L78
	.half	1
	.byte	100
	.word	0,0
.L201:
	.word	0,0
.L203:
	.word	-1,.L78,.L312-.L78,.L40-.L78
	.half	1
	.byte	111
	.word	.L41-.L78,.L192-.L78
	.half	1
	.byte	111
	.word	0,0
.L194:
	.word	-1,.L78,0,.L309-.L78
	.half	1
	.byte	84
	.word	0,0
.L197:
	.word	-1,.L78,.L310-.L78,.L311-.L78
	.half	1
	.byte	95
	.word	0,0
.L195:
	.word	-1,.L78,.L196-.L78,.L192-.L78
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCpu_setSpinLock')
	.sect	'.debug_loc'
.L79:
	.word	-1,.L80,0,.L313-.L80
	.half	2
	.byte	138,0
	.word	.L313-.L80,.L219-.L80
	.half	2
	.byte	138,8
	.word	.L219-.L80,.L219-.L80
	.half	2
	.byte	138,0
	.word	0,0
.L220:
	.word	-1,.L80,0,.L219-.L80
	.half	1
	.byte	100
	.word	0,0
.L222:
	.word	-1,.L80,.L46-.L80,.L219-.L80
	.half	1
	.byte	82
	.word	0,0
.L224:
	.word	-1,.L80,0,.L219-.L80
	.half	2
	.byte	145,120
	.word	0,0
.L221:
	.word	-1,.L80,0,.L219-.L80
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCpu_startCore')
	.sect	'.debug_loc'
.L81:
	.word	-1,.L82,0,.L204-.L82
	.half	2
	.byte	138,0
	.word	0,0
.L205:
	.word	-1,.L82,0,.L314-.L82
	.half	1
	.byte	100
	.word	.L315-.L82,.L204-.L82
	.half	1
	.byte	111
	.word	.L317-.L82,.L318-.L82
	.half	1
	.byte	100
	.word	.L319-.L82,.L320-.L82
	.half	1
	.byte	100
	.word	0,0
.L206:
	.word	-1,.L82,0,.L314-.L82
	.half	1
	.byte	84
	.word	0,0
.L207:
	.word	-1,.L82,.L316-.L82,.L204-.L82
	.half	1
	.byte	95
	.word	.L321-.L82,.L204-.L82
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCpu_waitEvent')
	.sect	'.debug_loc'
.L83:
	.word	-1,.L84,0,.L251-.L84
	.half	2
	.byte	138,0
	.word	0,0
.L257:
	.word	-1,.L84,.L261-.L84,.L251-.L84
	.half	1
	.byte	89
	.word	.L331-.L84,.L251-.L84
	.half	1
	.byte	82
	.word	0,0
.L253:
	.word	-1,.L84,0,.L322-.L84
	.half	1
	.byte	100
	.word	.L324-.L84,.L325-.L84
	.half	1
	.byte	95
	.word	.L326-.L84,.L327-.L84
	.half	1
	.byte	95
	.word	0,0
.L258:
	.word	-1,.L84,.L329-.L84,.L251-.L84
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L259:
	.word	-1,.L84,.L330-.L84,.L251-.L84
	.half	1
	.byte	81
	.word	0,0
.L256:
	.word	-1,.L84,.L328-.L84,.L251-.L84
	.half	1
	.byte	111
	.word	0,0
.L254:
	.word	-1,.L84,0,.L322-.L84
	.half	1
	.byte	84
	.word	.L323-.L84,.L251-.L84
	.half	1
	.byte	88
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L464:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('IfxCpu_acquireMutex')
	.sect	'.debug_frame'
	.word	44
	.word	.L464,.L62,.L208-.L62
	.byte	8,18,8,19,8,21,8,22,8,23,4
	.word	(.L265-.L62)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L208-.L265)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('IfxCpu_getCoreMode')
	.sect	'.debug_frame'
	.word	12
	.word	.L464,.L64,.L157-.L64
	.sdecl	'.debug_frame',debug,cluster('IfxCpu_getIndex')
	.sect	'.debug_frame'
	.word	24
	.word	.L464,.L66,.L173-.L66
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCpu_getRandomValue')
	.sect	'.debug_frame'
	.word	24
	.word	.L464,.L68,.L225-.L68
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCpu_getRandomValueWithinRange')
	.sect	'.debug_frame'
	.word	12
	.word	.L464,.L70,.L243-.L70
	.sdecl	'.debug_frame',debug,cluster('IfxCpu_releaseMutex')
	.sect	'.debug_frame'
	.word	24
	.word	.L464,.L72,.L214-.L72
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCpu_resetSpinLock')
	.sect	'.debug_frame'
	.word	24
	.word	.L464,.L74,.L216-.L74
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCpu_setCoreMode')
	.sect	'.debug_frame'
	.word	12
	.word	.L464,.L76,.L179-.L76
	.sdecl	'.debug_frame',debug,cluster('IfxCpu_setProgramCounter')
	.sect	'.debug_frame'
	.word	24
	.word	.L464,.L78,.L192-.L78
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCpu_setSpinLock')
	.sect	'.debug_frame'
	.word	44
	.word	.L464,.L80,.L219-.L80
	.byte	8,18,8,19,8,21,8,22,8,23,4
	.word	(.L313-.L80)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L219-.L313)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('IfxCpu_startCore')
	.sect	'.debug_frame'
	.word	12
	.word	.L464,.L82,.L204-.L82
	.sdecl	'.debug_frame',debug,cluster('IfxCpu_waitEvent')
	.sect	'.debug_frame'
	.word	12
	.word	.L464,.L84,.L251-.L84
	.sdecl	'.debug_frame',debug,cluster('IfxCpu_emitEvent')
	.sect	'.debug_frame'
	.word	24
	.word	.L464,.L86,.L263-.L86
	.byte	8,18,8,19,8,21,8,22,8,23,0,0

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   363           * the subtraction result will be as expected, as long as both are unsigned 32 bits
	; Module end
